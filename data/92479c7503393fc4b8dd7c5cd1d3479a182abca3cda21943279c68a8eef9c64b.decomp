sub_100aa2a0
lea esp [ esp + 0x8 ]
je rwxdata
bts bx 0x8
mov bx [ esi ]
cmp bh 0x11
pushad
mov [ esp + 0x8 ] 0xdb
and ebx 0xfff
test eax ebx
stc
call sub_100acbb4
push 0x36
mov eax 0xcd7610aa
stosd [ edi ]
and eax 0xdcfea472
mov cl 0x6f
0x2161749e 0xaa1e
push 0x3a382c39
pushad
push 0x1afb51c8
lea esp [ esp + 0x28 ]
jmp rwxdata
cmc
add esi 0x2
pushfd
push [ esp ]
dec ecx
pushfd
pushfd
mov [ esp ] 0xdb9b
mov [ esp ] 0x62
lea esp [ esp + 0x10 ]
jne rwxdata
bsr bx bx
setg bh
mov bx [ esi ]
call sub_100ebb53
push esi
or al dh
pushfd
sar [ edx - 0x33 ] 0x1
pop cx
or eax 0x3e0cbfe1
mov ch 0x5f
dec ecx
or [ eax ] ebx
retn 0x9ac4
sbb cx 0x3808
mov cx di
xor cx 0x7716
movsx cx al
mov ecx [ ebp - 0x4 ]
stc
pushad
cmp [ ebp + 0x14 ] ecx
jmp rwxdata
pushad
lea esp [ esp + 0x40 ]
ja rwxdata
rcl ch cl
or cx cx
lea ecx [ ebp + 0x4cb2e7f5 ]
mov ecx [ esi + 0x4 ]
test edx ecx
cmp ecx 0x666e62d7
cmp bx 0x88d5
or ecx ecx
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
pushfd
bswap si
xchg si di
call sub_1013585c
adc dh dl
shl di cl
add [ ebp - 0x4 ] ecx
bts di 0x6
sbb di sp
cmp ah bh
ror bh 0x6
sub ecx 0x8
shl edi cl
rol bl cl
not bl
shr ecx 0x1
inc bl
mov edi [ esi ]
xor bh 0xbd
add edi [ ebp + 0x10 ]
cmp cl dl
btc bx bp
sub bh 0x7e
btc bx 0x2
add esi 0x8
sub_100aa3ac
xchg [ esp + 0x28 ] eax
setne ah
not ah
setbe ah
cwde
mov [ esp + 0x24 ] 0xb
call sub_100afadd
stc
add al 0x5c
jmp rwxdata
mov [ esp + 0x4 ] 0xe2
bt bx 0x4
jmp rwxdata
neg al
pushfd
test dh 0x8d
cmp al al
sub al 0xf
call sub_100aa514
sub_100aa7dd
pushfd
stc
test edx edx
push [ esp ]
lea esp [ esp + 0x14 ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
bsf cx sp
add edx eax
cmp sp 0x41cb
clc
mov ecx [ esi + 0x7c ]
test ax bx
pushfd
cmp bl ch
add ecx edx
pushad
mov [ esp ] 0x58
mov [ ebp - 0x10 ] ecx
neg cx
btc cx 0xb
mov ecx [ ebp + 0xc ]
pushfd
call sub_100afaf8
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100ab1e3
pushfd
lea esp [ esp + 0xc ]
jb rwxdata
test ah 0xe7
or al al
push edx
lea esp [ esp + 0x4 ]
je rwxdata
pushad
bt cx sp
cmp ah 0x5a
call sub_100aa83e
jmp rwxdata
push eax
pushfd
push 0x6f0129db
cmp al ah
pushad
pushfd
call sub_100ab54d
sub ah dl
push eax
adc dl [ edi - 0xbc328a ]
int 0xc9
lea esp [ eax - 0x1e2a292 ]
or ah ah
pushfd
jmp rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
pushfd
push [ esp + 0x4 ]
jne rwxdata
call sub_100abff3
pushad
call sub_100f576a
retn 0x8
sub_100ab2d5
pushfd
bt ebx esi
stc
cmp ebx 0x1
pushfd
pushfd
mov [ esp + 0x8 ] di
lea esp [ esp + 0x30 ]
je rwxdata
bsr bx bp
not bl
adc bl al
push esp
mov bx [ esi ]
jmp sub_100ab81d
call sub_1013a1db
add [ eax ] al
inc ebx
jb rwxdata
jecxz __import_name_7(KERNEL32:LocalFree)
popad
je rwxdata
dec esp
outsd
arpl [ ecx + 0x6c ] sp
inc esi
jb rwxdata
jpe rwxdata
int 0x76
sub ah al
movsd [ edi ] [ esi ]
push eax
popad
insb
je rwxdata
pop esi
mov [ 0x2ec35d5d ] al
0xefc575a7 0x40ad
add [ gs : edi ] cl
jbe rwxdata
mov esi 0xbe0f66f3
int1
mov esi eax
pop eax
push edx
mov [ esp ] ebx
not eax
setbe ah
bswap ax
movzx ax al
lea eax [ LocalFree@IAT ]
call sub_100ad7dc
jmp sub_100f5565
add [ gs : edi ] cl
push 0xcef00e32
mov bl 0x6d
cmp al 0x56
mov al 0x9e
cmpsd [ esi ] [ edi ]
push ebp
dec esp
or ch ah
test eax 0xf0487595
jge rwxdata
add al ch
sub edi edi
stosb [ edi ]
add ebp ecx
dec esi
loopne rwxdata
add ecx [ esi + 0x29 ]
leave
mov [ esp ] bh
call sub_100aa95f
0xa25e649e 0x5d5d
pop ebx
xchg [ esi + 0x11 ] bh
aas
mov eax [ 0x44094779 ]
rcr [ ebp + 0x1aacbb5 ] 0x1
int 0x4e
stc
jns rwxdata
sub_100ab330
movsx esi bl
movsx si cl
mov esi eax
pop eax
push edx
mov [ esp ] ebx
not eax
setbe ah
bswap ax
movzx ax al
lea eax [ LocalFree@IAT ]
call sub_100ad7dc
jmp sub_100f5565
sub_100ab41c
movsx eax dl
mov [ esp ] ebx
bswap ax
jne rwxdata
pushfd
pushad
movsx ax al
call sub_100af811
mov ch [ eax ]
bswap ax
setae al
lea eax [ rwxdata ]
jmp sub_100add25
sub_100ab54d
mov [ esp ] dl
lea esp [ esp + 0x34 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
jne rwxdata
push esp
jmp rwxdata
pushad
call sub_100f576a
retn 0x8
inc esi
jmp rwxdata
inc edi
pushad
pushad
pushfd
pushfd
lea esp [ esp + 0x4c ]
jmp sub_100e7ab5
sub_100ab596
sub esp 0xffffffb4
js rwxdata
pushfd
mov [ esp ] 0x76
cmp bl bl
pushad
neg al
pushad
rol al 0x6
jmp rwxdata
neg al
call sub_100eded9
stc
add al 0x5c
jmp rwxdata
mov [ esp + 0x4 ] 0xe2
bt bx 0x4
jmp rwxdata
neg al
pushfd
test dh 0x8d
cmp al al
sub al 0xf
call sub_100aa514
sub_100ab81d
pushfd
pushfd
pushfd
and ebx 0xfff
pushad
add [ ebx + edi ] ax
mov [ esp ] ch
lea esp [ esp + 0x30 ]
jmp rwxdata
cmc
add esi 0x2
pushfd
push [ esp ]
dec ecx
pushfd
pushfd
mov [ esp ] 0xdb9b
mov [ esp ] 0x62
lea esp [ esp + 0x10 ]
jne rwxdata
bsr bx bx
setg bh
mov bx [ esi ]
call sub_100ebb53
push esi
or al dh
pushfd
sar [ edx - 0x33 ] 0x1
pop cx
or eax 0x3e0cbfe1
mov ch 0x5f
dec ecx
or [ eax ] ebx
retn 0x9ac4
sbb cx 0x3808
mov cx di
xor cx 0x7716
movsx cx al
mov ecx [ ebp - 0x4 ]
stc
pushad
cmp [ ebp + 0x14 ] ecx
jmp rwxdata
pushad
lea esp [ esp + 0x40 ]
ja rwxdata
rcl ch cl
or cx cx
lea ecx [ ebp + 0x4cb2e7f5 ]
mov ecx [ esi + 0x4 ]
test edx ecx
cmp ecx 0x666e62d7
cmp bx 0x88d5
or ecx ecx
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
pushfd
bswap si
xchg si di
call sub_1013585c
adc dh dl
shl di cl
add [ ebp - 0x4 ] ecx
bts di 0x6
sbb di sp
cmp ah bh
ror bh 0x6
sub ecx 0x8
shl edi cl
rol bl cl
not bl
shr ecx 0x1
inc bl
mov edi [ esi ]
xor bh 0xbd
add edi [ ebp + 0x10 ]
cmp cl dl
btc bx bp
sub bh 0x7e
btc bx 0x2
add esi 0x8
sub_100abaee
mov [ esp + 0x24 ] 0x5beb9aee
pushad
jmp rwxdata
mov [ esp + 0x40 ] 0xe83a25fe
mov [ esp + 0x14 ] 0x1bf0
push ebp
mov [ esp + 0x4 ] cx
lea esp [ esp + 0x44 ]
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp ] edx
pushad
pushad
pushfd
jmp rwxdata
pushfd
pop [ esp + 0x40 ]
jmp rwxdata
pushfd
jmp rwxdata
lea esp [ esp + 0x44 ]
push esp
pushad
call sub_1013c932
sub_100abb07
push 0xa71be80b
push ebp
pushfd
mov esp ebp
call sub_10139f9a
lea esp [ esp + 0x34 ]
ja rwxdata
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
push ebp
jmp rwxdata
lea esp [ esp + 0x28 ]
jne rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
call sub_100ecce8
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

add al ch
adc ch dl
retn 0x43cc
xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100abd7d
lea esp [ esp + 0x40 ]
jne rwxdata
pushad
shl al cl
mov al [ ecx ]
push ecx
pushfd
jmp sub_1013af51
pushfd
call sub_101369fc
push ebp
push ebx
inc ebp
push edx
xor esi [ edx ]
insb
insb
add [ eax - 0x1376dbdc ] cl
int3
jpe rwxdata
sahf
in eax 0x99
jns rwxdata
call [ ebp + edi * 4 + 0xb ]
push 0x2f317890
push edx
pop es
fsub [ eax - 0x2cda990 ]
scasd [ edi ]
0xd1ca022e 0x898d
dec ebx
push esp
adc ch bh
mov bh 0x89
adc [ esi + 0x43 ] 0x7
fisttp [ cs : ecx - 0x36988c45 ]
xchg [ eax - 0x1974baca ] esp
dec esi
add cl [ ebx ]
pop edi
and [ eax - 0xf ] 0xd8d1f51b
xchg esp eax
dec si
in al 0xa4
hlt
dec edx
push 0x11
int 0xb5
std
ja rwxdata
dec ecx
and bh [ eax ]
jmp rwxdata
not bp
call sub_100aa4ee
sbb al 0xa4
dec edx
je rwxdata
and al 0x7a
adc eax 0x5d9c0c3b
imul edx [ eax + ebx * 8 + 0xd ] 0xb
salc
loop rwxdata
stc
mov ebx 0xd282665
aas
std
and al 0xc4
int 0x82
push esi
inc ebx
pop es
jns rwxdata
push ebx
sbb edi ebx
jle rwxdata
into
inc esp
jmp rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
shld si ax cl
sub dx 0x511b
mov esi [ eax + 0x3c ]
shl dl 0x4
pushfd
add edx 0x4bd5ab88
add esi eax
shr dx cl
call sub_100f20d1
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100ac682
lea esp [ esp + 0x24 ]
jb rwxdata
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
cmp ch 0x36
pushad
bt bp dx
stc
cmp eax [ ebp - 0x10 ]
push ebx
push 0xd269ae45
lea esp [ esp + 0x28 ]
jae rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
ror di 0xd
bswap cx
clc
shl bh cl
mov ebx eax
cmp bh dh
mov edi eax
btr ecx 0x4
rcr cl cl
bt sp sp
mov ecx 0x104
cmp ax dx
clc
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
cmp cx sp
sub al al
jmp rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
cmp ah 0x91
clc
bt sp 0xf
[ edi ]
push esp
push [ esp ]
pushad
call sub_100ad1ac
inc edx
sbb [ esi + ecx * 8 - 0x78328dd4 ] dl
inc ebx
add eax 0xb7cfeb0d
das
out dx eax
fucom st2
test al 0x9f
inc ebx
or eax 0x5987bc1a
inc ebx
adc eax 0x377b60a
mov edi 0xfb229965
adc [ ecx ] esi
[ edi ]
sahf
mov cl 0x4d
dec esp
int3
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100ac89b
pushfd
jmp rwxdata
lea esp [ esp + 0x8 ]
jne rwxdata
call sub_100f74cd
call sub_101345ea
inc ecx
push 0x7dfecb33
inc ecx
cmp di 0x22dc
sbb bl 0x23
pushad
adc bl bl
xchg ebp eax
sbb ah 0xf5
aam 0x23
shr eax cl
mov eax ebp
ror bl 0x2
not bl
and bl ch
mov bl 0x1
test al ch
mov [ esp ] bp
mov [ esp + 0x28 ] esi
ror si cl
mov si cx
rcl si 0x4
movzx si cl
mov esi edi
cmc
push 0x8390ce05
stc
test di 0xd5ef
sub esi eax
mov [ esp + 0x8 ] di
pushfd
[ edi ] [ esi ]
lea esp [ esp + 0x30 ]
ja rwxdata
call sub_100ed229
bswap si
push 0x9f174955
mov esi [ esp + 0x4 ]
mov [ esp ] 0x68
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
call sub_100ec890
sub_100acbb4
push ebp
add [ ebx + edi ] edx
lea esp [ esp + 0x28 ]
cmc
add esi 0x2
pushfd
push [ esp ]
dec ecx
pushfd
pushfd
mov [ esp ] 0xdb9b
mov [ esp ] 0x62
lea esp [ esp + 0x10 ]
jne rwxdata
bsr bx bx
setg bh
mov bx [ esi ]
call sub_100ebb53
push esi
or al dh
pushfd
sar [ edx - 0x33 ] 0x1
pop cx
or eax 0x3e0cbfe1
mov ch 0x5f
dec ecx
or [ eax ] ebx
retn 0x9ac4
sbb cx 0x3808
mov cx di
xor cx 0x7716
movsx cx al
mov ecx [ ebp - 0x4 ]
stc
pushad
cmp [ ebp + 0x14 ] ecx
jmp rwxdata
pushad
lea esp [ esp + 0x40 ]
ja rwxdata
rcl ch cl
or cx cx
lea ecx [ ebp + 0x4cb2e7f5 ]
mov ecx [ esi + 0x4 ]
test edx ecx
cmp ecx 0x666e62d7
cmp bx 0x88d5
or ecx ecx
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
pushfd
bswap si
xchg si di
call sub_1013585c
adc dh dl
shl di cl
add [ ebp - 0x4 ] ecx
bts di 0x6
sbb di sp
cmp ah bh
ror bh 0x6
sub ecx 0x8
shl edi cl
rol bl cl
not bl
shr ecx 0x1
inc bl
mov edi [ esi ]
xor bh 0xbd
add edi [ ebp + 0x10 ]
cmp cl dl
btc bx bp
sub bh 0x7e
btc bx 0x2
add esi 0x8
sub_100ad1ac
lea esp [ esp + 0x2c ]
jne rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
shld si ax 0xc
mov ecx edi
shl si 0x5
ror si cl
sub ecx ebx
bsr esi ebp
test si si
mov esi esp
call sub_101113f7
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100ad811
stc
sub al 0xc2
cmc
cmp cl 0xd4
jmp rwxdata
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
jae rwxdata
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
push ebp
jmp rwxdata
lea esp [ esp + 0x28 ]
jne rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
call sub_100ecce8
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

add al ch
adc ch dl
retn 0x43cc
xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100ada26
pushfd
test dh 0x43
cmp eax edx
pushad
lea esp [ esp + 0x28 ]
jb rwxdata
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
cmc
cmp eax [ ebp - 0x10 ]
push ebp
lea esp [ esp + 0x4 ]
jae rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
not bl
sbb bx 0x8a1b
shld ebx ecx 0x14
mov ebx eax
neg di
ror ch cl
mov edi eax
adc cl 0xec
inc cl
bsr cx bx
mov ecx 0x104
push esp
mov [ esp ] 0x24
xor al al
mov [ esp ] si
[ edi ]
call sub_100ae042
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100ada7a
jmp rwxdata
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100add3f
ja rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0x4
mov esp esi
push 0x7ffff56e
mov [ esp ] 0x23
lea esp [ esp + 0x4 ]
jmp rwxdata
pushfd
imul edx edx 0xa
pushad
add edx eax
pushfd
lea esp [ esp + 0x28 ]
jmp sub_100aa836
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100add59
push [ esp ]
cmp eax 0x7d00
push [ esp ]
lea esp [ esp + 0xc ]
jae rwxdata
mov bl dl
inc ecx
pushfd
mov [ esp ] sp
clc
cmp ah 0x5
push 0x1d3e486c
mov [ esp + 0x4 ] 0xc2
jmp rwxdata
pushfd
call sub_100f0dae
lea esp [ esp + 0x8 ]
jae rwxdata
not bl
jmp rwxdata
jmp rwxdata
cmp eax 0x7f
pushfd
call sub_100ee95e
sub_100ae042
pushad
lea esp [ esp + 0x28 ]
jne rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
xchg si cx
and si 0xe550
mov ecx edi
sub si 0x1ea8
push 0xf387e409
sub ecx ebx
bsr si ax
and si 0xa1e4
lea esi [ esp + 0x4 ]
stc
mov [ esp ] al
sub edi 0x4
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
clc
cmp di di
stc
push [ edi ]
pop [ esp ]
bt ebp 0x4
stc
test eax eax
cmp edi ebx
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
call sub_101113f7
add al bl
cmc
sub ebx edi
push 0xb11a45b2
sub esp 0xfffffffc
add ebx esp
test ecx 0x84c4d93d
mov edi ebx
ror al cl
call sub_100e7d58
dec edi
xor ebx [ ebx ]
arpl bp di
jbe rwxdata
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
ja rwxdata
push esp
add [ eax + 0x2424648d ] bl
mov bh 0x6d
xor al 0xe2
fldenv [ edi + 0x4d ]
and eax 0xe54dd80c
retn 0xf752
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100ae07c
cmp edi ebx
push [ esp + 0x10 ]
lea esp [ esp + 0x2c ]
ja rwxdata
call sub_101113f7
xor al 0xab
ror al 0x3
sub ebx edi
rol al 0x7
btr di di
bt esi 0xf
shl al 0x2
add ebx esp
bt ax 0x4
movsx di dl
bswap di
mov edi ebx
shr al 0x3
xor al cl
rcr al 0x1
mov al 0x2e
push esi
mov [ esp ] si
push edx
[ edi ]
pushad
pushfd
lea esp [ esp + 0x2c ]
jne rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0x4
mov esp esi
push 0x7ffff56e
mov [ esp ] 0x23
lea esp [ esp + 0x4 ]
jmp rwxdata
movzx ax al
mov [ edi - 0x1 ] 0x0
movzx eax al
push ebx
call sub_10137de1
inc edx
add ch [ ecx ]
0xaaeecd7a 0x5d7c
adc ebp ebx
stosd [ edi ]
pop edi
aaa
adc [ ebx - 0x9156a4d ] cl
fwait
inc edi
adc esp [ ebx ]
salc
sub bh dh
xor [ esi + 0x2be5055b ] ah
push edi
push edx
arpl [ edi + 0x3f ] bp
aad 0xbd
pop esp
adc ebx ebx
popfd
jae rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
add al 0x0
les ebx [ esp + edi - 0x328565da ]
xor esi eax
mov al [ 0xffffffffb4f62f79 ]
xchg edi eax
cmp ebx edi

xor ebx ebp
lodsd [ esi ]
arpl [ edi - 0x7e2829d2 ] si
movsb [ edi ] [ esi ]
cmp dl [ ecx ]
fldenv [ ecx + 0x590c447f ]
push ecx
sahf
mov [ edi - 0x65 ] fs
insb
adc [ ebx - 0x2869f5e5 ] 0x15
dec eax
pop edx
sub [ ebx + 0x1a ] edx
mov ah 0xeb
sbb [ ebp - 0xa ] edx
0x301c
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100ae2ef
cmp eax [ ebp - 0x10 ]
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
shl bx cl
mov ebx eax
neg di
mov edi eax
pushad
shl cx cl
lea ecx [ eax - 0x44c8cef ]
mov ecx 0x104
cmc
bt ax si
pushad
cmc
sub al al
push 0x8eb39ac3
bt sp dx
pushfd
test dl al
[ edi ]
pushfd
pushfd
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x50 ]
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
shrd cx si cl
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
rcr cx 0xa
mov ecx edi
shl si 0xa
rol si cl
sar esi 0x9
sub ecx ebx
pushad
sbb si 0xb20e
lea esi [ esp + 0x20 ]
push [ esp + 0x18 ]
call sub_10111407
mov [ 0xffffffffa49d2163 ] eax
jbe rwxdata
0xf660004 0xf1ad
mov eax 0xca062f91
retn
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100ae517
pushfd
pushfd
lea esp [ esp + 0x38 ]
jbe rwxdata
clc
sub ecx [ edx + 0x10 ]
jmp rwxdata
sbb edi 0x9e4ae7a4
mov edi [ edx + 0x24 ]
pushfd
add edi eax
pushfd
mov ebx [ edx + 0x20 ]
pushad
rcr cx cl
add ebx eax
bt dx 0xa
sar ecx 0x15
lea ecx [ ebp - 0x5f3b58fa ]
not ch
mov [ ebp - 0x8 ] 0x0
setle cl
push 0x6c8fa930
mov ecx [ edx + 0x18 ]
lea esp [ esp + 0x2c ]
jmp rwxdata
push esi
bt ebp 0xb
cmp ecx [ edx + 0x14 ]
mov [ esp ] 0xc6
jmp rwxdata
lea esp [ esp + 0x4 ]
jae rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
push ebx
lea esp [ esp + 0x4 ]
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
bsr di sp
adc edi 0x57d035b3
inc di
mov edi [ edx + 0x1c ]
cmc
pushad
add edi eax
bt bp bp
add esp 0x20
jns rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
clc
mov edi [ edi + ecx * 4 ]
jmp rwxdata
cmp ah ah
mov edi [ edi + ecx * 4 ]
call sub_100ec957
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
test si 0x56c2
test edi edi
pushad
lea esp [ esp + 0x20 ]
je rwxdata
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
call sub_100acd73
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100aea3e
pushfd
lea esi [ esp + 0x8 ]
test bh 0x42
pushad
sub edi 0x4
bt ebx 0x1a
push [ edi ]
pop [ esp + 0x24 ]
clc
test al 0xcb
call sub_100ae07c
not bl
and bl bh
rcl bl 0x1
xchg ebp eax
push esp
mov eax ebp
not bl
setb bl
mov bl 0x1
add esp 0x4
stc
pushfd
pushad
cmp cl 0x96
xchg [ esp + 0x20 ] esi
add si 0xbeb
mov esi edi
cmp ax di
sub esi eax
pushfd
call sub_100f6fe0
sub_100af4a1
lea esp [ esp + 0x28 ]
jne rwxdata
jmp rwxdata
or di sp
dec di
mov edi [ edx + 0x24 ]
cmc
pushfd
test bl 0x94
add edi eax
push [ esp ]
bt ax si
movzx ecx [ edi + ecx * 2 ]
btc di 0x9
btr edi 0x14
mov edi [ edx + 0x1c ]
stc
call sub_10111acc
xor cl [ eax ]
movsb [ edi ] [ esi ]
mov esi 0x44cd7a86
cmpsb [ esi ] [ edi ]
sbb al 0xf4
fistp [ 0x10304880 ]
push es
salc
pushfd
outsb
out 0x79 al
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
jmp rwxdata
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
push ebp
jmp rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
call sub_100ecce8
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
cmp al 0xba
jge rwxdata
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100af684
mov [ esp + 0x8 ] 0x95
mov [ esp + 0x8 ] bh
lea esp [ esp + 0x24 ]
jae rwxdata
mov al 0xbd
lodsb [ esi ]
pushad
inc al
pushad
push 0xd22e4716
clc
jmp rwxdata
inc al
jmp rwxdata
neg al
clc
jmp rwxdata
mov bl 0x2
call sub_1013af7d
mov [ esp ] 0x96a4
pushfd
rol al 0x6
mov [ esp ] si
add al 0x5c
push 0x62d117d6
neg al
cmp bl 0xdc
sub al 0xf
bt si bp
ror al 0x2
push edi
jmp rwxdata
lea esp [ esp + 0x50 ]
jno rwxdata
cmp bl dl
cmc
pushfd
add al 0xb3
push [ esp ]
mov [ esp + 0x4 ] cx
push [ esp ]
stc
shr eax 0x1
pushad
lea esp [ esp + 0x2c ]
je rwxdata
test dl 0x38
add al 0xb3
clc
clc
shr eax 0x1
pushfd
push [ esp ]
mov [ esp ] 0xb9
lea esp [ esp + 0x8 ]
je rwxdata
bswap ebx
xchg edi ebx
not si
pop ebx
call sub_100adb6c
pushad
pushad
adc ecx ecx
push ecx
push 0xa674ecaa
mov [ esp ] 0x44
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
pushfd
adc ecx ecx
mov [ esp ] dh
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
mov bl dl
inc ecx
not bl
jmp rwxdata
pushfd
call sub_100f0dae
sub_100afaf3
jmp rwxdata
mov [ esp ] ah
mov esp ebp
int3
jpe rwxdata
sahf
in eax 0x99
jns rwxdata
call [ ebp + edi * 4 + 0xb ]
push 0x2f317890
push edx
pop es
fsub [ eax - 0x2cda990 ]
scasd [ edi ]
0xd1ca022e 0x898d
dec ebx
push esp
adc ch bh
mov bh 0x89
adc [ esi + 0x43 ] 0x7
fisttp [ cs : ecx - 0x36988c45 ]
xchg [ eax - 0x1974baca ] esp
dec esi
add cl [ ebx ]
pop edi
and [ eax - 0xf ] 0xd8d1f51b
xchg esp eax
dec si
in al 0xa4
hlt
dec edx
push 0x11
int 0xb5
std
ja rwxdata
dec ecx
and bh [ eax ]
jmp rwxdata
not bp
call sub_100aa4ee
sbb al 0xa4
dec edx
je rwxdata
and al 0x7a
adc eax 0x5d9c0c3b
imul edx [ eax + ebx * 8 + 0xd ] 0xb
salc
loop rwxdata
stc
mov ebx 0xd282665
aas
std
and al 0xc4
int 0x82
push esi
inc ebx
pop es
jns rwxdata
push ebx
sbb edi ebx
jle rwxdata
into
inc esp
jmp rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
shld si ax cl
sub dx 0x511b
mov esi [ eax + 0x3c ]
shl dl 0x4
pushfd
add edx 0x4bd5ab88
add esi eax
shr dx cl
call sub_100f20d1
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100e7ab5
bt ax bp
sar al cl
mov al [ edi ]
push esp
pushfd
clc
cmp al 0x41
push [ esp + 0x4 ]
mov [ esp + 0x4 ] ah
pushad
lea esp [ esp + 0x2c ]
jb rwxdata
adc ah 0x8b
add ah cl
mov ah [ esi ]
call sub_100ec899
jmp rwxdata
cmp al 0x5a
push ecx
jmp rwxdata
lea esp [ esp + 0x4 ]
ja rwxdata
rcl ah 0x3
add ah 0x77
clc
add al 0x20
sub_100e7d58
push 0x62c5e203
pushfd
mov al 0x2e
bt di 0x8
clc
[ edi ]
mov [ esp ] di
push 0x17f53b5e
lea esp [ esp + 0x10 ]
jne rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0x4
mov esp esi
push 0x7ffff56e
mov [ esp ] 0x23
lea esp [ esp + 0x4 ]
jmp rwxdata
movsx ax dl
pushfd
cwde
seta al
mov [ edi - 0x1 ] 0x0
lea eax [ ebx + 0x4831f2bb ]
pop eax
lea eax [ eax + 0x51c8c050 ]
push ebx
movsx eax cl
setne al
cwde
lea eax [ rwxdata ]
pushad
pushad
pushfd
mov [ esp + 0x40 ] rwxdata
pushfd
push esi
push edi
mov [ esp + 0x8 ] dh
mov [ esp + 0x48 ] eax
push eax
pushfd
mov [ esp + 0x8 ] 0xe
mov [ esp ] cx
push [ esp + 0x50 ]
retn 0x54
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100e833d
mov [ esp ] edi
pushad
movzx ecx [ edi + ecx * 2 ]
sub esp 0xffffffd4
bsr di sp
adc edi 0x57d035b3
inc di
mov edi [ edx + 0x1c ]
cmc
pushad
add edi eax
bt bp bp
add esp 0x20
jns rwxdata
clc
mov edi [ edi + ecx * 4 ]
jmp rwxdata
cmp ah ah
mov edi [ edi + ecx * 4 ]
call sub_100ec957
test si 0x56c2
test edi edi
pushad
lea esp [ esp + 0x20 ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
call sub_100acd73
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100e8373
push 0xa57932d5
lea esp [ esp + 0xc ]
jbe rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
bts esi 0x4
cmp bx 0xb4c
sub ecx 0x1
sar edi cl
pushfd
pushad
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x24 ]
shl ch cl
mov ecx [ ebp - 0x8 ]
pushad
add ecx [ ebp - 0x4 ]
shr di 0x8
bsr si bp
shr ecx 0x1
not esi
sar si 0x4
bsr si sp
bsr di bp
mov edi [ ebx + ecx * 4 ]
inc si
add edi eax
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp sub_100f5565
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100eb6ee
pushfd
lea esp [ esp + 0x28 ]
jae rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
stc
push 0x3dd6b5ef
sub esp 0xfffffffc
jpe rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
add ecx 0x1
call sub_101384f4
add [ eax ] al
inc edi
je rwxdata
add ecx 0x1
pushad
mov [ ebp - 0x8 ] ecx
mov [ esp + 0x4 ] al
push [ esp ]
push 0x1136a2c2
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
add cl [ eax + 0x3e1857ab ]
add al 0xce
jle rwxdata
jb rwxdata
shl ch cl
mov ecx [ ebp - 0x8 ]
pushad
add ecx [ ebp - 0x4 ]
shr di 0x8
bsr si bp
shr ecx 0x1
not esi
sar si 0x4
bsr si sp
bsr di bp
mov edi [ ebx + ecx * 4 ]
inc si
add edi eax
jmp rwxdata
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
push edi
adc [ eax + eax * 8 ] ebx
mov esp 0x2d466e92
inc [ esi - 0x624aa50 ]
sub edx [ edi + 0x66572b24 ]
loopne rwxdata
push ss
insd
arpl [ ebp + 0x73 ] sp
jae rwxdata
jmp sub_100f5565
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
in al dx
aas
sti
and [ eax + edi * 2 + 0x4d ] edi
sbb ebp [ esi + edi * 4 ]
leave
xlat
push edi
loopne rwxdata
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
0x8428198f 0x2e50
outsd
outsb
add ah ah
mov edx 0x71df6856
int 0x9a
cld
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
jno rwxdata
pop edx
jns rwxdata
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
dec ecx
inc eax
adc [ esi ] 0x6d
clc
movsb [ edi ] [ esi ]
jle rwxdata
adc bh [ ecx - 0x3d ]
rcr esi cl
leave
sahf
je rwxdata
loope rwxdata
sbb [ eax ] ebp
test [ eax + 0x2e ] dl
clc
jo rwxdata
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
mov [ 0xfffffffff311d778 ] al
jno rwxdata
inc edi

mov al 0xb2
fidiv [ ecx - 0x33 ]
mov [ 0xffffffffc60a395f ] eax
inc ebx
in eax 0xaf
add ebp esi
mov dl 0x7f
movups xmm1 xmm2
lds ebx [ ebx + 0x78c80f94 ]
xor eax 0x91c9384d
dec ebp
shr eax cl
fwait
and esp edx
outsb
int1
push edi
in eax dx
aad 0x32
mov ah 0xf
sbb ah al
mov [ edi - 0x7501f6c5 ] es
mov [ edx - 0x62 ] cl
mov bl [ ebx + 0x2d818850 ]
pop es
0x195c97ff 0x80dd
nop
push 0x52
xor ch al
test al 0x99
sbb [ eax ] ebp
xchg ecx eax
pop ebp
insb
xchg ecx eax
mov ch 0x21
push cs
adc [ eax + esi ] dl
out dx al
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
adc edi [ ebx ]
or ecx [ esi + 0x4c ]
sub eax 0x8ffa62d2
insd
cmp edx [ edx - 0x38feac4c ]
inc ecx
mov esi 0xaf91bfa1
nop
sbb al bh
lahf
dec ebx
or ebx [ edx ]
fimul [ edi - 0x44f17541 ]
fld [ eax + ecx * 4 - 0x43791207 ]
popfd
add esp edx
loop rwxdata
fld [ eax + 0x32526a90 ]
call 0x382d3647
push ecx
insb
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100eb7f8
[ edi ]
mov [ esp ] 0x55
pushad
pushfd
mov [ esp + 0x4 ] 0x4
mov esp esi
push 0x7ffff56e
mov [ esp ] 0x23
lea esp [ esp + 0x4 ]
jmp rwxdata
lahf
movsx eax bl
movsx ax dl
mov [ edi - 0x1 ] 0x0
movsx ax cl
not ah
call sub_100ab41c
mov [ 0xffffffffc2bba721 ] eax
jbe rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
push esi
push ecx
mov [ esp + 0x8 ] 0x6c22
lea esp [ esp + 0x50 ]
jne rwxdata
and al 0x55
0xc6381573 0x98ac
xchg ebx eax
pop edi
and al 0xfc
lodsb [ esi ]
mov [ edx + 0x38 ] ch
sub ebp ebx
test [ eax - 0x30c6af76 ] 0xce
xchg [ edi ] ah

bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100ebb53
stc
lea esp [ esp + 0x4 ]
jb rwxdata
test dh dh
shr ebx 0xc
bt di 0x1
cmp ebx 0x1
pushfd
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
pushad
shr ebx 0xc
call sub_100ab2d5
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sub eax 0x5711
add [ eax ] al
js rwxdata
bsr bx bp
not bl
adc bl al
push esp
mov bx [ esi ]
jmp sub_100ab81d
clc
stc
push esp
cmp ebx 0x2
mov [ esp ] al
lea esp [ esp + 0x4 ]
je rwxdata
push eax
mov fs [ ecx + 0x6b ]
adc bh [ edx ]
sbb [ ebx ] dh
rcl [ ebp + 0x788d7b0b ] 0x1
xor al 0x0
iretd
push cs
add [ ecx ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax - 0x3ffff145 ] dl
mov ebx 0xbbb0000e
push cs
add [ esi - 0x21 ] bl
add [ eax ] al
inc esp
leave
add [ eax ] al
bsf bx si
xor bl dh
cmp bl 0x5d
mov bx [ esi ]
pushfd
and ebx 0xfff
mov [ esp ] ah
push [ esp ]
push [ esp ]
jmp rwxdata
cmp sp di
test cl dl
stc
jmp rwxdata
add [ ebx + edi ] dx
pushfd
mov [ esp + 0x4 ] 0x1f5f
lea esp [ esp + 0x10 ]
jmp rwxdata
cmp ebx 0x3
jmp rwxdata
cmc
add esi 0x2
pushfd
push [ esp ]
dec ecx
pushfd
pushfd
mov [ esp ] 0xdb9b
mov [ esp ] 0x62
lea esp [ esp + 0x10 ]
jne rwxdata
call sub_100ab231
bsr bx bx
setg bh
mov bx [ esi ]
call sub_100ebb53
push esi
or al dh
pushfd
sar [ edx - 0x33 ] 0x1
pop cx
or eax 0x3e0cbfe1
mov ch 0x5f
dec ecx
or [ eax ] ebx
retn 0x9ac4
sbb cx 0x3808
mov cx di
xor cx 0x7716
movsx cx al
mov ecx [ ebp - 0x4 ]
stc
pushad
cmp [ ebp + 0x14 ] ecx
jmp rwxdata
pushad
lea esp [ esp + 0x40 ]
ja rwxdata
rcl ch cl
or cx cx
lea ecx [ ebp + 0x4cb2e7f5 ]
mov ecx [ esi + 0x4 ]
test edx ecx
cmp ecx 0x666e62d7
cmp bx 0x88d5
or ecx ecx
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
pushfd
bswap si
xchg si di
call sub_1013585c
adc dh dl
shl di cl
add [ ebp - 0x4 ] ecx
bts di 0x6
sbb di sp
cmp ah bh
ror bh 0x6
sub ecx 0x8
shl edi cl
rol bl cl
not bl
shr ecx 0x1
inc bl
mov edi [ esi ]
xor bh 0xbd
add edi [ ebp + 0x10 ]
cmp cl dl
btc bx bp
sub bh 0x7e
btc bx 0x2
add esi 0x8
sub_100ec899
mov [ esp ] 0x68
jmp rwxdata
cmp ah 0x41
rol [ edi ] cl
sbb al 0xd8
cdq
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor al 0xf4
stosd [ edi ]
aas
int1
dec eax
test [ fs : edx + 0xc ] bh
popfd
push ebp
add cl [ edx ]
dec eax
mov ah bh
psrlq mm5 [ edi + 0x22 ]
mov [ 0x368c800a ] al
add esi [ ecx ]
call 0xffffffffa1a33c9b
test al 0x1c
cdq
fld [ eax + 0x56 ]
adc eax 0x8815a7d1
inc esp
push es
cwde
push ds
mov ebp 0x8bf62661
mov ebx 0xcda9cee0
xchg esi eax
mov esp 0xc84e615f
jpo rwxdata
call j_sub_100ab1e3
daa
out dx eax
jmp rwxdata
mov edi 0x41fc8056
dec esp
jl rwxdata
imul [ 0xffffffff9fb9578b ]
int3
aas
shr dl cl
xchg edi eax
movsd [ edi ] [ esi ]
sahf
pushfd
cmp eax 0x8b2df620
push edi
mov ecx 0x2306cc9f
sub_100ec957
pushfd
jmp rwxdata
cmc
test edi edi
jmp rwxdata
call sub_10134a2e
add ecx [ edi + 0x7aa61f43 ]
int 0xe3
dec esi
or [ edi ] dl
mov edi 0x1e404890
fisubr [ edx - 0x7931a077 ]
sbb [ edi ] 0xfffffff3
rcl [ esi ] 0x1
sub_100ecce8
lea esp [ esp + 0x4 ]
jb rwxdata
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
pushfd
pushad
cmp [ edi - 0x1 ] 0x0
call sub_100af4a1
push edi
aaa
popfd
lds ebp [ esi + 0x4c90cd76 ]
xor dl bl
mov al 0x75
xor esp [ edx ]
hlt
sub_100ed246
lea esp [ esp + 0xc ]
jae rwxdata
mov bl dl
inc ecx
jmp rwxdata
pushfd
call sub_100f0dae
clc
pushfd
cmp ah 0x5
pushad
push [ esp + 0x4 ]
mov [ esp + 0x14 ] esi
push edi
lea esp [ esp + 0x2c ]
jae rwxdata
not bl
jmp rwxdata
pushad
cmp eax 0x7f
mov [ esp + 0x4 ] 0xe291
call sub_100acc03
sub_100ed2b8
stc
not al
test di cx
add al 0xc2
test dh ah
pushfd
pushfd
cmc
neg al
cmc
bt sp 0x1
xor al 0x1c
test eax ecx
test bl bh
add al 0x47
test dh 0x3
neg al
push ebp
test dl al
not al
call sub_10139dbe
sub_100edb17
lea esp [ esp + 0x2c ]
jb rwxdata
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
pushfd
cmp eax [ ebp - 0x10 ]
pushfd
pushad
push [ esp ]
pushfd
lea esp [ esp + 0x30 ]
jae rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
and edi esi
shld bx dx cl
mov ebx eax
setpo cl
shrd edi esp 0x1
shr di cl
mov edi eax
ror ecx cl
mov ecx 0x104
cmc
xor al al
cmc
push ecx
clc
pushfd
[ edi ]
pushfd
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushad
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x2c ]
jne rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
cmp si dx
ror cx 0xf
mov ecx edi
shld si ax 0x7
ror esi 0x16
sub ecx ebx
bt si dx
test si 0x7569
call sub_100aea3e
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100eded9
rol al 0x6
test eax esp
pushad
pushad
add al 0x5c
clc
cmc
neg al
push 0xcda2d79e
cmp dl dl
sub al 0xf
jmp rwxdata
jmp rwxdata
clc
ror al 0x2
add esp 0x48
je rwxdata
bt di ax
call sub_100f287b
clc
pushad
add al 0xb3
push esi
push [ esp ]
mov [ esp ] si
lea esp [ esp + 0x28 ]
call sub_101379c5
sub_100ee494
push 0x887531dc
lea esp [ esp + 0x30 ]
ja rwxdata
test ah 0xe7
or al al
push edx
lea esp [ esp + 0x4 ]
je rwxdata
pushfd
test bx 0xf5f9
add ah 0x20
lea esp [ esp + 0x4 ]
jmp rwxdata
push eax
pushfd
push 0x6f0129db
cmp al ah
pushad
pushfd
call sub_100ab54d
sub ah dl
push eax
adc dl [ edi - 0xbc328a ]
int 0xc9
lea esp [ eax - 0x1e2a292 ]
or ah ah
pushfd
jmp rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
pushfd
push [ esp + 0x4 ]
jne rwxdata
call sub_100abff3
pushad
call sub_100f576a
retn 0x8
sub_100f0dae
inc ecx
add esp 0x8
jmp rwxdata
not bl
and bl bh
rcl bl 0x1
xchg ebp eax
push esp
mov eax ebp
not bl
setb bl
mov bl 0x1
add esp 0x4
stc
pushfd
pushad
cmp cl 0x96
xchg [ esp + 0x20 ] esi
add si 0xbeb
mov esi edi
cmp ax di
sub esi eax
pushfd
call sub_100f6fe0
sub_100f16c2
call sub_100f611f
bt ebx 0x16
cmc
test ah 0x18
push ebp
or eax eax
pushad
pushad
mov [ esp + 0x8 ] cl
lea esp [ esp + 0x44 ]
je rwxdata
cmc
pushfd
sub eax eax
add esp 0x4
pushad
jmp rwxdata
sete bl
setno bh
not bh
jmp rwxdata
pushfd
or ebx ebx
push [ esp + 0xc ]
lea esp [ esp + 0x28 ]
je rwxdata
mov ebx eax
bswap ax
setle al
cwde
lea eax [ ebp - 0x8 ]
jmp sub_100ad281
lea ebx [ esi * 4 - 0x14f9b5f0 ]
pop edi
mov si bx
setpe bh
jmp rwxdata
call sub_100ab330
add edi eax
cmc
push esi
stc
stc
mov edi [ edi + ecx * 4 ]
cmc
pushad
test edi edi
jmp rwxdata
pop esi
pushfd
setl bh
push 0x264a9a27
mov ebx [ esp + 0x8 ]
mov [ esp + 0x8 ] ah
jmp sub_1013560b
lea esp [ esp + 0x30 ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
test bl bh
cmc
add eax edi
push edi
pushad
clc
cmp ch dl
cmp eax edx
call sub_100abb02
mov [ ebp - 0x4 ] eax
push eax
pushad
mov [ esp ] ch
pushfd
xchg [ esp + 0x28 ] eax
not eax
pushfd
mov [ esp + 0x28 ] 0x0
lahf
mov ah dh
bswap ax
mov ah 0xbb
lea eax [ LocalAlloc@IAT ]
call sub_100f607e
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100f1be3
lea esp [ esp + 0x4 ]
ja rwxdata
call sub_101113f7
stc
ror al cl
shr al cl
sub ebx edi
movsx di bl
inc edi
add ebx esp
movsx di bl
mov edi ebx
adc al cl
mov al 0x2e
pushad
imul ebp [ edi + ebp * 2 ] 0xffffffe3
push ebx
jl rwxdata
cmp [ ebp + 0x5f ] eax
jbe rwxdata
insd
sbb ebx [ ecx ]
out dx eax
retn
cli
mov [ esi + ebp * 8 - 0x30 ] esi
popfd
movsd [ edi ] [ esi ]
push 0x6eca01ee
cli
sub eax [ ebx ]
or al al
adc dl bh
jns rwxdata
xchg ecx esp
mov ch 0xfb
adc ah cl
mov esi 0x74d5a76
stc
leave
lahf
imul esp [ ecx ] 0xe78a8ed
push esi
sub [ ecx ] edi
0x1b6d7ca6 0xef19
cmp cx 0xb76c
test dl al
[ edi ]
call j_sub_10138511
ja rwxdata
pushad
mov ch 0xf3
mov edi 0x775704a3
mov eax [ ebx - 0x673b69d9 ]
int 0xd7
scasd [ edi ]
xchg edx eax
int3
sub_100f1fd9
call sub_10111030
inc ecx
psrlq mm5 mm3
pop ebx
jbe rwxdata
add [ eax - 0x39 ] ah
inc esp
and al 0x1c
jle rwxdata
pop ss
adc [ eax - 0x29 ] 0x9f
jg rwxdata
nop
add al 0x0
pushad
mov [ esp + 0x1c ] rwxdata
pushad
push [ eax ]
pop [ esp + 0x38 ]
mov [ esp ] 0x6b32
mov [ esp + 0x20 ] bh
push [ esp + 0x38 ]
retn 0x3c
or dl [ eax ]
js rwxdata
cmp ah dl
0x1a1f4568 0xdbce
sbb eax 0x1e424177
add al 0x24
xor ch [ ebx - 0x78 ]
jl rwxdata
inc esp
jo rwxdata
jmp rwxdata
lea ebp [ edi - 0x7e ]
cmp [ eax + 0x74af2f9c ] 0xe4
mov al [ 0xffffffffbd1e427a ]
fild [ edi + 0x1f4626bb ]
fld [ edi ]
mov [ ebx - 0x7 ] edx
xor ah [ edx + edi + 0x68 ]
loopne rwxdata
or cl dh
loope rwxdata
inc ebp
pop ds
sbb cl dh
and bh bh
je rwxdata
add eax 0x75661671
movsb [ edi ] [ esi ]
lodsb [ esi ]
push 0x4dbee66d
sbb dh [ eax ]
push edi
sub ebx edi
mov al 0x20
inc ecx
inc edx
fbstp [ eax + 0x16710520 ]
jne rwxdata
mov edx 0x8d63e325
add edi [ ebp - 0x50 ]
or ebp [ ecx - 0x42 ]
aas
outsb
popfd
push ss
int3
fistp [ 0x1e424177 ]
cmp dl al
cmp al 0x0
jmp rwxdata
hlt
push ds
xchg ecx eax
cdq
inc ecx
sub ebp ebp
mov bl 0xcc
inc esp
push cs
fwait
jne rwxdata
clc
ror al 0x2
add esp 0x48
je rwxdata
bt di ax
call sub_100f287b
clc
pushad
add al 0xb3
push esi
push [ esp ]
mov [ esp ] si
lea esp [ esp + 0x28 ]
call sub_101379c5
sub_100f20d1
mov edx [ esi + 0x78 ]
call sub_100aa7dd
pushfd
lea esp [ esp + 0x10 ]
jne rwxdata
cmc
pushfd
sub eax eax
add esp 0x4
pushad
jmp rwxdata
rcl ecx 0x2
dec ch
mov ecx [ ebx ]
cmc
clc
or ecx ecx
jmp rwxdata
pushfd
or ebx ebx
push [ esp + 0xc ]
lea esp [ esp + 0x28 ]
je rwxdata
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
lea ebx [ esi * 4 - 0x14f9b5f0 ]
pop edi
mov si bx
setpe bh
jmp rwxdata
call sub_100ab330
add edi eax
cmc
push esi
stc
stc
mov edi [ edi + ecx * 4 ]
cmc
pushad
test edi edi
jmp rwxdata
call sub_10135760
pop esi
pushfd
setl bh
push 0x264a9a27
mov ebx [ esp + 0x8 ]
mov [ esp + 0x8 ] ah
jmp sub_1013560b
lea esp [ esp + 0x30 ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
test bl bh
cmc
add eax edi
push edi
pushad
clc
cmp ch dl
cmp eax edx
call sub_100abb02
mov [ ebp - 0x4 ] eax
push eax
pushad
mov [ esp ] ch
pushfd
xchg [ esp + 0x28 ] eax
not eax
pushfd
mov [ esp + 0x28 ] 0x0
lahf
mov ah dh
bswap ax
mov ah 0xbb
lea eax [ LocalAlloc@IAT ]
call sub_100f607e
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100f215b
mov esp esi
pushfd
mov [ esp ] ebx
pushad
push edi
lea esp [ esp + 0x28 ]
jmp rwxdata
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100f216c
cmp edi ebx
mov [ esp ] 0xdd
pushfd
mov [ esp ] eax
jmp rwxdata
lea esp [ esp + 0x2c ]
ja rwxdata
call sub_101113f7
shl al cl
rcl al cl
sub ebx edi
btc edi edx
rcl di 0xd
cmc
rcr al cl
add ebx esp
dec al
ror al 0x2
ror di cl
mov edi ebx
mov al dh
pushad
mov al 0x2e
mov [ esp + 0x4 ] ch
stc
[ edi ]
call j_sub_1013ba4b
sub_100f2948
mov [ esp + 0x28 ] rwxdata
mov [ esp ] 0x47
jbe rwxdata
insb
cmp edi ebp
lodsd [ esi ]
xchg ecx eax
jpo rwxdata
inc ebx
inc edi
and [ esi ] ch
leave
in eax 0x12
dec esp
sbb ebp [ ecx ]
adc bl [ eax - 0xfa1e55f ]
jecxz rwxdata
sub [ ecx + 0x65 ] esp
sti
retn
and eax 0xc68a7ce7
dec esp
fdivr [ ebp + 0x61f32565 ]
and dl [ edi + 0x28 ]
xchg edi eax
cmc
jle rwxdata
scasb [ edi ]
popfd
pop ss
sbb [ ecx - 0x227c8159 ] cl
mov ch 0xfd
leave
out 0x7c eax
mov al dh
loope rwxdata
cld
sbb al 0x49
push ecx
insb
cld
push eax
fisttp [ ebx ]
inc ebx
fisubr [ ecx - 0x5044032e ]
cmc
push 0xb860f224
and eax 0x6e984ee6
lahf
dec edi
leave
pushfd
jge rwxdata
fstp [ eax - 0x4e5a2106 ]
pop edx
jbe rwxdata
call j_sub_100f6111
mov bl 0x9d
imul edx [ ebx + 0x52 ] 0x76
int 0x6
mov edx 0xf72e648c
mov edi 0x5357f8f
jmp rwxdata
inc edi
push 0x534bc3a0
salc
outsb
insd
out 0x58 al
dec ecx
call 0x8fe630aa
in eax dx
shl [ edi ] cl
pop eax
sub_100f5531
lea esp [ esp + 0x30 ]
ja rwxdata
call sub_101113f7
rcl al cl
clc
sub ebx edi
shld di sp cl
movzx di bl
stc
add ebx esp
bswap edi
cmc
dec edi
adc di 0x9cf1
mov edi ebx
add al 0x29
not al
and al al
mov al 0x2e
push eax
pushfd
jmp rwxdata
[ edi ]
jmp rwxdata
lea esp [ esp + 0x8 ]
jne rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0x4
mov esp esi
push 0x7ffff56e
mov [ esp ] 0x23
lea esp [ esp + 0x4 ]
jmp rwxdata
bswap ax
mov [ edi - 0x1 ] 0x0
cwde
push esp
mov [ esp ] ebx
movzx ax bl
cwde
pushad
lea eax [ rwxdata ]
jmp rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
mov [ esp + 0x1c ] rwxdata
pushfd
pushfd
pushad
mov [ esp + 0x40 ] eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
push [ esp + 0x48 ]
retn 0x4c
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100f5565
pushfd
bswap si
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x24 ]
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
jmp rwxdata
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
push ebp
jmp rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
call sub_100ecce8
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
cmp al 0xba
jge rwxdata
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100f5575
push 0x96f77210
test bl bl
add edi eax
mov [ esp + 0x10 ] si
movzx ecx [ edi + ecx * 2 ]
bsf di bp
mov edi [ edx + 0x1c ]
clc
cmc
add edi eax
cmp dl dh
mov edi [ edi + ecx * 4 ]
cmc
test edi edi
jmp rwxdata
push 0xead2ebb2
lea esp [ esp + 0x30 ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
stc
add eax edi
stc
cmc
stc
cmp eax edx
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
cmp eax [ ebp - 0x10 ]
call sub_1011143f
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100f5743
mov [ esp ] 0x72
push [ edi ]
pop [ esp ]
clc
stc
test dh ch
cmp edi ebx
call sub_100f1be3
pushad
mov [ esp + 0x20 ] 0x5be45fcd
mov [ esp ] 0xf7
pushad
jmp rwxdata
mov [ esp + 0x3c ] 0xc7fa8cdc
mov [ esp ] dh
push ebx
mov [ esp ] cl
lea esp [ esp + 0x40 ]
jmp rwxdata
pushfd
mov [ esp ] edx
call sub_1013be0f
sub_100f5861
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
bsf bx si
xor bl dh
cmp bl 0x5d
mov bx [ esi ]
pushfd
and ebx 0xfff
mov [ esp ] ah
push [ esp ]
push [ esp ]
jmp rwxdata
stc
bt edx edi
call sub_100f6685
pushfd
pushad
mov [ esp ] dh
mov [ esp + 0x4 ] al
lea esp [ esp + 0x24 ]
je rwxdata
add [ ebx + edi ] dx
pushfd
mov [ esp + 0x4 ] 0x1f5f
lea esp [ esp + 0x10 ]
jmp rwxdata
bts bx 0x8
mov bx [ esi ]
cmp bh 0x11
pushad
mov [ esp + 0x8 ] 0xdb
and ebx 0xfff
test eax ebx
stc
call sub_100acbb4
push 0x36
mov eax 0xcd7610aa
stosd [ edi ]
and eax 0xdcfea472
mov cl 0x6f
0x2161749e 0xaa1e
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
cmc
add esi 0x2
pushfd
push [ esp ]
dec ecx
pushfd
pushfd
mov [ esp ] 0xdb9b
mov [ esp ] 0x62
lea esp [ esp + 0x10 ]
jne rwxdata
bsr bx bx
setg bh
mov bx [ esi ]
call sub_100ebb53
push esi
or al dh
pushfd
sar [ edx - 0x33 ] 0x1
pop cx
or eax 0x3e0cbfe1
mov ch 0x5f
dec ecx
or [ eax ] ebx
retn 0x9ac4
sbb cx 0x3808
mov cx di
xor cx 0x7716
movsx cx al
mov ecx [ ebp - 0x4 ]
stc
pushad
cmp [ ebp + 0x14 ] ecx
jmp rwxdata
pushad
lea esp [ esp + 0x40 ]
ja rwxdata
rcl ch cl
or cx cx
lea ecx [ ebp + 0x4cb2e7f5 ]
mov ecx [ esi + 0x4 ]
test edx ecx
cmp ecx 0x666e62d7
cmp bx 0x88d5
or ecx ecx
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
pushfd
bswap si
xchg si di
call sub_1013585c
adc dh dl
shl di cl
add [ ebp - 0x4 ] ecx
bts di 0x6
sbb di sp
cmp ah bh
ror bh 0x6
sub ecx 0x8
shl edi cl
rol bl cl
not bl
shr ecx 0x1
inc bl
mov edi [ esi ]
xor bh 0xbd
add edi [ ebp + 0x10 ]
cmp cl dl
btc bx bp
sub bh 0x7e
btc bx 0x2
add esi 0x8
sub_100f607e
mov [ esp + 0x28 ] rwxdata
call sub_100f60c2
cmp bl dl
cmc
pushfd
add al 0xb3
push [ esp ]
mov [ esp + 0x4 ] cx
push [ esp ]
stc
shr eax 0x1
pushad
lea esp [ esp + 0x2c ]
je rwxdata
bswap ebx
xchg edi ebx
not si
pop ebx
call sub_100adb6c
pushad
pushad
adc ecx ecx
push ecx
push 0xa674ecaa
mov [ esp ] 0x44
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
mov bl dl
inc ecx
not bl
jmp rwxdata
pushfd
call sub_100f0dae
sub_100f611f
pushad
call sub_10137ba1
jg rwxdata
dec esi
arpl [ ecx - 0x18411fcc ] sp
std
arpl [ ecx - 0x1a ] dx
out dx al
stc
lodsd [ esi ]
xor eax 0x6694e80b
dec esi
and [ ecx - 0x6b ] cl
ficomp [ edx ]
adc ebp [ ebx - 0x553289e7 ]
sub al 0xf9
mov bh 0x7d
inc ebp
push ebx
das
adc ebx esi
lodsb [ esi ]
push 0xa6e61e3c
aaa
sub_100f61e5
adc al bh
shl al cl
add edi 0x1
sar al cl
mov al [ edi ]
cmc
bt ebp ecx
test al al
call sub_10134d14
jge rwxdata
aas
jpe rwxdata
inc esp
jl rwxdata
or al 0x7d
mov ah 0xa9
xor ebp esp
test eax 0x68c3494
push edx
js rwxdata
shl [ edi ] 0x76
jpe rwxdata
push ebp
xor [ ebx - 0x3289e641 ] esp
xchg esi eax
push edx
and ah [ 0xfffffffffb3565a5 ]
lds esi [ ebp + 0x55597381 ]
cmp esp edi
stosd [ edi ]
jle rwxdata
mov [ 0xffffffffe8c084cd ] eax
sbb ebx ebp
add eax [ eax ]
cwde
xor esi [ ecx ]
pop eax
or eax 0xbcfcd5df
dec edx
jmp 0x12620aad
das
mov eax 0xf15101d4
mov ch 0xdc
in al 0x70
mov ss [ ebp + 0x32 ]
fsubr [ ebx + 0x363aa0d3 ]
retn
test eax 0xf0999c3
in eax dx
push 0x91287490
mov [ 0xffffffff9f0f364e ] al
xor esi [ esi - 0x5b879ab3 ]
test al 0x69
scasb [ edi ]
je rwxdata
or dh [ esi - 0x5ca3a562 ]
jge 0xffffffffe949c777
stc
xchg edx eax
mov al 0x99
or eax 0x3fa382ad
xchg [ edx ] cl
mov dh 0x9e
pop edx
pop esp
mov [ 0x645a8d0f ] eax
cmp bl cl
nop
dec al
pop edx
sbb ecx [ edx - 0x4a ]
inc edi
cdq
jpe rwxdata
or [ eax + 0xd ] 0xdf
cmpsb [ esi ] [ edi ]
fdiv st5
jge rwxdata
aas
adc al 0xfe
dec esi
adc al 0x19
jbe rwxdata
mov [ 0xfffffffff42a42b2 ] eax
int 0x99
sub eax 0x4999f5ee
mov dl 0xe6
mov [ 0xffffffffce16b35f ] eax
stosd [ edi ]
shl [ ecx - 0x15d53c2 ] cl
shl [ ecx ] 0xcd
leave
jg rwxdata
inc ecx
std
rcl esp 0x92
js rwxdata
stc
in al 0xfa
jbe rwxdata
lodsb [ esi ]
mov [ 0xffffffffcd21c1fe ] al
popfd
test [ ecx - 0x7 ] ecx
pop ebx
xor ecx [ ebx + 0x1e190ce3 ]
xor cl [ esp + eax * 2 + 0x57 ]
inc ecx
xchg edx eax
cmc
jpo rwxdata
xor [ 0xe91399 ] edx
mov dh 0x47
xor cl [ eax ]
hlt
cmp [ ebx - 0xa35b424 ] 0x1ef67b65
jb rwxdata
push ds
fstp st5
cld
mov esp 0xa840e94a
push edx
add dl dh
call 0xffffffffed8fcc17
adc eax 0x9697c339
add cl [ eax - 0x10 ]
int3
xlat
xor bl dh
cmpsb [ esi ] [ edi ]
mov ebx 0xd8a80050
[ esi ] [ edi ]
sub_100f6685
cmp ebx 0x3
push esp
lea esp [ esp + 0x8 ]
je rwxdata
bts bx 0x8
mov bx [ esi ]
cmp bh 0x11
pushad
mov [ esp + 0x8 ] 0xdb
and ebx 0xfff
test eax ebx
stc
call sub_100acbb4
push 0x36
mov eax 0xcd7610aa
stosd [ edi ]
and eax 0xdcfea472
mov cl 0x6f
0x2161749e 0xaa1e
pushfd
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
cmc
add esi 0x2
pushfd
push [ esp ]
dec ecx
pushfd
pushfd
mov [ esp ] 0xdb9b
mov [ esp ] 0x62
lea esp [ esp + 0x10 ]
jne rwxdata
bsr bx bx
setg bh
mov bx [ esi ]
call sub_100ebb53
push esi
or al dh
pushfd
sar [ edx - 0x33 ] 0x1
pop cx
or eax 0x3e0cbfe1
mov ch 0x5f
dec ecx
or [ eax ] ebx
retn 0x9ac4
sbb cx 0x3808
mov cx di
xor cx 0x7716
movsx cx al
mov ecx [ ebp - 0x4 ]
stc
pushad
cmp [ ebp + 0x14 ] ecx
jmp rwxdata
pushad
lea esp [ esp + 0x40 ]
ja rwxdata
rcl ch cl
or cx cx
lea ecx [ ebp + 0x4cb2e7f5 ]
mov ecx [ esi + 0x4 ]
test edx ecx
cmp ecx 0x666e62d7
cmp bx 0x88d5
or ecx ecx
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
pushfd
bswap si
xchg si di
call sub_1013585c
adc dh dl
shl di cl
add [ ebp - 0x4 ] ecx
bts di 0x6
sbb di sp
cmp ah bh
ror bh 0x6
sub ecx 0x8
shl edi cl
rol bl cl
not bl
shr ecx 0x1
inc bl
mov edi [ esi ]
xor bh 0xbd
add edi [ ebp + 0x10 ]
cmp cl dl
btc bx bp
sub bh 0x7e
btc bx 0x2
add esi 0x8
sub_100f6e31
add ecx 0xffffffff
lea esp [ esp + 0xc ]
jpo rwxdata
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
pushfd
mov [ esp ] 0x139f
pushad
lea esp [ esp + 0x24 ]
je rwxdata
cmc
pushfd
sub eax eax
add esp 0x4
pushad
jmp rwxdata
test bl bl
cmc
clc
test ch 0x70
add edx 0x11c
push 0xcb779127
mov [ esp ] cl
mov [ esp ] cl
push 0xf2175d8f
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
push edi
add edx 0x11c
pushfd
pushad
lea esp [ esp + 0x2c ]
jmp rwxdata
pushfd
or ebx ebx
push [ esp + 0xc ]
lea esp [ esp + 0x28 ]
je rwxdata
jmp rwxdata
lea ebx [ esi * 4 - 0x14f9b5f0 ]
pop edi
mov si bx
setpe bh
jmp rwxdata
call sub_100ab330
add edi eax
cmc
push esi
stc
stc
mov edi [ edi + ecx * 4 ]
cmc
pushad
test edi edi
jmp rwxdata
pushfd
xchg si di
xchg si di
movzx esi [ edx + 0x1a ]
lea esp [ esp + 0x4 ]
js rwxdata
pop esi
pushfd
setl bh
push 0x264a9a27
mov ebx [ esp + 0x8 ]
mov [ esp + 0x8 ] ah
jmp sub_1013560b
lea esp [ esp + 0x30 ]
je rwxdata
pushfd
call sub_100ed90a
not edi
mov edi 0xe2af64d4
lea edi [ edx * 2 + 0x69ce05ac ]
lea esi [ esi + edx + 0x1c ]
jae rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
jmp rwxdata
pushfd
pushfd
jmp rwxdata
lea edi [ esi * 8 - 0x76fdf9a4 ]
movzx edi dl
mov di 0xdc1e
mov edi [ ebp + 0x8 ]
pushfd
call sub_101389ea
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
mov edi [ ebp + 0x8 ]
push [ esp + 0x4 ]
call sub_1013a4dc
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
test bl bh
cmc
add eax edi
push edi
pushad
clc
cmp ch dl
cmp eax edx
call sub_100abb02
mov [ ebp - 0x4 ] eax
push eax
pushad
mov [ esp ] ch
pushfd
xchg [ esp + 0x28 ] eax
not eax
pushfd
mov [ esp + 0x28 ] 0x0
lahf
mov ah dh
bswap ax
mov ah 0xbb
lea eax [ LocalAlloc@IAT ]
call sub_100f607e
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_100f73e7
lea esp [ esp + 0x44 ]
ja rwxdata
call sub_101113f7
cmc
sub ebx edi
bt bx 0xf
rcr di cl
bsf di di
add ebx esp
pushad
shrd di sp 0x4
jmp rwxdata
mov edi ebx
shl al cl
adc al al
sbb al 0xbc
pushfd
mov al 0x2e
clc
pushad
call sub_100eb7f8
xor ebp esp
imul edi ecx 0x5ccd760a
sbb dl ah
jmp rwxdata
mov ebp 0x48a26a28
fcomp [ ebp - 0x5f ]
mov al 0x2c
loope rwxdata
sbb [ ecx - 0x39 ] edx
out dx eax
inc ebp
dec edx
adc eax 0x31791a26
sbb eax 0x6928700a
salc
cld
call 0xffffffffb84cbca0
sti
mov esp 0xd24a2cec
dec esp
mov al [ 0xffffffff82bb3994 ]
inc edi
sbb [ ebp - 0x5a16fd0c ] ebx
imul ecx ebp 0x54af0b47
les esp [ ecx ]
jno rwxdata
push [ eax - 0x27384e2e ]
pop esp
mov eax [ gs : 0xfffffffff3e12cb0 ]
mov [ 0xfffffffff4916bb8 ] al
loopne rwxdata
cmp al 0x5a
push ecx
jmp rwxdata
mov esp eax
cmp eax 0xacd41ed0
stosd [ edi ]
movsd [ edi ] [ esi ]
jle rwxdata
dec eax
inc ecx
dec edi
and [ edx + 0x28bd3bbb ] dh
push 0xffffffa2
lea esp [ esp + 0x4 ]
ja rwxdata
adc ah 0x8b
add ah cl
mov ah [ esi ]
call sub_100ec899
rcl ah 0x3
add ah 0x77
clc
add al 0x20
sub_10110ffd
pushfd
pushad
mov [ esp + 0x24 ] 0x5beba0cd
push [ esp + 0xc ]
mov [ esp + 0x24 ] 0xb17445ab
mov [ esp + 0x8 ] 0x160
pushfd
mov [ esp + 0x10 ] 0x216b
push 0x7f579668
lea esp [ esp + 0x2c ]
jmp rwxdata
pushfd
mov [ esp ] edx
call sub_1013e311
sub_10111030
push 0x1ea4c89
pushad
lea esp [ esp + 0x38 ]
jb rwxdata
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
call sub_100ae2ef
xor al al
call sub_10136a22
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_1011143f
lea esp [ esp + 0x4 ]
jae rwxdata
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
cmc
mov ebx eax
bsr edi esi
inc ecx
mov edi eax
btr cx cx
dec cx
shr ch 0x1
shld ecx edx cl
mov ecx 0x104
pushad
call sub_100af8ef
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_10111acc
jmp rwxdata
add edi eax
cmc
push esi
stc
stc
mov edi [ edi + ecx * 4 ]
cmc
pushad
test edi edi
jmp rwxdata
lea esp [ esp + 0x30 ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
test bl bh
cmc
add eax edi
push edi
pushad
clc
cmp ch dl
cmp eax edx
call sub_100abb02
mov [ ebp - 0x4 ] eax
push eax
pushad
mov [ esp ] ch
pushfd
xchg [ esp + 0x28 ] eax
not eax
pushfd
mov [ esp + 0x28 ] 0x0
lahf
mov ah dh
bswap ax
mov ah 0xbb
lea eax [ LocalAlloc@IAT ]
call sub_100f607e
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_101337a6
mov [ esp ] 0x5a
movsx ax cl
lea eax [ edi - 0x7d22f868 ]
mov eax [ esp + 0x8 ]
mov [ esp + 0x4 ] 0xb5
pushfd
pushad
lea esp [ esp + 0x30 ]
ja rwxdata
jmp rwxdata
push edi
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
pushad
test bl 0x4d
cmp [ edi - 0x1 ] 0x0
pushad
jmp rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
jmp rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
push ebp
jmp rwxdata
lea esp [ esp + 0x40 ]
jne rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
jmp rwxdata
push eax
xor di 0xb8e6
mov edi [ edx + 0x24 ]
pushad
call sub_100f5575
clc
mov edi [ edi + ecx * 4 ]
test edi 0xc1a9a485
test edi edi
pushfd
mov [ esp ] 0xe7
jmp rwxdata
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
lea esp [ esp + 0x2c ]
je rwxdata
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
call sub_100ecce8
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
bt edx 0xc
jbe rwxdata
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
stc
stc
stc
stc
add eax edi
call sub_100ada26
adc al 0xca
jno 0xffffffffe4dce1c8
test bx di
push edx
add eax edi
stc
cmp ah 0xc3
cmp eax edx
pushfd
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

nop
je rwxdata
mov [ esp + 0x4 ] 0x99
lea esp [ esp + 0x8 ]
jb rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

arpl [ edi ] si
dec eax
pop edx
xor al [ esi ]
cmc
mov bh 0xa
iretd
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
clc
stc
clc
push ebp
cmp eax [ ebp - 0x10 ]
pushfd
pushfd
lea esp [ esp + 0xc ]
jae rwxdata
cmp al 0xba
jge rwxdata
pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
rol cx 0xd
rcr bx cl
xadd bx di
mov ebx eax
not di
mov edi eax
jmp rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
cmc
stc
shl ecx 0x1e
mov ecx 0x104
jmp rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xor al al
call sub_10136a22
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_101340f4
not bl
inc ecx
mov bl al
xchg ebp eax
shr eax cl
rol bl cl
mov eax ebp
adc bl cl
shr bl 0x1
shl bl 0x7
rcl bl cl
mov bl 0x1
pushfd
cmp si ax
mov [ esp + 0x4 ] esi
or si 0x1e24
rol si 0x3
movsx si al
not si
mov esi edi
cmc
pushfd
stc
mov [ esp ] 0x48814332
sub esi eax
pushfd
lea esp [ esp + 0xc ]
je rwxdata
pushad
pushfd
[ edi ] [ esi ]
jmp rwxdata
push eax
push [ esp ]
[ edi ] [ esi ]
pushfd
movzx esi bl
mov esi [ esp + 0xc ]
pushfd
push 0x42641cc2
pushfd
mov [ esp ] bh
lea esp [ esp + 0x1c ]
jmp rwxdata
mov esi [ esp + 0x24 ]
mov [ esp ] 0xe4
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
call sub_100ec890
sub_101345ea
mov [ esp ] 0xa4844c2
mov eax [ edx + 0x8 ]
pushad
pushad
mov [ esp ] 0xc0
lea esp [ esp + 0x44 ]
jmp rwxdata
pushad
jmp rwxdata
pushfd
or ebx ebx
push [ esp + 0xc ]
lea esp [ esp + 0x28 ]
je rwxdata
lea ebx [ esi * 4 - 0x14f9b5f0 ]
pop edi
mov si bx
setpe bh
jmp rwxdata
call sub_100ab330
add edi eax
cmc
push esi
stc
stc
mov edi [ edi + ecx * 4 ]
cmc
pushad
test edi edi
jmp rwxdata
pop esi
pushfd
setl bh
push 0x264a9a27
mov ebx [ esp + 0x8 ]
mov [ esp + 0x8 ] ah
jmp sub_1013560b
lea esp [ esp + 0x30 ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
test bl bh
cmc
add eax edi
push edi
pushad
clc
cmp ch dl
cmp eax edx
call sub_100abb02
mov [ ebp - 0x4 ] eax
push eax
pushad
mov [ esp ] ch
pushfd
xchg [ esp + 0x28 ] eax
not eax
pushfd
mov [ esp + 0x28 ] 0x0
lahf
mov ah dh
bswap ax
mov ah 0xbb
lea eax [ LocalAlloc@IAT ]
call sub_100f607e
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_101347b4
pushfd
mov [ esp ] 0xb
push ebp
lea eax [ rwxdata ]
call sub_100aa15a
and bh al
or eax [ ebp - 0x2b328dcd ]
mov [ esi + 0x22 ] dl
cli
enter 0x7f1c 0x49
xor al 0xe8
movsb [ edi ] [ esi ]
jle rwxdata
xor [ esi ] cl
test ah bl
add [ ebx - 0x2f22b554 ] 0xbc
mov ecx 0x61ffdeee
dec edx
aam 0xee
push esp
sub ah ah
push ebp
pop es
outsd
sub al 0xed
mov [ 0x338d977e ] al
sbb [ edi + 0x206b84fa ] 0x255db1f8
sub [ ecx ] bl
retn
sub_10134a2e
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
pushad
cmc
add eax edi
test ax si
clc
call sub_1013b250
mov ebx eax
bswap ax
setle al
cwde
lea eax [ ebp - 0x8 ]
jmp sub_100ad281
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_10134bfe
stc
add ecx 0x1
pushfd
push 0xa7434492
mov [ ebp - 0x8 ] ecx
pushfd
pushfd
push 0xfaf5da59
lea esp [ esp + 0x1c ]
jmp rwxdata
shl ch cl
mov ecx [ ebp - 0x8 ]
pushad
add ecx [ ebp - 0x4 ]
shr di 0x8
bsr si bp
shr ecx 0x1
not esi
sar si 0x4
bsr si sp
bsr di bp
mov edi [ ebx + ecx * 4 ]
inc si
add edi eax
jmp rwxdata
jmp sub_100f5565
sub_10134d14
lea esp [ esp + 0x8 ]
jl rwxdata
push esi
jmp rwxdata
pushad
lea esp [ esp + 0x4 ]
je rwxdata
dec di
adc di 0x4bfd
bswap ecx
and al dh
mov edi edx
lea ecx [ 0xffffffffb5ac92ac ]
btc cx 0x3
dec cl
inc cl
mov ecx edi
pushad
shl al cl
mov al [ ecx ]
push ecx
pushfd
jmp sub_1013af51
push ebx
sub al 0x30
clc
cmp al 0x9
pushad
pushad
pushfd
bt dx 0xa
clc
sub al 0x30
jmp rwxdata
pushfd
lea esp [ esp + 0x24 ]
je rwxdata
jle rwxdata
test dx 0xd7ad
pushfd
lea esp [ esp + 0x4 ]
js rwxdata
pop ebx
bound esp [ esi + 0x559a43c ]
mov ebp 0xa2c5cec0
sub al 0x6f
xor edi esp
sahf
cli
jb rwxdata
cmp sp 0x7ba3
cmp al 0x9
jmp j_sub_100add3f
cmp al 0x9
push 0xc84a0a4f
mov [ esp ] al
lea esp [ esp + 0x4 ]
ja rwxdata
insb
out 0xab al
push ecx
aas
fwait
add al bl
arpl [ edi ] dx
out 0x67 eax
mov esi 0xa4de7cca
adc dh [ edx ]
xchg esp eax
pushad
in al dx
sub al 0xf9
mov bh 0x5a
jpe rwxdata
loopne rwxdata
xlat
xchg ebx eax
jpo rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0x4
mov esp esi
push 0x7ffff56e
mov [ esp ] 0x23
lea esp [ esp + 0x4 ]
jmp rwxdata
pushad
pushad
imul edx edx 0xa
stc
call sub_1013b240
das
int3
mov edi 0xe0cfad77
in eax 0x89
sub [ eax + edx * 2 ] esi
jle rwxdata
mov ebx 0x1f9a7ccf
sub eax 0x56d37256
xchg esi eax
xor [ 0xffffffffb7f4f283 ] bl
arpl [ ebx ] di
mov ecx 0xc985a824
adc [ eax ] ebx
pop edx
mov ebp 0x1c19396f
mov dl 0x98
jbe rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
and al 0xec
js rwxdata
0x53ab738a 0x221b
call sub_1013b0d5
xchg edx eax
js rwxdata
daa
rcl al 0x87
hlt
in eax 0xa7
jns rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
sub [ esi ] dl
push 0xffffffc4
mov [ edi - 0x5211a7af ] fs
jns rwxdata
xchg ecx eax
lea esp [ esp + 0x14 ]
call sub_100e7ab5
popfd
pop ds
loop rwxdata
add eax 0x11db048d
sub bl [ ebx ]
xlat
mov [ 0x1282d27f ] eax
out dx eax
pop esp
pop ecx
pop esp
outsd
jno rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
loopne rwxdata
loop rwxdata
push ds
ror [ edi + 0x44cc3ca6 ] cl
inc eax
adc [ edx ] esp
test al 0xe5
lea edi [ esi + 0x10 ]
mov [ 0xffffffffd4aca171 ] eax
insb
pop esi
mov [ edx ] ss
xlat
mov esp [ edi ]
sub edi [ eax + 0x5a ]
adc al 0x12
les eax [ 0x11db048d ]
cmp edi [ ecx - 0x367a57dc ]
jns rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
jge rwxdata
inc ebp
or cl dh
cmp al 0xe1
fucomip st1
loope rwxdata
mov [ ecx ] ebp
xor al 0x50
add eax 0x3e4b1376
jmp 0xffffffffed729903
test al 0x85
leave
and dh [ edx + 0x28583dbd ]
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
fidiv [ eax + 0x38a5822a ]
movsb [ edi ] [ esi ]
xchg [ esi + 0x3e ] ebx
and [ 0xffffffffe66696da ] esp
pushad
or dl dl
ficomp [ ebx ]
mov edx 0xd32702ad
test eax 0xb8589a72
push ecx
cmp [ ebx + 0x34 ] ebx
jmp 0xfffffffff62e0b90
stosd [ edi ]
push ebx
sbb esp [ edx ]
0xa3f2
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_10135634
lea esp [ esp + 0x2c ]
ja rwxdata
jmp rwxdata
inc bl
jmp rwxdata
not bl
and bl bh
rcl bl 0x1
xchg ebp eax
push esp
mov eax ebp
not bl
setb bl
mov bl 0x1
add esp 0x4
stc
pushfd
pushad
cmp cl 0x96
xchg [ esp + 0x20 ] esi
add si 0xbeb
mov esi edi
cmp ax di
sub esi eax
pushfd
call sub_100f6fe0
inc ecx
dec bl
setge bl
call sub_101340f4
sub_1013585c
mov esi [ esp + 0x8 ]
movsx di dl
mov edi [ esp + 0xc ]
movsx cx cl
mov ebx [ esp + 0x10 ]
push [ esp + 0x4 ]
bswap cx
mov ecx [ esp + 0x18 ]
call sub_100abb07
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_10136891
lea esp [ esp + 0x28 ]
ja rwxdata
jmp rwxdata
mov bl dl
inc ecx
not bl
jmp rwxdata
not bl
and bl bh
rcl bl 0x1
xchg ebp eax
push esp
mov eax ebp
not bl
setb bl
mov bl 0x1
add esp 0x4
stc
pushfd
pushad
cmp cl 0x96
xchg [ esp + 0x20 ] esi
add si 0xbeb
mov esi edi
cmp ax di
sub esi eax
pushfd
call sub_100f6fe0
pushfd
call sub_100f0dae
sub_10136a22
pushad
[ edi ]
mov [ esp + 0x4 ] 0x78
jmp rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
neg ch
bsr cx ax
ror esi cl
clc
mov ecx edi
push 0x44986f6f
movzx si cl
pushad
sub ecx ebx
call sub_100ac6d0
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_1013733c
call sub_100e833d
fwait
jns rwxdata
xchg ebp eax
pop es
jb rwxdata
mov esp 0xb2b9373e
cmp ch [ ebx + 0x73 ]
add [ edx - 0x12c8d536 ] ecx
dec edi
and eax 0x2affd2b9
ror [ edx - 0x68 ] 0x6e
add cl [ ecx + 0x5 ]
sar [ 0xffffffff8d9778e2 ] 0x1
and eax 0xfb5f0ae8
les edx [ ebp - 0x3d33f1d3 ]
sub_10137a84
mov [ esp ] ebp
aam 0x3f
mov ebp esp
aaa
sub esp 0x18
rcl ah 0x6
lahf
push esi
bsr ax ax
shr ax cl
sub ah dh
push edi
shld ax sp 0x2
inc ax
lahf
push ebx
pushfd
sbb ah 0xb1
shld ax di cl
xor ah ah
mov [ esp ] edx
movzx ax dl
aas
stc
test bl 0xc5
mov eax [ ebp + 0x8 ]
cmp ch ah
jmp rwxdata
test eax eax
jmp rwxdata
jmp rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
shld si ax cl
sub dx 0x511b
mov esi [ eax + 0x3c ]
shl dl 0x4
pushfd
add edx 0x4bd5ab88
add esi eax
shr dx cl
call sub_100f20d1
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_10137ba1
lea esp [ esp + 0x30 ]
jne rwxdata
jmp rwxdata
clc
bts di bp
shl di cl
movzx di dl
mov edi [ edx + 0x24 ]
pushad
cmc
add edi eax
cmc
stc
movzx ecx [ edi + ecx * 2 ]
pushfd
mov edi [ edx + 0x1c ]
call sub_101388b6
daa
out 0x4d eax
adc eax 0x44cd7200
clc
fcmovb st3
popfd
lodsb [ esi ]
push esi
dec ecx
pop es
in eax dx
retn
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
jmp rwxdata
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
push ebp
jmp rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
call sub_100ecce8
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
cmp al 0xba
jge rwxdata
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_10137cce
push ebx
xchg [ esp + 0x24 ] eax
movzx ax bl
mov [ esp + 0x20 ] 0x0
mov [ esp ] 0xf2
pushfd
lea esp [ esp + 0x24 ]
jbe rwxdata
jmp rwxdata
lea eax [ LocalAlloc@IAT ]
jb rwxdata
pushfd
pop eax
lea eax [ LocalAlloc@IAT ]
push edi
pushfd
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
jno rwxdata
pushad
mov [ esp + 0x1c ] rwxdata
push 0x2fbb59a9
call sub_100ab458
cmp edi esi
mov [ esp + 0x4 ] rwxdata
pushfd
call sub_101382da
xchg [ eax + ecx - 0x4a ] al
adc al 0x72
int 0x9f
pop ebx
and [ esi + 0x70857344 ] ebx
sub [ ebx ] cl
pushad
mov [ esp + 0x1c ] rwxdata
pushad
push [ eax ]
pop [ esp + 0x38 ]
mov [ esp ] 0x6b32
mov [ esp + 0x20 ] bh
push [ esp + 0x38 ]
retn 0x3c
push ebp
mov [ esp ] rwxdata
jmp rwxdata
xchg bl cl
jne rwxdata
push es
sbb al 0xcf
imul ecx [ esi + 0x30f5a57d ] 0x11
mov edx 0x6d61815a
dec edi
push edx
mov ebp 0xc1fb95a7
mov ecx 0xafe5046c
xchg ecx eax
inc esp
adc al 0x19
lodsd [ esi ]
xchg [ esi ] ch
push ss
cld
mov al [ 0xffffffffa9e81e6c ]
ja rwxdata
push edx
pushad
call sub_100aa53d
push eax
xor eax 0x44486e3d
mov bl 0x69
push edx
ficom [ esi + 0x1a ]
loopne rwxdata
sar [ edx + 0x607d4a94 ] 0x57
pop ds
pushfd
0x115a6e46 0xde85
dec ecx
or eax 0xb7bd880c
lea ecx [ ebp + 0x25 ]
in eax 0x9b
jns rwxdata
inc ebp
shr cl 0x1
xchg [ eax - 0x7e361adf ] edx
pop esp
jle rwxdata
aam 0x6c
mov ebp 0x9c324579
adc esi [ eax + 0x30 ]
add esi [ eax + 0x32 ]
mov eax 0xe83c7957
mov dh 0xc1
mov dl 0xee
fsub [ ecx - 0x33112dd5 ]
sub [ ebp - 0x4 ] ebx
mov al [ 0xffffffffca326d9b ]
pushad
and al 0xeb
lahf
jns rwxdata
stc
mov ebx 0x2c7a5e9b
fnstcw [ edi + 0xa054687 ]
fild [ ebx ]
loope rwxdata
dec edx
pop esp
pop ss
xor edi [ edx ]
mov al [ 0x38085d3f ]
cmp [ ecx + 0x16 ] ebp
retn
xor dl bl
idiv esp
and cl [ ebx ]
fwait
push 0xd
cmpsd [ esi ] [ edi ]
fdivp st6
jle rwxdata
push es
mov [ 0xffffffffd56b92a1 ] al
inc ebx
adc eax 0x89647de5
test eax 0xae014792
adc al 0x4a
inc ecx
sbb [ edx + 0x33 ] 0x4687bfd9
add eax 0xe103db0a
mov ebp 0x85fa47a2
mov dh 0x63
out dx eax
scasd [ edi ]
pushad
sbb al 0xe8
push 0xf69507a
adc ah [ eax - 0x25f7f829 ]
mov eax [ 0x26eb70ab ]

mov [ fs : ecx - 0x51feb86e ] ebp
mov esi 0x28c67d2a
sub_10137de1
movsx ax dl
pushad
lea eax [ eax * 4 + 0x70505cfe ]
lea eax [ rwxdata ]
pushad
push 0x3d7f9ec4
mov [ esp + 0x4 ] 0x5a
mov [ esp + 0x44 ] rwxdata
push [ esp + 0x4 ]
call sub_10138616
imul esi [ ebx ] 0x71fcb7ab
int 0x9e
pop edx
cmp ah bl
cmpsb [ esi ] [ edi ]
jbe rwxdata
scasd [ edi ]
inc ebp
cmp eax 0x6b9dc5c9
sub eax 0x71a7cbf5
push 0xfffffff4
sub_101384bb
add al 0x5c
mov [ esp + 0x4 ] 0xfe
neg al
push 0xa50c80c4
push edx
mov [ esp + 0xc ] 0x5a45
sub al 0xf
mov [ esp + 0x4 ] 0xfed3
ror al 0x2
stc
add al 0xb3
push 0xbd8facd4
pushad
lea esp [ esp + 0x3c ]
call sub_101379c5
sub_101384f4
mov [ esp ] dl
pushad
mov [ esp ] 0xc0
mov [ ebp - 0x8 ] ecx
push [ esp ]
pushfd
push [ esp + 0x4 ]
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
shl ch cl
mov ecx [ ebp - 0x8 ]
pushad
add ecx [ ebp - 0x4 ]
shr di 0x8
bsr si bp
shr ecx 0x1
not esi
sar si 0x4
bsr si sp
bsr di bp
mov edi [ ebx + ecx * 4 ]
inc si
add edi eax
jmp rwxdata
jmp sub_100f5565
sub_10138511
lea esp [ esp + 0x24 ]
jne rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0x4
mov esp esi
push 0x7ffff56e
mov [ esp ] 0x23
lea esp [ esp + 0x4 ]
jmp rwxdata
lahf
push 0x49f4c837
movsx eax al
mov [ edi - 0x1 ] 0x0
push 0xfad6b627
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
mov [ esp + 0x4 ] ebx
mov [ esp ] 0x3b
enter 0x49f4 0xf
mov esi 0xff47c6c0
add [ eax + 0x27 ] ch
mov dh 0xd6
cli
clc
lodsb [ esi ]
xchg edx eax
xchg [ ebx + 0x74 ] edx
mov gs ax
test al 0x6e
dec eax
shl [ ecx + 0x31 ] 0x1d
pxor mm2 mm5
mov ch 0x6b
and ebp ebx
mov edi 0xc4f82ea4
sar [ 0xffffffffd0c2f8d0 ] 0x97
push ebx
and [ esi ] esp
mov esp 0x4c408567
xchg esp eax
mov eax 0xfa58d946
cmp ah [ ebp - 0x1aac7d4b ]
loopne rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
lea eax [ rwxdata ]
mov [ esp ] ch
mov [ esp ] rwxdata
call sub_100afb14
ror [ ebp + 0x1 ] 0x61
cmc
jno rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_101388b6
stc
add edi eax
jmp rwxdata
clc
mov edi [ edi + ecx * 4 ]
test edi 0xc1a9a485
test edi edi
pushfd
mov [ esp ] 0xe7
jmp rwxdata
lea esp [ esp + 0x2c ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
bt edx 0xc
jbe rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
stc
stc
stc
stc
add eax edi
call sub_100ada26
adc al 0xca
jno 0xffffffffe4dce1c8
test bx di
push edx
add eax edi
stc
cmp ah 0xc3
cmp eax edx
pushfd
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
nop
je rwxdata
mov [ esp + 0x4 ] 0x99
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
arpl [ edi ] si
dec eax
pop edx
xor al [ esi ]
cmc
mov bh 0xa
iretd
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
clc
stc
clc
push ebp
cmp eax [ ebp - 0x10 ]
pushfd
pushfd
lea esp [ esp + 0xc ]
jae rwxdata
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
rol cx 0xd
rcr bx cl
xadd bx di
mov ebx eax
not di
mov edi eax
jmp rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
cmc
stc
shl ecx 0x1e
mov ecx 0x104
jmp rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
xor al al
call sub_10136a22
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_10139dbe
test dh 0x5e
mov [ ecx ] al
cmp ebp 0xd339b9a2
add ecx 0x1
clc
call sub_100edc1c
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
push ebp
jmp rwxdata
lea esp [ esp + 0x28 ]
jne rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
call sub_100ecce8
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

add al ch
adc ch dl
retn 0x43cc
xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_10139e29
lea esp [ esp + 0x10 ]
ja rwxdata
jmp rwxdata
pushfd
pushfd
jmp rwxdata
not bl
and bl bh
rcl bl 0x1
xchg ebp eax
push esp
mov eax ebp
not bl
setb bl
mov bl 0x1
add esp 0x4
stc
pushfd
pushad
cmp cl 0x96
xchg [ esp + 0x20 ] esi
add si 0xbeb
mov esi edi
cmp ax di
sub esi eax
pushfd
call sub_100f6fe0
inc ecx
push 0x7dfecb33
inc ecx
cmp di 0x22dc
sbb bl 0x23
pushad
adc bl bl
xchg ebp eax
sbb ah 0xf5
aam 0x23
shr eax cl
mov eax ebp
ror bl 0x2
not bl
and bl ch
mov bl 0x1
test al ch
mov [ esp ] bp
mov [ esp + 0x28 ] esi
ror si cl
mov si cx
rcl si 0x4
movzx si cl
mov esi edi
cmc
push 0x8390ce05
stc
test di 0xd5ef
sub esi eax
mov [ esp + 0x8 ] di
pushfd
[ edi ] [ esi ]
lea esp [ esp + 0x30 ]
ja rwxdata
call sub_100ed229
bswap si
push 0x9f174955
mov esi [ esp + 0x4 ]
mov [ esp ] 0x68
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
call sub_100ec890
sub_1013a1db
mov [ esp ] 0xd9
cmp ebx 0x2
lea esp [ esp + 0x4 ]
jne rwxdata
pushfd
jmp sub_100f5861
pushfd
pushad
lea esp [ esp + 0x24 ]
je rwxdata
bsf bx si
xor bl dh
cmp bl 0x5d
mov bx [ esi ]
pushfd
and ebx 0xfff
mov [ esp ] ah
push [ esp ]
push [ esp ]
jmp rwxdata
pushad
cmp al 0xf0
cmp ebx 0x3
lea esp [ esp + 0x20 ]
jge rwxdata
add [ ebx + edi ] dx
pushfd
mov [ esp + 0x4 ] 0x1f5f
lea esp [ esp + 0x10 ]
jmp rwxdata
pushfd
pushad
mov [ esp ] dh
mov [ esp + 0x4 ] al
lea esp [ esp + 0x24 ]
je rwxdata
pushad
push ebp
mov [ esp + 0x4 ] 0xee
lea esp [ esp + 0x24 ]
je rwxdata
cmc
add esi 0x2
pushfd
push [ esp ]
dec ecx
pushfd
pushfd
mov [ esp ] 0xdb9b
mov [ esp ] 0x62
lea esp [ esp + 0x10 ]
jne rwxdata
bts bx 0x8
mov bx [ esi ]
cmp bh 0x11
pushad
mov [ esp + 0x8 ] 0xdb
and ebx 0xfff
test eax ebx
stc
call sub_100acbb4
push 0x36
mov eax 0xcd7610aa
stosd [ edi ]
and eax 0xdcfea472
mov cl 0x6f
0x2161749e 0xaa1e
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
push esp
pushad
push [ esp + 0xc ]
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
bsr bx bx
setg bh
mov bx [ esi ]
call sub_100ebb53
push esi
or al dh
pushfd
sar [ edx - 0x33 ] 0x1
pop cx
or eax 0x3e0cbfe1
mov ch 0x5f
dec ecx
or [ eax ] ebx
retn 0x9ac4
sbb cx 0x3808
mov cx di
xor cx 0x7716
movsx cx al
mov ecx [ ebp - 0x4 ]
stc
pushad
cmp [ ebp + 0x14 ] ecx
jmp rwxdata
pushad
lea esp [ esp + 0x40 ]
ja rwxdata
rcl ch cl
or cx cx
lea ecx [ ebp + 0x4cb2e7f5 ]
mov ecx [ esi + 0x4 ]
test edx ecx
cmp ecx 0x666e62d7
cmp bx 0x88d5
or ecx ecx
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
pushfd
bswap si
xchg si di
call sub_1013585c
adc dh dl
shl di cl
add [ ebp - 0x4 ] ecx
bts di 0x6
sbb di sp
cmp ah bh
ror bh 0x6
sub ecx 0x8
shl edi cl
rol bl cl
not bl
shr ecx 0x1
inc bl
mov edi [ esi ]
xor bh 0xbd
add edi [ ebp + 0x10 ]
cmp cl dl
btc bx bp
sub bh 0x7e
btc bx 0x2
add esi 0x8
sub_1013a229
mov [ esp + 0x8 ] 0x707e41c5
pushad
mov [ esp ] di
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
pushfd
pushad
mov [ esp ] 0x62e7
mov [ esp + 0x20 ] edx
push 0x494ef5fb
pushfd
pop [ esp + 0x20 ]
jmp rwxdata
push ebp
pushfd
lea esp [ esp + 0x28 ]
push esp
pushad
jmp rwxdata
mov [ esp + 0x1c ] eax
pushad
pushfd
mov [ esp ] ch
mov [ esp + 0x3c ] edi
push 0x64406dd
jmp rwxdata
push [ esp ]
pushfd
mov [ esp + 0x44 ] ebp
pushfd
mov [ esp ] 0x4a
mov [ esp + 0x44 ] esi
call sub_1013dd96
sub_1013ada4
push [ esp ]
lea esp [ esp + 0x8 ]
jne rwxdata
call sub_100f74cd
jmp rwxdata
push 0xfa485e3f
cwde
bswap eax
mov eax [ edx + 0x8 ]
pushfd
pushfd
pushad
push edx
lea esp [ esp + 0x30 ]
jmp rwxdata
pushad
jmp rwxdata
pushfd
or ebx ebx
push [ esp + 0xc ]
lea esp [ esp + 0x28 ]
je rwxdata
lea ebx [ esi * 4 - 0x14f9b5f0 ]
pop edi
mov si bx
setpe bh
jmp rwxdata
call sub_100ab330
add edi eax
cmc
push esi
stc
stc
mov edi [ edi + ecx * 4 ]
cmc
pushad
test edi edi
jmp rwxdata
pop esi
pushfd
setl bh
push 0x264a9a27
mov ebx [ esp + 0x8 ]
mov [ esp + 0x8 ] ah
jmp sub_1013560b
lea esp [ esp + 0x30 ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
test bl bh
cmc
add eax edi
push edi
pushad
clc
cmp ch dl
cmp eax edx
call sub_100abb02
mov [ ebp - 0x4 ] eax
push eax
pushad
mov [ esp ] ch
pushfd
xchg [ esp + 0x28 ] eax
not eax
pushfd
mov [ esp + 0x28 ] 0x0
lahf
mov ah dh
bswap ax
mov ah 0xbb
lea eax [ LocalAlloc@IAT ]
call sub_100f607e
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_1013af5b
pushfd
pushfd
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
call j_sub_100f16a6
xchg ecx eax
jmp rwxdata
pushad
dec eax
pushfd
cmc
push [ esp + 0x4 ]
shl eax 0x8
not al
lea esp [ esp + 0x28 ]
jno rwxdata
pushfd
mov [ esp ] dl
lodsb [ esi ]
mov [ esp ] cl
inc al
cmp esp 0x7df0b47c
pushad
push ebx
test bx 0xc778
neg al
lea esp [ esp + 0x28 ]
jle rwxdata
lodsb [ esi ]
pushad
pushfd
pushad
inc al
call sub_100f0c69
push ebp
pushfd
pushfd
rol al 0x6
jmp rwxdata
push edi
pushfd
pushfd
rol al 0x6
pushfd
add al 0x5c
test dh bh
bt ax di
neg al
call j_sub_100ee3d8
test cl 0xf5
call sub_101384bb
sub_1013af7d
not al
seto al
inc al
inc ecx
pushad
setne al
not al
mov al 0x10
lea esp [ esp + 0x24 ]
push 0x6754a85b
pushad
jmp rwxdata
call sub_100ac715
sub_1013b0d5
lea esp [ esp + 0x4c ]
ja rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0x4
mov esp esi
push 0x7ffff56e
mov [ esp ] 0x23
lea esp [ esp + 0x4 ]
jmp rwxdata
cmc
clc
call sub_100ed265
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_1013b350
call sub_100f2948
push [ esp ]
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
cmc
pushfd
sub eax eax
add esp 0x4
pushad
jmp rwxdata
jmp rwxdata
pushfd
or ebx ebx
push [ esp + 0xc ]
lea esp [ esp + 0x28 ]
je rwxdata
jmp rwxdata
lea ebx [ esi * 4 - 0x14f9b5f0 ]
pop edi
mov si bx
setpe bh
jmp rwxdata
call sub_100ab330
add edi eax
cmc
push esi
stc
stc
mov edi [ edi + ecx * 4 ]
cmc
pushad
test edi edi
jmp rwxdata
pushad
mov [ ebp - 0x4 ] eax
call sub_10137cce
pop esi
pushfd
setl bh
push 0x264a9a27
mov ebx [ esp + 0x8 ]
mov [ esp + 0x8 ] ah
jmp sub_1013560b
lea esp [ esp + 0x30 ]
je rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
test bl bh
cmc
add eax edi
push edi
pushad
clc
cmp ch dl
cmp eax edx
call sub_100abb02
mov [ ebp - 0x4 ] eax
push eax
pushad
mov [ esp ] ch
pushfd
xchg [ esp + 0x28 ] eax
not eax
pushfd
mov [ esp + 0x28 ] 0x0
lahf
mov ah dh
bswap ax
mov ah 0xbb
lea eax [ LocalAlloc@IAT ]
call sub_100f607e
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_1013b868
lea esp [ esp + 0xc ]
ja rwxdata
jmp rwxdata
pushad
pushad
inc ecx
pushfd
inc ecx
mov bl cl
xchg ebp eax
cwde
mov eax ebp
neg bl
dec bl
adc bl bh
mov bl 0x1
pushfd
push [ esp + 0x8 ]
cmc
mov [ esp + 0x48 ] esi
neg si
mov esi edi
jmp rwxdata
not bl
and bl bh
rcl bl 0x1
xchg ebp eax
push esp
mov eax ebp
not bl
setb bl
mov bl 0x1
add esp 0x4
stc
pushfd
pushad
cmp cl 0x96
xchg [ esp + 0x20 ] esi
add si 0xbeb
mov esi edi
cmp ax di
sub esi eax
pushfd
call sub_100f6fe0
sub esi eax
push 0x12c74ed9
mov [ esp + 0x8 ] 0xc6
pushfd
mov [ esp + 0x8 ] bl
[ edi ] [ esi ]
jmp rwxdata
movzx si dl
movzx si dl
mov esi [ esp + 0x50 ]
mov [ esp ] bl
lea esp [ esp + 0x54 ]
jmp rwxdata
jmp rwxdata
call sub_100ec890
sub_1013ba2c
pushfd
mov [ esp + 0x4 ] 0xbc
lea esp [ esp + 0xc ]
jne rwxdata
pushad
jmp rwxdata
mov dl 0xe9
pushf
mov dl 0x21
not dl
mov dl [ esi ]
jmp rwxdata
call sub_10138e3c
cmp dl [ edx ]
shl [ edx + 0x60cd76fa ] 0x53
adc eax [ ebx ]
fbld [ ecx + 0x2e275771 ]
pushad
jmp rwxdata
inc dl
pushfd
neg dl
clc
push 0x6aa09035
push [ esp + 0x8 ]
rol dl 0x6
pushfd
add dl 0x5c
clc
push esp
neg dl
mov [ esp + 0x4 ] 0x9e
sub dl 0xf
push [ esp ]
ror dl 0x2
test bl dh
add dl 0xb3
test dh bh
cmp bl 0x1d
push [ esp + 0x38 ]
popf
push ebp
call j_sub_100f5523
nop
pop edx
int3
sub_1013ba4b
push [ esp ]
lea esp [ esp + 0x28 ]
jne rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0x4
mov esp esi
push 0x7ffff56e
mov [ esp ] 0x23
lea esp [ esp + 0x4 ]
jmp rwxdata
not ah
lea eax [ ecx * 8 - 0x5228454c ]
pushfd
push ebx
mov [ edi - 0x1 ] 0x0
cwde
mov [ esp + 0x4 ] ebx
pushad
lea eax [ edx * 8 + 0x75d38de7 ]
lea eax [ eax * 2 - 0x4dde9820 ]
lea eax [ rwxdata ]
mov [ esp + 0x8 ] dx
pushad
push edx
jmp rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
mov [ esp + 0x44 ] rwxdata
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
jmp rwxdata
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
pushfd
mov [ esp + 0x48 ] eax
push [ esp ]
push [ esp + 0x4c ]
retn 0x50
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_1013bcfd
lea esp [ esp + 0x34 ]
jne rwxdata
add bh dl
setpe dl
inc bh
inc edx
sub eax eax
setno bl
pop edx
movsx si bl
pop ebx
not si
pop edi
bswap si
mov esi ecx
mov si si
pop esi
call sub_100afaf3
mov [ esp ] 0x822defcc
sub al 0x47
cmc
xor al 0x1c
stc
bt esp 0x13
jmp rwxdata
shl esi 0x6
stc
mov ecx edi
movsx si al
rol si cl
adc si 0x44a5
bsf si cx
sub ecx ebx
neg si
shl si cl
bsf si bp
sub esi 0x7b18461b
mov esi esp
cmc
bt ebp esi
cmp ah ah
pushad
sub edi 0x4
jmp rwxdata
bt edi 0x6
neg al
cmc
sub al 0xc2
sub esp 0xfffffffc
jne rwxdata
push [ edi ]
pop [ esp + 0x1c ]
pushad
call sub_1013b51c
jmp rwxdata
not al
push 0x6afa121b
cmc
cmp al ah
cmp al [ edi ]
mov [ esp ] 0xd7
push ebp
bswap ax
lea edi [ edi + 0x1 ]
bswap eax
not ah
setb ah
bswap ax
mov eax [ esp + 0x8 ]
pushfd
pushad
mov [ esp ] ax
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
cmc
mov [ esp ] bh
not al
clc
bt sp bx
cmp al [ edi ]
mov al bl
lea edi [ edi + 0x1 ]
call sub_101337a6
jmp rwxdata
call sub_100ecce8
pushad
mov [ esp ] eax
bt di 0xc
cmp ecx [ ebp - 0x4 ]
lea esp [ esp + 0x20 ]
jpo rwxdata
pushad
mov [ esp ] 0xa4bf0a50
call sub_100eb6ee
clc
not al
push [ esp ]
stc
cmp al [ edi ]
bswap ax
setle al
lea edi [ edi + 0x1 ]
lea eax [ esi * 8 + 0x78060c62 ]
push [ esp ]
movsx ax dl
movsx eax bl
mov eax [ esp + 0x10 ]
pushad
jmp rwxdata
jae rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
push ebp
jmp rwxdata
pushad
mov [ esp + 0x4 ] ah
push ebx
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
call sub_10134bfe
push 0x22
nop
rol [ eax + 0x4487cd7a ] cl
push ds
sub eax 0x6c09b5c9
call 0x173e71cd
pushfd
cmc
cmp ecx [ ebp - 0x8 ]
call sub_100e8373
jmp rwxdata
ja rwxdata
fcom [ eax + 0x3f ]
xlat
retn
push 0x53168054
cmp [ edi - 0x1 ] 0x0
pushfd
pushad
mov [ esp ] sp
jmp rwxdata
out 0x9c eax
int 0xd1
mov edi 0x43993a74
xor eax 0x6db1db0d
pop ecx
jbe rwxdata
pop es
lea esp [ esp + 0x28 ]
jne rwxdata
and [ esi - 0x183827e2 ] 0xb9
0xa3d2a42f 0x2935
xchg edi eax
imul [ edi + 0x5497cab2 ]
or al 0x96
pop ecx
popfd
push edi
add ebp [ esi ]
add eax [ ebx - 0x732c68d3 ]
jmp rwxdata
btr di 0xa
movsx di cl
stc
lea edi [ ecx * 4 - 0x1d686378 ]
mov edi [ edx + 0x24 ]
bt cx 0x5
pushfd
jmp rwxdata
or al 0xdd
xchg ecx eax
jge rwxdata
add eax [ cs : ebx - 0x732c68d3 ]
push cs
sub ah bl
cmc
movsb [ edi ] [ esi ]
loope rwxdata
and [ edi + ebx * 2 - 0x50 ] al
popfd
fwait
scasd [ edi ]
pop esp
jle rwxdata
sahf
pushad
cmp ebp edi
into
lahf
and eax [ ecx - 0x18de54c7 ]
pushfd
int 0x39
fwait
jns rwxdata
[ esi ] [ edi ]
fimul [ 0xffffffffca90f312 ]
dec ebx
popad
mov cl 0xe2
mov edx 0x489ce3bb
or dl [ ecx - 0x46 ]
add esi edi
ror [ eax + 0x6e7465c5 ] cl
cdq
mov [ eax + ebp * 4 ] ebp
cmp ch dh
mov esi 0xd3f1694a
in al 0x6e
std
or edx [ edx - 0x70 ]
mov edi 0xa6820681
push ds
fadd st7
out 0xb9 eax
push 0x58305d0d
mov [ esp ] eax
jl rwxdata
cmc
add al ch
adc ch dl
retn 0x43cc
pushfd
pushfd
pushad
jmp rwxdata
mov al al
pushfd
lodsb [ esi ]
cmp al 0xba
jge rwxdata
lodsb [ esi ]
mov [ esp ] sp
cmp bh 0xba
clc
not al
push [ esp + 0x8 ]
neg al
cmp bp 0x99d1
mov [ esp + 0xc ] 0x5
jmp rwxdata
test cl ah
not al
test cl dl
bt sp di
jmp rwxdata
stc
not al
clc
neg al
stc
pushfd
sub al 0x47
cmc
xor al 0x1c
cmp esi ecx
bt cx sp
bt si 0x3
cmp ah cl
neg al
call sub_100ad811
or eax 0x69536bad
jbe rwxdata
add edi eax
call sub_1013733c
insd
pop ecx
sub [ ebp - 0x3b328e12 ] edx
xchg ebp eax
aas
mov [ 0x1c3c5472 ] al
jmp rwxdata
adc esi ebp
sti
retn
sub al 0x47
cmp bl cl
jmp rwxdata
neg al
cmc
call sub_100ada7a
jpo rwxdata
clc
lea esp [ esp + 0x4 ]
jg rwxdata
push es
mov edx 0xf6379986
mov al [ 0x44f02662 ]
sahf
push 0xf05e61b1

xor al 0x1c
test si 0x2c7b
pushfd
bt ax dx
cmc
neg al
push 0x508ec635
bt ebp 0x1e
sub al 0xc2
clc
pushfd
pushfd
clc
not al
mov [ esp + 0x8 ] bh
pushfd
cmp al [ edi ]
movzx ax cl
lea edi [ edi + 0x1 ]
pop eax
not ah
setb ah
sete al
mov eax [ esp + 0x3c ]
push [ esp + 0x4 ]
jmp rwxdata
mov bl 0xd3
jpo rwxdata
xchg edi eax

pushfd
lea esp [ esp + 0x48 ]
ja rwxdata
in al dx
fcmovbe st7
xchg ebp eax
pop ebx
sub eax 0x80eccf05
insd
and eax 0x65a79710
inc [ esi ]
[ ebx + 0x19d59077 ]
push es
inc edi
fadd [ esi ]
push 0xd11b0dba
push eax
lea esp [ esp + 0x8 ]
jb rwxdata
and [ ecx ] ebp
jmp 0x42f1db60
out 0xab eax
jne rwxdata
push 0xc760ad0f
mov [ esp ] esi
clc
cmp [ edi - 0x1 ] 0x0
call sub_100f16c2
pop ebp
sub [ ebx - 0x32895329 ] ecx
jle rwxdata
xchg edx eax
arpl [ ecx + ecx * 2 ] bx
or ebx [ eax + ebp * 2 + 0x4d ]
cmp ebx [ edi ]
adc bl dl
mov [ 0xffffffffbbee286a ] al
std
xor al 0x58
stc
xchg esp eax
mov dh 0xbf
or eax 0x3f6c5331
retn
xchg dh ah
push ebp
mov [ edx - 0x7dbd4936 ] cs
in eax 0x78
mov [ 0xffffffffb3dc0656 ] ah
rcl [ eax + 0x2d ] 0x5d
mov bl [ ebx + edx - 0x41 ]
sbb [ ecx + 0x23 ] esi
xchg edi eax
push eax
lodsb [ esi ]
sbb dh [ es : ecx + 0xb ]
dec ebx
add ebp [ edx ]
out 0xa4 al
cli
push ecx
jmp rwxdata
adc [ edx + esi * 8 ] cl
mov ebx 0xf6375741
test al 0x7b
xor eax 0xf4e2c507
dec esi
and [ es : edi + 0x2157477d ] esi
and bh dh
xchg [ ecx ] esp
pop ecx
cwde
in al 0x27
out 0xbf al
or al 0xb8
pushfd
js rwxdata
rcr [ edx + eax ] 0xf5
sbb eax 0x25f3eae2
sbb al [ edi + edx * 2 + 0x2bfa727f ]
and [ eax - 0x6c ] edx
mov [ 0xffffffffc414f42f ] eax
imul ebp [ eax + 0x5b ] 0xffffffd4
pop edi
sbb ebp [ edi - 0x5a ]
fcom [ ebx ]
pop ecx
push es
cmp dl [ edx ]
out dx al
shr al 0x1
jno rwxdata
cmpsb [ esi ] [ edi ]
mov dl 0xf4
dec edi
add al 0xc4
pushfd
jl rwxdata
test [ ecx + 0xf ] eax
sti
shr edx 0x1
0x7660871f 0xb319
cmp [ esi - 0x337d84b3 ] ah
fld [ ecx - 0x62 ]
dec esi
loope rwxdata
insd
sbb bl bh
dec eax
jle rwxdata
inc ebp
rol edx cl
add [ ebx + 0x42ff1303 ] 0xf8
add [ edx + 0x1810e137 ] 0xb8
cld
cmp dh 0xd8
adc [ ss : 0x63338825 ] 0x1f44945a
fcomp [ 0xffffffffd04d1d5e ]
loop rwxdata
dec ebx
mov ebp gs
mov eax [ 0xffffffffe102006b ]
cmc
mov al [ 0xffffffffc2fc78ba ]
lodsb [ esi ]
jbe rwxdata
xchg esi eax
jpe rwxdata
test [ ebx - 0x6e4f51b1 ] al
iretd
mov ebp 0x180dc0b4
sbb [ ebx + 0x5b6b4e4f ] 0xf1
cmpsb [ esi ] [ edi ]
xor ah [ eax + 0x694d417 ]
mov ecx 0x1ff6d623
jne rwxdata
clc
mov al 0xac
adc ch al
aam 0xa6
xchg edi eax
fcomp [ esi + 0x1e564391 ]
out dx al
int3
cmpsd [ esi ] [ edi ]
or al 0xb8
mov gs [ ecx - 0x1b287242 ]
dec edi
jecxz rwxdata
jg rwxdata
test eax 0xe4d78dbe
loop rwxdata
push ss
dec ebp
imul eax [ esp + ecx - 0x4961142b ] 0x5b
imul eax [ eax ] 0xc
in eax dx
pop ss
mov cl 0x7e
outsd
cmp al 0x8c
dec esp
cdq
push ebx
xor bl [ eax + 0x1b ]
aaa
0x3a28a2f4 0x76ac
push esi
ja rwxdata
sub eax 0x7b82be1f
or eax 0x86c8d808
mov eax [ ebp + 0x37 ]
sbb eax 0x7eb1c301
clc
xlat
out 0xf5 eax
sbb edi edx
mov edi 0x4f26a28f
sub [ eax - 0x66 ] 0xa08ee1f9
outsd
xchg ebx eax
je rwxdata
movsb [ edi ] [ esi ]
or al dh
leave
jle rwxdata
aam 0x94
push es
inc esp
cmp cl ch
or ebx [ eax ]
or al 0xd5
jmp rwxdata
mov bh 0x3f
fsubr st6
adc [ 0x6046980c ] ecx
pushfd
jmp rwxdata
adc ebx [ edx ]
sbb eax 0x603fb1da
cli
sbb al 0x78
sub [ 0xffffffffedeea379 ] 0x7e
fwait
cwde
xchg [ esp + 0x20 ] eax
lahf
pushfd
seto ah
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
call sub_100f2276
sub_1013c07d
lea esp [ esp + 0x8 ]
push esp
push 0x1d0f92b6
push [ esp ]
pushfd
mov [ esp + 0x8 ] eax
push 0x27101660
pushad
pushfd
mov [ esp + 0x2c ] edi
push ebp
mov [ esp + 0x4 ] 0x8a63
push 0x8406a7de
pushfd
mov [ esp + 0x34 ] ebp
jmp rwxdata
mov [ esp ] ch
push 0x388552e1
pushfd
mov [ esp + 0x38 ] esi
call sub_1013c8ba
sub_1013c4d3
xor esi 0xa271a880
xadd bp cx
shl ebp 0x15
add esi 0xf65b209e
pushad
xadd bx bp
pop edi
neg esi
rcr bl cl
ror di cl
btr ebx 0x2
lea ebp [ esp + 0x20 ]
jmp rwxdata
neg bx
sub esp 0xa0
movzx edi cl
and di 0x9319
sbb ecx 0xd20889cd
xadd bl al
mov edi esp
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
bt di cx
lea esi [ esi + 0x1 ]
push 0xd32b59e6
stc
add ebp 0x4
pushfd
mov [ esp ] 0x44
push [ esp ]
mov [ eax + edi ] edx
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1013e224
dec al
rcr dl cl
rol al 0x1
lea edx [ ebx * 4 + 0x1da408ba ]
inc al
bt bp 0xe
bts dx 0x7
xor bl al
btc edx ebx
neg dl
push esp
mov edx [ ebp ]
jmp rwxdata
sub_1013c932
mov [ esp + 0x20 ] eax
pushfd
pushfd
lea esp [ esp + 0x28 ]
je rwxdata
jmp rwxdata
push edi
mov [ esp ] edi
jne rwxdata
push 0x6fc34dc9
mov [ esp ] edi
pushfd
pushad
mov [ esp + 0x20 ] ebp
jmp rwxdata
push ecx
mov [ esp ] ebp
pushad
mov [ esp + 0x1c ] esi
mov [ esp + 0x8 ] dh
mov [ esp + 0x18 ] ecx
jmp rwxdata
push 0x56915cf
mov [ esp ] ebp
pushfd
lea esp [ esp + 0x4 ]
jpo rwxdata
pushfd
mov [ esp + 0x20 ] esi
mov [ esp ] 0x43
jmp rwxdata
mov [ esp + 0x14 ] ebx
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x1c ]
jmp rwxdata
pushad
mov [ esp + 0x14 ] dx
mov [ esp + 0xc ] al
push ebp
mov [ esp + 0x20 ] esi
lea esp [ esp + 0x20 ]
jo rwxdata
pushad
mov [ esp + 0x4 ] 0x39
mov [ esp + 0x1c ] esi
mov [ esp + 0x8 ] ch
jmp rwxdata
mov [ esp + 0xc ] ch
mov [ esp + 0x1c ] ecx
pushfd
mov [ esp + 0x1c ] ebx
mov [ esp ] eax
lea esp [ esp + 0x1c ]
jmp rwxdata
and bl 0xd5
xchg esi edi
push [ rwxdata ]
rol edi cl
cmc
call sub_1013dde3
jmp rwxdata
pushfd
mov [ esp ] ecx
pushad
jmp rwxdata
call sub_1013c884
push ecx
jmp rwxdata
mov [ esp + 0x1c ] ebx
push 0xa1488709
push 0xde43e01e
lea esp [ esp + 0x24 ]
jmp rwxdata
call sub_1013e105
sub_1013d8fe
xchg [ ebp ] eax
mov [ esp ] 0xb6
pushfd
mov [ esp + 0x8 ] rwxdata
pushfd
call sub_1013d401
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
sub al bl
movsx cx al
push 0x41ad7697
sar ch 0x1
add al 0xf7
shrd cx di cl
movzx cx al
not al
rol ch cl
neg ecx
neg al
stc
test cx si
lea esi [ esi + 0x1 ]
pushfd
xor ch dh
cmp al dh
neg ecx
sub bl al
pushfd
movzx cx cl
movzx cx al
dec ch
movzx eax al
not cl
pushfd
pop ecx
mov ecx [ eax * 4 + rwxdata ]
mov [ esp ] 0x2b
push [ esp ]
push [ esp ]
inc ecx
call sub_1013e224
dec al
rcr dl cl
rol al 0x1
lea edx [ ebx * 4 + 0x1da408ba ]
inc al
bt bp 0xe
bts dx 0x7
xor bl al
btc edx ebx
neg dl
push esp
mov edx [ ebp ]
jmp rwxdata
bt di cx
lea esi [ esi + 0x1 ]
push 0xd32b59e6
stc
add ebp 0x4
pushfd
mov [ esp ] 0x44
push [ esp ]
mov [ eax + edi ] edx
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
sub_1013dadc
pushfd
xchg [ ebp + ecx * 4 ] eax
test ch al
pushad
mov [ esp + 0x2c ] eax
cmc
pushfd
stc
sub ecx 0x1
pushfd
push 0x3a4676f0
lea esp [ esp + 0x38 ]
jne rwxdata
cmp sp bp
bt dx 0x7
call sub_1013d3b1
test bh bl
bt si dx
cmc
xor eax eax
jmp rwxdata
push 0xf7ae4d09
call sub_1013d8fe
sub_1013db27
lea esp [ esp + 0x24 ]
push esp
pushad
mov [ esp + 0x1c ] eax
pushfd
pushfd
mov [ esp + 0x20 ] edi
pushfd
mov [ esp + 0x20 ] ebp
pushfd
mov [ esp ] ebp
jmp rwxdata
mov [ esp + 0x20 ] esi
pushad
push 0x98c5d5f9
mov [ esp + 0x40 ] ecx
push 0x5e1f58e7
pushfd
mov [ esp + 0x44 ] ebx
mov [ esp + 0x10 ] dh
pushfd
push 0xeb72378d
lea esp [ esp + 0x4c ]
jmp rwxdata
and bl 0xd5
xchg esi edi
push [ rwxdata ]
rol edi cl
cmc
call sub_1013dde3
sub_1013e105
mov [ esp ] ebx
push 0xfe80cca4
mov [ esp ] bl
pushad
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
and bl 0xd5
xchg esi edi
push [ rwxdata ]
rol edi cl
cmc
call sub_1013dde3
sub_1013e59a
pushfd
pop [ esp + 0x4 ]
pushfd
bt dx 0xa
push [ esp + 0x4 ]
add esp 0xc
push esp
bt ebx 0xc
push eax
stc
neg al
rcr al cl
push edi
shl di 0xc
push ebp
sub ebp ebp
inc bp
push esi
sar si 0xb
mov si 0xe414
push ecx
or bp cx
push ebx
and bl 0xd5
xchg esi edi
push [ rwxdata ]
rol edi cl
cmc
call sub_1013dde3
sub_100aa15a
push 0x8bc26d4
mov [ esp + 0x8 ] rwxdata
mov [ esp + 0x4 ] 0xf8
push [ eax ]
pop [ esp + 0x4 ]
mov [ esp ] bl
push [ esp + 0x4 ]
retn 0x8
sub_100aa49a
mov [ esp ] dl
lea esp [ esp + 0x4 ]
jae rwxdata
not bl
jmp rwxdata
call sub_100aea39
pushfd
call sub_100f0dae
sub_100aa4ee
mov ebp [ esp + 0x4 ]
pushfd
pushad
pushfd
push [ esp + 0x30 ]
retn 0x3c
sub_100aa514
stc
push 0xb016d8c3
ror al 0x2
clc
add al 0xb3
jmp rwxdata
call sub_100f26ae
sub_100aa53d
push [ eax ]
pop [ esp + 0x24 ]
mov [ esp + 0x8 ] dl
pushad
push [ esp + 0x4 ]
push [ esp + 0x48 ]
retn 0x4c
sub_100aa836
shr al 0x2
call sub_100f61e5
sub_100aa83e
pushfd
call sub_100ee494
inc ecx
dec bl
setge bl
call sub_101340f4
sub_100aa863
setge ah
clc
shr ax 0xf
call sub_10137a84
cmp sp 0x7ba3
cmp al 0x9
jmp j_sub_100add3f
sub_100aa95f
lea esp [ esp + 0x8 ]
call sub_100ec890
j_sub_10135d67
jmp sub_10135d67
sub_100ab231
call sub_100aa2a0
nop
sub_100ab2ca
cmp eax 0x7d00
pushfd
jmp rwxdata
call sub_100ed246
sub_100ab308
cmp cx 0x4e03
sub ecx ecx
mov [ esp ] bh
call sub_100aa95f
sub_100ab43c
pushfd
call sub_1013bcfd
bt di ax
call sub_100f287b
sub_100ab458
push [ eax ]
pop [ esp + 0x20 ]
pushfd
push [ esp + 0x24 ]
retn 0x28
sub_100abb02
call sub_100edb17
sub_100abfdc
push [ eax ]
pop [ esp + 0x20 ]
pushad
push [ esp + 0x40 ]
retn 0x44
sub_100abff3
clc
cmp ah 0x2e
lea esp [ esp + 0x4 ]
pushfd
push [ esp + 0x4 ]
jne rwxdata
pushad
call sub_100f576a
retn 0x8
sub_100ac009
mov [ esp ] eax
lahf
push [ ebp - 0x4 ]
call sub_100ae631
sub_100ac015
lea esp [ esp + 0x10 ]
call sub_100e7ab5
sub_100ac6d0
sub si bp
movsx esi dl
mov [ esp ] sp
lea esi [ esp + 0x28 ]
stc
jmp sub_10135d54
sub_100ac715
lea esp [ esp + 0x28 ]
call sub_100ec890
sub_100acc03
call j_sub_10136891
sub_100acd73
pushfd
call sub_100ed828
jmp rwxdata
pushad
mov [ ebp - 0x4 ] eax
call sub_10137cce
sub_100ad281
call sub_100ac009
sub_100ad7dc
pushad
mov [ esp + 0x20 ] rwxdata
mov [ esp + 0x8 ] 0x0
push [ eax ]
pop [ esp + 0x1c ]
mov [ esp ] 0xb6
push esp
push [ esp + 0x20 ]
retn 0x24
j_sub_10138511
jmp sub_10138511
sub_100adb6c
pushfd
mov edi [ esp + 0x8 ]
bswap si
push [ esp + 0x8 ]
call sub_100e7c75
pushad
lea esp [ esp + 0x30 ]
call sub_100ec890
sub_100add25
pushfd
mov [ esp ] rwxdata
jmp rwxdata
pushfd
pushfd
push 0x36ae5645
mov [ esp + 0x8 ] eax
pushad
mov [ esp + 0x4 ] 0xa2
push [ esp ]
push [ esp + 0x2c ]
retn 0x30
sub_100ae569
push edi
jmp rwxdata
pushad
lea esp [ esp + 0x30 ]
call sub_100ec890
sub_100ae631
setno ah
movsx ax cl
mov [ esp ] ebx
jmp sub_101347b4
sub_100aea39
call sub_1013b257
j_sub_100f6111
jmp sub_100f6111
j_sub_1013ba4b
jmp sub_1013ba4b
sub_100af811
lea eax [ rwxdata ]
jmp sub_100f2a19
sub_100af8ea
call sub_10110ffd
sub_100af8ef
sub al al
call sub_10135692
sub_100afadd
mov [ esp ] al
lea eax [ rwxdata ]
jmp sub_1013b350
sub_100afaf8
cmp ah al
cmp ecx 0xffff
call sub_100ae517
sub_100afb05
lea esp [ esp + 0x8 ]
call sub_100ec890
sub_100afb14
pushad
pushad
push edx
mov [ esp + 0x44 ] eax
pushfd
push esp
push edx
push [ esp + 0x50 ]
retn 0x54
sub_100e7c75
xchg bp si
mov esi [ esp + 0x14 ]
call sub_10111426
in al 0xa4
pop edx
sub_100ec890
cmc
push ebx
add dl dl
call sub_1013ba2c
sub_100ed229
call sub_100ee3c5
sub_100ed265
imul edx edx 0xa
clc
mov [ esp ] 0x42
test cx cx
add edx eax
pushad
lea esp [ esp + 0x24 ]
jmp sub_100aa836
sub_100ed2e4
call sub_100f22a4
sub_100ed828
test dl 0xed
add eax edi
mov [ esp ] 0x35be19e1
cmp eax edx
call sub_100f1fd9
xchg ebp eax
jne rwxdata
pop ds
0xc6ff
xchg [ edx - 0x6c31328a ] esp
push edi
xor al 0x76
sub_100ed90a
push [ esp + 0x4 ]
movzx di al
lea esi [ esi + edx + 0x1c ]
movzx di bl
pop edi
lea edi [ ecx - 0x1a0f4d91 ]
pushfd
mov edi [ ebp + 0x8 ]
call sub_10134c47
sub_100edc1c
clc
stc
test ah ah
mov [ esp + 0x4 ] 0x95
mov [ esp ] al
jmp sub_100abd7d
_start
jmp sub_100af8ea
_TLS_Entry_0
push 0xead00da6
mov [ esp ] 0x5be08485
pushfd
call sub_1013a69a
sub_100edfe6
pushfd
push edi
lea esp [ esp + 0x14 ]
jae rwxdata
mov bl dl
inc ecx
not bl
jmp rwxdata
call sub_10135645
pushfd
call sub_100f0dae
sub_100ee3c5
pop esi
mov esi [ esp + 0x4 ]
push 0xf4968457
lea esp [ esp + 0xc ]
jmp rwxdata
jmp rwxdata
call sub_100ec890
sub_100ee3d8
sub al 0xf
call sub_1013488a
sub_100ee95e
call sub_1013b868
sub_100f0c69
call sub_100ab596
sub_100f16a6
pushfd
lea esp [ esp + 0x8 ]
call sub_101379c5
sub_100f17be
mov [ esp + 0x24 ] rwxdata
mov [ esp ] bx
jmp sub_100abfdc
sub_100f1cbd
not di
xchg esi edi
movzx esi [ edx + 0x1a ]
pushfd
pushfd
lea esi [ esi + edx + 0x1c ]
mov [ esp + 0x8 ] 0x5614
pushad
pop edi
mov edi [ ebp + 0x8 ]
pushfd
call j_sub_10135d67
sub_100f2276
mov [ esp + 0x20 ] ebx
movzx ax dl
mov [ esp + 0x1c ] 0xb
movzx ax bl
push [ esp + 0x4 ]
setl ah
push 0x3edc2e26
lea eax [ rwxdata ]
mov [ esp ] ebx
call sub_100f17be
sub_100f22a4
adc ecx ecx
call sub_100ae569
sub_100f26ae
mov [ esp ] 0x1609
lea esp [ esp + 0x54 ]
call sub_101379c5
sub_100f2787
stc
cmp eax 0x7d00
push [ esp ]
call sub_100edfe6
sub_100f287b
cmc
pushfd
add al 0xb3
pushad
pushfd
lea esp [ esp + 0x2c ]
call sub_101379c5
sub_100f2a19
pushfd
push 0x2482f289
mov [ esp + 0x2c ] rwxdata
pushfd
mov [ esp + 0x2c ] eax
pushfd
push 0xc116590b
push [ esp ]
mov [ esp ] ch
push [ esp + 0x38 ]
retn 0x3c
sub_100f5523
inc esi
pushfd
adc dl dl
lea esp [ esp + 0x46 ]
pushad
jmp rwxdata
call sub_10138e3c
cmp dl [ edx ]
shl [ edx + 0x60cd76fa ] 0x53
adc eax [ ebx ]
fbld [ ecx + 0x2e275771 ]
sub_100f576a
lea esp [ esp + 0x24 ]
retn 0x8
sub_100f5779
mov [ esp ] 0x3177b27a
pushad
lea esp [ esp + 0x20 ]
jmp j_sub_1013d61f
j_sub_100add3f
jmp sub_100add3f
sub_100f60c2
push [ esp ]
mov [ esp ] 0x0
push [ esp + 0x4 ]
push [ eax ]
pop [ esp + 0x30 ]
pushfd
mov [ esp + 0x8 ] 0x8
pushfd
push 0xbbe12260
push [ esp + 0x3c ]
retn 0x40
sub_100f6111
push [ eax ]
pop [ esp + 0x28 ]
pushfd
push [ esp + 0x2c ]
retn 0x30
sub_100f6fe0
[ edi ] [ esi ]
mov si si
mov esi [ esp + 0x28 ]
mov [ esp ] di
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x2c ]
jmp rwxdata
jmp rwxdata
call sub_100ec890
sub_100f74cd
pushfd
call sub_100f6e31
j_sub_100f16a6
jmp sub_100f16a6
sub_101113f7
bt bx bp
sub edi 0x4
mov [ esp ] dx
jmp sub_100f5743
sub_10111407
stc
sub edi 0x4
clc
push [ esp + 0x4 ]
stc
push [ edi ]
pop [ esp + 0x28 ]
cmp cx cx
cmp edi ebx
push 0x13d54788
call sub_100f5531
sub_10111426
not ebp
not bp
movsx bp bl
mov ebp [ esp + 0x1c ]
pushfd
push [ esp + 0x4 ]
push [ esp + 0x28 ]
retn 0x34
sub_1013488a
pushfd
cmc
ror al 0x2
push ebx
add al 0xb3
push 0x7173ffd
lea esp [ esp + 0x24 ]
call sub_101379c5
sub_10134b31
pushad
sub_10134b32
push 0x505cf890
sub_10134b37
call sub_100abaee
sub_10134c47
pushfd
mov [ esp ] 0x912e78ec
lea esp [ esp + 0x14 ]
call sub_100e7ab5
j_sub_100ab1e3
jmp sub_100ab1e3
sub_1013560b
mov esp ebp
lea ebp [ ebx + 0x592aa06e ]
lea ebp [ esp - 0x43d831dd ]
lea ebp [ esi - 0x474170e5 ]
mov bp 0xd436
pop ebp
pushad
pushad
push eax
push 0x39183cfb
push [ esp + 0x48 ]
retn 0x50
sub_10135645
cmp dh ah
bt eax edx
cmp ah 0x5
jmp sub_100aa49a
sub_10135692
cmp bx ax
stc
test cx dx
[ edi ]
call sub_100ab43c
sub_10135760
setb dl
movzx di bl
pushfd
lea edx [ ebx + 0x4 ]
call sub_100f1cbd
sub_10135d54
sub edi 0x4
bt ax ax
push [ edi ]
pop [ esp + 0x24 ]
stc
call sub_100f216c
sub_10135d67
lea esp [ esp + 0x38 ]
call sub_100e7ab5
j_sub_100ee3d8
jmp sub_100ee3d8
sub_101368cd
mov [ esp + 0x8 ] 0x5be4568e
jmp sub_1013bdce
sub_101369fc
pushfd
pushfd
mov [ esp + 0xc ] edi
mov [ esp ] dl
mov [ esp ] 0xb8
pushfd
mov [ esp + 0xc ] ebx
mov [ esp + 0x4 ] bp
pushfd
lea esp [ esp + 0x10 ]
call sub_100aa863
jmp sub_100f215b
j_sub_100f5523
jmp sub_100f5523
sub_101379c5
push edi
pushfd
bt dx si
mov [ esp + 0x4 ] 0x0
xor ecx ecx
lea esp [ esp + 0x8 ]
sub_101379d6
push edx
mov [ esp ] 0x9ebc
inc ecx
lea esp [ esp + 0x4 ]
pushfd
push [ esp ]
pushfd
pushad
lea esp [ esp + 0x2c ]
call sub_100ec890
j_sub_10136891
jmp sub_10136891
sub_101382da
mov [ esp ] 0x41
push [ eax ]
pop [ esp + 0x8 ]
pushfd
pushfd
pushfd
mov [ esp + 0x4 ] bl
push [ esp + 0x14 ]
retn 0x18
sub_10138616
mov [ esp + 0x48 ] eax
push [ esp + 0x4 ]
mov [ esp ] 0xba
mov [ esp + 0x10 ] dh
push [ esp + 0x4c ]
retn 0x50
sub_101389de
mov [ esp ] 0x5be4c16b
call sub_100f5779
sub_101389ea
pushfd
call sub_100ac015
sub_10138e3c
lea esp [ esp + 0x24 ]
retn
sub_10139f9a
mov [ esp ] 0x5142
bswap bp
mov ebp [ esp + 0x4 ]
push 0x9a250a3f
pushfd
mov [ esp ] 0xfd
mov [ esp ] 0xf0
push [ esp + 0x10 ]
retn 0x24
sub_1013a4dc
lea esp [ esp + 0x10 ]
call sub_100e7ab5
sub_1013a69a
pushfd
mov [ esp + 0x8 ] 0xc237f57c
mov [ esp + 0x4 ] 0x6635339a
push 0x59c69189
push [ esp ]
pushfd
lea esp [ esp + 0x14 ]
jmp rwxdata
pushfd
mov [ esp ] edx
call sub_1013e311
sub_1013af51
mov [ esp ] al
mov ah al
call sub_100ed2b8
sub_1013b240
test ah bh
add edx eax
mov [ esp ] ch
lea esp [ esp + 0x44 ]
jmp sub_100aa836
sub_1013b250
cmp eax edx
jmp sub_100ac682
sub_1013b257
cmp eax 0x7f
pushad
call sub_10135634
sub_1013b51c
mov [ esp ] bh
cmp edi ebx
call sub_100f73e7
sub_1013bdce
mov [ esp ] 0x602ffd78
call sub_1013a229
sub_1013be0f
call sub_1013e59a
sub_1013c417
mov [ esp + 0x34 ] ebx
mov [ esp + 0x4 ] esp
mov [ esp + 0x4 ] 0x64
lea esp [ esp + 0x34 ]
jmp rwxdata
and bl 0xd5
xchg esi edi
push [ rwxdata ]
rol edi cl
cmc
call sub_1013dde3
sub_1013c59e
call j_sub_1013ca07
sub_1013c884
mov [ esp + 0x1c ] ecx
push [ esp ]
call sub_1013caf0
sub_1013c8ba
mov [ esp + 0x38 ] ecx
jmp sub_1013c417
sub_1013ca07
mov [ esp + 0x4c ] ecx
jmp sub_1013e88d
sub_1013caf0
pushad
mov [ esp + 0x40 ] ebx
push [ esp ]
lea esp [ esp + 0x44 ]
jmp rwxdata
and bl 0xd5
xchg esi edi
push [ rwxdata ]
rol edi cl
cmc
call sub_1013dde3
sub_1013cbb7
pushfd
mov [ esp + 0x18 ] ecx
mov [ esp ] 0x4c4175e0
pushfd
push 0xbddf9cf3
pushfd
push [ esp + 0x24 ]
retn 0x28
j_sub_1013ca07
jmp sub_1013ca07
sub_1013d3b1
xor eax eax
call sub_1013d4a1
sub_1013d401
mov [ esp + 0xc ] eax
mov [ esp + 0x4 ] 0xdc6d407b
push 0xaa8a8559
push [ esp ]
push [ esp + 0x14 ]
retn 0x18
sub_1013d4a1
call sub_1013dadc
sub_1013d61f
pushfd
mov [ esp ] edx
pushad
jmp rwxdata
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x3ff0c1f2
jmp rwxdata
push 0xd0d121af
call sub_1013db27
j_sub_1013d61f
jmp sub_1013d61f
sub_1013dd96
call sub_1013c59e
sub_1013dde3
sub di 0xa5a7
mov [ esp ] 0x0
rol bp cl
dec ebp
sub di 0xc20f
mov esi [ esp + 0x30 ]
shl edi cl
rcl edi 0x4
add bp 0xdebd
call sub_1013c4d3
sub_1013e03f
mov [ esp ] 0xd350
pushfd
pop [ esp + 0x4 ]
mov [ esp ] ecx
call sub_1013c07d
sub_1013e224
stc
add ecx 0x0
jmp sub_1013cbb7
sub_1013e311
mov [ esp ] bx
call sub_1013e03f
sub_1013e88d
push [ esp + 0x14 ]
mov [ esp + 0x4c ] ebx
pushfd
mov [ esp + 0x8 ] bh
lea esp [ esp + 0x50 ]
jmp rwxdata
and bl 0xd5
xchg esi edi
push [ rwxdata ]
rol edi cl
cmc
call sub_1013dde3
