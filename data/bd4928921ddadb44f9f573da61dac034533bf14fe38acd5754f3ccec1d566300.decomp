sub_401030
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40dbfb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40e101
add esp 0x4
sub_401160
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ GetSystemTime@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call [ SystemTimeToFileTime@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
sub_4011b0
push esi
push 0x40
push 0x1000
push edi
call sub_404130
push eax
call sub_403db0
add esp 0x8
push eax
push 0x0
call [ VirtualAlloc@IAT ]
mov esi eax
push esi
push edi
call sub_403de0
add esp 0x8
mov eax esi
pop esi
retn
sub_4011e0
push ebp
mov ebp esp
sub esp 0x1f8
push esi
push edi
mov [ ebp - 0x24 ] 0xa
call sub_401160
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ rw-data ]
add eax rw-data
push eax
push rw-data
lea esi [ ebp - 0x64 ]
call sub_401d90
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
cmp [ ebp - 0x90 ] 0xa
jge r-xdata
call sub_401160
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x3c ] 0x5
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
sbb ecx [ ebp - 0xc ]
mov [ ebp - 0x1f0 ] eax
mov [ ebp - 0x1ec ] ecx
mov edx [ ebp - 0x1ec ]
mov [ ebp - 0x1f4 ] edx
and [ ebp - 0x1ec ] 0x7fffffff
fild [ ebp - 0x1f0 ]
and [ ebp - 0x1f4 ] 0x80000000
mov [ ebp - 0x1f8 ] 0x0
fild [ ebp - 0x1f8 ]
fchs
faddp st1
fmul [ r--data ]
fdiv [ r--data ]
fstp [ ebp - 0x70 ]
fld [ r--data ]
fdiv [ ebp - 0x70 ]
call sub_421ac0
add eax 0x1
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xac ] 0x0
jmp r-xdata
sub esp 0xc
mov eax esp
lea ecx [ ebp - 0x64 ]
call sub_4019b0
sub esp 0xc
mov eax esp
lea ecx [ ebp - 0x64 ]
call sub_401960
lea esi [ ebp - 0xa8 ]
call sub_401e10
lea esi [ ebp - 0x64 ]
call j_sub_401b00
sub esp 0xc
mov eax esp
lea ecx [ ebp - 0xa8 ]
call sub_4019b0
sub esp 0xc
mov eax esp
lea ecx [ ebp - 0xa8 ]
call sub_401960
lea eax [ ebp - 0xe4 ]
lea ecx [ ebp - 0x64 ]
call sub_401920
sub esp 0xc
mov ecx esp
mov edx eax
mov eax ecx
call sub_4015e0
lea edx [ ebp - 0x64 ]
push edx
call sub_401ec0
call sub_4015d0
lea eax [ ebp - 0xa8 ]
call sub_401900
jmp r-xdata
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0xa
cmp [ ebp - 0xac ] ecx
jge r-xdata
mov ecx [ ebp - 0x90 ]
add ecx 0x1
mov [ ebp - 0x90 ] ecx
sub esp 0xc
mov eax esp
lea edx [ ebp - 0x64 ]
call sub_401940
sub esp 0xc
mov eax esp
lea ecx [ ebp - 0x64 ]
call sub_401920
lea esi [ ebp - 0x88 ]
call sub_401f40
lea eax [ ebp - 0x88 ]
call sub_401a40
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4011a0
movzx eax al
test eax eax
je r-xdata
sub esp 0xc
mov eax esp
lea ecx [ ebp - 0x64 ]
call sub_4019b0
sub esp 0xc
mov eax esp
lea ecx [ ebp - 0x64 ]
call sub_401960
lea esi [ ebp - 0xc4 ]
call sub_401e10
lea esi [ ebp - 0x64 ]
call j_sub_401b00
sub esp 0xc
mov eax esp
lea ecx [ ebp - 0xc4 ]
call sub_4019b0
sub esp 0xc
mov eax esp
lea ecx [ ebp - 0xc4 ]
call sub_401960
lea eax [ ebp - 0x104 ]
lea ecx [ ebp - 0x64 ]
call sub_401920
sub esp 0xc
mov ecx esp
mov edx eax
mov eax ecx
call sub_4015e0
lea edx [ ebp - 0x64 ]
push edx
call sub_401ec0
call sub_4015d0
lea eax [ ebp - 0xc4 ]
call sub_401900
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_403fa0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x8c ] 0x4
mov ecx [ ebp - 0x4 ]
add ecx 0x4
mov [ ebp - 0x4 ] ecx
lea edx [ ebp - 0x40 ]
push edx
lea eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x38 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
push 0x0
call sub_405270
add esp 0x14
mov eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp - 0x34 ]
push ecx
push rw-data
call sub_40e480
add esp 0xc
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x1c ]
add edx 0x4
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
lea edx [ ecx + eax + 0x4 ]
mov [ ebp - 0x78 ] edx
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x44 ] eax
mov eax [ LoadLibraryA@IAT ]
cdq
mov ecx [ ebp - 0x44 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov edx [ ebp - 0x44 ]
mov [ edx + 0x4 ] 0xdeadbeef
mov eax [ GetProcAddress@IAT ]
cdq
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
mov edx [ ebp - 0x44 ]
mov [ edx + 0xc ] 0xdeadbeef
push 0x0
call [ GetModuleHandleW@IAT ]
cdq
mov ecx [ ebp - 0x44 ]
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] edx
mov edx [ ebp - 0x44 ]
mov [ edx + 0x18 ] 0xdeadbeef
lea eax [ ebp - 0x28 ]
push eax
push 0x40
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x14 ]
push ecx
call [ VirtualProtect@IAT ]
push 0x40
push 0x1000
mov edx [ ebp - 0x2c ]
push edx
push 0x0
call [ VirtualAlloc@IAT ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
mov edx [ ebp - 0x74 ]
push edx
call sub_40e480
add esp 0xc
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x74 ]
add ecx 0xf
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x78 ]
mov [ edx ] eax
mov eax [ ebp - 0x4c ]
mov esp [ rw-data ]
mov ebp [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov esi [ rw-data ]
mov edi [ rw-data ]
jmp eax
mov edi [ ebp - 0x4 ]
call sub_4011b0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xac ]
add eax 0x1
mov [ ebp - 0xac ] eax
sub_4015e0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401630
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push eax
lea eax [ rw-data ]
mov [ eax ] esp
add [ eax ] 0x4
lea eax [ rw-data ]
mov [ eax ] ecx
lea eax [ rw-data ]
mov [ eax ] edx
lea eax [ rw-data ]
mov [ eax ] ebp
lea esi [ rw-data ]
mov [ eax ] esi
lea edi [ rw-data ]
mov [ eax ] edi
call sub_4011e0
mov esi [ ebp + 0x8 ]
mov edi [ LoadStringA@IAT ]
push 0x64
push rw-data
push 0x67
push esi
call edi
push 0x64
push rw-data
push 0x6d
push esi
call edi
mov eax esi
call sub_401710
mov [ rw-data ] esi
call sub_4011e0
push 0x6d
push esi
call [ LoadAcceleratorsA@IAT ]
mov edi [ GetMessageA@IAT ]
push 0x0
push 0x0
mov esi eax
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ TranslateAcceleratorA@IAT ]
lea esp [ esp ]
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x1c ]
push edx
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
call [ DispatchMessageA@IAT ]
mov edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x1c ]
push ecx
push esi
push edx
call ebx
test eax eax
jne r-xdata
sub_401710
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ LoadIconA@IAT ]
push 0x6b
push eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_4017a0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] eax
call esi
push 0x7f00
push 0x0
mov [ ebp - 0x18 ] eax
call [ LoadCursorA@IAT ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x1c ]
push 0x6c
push eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] 0x6d
mov [ ebp - 0x8 ] rw-data
call esi
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x4 ] eax
call [ RegisterClassExA@IAT ]
pop esi
mov esp ebp
pop ebp
retn
sub_4017a0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sub eax 0x2
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
mov ecx [ esp + 0x4c ]
pop esi
xor ecx esp
xor eax eax
call sub_40daf7
mov esp ebp
pop ebp
retn 0x10
sub eax 0xd
je r-xdata
lea edx [ esp + 0x8 ]
push edx
push esi
call [ BeginPaint@IAT ]
lea eax [ esp + 0x8 ]
push eax
push esi
call [ EndPaint@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_40daf7
mov esp ebp
pop ebp
retn 0x10
sub eax 0x102
je r-xdata
mov ecx [ ebp + 0x10 ]
movzx eax cx
sub eax 0x68
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
push edx
push ecx
push esi
call [ DefWindowProcA@IAT ]
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_40daf7
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rw-data ]
push 0x0
push sub_4018c0
push esi
push 0x67
push ecx
call [ DialogBoxParamA@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_40daf7
mov esp ebp
pop ebp
retn 0x10
dec eax
je r-xdata
push esi
call [ DestroyWindow@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_40daf7
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
push eax
push ecx
push 0x111
push esi
call [ DefWindowProcA@IAT ]
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_40daf7
mov esp ebp
pop ebp
retn 0x10
sub_4018c0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax 0x1
pop ebp
retn 0x10
dec eax
jne r-xdata
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
cmp ax 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax ax
push eax
push ecx
call [ EndDialog@IAT ]
cmp ax 0x2
je r-xdata
sub_401960
mov edx [ ecx + 0x10 ]
add edx [ ecx + 0xc ]
mov ecx [ ecx ]
push esi
xor esi esi
test ecx ecx
je r-xdata
xor ecx ecx
test esi esi
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
pop esi
mov [ eax + 0x8 ] edx
test ecx ecx
je r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
mov esi [ ecx ]
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4019b0
push esi
mov esi [ ecx + 0xc ]
mov ecx [ ecx ]
xor edx edx
test ecx ecx
je r-xdata
xor ecx ecx
test edx edx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] esi
test ecx ecx
je r-xdata
mov edx [ edx ]
test edx edx
je r-xdata
mov edx [ ecx ]
pop esi
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ edx ]
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401a50
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401a80
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401ab0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401b00
mov eax [ esi + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
lea ebx [ ebx ]
mov eax [ esi + 0x4 ]
pop edi
cmp eax ebx
je r-xdata
lea ebx [ ebx ]
cmp [ esi + 0x10 ] ebx
jne r-xdata
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop ebx
retn
push eax
call sub_40e101
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call sub_40e101
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] ebx
mov eax [ esi + 0x4 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
sub_401b90
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx edx
je r-xdata
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx ]
test edx edx
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
pop ebp
retn 0xc
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ edx ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0xc
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401cc0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
pop ebp
retn 0xc
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0xc
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401d30
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_40db9f
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_40e86a
push ecx
call sub_40e20e
add esp 0x4
test eax eax
jne r-xdata
sub_401d90
push ebp
mov ebp esp
sub esp 0xc
push edi
xor edi edi
push 0x8
mov [ esi ] edi
call sub_40e20e
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0xc ] edi
call sub_40db9f
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_40e86a
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov edx [ ebp + 0xc ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
push esi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
call sub_402160
mov eax esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_401e10
push ebp
mov ebp esp
sub esp 0x10
push edi
xor edi edi
push 0x8
mov [ esi ] edi
call sub_40e20e
add esp 0x4
cmp eax edi
je r-xdata
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edi
call sub_40db9f
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_40e86a
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov ecx [ ebp + 0x1c ]
push ecx
sub esp 0xc
mov eax esp
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov ecx [ ebp + 0x14 ]
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
mov ecx [ ecx ]
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
push esi
mov [ eax + 0x8 ] ecx
call sub_402200
mov eax esi
pop edi
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ecx ]
cmp ecx edi
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax ] edx
sub_401ec0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x24 ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x2c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x18 ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0xc ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
push edx
mov [ eax + 0x8 ] ecx
call sub_4022a0
pop ebp
retn 0x28
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_401f40
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
xor edx edx
push eax
sub esp 0xc
mov eax esp
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x14 ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
push esi
mov [ eax + 0x8 ] ecx
call sub_402580
mov eax esi
pop ebp
retn 0x18
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_401ff0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_40db9f
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_40e86a
push ecx
call sub_40e20e
add esp 0x4
test eax eax
jne r-xdata
sub_402070
push ebp
mov ebp esp
sub esp 0x10
push edi
xor edi edi
push 0x8
mov [ esi ] edi
call sub_40e20e
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edi
call sub_40db9f
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_40e86a
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov eax esi
pop edi
mov esp ebp
pop ebp
retn 0x4
sub_402110
push ebp
mov ebp esp
sub esp 0x10
push 0x8
call sub_40e20e
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_40db9f
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_40e86a
sub_402160
push ebp
mov ebp esp
push 0xffffffff
push sub_427220
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov eax [ esi + 0xc ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov ecx [ esi ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x10 ]
push eax
sub esp 0xc
lea edx [ ebp - 0x1c ]
mov eax esp
call sub_4015e0
push esi
mov ecx [ ebp + 0xc ]
call sub_402bc0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_402200
push ebp
mov ebp esp
push 0xffffffff
push sub_427240
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov eax [ esi + 0xc ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov ecx [ esi ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x14 ] eax
sub esp 0xc
lea edx [ ebp + 0x18 ]
mov eax esp
call sub_401a50
sub esp 0xc
lea edx [ ebp + 0xc ]
mov eax esp
call sub_401a50
sub esp 0xc
lea edx [ ebp - 0x1c ]
mov eax esp
call sub_4015e0
push esi
call sub_401ec0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
sub_4022a0
push ebp
mov ebp esp
push 0xffffffff
push sub_427200
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
mov eax [ ebp + 0x14 ]
sub eax ecx
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x10 ]
mov edi eax
mov [ ebp - 0x18 ] edi
mov ecx [ ebp + 0x20 ]
cmp ecx [ ebp + 0x2c ]
sete cl
test cl cl
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
shr eax 0x1
cmp [ ebp - 0x14 ] eax
ja r-xdata
mov [ ebp - 0x4 ] 0x2
lea esp [ esp ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ ebp + 0x20 ]
cmp eax [ ebp + 0x2c ]
sete al
test al al
jne r-xdata
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov edx [ ebp + 0x20 ]
cmp edx [ ebp + 0x2c ]
sete al
test al al
jne r-xdata
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
sub esp 0xc
mov eax esp
mov ecx [ esi + 0x10 ]
add ecx [ esi + 0xc ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov edx [ esi ]
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
mov edi [ esi + 0xc ]
mov ecx [ esi ]
sub esp 0xc
mov eax esp
xor edx edx
cmp ecx ebx
je r-xdata
lea edx [ ebp + 0x18 ]
call sub_402880
push eax
mov eax esi
call sub_402780
dec [ ebp + 0x20 ]
jmp r-xdata
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ebx [ esi + 0x10 ]
sub ebx edi
mov edi [ esi + 0xc ]
mov ecx [ esi ]
sub esp 0xc
mov eax esp
xor edx edx
test ecx ecx
je r-xdata
lea edx [ ebp + 0x18 ]
call sub_402880
push eax
mov eax esi
call sub_4026b0
dec [ ebp + 0x20 ]
jmp r-xdata
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x18 ]
add ecx edi
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
cmp edx ebx
je r-xdata
mov ecx [ ecx ]
cmp ecx ebx
je r-xdata
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov eax [ ebp + 0x24 ]
cmp eax ebx
je r-xdata
lea ecx [ edi + ebx ]
xor edi edi
mov [ eax ] edi
mov [ eax + 0x4 ] edi
cmp edx edi
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ebx
mov eax [ ebp + 0x24 ]
cmp eax ebx
je r-xdata
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov esi [ esi ]
sub esp 0xc
mov eax esp
xor ecx ecx
cmp esi ebx
je r-xdata
mov edx [ edx ]
cmp edx ebx
je r-xdata
mov edx [ ecx ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov ecx [ esi + 0xc ]
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov edx [ esi ]
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
call sub_402c30
add esp 0x18
mov edx [ esi + 0xc ]
mov eax [ esi ]
xor ecx ecx
cmp eax edi
je r-xdata
mov edx [ edx ]
cmp edx edi
je r-xdata
mov edx [ ecx ]
add edx [ ebp - 0x14 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
cmp ecx ebx
je r-xdata
mov esi [ esi ]
cmp esi ebx
je r-xdata
mov edx [ edx ]
mov [ eax ] edx
lea edi [ edx + ebx ]
xor edx edx
test ecx ecx
je r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ edx ]
mov [ eax ] edx
mov [ eax + 0x8 ] edx
jmp r-xdata
mov ecx [ ecx ]
cmp ecx ebx
je r-xdata
mov ecx [ esi ]
sub esp 0xc
mov eax esp
xor ecx ecx
test edx edx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
lea ebx [ ebp - 0x24 ]
call sub_402c90
add esp 0x24
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ebp - 0x14 ]
add edx edi
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx ]
test edx edx
je r-xdata
mov edx [ ecx ]
mov [ eax + 0x8 ] edx
mov edi [ esi + 0xc ]
mov ecx [ esi ]
sub esp 0xc
mov eax esp
xor edx edx
test ecx ecx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ edx ]
add edi ebx
xor ebx ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
cmp edx ebx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov [ eax + 0x8 ] edi
sub esp 0xc
mov eax esp
mov ecx [ esi + 0xc ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov edx [ esi ]
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
mov edx [ edx ]
cmp edx ebx
je r-xdata
mov edx [ ecx ]
mov edx [ edx ]
mov [ eax ] edx
sub_402453
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x18 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
push 0x0
push 0x0
call sub_40e86a
mov [ ebp - 0x4 ] 0x2
lea esp [ esp ]
mov edi edi
mov eax [ ebp + 0x20 ]
cmp eax [ ebp + 0x2c ]
sete al
test al al
jne r-xdata
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax esi
call sub_402750
cmp edi [ esi + 0x10 ]
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
sub esp 0xc
mov eax esp
mov ecx [ esi + 0x10 ]
add ecx [ esi + 0xc ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov edx [ esi ]
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
mov edi [ esi + 0xc ]
mov ecx [ esi ]
sub esp 0xc
mov eax esp
xor edx edx
cmp ecx ebx
je r-xdata
lea edx [ ebp + 0x18 ]
call sub_402880
push eax
mov eax esi
call sub_402780
dec [ ebp + 0x20 ]
jmp r-xdata
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x18 ]
add ecx edi
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
cmp edx ebx
je r-xdata
mov ecx [ ecx ]
cmp ecx ebx
je r-xdata
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov eax [ ebp + 0x24 ]
cmp eax ebx
je r-xdata
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov esi [ esi ]
sub esp 0xc
mov eax esp
xor ecx ecx
cmp esi ebx
je r-xdata
mov edx [ edx ]
cmp edx ebx
je r-xdata
mov edx [ ecx ]
add edx [ ebp - 0x14 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
cmp ecx ebx
je r-xdata
mov esi [ esi ]
cmp esi ebx
je r-xdata
mov edx [ edx ]
mov [ eax ] edx
mov [ eax + 0x8 ] edx
jmp r-xdata
mov ecx [ ecx ]
cmp ecx ebx
je r-xdata
mov ecx [ esi ]
lea ebx [ ebp - 0x24 ]
call sub_402c90
add esp 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
mov ecx [ ecx ]
mov [ eax ] ecx
sub_402540
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x18 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
push 0x0
push 0x0
call sub_40e86a
int3
jmp r-xdata
mov ecx esi
call sub_401c70
cmp edi [ esi + 0x10 ]
jb r-xdata
sub_402580
push ebp
mov ebp esp
push 0xffffffff
push sub_4271c0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov esi [ edi ]
sub esp 0xc
lea edx [ ebp + 0x18 ]
mov eax esp
call sub_401ab0
sub esp 0xc
lea edx [ ebp + 0xc ]
mov eax esp
call sub_401ab0
push esi
push edi
call sub_402d40
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
sub_402670
push ebp
mov ebp esp
sub esp 0x10
push 0x8
call sub_40e20e
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_40db9f
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_40e86a
sub_4026b0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
test [ ebx + 0xc ] 0xf
push edi
jne r-xdata
mov edi [ ebx + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
add eax 0x10
shr eax 0x4
cmp [ ebx + 0x8 ] eax
ja r-xdata
mov ecx [ ebx + 0x4 ]
dec edi
push esi
mov esi edi
shr esi 0x4
cmp [ ecx + esi * 4 ] 0x0
jne r-xdata
mov edi [ ebx + 0x8 ]
shl edi 0x4
call sub_4028e0
mov edx [ ebx + 0x4 ]
mov eax edi
and eax 0xf
add eax [ edx + esi * 4 ]
pop esi
je r-xdata
push 0x10
call sub_40e20e
add esp 0x4
test eax eax
je r-xdata
inc [ ebx + 0x10 ]
mov [ ebx + 0xc ] edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ eax ] dl
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40db9f
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_40e86a
int3
mov edx [ ebx + 0x4 ]
mov [ edx + esi * 4 ] eax
sub_402750
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
retn
inc [ eax + 0xc ]
push edi
mov edi [ eax + 0x8 ]
shl edi 0x4
cmp edi [ eax + 0xc ]
pop edi
ja r-xdata
dec ecx
mov [ eax + 0x10 ] ecx
jne r-xdata
mov [ eax + 0xc ] 0x0
mov [ eax + 0xc ] 0x0
sub_402780
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0xc ]
add ecx eax
push esi
test cl 0xf
jne r-xdata
mov esi [ ebx + 0xc ]
add esi [ ebx + 0x10 ]
mov eax [ ebx + 0x8 ]
push edi
mov edi esi
shr edi 0x4
cmp eax edi
ja r-xdata
add eax 0x10
shr eax 0x4
cmp [ ebx + 0x8 ] eax
ja r-xdata
mov edx [ ebx + 0x4 ]
cmp [ edx + edi * 4 ] 0x0
jne r-xdata
sub edi eax
call sub_4028e0
mov ecx [ ebx + 0x4 ]
and esi 0xf
add esi [ ecx + edi * 4 ]
pop edi
je r-xdata
push 0x10
call sub_40e20e
add esp 0x4
test eax eax
je r-xdata
inc [ ebx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ esi ] al
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40db9f
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_40e86a
int3
mov ecx [ ebx + 0x4 ]
mov [ ecx + edi * 4 ] eax
sub_402830
push ebp
mov ebp esp
mov ecx [ esi ]
xor edx edx
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
add ecx [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ecx
test edx edx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
pop ebp
retn 0x4
mov edx [ edx ]
test edx edx
je r-xdata
mov edx [ ecx ]
mov edx [ edx ]
mov [ eax ] edx
sub_402880
mov eax [ edx ]
xor ecx ecx
test eax eax
je r-xdata
mov eax [ edx + 0x8 ]
dec eax
test ecx ecx
jne r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov ecx [ eax ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx eax
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx + 0x8 ]
shr ecx 0x4
cmp eax ecx
ja r-xdata
sub_4028e0
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebx + 0x8 ]
mov eax 0xfffffff
sub eax ecx
mov [ ebp - 0x8 ] 0x1
cmp eax 0x1
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
push r--data
call sub_421688
cmp eax 0x1
jbe r-xdata
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0x8 ]
push esi
push edi
mov edi [ ebx + 0xc ]
xor esi esi
shr edi 0x4
add eax ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] esi
cmp eax esi
jbe r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
add eax eax
add eax eax
lea esi [ edi * 4 ]
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
sar eax 0x2
add eax eax
add eax eax
push eax
push edx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ esi + edx ]
push eax
call sub_40dda0
mov edx [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
cmp edi edx
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov [ ebp - 0x8 ] eax
lea edi [ edx * 4 ]
mov edx edi
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call sub_40dda0
mov eax [ ebx + 0x4 ]
lea ecx [ edi + eax ]
sub esi ecx
add esi eax
mov eax [ ebp - 0x4 ]
sar esi 0x2
add esi esi
add esi esi
push esi
push ecx
push eax
call sub_40dda0
mov ecx [ ebp - 0x8 ]
add esp 0x18
lea edi [ esi + eax ]
test ecx ecx
je r-xdata
sar esi 0x2
mov [ ebp - 0xc ] esi
mov esi edx
mov edx [ ebp - 0xc ]
add edx edx
add edx edx
push edx
push ecx
push eax
mov [ ebp - 0xc ] edx
call sub_40dda0
mov edx eax
add edx [ ebp - 0xc ]
add esp 0xc
sub esi edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] esi
call sub_40db9f
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_40e86a
int3
lea ecx [ eax * 4 ]
push ecx
call sub_40e20e
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
mov eax [ ebx + 0x4 ]
pop edi
pop esi
test eax eax
je r-xdata
xor eax eax
[ edi ]
test edi edi
je r-xdata
mov ecx esi
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add [ ebx + 0x8 ] edx
mov [ ebx + 0x4 ] ecx
mov esp ebp
pop ebp
retn
push eax
call sub_40e101
add esp 0x4
mov ecx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
sub_402a70
mov eax [ ecx ]
test eax eax
jne r-xdata
mov edx [ eax ]
xor edx edx
jmp r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx eax
mov eax [ ecx + 0x8 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx + 0x8 ]
shr ecx 0x4
cmp eax ecx
ja r-xdata
sub_402b10
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40db9f
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_40e86a
lea eax [ ecx * 4 ]
push eax
call sub_40e20e
add esp 0x4
test eax eax
jne r-xdata
sub_402b70
mov eax [ ecx ]
test eax eax
jne r-xdata
mov edx [ eax ]
xor edx edx
jmp r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx eax
mov eax [ ecx + 0x8 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx + 0x8 ]
shr ecx 0x4
cmp eax ecx
ja r-xdata
sub_402bc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
sub esp 0xc
mov eax esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x18 ]
push edx
call sub_402ea0
pop ebp
retn 0x14
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
sub_402c30
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x14 ]
sub esp 0x8
test eax eax
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov ecx [ ebp + 0x10 ]
push ecx
push eax
mov eax [ esp + 0x14 ]
push eax
call sub_403160
add esp 0x14
mov esp ebp
pop ebp
retn
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
sub_402c90
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x1c ]
cmp esi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
test eax eax
je r-xdata
cmp edi [ ebp + 0x28 ]
je r-xdata
pop edi
mov eax ebx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
mov eax [ eax ]
mov [ ebx ] eax
xor edx edx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
push [ ebp + 0x28 ]
push edx
push edi
push ecx
push esi
push eax
call sub_403630
mov ecx [ ebp + 0x1c ]
mov eax [ ebp + 0x28 ]
mov esi [ ebp + 0x10 ]
sub eax ecx
add esp 0x18
add esi eax
mov [ ebp + 0x10 ] esi
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
sub_402d40
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x1c ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x10 ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push edx
call sub_403220
pop ebp
retn 0x20
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_402dc0
push ebp
mov ebp esp
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_40dda0
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_402e10
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40db9f
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_40e86a
lea eax [ ecx * 4 ]
push eax
call sub_40e20e
add esp 0x4
test eax eax
jne r-xdata
sub_402ea0
push ebp
mov ebp esp
push 0xffffffff
push sub_4271e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
mov eax [ ebp + 0x14 ]
sub eax ecx
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x10 ]
mov [ ebp - 0x1c ] eax
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
shr eax 0x1
cmp [ ebp - 0x18 ] eax
ja r-xdata
mov [ ebp - 0x4 ] 0x2
lea esp [ esp ]
mov [ ebp - 0x4 ] 0x0
mov edi edi
mov [ ebp - 0x4 ] 0xffffffff
sub esp 0xc
mov eax esp
mov ecx [ esi + 0x10 ]
add ecx [ esi + 0xc ]
xor ebx ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov edx [ esi ]
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
mov edi [ esi + 0xc ]
mov ecx [ esi ]
sub esp 0xc
mov eax esp
xor edx edx
cmp ecx ebx
je r-xdata
mov al [ edi ]
mov [ ebp - 0x11 ] al
lea ecx [ ebp - 0x11 ]
push ecx
mov eax esi
call sub_402780
inc edi
mov [ ebp + 0x18 ] edi
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ebx [ esi + 0x10 ]
sub ebx [ ebp - 0x1c ]
mov edi [ esi + 0xc ]
mov ecx [ esi ]
sub esp 0xc
mov eax esp
xor edx edx
test ecx ecx
je r-xdata
mov al [ edi ]
mov [ ebp - 0x11 ] al
lea ecx [ ebp - 0x11 ]
push ecx
mov eax esi
call sub_4026b0
inc edi
mov [ ebp + 0x18 ] edi
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx edi
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
cmp edx ebx
je r-xdata
mov ecx [ ecx ]
cmp ecx ebx
je r-xdata
cmp edi ebx
je r-xdata
lea ecx [ edi + ebx ]
xor edi edi
mov [ eax ] edi
mov [ eax + 0x4 ] edi
cmp edx edi
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov esi [ esi ]
sub esp 0xc
mov eax esp
xor ecx ecx
cmp esi ebx
je r-xdata
mov edx [ edx ]
cmp edx ebx
je r-xdata
mov edx [ ecx ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov ecx [ esi + 0xc ]
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov edx [ esi ]
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
call sub_402c30
add esp 0x18
mov edx [ esi + 0xc ]
mov eax [ esi ]
xor ecx ecx
cmp eax edi
je r-xdata
mov edx [ edx ]
cmp edx edi
je r-xdata
mov edx [ ecx ]
add edx [ ebp - 0x18 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
cmp ecx ebx
je r-xdata
mov esi [ esi ]
cmp esi ebx
je r-xdata
mov edx [ edx ]
mov [ eax ] edx
lea edi [ edx + ebx ]
xor edx edx
test ecx ecx
je r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ edx ]
mov [ eax ] edx
mov [ eax + 0x8 ] edx
jmp r-xdata
mov ecx [ ecx ]
cmp ecx ebx
je r-xdata
mov ecx [ esi ]
sub esp 0xc
mov eax esp
xor ecx ecx
test edx edx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
lea ebx [ ebp - 0x28 ]
call sub_402c90
add esp 0x24
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ebp - 0x18 ]
add edx edi
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx ]
test edx edx
je r-xdata
mov edx [ ecx ]
mov [ eax + 0x8 ] edx
mov edi [ esi + 0xc ]
mov ecx [ esi ]
sub esp 0xc
mov eax esp
xor edx edx
test ecx ecx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ edx ]
add edi ebx
xor ebx ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
cmp edx ebx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov [ eax + 0x8 ] edi
sub esp 0xc
mov eax esp
mov ecx [ esi + 0xc ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov edx [ esi ]
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
mov edx [ edx ]
cmp edx ebx
je r-xdata
mov edx [ ecx ]
mov edx [ edx ]
mov [ eax ] edx
sub_403035
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
cmp edi [ esi + 0x10 ]
jae r-xdata
push 0x0
push 0x0
call sub_40e86a
mov [ ebp - 0x4 ] 0x2
lea esp [ esp ]
mov eax esi
call sub_402750
cmp edi [ esi + 0x10 ]
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
sub esp 0xc
mov eax esp
mov ecx [ esi + 0x10 ]
add ecx [ esi + 0xc ]
xor ebx ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov edx [ esi ]
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
mov edi [ esi + 0xc ]
mov ecx [ esi ]
sub esp 0xc
mov eax esp
xor edx edx
cmp ecx ebx
je r-xdata
mov al [ edi ]
mov [ ebp - 0x11 ] al
lea ecx [ ebp - 0x11 ]
push ecx
mov eax esi
call sub_402780
inc edi
mov [ ebp + 0x18 ] edi
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx edi
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
cmp edx ebx
je r-xdata
mov ecx [ ecx ]
cmp ecx ebx
je r-xdata
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov esi [ esi ]
sub esp 0xc
mov eax esp
xor ecx ecx
cmp esi ebx
je r-xdata
mov edx [ edx ]
cmp edx ebx
je r-xdata
mov edx [ ecx ]
add edx [ ebp - 0x18 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
cmp ecx ebx
je r-xdata
mov esi [ esi ]
cmp esi ebx
je r-xdata
mov edx [ edx ]
mov [ eax ] edx
mov [ eax + 0x8 ] edx
jmp r-xdata
mov ecx [ ecx ]
cmp ecx ebx
je r-xdata
mov ecx [ esi ]
lea ebx [ ebp - 0x28 ]
call sub_402c90
add esp 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ecx ]
mov [ eax ] ecx
sub_403103
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
cmp edi [ esi + 0x10 ]
jae r-xdata
push 0x0
push 0x0
call sub_40e86a
int3
mov edi edi
mov ecx esi
call sub_401c70
cmp edi [ esi + 0x10 ]
jb r-xdata
sub_403140
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_403160
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
push ebx
push esi
push edi
cmp eax ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
dec ecx
mov [ ebp + 0x18 ] ecx
cmp eax ecx
je r-xdata
mov edx [ ebp + 0x14 ]
mov edx [ edx + 0x8 ]
mov esi ecx
shr esi 0x4
and ecx 0xf
cmp edx esi
ja r-xdata
mov ebx [ ebp + 0xc ]
mov edx eax
and eax 0xf
mov edi eax
mov eax [ ebx + 0x8 ]
shr edx 0x4
cmp eax edx
ja r-xdata
sub esi edx
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
add eax ecx
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edx * 4 ]
mov bl [ eax ]
mov dl [ ecx + edi ]
mov [ ecx + edi ] bl
mov [ eax ] dl
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
inc eax
mov [ ebp + 0x10 ] eax
cmp eax ecx
jne r-xdata
sub edx eax
sub_4031d0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
call sub_403630
add esp 0x18
pop ecx
pop ebp
retn
sub_403220
push ebp
mov ebp esp
push 0xffffffff
push sub_4271a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x20 ]
sub eax ecx
mov ebx eax
mov [ ebp - 0x14 ] ebx
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
mov eax ecx
sub eax edx
dec eax
cmp eax ebx
jae r-xdata
mov edi edx
sub edi ecx
add edi ebx
mov [ ebp - 0x18 ] edi
mov eax [ esi + 0x8 ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_421688
push edx
sub esp 0xc
mov eax esp
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x18 ]
cmp ecx edx
je r-xdata
mov edi eax
shr eax 0x1
or ecx 0xffffffff
sub ecx eax
cmp ecx edi
jae r-xdata
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0xc ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
add edi eax
xor edi edi
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
call sub_4037b0
mov eax [ esi + 0x4 ]
lea edi [ eax + ebx ]
mov ecx [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
push edi
lea ecx [ esi + 0xc ]
call sub_401d30
mov ebx eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x0
push ebx
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
call sub_403790
push eax
sub esp 0xc
lea edx [ ebp + 0x18 ]
mov eax esp
call sub_401ab0
sub esp 0xc
lea edx [ ebp + 0xc ]
mov eax esp
call sub_401ab0
call sub_4037b0
push eax
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_403790
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov edx [ esi + 0x4 ]
sub edx eax
add [ ebp - 0x14 ] edx
test eax eax
je r-xdata
mov edi eax
mov eax [ ebp - 0x18 ]
cmp edi eax
jae r-xdata
add [ esi + 0x4 ] ebx
cmp eax edi
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
add edi ebx
mov [ esi + 0x8 ] edi
mov eax [ ebp - 0x14 ]
lea ecx [ ebx + eax ]
mov [ esi + 0x4 ] ecx
mov [ esi ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
push eax
call sub_40e101
add esp 0x4
push ecx
call sub_403b40
add esp 0x4
sub_4033f0
push ebp
mov ebp esp
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_40dda0
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_403480
mov ecx [ edx ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4034e0
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
push esi
mov ecx eax
or esi 0xffffffff
shr ecx 0x1
sub esi ecx
cmp esi eax
pop esi
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
retn
mov eax edx
cmp eax edx
jae r-xdata
sub_4035b0
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov eax ecx
and ecx 0xf
push ebx
mov ebx ecx
mov ecx [ ebp + 0x10 ]
mov ecx [ ecx + 0x8 ]
shr eax 0x4
push esi
push edi
cmp ecx eax
ja r-xdata
mov edx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
mov ecx edx
shr ecx 0x4
and edx 0xf
cmp edi ecx
ja r-xdata
sub eax ecx
mov edi [ ebp + 0x10 ]
mov edi [ edi + 0x4 ]
mov esi [ esi + 0x4 ]
mov eax [ edi + eax * 4 ]
mov ecx [ esi + ecx * 4 ]
add eax ebx
mov bl [ eax ]
add ecx edx
mov dl [ ecx ]
pop edi
mov [ ecx ] bl
pop esi
mov [ eax ] dl
pop ebx
pop ebp
retn
sub ecx edi
sub_403630
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x1c ]
sub eax ebx
mov esi edi
sub esi ebx
mov [ ebp - 0x4 ] eax
mov eax esi
mov [ ebp - 0x8 ] eax
cmp ebx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] esi
cmp eax esi
jge r-xdata
mov edi edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jle r-xdata
cdq
idiv ecx
mov eax ecx
mov ecx edx
test edx edx
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x34 ] ebx
add ebx eax
mov eax [ ebp - 0x4 ]
add eax ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] ecx
cmp eax edi
jne r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ecx
mov edi [ eax ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
lea eax [ ebp + 0x8 ]
mov edi [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov edx [ edi + 0x8 ]
mov ecx esi
mov eax esi
shr ecx 0x4
and eax 0xf
cmp edx ecx
ja r-xdata
mov edx ebx
and ebx 0xf
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x18 ]
mov ebx [ ebx + 0x8 ]
shr edx 0x4
cmp ebx edx
ja r-xdata
sub ecx edx
mov ebx [ edi + 0x4 ]
mov ecx [ ebx + ecx * 4 ]
mov bl [ ecx + eax ]
add ecx eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + edx * 4 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x18 ] edi
mov al [ edx ]
mov [ edx ] bl
mov [ ecx ] al
mov edx [ ebp + 0x1c ]
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
sub edx esi
mov [ ebp - 0x14 ] esi
cmp eax edx
jge r-xdata
sub edx ebx
mov eax [ ebp + 0x8 ]
mov ecx ebx
sub ecx edx
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x2c ] ecx
lea eax [ ebp - 0x30 ]
mov [ ebp - 0xc ] esi
add esi eax
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] esi
lea eax [ ebp - 0x28 ]
jmp r-xdata
mov ebx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
mov esi [ eax + 0x4 ]
mov edi [ eax ]
cmp esi [ ebp - 0x34 ]
jne r-xdata
mov edi [ ebp + 0x1c ]
sub_403790
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_40dda0
add esp 0xc
add eax esi
pop esi
pop ebp
retn 0x4
sub_4037b0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push ebx
xor ecx ecx
push edi
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
xor edx edx
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x20 ]
push eax
sub esp 0xc
mov eax esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov [ eax + 0x8 ] edi
sub esp 0xc
mov eax esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test edx edx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ eax ]
mov [ eax + 0x8 ] ebx
call sub_403ab0
add esp 0x20
pop edi
pop ebx
pop ebp
retn 0x1c
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_403840
push esi
mov esi ecx
push edi
mov edi eax
cmp esi ebx
je r-xdata
pop edi
mov eax esi
pop esi
retn
cmp ebx edi
je r-xdata
push esi
mov eax ebx
call sub_403b40
add esp 0x4
sub edi ebx
lea eax [ edi + esi ]
pop edi
pop esi
retn
sub_4038a0
mov eax [ edx + 0x4 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx ]
mov edx [ eax + 0x8 ]
shr ecx 0x4
cmp edx ecx
ja r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx edx
sub_403910
mov eax [ edx + 0x4 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx ]
mov edx [ eax + 0x8 ]
shr ecx 0x4
cmp edx ecx
ja r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx edx
sub_403980
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_40dda0
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_4039a0
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
push eax
push ecx
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x14 ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
call sub_403ab0
add esp 0x20
pop ebp
retn
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_403a80
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_40dda0
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_403ab0
push ebp
mov ebp esp
push 0xffffffff
push sub_427180
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x4 ] 0x0
mov edi 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp + 0x8 ]
call sub_402a70
test esi esi
je r-xdata
add esi edi
mov [ ebp + 0x20 ] esi
add [ ebp + 0x10 ] edi
jmp r-xdata
mov cl [ eax ]
mov [ esi ] cl
mov eax [ ebp + 0x10 ]
cmp eax [ ebp + 0x1c ]
je r-xdata
sub_403b40
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi eax
sub esi ecx
mov edx edi
sub edx ecx
mov [ ebp - 0x10 ] edx
mov eax edx
mov [ ebp - 0x8 ] edx
mov ebx esi
test esi esi
je r-xdata
cmp eax edx
jge r-xdata
cdq
idiv ebx
mov eax ebx
mov ebx edx
test edx edx
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx ecx
neg edx
mov [ ebp - 0x18 ] edx
mov edx esi
neg edx
mov [ ebp - 0xc ] edx
mov edx edi
neg edx
lea ebx [ eax + ecx ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
lea edx [ ebx + esi ]
mov eax ebx
cmp edx edi
jne r-xdata
mov ecx edx
neg ecx
mov edx ecx
sub ecx [ ebp - 0x14 ]
mov eax esi
add ecx [ ebp - 0xc ]
sub eax edi
add eax [ ebp + 0x8 ]
add edx eax
add ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
add edx esi
add ecx [ ebp - 0xc ]
jmp r-xdata
movzx ebx [ eax ]
mov [ ebp - 0x1 ] bl
movzx ebx [ edx ]
mov [ eax ] bl
mov al [ ebp - 0x1 ]
mov [ edx ] al
lea ebx [ ecx + edi ]
mov eax edx
mov [ ebp - 0x1c ] eax
cmp esi ebx
jge r-xdata
mov eax [ ebp - 0x8 ]
dec eax
dec ebx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] ebx
test eax eax
jg r-xdata
mov ebx [ ebp - 0x10 ]
cmp edx ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub_403de0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
cmp [ eax ] 0x6464626d
je r-xdata
mov edx [ ebp + 0xc ]
push esi
push edi
mov edi [ eax + 0x4 ]
mov cl [ edi + eax + 0x48 ]
add eax 0x8
xor esi esi
mov [ ebp + 0xb ] cl
mov [ ebp - 0x10 ] edx
test edi edi
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x10 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx eax
test esi esi
je r-xdata
mov [ ebp + esi - 0x8 ] al
inc esi
inc ecx
mov [ ebp - 0xc ] ecx
cmp esi 0x4
jne r-xdata
cmp esi 0x4
jge r-xdata
test edi edi
jne r-xdata
xor ecx ecx
xor ecx ecx
lea esp [ esp ]
mov ecx 0x4
sub ecx esi
push ecx
lea eax [ ebp + esi - 0x8 ]
push 0x0
push eax
call sub_40e7f0
add esp 0xc
mov al [ ecx ]
dec edi
cmp al [ ebp + 0xb ]
je r-xdata
mov [ ebp + ecx - 0x8 ] al
inc ecx
cmp ecx 0x4
jl r-xdata
inc al
cmp al 0x40
jl r-xdata
mov [ ebp + ecx - 0x8 ] al
inc ecx
cmp ecx 0x4
jl r-xdata
inc al
cmp al 0x40
jl r-xdata
mov dl [ ebp + ecx - 0x8 ]
xor al al
mov ecx [ ebp - 0x8 ]
mov dl cl
add dl dl
mov al ch
shr al 0x4
add dl dl
and al 0x3
add al dl
mov [ ebp - 0x4 ] al
mov al [ ebp - 0x6 ]
mov dl al
shr dl 0x2
mov cl ch
shl cl 0x4
and dl 0xf
xor dl cl
mov ecx [ ebp + 0xc ]
shl al 0x6
add al [ ebp - 0x5 ]
mov [ ebp - 0x3 ] dl
mov dx [ ebp - 0x4 ]
mov [ ecx ] dx
mov [ ecx + 0x2 ] al
add ecx 0x3
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0xc ]
xor esi esi
cmp al dl
je r-xdata
mov dl [ ebp + ecx - 0x8 ]
xor al al
mov ecx [ ebp - 0x8 ]
mov al cl
add al al
mov dl ch
shr dl 0x4
and dl 0x3
add al al
add dl al
mov al [ ebp - 0x6 ]
mov [ ebp - 0x4 ] dl
mov dl al
shr dl 0x2
mov cl ch
shl al 0x6
add al [ ebp - 0x5 ]
and dl 0xf
shl cl 0x4
xor dl cl
dec esi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] al
test esi esi
jle r-xdata
cmp al dl
je r-xdata
mov edi [ ebp + 0xc ]
push esi
lea eax [ ebp - 0x4 ]
push eax
push edi
call sub_40e480
add esp 0xc
add edi esi
mov [ ebp + 0xc ] edi
sub_403f40
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ecx ]
mov eax 0x1
add esi 0x4
cmp esi eax
jbe r-xdata
pop esi
pop ebp
retn
mov dl [ eax + ecx - 0x1 ]
xor [ eax + ecx ] dl
inc eax
cmp eax esi
jb r-xdata
sub_403f70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp + 0x8 ] ecx
mov cl [ ebp + 0xa ]
mov al [ ebp + 0x9 ]
xor [ ebp + 0xb ] cl
xor cl al
xor al [ ebp + 0x8 ]
mov [ ebp + 0xa ] cl
mov [ ebp + 0x9 ] al
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_403fa0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ ebp + 0x8 ] eax
mov dl [ ebp + 0xa ]
mov al [ ebp + 0x9 ]
xor [ ebp + 0xb ] dl
xor dl al
xor al [ ebp + 0x8 ]
mov [ ebp + 0xa ] dl
mov [ ebp + 0x9 ] al
mov eax [ ebp + 0x8 ]
add eax 0x2
js r-xdata
pop ebp
retn
mov dl [ ecx + eax ]
xor [ ecx + eax + 0x1 ] dl
dec eax
jns r-xdata
sub_404040
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
add ecx [ ebp + 0x8 ]
push eax
movsx eax [ ebp + 0x10 ]
push eax
push ecx
call sub_40e7f0
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
mov al [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx ] al
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_4040a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
xor al al
pop esi
pop ebp
retn 0x4
mov edx [ ecx + 0x14 ]
cmp edx 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
cmp esi eax
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov al 0x1
pop esi
pop ebp
retn 0x4
mov ecx [ ecx + 0x10 ]
add ecx eax
cmp ecx esi
jbe r-xdata
sub_404150
push ebp
mov ebp esp
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edx ]
pop ebp
retn 0x4
mov ecx [ ecx ]
mov eax [ ebp + 0x8 ]
add eax ecx
pop ebp
retn 0x4
sub_404190
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
mov [ edi + esi ] 0x0
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_40e101
add esp 0x4
pop ebx
push edi
push ebx
push esi
call sub_40e480
add esp 0xc
sub_4041f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_4216d5
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov [ ecx + eax ] 0x0
mov ecx [ esi ]
mov [ ecx + eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add ebx ecx
push eax
add ebx edi
add edx ecx
push ebx
push edx
call sub_40dda0
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_4042c0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
push eax
call sub_40e101
add esp 0x4
sub_4042f0
push ebp
mov ebp esp
push 0xffffffff
push sub_427150
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ ebp + 0x8 ]
mov edi eax
or edi 0xf
cmp edi 0xfffffffe
jbe r-xdata
mov ebx [ esi + 0x14 ]
mov ecx ebx
shr ecx 0x1
mov eax 0xaaaaaaab
mul edi
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov edi eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ edi + 0x1 ]
push ecx
lea ecx [ esi + 0x18 ]
call sub_401d30
mov ebx eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax 0xfffffffe
sub eax ecx
cmp ebx eax
lea edi [ ecx + ebx ]
jbe r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edi 0xfffffffe
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi ] 0x0
mov [ esi ] ebx
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ecx
cmp edi 0x10
jb r-xdata
mov edx [ esi ]
push edx
call sub_40e101
add esp 0x4
mov ecx [ ebp + 0xc ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ esi + ecx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi ebx
push ecx
push eax
push ebx
call sub_40e480
add esp 0xc
mov ecx [ ebp + 0xc ]
sub_40436f
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x2
inc eax
push eax
mov ecx [ ebp - 0x14 ]
add ecx 0x18
call sub_401d30
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_404400
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
push 0x0
push 0x0
call sub_40e86a
int3
mov eax [ esi ]
push eax
call sub_40e101
add esp 0x4
sub_404430
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_421688
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_4042f0
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x10
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
cmp eax 0x10
jb r-xdata
mov edi ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
xor ecx ecx
mov [ edi + esi ] 0x0
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_40e101
mov ebx [ ebp + 0x8 ]
add esp 0x4
push edi
push ebx
push esi
call sub_40e480
add esp 0xc
sub_4044e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_421688
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_421688
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_4042f0
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
push edx
push ebx
push eax
mov ecx esi
call sub_404040
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_404590
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_4216d5
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_4041f0
push ebx
push 0x0
mov ecx esi
call sub_4041f0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_421688
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_4042f0
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
add ecx ebx
push ecx
push eax
call sub_40e480
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_404680
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_421688
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
mov ecx esi
call sub_4042f0
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push ebx
push eax
call sub_40e480
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_404590
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_404590
pop esi
pop ebx
pop ebp
retn 0x8
sub_404780
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
push edi
lea edi [ eax + 0x1 ]
lea ecx [ ecx ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push esi
call sub_404680
pop edi
pop esi
pop ebp
retn 0x4
sub_4047b0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_4216d5
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_421688
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_421688
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_4042f0
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add ecx [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ esi + 0x10 ]
add ecx eax
push ecx
call sub_40e480
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_4048c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0xffffffff
mov esi ecx
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov [ esi ] 0x0
call sub_404590
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4048f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] 0x0
call sub_404680
mov eax esi
pop esi
pop ebp
retn 0x8
sub_404920
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_404680
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4049e0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_40e101
add esp 0x4
mov edx [ edi ]
mov [ esi ] edx
mov [ edi ] 0x0
mov ecx [ edi + 0x10 ]
inc ecx
push ecx
push edi
push esi
call sub_40dda0
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
sub_404a60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov [ esi ] 0x0
call sub_4049e0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_404a90
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0x28 ] 0x10
jb r-xdata
push ebx
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
push eax
call sub_40e101
add esp 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov al [ ebp + 0x8 ]
mov dl al
and al 0x3
shl al 0x4
shr dl 0x2
mov cl al
mov al [ ebp + 0x9 ]
mov [ ebp - 0x8 ] dl
mov dl al
and al 0xf
add al al
shr dl 0x4
add cl dl
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x4 ] 0x0
lea ecx [ eax + eax ]
mov al [ ebp + 0xa ]
mov dl al
shr dl 0x6
add ecx edx
and al 0x3f
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] al
mov eax [ ebp + 0xc ]
mov cl [ eax ]
dec [ ebp + 0x10 ]
mov [ ebp + edi + 0x8 ] cl
inc edi
inc eax
mov [ ebp - 0x4 ] edi
mov [ ebp + 0xc ] eax
cmp edi 0x3
jne r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
movzx ecx [ ebp + ecx - 0x8 ]
mov bl [ ecx + eax ]
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
jbe r-xdata
lea eax [ ebp + 0x14 ]
pop ebx
cmp edi 0x3
jge r-xdata
push r--data
call sub_421688
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
ja r-xdata
mov al [ ebp + 0x8 ]
mov cl al
and al 0x3
shl al 0x4
mov dl al
mov al [ ebp + 0x9 ]
shr cl 0x2
mov [ ebp - 0x8 ] cl
mov cl al
and al 0xf
add al al
shr cl 0x4
add dl cl
mov [ ebp - 0x7 ] dl
lea edx [ eax + eax ]
mov al [ ebp + 0xa ]
mov cl al
shr cl 0x6
and al 0x3f
mov [ ebp - 0x5 ] al
lea eax [ edi + 0x1 ]
add edx ecx
mov [ ebp - 0x6 ] dl
xor edx edx
mov [ ebp + 0x10 ] edx
test eax eax
jle r-xdata
mov edx 0x3
sub edx edi
push edx
lea eax [ ebp + edi + 0x8 ]
push 0x0
push eax
call sub_40e7f0
add esp 0xc
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
cmp edi 0x3
jge r-xdata
cmp [ ebp + 0x28 ] 0x10
mov eax [ ebp + 0x14 ]
jae r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_4042f0
mov edx 0x10
jmp r-xdata
mov bl [ ebp + 0x30 ]
jmp r-xdata
movzx ecx [ ebp + edx - 0x8 ]
mov bl [ ecx + eax ]
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
jbe r-xdata
lea eax [ ebp + 0x14 ]
setne al
test al al
je r-xdata
mov [ esi + 0x10 ] edi
cmp ecx edx
jb r-xdata
test edi edi
mov eax [ esi + 0x10 ]
or edx 0xffffffff
inc edi
sub edx eax
mov [ ebp - 0x4 ] edi
cmp edx 0x1
jbe r-xdata
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
ja r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax 0x4
jl r-xdata
mov ecx [ esi + 0x10 ]
cmp [ esi + 0x14 ] edx
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
mov eax [ ebp + 0x14 ]
mov edx 0x10
cmp [ ebp + 0x28 ] edx
jae r-xdata
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp - 0x4 ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax ] 0x0
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_4042f0
mov edx [ ebp + 0x10 ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_4042f0
jmp r-xdata
setne al
test al al
je r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
test edi edi
mov [ eax + edi ] 0x0
setne al
test al al
je r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
test edi edi
mov eax [ ebp - 0x4 ]
inc edx
inc eax
mov [ ebp + 0x10 ] edx
cmp edx eax
jl r-xdata
cmp [ esi + 0x14 ] 0x10
mov ecx [ esi + 0x10 ]
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jl r-xdata
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax ] 0x0
mov edi [ ebp - 0x4 ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax ] 0x0
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + ecx ] bl
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ eax + edi ] 0x0
mov [ edi + eax ] 0x0
sub_404d90
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
sub esp 0x81c
push ebx
push esi
mov esi [ ebp + 0xc ]
cmp [ esi + edx - 0x1 ] 0x0
push edi
jne r-xdata
mov eax 0x3e8
mov ecx 0x100
lea edi [ ebp - 0x81c ]
[ edi ]
xor eax eax
mov ecx 0x100
lea edi [ ebp - 0x41c ]
[ edi ]
test edx edx
je r-xdata
lea esp [ esp ]
xor edi edi
lea esp [ esp ]
lea ecx [ ecx ]
dec edx
cmp [ esi + edx - 0x1 ] 0x0
je r-xdata
cmp [ ebp + eax - 0x820 ] 0x3e8
jne r-xdata
mov ebx [ ebp + edx - 0x41c ]
cmp ebx [ ebp + eax - 0x424 ]
jbe r-xdata
movzx ecx [ eax + esi ]
inc [ ebp + ecx * 4 - 0x41c ]
lea ecx [ ebp + ecx * 4 - 0x41c ]
inc eax
cmp eax edx
jb r-xdata
cmp [ ebp + eax - 0x81c ] 0x3e8
jne r-xdata
mov ebx [ ebp + edx - 0x41c ]
cmp ebx [ ebp + eax - 0x420 ]
jbe r-xdata
lea esi [ ecx - 0x2 ]
lea edx [ eax - 0x8 ]
cmp [ ebp + eax - 0x818 ] 0x3e8
jne r-xdata
mov ebx [ ebp + edx - 0x41c ]
cmp ebx [ ebp + eax - 0x41c ]
jbe r-xdata
lea esi [ ecx - 0x1 ]
lea edx [ eax - 0x4 ]
add ecx 0x4
lea ebx [ ecx - 0x2 ]
add eax 0x10
cmp ebx 0x100
jb r-xdata
mov ebx [ ebp + edx - 0x41c ]
cmp ebx [ ebp + eax - 0x418 ]
jbe r-xdata
mov esi ecx
mov edx eax
cmp [ ebp + eax - 0x824 ] 0x3e8
jne r-xdata
mov eax 0xff
sub eax edi
inc edi
mov [ ebp + esi * 4 - 0x81c ] eax
cmp edi 0x100
jb r-xdata
lea esi [ ecx + 0x1 ]
lea edx [ eax + 0x4 ]
xor esi esi
xor edx edx
lea ecx [ esi + 0x2 ]
mov eax 0x8
lea esp [ esp ]
mov edi 0xf
xor eax eax
mov ecx edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1c ] al
xor ebx ebx
jmp r-xdata
or edx 0xffffffff
sub edx eax
cmp edx 0x1
jbe r-xdata
push r--data
call sub_421688
lea esi [ eax + 0x1 ]
cmp esi 0xfffffffe
ja r-xdata
cmp ecx esi
jae r-xdata
test esi esi
jne r-xdata
push eax
push esi
lea ecx [ ebp - 0x1c ]
call sub_4042f0
mov eax [ ebp - 0xc ]
test esi esi
je r-xdata
mov ecx [ ebp - 0x1c ]
mov edx 0x10
cmp [ ebp - 0x8 ] edx
jae r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] esi
cmp ecx 0x10
jae r-xdata
inc ebx
cmp ebx 0x41
jb r-xdata
mov [ ecx + eax ] bl
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] esi
cmp [ ebp - 0x8 ] edx
jae r-xdata
lea ecx [ ebp - 0x1c ]
mov [ eax ] 0x0
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp esi eax
je r-xdata
mov [ eax + esi ] 0x0
lea eax [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x8 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
push ecx
call sub_40e101
add esp 0x4
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp [ ebp - 0x8 ] 0x10
jae r-xdata
mov ecx [ esi ]
push ecx
call sub_40e101
add esp 0x4
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ecx
mov [ esi + 0x10 ] edx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
inc edx
push edx
lea eax [ ebp - 0x1c ]
push eax
push esi
call sub_40dda0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
add esp 0xc
mov [ esi + 0x14 ] eax
pop edi
mov [ esi + 0x10 ] edx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_405000
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
push 0x4
mov edi 0xf
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
push r--data
mov ecx esi
mov [ esi ] bl
call sub_404680
mov eax [ ebp + 0x44 ]
push eax
sub esp 0x1c
mov ecx esp
push 0xffffffff
push ebx
lea edx [ ebp + 0x28 ]
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] bl
call sub_404590
mov eax [ ebp + 0xc ]
mov edi 0x10
cmp [ ebp + 0x20 ] edi
jae r-xdata
mov ecx [ ebp + 0x1c ]
push ecx
push eax
lea edx [ ebp - 0x38 ]
push edx
call sub_404a90
mov eax [ ebp - 0x28 ]
mov ecx 0xf
add esp 0x2c
mov [ ebp - 0x1c ] bl
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] 0x4
cmp ecx edi
jae r-xdata
lea eax [ ebp + 0xc ]
push 0xffffffff
mov [ eax + 0x4 ] bl
push ebx
lea eax [ ebp - 0x1c ]
push eax
mov ecx esi
call sub_4047b0
cmp [ ebp - 0x8 ] edi
jb r-xdata
lea eax [ ebp - 0x1c ]
push 0xffffffff
push ebx
lea edx [ ebp - 0x38 ]
push edx
mov ecx esi
call sub_4047b0
push 0xffffffff
push ebx
lea eax [ ebp + 0x28 ]
push eax
mov ecx esi
call sub_4047b0
mov ecx [ ebp + 0x44 ]
push ecx
push 0x1
mov ecx esi
call sub_4044e0
cmp [ ebp - 0x24 ] edi
jb r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
call sub_40e101
add esp 0x4
cmp [ ebp + 0x20 ] edi
jb r-xdata
mov edx [ ebp - 0x38 ]
push edx
call sub_40e101
add esp 0x4
mov [ ebp + 0x20 ] 0xf
mov [ ebp + 0x1c ] ebx
mov [ ebp + 0xc ] bl
cmp [ ebp + 0x3c ] edi
jb r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_40e101
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x28 ]
push ecx
call sub_40e101
add esp 0x4
sub_405120
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebx ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
cmp eax esi
jae r-xdata
test esi esi
je r-xdata
mov esi eax
pop edi
mov [ ebx ] esi
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov eax [ edi ]
mov ecx [ ebp + 0xc ]
push esi
push eax
push ecx
call sub_40e480
add [ edi ] esi
add esp 0xc
sub [ edi + 0x4 ] esi
sub_405160
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
add eax edi
push eax
push ecx
call sub_40ed33
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0xc ]
push edi
push edx
add ecx eax
push ecx
mov [ esi + 0x8 ] eax
call sub_40e480
add esp 0x14
add [ esi + 0xc ] edi
pop esi
sub_4051a0
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
call sub_405300
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push 0x0
push edi
push ecx
push 0x100000
push 0x5
push 0x2
push 0x0
push 0x3
push eax
mov [ ebp - 0x4 ] eax
call sub_4053b0
mov esi eax
add esp 0x24
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
push 0x0
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push sub_405160
mov edx ecx
push edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
push sub_405120
push eax
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
call sub_4054d0
mov esi eax
mov eax [ ebp - 0xc ]
add esp 0x1c
test esi esi
je r-xdata
lea edx [ ebp - 0x4 ]
push edx
call sub_405380
add esp 0x4
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov [ edx ] eax
mov edx [ ebp - 0x8 ]
pop edi
mov [ ecx ] edx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
call sub_405380
add esp 0x4
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_40ede0
add esp 0x4
sub_405270
push ebp
mov ebp esp
sub esp 0x14
push esi
call sub_4057b0
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov [ ebp - 0x10 ] edx
lea edx [ ebp - 0x14 ]
push edx
push sub_405160
mov ecx edx
push ecx
push sub_405120
push eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
call sub_405840
mov esi eax
add esp 0x18
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x18 ]
mov [ eax ] ecx
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
lea edx [ ebp - 0x4 ]
push edx
call sub_405820
add esp 0x4
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_40ede0
add esp 0x4
sub_405300
push esi
push 0x78
call sub_40ee59
push 0x78
mov esi eax
push 0x0
push esi
call sub_40e7f0
push esi
call sub_406090
push 0x0
mov eax 0x1
push 0x0
push 0x0
mov [ esi + 0x14 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x28 ] eax
mov ecx 0x20
lea eax [ esi + 0x44 ]
push 0x0
push eax
mov [ esi + 0x8 ] 0x3
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x2
mov [ esi ] 0x5
mov [ esi + 0x18 ] ecx
mov [ esi + 0x4 ] 0x1000000
mov [ esi + 0x20 ] 0x4
mov [ esi + 0x24 ] ecx
call sub_406060
lea ecx [ esi + 0x5c ]
push ecx
call sub_405fd0
add esp 0x2c
mov eax esi
pop esi
retn
sub_405380
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
add eax 0x44
push eax
push eax
push ecx
call sub_409150
add esp 0xc
sub_4053b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx ecx [ ebp + 0xc ]
movzx edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
movzx ecx [ ebp + 0x14 ]
mov [ eax + 0x10 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ eax + 0xc ] edx
movzx edx [ ebp + 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x28 ]
mov [ eax + 0x3c ] ecx
mov ecx [ ebp + 0x20 ]
mov [ eax ] edx
mov edx [ ebp + 0x24 ]
mov [ eax + 0x38 ] edx
mov [ eax + 0x40 ] ecx
test ecx ecx
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0x5c
push eax
call sub_40a560
add esp 0x4
sub_405400
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
push edi
push ebx
push eax
push ecx
call edx
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edi
cmp [ esi + 0x1c ] edi
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0xc ]
push eax
call sub_40a650
mov [ esi + 0xc ] eax
sub_405450
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
push ecx
push edx
call eax
add esp 0xc
pop ebp
retn
sub_405470
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
xor eax eax
pop ebp
retn
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x14 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
call ecx
add esp 0xc
sub_4054a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
push edx
add eax 0x44
push eax
call sub_406060
add esp 0x14
sub_4054d0
push ebp
mov ebp esp
sub esp 0x70
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x20 ] eax
call sub_40a5a0
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0xa
pop ebx
call sub_40daf7
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
xor ecx ecx
cmp [ esi + 0x70 ] ecx
mov [ ebp - 0x6c ] edi
setne cl
mov [ ebp - 0x34 ] edx
mov edx [ esi + 0x3c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x2c ]
lea edi [ esi + 0x44 ]
push edi
mov [ ebp - 0x54 ] ecx
mov ecx [ esi + 0x38 ]
mov [ ebp - 0x48 ] ecx
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x70 ] sub_405400
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x64 ] 0xffffffff
mov [ ebp - 0x38 ] sub_405450
mov [ ebp - 0x50 ] sub_405470
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] ecx
call sub_409070
add esp 0x4
mov [ esi + 0x30 ] eax
test eax eax
jne r-xdata
push esi
push eax
call sub_406780
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0xc
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x40 ]
cmp eax 0x1
je r-xdata
mov edx [ esi + 0x5c ]
mov eax [ edi ]
push edx
push edi
call eax
mov edx [ esi + 0x60 ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ebx eax
call edx
mov al [ esi + 0x10 ]
mov cl [ esi + 0xc ]
mov dl [ esi + 0x8 ]
mov [ ebp - 0x1c ] al
mov eax [ esi + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x38 ]
mov [ ebp - 0x1a ] dl
mov [ ebp - 0x1b ] cl
mov ecx [ esi + 0x3c ]
mov edx eax
add esp 0xc
or edx ecx
mov [ ebp - 0x19 ] 0x1
je r-xdata
test eax eax
je r-xdata
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x10 ] ecx
mov ecx [ esi + 0x68 ]
push ebx
call ecx
mov edx [ esi + 0x5c ]
mov eax [ ebp - 0x24 ]
push edx
push ebx
push eax
call [ ebp - 0x28 ]
mov ecx [ esi + 0x48 ]
push ebx
push edi
mov [ ebp - 0x20 ] eax
call ecx
mov edx [ ebp - 0x20 ]
add esp 0x1c
cmp edx [ esi + 0x5c ]
je r-xdata
mov [ ebp - 0x19 ] 0x0
pop edi
pop esi
mov eax 0xd
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
push edi
push edi
lea eax [ ebp - 0x50 ]
push eax
mov eax [ esi + 0x30 ]
lea ecx [ ebp - 0x70 ]
push ecx
lea edx [ ebp - 0x38 ]
push edx
push eax
call sub_40a0e0
add esp 0x18
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0xf
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
cmp [ esi + 0x70 ] eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x6c ]
test eax eax
je r-xdata
mov ecx [ edi ]
push eax
push edi
call ecx
mov edx [ ebp - 0x64 ]
mov ecx [ esi + 0x3c ]
mov ebx eax
mov eax [ esi + 0x38 ]
not edx
mov [ ebp - 0x14 ] edx
lea edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x70 ]
push ebx
push edx
mov [ ebp - 0x8 ] ecx
call eax
mov ecx [ esi + 0x6c ]
mov edx [ ebp - 0x24 ]
push ecx
push ebx
push edx
call [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x48 ]
push ebx
push edi
call eax
mov ecx [ ebp - 0x20 ]
add esp 0x24
cmp ecx [ esi + 0x6c ]
jne r-xdata
sub_405700
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi 0xd
test edi edi
jne r-xdata
shrd ebx edi 0x1
shr edi 0x1
cmp ebx 0x800000
jbe r-xdata
lea ecx [ esi - 0x1 ]
mov eax 0x1
shl eax cl
mov [ ebp + 0xc ] ecx
mov ecx ebx
cdq
sub ecx eax
mov eax edi
sbb eax edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
mov eax 0x1
mov ecx esi
shl eax cl
cdq
sub eax ebx
sbb edx edi
cmp edx [ ebp - 0x4 ]
jb r-xdata
inc esi
mov eax ebx
mov edx edi
mov ecx esi
call sub_40eef0
or eax edx
jne r-xdata
mov eax ebx
and eax 0xffffe000
or eax edi
je r-xdata
pop edi
mov ecx esi
mov eax 0x1
pop esi
shl eax cl
pop ebx
mov esp ebp
pop ebp
retn
ja r-xdata
cmp esi 0x17
jle r-xdata
mov ecx [ ebp + 0xc ]
pop edi
mov eax 0x1
pop esi
shl eax cl
pop ebx
mov esp ebp
pop ebp
retn
cmp eax [ ebp - 0x8 ]
jbe r-xdata
pop edi
pop esi
mov eax 0x800000
pop ebx
mov esp ebp
pop ebp
retn
sub_4057b0
push esi
push 0x50018
call sub_40ee59
push 0x50018
mov esi eax
push 0x0
push esi
call sub_40e7f0
push 0x0
push 0x0
push 0x0
lea eax [ esi + 0x50000 ]
push 0x0
push eax
call sub_406060
add esp 0x24
mov eax esi
pop esi
retn
sub_4057f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
push edx
add eax 0x50000
push eax
call sub_406060
add esp 0x14
sub_405820
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
push eax
call sub_40ede0
add esp 0x4
sub_405840
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov [ ebp - 0xd0 ] eax
mov eax [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xdc ] ecx
mov [ ebp - 0xd8 ] edx
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xbc ] esi
mov [ ebp - 0xd4 ] 0xffffffff
mov [ ebp - 0xb0 ] esi
cmp eax 0x1
jne r-xdata
cmp eax esi
jne r-xdata
lea eax [ ebp - 0xfc ]
push eax
call sub_405fd0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0xa
pop ebx
call sub_40daf7
mov esp ebp
pop ebp
retn
call sub_40a5a0
lea ecx [ ebp - 0xfc ]
push ecx
call sub_40a560
add esp 0x4
push 0x70
lea edx [ ebp - 0xac ]
push esi
push edx
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
call sub_40e7f0
lea eax [ ebp - 0xac ]
push eax
call sub_40b9a0
mov ecx [ ebp - 0xfc ]
mov edx [ ebx + 0x50000 ]
lea eax [ ebx + 0x50000 ]
push ecx
push eax
mov [ ebp - 0xc4 ] eax
call edx
mov esi eax
mov eax [ ebp - 0xfc ]
lea ecx [ ebp - 0x3c ]
push ecx
mov [ ebp - 0xb4 ] eax
call [ ebp - 0xf8 ]
mov eax [ ebp - 0xd0 ]
lea edx [ ebp - 0xb4 ]
push edx
push esi
push eax
call edi
add esp 0x28
test eax eax
jne r-xdata
mov edx [ ebp - 0xc4 ]
mov eax [ ebx + 0x50004 ]
push esi
push edx
call eax
add esp 0x8
pop edi
pop esi
mov eax 0xe
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xb4 ]
cmp ecx [ ebp - 0xfc ]
jne r-xdata
lea edx [ ebp - 0x3c ]
push edx
push esi
call [ ebp - 0xf4 ]
add esp 0x8
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] 0x0
mov eax esi
jne r-xdata
mov eax [ ebp - 0xc4 ]
mov ecx [ ebx + 0x50004 ]
push esi
push eax
call ecx
add esp 0x8
pop edi
pop esi
mov eax 0x10
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc4 ]
push edx
push 0x5
push eax
lea eax [ ebp - 0xac ]
push eax
call sub_40c280
mov ecx [ ebp - 0xc4 ]
mov edx [ ebx + 0x50004 ]
push esi
push ecx
call edx
mov ecx [ ebp - 0xd0 ]
lea eax [ ebp - 0xcc ]
push eax
push ebx
xor esi esi
push ecx
mov [ ebp - 0xb8 ] 0x40000
mov [ ebp - 0xcc ] 0x10000
mov [ ebp - 0xc8 ] esi
call edi
add esp 0x24
test eax eax
jne r-xdata
lea edx [ ebp - 0x118 ]
push edx
call sub_405fd0
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
call [ ebp - 0x10c ]
add esp 0xc
lea eax [ ebp - 0x14 ]
mov [ ebp - 0xb0 ] 0xe
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0xac ]
push ecx
call sub_40c0e0
mov eax [ ebp - 0xb0 ]
add esp 0x8
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xcc ]
test eax eax
je r-xdata
mov [ ebp - 0xb0 ] 0x12
jmp r-xdata
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0xb4 ] 0x0
lea edi [ ebx + 0x10000 ]
mov [ ebp - 0xb0 ] 0x11
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0xb8 ]
jne r-xdata
add [ ebp - 0xc0 ] eax
mov ecx [ ebp - 0xd8 ]
push eax
adc [ ebp - 0xbc ] 0x0
push edi
push ecx
call [ ebp - 0xdc ]
add esp 0xc
cmp eax [ ebp - 0xb8 ]
jne r-xdata
test eax eax
je r-xdata
mov [ ebp - 0xb0 ] 0xf
jmp r-xdata
mov ecx [ ebp - 0xc8 ]
mov eax [ ebp - 0xcc ]
add esi ecx
cmp esi eax
jae r-xdata
mov ecx [ ebp - 0xd4 ]
push eax
mov edx edi
call sub_40a650
mov [ ebp - 0xd4 ] eax
mov eax [ ebp - 0xb8 ]
cmp [ ebp - 0xb4 ] 0x1
je r-xdata
sub eax esi
cmp [ ebp - 0xb4 ] 0x1
mov ecx eax
mov [ ebp - 0xc8 ] ecx
jne r-xdata
mov eax [ ebp - 0xec ]
test eax eax
je r-xdata
cmp [ ebp - 0x39 ] 0x0
mov edi [ ebp - 0xe0 ]
jne r-xdata
lea edx [ ebp - 0xb4 ]
push edx
push 0x0
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebx + esi ]
push ecx
lea edx [ ebp - 0xb8 ]
push edx
lea eax [ ebp - 0xac ]
push edi
push eax
call sub_40bd10
add esp 0x1c
test eax eax
jne r-xdata
cmp [ ebp - 0xec ] 0x0
je r-xdata
cmp ecx eax
jb r-xdata
mov edx [ ebp - 0xd0 ]
lea ecx [ ebp - 0xcc ]
push ecx
push ebx
xor esi esi
push edx
mov [ ebp - 0xb8 ] 0x40000
mov [ ebp - 0xcc ] 0x10000
mov [ ebp - 0xc8 ] esi
call edi
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0xbc ]
cmp edx [ ebp - 0x30 ]
ja r-xdata
cmp [ ebp - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0xd4 ]
not eax
cmp [ ebp - 0x24 ] eax
je r-xdata
mov eax [ ebp - 0xe4 ]
test eax eax
je r-xdata
jb r-xdata
mov ecx [ ebp - 0xc0 ]
cmp [ ebp - 0x34 ] ecx
jne r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp - 0xc0 ]
jne r-xdata
mov [ ebp - 0xb0 ] 0x13
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
add ebx esi
push ebx
call eax
add esp 0x8
mov eax [ ebp - 0xc0 ]
cmp eax [ ebp - 0x34 ]
jae r-xdata
mov [ ebp - 0xb0 ] 0x14
mov edx [ ebp - 0xbc ]
cmp [ ebp - 0x30 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0xbc ]
jmp r-xdata
je r-xdata
sub_405c90
push ebp
mov ebp esp
cmp al 0xe1
jbe r-xdata
movzx ecx al
mov eax ecx
cdq
push esi
mov esi 0x2d
idiv esi
mov esi [ ebp + 0x8 ]
mov [ esi ] al
mov eax 0x38e38e39
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
mov edx [ ebp + 0xc ]
mov [ edx ] al
mov eax ecx
cdq
mov ecx 0x9
idiv ecx
mov eax [ ebp + 0x10 ]
pop esi
mov [ eax ] dl
xor al al
pop ebp
retn
or al 0xff
pop ebp
retn
sub_405ce0
mov [ eax ] 0x0
movzx edx [ ecx ]
add [ eax ] edx
mov edx [ eax ]
push esi
movzx esi [ ecx + 0x1 ]
shl esi 0x8
add edx esi
mov [ eax ] edx
movzx esi [ ecx + 0x2 ]
shl esi 0x10
add edx esi
mov [ eax ] edx
movzx ecx [ ecx + 0x3 ]
shl ecx 0x18
add ecx edx
mov edx 0x10000000
cmp edx ecx
mov [ eax ] ecx
sbb al al
pop esi
retn
sub_405d20
mov [ edi ] 0x1
mov [ ecx ] 0x0
mov [ ecx + 0x4 ] 0x0
movzx eax [ esi ]
cdq
add [ ecx ] eax
push ebx
mov bl 0xff
adc [ ecx + 0x4 ] edx
cmp [ esi ] bl
je r-xdata
movzx eax [ esi + 0x1 ]
cdq
shld edx eax 0x8
shl eax 0x8
add [ ecx ] eax
adc [ ecx + 0x4 ] edx
cmp [ esi + 0x1 ] bl
je r-xdata
mov [ edi ] 0x0
movzx eax [ esi + 0x2 ]
cdq
shld edx eax 0x10
shl eax 0x10
add [ ecx ] eax
adc [ ecx + 0x4 ] edx
cmp [ esi + 0x2 ] bl
je r-xdata
mov [ edi ] 0x0
movzx eax [ esi + 0x3 ]
cdq
shld edx eax 0x18
shl eax 0x18
add [ ecx ] eax
adc [ ecx + 0x4 ] edx
cmp [ esi + 0x3 ] bl
je r-xdata
mov [ edi ] 0x0
movzx eax [ esi + 0x4 ]
add [ ecx ] 0x0
cdq
adc [ ecx + 0x4 ] eax
cmp [ esi + 0x4 ] bl
je r-xdata
mov [ edi ] 0x0
movzx eax [ esi + 0x5 ]
cdq
shl eax 0x8
add [ ecx ] 0x0
adc [ ecx + 0x4 ] eax
cmp [ esi + 0x5 ] bl
je r-xdata
mov [ edi ] 0x0
movzx eax [ esi + 0x6 ]
cdq
shl eax 0x10
add [ ecx ] 0x0
adc [ ecx + 0x4 ] eax
cmp [ esi + 0x6 ] bl
je r-xdata
mov [ edi ] 0x0
movzx eax [ esi + 0x7 ]
cdq
shl eax 0x18
add [ ecx ] 0x0
adc [ ecx + 0x4 ] eax
cmp [ esi + 0x7 ] bl
pop ebx
je r-xdata
mov [ edi ] 0x0
retn
mov [ edi ] 0x0
sub_405e10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov al [ esi ]
push edi
cmp al 0xe1
ja r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn
movzx edi al
mov eax edi
cdq
mov ecx 0x2d
idiv ecx
mov ecx [ ebp + 0xc ]
mov [ ecx ] al
mov eax 0x38e38e39
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
mov [ ecx + 0x1 ] al
mov eax edi
cdq
mov edi 0x9
idiv edi
mov [ ecx + 0x2 ] dl
mov [ ecx + 0x10 ] 0x0
movzx edx [ esi + 0x1 ]
add [ ecx + 0x10 ] edx
movzx edx [ esi + 0x2 ]
mov eax [ ecx + 0x10 ]
shl edx 0x8
add eax edx
mov [ ecx + 0x10 ] eax
movzx edx [ esi + 0x3 ]
shl edx 0x10
add eax edx
mov [ ecx + 0x10 ] eax
movzx edx [ esi + 0x4 ]
shl edx 0x18
add edx eax
mov [ ecx + 0x10 ] edx
cmp edx 0x10000000
ja r-xdata
lea edi [ ecx + 0x3 ]
add esi 0x5
add ecx 0x8
call sub_405d20
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_405eb0
push ebp
mov ebp esp
xor eax eax
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] al
push edi
mov edi [ ebp + 0xc ]
movzx eax [ edi + 0x1 ]
mov cl 0x6b
imul cl
mov dl al
movzx eax [ edi ]
mov cl 0x2d
imul cl
sub al dl
add al [ edi + 0x2 ]
mov [ esi ] al
movzx edx [ edi + 0x10 ]
mov [ esi + 0x1 ] dl
mov eax [ edi + 0x10 ]
shr eax 0x8
mov [ esi + 0x2 ] al
mov cl [ edi + 0x12 ]
mov [ esi + 0x3 ] cl
movzx edx [ edi + 0x13 ]
mov [ esi + 0x4 ] dl
cmp [ edi + 0x3 ] 0x0
je r-xdata
mov al [ edi + 0x8 ]
mov [ esi + 0x5 ] al
mov [ esi + 0x5 ] 0xff
jmp r-xdata
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0xc ]
shrd ecx edx 0x8
shr edx 0x8
mov [ esi ] cl
mov [ esi ] 0xff
jmp r-xdata
add esi 0x6
cmp [ edi + 0x3 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
shrd eax ecx 0x10
shr ecx 0x10
mov [ esi ] al
mov [ esi ] 0xff
jmp r-xdata
inc esi
cmp [ edi + 0x3 ] 0x0
je r-xdata
mov edx [ edi + 0x8 ]
mov eax [ edi + 0xc ]
shrd edx eax 0x18
shr eax 0x18
mov [ esi ] dl
mov [ esi ] 0xff
jmp r-xdata
inc esi
cmp [ edi + 0x3 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ edi + 0xc ]
mov cl 0x20
call sub_40eef0
mov [ esi ] al
mov [ esi ] 0xff
jmp r-xdata
inc esi
cmp [ edi + 0x3 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ edi + 0xc ]
mov cl 0x28
call sub_40eef0
mov [ esi ] al
mov [ esi ] 0xff
jmp r-xdata
inc esi
cmp [ edi + 0x3 ] 0x0
je r-xdata
mov cl [ edi + 0xe ]
mov [ esi ] cl
mov [ esi ] 0xff
jmp r-xdata
inc esi
cmp [ edi + 0x3 ] 0x0
je r-xdata
mov dl [ edi + 0xf ]
pop edi
mov [ esi ] dl
pop esi
pop ebp
retn
pop edi
mov [ esi ] 0xff
pop esi
pop ebp
retn
xor eax eax
inc esi
cmp [ edi + 0x3 ] al
je r-xdata
sub_406000
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
mov edx [ ebp + 0xc ]
push edx
test eax eax
je r-xdata
call sub_40ee59
add esp 0x4
pop ebp
retn
mov ecx [ ecx + 0xc ]
push ecx
call eax
add esp 0x8
pop ebp
retn
sub_406030
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
mov edx [ ebp + 0xc ]
push edx
test eax eax
je r-xdata
call sub_40ede0
add esp 0x4
pop ebp
retn
mov ecx [ ecx + 0xc ]
push ecx
call eax
add esp 0x8
pop ebp
retn
sub_406060
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0xc ] edx
mov edx [ ebp + 0x18 ]
mov [ eax ] sub_406000
mov [ eax + 0x4 ] sub_406030
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] edx
pop ebp
retn
sub_406090
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
or ecx 0xffffffff
mov [ eax ] 0x5
mov [ eax + 0x24 ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x28 ] edx
pop ebp
retn
sub_4060d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
test esi esi
jns r-xdata
cmp [ eax + 0x4 ] 0x0
mov [ eax ] esi
jne r-xdata
mov esi 0x5
cmp [ eax + 0x8 ] 0x0
jge r-xdata
cmp esi 0x5
jg r-xdata
cmp [ eax + 0xc ] 0x0
jge r-xdata
mov [ eax + 0x8 ] 0x3
lea edx [ esi - 0x6 ]
neg edx
sbb edx edx
and edx 0x2000000
add edx 0x2000000
lea ecx [ esi + esi + 0xe ]
mov edx 0x1
shl edx cl
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jge r-xdata
mov [ eax + 0xc ] 0x0
mov [ eax + 0x4 ] edx
cmp [ eax + 0x14 ] 0x0
jge r-xdata
mov [ eax + 0x10 ] 0x2
cmp [ eax + 0x18 ] 0x0
jge r-xdata
xor ecx ecx
cmp esi 0x5
setge cl
mov [ eax + 0x14 ] ecx
cmp [ eax + 0x1c ] 0x0
pop esi
jge r-xdata
xor edx edx
cmp esi 0x7
setge dl
dec edx
and edx 0xffffffe0
add edx 0x40
mov [ eax + 0x18 ] edx
cmp [ eax + 0x20 ] 0x0
jge r-xdata
xor ecx ecx
cmp [ eax + 0x14 ] ecx
setne cl
mov [ eax + 0x1c ] ecx
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov [ eax + 0x20 ] 0x4
cmp [ eax + 0x2c ] 0x0
jge r-xdata
mov edx [ eax + 0x18 ]
xor ecx ecx
cmp [ eax + 0x1c ] ecx
sete cl
sar edx 0x1
add edx 0x10
sar edx cl
mov [ eax + 0x24 ] edx
pop ebp
retn
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov ecx 0x1
cmp [ eax + 0x14 ] 0x0
mov ecx 0x2
jne r-xdata
mov [ eax + 0x2c ] ecx
sub_4061c0
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x30 ]
mov ecx 0xc
lea edi [ ebp - 0x30 ]
push eax
[ edi ] [ esi ]
call sub_4060d0
mov eax [ ebp - 0x2c ]
add esp 0x4
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4061f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov ebx 0x2
push edi
mov [ eax ] 0x100
mov edi ebx
inc edi
cmp edi 0x16
jl r-xdata
push esi
add eax ebx
push edi
push eax
call sub_40e7f0
mov eax [ ebp + 0x8 ]
add esp 0xc
add ebx esi
mov ecx edi
sar ecx 0x1
dec ecx
mov esi 0x1
shl esi cl
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_406240
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebx ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
cmp eax esi
jae r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp + 0xc ]
push esi
push eax
push ecx
call sub_40e480
sub [ edi + 0x8 ] esi
add [ edi + 0x4 ] esi
add esp 0xc
pop edi
mov [ ebx ] esi
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov esi eax
sub_406280
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x4848
lea eax [ ebx + 0x32a10 ]
push eax
lea ecx [ ebx + 0x3c180 ]
push ecx
call sub_40e480
push 0x4848
lea edx [ ebx + 0x37258 ]
push edx
lea eax [ ebx + 0x409c8 ]
push eax
call sub_40e480
mov ecx [ ebx + 0x31748 ]
add esp 0x18
mov [ ebx + 0x45220 ] ecx
lea edx [ ebx + 0x3bcfc ]
lea eax [ ebx + 0x3258c ]
mov [ ebp + 0x8 ] 0xc
jmp r-xdata
lea esi [ eax - 0x1e0 ]
lea edi [ edx - 0x1e0 ]
mov ecx 0x8
[ edi ] [ esi ]
mov esi eax
mov edi edx
mov ecx 0x8
add eax 0x20
add edx 0x20
dec [ ebp + 0x8 ]
[ edi ] [ esi ]
jne r-xdata
lea esi [ ebx + 0x3270c ]
lea edi [ ebx + 0x3be7c ]
mov ecx 0x20
[ edi ] [ esi ]
lea esi [ ebx + 0x3278c ]
lea edi [ ebx + 0x3befc ]
mov ecx 0x20
[ edi ] [ esi ]
lea esi [ ebx + 0x3280c ]
lea edi [ ebx + 0x3bf7c ]
mov ecx 0x20
[ edi ] [ esi ]
lea esi [ ebx + 0x3288c ]
lea edi [ ebx + 0x3bffc ]
mov ecx 0x20
[ edi ] [ esi ]
mov edx [ ebx + 0x3252c ]
mov [ ebx + 0x3bc9c ] edx
mov eax [ ebx + 0x32530 ]
mov [ ebx + 0x3bca0 ] eax
mov ecx [ ebx + 0x32534 ]
mov [ ebx + 0x3bca4 ] ecx
mov edx [ ebx + 0x32538 ]
mov [ ebx + 0x3bca8 ] edx
mov eax [ ebx + 0x3253c ]
mov [ ebx + 0x3bcac ] eax
mov ecx [ ebx + 0x32540 ]
mov [ ebx + 0x3bcb0 ] ecx
mov edx [ ebx + 0x32544 ]
mov [ ebx + 0x3bcb4 ] edx
mov eax [ ebx + 0x32548 ]
mov [ ebx + 0x3bcb8 ] eax
mov ecx [ ebx + 0x3254c ]
mov [ ebx + 0x3bcbc ] ecx
mov edx [ ebx + 0x32550 ]
mov [ ebx + 0x3bcc0 ] edx
mov eax [ ebx + 0x32554 ]
mov [ ebx + 0x3bcc4 ] eax
mov ecx [ ebx + 0x32558 ]
mov [ ebx + 0x3bcc8 ] ecx
mov edx [ ebx + 0x3255c ]
mov [ ebx + 0x3bccc ] edx
mov eax [ ebx + 0x32560 ]
mov [ ebx + 0x3bcd0 ] eax
mov ecx [ ebx + 0x32564 ]
mov [ ebx + 0x3bcd4 ] ecx
mov edx [ ebx + 0x32568 ]
mov [ ebx + 0x3bcd8 ] edx
mov eax [ ebx + 0x3256c ]
mov [ ebx + 0x3bcdc ] eax
mov ecx [ ebx + 0x32570 ]
mov [ ebx + 0x3bce0 ] ecx
mov edx [ ebx + 0x32574 ]
mov [ ebx + 0x3bce4 ] edx
mov eax [ ebx + 0x32578 ]
mov [ ebx + 0x3bce8 ] eax
mov ecx [ ebx + 0x3257c ]
mov [ ebx + 0x3bcec ] ecx
mov edx [ ebx + 0x32580 ]
mov [ ebx + 0x3bcf0 ] edx
mov eax [ ebx + 0x32584 ]
mov [ ebx + 0x3bcf4 ] eax
mov ecx [ ebx + 0x32588 ]
mov [ ebx + 0x3bcf8 ] ecx
lea esi [ ebx + 0x3290c ]
lea edi [ ebx + 0x3c07c ]
mov ecx 0x39
[ edi ] [ esi ]
lea esi [ ebx + 0x329f0 ]
lea edi [ ebx + 0x3c160 ]
mov ecx 0x8
[ edi ] [ esi ]
mov edx [ ebx + 0x31738 ]
mov [ ebx + 0x45210 ] edx
mov eax [ ebx + 0x3173c ]
mov [ ebx + 0x45214 ] eax
mov ecx [ ebx + 0x31740 ]
mov [ ebx + 0x45218 ] ecx
mov edx [ ebx + 0x31744 ]
mov [ ebx + 0x4521c ] edx
mov eax 0x300
mov ecx [ ebx + 0x3baa0 ]
mov edx [ ebx + 0x3bb18 ]
shl eax cl
mov ecx [ ebx + 0x323a8 ]
add eax eax
push eax
push ecx
push edx
call sub_40e480
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn
sub_406500
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x4848
lea eax [ ebx + 0x3c180 ]
push eax
lea ecx [ ebx + 0x32a10 ]
push ecx
call sub_40e480
push 0x4848
lea edx [ ebx + 0x409c8 ]
push edx
lea eax [ ebx + 0x37258 ]
push eax
call sub_40e480
mov ecx [ ebx + 0x45220 ]
add esp 0x18
mov [ ebx + 0x31748 ] ecx
lea edx [ ebx + 0x3258c ]
lea eax [ ebx + 0x3bcfc ]
mov [ ebp + 0x8 ] 0xc
jmp r-xdata
lea esi [ eax - 0x1e0 ]
lea edi [ edx - 0x1e0 ]
mov ecx 0x8
[ edi ] [ esi ]
mov esi eax
mov edi edx
mov ecx 0x8
add eax 0x20
add edx 0x20
dec [ ebp + 0x8 ]
[ edi ] [ esi ]
jne r-xdata
lea esi [ ebx + 0x3be7c ]
lea edi [ ebx + 0x3270c ]
mov ecx 0x20
[ edi ] [ esi ]
lea esi [ ebx + 0x3befc ]
lea edi [ ebx + 0x3278c ]
mov ecx 0x20
[ edi ] [ esi ]
lea esi [ ebx + 0x3bf7c ]
lea edi [ ebx + 0x3280c ]
mov ecx 0x20
[ edi ] [ esi ]
lea esi [ ebx + 0x3bffc ]
lea edi [ ebx + 0x3288c ]
mov ecx 0x20
[ edi ] [ esi ]
mov edx [ ebx + 0x3bc9c ]
mov [ ebx + 0x3252c ] edx
mov eax [ ebx + 0x3bca0 ]
mov [ ebx + 0x32530 ] eax
mov ecx [ ebx + 0x3bca4 ]
mov [ ebx + 0x32534 ] ecx
mov edx [ ebx + 0x3bca8 ]
mov [ ebx + 0x32538 ] edx
mov eax [ ebx + 0x3bcac ]
mov [ ebx + 0x3253c ] eax
mov ecx [ ebx + 0x3bcb0 ]
mov [ ebx + 0x32540 ] ecx
mov edx [ ebx + 0x3bcb4 ]
mov [ ebx + 0x32544 ] edx
mov eax [ ebx + 0x3bcb8 ]
mov [ ebx + 0x32548 ] eax
mov ecx [ ebx + 0x3bcbc ]
mov [ ebx + 0x3254c ] ecx
mov edx [ ebx + 0x3bcc0 ]
mov [ ebx + 0x32550 ] edx
mov eax [ ebx + 0x3bcc4 ]
mov [ ebx + 0x32554 ] eax
mov ecx [ ebx + 0x3bcc8 ]
mov [ ebx + 0x32558 ] ecx
mov edx [ ebx + 0x3bccc ]
mov [ ebx + 0x3255c ] edx
mov eax [ ebx + 0x3bcd0 ]
mov [ ebx + 0x32560 ] eax
mov ecx [ ebx + 0x3bcd4 ]
mov [ ebx + 0x32564 ] ecx
mov edx [ ebx + 0x3bcd8 ]
mov [ ebx + 0x32568 ] edx
mov eax [ ebx + 0x3bcdc ]
mov [ ebx + 0x3256c ] eax
mov ecx [ ebx + 0x3bce0 ]
mov [ ebx + 0x32570 ] ecx
mov edx [ ebx + 0x3bce4 ]
mov [ ebx + 0x32574 ] edx
mov eax [ ebx + 0x3bce8 ]
mov [ ebx + 0x32578 ] eax
mov ecx [ ebx + 0x3bcec ]
mov [ ebx + 0x3257c ] ecx
mov edx [ ebx + 0x3bcf0 ]
mov [ ebx + 0x32580 ] edx
mov eax [ ebx + 0x3bcf4 ]
mov [ ebx + 0x32584 ] eax
mov ecx [ ebx + 0x3bcf8 ]
mov [ ebx + 0x32588 ] ecx
lea esi [ ebx + 0x3c07c ]
lea edi [ ebx + 0x3290c ]
mov ecx 0x39
[ edi ] [ esi ]
lea esi [ ebx + 0x3c160 ]
lea edi [ ebx + 0x329f0 ]
mov ecx 0x8
[ edi ] [ esi ]
mov edx [ ebx + 0x45210 ]
mov [ ebx + 0x31738 ] edx
mov eax [ ebx + 0x45214 ]
mov [ ebx + 0x3173c ] eax
mov ecx [ ebx + 0x45218 ]
mov [ ebx + 0x31740 ] ecx
mov edx [ ebx + 0x4521c ]
mov [ ebx + 0x31744 ] edx
mov eax 0x300
mov ecx [ ebx + 0x3baa0 ]
mov edx [ ebx + 0x323a8 ]
shl eax cl
mov ecx [ ebx + 0x3bb18 ]
add eax eax
push eax
push ecx
push edx
call sub_40e480
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn
sub_406780
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ ebp + 0xc ]
push edi
lea eax [ ebp - 0x30 ]
mov ecx 0xc
lea edi [ ebp - 0x30 ]
push eax
[ edi ] [ esi ]
call sub_4060d0
mov edi [ ebp - 0x28 ]
add esp 0x4
cmp edi 0x8
jg r-xdata
pop edi
mov eax 0x5
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x24 ]
cmp esi 0x4
jg r-xdata
mov edx [ ebp - 0x20 ]
cmp edx 0x4
jg r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx 0x8000000
ja r-xdata
cmp ecx 0x40000000
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x3bb00 ] ecx
mov ecx [ ebp - 0x18 ]
push ebx
mov ebx [ ebp - 0xc ]
mov [ eax + 0x3bb04 ] ebx
cmp ecx 0x5
jae r-xdata
cmp ecx 0x111
jbe r-xdata
mov ecx 0x5
jmp r-xdata
mov [ eax + 0x31730 ] ecx
xor ecx ecx
cmp [ ebp - 0x1c ] ecx
mov [ eax + 0x3239c ] edx
sete cl
mov [ eax + 0x32394 ] edi
mov [ eax + 0x32398 ] esi
mov edx 0x4
mov [ eax + 0x3baa4 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x6c ] ecx
test ecx ecx
je r-xdata
mov ecx 0x111
mov [ eax + 0x48 ] ebx
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x8 ]
pop ebx
pop edi
mov [ eax + 0x3bae0 ] edx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
cmp ecx 0x2
jge r-xdata
cmp ecx edx
jge r-xdata
mov edx 0x2
jmp r-xdata
mov edx ecx
sub_406890
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax 0x1
retn
push 0x10000
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ esi + 0x20 ] eax
test eax eax
jne r-xdata
add eax 0x10000
mov [ esi + 0x1c ] eax
retn
sub_4068e0
mov edx [ eax + 0x20 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax ] 0xffffffff
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x14 ] ecx
mov [ eax + 0x4 ] cl
mov [ eax + 0x18 ] edx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
retn
sub_406910
cmp [ esi + 0x30 ] 0x0
jne r-xdata
retn
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
push edi
mov edi [ esi + 0x18 ]
sub edi eax
push edi
push eax
mov eax [ ecx ]
push ecx
call eax
add esp 0xc
cmp edi eax
je r-xdata
add [ esi + 0x28 ] edi
mov ecx [ esi + 0x20 ]
mov [ esi + 0x18 ] ecx
adc [ esi + 0x2c ] 0x0
pop edi
mov [ esi + 0x30 ] 0x9
sub_406950
push edi
mov edi [ esi + 0x8 ]
cmp edi 0xff000000
jb r-xdata
push ebx
mov bl [ esi + 0x4 ]
mov edx [ esi + 0xc ]
mov eax edi
mov cl 0x20
call sub_40eef0
test eax eax
je r-xdata
or eax 0xffffffff
or bl 0xff
add [ esi + 0x10 ] eax
adc [ esi + 0x14 ] eax
mov eax [ esi + 0x10 ]
or eax [ esi + 0x14 ]
jne r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
add [ esi + 0x10 ] 0x1
mov eax 0x0
mov [ esi + 0xc ] eax
adc [ esi + 0x14 ] eax
shl edi 0x8
mov [ esi + 0x8 ] edi
pop edi
retn
mov eax [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov edi [ esi + 0x18 ]
mov cl 0x20
call sub_40eef0
add al bl
mov [ edi ] al
inc edi
mov [ esi + 0x18 ] edi
cmp edi [ esi + 0x1c ]
jne r-xdata
mov edi [ esi + 0x8 ]
mov edx edi
shr edx 0x18
mov [ esi + 0x4 ] dl
pop ebx
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
sub edi eax
push edi
push eax
mov eax [ ecx ]
push ecx
call eax
add esp 0xc
cmp edi eax
je r-xdata
add [ esi + 0x28 ] edi
mov ecx [ esi + 0x20 ]
mov [ esi + 0x18 ] ecx
adc [ esi + 0x2c ] 0x0
mov [ esi + 0x30 ] 0x9
sub_406a20
push esi
push edi
mov edi eax
mov esi ecx
test edi edi
jne r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
shr [ esi ] 0x1
mov eax [ esi ]
dec edi
mov edx ebx
mov ecx edi
shr edx cl
and edx 0x1
neg edx
and edx eax
add [ esi + 0x8 ] edx
adc [ esi + 0xc ] 0x0
cmp eax 0x1000000
jae r-xdata
pop edi
pop esi
retn
sub_406a60
push ebp
mov ebp esp
movzx ecx [ edi ]
push esi
mov esi eax
mov edx [ esi ]
mov eax edx
shr eax 0xb
imul eax ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
sub edx eax
mov [ esi ] edx
mov edx ecx
shr edx 0x5
sub ecx edx
mov [ esi ] eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add ecx eax
jmp r-xdata
pop esi
pop ebp
retn
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov [ edi ] cx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
sub_406ac0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
push edi
mov esi ecx
or ebx 0x100
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
sub edi eax
mov eax ecx
shr eax 0x5
mov [ esi ] edi
sub ecx eax
mov [ esi ] eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add ecx eax
jmp r-xdata
add ebx ebx
cmp ebx 0x10000
jb r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov [ edx ] cx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ esi ]
mov eax ebx
shr eax 0x8
lea edx [ ecx + eax * 2 ]
movzx ecx [ edx ]
mov eax edi
shr eax 0xb
imul eax ecx
test bl bl
js r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_406b40
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push esi
mov eax 0x100
push edi
mov esi ecx
mov [ ebp - 0x4 ] eax
or ebx eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ esi ]
add ecx ecx
mov edx eax
and edx ecx
mov [ ebp + 0xc ] ecx
add edx eax
mov ecx ebx
shr ecx 0x8
add ecx edx
mov edx [ ebp + 0x8 ]
lea edx [ edx + ecx * 2 ]
movzx ecx [ edx ]
mov eax edi
shr eax 0xb
imul eax ecx
test bl bl
js r-xdata
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
sub edi eax
mov eax ecx
shr eax 0x5
mov [ esi ] edi
sub ecx eax
mov [ esi ] eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add ecx eax
jmp r-xdata
add ebx ebx
mov ecx ebx
xor ecx [ ebp + 0xc ]
not ecx
and [ ebp - 0x4 ] ecx
cmp ebx 0x10000
jb r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov [ edx ] cx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_406be0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov edx 0x8
lea ecx [ ecx ]
imul eax eax
add ecx ecx
cmp eax 0x10000
jb r-xdata
dec esi
jne r-xdata
lea esp [ esp ]
mov eax 0xa1
sub eax ecx
mov ecx edx
shr ecx 0x4
add edx 0x10
mov [ edi + ecx * 4 ] eax
cmp edx 0x800
jb r-xdata
shr eax 0x1
inc ecx
cmp eax 0x10000
jae r-xdata
xor ecx ecx
mov eax edx
lea esi [ ecx + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_406c40
push ebx
xor eax eax
or ecx 0x100
push edi
lea ebx [ ebx ]
mov ebx ecx
shr ebx 0x7
mov edi ecx
shr edi 0x8
movzx edi [ esi + edi * 2 ]
and ebx 0x1
neg ebx
sar ebx 0x4
shr edi 0x4
and ebx 0x7f
xor edi ebx
add eax [ edx + edi * 4 ]
add ecx ecx
cmp ecx 0x10000
jb r-xdata
pop edi
pop ebx
retn
sub_406c80
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov edx 0x100
xor eax eax
push edi
or ecx edx
add esi esi
mov edi edx
and edi esi
add edi edx
mov ebx ecx
shr ebx 0x8
add ebx edi
mov edi [ ebp + 0x8 ]
movzx edi [ edi + ebx * 2 ]
mov ebx ecx
shr ebx 0x7
and ebx 0x1
neg ebx
shr edi 0x4
sar ebx 0x4
and ebx 0x7f
xor edi ebx
mov ebx [ ebp + 0xc ]
add eax [ ebx + edi * 4 ]
add ecx ecx
mov edi ecx
xor edi esi
not edi
and edx edi
cmp ecx 0x10000
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_406ce0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx 0x1
test ecx ecx
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
jmp r-xdata
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ esi ]
dec ecx
shr edi cl
mov [ ebp - 0x4 ] ecx
movzx ecx [ eax + ebx * 2 ]
mov eax edx
shr eax 0xb
imul eax ecx
and edi 0x1
jne r-xdata
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
sub edx eax
mov eax ecx
shr eax 0x5
mov [ esi ] edx
sub ecx eax
mov edx 0x800
sub edx ecx
shr edx 0x5
mov [ esi ] eax
add ecx edx
jmp r-xdata
add ebx ebx
or ebx edi
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov edx [ ebp + 0x8 ]
mov [ edx + ebx * 2 ] cx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
sub_406d70
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx 0x1
test eax eax
jle r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
push edi
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
sub edx eax
mov eax ecx
shr eax 0x5
mov [ esi ] edx
sub ecx eax
mov edx 0x800
sub edx ecx
shr edx 0x5
mov [ esi ] eax
add ecx edx
jmp r-xdata
shr [ ebp + 0xc ] 0x1
add ebx ebx
or ebx edi
dec [ ebp - 0x4 ]
jne r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov edx [ ebp + 0x8 ]
mov [ edx + ebx * 2 ] cx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + ebx * 2 ]
mov edx [ esi ]
mov edi [ ebp + 0xc ]
mov eax edx
shr eax 0xb
imul eax ecx
and edi 0x1
jne r-xdata
pop edi
sub_406df0
push ebx
mov ebx 0x1
shl ebx cl
xor eax eax
or edx ebx
cmp edx 0x1
je r-xdata
pop ebx
retn
mov ecx edx
and edx 0x1
shr ecx 0x1
movzx ebx [ edi + ecx * 2 ]
neg edx
sar edx 0x4
and edx 0x7f
shr ebx 0x4
xor ebx edx
add eax [ esi + ebx * 4 ]
mov edx ecx
cmp edx 0x1
jne r-xdata
sub_406e30
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
xor eax eax
lea edx [ eax + 0x1 ]
mov [ ebp - 0x4 ] ecx
test ecx ecx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
push edi
mov edi [ ebp + 0x8 ]
movzx edi [ edi + edx * 2 ]
mov ecx esi
and ecx 0x1
mov ebx ecx
neg ebx
sar ebx 0x4
and ebx 0x7f
shr edi 0x4
xor edi ebx
mov ebx [ ebp + 0xc ]
add eax [ ebx + edi * 4 ]
add edx edx
shr esi 0x1
or edx ecx
dec [ ebp - 0x4 ]
jne r-xdata
pop edi
pop ebx
sub_406e80
push esi
mov eax 0x400
movzx esi ax
push edi
mov eax esi
shl esi 0x10
or eax esi
mov [ edx ] 0x4000400
lea edi [ edx + 0x4 ]
mov ecx 0x40
[ edi ]
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x104 ]
mov ecx 0x40
[ edi ]
lea edi [ edx + 0x204 ]
mov eax 0x400
movzx edx ax
mov eax edx
shl edx 0x10
mov ecx 0x80
or eax edx
[ edi ]
pop edi
pop esi
retn
sub_406ee0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
movzx eax [ edi ]
mov esi ecx
jae r-xdata
mov edx [ esi ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ esi + 0x8 ] ecx
adc [ esi + 0xc ] 0x0
sub edx ecx
mov [ esi ] edx
mov edx eax
shr edx 0x5
sub eax edx
mov [ edi ] ax
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ esi ]
shr ecx 0xb
imul ecx eax
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ esi ] ecx
mov [ edi ] dx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
cmp [ ebp + 0x8 ] 0x10
movzx eax [ edi + 0x2 ]
jae r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov eax [ ebp + 0x8 ]
push eax
add ebx ebx
lea ecx [ edi + ebx * 8 + 0x4 ]
push ecx
mov ecx 0x3
mov eax esi
call sub_406ce0
add esp 0x8
pop edi
pop esi
pop ebx
pop ebp
retn
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov edx [ esi ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ esi + 0x8 ] ecx
adc [ esi + 0xc ] 0x0
sub edx ecx
mov [ esi ] edx
mov edx eax
shr edx 0x5
sub eax edx
mov [ edi + 0x2 ] ax
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ esi ]
shr ecx 0xb
imul ecx eax
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ esi ] ecx
mov [ edi + 0x2 ] dx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
add edi 0x204
push edi
mov ecx 0x8
mov eax esi
call sub_406ce0
add esp 0x8
pop edi
pop esi
pop ebx
pop ebp
retn
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
push eax
add ebx ebx
lea ecx [ edi + ebx * 8 + 0x104 ]
push ecx
mov ecx 0x3
mov eax esi
call sub_406ce0
add esp 0x8
pop edi
pop esi
pop ebx
pop ebp
retn
shl eax 0x8
mov [ esi ] eax
call sub_406950
sub_407030
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov ecx eax
shr ecx 0x4
mov edx [ esi + ecx * 4 ]
movzx ecx [ ebx + 0x2 ]
mov [ ebp - 0xc ] edx
mov edx ecx
xor eax 0x7f0
xor ecx 0x7f0
shr edx 0x4
mov edx [ esi + edx * 4 ]
shr eax 0x4
mov eax [ esi + eax * 4 ]
shr ecx 0x4
mov ecx [ esi + ecx * 4 ]
add edx eax
add ecx eax
mov [ ebp - 0x10 ] edx
push edi
mov [ ebp - 0x14 ] ecx
xor edx edx
jmp r-xdata
cmp edx [ ebp + 0x10 ]
jae r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
xor edi edi
or eax 0x8
mov [ ebp - 0x4 ] edi
cmp eax 0x1
je r-xdata
add edi [ ebp - 0xc ]
mov ecx [ ebp + 0x14 ]
mov [ ecx + edx * 4 ] edi
inc edx
cmp edx 0x8
jb r-xdata
mov edi [ ebp + 0xc ]
mov ecx eax
and eax 0x1
shr ecx 0x1
lea edi [ ecx + edi * 8 ]
movzx edi [ ebx + edi * 2 + 0x4 ]
neg eax
sar eax 0x4
shr edi 0x4
and eax 0x7f
xor edi eax
mov eax edi
mov edi [ ebp - 0x4 ]
add edi [ esi + eax * 4 ]
mov eax ecx
mov [ ebp - 0x4 ] edi
cmp eax 0x1
jne r-xdata
cmp edx 0x10
jae r-xdata
cmp edx [ ebp + 0x10 ]
jae r-xdata
lea eax [ edx - 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ edx - 0x10 ]
mov [ ebp - 0x8 ] eax
xor edi edi
or eax 0x8
mov [ ebp - 0x4 ] edi
cmp eax 0x1
je r-xdata
add edi [ ebp - 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
mov [ ecx + edx * 4 ] edi
inc edx
inc eax
mov [ ebp - 0x8 ] eax
cmp edx [ ebp + 0x10 ]
jb r-xdata
mov ecx eax
and eax 0x1
shr ecx 0x1
movzx ebx [ ebx + ecx * 2 + 0x204 ]
neg eax
sar eax 0x4
shr ebx 0x4
and eax 0x7f
xor ebx eax
add edi [ esi + ebx * 4 ]
mov ebx [ ebp + 0x8 ]
mov eax ecx
cmp eax 0x1
jne r-xdata
add edi [ ebp - 0x10 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
mov [ ecx + edx * 4 ] edi
inc edx
inc eax
mov [ ebp - 0x8 ] eax
cmp edx 0x10
jb r-xdata
lea esp [ esp ]
or eax 0x100
xor edi edi
cmp eax 0x1
je r-xdata
cmp edx [ ebp + 0x10 ]
jae r-xdata
mov edi [ ebp + 0xc ]
mov ecx eax
and eax 0x1
shr ecx 0x1
lea edi [ ecx + edi * 8 ]
movzx edi [ ebx + edi * 2 + 0x104 ]
neg eax
sar eax 0x4
shr edi 0x4
and eax 0x7f
xor edi eax
mov eax edi
mov edi [ ebp - 0x4 ]
add edi [ esi + eax * 4 ]
mov eax ecx
mov [ ebp - 0x4 ] edi
cmp eax 0x1
jne r-xdata
sub_4071b0
mov edx [ edi + 0x4804 ]
mov eax ebx
imul eax eax 0x440
lea ecx [ eax + edi + 0x404 ]
push ecx
push edx
push ebx
push edi
call sub_407030
mov eax [ edi + 0x4804 ]
add esp 0x10
mov [ edi + ebx * 4 + 0x4808 ] eax
retn
sub_4071e0
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
push edi
mov esi eax
mov edi ecx
cmp [ ebp + 0x8 ] ebx
jbe r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4071b0
inc ebx
cmp ebx [ ebp + 0x8 ]
jb r-xdata
sub_407210
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov ebx edx
push eax
mov eax ebx
mov edx edi
call sub_406ee0
add esp 0x4
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop ebx
pop ebp
retn
dec [ edi + ebx * 4 + 0x4808 ]
jne r-xdata
call sub_4071b0
sub_407260
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x8 ]
push ebx
push edi
push eax
xor edi edi
call ecx
mov ecx [ esi + 0x10 ]
lea edx [ esi + 0x30e9c ]
mov [ esi + 0x498 ] eax
mov eax [ esi + 0x18 ]
push edx
push eax
call ecx
mov ebx eax
add esp 0xc
mov [ ebp - 0x4 ] ebx
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ esi + 0x31734 ]
mov eax edi
pop edi
mov [ ecx ] ebx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ esi + ebx * 4 + 0x30e94 ]
cmp edi [ esi + 0x31730 ]
jne r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esi + 0xc ]
push edx
call eax
mov ecx [ esi + ebx * 4 + 0x30e98 ]
mov edx [ esi + 0x498 ]
add esp 0x4
dec eax
inc ecx
cmp edx 0x111
jbe r-xdata
mov ebx eax
sub ebx ecx
cmp edi edx
jae r-xdata
mov edx 0x111
mov ebx [ ebp - 0x4 ]
lea ecx [ eax + edi ]
sub ebx eax
inc edi
inc ecx
cmp edi edx
jb r-xdata
mov al [ ecx ]
cmp al [ ebx + ecx ]
jne r-xdata
sub_407300
push ebp
mov ebp esp
mov edx eax
shl edx 0x4
add edx [ ebp + 0x8 ]
push esi
movzx edx [ ecx + edx * 2 + 0x3258c ]
movzx esi [ ecx + eax * 2 + 0x32544 ]
shr edx 0x4
mov eax [ ecx + edx * 4 + 0x30c9c ]
shr esi 0x4
add eax [ ecx + esi * 4 + 0x30c9c ]
pop esi
pop ebp
retn
sub_407340
push ebp
mov ebp esp
push esi
mov esi eax
test esi esi
jne r-xdata
movzx eax [ ecx + edx * 2 + 0x32544 ]
xor eax 0x7f0
shr eax 0x4
mov eax [ ecx + eax * 4 + 0x30c9c ]
cmp esi 0x1
jne r-xdata
mov eax edx
movzx edx [ ecx + edx * 2 + 0x32544 ]
shl eax 0x4
add eax [ ebp + 0x8 ]
shr edx 0x4
movzx eax [ ecx + eax * 2 + 0x3258c ]
xor eax 0x7f0
shr eax 0x4
mov eax [ ecx + eax * 4 + 0x30c9c ]
add eax [ ecx + edx * 4 + 0x30c9c ]
pop esi
pop ebp
retn
push ebx
push edi
movzx edi [ ecx + edx * 2 + 0x32574 ]
movzx edx [ ecx + edx * 2 + 0x3255c ]
mov ebx 0x2
sub ebx esi
sar ebx 0x4
shr edi 0x4
and ebx 0x7f
xor edi ebx
mov esi [ ecx + edi * 4 + 0x30c9c ]
xor edx 0x7f0
shr edx 0x4
add esi [ ecx + edx * 4 + 0x30c9c ]
pop edi
pop ebx
add eax esi
pop esi
pop ebp
retn
movzx edx [ ecx + edx * 2 + 0x3255c ]
shr edx 0x4
add eax [ ecx + edx * 4 + 0x30c9c ]
pop esi
pop ebp
retn
sub_407400
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_407340
imul esi esi 0x110
add esi [ ebp + 0x8 ]
add esp 0x4
add eax [ ecx + esi * 4 + 0x37654 ]
pop esi
pop ebp
retn
sub_407430
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
lea eax [ esi + esi * 2 ]
add eax eax
mov edx [ ecx + eax * 8 + 0x4b4 ]
mov eax [ ecx + eax * 8 + 0x4b8 ]
push edi
mov [ ebp - 0x4 ] eax
mov [ ecx + 0x488 ] esi
jmp r-xdata
lea edi [ esi + esi * 2 ]
add edi edi
cmp [ ecx + edi * 8 + 0x4a4 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
lea eax [ edx + edx * 2 ]
add eax eax
mov edi edx
mov edx [ ecx + eax * 8 + 0x4b8 ]
mov [ ebp - 0x4 ] edx
mov edx [ ecx + eax * 8 + 0x4b4 ]
mov [ ecx + eax * 8 + 0x4b4 ] esi
mov [ ecx + eax * 8 + 0x4b8 ] ebx
mov esi edi
test edi edi
jne r-xdata
lea eax [ edx + edx * 2 ]
shl eax 0x4
add eax ecx
lea ebx [ edx - 0x1 ]
mov [ eax + 0x4b8 ] 0xffffffff
mov [ eax + 0x4a4 ] 0x0
mov [ eax + 0x4b4 ] ebx
cmp [ ecx + edi * 8 + 0x4a8 ] 0x0
je r-xdata
mov eax [ ecx + 0x4b8 ]
mov edx [ ebp + 0x8 ]
pop edi
mov [ edx ] eax
mov eax [ ecx + 0x4b4 ]
pop esi
mov [ ecx + 0x48c ] eax
pop ebx
mov esp ebp
pop ebp
retn
mov [ eax + 0x474 ] 0x0
mov edi [ ecx + edi * 8 + 0x4ac ]
mov [ eax + 0x484 ] edi
lea edi [ esi + esi * 2 + 0x4b ]
add edi edi
mov edi [ ecx + edi * 8 ]
mov [ eax + 0x488 ] edi
sub_407520
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx [ ebx + 0x48c ]
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x7c ] edi
cmp [ ebx + 0x488 ] ecx
je r-xdata
xor eax eax
push esi
mov [ ebx + 0x488 ] eax
mov [ ebx + 0x48c ] eax
cmp [ ebx + 0x31734 ] eax
jne r-xdata
lea edx [ ecx + ecx * 2 ]
add edx edx
mov eax [ ebx + edx * 8 + 0x4b4 ]
lea edx [ ebx + edx * 8 + 0x49c ]
sub eax ecx
mov ecx [ edx + 0x1c ]
mov [ edi ] ecx
mov edx [ edx + 0x18 ]
mov [ ebx + 0x48c ] edx
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x490 ]
mov edx [ ebx + 0x494 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x38 ] edx
lea eax [ ebp - 0x38 ]
push eax
mov esi ebx
call sub_407260
add esp 0x4
mov [ ebp - 0x2c ] eax
jmp r-xdata
cmp eax 0x111
jbe r-xdata
pop esi
mov [ edi ] 0xffffffff
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x498 ]
mov [ ebp - 0x60 ] eax
cmp eax 0x2
jae r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0xc ]
push eax
call ecx
lea esi [ eax - 0x1 ]
mov al [ esi ]
xor edi edi
add esp 0x4
xor edx edx
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x25 ] al
mov [ ebp - 0x5c ] edi
jmp r-xdata
mov [ ebp - 0x60 ] 0x111
lea edi [ edx * 4 ]
mov eax [ edi + ebx + 0x31738 ]
mov ecx esi
sub ecx eax
mov [ ebp + edi - 0x14 ] eax
mov al [ ebp - 0x25 ]
dec ecx
cmp al [ ecx ]
jne r-xdata
mov [ ebp + edi - 0x24 ] 0x0
mov al [ esi + 0x1 ]
cmp al [ ecx + 0x1 ]
jne r-xdata
mov eax [ ebp - 0x54 ]
mov edi [ ebp + eax * 4 - 0x24 ]
mov ecx [ ebx + 0x31730 ]
mov [ ebp - 0x5c ] edi
cmp edi ecx
jb r-xdata
mov eax 0x2
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x60 ] eax
jbe r-xdata
mov eax [ ebp - 0x2c ]
cmp eax ecx
jb r-xdata
mov edx [ ebp - 0x7c ]
mov [ edx ] eax
lea eax [ edi - 0x1 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x5c ]
mov [ ebp + edi - 0x24 ] eax
cmp eax [ ebp + ecx - 0x24 ]
jbe r-xdata
lea edx [ esi + 0x2 ]
sub ecx esi
mov edx esi
sub edx [ ebp - 0x14 ]
mov cl [ edx - 0x1 ]
mov [ ebp - 0x31 ] cl
cmp eax 0x2
jae r-xdata
mov edx [ ebp - 0x38 ]
mov ecx [ ebx + edx * 4 + 0x30e98 ]
mov edx [ ebp - 0x7c ]
add ecx 0x4
mov [ edx ] ecx
lea ecx [ eax - 0x1 ]
test ecx ecx
je r-xdata
pop esi
mov eax edi
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
add [ ebx + 0x31734 ] eax
mov ecx [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call ecx
add esp 0x8
inc edx
mov [ ebp - 0x48 ] edx
cmp edx 0x4
jb r-xdata
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x5c ] edi
jmp r-xdata
mov edx [ ebp - 0x48 ]
inc eax
inc edx
mov [ ebp - 0x50 ] eax
cmp eax [ ebp - 0x60 ]
jb r-xdata
mov edx [ ebp - 0x74 ]
mov edi [ ebx + 0x31748 ]
mov eax edx
and eax [ ebx + 0x323a4 ]
mov [ ebx + 0x4a0 ] edi
movzx esi [ esi - 0x1 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebx + 0x32394 ]
mov ecx 0x8
sub cl al
shr esi cl
mov ecx [ ebx + 0x323a0 ]
and ecx edx
mov [ ebp - 0x3c ] ecx
mov ecx eax
mov eax [ ebp - 0x3c ]
shl eax cl
movzx ecx [ ebp - 0x25 ]
add esi eax
imul esi esi 0x600
add esi [ ebx + 0x323a8 ]
cmp edi 0x7
jb r-xdata
cmp [ ebp - 0x25 ] cl
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop edi
call sub_40daf7
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x18 ]
add [ ebx + 0x31734 ] ecx
push ecx
mov ecx [ ebx + 0x14 ]
push eax
call ecx
mov eax [ ebp - 0x2c ]
add esp 0x8
pop esi
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
mov al [ edx ]
cmp al [ ecx + edx ]
mov eax [ ebp - 0x50 ]
jne r-xdata
lea edx [ ebx + 0x30c9c ]
call sub_406c40
lea eax [ ebx + 0x30c9c ]
push eax
movzx eax [ ebp - 0x31 ]
push esi
call sub_406c80
add esp 0x8
jmp r-xdata
cmp edi 0x2
jae r-xdata
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x5c ]
cmp ecx eax
jb r-xdata
mov eax edi
shl eax 0x4
add eax esi
movzx eax [ ebx + eax * 2 + 0x3258c ]
movzx esi [ ebx + edi * 2 + 0x32544 ]
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30c9c ]
shr esi 0x4
add eax [ ebx + esi * 4 + 0x30c9c ]
add eax ecx
cmp eax [ ebx + 0x4cc ]
jae r-xdata
mov esi [ ebp - 0x30 ]
mov ecx edi
shl ecx 0x4
add ecx esi
movzx edx [ ebx + ecx * 2 + 0x323ac ]
lea ecx [ ebx + ecx * 2 + 0x323ac ]
shr edx 0x4
mov edx [ ebx + edx * 4 + 0x30c9c ]
add edx eax
mov [ ebx + 0x4cc ] edx
mov [ ebx + 0x4e8 ] 0xffffffff
xor edx edx
mov [ ebx + 0x4d4 ] edx
movzx eax [ ecx ]
movzx ecx [ ebx + edi * 2 + 0x3252c ]
xor eax 0x7f0
xor ecx 0x7f0
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30c9c ]
shr ecx 0x4
mov ecx [ ebx + ecx * 4 + 0x30c9c ]
add ecx eax
mov [ ebp - 0x54 ] eax
mov al [ ebp - 0x25 ]
mov [ ebp - 0x3c ] ecx
cmp [ ebp - 0x31 ] al
jne r-xdata
mov eax [ ebp - 0x7c ]
pop esi
mov [ eax ] 0xffffffff
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4c ] eax
mov eax ecx
mov [ ebp - 0x4c ] ecx
jmp r-xdata
mov [ ebx + 0x4cc ] eax
mov [ ebx + 0x4e8 ] edx
mov [ ebx + 0x4d4 ] edx
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4e4 ] edx
mov [ ebx + 0x4bc ] ecx
mov ecx [ ebp - 0x10 ]
mov [ ebx + 0x4c0 ] ecx
mov ecx [ ebp - 0xc ]
mov [ ebx + 0x4c4 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x4c8 ] ecx
lea ecx [ eax + eax * 2 ]
add ecx ecx
lea ecx [ ebx + ecx * 8 + 0x49c ]
mov ecx [ ebx + 0x4e8 ]
mov edx [ ebp - 0x7c ]
pop esi
mov [ edx ] ecx
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
cmp eax 0x2
jae r-xdata
mov [ ecx ] 0x40000000
dec eax
sub ecx 0x30
cmp eax 0x2
jae r-xdata
xor edi edi
inc edi
cmp edi 0x4
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
mov edx [ ebx + 0x31748 ]
mov eax edi
mov ecx ebx
call sub_407340
add eax [ ebp - 0x3c ]
lea ecx [ esi + esi * 2 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x30 ]
imul eax eax 0x110
add eax esi
add esp 0x4
add ecx ecx
lea eax [ ebx + eax * 4 + 0x37654 ]
lea ecx [ ebx + ecx * 8 + 0x4b8 ]
mov esi [ ebp + edi * 4 - 0x24 ]
cmp esi 0x2
jb r-xdata
mov edx [ ebx + 0x31748 ]
movzx eax [ ebx + edx * 2 + 0x3252c ]
mov ecx [ ebp - 0x24 ]
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30c9c ]
add eax [ ebp - 0x54 ]
mov [ ebp - 0x3c ] eax
cmp ecx 0x2
jb r-xdata
dec esi
sub eax 0x4
sub ecx 0x30
cmp esi 0x2
jae r-xdata
mov [ ecx - 0x1c ] edx
xor edx edx
mov [ ecx - 0x4 ] edx
mov [ ecx ] edi
mov [ ecx - 0x14 ] edx
mov ecx 0x2
inc ecx
jmp r-xdata
mov edx [ eax ]
add edx [ ebp - 0x5c ]
cmp edx [ ecx - 0x1c ]
jae r-xdata
mov edi 0x1
mov [ ebp - 0x6c ] edi
cmp [ ebp - 0x4c ] edi
je r-xdata
xor edx edx
mov [ ebp - 0x2c ] edx
cmp ecx [ ebx + 0x30e9c ]
jbe r-xdata
mov [ ebp - 0x50 ] ecx
cmp ecx [ ebp - 0x2c ]
ja r-xdata
mov edx [ ebp - 0x7c ]
push edx
mov eax edi
mov ecx ebx
call sub_407430
add esp 0x4
lea esp [ esp ]
mov esi [ ebp - 0x30 ]
imul esi esi 0x110
add esi ecx
lea esi [ ebx + esi * 4 + 0x32e0c ]
mov [ ebp - 0x48 ] esi
lea esi [ ecx + ecx * 2 ]
add esi esi
lea edi [ ebx + esi * 8 + 0x4b8 ]
add edx 0x2
cmp ecx [ ebx + edx * 4 + 0x30e9c ]
ja r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x50 ]
mov [ ebx + 0x494 ] eax
mov [ ebx + 0x490 ] ecx
inc [ ebp - 0x74 ]
lea esi [ edi + edi * 2 ]
shl esi 0x4
mov ecx [ esi + ebx + 0x4a4 ]
mov eax [ esi + ebx + 0x4b4 ]
add esi ebx
mov [ ebp - 0x54 ] esi
test ecx ecx
je r-xdata
cmp esi 0x80
jae r-xdata
mov eax 0x3
mov [ ebp - 0x2c ] edx
lea ecx [ eax + eax * 2 ]
add ecx ecx
mov edx [ ebx + ecx * 8 + 0x4a0 ]
dec eax
cmp [ esi + 0x4a8 ] 0x0
je r-xdata
mov ecx 0x1ffff
sub ecx esi
shr ecx 0x1f
neg ecx
and ecx 0xa
add ecx 0x6
mov edi esi
shr edi cl
shl eax 0x5
add eax ecx
mov ecx esi
movzx edi [ edi + ebx + 0x3049c ]
lea eax [ edi + eax * 2 ]
mov eax [ ebx + eax * 4 + 0x3174c ]
mov edi [ ebp - 0x5c ]
and ecx 0xf
add eax [ ebx + ecx * 4 + 0x3234c ]
mov ecx [ ebp - 0x50 ]
add edx eax
shl eax 0x7
add eax esi
add edx [ ebx + eax * 4 + 0x31b4c ]
jmp r-xdata
cmp [ esi + 0x4a4 ] 0x0
je r-xdata
cmp [ esi + 0x4b8 ] 0x0
jne r-xdata
lea edx [ eax + eax * 2 ]
add edx edx
mov ecx [ ebx + edx * 8 + 0x4a0 ]
mov edx [ ecx * 4 + r--data ]
jmp r-xdata
mov ecx [ esi + 0x4ac ]
lea ecx [ ecx + ecx * 2 ]
add ecx ecx
cmp [ esi + 0x4b0 ] 0x4
mov ecx [ ebx + ecx * 8 + 0x4a0 ]
jae r-xdata
mov eax [ ebp - 0x2c ]
cmp ecx [ ebx + eax * 4 + 0x30e9c ]
jne r-xdata
xor eax eax
add esi 0x4
mov [ edi - 0x1c ] edx
mov [ edi - 0x4 ] eax
mov [ edi ] esi
mov [ edi - 0x14 ] eax
cmp edx [ edi - 0x1c ]
jae r-xdata
mov ecx [ esi + 0x4b8 ]
mov [ ebp - 0x2c ] ecx
cmp ecx 0x4
jae r-xdata
cmp [ esi + 0x4a8 ] 0x0
je r-xdata
mov eax [ edx * 4 + r--data ]
mov [ ebp - 0x58 ] eax
jmp r-xdata
mov edx [ edx * 4 + r--data ]
mov [ ebp - 0x58 ] edx
jmp r-xdata
lea ecx [ edi - 0x1 ]
cmp eax ecx
jne r-xdata
mov ecx [ ecx * 4 + r--data ]
mov edx [ ecx * 4 + r--data ]
jmp r-xdata
mov ecx [ ecx * 4 + r--data ]
mov edx [ ecx * 4 + r--data ]
jmp r-xdata
add [ ebp - 0x48 ] 0x4
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x2c ]
inc ecx
mov [ ebp - 0x50 ] ecx
add edi 0x30
jmp r-xdata
add eax 0x2
mov [ ebp - 0x2c ] eax
cmp eax [ ebp - 0x38 ]
je r-xdata
mov edx [ edx * 4 + r--data ]
mov ecx [ ebp - 0x2c ]
mov ecx [ edx * 4 + r--data ]
mov [ ebp - 0x58 ] ecx
mov ecx [ ebp - 0x2c ]
jmp r-xdata
mov ecx [ esi + 0x4b0 ]
mov eax [ esi + 0x4ac ]
mov edx [ edx * 4 + r--data ]
mov [ ebp - 0x2c ] ecx
jmp r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ esi + 0x4a0 ] edx
mov edx [ ebp - 0xc ]
mov [ esi + 0x4bc ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0x4c0 ] ecx
mov ecx [ esi + 0x49c ]
mov [ esi + 0x4c4 ] edx
mov [ esi + 0x4c8 ] eax
mov edx [ ebx + 0x18 ]
mov eax [ ebx + 0xc ]
push edx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x38 ] 0x0
call eax
movzx ecx [ eax - 0x1 ]
lea edx [ eax - 0x1 ]
mov eax edx
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x25 ] cl
movzx ecx [ eax - 0x1 ]
dec eax
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x74 ]
and eax [ ebx + 0x323a4 ]
mov [ ebp - 0x31 ] cl
mov ecx [ ebp - 0x58 ]
mov [ ebp - 0x54 ] eax
shl ecx 0x4
add eax ecx
mov [ ebp - 0x30 ] eax
movzx eax [ ebx + eax * 2 + 0x323ac ]
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30c9c ]
add eax [ ebp - 0x48 ]
mov [ ebp - 0x68 ] edx
movzx edx [ edx - 0x1 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebx + 0x32394 ]
mov ecx 0x8
sub cl al
shr edx cl
mov ecx [ ebx + 0x323a0 ]
and ecx [ ebp - 0x74 ]
add esp 0x4
mov [ ebp - 0x3c ] ecx
mov ecx eax
mov eax [ ebp - 0x3c ]
shl eax cl
add edx eax
imul edx edx 0x600
add edx [ ebx + 0x323a8 ]
cmp [ ebp - 0x58 ] 0x7
jb r-xdata
mov esi [ ebx + edx * 4 + 0x30ea0 ]
mov edx [ ebp - 0x48 ]
mov edx [ edx ]
add edx eax
mov [ ebp - 0x5c ] edi
lea eax [ ecx - 0x2 ]
cmp ecx 0x5
jb r-xdata
mov eax [ edx + 0x24 ]
add ecx 0xfffffffc
mov [ ebp - 0x14 ] ecx
mov ecx [ edx + 0x20 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ edx + 0x28 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ edx + ecx * 4 + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax 0x1
cmp ecx eax
jb r-xdata
lea eax [ eax + eax * 2 ]
add eax eax
lea edx [ ebx + eax * 8 + 0x49c ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x58 ] edx
movzx eax [ ebp - 0x25 ]
or eax 0x100
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x40 ] eax
jmp r-xdata
movzx ecx [ ebp - 0x25 ]
lea eax [ ebx + 0x30c9c ]
push eax
movzx eax [ ebp - 0x31 ]
push edx
call sub_406c80
add esp 0x8
jmp r-xdata
mov ecx 0x4
lea edi [ ebp + eax * 4 - 0x14 ]
lea esi [ edx + eax * 4 + 0x20 ]
sub ecx eax
[ edi ] [ esi ]
mov eax [ ebp - 0x2c ]
inc eax
lea esi [ edx + 0x20 ]
lea edi [ ebp - 0x10 ]
[ edi ] [ esi ]
cmp eax 0x4
jae r-xdata
mov ecx eax
shr eax 0x7
and eax 0x1
shr ecx 0x8
movzx ecx [ edx + ecx * 2 ]
neg eax
sar eax 0x4
and eax 0x7f
shr ecx 0x4
xor ecx eax
mov eax ecx
mov ecx [ ebp - 0x44 ]
add ecx [ ebx + eax * 4 + 0x30c9c ]
mov eax [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] eax
cmp eax 0x10000
jb r-xdata
mov edx [ ebp - 0x2c ]
add edx eax
mov [ ebp - 0x2c ] edx
cmp edx [ esi + 0x4cc ]
jae r-xdata
mov esi [ ebp - 0x54 ]
mov edi [ ebp - 0x6c ]
mov eax ecx
mov edx [ ebp - 0x30 ]
movzx eax [ ebx + edx * 2 + 0x323ac ]
mov ecx [ ebp - 0x58 ]
movzx edx [ ebx + ecx * 2 + 0x3252c ]
xor eax 0x7f0
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30c9c ]
add eax [ ebp - 0x48 ]
xor edx 0x7f0
shr edx 0x4
mov ecx [ ebx + edx * 4 + 0x30c9c ]
add ecx eax
mov [ ebp - 0x80 ] eax
mov al [ ebp - 0x31 ]
mov [ ebp - 0x84 ] ecx
cmp al [ ebp - 0x25 ]
jne r-xdata
mov [ esi + 0x4cc ] edx
mov [ esi + 0x4e4 ] edi
mov [ esi + 0x4e8 ] 0xffffffff
mov [ esi + 0x4d4 ] 0x0
mov [ ebp - 0x38 ] 0x1
mov ecx [ ebx + 0x498 ]
mov eax 0xfff
sub eax edi
mov [ ebp - 0x48 ] ecx
cmp eax ecx
jae r-xdata
cmp [ esi + 0x4e4 ] edi
jae r-xdata
cmp ecx 0x2
jb r-xdata
mov ecx eax
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x58 ]
movzx eax [ ebx + edx * 2 + 0x32544 ]
mov edx [ ebp - 0x30 ]
movzx edx [ ebx + edx * 2 + 0x3258c ]
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30c9c ]
shr edx 0x4
add eax [ ebx + edx * 4 + 0x30c9c ]
add eax ecx
cmp eax [ esi + 0x4cc ]
ja r-xdata
cmp [ esi + 0x4e8 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x6c ] edi
cmp edi [ ebp - 0x4c ]
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov esi [ ebx + 0x31730 ]
mov [ ebp - 0x60 ] ecx
cmp ecx esi
jbe r-xdata
mov [ esi + 0x4cc ] eax
xor eax eax
mov [ esi + 0x4e4 ] edi
mov [ esi + 0x4e8 ] eax
mov [ esi + 0x4d4 ] eax
mov [ ebp - 0x38 ] 0x1
lea ecx [ ebp - 0x5c ]
push ecx
mov esi ebx
call sub_407260
add esp 0x4
mov [ ebp - 0x50 ] eax
cmp eax [ ebx + 0x31730 ]
jae r-xdata
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x44 ] 0x2
mov [ ebp - 0x2c ] 0x0
lea ebx [ ebx ]
mov al [ ebp - 0x25 ]
cmp [ ebp - 0x31 ] al
je r-xdata
mov eax [ ebp - 0x2c ]
inc eax
mov [ ebp - 0x2c ] eax
cmp eax 0x4
jb r-xdata
mov edx [ ebp - 0x38 ]
mov eax esi
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
lea eax [ esi + 0x1 ]
mov [ ebp - 0x44 ] eax
cmp eax ecx
jbe r-xdata
mov esi [ ebp - 0x68 ]
mov ecx [ ebp - 0x2c ]
mov dl [ esi ]
mov eax esi
sub eax [ ebp + ecx * 4 - 0x14 ]
dec eax
mov [ ebp - 0x38 ] eax
cmp dl [ eax ]
jne r-xdata
mov edx [ ebp - 0x50 ]
mov ecx [ ebp - 0x60 ]
cmp edx ecx
jbe r-xdata
mov esi 0x2
mov [ ebp - 0x30 ] esi
cmp [ ebp - 0x60 ] esi
jbe r-xdata
mov esi 0x1
cmp eax esi
jbe r-xdata
mov eax ecx
mov [ ebp - 0x44 ] ecx
cmp edx [ ebp - 0x44 ]
jb r-xdata
mov edx ecx
xor eax eax
mov [ ebp - 0x50 ] edx
cmp ecx [ ebx + 0x30e9c ]
jbe r-xdata
mov edx [ ebp - 0x4c ]
lea eax [ esi + edi ]
cmp edx eax
jae r-xdata
mov ecx [ ebp - 0x38 ]
mov edx eax
lea eax [ edx + 0x2 ]
sub ecx edx
dec esi
mov [ ebp - 0x38 ] esi
cmp esi 0x2
jb r-xdata
mov edx [ ebp - 0x68 ]
mov ecx [ ebp - 0x64 ]
lea eax [ edx + 0x1 ]
sub ecx edx
mov ecx [ ebp - 0x58 ]
movzx edx [ ebx + ecx * 2 + 0x3252c ]
mov ecx [ ebp - 0x4c ]
shr edx 0x4
mov eax [ ebx + edx * 4 + 0x30c9c ]
add eax [ ebp - 0x80 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x50 ]
add eax edi
cmp ecx eax
jae r-xdata
mov [ ebx + eax * 4 + 0x30e9c ] ecx
add eax 0x2
mov [ ebp - 0x5c ] eax
lea ebx [ ebx ]
mov edx [ ebp - 0x54 ]
mov esi [ ebp - 0x30 ]
mov eax [ ebp - 0x2c ]
push edx
mov edx [ ebp - 0x58 ]
mov ecx ebx
mov [ ebp - 0x3c ] esi
call sub_407340
mov ecx [ ebp - 0x54 ]
add eax [ ebp - 0x84 ]
imul ecx ecx 0x110
mov [ ebp - 0x78 ] ecx
mov edx esi
add ecx edx
lea ecx [ ebx + ecx * 4 + 0x37654 ]
mov [ ebp - 0x40 ] ecx
lea ecx [ edx + edi ]
lea edx [ ecx + ecx * 2 ]
add esp 0x4
add edx edx
mov [ ebp - 0x70 ] eax
lea ecx [ ebx + edx * 8 + 0x4b8 ]
lea ecx [ edx + edx * 2 ]
add ecx ecx
sub eax edx
add edx eax
lea ecx [ ebx + ecx * 8 + 0x49c ]
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x30 ] esi
inc esi
inc eax
cmp esi [ ebp - 0x60 ]
jb r-xdata
mov eax [ ebp - 0x58 ]
mov eax [ eax * 4 + r--data ]
mov ecx [ ebp - 0x74 ]
mov edx eax
shl edx 0x4
inc ecx
and ecx [ ebx + 0x323a4 ]
mov [ ebp - 0x40 ] eax
movzx eax [ ebx + eax * 2 + 0x3252c ]
add edx ecx
mov [ ebp - 0x3c ] edx
movzx edx [ ebx + edx * 2 + 0x323ac ]
xor edx 0x7f0
xor eax 0x7f0
shr edx 0x4
shr eax 0x4
mov [ ebp - 0x64 ] edx
mov edx [ ebx + eax * 4 + 0x30c9c ]
mov eax [ ebp - 0x64 ]
add edx [ ebx + eax * 4 + 0x30c9c ]
mov eax [ ebp - 0x4c ]
add edx [ ebp - 0x2c ]
lea esi [ esi + edi + 0x1 ]
mov [ ebp - 0x44 ] esi
cmp eax esi
jae r-xdata
inc esi
inc eax
cmp esi [ ebp - 0x44 ]
jb r-xdata
mov edx [ ebp - 0x44 ]
xor eax eax
mov [ ebp - 0x30 ] eax
cmp edx [ ebx + 0x30e9c ]
jbe r-xdata
lea edx [ ecx + ecx * 2 ]
add edx edx
sub eax ecx
add ecx eax
lea edx [ ebx + edx * 8 + 0x49c ]
mov [ ebp - 0x4c ] ecx
lea esp [ esp ]
add eax 0x2
cmp ecx [ ebx + eax * 4 + 0x30e9c ]
ja r-xdata
dec [ ebp - 0x30 ]
sub [ ebp - 0x40 ] 0x4
sub ecx 0x30
cmp [ ebp - 0x30 ] 0x2
jae r-xdata
mov [ ecx - 0x1c ] edx
mov edx [ ebp - 0x2c ]
mov [ ecx - 0x4 ] edi
mov [ ecx ] edx
mov [ ecx - 0x14 ] 0x0
add ecx 0x30
dec eax
mov [ ecx ] 0x40000000
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx + eax ]
jne r-xdata
mov eax [ ebp - 0x3c ]
imul ecx ecx 0x110
movzx eax [ ebx + eax * 2 + 0x3258c ]
mov esi [ ebp - 0x40 ]
movzx esi [ ebx + esi * 2 + 0x32544 ]
add ecx [ ebp - 0x38 ]
xor eax 0x7f0
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30c9c ]
shr esi 0x4
add eax [ ebx + esi * 4 + 0x30c9c ]
add eax [ ebx + ecx * 4 + 0x37654 ]
mov ecx [ ebp - 0x44 ]
lea ecx [ ecx + ecx * 2 ]
add ecx ecx
add eax edx
cmp eax [ ebx + ecx * 8 + 0x49c ]
lea ecx [ ebx + ecx * 8 + 0x49c ]
jae r-xdata
lea esi [ eax + eax * 2 ]
add esi esi
lea esi [ ebx + esi * 8 + 0x49c ]
mov [ ebp - 0x64 ] esi
mov esi [ ebp - 0x44 ]
sub esi eax
add eax esi
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x64 ]
mov dl [ eax ]
cmp dl [ ecx + eax ]
jne r-xdata
mov eax [ ebx + eax * 4 + 0x30ea0 ]
mov ecx 0x1ffff
sub ecx eax
shr ecx 0x1f
neg ecx
and ecx 0xa
add ecx 0x6
mov esi eax
shr esi cl
mov [ ebp - 0x50 ] eax
movzx esi [ esi + ebx + 0x3049c ]
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x54 ]
imul ecx ecx 0x110
add ecx edx
lea ecx [ ebx + ecx * 4 + 0x32e0c ]
mov [ ebp - 0x54 ] ecx
lea ecx [ edx + edi ]
lea esi [ edx + 0x1 ]
lea edx [ ecx + ecx * 2 ]
add edx edx
lea ecx [ ebx + edx * 8 + 0x4b8 ]
mov [ ebp - 0x44 ] ecx
lea esp [ esp ]
add edx 0x30
dec eax
mov [ edx ] 0x40000000
jne r-xdata
mov edx [ ebp - 0x40 ]
mov edx [ edx ]
add edx eax
cmp edx [ ecx - 0x1c ]
jae r-xdata
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov [ ecx ] eax
xor eax eax
lea edx [ edi + 0x1 ]
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x8 ] 0x1
mov [ ecx + 0xc ] eax
add eax 0x30
dec esi
mov [ eax ] 0x40000000
jne r-xdata
cmp eax 0x80
jae r-xdata
mov ecx 0x3
add eax 0x2
cmp edx [ ebx + eax * 4 + 0x30e9c ]
ja r-xdata
mov [ ebp - 0x30 ] eax
mov ecx [ ebx + 0x31730 ]
mov edx [ ebp - 0x48 ]
lea eax [ esi + 0x1 ]
add ecx eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x40 ] ecx
cmp ecx edx
jbe r-xdata
lea eax [ esi + 0x1 ]
mov [ ebp - 0x44 ] eax
shl ecx 0x6
add ecx [ ebp - 0x60 ]
mov edx eax
mov ecx [ ebx + ecx * 4 + 0x3174c ]
and edx 0xf
add ecx [ ebx + edx * 4 + 0x3234c ]
mov edx [ ebp - 0x38 ]
add edx ecx
shl ecx 0x7
add ecx eax
add edx [ ebx + ecx * 4 + 0x31b4c ]
jmp r-xdata
cmp eax ecx
jae r-xdata
mov ecx edx
mov [ ebp - 0x40 ] edx
mov edx [ ebp - 0x30 ]
lea ecx [ esi - 0x1 ]
cmp ecx [ ebx + edx * 4 + 0x30e9c ]
jne r-xdata
mov [ ecx - 0x1c ] edx
lea edx [ eax + 0x4 ]
mov [ ecx - 0x4 ] edi
mov [ ecx ] edx
mov [ ecx - 0x14 ] 0x0
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x38 ] edx
cmp edx [ ecx - 0x1c ]
jae r-xdata
or ecx 0xffffffff
sub ecx esi
add eax ecx
mov [ ebp - 0x30 ] eax
cmp eax 0x2
jb r-xdata
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x38 ]
add ecx eax
sub edx [ ebp - 0x68 ]
mov edi edi
add [ ebp - 0x54 ] 0x4
add [ ebp - 0x44 ] 0x30
inc esi
jmp r-xdata
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x48 ]
sub ecx eax
mov eax [ ebx + 0x31730 ]
add eax esi
dec ecx
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x40 ] eax
cmp eax edx
jbe r-xdata
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebx + 0x32394 ]
add eax esi
mov [ ebp - 0x40 ] eax
lea eax [ ebx + 0x30c9c ]
push eax
movzx eax [ esi + ecx ]
mov ecx [ ebp - 0x68 ]
movzx edi [ esi + ecx ]
movzx esi [ esi + ecx - 0x1 ]
mov ecx 0x8
sub cl dl
shr esi cl
mov ecx [ ebp - 0x40 ]
and ecx [ ebx + 0x323a0 ]
mov [ ebp - 0x64 ] ecx
mov ecx edx
mov edx [ ebp - 0x64 ]
shl edx cl
mov ecx edi
add esi edx
imul esi esi 0x600
add esi [ ebx + 0x323a8 ]
push esi
call sub_406c80
mov edx [ ebp - 0x58 ]
mov edx [ edx * 4 + r--data ]
mov edi [ ebx + 0x323a4 ]
mov ecx [ ebp - 0x40 ]
and ecx edi
mov esi edx
mov edx [ edx * 4 + r--data ]
shl esi 0x4
add ecx esi
movzx ecx [ ebx + ecx * 2 + 0x323ac ]
mov esi [ ebp - 0x3c ]
shr ecx 0x4
add eax [ ebx + ecx * 4 + 0x30c9c ]
mov ecx [ ebp - 0x78 ]
add ecx esi
add eax [ ebx + ecx * 4 + 0x37654 ]
mov ecx [ ebp - 0x74 ]
add eax [ ebp - 0x70 ]
lea ecx [ ecx + esi + 0x1 ]
and ecx edi
mov edi edx
shl edi 0x4
add edi ecx
mov [ ebp - 0x64 ] edx
movzx edx [ ebx + edx * 2 + 0x3252c ]
mov [ ebp - 0x78 ] edi
movzx edi [ ebx + edi * 2 + 0x323ac ]
xor edx 0x7f0
shr edx 0x4
mov edx [ ebx + edx * 4 + 0x30c9c ]
xor edi 0x7f0
shr edi 0x4
add edx [ ebx + edi * 4 + 0x30c9c ]
mov edi [ ebp - 0x6c ]
add edx eax
mov eax [ ebp - 0x30 ]
add eax esi
lea eax [ eax + edi + 0x1 ]
mov edi [ ebp - 0x4c ]
add esp 0x8
mov [ ebp - 0x3c ] eax
cmp edi eax
jae r-xdata
inc eax
inc ecx
mov [ ebp - 0x30 ] eax
cmp eax [ ebp - 0x40 ]
jb r-xdata
mov edx [ ebp - 0x54 ]
mov edx [ edx ]
add edx [ ebp - 0x80 ]
lea ecx [ esi - 0x1 ]
cmp ecx 0x5
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] edx
lea ecx [ esi - 0x3 ]
jb r-xdata
cmp esi eax
jae r-xdata
mov eax edx
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x78 ]
imul ecx ecx 0x110
movzx eax [ ebx + eax * 2 + 0x3258c ]
mov edi [ ebp - 0x64 ]
movzx edi [ ebx + edi * 2 + 0x32544 ]
add ecx [ ebp - 0x30 ]
xor eax 0x7f0
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30c9c ]
shr edi 0x4
add eax [ ebx + edi * 4 + 0x30c9c ]
mov edi [ ebp - 0x6c ]
add eax [ ebx + ecx * 4 + 0x37654 ]
mov ecx [ ebp - 0x3c ]
lea ecx [ ecx + ecx * 2 ]
add ecx ecx
add eax edx
cmp eax [ ebx + ecx * 8 + 0x49c ]
lea ecx [ ebx + ecx * 8 + 0x49c ]
jae r-xdata
lea edi [ edi + edi * 2 ]
add edi edi
lea edi [ ebx + edi * 8 + 0x49c ]
mov [ ebp - 0x70 ] edi
mov edi [ ebp - 0x4c ]
sub eax edi
add edi eax
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x70 ]
mov al [ ecx ]
cmp al [ ecx + edx ]
mov eax [ ebp - 0x30 ]
jne r-xdata
or edx 0xffffffff
lea eax [ esi - 0x1 ]
sub edx eax
mov eax [ ebp - 0x2c ]
add eax edx
mov [ ebp - 0x2c ] eax
cmp eax 0x2
jb r-xdata
mov edx [ ebp - 0x68 ]
sub edx ecx
lea eax [ ecx + esi ]
mov [ ebp - 0x70 ] edx
jmp r-xdata
mov [ ecx ] eax
mov eax 0x1
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x2c ]
lea edx [ esi + edi + 0x1 ]
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] 0x0
mov [ ecx + 0x10 ] edi
mov [ ecx + 0x14 ] eax
add edi 0x30
dec eax
mov [ edi ] 0x40000000
jne r-xdata
mov eax [ ebp - 0x30 ]
add eax 0x2
mov [ ebp - 0x30 ] eax
cmp eax [ ebp - 0x5c ]
je r-xdata
mov edx [ ebp - 0x74 ]
mov eax [ ebx + 0x323a4 ]
lea edx [ edx + esi - 0x1 ]
and eax edx
mov [ ebp - 0x78 ] eax
lea eax [ ebx + 0x30c9c ]
push eax
movzx eax [ ecx + esi - 0x1 ]
mov ecx [ ebp - 0x68 ]
movzx edi [ esi + ecx - 0x1 ]
movzx esi [ ecx + esi - 0x2 ]
mov [ ebp - 0x70 ] edx
mov edx [ ebx + 0x32394 ]
mov ecx 0x8
sub cl dl
mov edx [ ebx + 0x323a0 ]
and edx [ ebp - 0x70 ]
shr esi cl
mov ecx [ ebx + 0x32394 ]
shl edx cl
mov ecx edi
add esi edx
imul esi esi 0x600
add esi [ ebx + 0x323a8 ]
push esi
call sub_406c80
mov ecx [ ebp - 0x58 ]
mov edx [ ecx * 4 + r--data ]
mov ecx [ ebp - 0x78 ]
mov esi edx
mov edx [ edx * 4 + r--data ]
movzx edi [ ebx + edx * 2 + 0x3252c ]
shl esi 0x4
add esi ecx
movzx esi [ ebx + esi * 2 + 0x323ac ]
shr esi 0x4
add eax [ ebx + esi * 4 + 0x30c9c ]
mov esi edx
add eax [ ebp - 0x38 ]
shl esi 0x4
inc ecx
and ecx [ ebx + 0x323a4 ]
xor edi 0x7f0
add esi ecx
mov [ ebp - 0x78 ] esi
movzx esi [ ebx + esi * 2 + 0x323ac ]
xor esi 0x7f0
shr esi 0x4
mov [ ebp - 0x84 ] edx
mov edx [ ebx + esi * 4 + 0x30c9c ]
mov esi [ ebp - 0x3c ]
shr edi 0x4
add edx [ ebx + edi * 4 + 0x30c9c ]
mov edi [ ebp - 0x6c ]
add edx eax
mov eax [ ebp - 0x2c ]
lea eax [ eax + esi - 0x1 ]
lea eax [ eax + edi + 0x1 ]
mov edi [ ebp - 0x4c ]
add esp 0x8
mov [ ebp - 0x64 ] eax
cmp edi eax
jae r-xdata
mov dl [ edx + eax ]
cmp dl [ eax ]
jne r-xdata
mov eax [ ebx + eax * 4 + 0x30ea0 ]
mov [ ebp - 0x50 ] eax
cmp eax 0x80
jb r-xdata
mov eax [ ebp - 0x78 ]
imul ecx ecx 0x110
movzx eax [ ebx + eax * 2 + 0x3258c ]
mov edi [ ebp - 0x84 ]
movzx edi [ ebx + edi * 2 + 0x32544 ]
add ecx [ ebp - 0x2c ]
xor eax 0x7f0
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30c9c ]
shr edi 0x4
add eax [ ebx + edi * 4 + 0x30c9c ]
mov edi [ ebp - 0x6c ]
add eax [ ebx + ecx * 4 + 0x37654 ]
mov ecx [ ebp - 0x64 ]
lea ecx [ ecx + ecx * 2 ]
add ecx ecx
add eax edx
cmp eax [ ebx + ecx * 8 + 0x49c ]
lea ecx [ ebx + ecx * 8 + 0x49c ]
jae r-xdata
lea edi [ edi + edi * 2 ]
add edi edi
lea edi [ ebx + edi * 8 + 0x49c ]
mov [ ebp - 0x70 ] edi
mov edi [ ebp - 0x4c ]
sub eax edi
add edi eax
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x70 ]
lea ecx [ ecx ]
mov edx [ ebp - 0x2c ]
inc edx
inc eax
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x78 ] eax
cmp edx [ ebp - 0x40 ]
jb r-xdata
mov edi [ ebp - 0x6c ]
mov ecx 0x1ffff
sub ecx eax
shr ecx 0x1f
neg ecx
and ecx 0xa
add ecx 0x6
mov edx eax
shr edx cl
movzx edx [ edx + ebx + 0x3049c ]
lea ecx [ edx + ecx * 2 ]
mov [ ebp - 0x60 ] ecx
mov [ ecx ] eax
mov eax 0x1
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x50 ]
lea edx [ esi + edi ]
add eax 0x4
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] 0x0
mov [ ecx + 0x10 ] edi
mov [ ecx + 0x14 ] eax
add edi 0x30
dec eax
mov [ edi ] 0x40000000
jne r-xdata
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0x70 ]
sub_408760
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x31734 ] edi
jne r-xdata
mov ecx [ esi + 0x490 ]
mov edx [ esi + 0x494 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
lea eax [ ebp - 0x8 ]
push eax
call sub_407260
add esp 0x4
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp eax 0x111
jbe r-xdata
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x498 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ecx ] 0xffffffff
cmp eax 0x2
jae r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esi + 0xc ]
push edx
call eax
add esp 0x4
dec eax
xor edx edx
lea ecx [ esi + 0x31738 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edx
mov [ ebp - 0x18 ] ecx
push ebx
lea ebx [ ebx ]
mov [ ebp - 0x14 ] 0x111
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov bl [ eax + 0x1 ]
cmp bl [ ecx + 0x1 ]
jne r-xdata
mov edi [ ebp - 0x18 ]
mov bl [ eax ]
mov ecx eax
sub ecx [ edi ]
dec ecx
cmp bl [ ecx ]
jne r-xdata
cmp ebx [ esi + 0x31730 ]
jb r-xdata
mov edi 0x2
cmp [ ebp - 0x14 ] edi
jbe r-xdata
mov [ ebp - 0x8 ] 0x0
cmp ebx 0x2
jb r-xdata
mov ecx [ esi + ecx * 4 + 0x30e98 ]
mov edx [ ebp + 0xc ]
add ecx 0x4
lea eax [ ebx - 0x1 ]
mov [ edx ] ecx
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
cmp edi [ esi + 0x31730 ]
jae r-xdata
lea edx [ eax + 0x2 ]
sub ecx eax
mov eax [ ebp - 0x10 ]
cmp eax 0x2
jb r-xdata
mov edx [ esi + ecx * 4 + 0x30e98 ]
mov [ ebp - 0x8 ] edx
cmp ecx 0x2
jbe r-xdata
mov eax ebx
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn
add [ esi + 0x31734 ] eax
mov ecx [ esi + 0x14 ]
push eax
mov eax [ esi + 0x18 ]
push eax
call ecx
add esp 0x8
mov eax ebx
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
lea eax [ edi - 0x1 ]
mov [ ecx ] edx
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp edi [ ebp - 0x10 ]
jbe r-xdata
mov edx [ ebp - 0xc ]
inc edi
inc edx
cmp edi [ ebp - 0x14 ]
jb r-xdata
cmp ebx 0x2
jb r-xdata
lea ecx [ eax + 0x1 ]
cmp ecx ebx
jae r-xdata
cmp ebx 0x2
jne r-xdata
lea eax [ esi + ecx * 4 + 0x30e90 ]
lea esp [ esp ]
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x18 ]
add [ esi + 0x31734 ] eax
push eax
mov eax [ esi + 0x14 ]
push edx
call eax
add esp 0x8
add [ ebp - 0x18 ] 0x4
inc edx
mov [ ebp - 0xc ] edx
cmp edx 0x4
jb r-xdata
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x10 ] edi
jmp r-xdata
mov bl [ edx ]
cmp bl [ ecx + edx ]
jne r-xdata
mov eax 0x1
cmp [ ebp - 0x14 ] 0x2
jbe r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
lea ecx [ eax - 0x1 ]
test ecx ecx
je r-xdata
lea edx [ eax + 0x2 ]
cmp edx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x80
jb r-xdata
mov [ ebp - 0x4 ] ebx
mov edx [ ebp - 0x8 ]
shr edx 0x7
cmp edx [ eax ]
jbe r-xdata
lea edi [ esi + 0x494 ]
push edi
call sub_407260
add esp 0x4
mov [ esi + 0x490 ] eax
cmp eax 0x2
jb r-xdata
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x18 ]
mov eax [ esi + 0x14 ]
add [ esi + 0x31734 ] ecx
push ecx
push edx
call eax
mov eax [ ebp - 0x10 ]
add esp 0x8
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ eax + 0x3 ]
cmp ecx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x200
jae r-xdata
mov ebx 0x1
mov [ ebp - 0x4 ] ebx
mov edx [ eax ]
mov ebx [ eax - 0x4 ]
sub eax 0x8
sub ecx 0x2
mov [ ebp - 0x8 ] edx
cmp ecx 0x2
ja r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0xc ]
push ecx
call edx
lea ecx [ esi + 0x31738 ]
add esp 0x4
dec eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] ecx
mov ecx [ edi ]
mov edx [ esi + ecx * 4 + 0x30e98 ]
cmp eax ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x8000
jb r-xdata
mov edx [ eax - 0x4 ]
inc edx
cmp ebx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
add [ ebp - 0x18 ] 0x4
inc ecx
mov [ ebp - 0xc ] ecx
cmp ecx 0x4
jb r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
lea ecx [ ebx + 0x1 ]
cmp eax ecx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jb r-xdata
mov edx [ ebp - 0x18 ]
mov ecx eax
sub ecx [ edx ]
mov dl [ eax ]
dec ecx
cmp dl [ ecx ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
add eax 0x4
mov [ ecx ] eax
lea eax [ ebx - 0x2 ]
test eax eax
je r-xdata
lea esi [ ebx - 0x1 ]
mov edi 0x2
cmp esi edi
jbe r-xdata
ja r-xdata
mov edi edx
shr edi 0x7
cmp edi [ ebp - 0x8 ]
jbe r-xdata
mov edx [ esi + 0x18 ]
add [ esi + 0x31734 ] eax
push eax
mov eax [ esi + 0x14 ]
push edx
call eax
add esp 0x8
lea edx [ eax + 0x2 ]
sub ecx eax
lea ecx [ ecx ]
inc eax
cmp eax ebx
jb r-xdata
cmp eax ecx
cmp edi esi
jae r-xdata
inc edi
inc edx
cmp edi esi
jb r-xdata
cmp ebx 0x3
jb r-xdata
mov ebx [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
mov bl [ edx ]
cmp bl [ ecx + edx ]
jne r-xdata
mov eax [ ebp - 0x8 ]
shr eax 0x7
cmp eax edx
ja r-xdata
sub_408aa0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x31748 ]
mov edx [ edi + 0x3baa8 ]
shl eax 0x4
add eax [ ebp + 0xc ]
lea esi [ edi + 0x3baa8 ]
lea ebx [ edi + eax * 2 + 0x323ac ]
movzx eax [ ebx ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ esi + 0x8 ] ecx
mov [ ebp - 0xc ] esi
adc [ esi + 0xc ] 0x0
sub edx ecx
mov ecx eax
shr ecx 0x5
sub eax ecx
mov [ esi ] edx
mov [ ebx ] ax
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov edx [ edi + 0x31748 ]
movzx eax [ edi + edx * 2 + 0x3252c ]
lea ecx [ edi + edx * 2 + 0x3252c ]
mov edx [ esi ]
shr edx 0xb
imul edx eax
mov [ esi ] edx
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ ecx ] dx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov eax [ edi + 0x31748 ]
mov ecx [ eax * 4 + r--data ]
mov eax [ ebp + 0xc ]
xor edx edx
cmp [ edi + 0x3baa4 ] edx
lea ebx [ edi + 0x32a10 ]
sete dl
mov [ edi + 0x31748 ] ecx
push 0x0
mov ecx esi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] edx
mov edx ebx
call sub_406ee0
add esp 0x4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
lea eax [ edi + 0x3270c ]
push 0x3f
push eax
mov ecx 0x6
mov eax esi
call sub_406ce0
mov eax 0x1a
mov ebx 0x3ffffff
mov ecx esi
call sub_406a20
push 0xf
add edi 0x329f0
push edi
mov eax 0x4
mov ecx esi
call sub_406d70
add esp 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
dec [ ebx + eax * 4 + 0x4808 ]
jne r-xdata
lea esi [ edi + 0x30c9c ]
mov edi [ ebp - 0x8 ]
mov ebx eax
call sub_4071b0
mov esi [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
sub_408bf0
mov eax [ ecx + 0x3bafc ]
test eax eax
jne r-xdata
retn
cmp [ ecx + 0x3bad8 ] eax
je r-xdata
cmp [ ecx + 0x84 ] 0x0
je r-xdata
mov [ ecx + 0x3bafc ] 0x9
mov eax [ ecx + 0x3bafc ]
test eax eax
je r-xdata
mov [ ecx + 0x3bafc ] 0x8
mov [ ecx + 0x3baf4 ] 0x1
sub_408c40
push ebp
mov ebp esp
cmp [ ebx + 0x3bae0 ] 0x0
mov [ ebx + 0x3baf4 ] 0x1
je r-xdata
push esi
push edi
lea esi [ ebx + 0x3baa8 ]
mov edi 0x5
mov eax [ ebx + 0x323a4 ]
and eax [ ebp + 0x8 ]
push eax
push ebx
call sub_408aa0
add esp 0x8
call sub_406950
dec edi
jne r-xdata
cmp [ esi + 0x30 ] edi
jne r-xdata
mov eax [ ebx + 0x3bafc ]
pop edi
pop esi
test eax eax
jne r-xdata
mov eax [ esi + 0x20 ]
mov edi [ esi + 0x18 ]
mov ecx [ esi + 0x24 ]
sub edi eax
push edi
push eax
push ecx
mov ecx [ ecx ]
call ecx
add esp 0xc
cmp edi eax
je r-xdata
pop ebp
retn
cmp [ ebx + 0x3bad8 ] eax
je r-xdata
add [ esi + 0x28 ] edi
mov edx [ esi + 0x20 ]
mov [ esi + 0x18 ] edx
adc [ esi + 0x2c ] 0x0
mov [ esi + 0x30 ] 0x9
cmp [ ebx + 0x84 ] 0x0
je r-xdata
mov [ ebx + 0x3bafc ] 0x9
mov eax [ ebx + 0x3bafc ]
test eax eax
je r-xdata
mov [ ebx + 0x3bafc ] 0x8
mov [ ebx + 0x3baf4 ] 0x1
sub_408d00
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
lea eax [ edi + 0x3234c ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] eax
lea ebx [ ebx ]
movzx ebx [ edi + ecx * 2 + 0x329f0 ]
mov eax esi
and eax 0x1
mov edi eax
neg edi
sar edi 0x4
and edi 0x7f
shr ebx 0x4
xor ebx edi
mov edi [ ebp + 0x8 ]
add edx [ edi + ebx * 4 + 0x30c9c ]
add ecx ecx
shr esi 0x1
or ecx eax
dec [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
inc esi
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] eax
cmp esi 0x10
jb r-xdata
xor edx edx
lea ecx [ edx + 0x1 ]
mov [ ebp - 0x4 ] 0x4
lea esp [ esp ]
mov [ edi + 0x3238c ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408d90
push ebp
mov ebp esp
sub esp 0x218
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi 0x4
mov [ ebp - 0x208 ] edi
mov edi [ ebp - 0x208 ]
mov eax [ ebp - 0x20c ]
mov [ ebp + edi * 4 - 0x204 ] eax
inc edi
mov [ ebp - 0x208 ] edi
cmp edi 0x80
jb r-xdata
jmp r-xdata
movzx ebx [ edx + edi + 0x3049c ]
mov ecx ebx
mov esi ebx
and esi 0x1
shr ecx 0x1
dec ecx
or esi 0x2
shl esi cl
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x20c ] 0x0
mov [ ebp - 0x210 ] 0x1
sub edi esi
mov [ ebp - 0x214 ] ecx
test ecx ecx
je r-xdata
lea esi [ ebp - 0x204 ]
sub esi edx
lea ecx [ edx + 0x3270c ]
lea ebx [ edx + 0x31b54 ]
sub esi 0x31b4c
lea edi [ edx + 0x3174c ]
mov [ ebp - 0x208 ] ecx
mov [ ebp - 0x20c ] ebx
mov [ ebp - 0x210 ] esi
mov [ ebp - 0x218 ] 0x4
jmp r-xdata
mov ecx [ ebp - 0x210 ]
sub ecx ebx
add ecx esi
movzx ecx [ edx + ecx * 2 + 0x3290a ]
mov eax edi
and eax 0x1
mov ebx eax
neg ebx
shr ecx 0x4
sar ebx 0x4
and ebx 0x7f
xor ecx ebx
mov ecx [ edx + ecx * 4 + 0x30c9c ]
add [ ebp - 0x20c ] ecx
mov ecx [ ebp - 0x210 ]
add ecx ecx
or ecx eax
shr edi 0x1
dec [ ebp - 0x214 ]
mov [ ebp - 0x210 ] ecx
jne r-xdata
xor ecx ecx
mov [ ebp - 0x214 ] ecx
cmp [ edx + 0x32390 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x218 ]
mov eax 0xe
cmp [ edx + 0x32390 ] eax
jbe r-xdata
mov eax ecx
or eax 0x40
xor esi esi
cmp eax 0x1
je r-xdata
mov eax [ edi ]
mov [ ebx - 0x8 ] eax
mov ecx [ edi + 0x4 ]
mov [ ebx - 0x4 ] ecx
mov eax [ edi + 0x8 ]
mov [ ebx ] eax
mov ecx [ edi + 0xc ]
mov [ ebx + 0x4 ] ecx
mov eax 0x4
lea ecx [ ebx + 0x8 ]
jmp r-xdata
lea ecx [ ecx ]
mov [ edi + ecx * 4 ] esi
inc ecx
mov [ ebp - 0x214 ] ecx
cmp ecx [ edx + 0x32390 ]
jb r-xdata
lea esp [ esp ]
movzx ebx [ edx + eax + 0x3049c ]
mov ebx [ edi + ebx * 4 ]
add ebx [ esi + ecx ]
inc eax
mov [ ecx ] ebx
add ecx 0x4
cmp eax 0x80
jb r-xdata
mov ecx eax
shr ecx 0x1
sub ecx 0x5
shl ecx 0x4
add [ edi + eax * 4 ] ecx
inc eax
cmp eax [ edx + 0x32390 ]
jb r-xdata
mov esi [ ebp - 0x210 ]
mov ebx [ ebp - 0x208 ]
mov ecx eax
and eax 0x1
shr ecx 0x1
movzx ebx [ ebx + ecx * 2 ]
neg eax
sar eax 0x4
and eax 0x7f
shr ebx 0x4
xor ebx eax
add esi [ edx + ebx * 4 + 0x30c9c ]
mov eax ecx
cmp eax 0x1
jne r-xdata
mov ebx [ ebp - 0x20c ]
mov ecx [ ebp - 0x214 ]
mov ebx [ ebp - 0x20c ]
sub [ ebp - 0x208 ] 0xffffff80
add ebx 0x200
sub esi 0x200
add edi 0x100
dec [ ebp - 0x218 ]
mov [ ebp - 0x20c ] ebx
mov [ ebp - 0x210 ] esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov [ edx + 0x3baf0 ] 0x0
pop ebx
call sub_40daf7
mov esp ebp
pop ebp
retn
sub_408fe0
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x1c ]
xor edi edi
push eax
mov [ esi + 0x3bacc ] edi
mov [ esi + 0x3bac8 ] edi
call sub_40c680
or eax 0xffffffff
lea ecx [ ebp - 0x30 ]
push ecx
push esi
mov [ ebp - 0x30 ] 0x5
mov [ ebp - 0xc ] edi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x8 ] edi
call sub_406780
lea edx [ esi + 0x3049c ]
push edx
call sub_4061f0
lea eax [ esi + 0x30c9c ]
push eax
call sub_406be0
add esp 0x14
mov [ esi + 0x323a8 ] edi
mov [ esi + 0x3bb18 ] edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_409070
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0x45228
push eax
mov eax [ eax ]
call eax
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop esi
pop ebp
retn
push esi
call sub_408fe0
add esp 0x4
mov eax esi
sub_4090a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x323a8 ]
push eax
push esi
call ecx
mov edx [ edi + 0x3bb18 ]
mov eax [ esi + 0x4 ]
push edx
push esi
call eax
add esp 0x10
xor eax eax
mov [ edi + 0x323a8 ] eax
mov [ edi + 0x3bb18 ] eax
pop edi
pop esi
pop ebp
retn
sub_4090e0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
lea ecx [ esi + 0x1c ]
push ecx
call sub_40c780
mov edx [ esi + 0x323a8 ]
mov edi [ ebp + 0xc ]
mov eax [ edi + 0x4 ]
push edx
push edi
call eax
mov ecx [ esi + 0x3bb18 ]
mov edx [ edi + 0x4 ]
push ecx
push edi
call edx
mov [ esi + 0x323a8 ] 0x0
mov [ esi + 0x3bb18 ] 0x0
mov eax [ esi + 0x3bac8 ]
mov ecx [ edi + 0x4 ]
push eax
push edi
call ecx
add esp 0x20
pop edi
mov [ esi + 0x3bac8 ] 0x0
pop esi
pop ebp
retn
sub_409150
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push esi
push edi
call sub_4090e0
mov ecx [ esi + 0x4 ]
push edi
push esi
call ecx
add esp 0x14
pop edi
pop esi
pop ebp
retn
sub_409180
push ebp
mov ebp esp
sub esp 0x24
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x3bb08 ]
test eax eax
je r-xdata
cmp [ edi + 0x3baf4 ] 0x0
mov eax [ edi + 0x3bafc ]
jne r-xdata
mov ecx [ edi ]
mov [ edi + 0x50 ] eax
mov eax [ edi + 0x18 ]
push eax
call ecx
add esp 0x4
mov [ edi + 0x3bb08 ] 0x0
pop edi
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
cmp [ edi + 0x3bad8 ] eax
je r-xdata
cmp [ edi + 0x84 ] 0x0
je r-xdata
mov [ edi + 0x3bafc ] 0x9
mov eax [ edi + 0x3bafc ]
test eax eax
je r-xdata
mov [ edi + 0x3bafc ] 0x8
push ebx
push esi
mov esi [ edi + 0x3bae8 ]
mov edx esi
or edx [ edi + 0x3baec ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] esi
jne r-xdata
mov [ edi + 0x3baf4 ] 0x1
pop edi
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0x8 ]
push eax
call ecx
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0x8 ]
push eax
call ecx
add esp 0x4
test eax eax
je r-xdata
mov ecx esi
sub ecx [ ebp - 0x14 ]
add [ edi + 0x3bae8 ] ecx
adc [ edi + 0x3baec ] 0x0
jmp r-xdata
push esi
mov ebx edi
call sub_408c40
add esp 0x4
pop esi
pop ebx
lea edx [ ebp - 0x24 ]
push edx
mov esi edi
call sub_407260
mov eax [ edi + 0x31748 ]
mov edx [ edi + 0x3baa8 ]
shl eax 0x5
lea ecx [ eax + edi + 0x323ac ]
movzx eax [ ecx ]
lea esi [ edi + 0x3baa8 ]
shr edx 0xb
imul edx eax
mov [ esi ] edx
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ ecx ] dx
mov eax [ esi ]
add esp 0x4
cmp eax 0x1000000
jae r-xdata
cmp [ edi + 0x3baa4 ] 0x0
je r-xdata
mov eax [ edi + 0x31748 ]
mov edx [ edi + 0x31734 ]
mov ecx [ eax * 4 + r--data ]
mov eax [ edi + 0x18 ]
neg edx
push edx
mov [ edi + 0x31748 ] ecx
mov ecx [ edi + 0x4 ]
push eax
call ecx
mov edx [ edi + 0x323a8 ]
movzx eax al
push edx
mov ecx esi
call sub_406ac0
dec [ edi + 0x31734 ]
add esp 0xc
inc [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
shl eax 0x8
mov [ esi ] eax
call sub_406950
push esi
lea ecx [ ebp - 0xc ]
mov ebx edi
call sub_407520
add esp 0x4
lea edx [ ebp - 0xc ]
push edx
push edi
call sub_408760
add esp 0x8
jmp r-xdata
mov eax [ edi + 0x31748 ]
mov edx [ edi + 0x3baa8 ]
shl eax 0x4
add eax ebx
lea esi [ edi + 0x3baa8 ]
lea eax [ edi + eax * 2 + 0x323ac ]
mov [ ebp - 0x18 ] eax
movzx eax [ eax ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ esi + 0x8 ] ecx
mov [ ebp - 0x1c ] esi
adc [ esi + 0xc ] 0x0
sub edx ecx
mov ecx eax
mov [ esi ] edx
mov edx [ ebp - 0x18 ]
shr ecx 0x5
sub eax ecx
mov [ edx ] ax
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov ebx [ edi + 0x323a4 ]
and ebx esi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x20 ] ebx
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x4
mov edx [ esi ]
jae r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov eax [ edi + 0x31748 ]
mov edx [ edi + 0x3baa8 ]
shl eax 0x4
add eax ebx
lea ecx [ edi + eax * 2 + 0x323ac ]
movzx eax [ ecx ]
lea esi [ edi + 0x3baa8 ]
shr edx 0xb
imul edx eax
mov [ esi ] edx
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ ecx ] dx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ edi + 0x31748 ]
movzx eax [ edi + ecx * 2 + 0x3252c ]
lea ecx [ edi + ecx * 2 + 0x3252c ]
shr edx 0xb
imul edx eax
mov [ esi ] edx
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ ecx ] dx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov eax [ edi + 0x31748 ]
lea eax [ edi + eax * 2 + 0x3252c ]
mov [ ebp - 0x1c ] eax
movzx eax [ eax ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ esi + 0x8 ] ecx
adc [ esi + 0xc ] 0x0
sub edx ecx
mov ecx eax
mov [ esi ] edx
mov edx [ ebp - 0x1c ]
shr ecx 0x5
sub eax ecx
mov [ edx ] ax
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
push eax
call ecx
sub eax [ edi + 0x31734 ]
mov ebx [ edi + 0x323a0 ]
mov dl [ eax ]
and ebx [ ebp - 0x8 ]
mov [ ebp - 0x1 ] dl
mov edx [ edi + 0x32394 ]
mov ecx 0x8
sub cl dl
movzx edx [ eax - 0x1 ]
shr edx cl
mov ecx [ edi + 0x32394 ]
shl ebx cl
add esp 0x4
mov ecx esi
add edx ebx
imul edx edx 0x600
add edx [ edi + 0x323a8 ]
cmp [ edi + 0x31748 ] 0x7
jae r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov eax [ edi + 0x31748 ]
mov ecx [ eax * 4 + r--data ]
mov eax [ ebp - 0x10 ]
xor edx edx
cmp [ edi + 0x3baa4 ] edx
mov [ edi + 0x31748 ] ecx
sete dl
add eax 0xfffffffe
mov [ ebp - 0x24 ] eax
push eax
mov eax ebx
mov ecx esi
mov [ ebp - 0x20 ] edx
lea edx [ edi + 0x32a10 ]
mov [ ebp - 0x18 ] edx
call sub_406ee0
add esp 0x4
cmp [ ebp - 0x20 ] 0x0
je r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov eax [ ebp - 0xc ]
test eax eax
jne r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
sub eax [ edi + 0x31738 ]
movzx eax [ eax - 0x1 ]
push eax
movzx eax [ ebp - 0x1 ]
push edx
call sub_406b40
add esp 0x8
movzx eax [ ebp - 0x1 ]
push edx
call sub_406ac0
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0xc ]
sub eax 0x4
mov [ ebp - 0xc ] eax
cmp eax 0x80
jae r-xdata
mov eax [ ebp - 0x18 ]
dec [ eax + ebx * 4 + 0x4808 ]
jne r-xdata
mov edx [ edi + eax * 4 + 0x31738 ]
mov eax [ edi + 0x31748 ]
lea ebx [ edi + eax * 2 + 0x32544 ]
movzx eax [ ebx ]
mov [ ebp - 0x1c ] edx
mov edx [ esi ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ esi + 0x8 ] ecx
adc [ esi + 0xc ] 0x0
sub edx ecx
mov ecx eax
shr ecx 0x5
sub eax ecx
mov [ esi ] edx
mov [ ebx ] ax
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov eax [ edi + 0x31748 ]
mov edx [ esi ]
lea ecx [ edi + eax * 2 + 0x32544 ]
movzx eax [ ecx ]
shr edx 0xb
imul edx eax
mov [ esi ] edx
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ ecx ] dx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ ebp - 0x10 ]
sub [ edi + 0x31734 ] ecx
mov eax [ edi + 0x31734 ]
add [ ebp - 0x8 ] ecx
test eax eax
jne r-xdata
mov ecx [ edi + 0x31748 ]
mov edx [ ecx * 4 + r--data ]
mov [ edi + 0x31748 ] edx
jmp r-xdata
mov ecx 0x1ffff
sub ecx eax
shr ecx 0x1f
neg ecx
and ecx 0xa
add ecx 0x6
shr eax cl
movzx eax [ eax + edi + 0x3049c ]
lea ebx [ eax + ecx * 2 ]
movzx ebx [ eax + edi + 0x3049c ]
jmp r-xdata
lea esi [ edi + 0x30c9c ]
mov edi eax
call sub_4071b0
mov esi [ ebp - 0x1c ]
mov edi [ ebp + 0x8 ]
cmp [ ebp - 0xc ] 0x1
jne r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov ecx [ edi + 0x31748 ]
xor eax eax
cmp [ ebp - 0x10 ] 0x1
setne al
shl ecx 0x4
add ecx ebx
lea edi [ edi + ecx * 2 + 0x3258c ]
push eax
mov eax esi
call sub_406a60
mov edi [ ebp + 0x8 ]
add esp 0x4
jmp r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov esi [ ebp - 0x8 ]
cmp [ edi + 0x3baa4 ] eax
jne r-xdata
shl eax 0x7
lea ecx [ eax + edi + 0x3270c ]
push ebx
push ecx
mov ecx 0x6
mov eax esi
call sub_406ce0
add esp 0x8
cmp ebx 0x4
jb r-xdata
mov eax 0x3
cmp [ ebp - 0x10 ] 0x5
mov eax [ ebp - 0x24 ]
jb r-xdata
mov eax [ edi + 0x31748 ]
mov edx [ esi ]
lea ebx [ edi + eax * 2 + 0x3255c ]
movzx eax [ ebx ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ esi + 0x8 ] ecx
adc [ esi + 0xc ] 0x0
sub edx ecx
mov ecx eax
shr ecx 0x5
sub eax ecx
mov [ esi ] edx
mov [ ebx ] ax
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov edx [ edi + 0x31748 ]
movzx eax [ edi + edx * 2 + 0x3255c ]
lea ecx [ edi + edx * 2 + 0x3255c ]
mov edx [ esi ]
shr edx 0xb
imul edx eax
mov [ esi ] edx
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ ecx ] dx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov eax [ ebp - 0x10 ]
cmp eax 0x1
jne r-xdata
mov edx [ edi + 0x18 ]
mov eax [ edi + 0x8 ]
push edx
call eax
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x3baf0 ] 0x80
jb r-xdata
mov ecx [ edi + 0x31740 ]
mov edx [ edi + 0x3173c ]
mov eax [ edi + 0x31738 ]
inc [ edi + 0x3baf0 ]
mov [ edi + 0x31744 ] ecx
mov ecx [ ebp - 0xc ]
mov [ edi + 0x31740 ] edx
mov [ edi + 0x3173c ] eax
mov [ edi + 0x31738 ] ecx
mov eax ebx
shr eax 0x1
mov edx ebx
and edx 0x1
dec eax
or edx 0x2
mov ecx eax
shl edx cl
mov ecx [ ebp - 0xc ]
sub ecx edx
mov [ ebp - 0x24 ] ecx
cmp ebx 0xe
jae r-xdata
mov eax [ edi + 0x31748 ]
mov ebx [ ebp - 0xc ]
lea edx [ ebx - 0x2 ]
lea edi [ edi + eax * 2 + 0x32574 ]
push edx
mov eax esi
call sub_406a60
mov eax [ ebp + 0x8 ]
add esp 0x4
cmp ebx 0x3
jne r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_406950
mov eax [ edi + 0x31738 ]
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x20 ]
mov [ edi + 0x3173c ] eax
mov [ edi + 0x31738 ] ecx
shl eax 0x8
mov [ esi ] eax
call sub_406950
jmp r-xdata
xor ecx ecx
cmp [ edi + 0x3baa4 ] ecx
lea edx [ edi + 0x37258 ]
sete cl
add eax 0xfffffffe
push eax
mov eax ebx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x20 ] ecx
mov ecx esi
call sub_406ee0
add esp 0x4
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ edi + 0x31748 ]
mov eax [ edx * 4 + r--data ]
mov [ edi + 0x31748 ] eax
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x14 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ edi + 0x3238c ] 0x10
jb r-xdata
mov edx edi
call sub_408d90
mov esi [ ebp - 0x1c ]
mov ebx ecx
add eax 0xfffffffc
shr ebx 0x4
mov ecx esi
call sub_406a20
mov eax [ ebp - 0x24 ]
and eax 0xf
push eax
lea eax [ edi + 0x329f0 ]
push eax
mov eax 0x4
mov ecx esi
call sub_406d70
add esp 0x8
inc [ edi + 0x3238c ]
sub edx ebx
push ecx
lea edx [ edi + edx * 2 + 0x3290a ]
push edx
mov ecx esi
call sub_406d70
add esp 0x8
jmp r-xdata
mov edx [ eax + 0x3173c ]
mov edi [ ebp + 0x8 ]
mov [ eax + 0x31740 ] edx
mov ecx [ eax + 0x31740 ]
mov [ eax + 0x31744 ] ecx
mov edx [ edi + 0x31748 ]
mov eax [ edx * 4 + r--data ]
mov [ edi + 0x31748 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
dec [ eax + ebx * 4 + 0x4808 ]
jne r-xdata
cmp eax 0x8000
jb r-xdata
add eax 0x112c
cmp eax [ ebp + 0x14 ]
jae r-xdata
push edi
call sub_408d00
add esp 0x4
lea esi [ edi + 0x30c9c ]
mov edi eax
call sub_4071b0
mov edi [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x14 ]
mov ecx edi
add [ edi + 0x3bae8 ] eax
adc [ edi + 0x3baec ] 0x0
call sub_408bf0
pop esi
pop ebx
pop edi
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x3bac0 ]
sub eax [ edi + 0x3bac8 ]
cdq
add eax [ edi + 0x3bad0 ]
adc edx [ edi + 0x3bad4 ]
add eax [ edi + 0x3bab8 ]
adc edx [ edi + 0x3babc ]
add eax 0x2000
adc edx 0x0
xor ecx ecx
cmp edx ecx
ja r-xdata
jb r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
sub_4099a0
push ebp
mov ebp esp
sub esp 0x8
push ebx
xor ebx ebx
push edi
mov edi eax
mov [ ebp - 0x8 ] 0x1000
cmp [ esi + 0x3bac8 ] ebx
jne r-xdata
mov ecx [ esi + 0x32398 ]
add ecx [ esi + 0x32394 ]
mov eax [ esi + 0x323a8 ]
mov [ ebp - 0x4 ] ecx
cmp eax ebx
je r-xdata
mov eax [ edi ]
push 0x10000
push edi
call eax
add esp 0x8
mov [ esi + 0x3bac8 ] eax
cmp eax ebx
je r-xdata
mov ecx [ edi + 0x4 ]
push eax
push edi
call ecx
mov edx [ esi + 0x3bb18 ]
mov eax [ edi + 0x4 ]
push edx
push edi
call eax
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x323a8 ] ebx
mov [ esi + 0x3bb18 ] ebx
mov ebx 0x300
shl ebx cl
mov ecx [ edi ]
add ebx ebx
push ebx
push edi
call ecx
mov [ esi + 0x323a8 ] eax
mov edx [ edi ]
push ebx
push edi
call edx
mov ecx [ esi + 0x323a8 ]
xor ebx ebx
add esp 0x20
mov [ esi + 0x3bb18 ] eax
cmp ecx ebx
je r-xdata
cmp [ esi + 0x3bb18 ] ebx
je r-xdata
pop edi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
add eax 0x10000
mov [ esi + 0x3bac4 ] eax
mov edx [ edi + 0x4 ]
push ecx
push edi
call edx
mov eax [ esi + 0x3bb18 ]
mov ecx [ edi + 0x4 ]
push eax
push edi
call ecx
add esp 0x10
mov [ esi + 0x323a8 ] ebx
mov [ esi + 0x3bb18 ] ebx
cmp eax ebx
je r-xdata
cmp [ esi + 0x3baa0 ] ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x3baa0 ] eax
mov eax [ esi + 0x3bb00 ]
mov ecx 0x1000000
cmp ecx eax
mov ecx [ ebp + 0x8 ]
sbb edx edx
neg edx
mov [ esi + 0x70 ] edx
lea edx [ eax + 0x1000 ]
cmp edx ecx
jae r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0x31730 ]
push ecx
mov ecx [ ebp - 0x8 ]
push 0x111
push edx
push ecx
push eax
lea edi [ esi + 0x1c ]
push edi
call sub_40c7e0
add esp 0x18
test eax eax
je r-xdata
sub ecx eax
mov [ ebp - 0x8 ] ecx
push esi
push edi
mov [ esi + 0x18 ] edi
call sub_40da80
add esp 0x8
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_409b00
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ edx + 0x31748 ] ebx
mov [ edx + 0x31738 ] ebx
mov [ edx + 0x3173c ] ebx
mov [ edx + 0x31740 ] ebx
mov [ edx + 0x31744 ] ebx
mov eax [ edx + 0x3bac8 ]
push esi
mov [ edx + 0x3bac0 ] eax
push edi
mov [ edx + 0x3bab0 ] ebx
mov [ edx + 0x3bab4 ] ebx
mov [ edx + 0x3baa8 ] 0xffffffff
mov [ edx + 0x3bab8 ] 0x1
mov [ edx + 0x3babc ] ebx
mov [ edx + 0x3baac ] bl
mov [ edx + 0x3bad0 ] ebx
mov [ edx + 0x3bad4 ] ebx
mov [ edx + 0x3bad8 ] ebx
lea ecx [ edx + 0x32544 ]
lea eax [ edx + 0x3258c ]
mov [ ebp + 0x8 ] 0xc
mov edi 0x400
mov [ eax - 0x1e0 ] di
mov [ eax ] di
add eax 0x2
dec esi
jne r-xdata
mov esi edi
mov [ ecx - 0x18 ] si
mov [ ecx ] si
mov [ ecx + 0x18 ] si
mov [ ecx + 0x30 ] si
add ecx 0x2
dec [ ebp + 0x8 ]
jne r-xdata
mov esi 0x10
jmp r-xdata
mov ecx [ edx + 0x32394 ]
add ecx [ edx + 0x32398 ]
mov esi 0x300
shl esi cl
xor eax eax
cmp esi ebx
jbe r-xdata
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x3270c ]
mov ecx 0x80
[ edi ]
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x3290c ]
mov ecx 0x39
[ edi ]
mov [ edx + 0x32a10 ] 0x4000400
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x32a14 ]
mov ecx 0x40
[ edi ]
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x32b14 ]
mov ecx 0x40
[ edi ]
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x32c14 ]
mov ecx 0x80
[ edi ]
mov [ edx + 0x37258 ] 0x4000400
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x3725c ]
mov ecx 0x40
[ edi ]
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x3735c ]
mov ecx 0x40
[ edi ]
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x3745c ]
mov ecx 0x80
[ edi ]
mov eax 0x400
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
mov [ edx + 0x329f0 ] eax
mov [ edx + 0x329f4 ] eax
mov [ edx + 0x329f8 ] eax
mov [ edx + 0x329fc ] eax
mov [ edx + 0x32a00 ] eax
mov [ edx + 0x32a04 ] eax
mov [ edx + 0x32a08 ] eax
mov [ edx + 0x32a0c ] eax
mov [ edx + 0x488 ] ebx
mov [ edx + 0x48c ] ebx
mov ecx [ edx + 0x3239c ]
mov eax 0x1
shl eax cl
mov ecx [ edx + 0x32398 ]
pop edi
pop esi
dec eax
mov [ edx + 0x323a4 ] eax
mov eax 0x1
shl eax cl
mov [ edx + 0x31734 ] ebx
pop ebx
dec eax
mov [ edx + 0x323a0 ] eax
pop ebp
retn
jmp r-xdata
mov ecx [ edx + 0x323a8 ]
mov edi 0x400
mov [ ecx + eax * 2 ] di
inc eax
cmp eax esi
jb r-xdata
sub_409d70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x3baa4 ] 0x0
jne r-xdata
mov eax [ edi + 0x31730 ]
mov ecx [ edi + 0x3239c ]
dec eax
mov [ edi + 0x3ba5c ] eax
mov [ edi + 0x37214 ] eax
mov eax 0x1
shl eax cl
xor ebx ebx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov edx edi
call sub_408d90
push edi
call sub_408d00
add esp 0x4
mov ecx [ edi + 0x3239c ]
mov eax 0x1
shl eax cl
xor ebx ebx
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
lea esi [ edi + 0x30c9c ]
add edi 0x32a10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ edi + 0x30c9c ]
add edi 0x37258
call sub_4071b0
inc ebx
cmp ebx [ ebp - 0x4 ]
jb r-xdata
mov edi [ ebp + 0x8 ]
call sub_4071b0
inc ebx
cmp ebx [ ebp + 0x8 ]
jb r-xdata
sub_409e10
push ebp
mov ebp esp
push esi
mov esi eax
mov edx [ esi + 0x3bb00 ]
push edi
xor edi edi
xor ecx ecx
mov eax 0x1
mov edx [ ebp + 0x8 ]
lea eax [ ecx + ecx ]
mov ecx [ ebp + 0x10 ]
push ecx
mov [ esi + 0x32390 ] eax
mov eax [ ebp + 0xc ]
push edx
mov [ esi + 0x3baf4 ] edi
mov [ esi + 0x3bafc ] edi
call sub_4099a0
add esp 0x8
cmp eax edi
jne r-xdata
rol eax 0x1
cmp edx eax
jbe r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_409b00
push esi
call sub_409d70
add esp 0x8
mov [ esi + 0x3bae8 ] edi
mov [ esi + 0x3baec ] edi
xor eax eax
inc ecx
jmp r-xdata
rol eax 0x1
cmp edx eax
jbe r-xdata
add ecx 0x2
add ecx 0x3
rol eax 0x1
cmp ecx 0x1b
jb r-xdata
cmp edx eax
jbe r-xdata
jmp r-xdata
sub_409ea0
push ebp
mov ebp esp
mov [ eax + 0x3bb08 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x3bacc ] edx
mov edx [ ebp + 0x8 ]
push ecx
push edx
push 0x0
call sub_409e10
add esp 0xc
pop ebp
retn
sub_409ed0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x3bb08 ] ecx
mov ecx [ ebp + 0x14 ]
push ecx
push edx
call sub_409e10
add esp 0xc
pop ebp
retn
sub_409f20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
lea ecx [ eax + 0x3bb0c ]
mov [ eax + 0x3bb10 ] edx
mov edx [ ebp + 0x10 ]
mov [ ecx ] sub_406240
mov [ eax + 0x3bb08 ] ecx
mov ecx [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x3bb14 ] edx
mov edx [ ebp + 0x18 ]
push edx
push ecx
call sub_409e10
add esp 0xc
pop ebp
retn
sub_409f70
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
cmp eax edi
jae r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
push edi
push eax
push ecx
call sub_40e480
sub [ esi + 0x8 ] edi
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop esi
pop ebp
retn
mov edi eax
mov [ esi + 0xc ] 0x1
sub_409fd0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0xc ]
push eax
call ecx
add esp 0x4
sub eax [ esi + 0x31734 ]
pop esi
pop ebp
retn
sub_409ff0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0x14 ]
mov ecx [ edi ]
mov [ ebp - 0x18 ] sub_409f70
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ebx
mov [ esi + 0x3bae0 ] ebx
mov [ esi + 0x3baf4 ] ebx
mov [ esi + 0x3bafc ] ebx
cmp [ ebp + 0xc ] ebx
je r-xdata
push esi
call sub_409d70
mov edx [ esi + 0x3bae8 ]
mov eax [ esi + 0x3baec ]
mov ecx [ esi + 0x3bac8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x3bab0 ] ebx
mov [ esi + 0x3bab4 ] ebx
mov [ esi + 0x3baa8 ] 0xffffffff
mov [ esi + 0x3bab8 ] 0x1
mov [ esi + 0x3babc ] ebx
mov [ esi + 0x3baac ] bl
mov [ esi + 0x3bac0 ] ecx
mov [ esi + 0x3bad0 ] ebx
mov [ esi + 0x3bad4 ] ebx
mov [ esi + 0x3bad8 ] ebx
lea edx [ ebp - 0x18 ]
mov [ esi + 0x3bacc ] edx
mov ecx [ eax ]
mov edx [ ebp + 0x18 ]
push ecx
push edx
push 0x1
push esi
call sub_409180
mov ecx [ esi + 0x3bae8 ]
sub ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x1c ]
add esp 0x14
mov [ edx ] ecx
mov ecx [ ebp - 0x10 ]
sub [ edi ] ecx
cmp [ ebp - 0xc ] ebx
pop edi
pop esi
pop ebx
je r-xdata
push esi
call sub_409b00
add esp 0x4
mov esp ebp
pop ebp
retn
mov eax 0x7
sub_40a0e0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x3bb08 ] eax
mov eax [ ebp + 0x18 ]
push edx
push eax
push 0x0
mov eax esi
mov [ esi + 0x3bacc ] ecx
call sub_409e10
add esp 0xc
test eax eax
jne r-xdata
pop esi
pop ebp
retn
push eax
push eax
push eax
push esi
call sub_409180
add esp 0x10
test eax eax
jne r-xdata
push edi
mov edi [ ebp + 0x14 ]
pop edi
test edi edi
je r-xdata
push 0x0
push 0x0
push 0x0
push esi
call sub_409180
add esp 0x10
test eax eax
je r-xdata
mov eax [ esi + 0x3bac0 ]
sub eax [ esi + 0x3bac8 ]
mov ecx [ esi + 0x3baec ]
cdq
add eax [ esi + 0x3bad0 ]
adc edx [ esi + 0x3bad4 ]
add eax [ esi + 0x3bab8 ]
adc edx [ esi + 0x3babc ]
push edx
mov edx [ esi + 0x3bae8 ]
push eax
mov eax [ edi ]
push ecx
push edx
push edi
call eax
add esp 0x14
test eax eax
jne r-xdata
cmp [ esi + 0x3baf4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax 0xa
sub_40a1a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x5
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x3bb00 ]
jae r-xdata
mov [ eax ] 0x5
mov al [ esi + 0x3239c ]
mov cl al
add cl cl
add cl cl
add al cl
add al [ esi + 0x32398 ]
mov cl al
add cl cl
add cl cl
add cl cl
add cl al
add cl [ esi + 0x32394 ]
mov eax [ ebp + 0xc ]
mov [ eax ] cl
mov ecx 0xb
mov eax 0x5
pop esi
pop ebp
retn
mov edx 0x2
jmp r-xdata
mov esi 0x3
shl esi cl
cmp edx esi
jbe r-xdata
shl edx cl
mov edx 0x3
inc ecx
cmp ecx 0x1e
jle r-xdata
mov esi 0x2
shl esi cl
cmp edx esi
jbe r-xdata
jmp r-xdata
mov ecx edx
shr ecx 0x8
mov [ eax + 0x2 ] cl
mov ecx edx
mov [ eax + 0x1 ] dl
shr ecx 0x10
shr edx 0x18
mov [ eax + 0x3 ] cl
mov [ eax + 0x4 ] dl
xor eax eax
pop esi
pop ebp
retn
sub_40a240
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
mov [ eax + 0x3bb10 ] edx
mov edx [ ebp + 0x18 ]
mov [ eax + 0x3bb14 ] edx
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
lea ecx [ eax + 0x3bb0c ]
mov [ ebp - 0xc ] edx
mov [ ecx ] sub_406240
mov edx [ esi ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp + 0x1c ]
mov [ eax + 0x3bae0 ] edx
mov edx [ ebp + 0x28 ]
push edx
mov edx [ ebp + 0x24 ]
push edx
mov edx [ ebp + 0x20 ]
push edx
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
push eax
mov [ ebp - 0x10 ] sub_409f70
mov [ ebp - 0x4 ] 0x0
call sub_40a0e0
mov edx [ ebp - 0x8 ]
sub [ esi ] edx
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x7
sub_40a2c0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x2c ]
mov eax [ ebx ]
push esi
push 0x45228
push ebx
call eax
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
push esi
call sub_408fe0
mov ecx [ ebp + 0x18 ]
add esp 0x4
push edi
push ecx
push esi
call sub_406780
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov edx [ ebp + 0x30 ]
push edx
push ebx
push esi
call sub_4090e0
mov eax [ ebx + 0x4 ]
push esi
push ebx
call eax
add esp 0x14
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x1c ]
push edx
push eax
push esi
call sub_40a1a0
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
mov ecx [ ebp + 0x30 ]
mov edx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
push ecx
mov ecx [ ebp + 0x14 ]
push ebx
push edx
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
push esi
call sub_40a240
add esp 0x24
mov edi eax
sub_40a380
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x4
push esi
push r--data
call sub_40ef0f
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax ] 0x1030002
movzx ecx [ esi + 0x5 ]
and ecx 0x1f
mov edx 0x1
shl edx cl
pop esi
mov [ eax + 0x10 ] edx
xor eax eax
pop ebp
retn
mov eax 0x1
pop esi
pop ebp
retn
sub_40a3d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] 0x50495a4c
mov [ eax + 0x4 ] cl
mov edx [ edx + 0x10 ]
cmp edx ecx
je r-xdata
dec cl
and cl 0x1f
mov [ eax + 0x5 ] cl
xor eax eax
pop ebp
retn
push esi
lea esp [ esp ]
inc ecx
mov esi edx
shr esi cl
test esi esi
jne r-xdata
pop esi
sub_40a410
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
movzx eax [ esi ]
push edi
mov edi [ ebp + 0xc ]
mov [ edi ] al
mov ecx [ esi ]
shr ecx 0x8
mov [ edi + 0x1 ] cl
movzx edx [ esi + 0x2 ]
mov [ edi + 0x2 ] dl
movzx eax [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov cl [ esi + 0x8 ]
mov [ edi + 0x4 ] cl
mov edx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
shrd edx eax 0x8
mov [ edi + 0x5 ] dl
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
shrd ecx edx 0x10
mov [ edi + 0x6 ] cl
mov ecx [ esi + 0xc ]
shr eax 0x8
mov eax [ esi + 0x8 ]
shrd eax ecx 0x18
mov [ edi + 0x7 ] al
mov eax [ esi + 0x8 ]
shr edx 0x10
mov edx [ esi + 0xc ]
shr ecx 0x18
mov cl 0x20
call sub_40eef0
mov [ edi + 0x8 ] al
mov eax [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov cl 0x28
call sub_40eef0
mov [ edi + 0x9 ] al
movzx edx [ esi + 0xe ]
mov [ edi + 0xa ] dl
movzx eax [ esi + 0xf ]
mov [ edi + 0xb ] al
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_40a4a0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ecx ] edi
mov [ ecx + 0x8 ] edi
mov [ ecx + 0xc ] edi
movzx eax [ esi ]
add [ ecx ] eax
movzx edx [ esi + 0x1 ]
mov eax [ ecx ]
shl edx 0x8
add eax edx
mov [ ecx ] eax
movzx edx [ esi + 0x2 ]
shl edx 0x10
add eax edx
mov [ ecx ] eax
movzx edx [ esi + 0x3 ]
shl edx 0x18
add edx eax
mov [ ecx ] edx
movzx eax [ esi + 0x4 ]
cdq
add [ ecx + 0x8 ] eax
adc [ ecx + 0xc ] edx
movzx eax [ esi + 0x5 ]
cdq
shld edx eax 0x8
shl eax 0x8
add [ ecx + 0x8 ] eax
adc [ ecx + 0xc ] edx
movzx eax [ esi + 0x6 ]
cdq
shld edx eax 0x10
shl eax 0x10
add [ ecx + 0x8 ] eax
adc [ ecx + 0xc ] edx
movzx eax [ esi + 0x7 ]
cdq
shld edx eax 0x18
shl eax 0x18
add [ ecx + 0x8 ] eax
adc [ ecx + 0xc ] edx
movzx eax [ esi + 0x8 ]
add [ ecx + 0x8 ] edi
cdq
adc [ ecx + 0xc ] eax
movzx eax [ esi + 0x9 ]
cdq
shl eax 0x8
add [ ecx + 0x8 ] edi
adc [ ecx + 0xc ] eax
movzx eax [ esi + 0xa ]
cdq
shl eax 0x10
add [ ecx + 0x8 ] edi
adc [ ecx + 0xc ] eax
movzx eax [ esi + 0xb ]
cdq
shl eax 0x18
add [ ecx + 0x8 ] edi
pop edi
pop esi
adc [ ecx + 0xc ] eax
xor eax eax
pop ebp
retn
sub_40a5a0
xor edx edx
mov eax edx
and eax 0x1
dec eax
not eax
and eax 0xedb88320
mov ecx edx
shr ecx 0x1
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov eax ecx
and eax 0x1
dec eax
shr ecx 0x1
not eax
and eax 0xedb88320
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov eax ecx
and eax 0x1
dec eax
shr ecx 0x1
not eax
and eax 0xedb88320
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov eax ecx
and eax 0x1
dec eax
shr ecx 0x1
not eax
and eax 0xedb88320
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov [ edx * 4 + rw-data ] ecx
inc edx
cmp edx 0x100
jb r-xdata
retn
sub_40a650
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop ebp
retn 0x4
push esi
lea ecx [ ecx ]
movzx esi [ edx ]
xor esi eax
and esi 0xff
shr eax 0x8
xor eax [ esi * 4 + rw-data ]
inc edx
dec ecx
jne r-xdata
pop esi
sub_40a690
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x38 ]
mov eax [ edi + 0x10 ]
mov edx [ edi + 0x3c ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x40 ]
mov ebx [ edi + 0x34 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ edi + 0x44 ]
mov esi [ edi + 0x20 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x38 ] ecx
mov ecx [ edi + 0x8 ]
mov [ ebp - 0x28 ] edx
mov edx 0x1
shl edx cl
mov ecx [ edi + 0x4 ]
mov eax 0x1
shl eax cl
mov ecx [ edi + 0x14 ]
dec edx
mov [ ebp - 0x34 ] ecx
mov ecx [ edi + 0x24 ]
dec eax
mov [ ebp - 0x48 ] eax
mov eax [ edi ]
mov [ ebp - 0x40 ] eax
mov eax [ edi + 0x28 ]
mov [ ebp - 0x20 ] eax
mov eax [ edi + 0x2c ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ edi + 0x30 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x1c ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x24 ] 0x0
mov edx eax
shr edx 0xb
imul edx ecx
cmp esi edx
jae r-xdata
mov edx [ ebp - 0x4 ]
movzx edx [ edx ]
shl esi 0x8
shl eax 0x8
or esi edx
inc [ ebp - 0x4 ]
sub eax edx
sub esi edx
mov edx ecx
shr edx 0x5
sub ecx edx
mov edx [ ebp - 0x8 ]
mov [ edx ] cx
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + ebx * 2 + 0x180 ]
cmp eax 0x1000000
jae r-xdata
mov eax edx
mov edx 0x800
sub edx ecx
shr edx 0x5
add edx ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] dx
mov edx [ ebp - 0x1c ]
add edx 0xe6c
cmp [ ebp - 0x3c ] 0x0
mov [ ebp - 0x8 ] edx
jne r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
test ecx ecx
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
cmp [ ebp - 0x3c ] 0x0
mov [ ecx + ebx * 2 + 0x180 ] dx
jne r-xdata
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ecx + ebx * 2 + 0x180 ] di
add ebx 0xc
add ecx 0x664
jmp r-xdata
mov edx [ ebp - 0x34 ]
movzx edx [ ecx + edx - 0x1 ]
mov ebx [ ebp - 0xc ]
and ebx [ ebp - 0x48 ]
mov ecx 0x8
sub cl [ ebp - 0x40 ]
shr edx cl
mov ecx [ ebp - 0x40 ]
shl ebx cl
add edx ebx
mov ebx [ ebp - 0x10 ]
imul edx edx 0x600
add [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x20 ]
cmp ebx 0x7
jae r-xdata
movzx edx [ ecx + ebx * 2 + 0x198 ]
cmp eax 0x1000000
jae r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx edx [ ecx ]
mov [ ebp - 0x10 ] ebx
cmp eax 0x1000000
jae r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
cmp ecx edx
sbb ebx ebx
and ebx [ ebp - 0x20 ]
mov [ ebp - 0x30 ] 0x100
sub ebx edx
add ebx [ edi + 0x14 ]
movzx edi [ ebx + ecx ]
mov ecx 0x1
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov ecx 0x1
mov edi eax
shr edi 0xb
imul edi edx
mov [ ebp - 0x4c ] edi
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov ebx [ ebp - 0x30 ]
add edi edi
mov edx ebx
and edx edi
mov [ ebp - 0x4c ] edi
lea edi [ edx + ebx ]
mov ebx [ ebp - 0x8 ]
add edi ecx
lea edi [ ebx + edi * 2 ]
mov [ ebp - 0x44 ] edi
movzx edi [ edi ]
cmp eax 0x1000000
jae r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ecx + ebx * 2 + 0x198 ] dx
movzx edx [ ecx + ebx * 2 + 0x1b0 ]
cmp eax 0x1000000
jae r-xdata
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
lea edx [ ebx + 0xf ]
shl edx 0x4
add edx [ ebp - 0x30 ]
mov [ ecx + ebx * 2 + 0x198 ] di
lea edx [ ecx + edx * 2 ]
mov edi eax
mov [ ebp - 0x8 ] edx
movzx edx [ edx ]
cmp edi 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ecx ] dx
movzx edx [ ecx + 0x2 ]
cmp eax 0x1000000
jae r-xdata
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x30 ]
add edx edx
lea edx [ ecx + edx * 8 + 0x4 ]
mov [ ecx ] di
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x24 ] 0x8
jmp r-xdata
mov ebx eax
shr ebx 0xb
imul ebx edi
cmp esi ebx
jae r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl esi 0x8
shl eax 0x8
or esi ebx
inc [ ebp - 0x4 ]
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ebx + ecx * 2 ] dx
lea ecx [ ecx + ecx + 0x1 ]
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ebx + ecx * 2 ] di
add ecx ecx
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
shl edi 0x8
mov eax edi
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
or esi edi
inc [ ebp - 0x4 ]
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov edx 0x1
sub eax ebx
sub esi ebx
mov ebx edi
shr ebx 0x5
sub edi ebx
mov ebx [ ebp - 0x44 ]
mov [ ebx ] di
lea ecx [ ecx + ecx + 0x1 ]
mov eax ebx
mov ebx 0x800
sub ebx edi
shr ebx 0x5
add ebx edi
mov edi [ ebp - 0x44 ]
mov [ edi ] bx
add ecx ecx
not edx
jmp r-xdata
movzx edx [ ebx + ecx * 2 ]
cmp eax 0x1000000
jae r-xdata
jmp r-xdata
cmp ecx 0x100
jb r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ecx + ebx * 2 + 0x1b0 ] dx
movzx edx [ ecx + ebx * 2 + 0x1c8 ]
cmp eax 0x1000000
jae r-xdata
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x28 ]
mov [ ecx + ebx * 2 + 0x1b0 ] di
jmp r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov edi [ ebp - 0x8 ]
mov [ edi ] dx
jmp r-xdata
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0x8 ]
mov [ edx ] cx
mov ecx [ ebp - 0x18 ]
mov eax edi
mov edi [ ebp - 0x14 ]
cmp edi ecx
sbb edx edx
and edx [ ebp - 0x20 ]
inc [ ebp - 0xc ]
sub edx ecx
mov ecx [ ebp - 0x34 ]
add edx edi
mov dl [ edx + ecx ]
mov [ edi + ecx ] dl
inc edi
cmp ebx 0x7
sbb ecx ecx
and ecx 0xfffffffe
add ecx 0xb
mov [ ebp - 0x10 ] ecx
jmp r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ecx + 0x2 ] dx
add ecx 0x204
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x8 ] 0x10
mov [ ebp - 0x24 ] 0x100
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x30 ]
mov [ ecx + 0x2 ] di
add edx edx
lea ecx [ ecx + edx * 8 + 0x104 ]
mov [ ebp - 0x30 ] ecx
mov ecx 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi ecx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov edi [ ebp - 0x4c ]
mov edx [ ebp - 0x14 ]
mov edi [ ebp - 0x34 ]
mov [ edx + edi ] cl
mov ecx [ ebp - 0x10 ]
inc edx
inc [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
movzx edx [ ecx + r--data ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
and [ ebp - 0x30 ] edx
cmp ecx 0x100
jb r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x18 ] edx
cmp ebx 0x7
sbb ebx ebx
and ebx 0xfffffffd
add ebx 0xb
add ecx 0xa68
mov [ ebp - 0x14 ] edi
sub eax edi
sub esi edi
mov edi ecx
shr edi 0x5
sub ecx edi
mov edi [ ebp - 0x30 ]
mov [ edi + edx * 2 ] cx
lea edx [ edx + edx + 0x1 ]
mov eax edi
mov edi 0x800
sub edi ecx
shr edi 0x5
add edi ecx
mov ecx [ ebp - 0x30 ]
mov [ ecx + edx * 2 ] di
add edx edx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov edi [ ebp - 0x2c ]
mov [ ecx + ebx * 2 + 0x1c8 ] dx
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x38 ] edi
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x2c ]
mov [ ecx + ebx * 2 + 0x1c8 ] di
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp eax 0x1000000
jae r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x30 ]
movzx ecx [ ecx + edx * 2 ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx edi
add edx ecx
mov [ ebp - 0x24 ] edx
cmp ebx 0xc
jb r-xdata
mov edi [ ebp - 0x24 ]
cmp edx edi
jb r-xdata
mov edi [ ebp - 0x28 ]
mov [ ebp - 0x2c ] edi
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] eax
mov eax [ ebp - 0x14 ]
mov [ ecx + 0x18 ] edx
mov edx [ ebp - 0x24 ]
mov [ ecx + 0x24 ] eax
mov eax [ ebp - 0x18 ]
mov [ ecx + 0x48 ] edx
mov edx [ ebp - 0xc ]
mov [ ecx + 0x38 ] eax
mov eax [ ebp - 0x2c ]
mov [ ecx + 0x2c ] edx
mov edx [ ebp - 0x28 ]
mov [ ecx + 0x40 ] eax
mov eax [ ebp - 0x10 ]
pop edi
mov [ ecx + 0x20 ] esi
mov [ ecx + 0x3c ] edx
mov edx [ ebp - 0x38 ]
pop esi
mov [ ecx + 0x34 ] eax
mov [ ecx + 0x44 ] edx
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
movzx ecx [ edx ]
shl esi 0x8
shl eax 0x8
or esi ecx
inc edx
mov edx [ ebp - 0x50 ]
mov ebx [ ebp - 0x10 ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp - 0x14 ]
add edx 0x2
cmp ecx edi
je r-xdata
mov ecx edx
cmp edx 0x4
jb r-xdata
mov ecx [ ebp - 0xc ]
and ecx edx
mov edx ebx
shl edx 0x4
add edx ecx
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x1c ]
lea ecx [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] ecx
movzx ecx [ ecx ]
cmp eax 0x1000000
jae r-xdata
sub ecx edi
mov [ ebp - 0x14 ] ecx
cmp ecx edx
jb r-xdata
mov edx [ ebp - 0x1c ]
shl ecx 0x7
lea ecx [ ecx + edx + 0x360 ]
movzx edx [ ecx + 0x2 ]
cmp eax 0x1000000
jae r-xdata
mov ecx 0x3
cmp edi [ ebp - 0x18 ]
mov ebx [ ebp - 0x14 ]
sbb ecx ecx
and ecx [ ebp - 0x20 ]
add [ ebp - 0xc ] ebx
sub ecx [ ebp - 0x18 ]
sub edx ebx
add ecx edi
mov [ ebp - 0x24 ] edx
lea edx [ ecx + ebx ]
cmp edx [ ebp - 0x20 ]
mov edx [ ebp - 0x34 ]
ja r-xdata
mov [ ebp - 0x14 ] edx
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx ebx [ edi ]
shl esi 0x8
shl eax 0x8
or esi ebx
inc edi
mov [ ebp - 0x4 ] edi
mov bl [ ecx + edx ]
mov [ edi + edx ] bl
inc ecx
inc edi
cmp ecx [ ebp - 0x20 ]
jne r-xdata
add edx edi
add ebx edx
sub ecx edi
add edi [ ebp - 0x14 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x14 ] edi
nop
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ecx + 0x2 ] dx
mov edx 0x3
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ecx + 0x2 ] di
mov edx 0x2
jmp r-xdata
dec [ ebp - 0x14 ]
jne r-xdata
xor ecx ecx
mov bl [ ecx + edx ]
mov [ edx ] bl
inc edx
cmp edx [ ebp - 0x4c ]
jne r-xdata
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
lea ebx [ edx + edx ]
movzx edx [ ebx + ecx ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ebx + ecx ] dx
inc ebx
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ebx + ecx ] di
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
add ebx ebx
movzx edx [ ebx + ecx ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ebx + ecx ] dx
inc ebx
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ebx + ecx ] di
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
add ebx ebx
movzx edx [ ebx + ecx ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ebx + ecx ] dx
inc ebx
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ebx + ecx ] di
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
add ebx ebx
movzx edx [ ebx + ecx ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ebx + ecx ] dx
inc ebx
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ebx + ecx ] di
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
add ebx ebx
movzx edx [ ebx + ecx ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ebx + ecx ] dx
inc ebx
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ebx + ecx ] di
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x2c ] edx
lea edx [ ebx + 0x1 ]
mov [ ebp - 0x18 ] edx
test ecx ecx
jne r-xdata
mov ecx ebx
mov edx ebx
mov edi 0x1
shr ecx 0x1
and ebx edi
sub ecx edi
or ebx 0x2
mov [ ebp - 0x44 ] ecx
cmp edx 0xe
jae r-xdata
sub ebx 0x40
cmp ebx 0x4
jb r-xdata
cmp ebx ecx
cmp ebx [ ebp - 0xc ]
jmp r-xdata
sub ecx 0x4
lea esp [ esp ]
shl ebx cl
mov [ ebp - 0x38 ] edi
mov ecx ebx
sub ecx edx
mov edx [ ebp - 0x1c ]
lea ecx [ edx + ecx * 2 + 0x55e ]
mov [ ebp - 0x8 ] ecx
mov edi edi
cmp [ ebp - 0x10 ] 0x13
mov edx [ ebp - 0x24 ]
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0xa
mov [ ebp - 0x10 ] ecx
jae r-xdata
shr eax 0x1
sub esi eax
mov edx esi
shr edx 0x1f
neg edx
lea ebx [ edx + ebx * 2 + 0x1 ]
and edx eax
add esi edx
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx edi [ edx ]
shl esi 0x8
shl eax 0x8
or esi edi
inc edx
mov [ ebp - 0x4 ] edx
mov ecx eax
shr ecx 0xb
imul ecx edx
cmp esi ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
shl esi 0x8
shl eax 0x8
or esi ecx
inc [ ebp - 0x4 ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + 0x646 ]
shl ebx 0x4
cmp eax 0x1000000
jae r-xdata
sub eax ecx
sub esi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0x8 ]
or ebx [ ebp - 0x38 ]
mov [ ecx + edi * 2 ] dx
lea edi [ edi + edi + 0x1 ]
mov eax ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + edi * 2 ] dx
add edi edi
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
movzx edx [ ecx + edi * 2 ]
cmp eax 0x1000000
jae r-xdata
jmp r-xdata
shl [ ebp - 0x38 ] 0x1
dec [ ebp - 0x44 ]
jne r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ecx + 0x646 ] dx
mov edx 0x3
or ebx 0x1
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ecx + 0x646 ] di
mov edx 0x2
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
add edx edx
mov [ ebp - 0x30 ] edx
movzx edx [ edx + ecx + 0x644 ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov edi [ ebp - 0x30 ]
mov [ edi + ecx + 0x644 ] dx
lea edx [ edi + 0x1 ]
or ebx 0x2
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x30 ]
mov [ edx + ecx + 0x644 ] di
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
add edx edx
mov [ ebp - 0x30 ] edx
movzx edx [ edx + ecx + 0x644 ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov edi [ ebp - 0x30 ]
mov [ edi + ecx + 0x644 ] dx
lea edx [ edi + 0x1 ]
or ebx 0x4
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x30 ]
mov [ edx + ecx + 0x644 ] di
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov [ ebp - 0x30 ] edx
movzx edx [ ecx + edx * 2 + 0x644 ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov edi [ ebp - 0x30 ]
mov [ ecx + edi * 2 + 0x644 ] dx
or ebx 0x8
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x30 ]
mov [ ecx + edx * 2 + 0x644 ] di
jmp r-xdata
add [ ebp - 0x24 ] 0x112
sub [ ebp - 0x10 ] 0xc
cmp ebx 0xffffffff
je r-xdata
sub_40b260
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ esi + 0x48 ]
test ebx ebx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx 0x112
jae r-xdata
mov edx [ esi + 0x38 ]
mov ecx [ esi + 0x28 ]
mov eax [ esi + 0x24 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov ecx ebx
sub edx eax
push edi
mov edi [ esi + 0x14 ]
cmp edx ecx
jae r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov ecx edx
add [ esi + 0x2c ] ecx
sub ebx ecx
mov [ esi + 0x48 ] ebx
test ecx ecx
je r-xdata
mov edx [ esi + 0xc ]
sub edx [ esi + 0x2c ]
cmp edx ecx
ja r-xdata
mov [ esi + 0x24 ] eax
pop edi
cmp eax [ ebp - 0x4 ]
sbb edx edx
and edx [ ebp - 0x8 ]
sub edx [ ebp - 0x4 ]
add edx eax
mov dl [ edx + edi ]
mov [ eax + edi ] dl
inc eax
dec ecx
jne r-xdata
mov edx [ esi + 0xc ]
mov [ esi + 0x30 ] edx
sub_40b2e0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
push edx
push esi
call sub_40a690
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x24 ]
sub eax [ esi + 0x2c ]
mov ebx edi
sub ebx ecx
cmp ebx eax
jbe r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
cmp [ esi + 0x2c ] eax
jb r-xdata
lea edx [ ecx + eax ]
push edi
call sub_40b260
cmp [ esi + 0x24 ] edi
jae r-xdata
mov [ esi + 0x30 ] eax
mov eax 0x112
cmp [ esi + 0x18 ] ebx
jae r-xdata
xor eax eax
mov [ esi + 0x48 ] eax
mov eax 0x112
cmp [ esi + 0x48 ] eax
jb r-xdata
cmp [ esi + 0x30 ] 0x0
mov edx edi
jne r-xdata
jmp r-xdata
cmp [ esi + 0x48 ] eax
jbe r-xdata
sub_40b350
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov edx [ edi + 0x1c ]
mov esi [ edi + 0x20 ]
add ecx eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ edi + 0x34 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi + 0x8 ]
mov ebx 0x1
shl ebx cl
mov ecx [ ebp - 0xc ]
shl ecx 0x4
mov [ ebp - 0x8 ] eax
dec ebx
and ebx [ edi + 0x2c ]
add ecx ebx
movzx eax [ eax + ecx * 2 ]
mov [ ebp - 0x10 ] eax
cmp edx 0x1000000
jae r-xdata
mov eax edx
shr eax 0xb
imul eax [ ebp - 0x10 ]
cmp esi eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
sub edx eax
sub esi eax
mov eax [ ebp - 0x8 ]
movzx ecx [ eax + ecx * 2 + 0x180 ]
cmp edx 0x1000000
jae r-xdata
mov edx eax
mov eax [ ebp - 0x8 ]
add eax 0xe6c
cmp [ edi + 0x30 ] 0x0
mov [ ebp - 0xc ] eax
jne r-xdata
xor eax eax
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
mov eax edx
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov ecx [ edi + 0x24 ]
test ecx ecx
jne r-xdata
cmp [ edi + 0x2c ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
sub edx eax
sub esi eax
mov eax [ ebp - 0xc ]
movzx edi [ ecx + eax * 2 + 0x198 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] 0x3
cmp edx 0x1000000
jae r-xdata
mov edi [ ebp - 0x8 ]
mov edx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] 0x0
add edi 0x664
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
movzx edi [ eax ]
shl esi 0x8
shl edx 0x8
or esi edi
inc eax
mov [ ebp + 0x8 ] eax
mov ebx [ edi + 0x14 ]
movzx ebx [ ebx + ecx - 0x1 ]
mov eax [ edi ]
mov ecx 0x8
sub cl al
shr ebx cl
mov ecx [ edi + 0x4 ]
mov eax 0x1
shl eax cl
mov ecx [ edi ]
dec eax
and eax [ edi + 0x2c ]
shl eax cl
add ebx eax
imul ebx ebx 0x600
add [ ebp - 0xc ] ebx
mov ecx [ edi + 0x28 ]
cmp [ edi + 0x34 ] 0x7
jae r-xdata
mov ecx edx
shr ecx 0xb
imul ecx edi
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
cmp edx 0x1000000
jae r-xdata
mov ecx [ edi + 0x24 ]
mov ebx [ edi + 0x38 ]
cmp ecx ebx
jae r-xdata
mov ecx 0x1
jmp r-xdata
mov edi [ ebp - 0xc ]
sub edx ecx
sub esi ecx
mov ecx [ ebp - 0x8 ]
movzx edi [ ecx + edi * 2 + 0x1b0 ]
cmp edx 0x1000000
jae r-xdata
mov eax [ ebp - 0xc ]
mov edi [ ebp - 0x8 ]
add eax 0xf
shl eax 0x4
add eax ebx
movzx edi [ edi + eax * 2 ]
mov eax [ ebp + 0x8 ]
mov edx ecx
cmp ecx 0x1000000
jae r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
movzx eax [ edi ]
mov ecx edx
shr ecx 0xb
imul ecx eax
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
xor eax eax
mov eax [ edi + 0x28 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
movzx edi [ eax + ecx * 2 ]
cmp edx 0x1000000
jae r-xdata
mov ecx edx
shr ecx 0xb
imul ecx edi
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov ecx edx
shr ecx 0xb
imul ecx edi
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
sub edx ecx
sub esi ecx
cmp edx 0x1000000
jae r-xdata
add ebx ebx
mov edx ecx
lea ebx [ edi + ebx * 8 + 0x4 ]
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x8
jmp r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
mov ecx edx
shr ecx 0xb
imul ecx [ ebp - 0x10 ]
cmp esi ecx
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp - 0x4 ]
jae r-xdata
mov edi [ edi + 0x14 ]
sub edi ebx
add edi ecx
movzx ecx [ edi + eax ]
mov [ ebp - 0x8 ] 0x100
mov edi 0x1
mov edi edi
mov eax edx
shr eax 0xb
imul eax edi
cmp esi eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov edi [ ebp - 0xc ]
sub edx ecx
sub esi ecx
mov ecx [ ebp - 0x8 ]
movzx edi [ ecx + edi * 2 + 0x1c8 ]
cmp edx 0x1000000
jae r-xdata
mov edx ecx
jmp r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
sub edx ecx
sub esi ecx
cmp ecx 0x1000000
jae r-xdata
shl ecx 0x8
mov edx ecx
movzx ecx [ eax ]
shl esi 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
movzx eax [ edi + 0x2 ]
mov ecx edx
shr ecx 0xb
imul ecx eax
cmp esi ecx
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov edi 0x1
sub edx ecx
sub esi ecx
lea edi [ edi + edi + 0x1 ]
mov edx ecx
add edi edi
not eax
jmp r-xdata
movzx ebx [ ecx ]
shl esi 0x8
shl edx 0x8
or esi ebx
inc ecx
mov [ ebp + 0x8 ] ecx
sub edx eax
sub esi eax
lea ecx [ ecx + ecx + 0x1 ]
mov edx eax
add ecx ecx
jmp r-xdata
movzx ebx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ebx
inc eax
mov [ ebp + 0x8 ] eax
mov ecx edx
shr ecx 0xb
imul ecx edi
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0xc ] 0xc
add edi 0xa68
pop edi
pop esi
mov eax 0x3
pop ebx
mov esp ebp
pop ebp
retn
cmp eax [ ebp - 0x4 ]
jae r-xdata
sub edx ecx
sub esi ecx
lea ebx [ edi + 0x204 ]
mov [ ebp - 0x14 ] 0x10
mov [ ebp - 0x10 ] 0x100
mov eax 0x8
add ebx ebx
mov edx ecx
lea ebx [ edi + ebx * 8 + 0x104 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
movzx eax [ ebx + edi * 2 ]
mov ecx edx
shr ecx 0xb
imul ecx eax
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
and [ ebp - 0x8 ] eax
cmp edi 0x100
jae r-xdata
cmp ecx 0x100
jb r-xdata
mov edx ecx
jmp r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
sub edx ecx
sub esi ecx
lea edi [ edi + edi + 0x1 ]
mov edx ecx
add edi edi
jmp r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
cmp edx 0x1000000
jae r-xdata
mov ebx [ ebp - 0x8 ]
add ecx ecx
mov eax ebx
and eax ecx
mov [ ebp - 0x18 ] ecx
lea ecx [ eax + edi ]
add ecx ebx
mov ebx [ ebp - 0xc ]
movzx ecx [ ebx + ecx * 2 ]
mov [ ebp - 0x10 ] ecx
cmp edx 0x1000000
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp edx 0x1000000
jae r-xdata
mov eax [ ebp - 0x14 ]
sub eax ecx
add edi eax
cmp [ ebp - 0xc ] 0x4
jae r-xdata
mov ecx [ ebp - 0x10 ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp [ ebp + 0x8 ] edx
jb r-xdata
mov eax [ ebp - 0x18 ]
cmp edi 0x4
jb r-xdata
mov eax [ ebp - 0x8 ]
shl edi 0x7
lea ebx [ edi + eax + 0x360 ]
mov eax [ ebp + 0x8 ]
mov edi 0x1
mov edi 0x3
mov ecx edx
shr ecx 0xb
imul ecx [ ebp - 0x10 ]
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
sub edx ecx
sub esi ecx
lea edi [ edi + edi + 0x1 ]
mov edx ecx
add edi edi
jmp r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
movzx ecx [ ebx + edi * 2 ]
mov [ ebp - 0x10 ] ecx
cmp edx 0x1000000
jae r-xdata
sub edi 0x40
mov [ ebp + 0x8 ] eax
cmp edi 0x4
jb r-xdata
cmp edi 0x40
jb r-xdata
mov ebx edi
shr ebx 0x1
dec ebx
mov [ ebp - 0x14 ] ebx
cmp edi 0xe
jae r-xdata
mov ecx [ ebp - 0x4 ]
sub ebx 0x4
mov eax edi
and eax 0x1
or eax 0x2
mov ecx ebx
shl eax cl
mov ecx [ ebp - 0x8 ]
sub eax edi
lea eax [ ecx + eax * 2 + 0x55e ]
mov [ ebp - 0xc ] eax
jmp r-xdata
shr edx 0x1
mov edi esi
sub edi edx
shr edi 0x1f
dec edi
and edi edx
sub esi edi
dec ebx
jne r-xdata
cmp eax ecx
jae r-xdata
mov eax 0x1
mov edi edi
cmp edx 0x1000000
jae r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x644
mov ebx 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x14 ] ebx
movzx edi [ eax ]
shl esi 0x8
shl edx 0x8
or esi edi
inc eax
mov edi edx
shr edi 0xb
imul edi ecx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
cmp [ ebp + 0x8 ] edi
jae r-xdata
sub edx edi
sub esi edi
lea eax [ eax + eax + 0x1 ]
mov edx edi
add eax eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
movzx ebx [ edi ]
shl esi 0x8
or esi ebx
mov ebx [ ebp - 0x14 ]
shl edx 0x8
inc edi
mov [ ebp + 0x8 ] edi
mov ecx [ ebp - 0xc ]
movzx ecx [ ecx + eax * 2 ]
cmp edx 0x1000000
jae r-xdata
dec ebx
mov [ ebp - 0x14 ] ebx
jne r-xdata
sub_40b930
movzx edx [ eax + 0x1 ]
push esi
movzx esi [ eax + 0x2 ]
shl edx 0x8
or edx esi
movzx esi [ eax + 0x3 ]
movzx eax [ eax + 0x4 ]
shl edx 0x8
or edx esi
shl edx 0x8
or edx eax
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x1c ] 0xffffffff
mov [ ecx + 0x4c ] 0x0
pop esi
retn
sub_40b970
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx 0x1
mov [ eax + 0x4c ] edx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x58 ] ecx
cmp [ ebp + 0xc ] ecx
je r-xdata
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x50 ] edx
pop ebp
retn
mov [ eax + 0x50 ] edx
sub_40b9a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx 0x1
mov [ eax + 0x24 ] ecx
mov [ eax + 0x4c ] edx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x58 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x50 ] edx
pop ebp
retn
sub_40b9d0
mov ecx [ edx + 0x4 ]
add ecx [ edx ]
mov eax 0x300
shl eax cl
push edi
mov edi [ edx + 0x10 ]
add eax 0x736
je r-xdata
mov eax 0x1
mov [ edx + 0x44 ] eax
mov [ edx + 0x40 ] eax
mov [ edx + 0x3c ] eax
mov [ edx + 0x38 ] eax
xor eax eax
mov [ edx + 0x34 ] eax
mov [ edx + 0x50 ] eax
pop edi
retn
mov ecx eax
push esi
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
pop esi
sub_40ba20
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebx ]
push eax
mov [ ebp - 0x4 ] edi
mov [ ebx ] 0x0
call sub_40b260
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x0
cmp [ esi + 0x48 ] 0x112
jne r-xdata
xor ecx ecx
cmp [ esi + 0x4c ] ecx
je r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
cmp [ esi + 0x24 ] edx
jb r-xdata
cmp edi ecx
jbe r-xdata
xor eax eax
cmp [ esi + 0x20 ] eax
pop edi
pop esi
setne al
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x1
cmp [ esi + 0x50 ] ecx
je r-xdata
mov eax [ esi + 0x48 ]
cmp eax ecx
jne r-xdata
cmp [ esi + 0x58 ] 0x5
jb r-xdata
mov ecx [ esi + 0x58 ]
cmp ecx 0x5
jae r-xdata
mov eax [ esi + 0x58 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
mov edx [ esi + 0x10 ]
mov eax 0x300
shl eax cl
add eax 0x736
je r-xdata
cmp [ ebp + 0x18 ] ecx
je r-xdata
cmp [ esi + 0x20 ] ecx
je r-xdata
mov edx [ ebp + 0x1c ]
pop edi
pop esi
mov [ edx ] 0x3
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x5c ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x10 ]
mov dl [ eax ]
mov [ ecx + esi + 0x5c ] dl
inc [ esi + 0x58 ]
inc [ ebx ]
inc eax
dec edi
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ebx eax
xor edi edi
mov [ ebp - 0x8 ] edi
cmp ebx 0x14
jae r-xdata
cmp edi 0x14
jb r-xdata
mov eax 0x1
mov [ esi + 0x44 ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x38 ] eax
xor eax eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x50 ] eax
mov ebx [ ebp + 0x14 ]
mov ecx eax
mov eax 0x400
mov edi edx
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0x1c ]
pop edi
pop esi
mov [ ecx ] 0x2
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp eax ecx
jne r-xdata
mov eax [ ebp + 0x1c ]
pop edi
pop esi
mov [ eax ] 0x4
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
movzx eax [ esi + 0x5d ]
movzx ecx [ esi + 0x5e ]
movzx edx [ esi + 0x5f ]
shl eax 0x8
or eax ecx
movzx ecx [ esi + 0x60 ]
shl eax 0x8
or eax edx
shl eax 0x8
or eax ecx
xor ecx ecx
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x4c ] ecx
mov [ esi + 0x58 ] ecx
mov [ esi + 0x58 ] ebx
cmp ebx 0x14
jb r-xdata
mov edi edi
mov eax [ ebp + 0x10 ]
push eax
mov eax edi
mov ecx esi
call sub_40b350
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x2
mov [ ebp + 0x8 ] 0x1
lea eax [ esi + 0x5c ]
push eax
mov eax ebx
mov ecx esi
call sub_40b350
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] edi
mov ecx [ ebp + 0x10 ]
mov dl [ edi + ecx ]
mov [ esi + ebx + 0x5c ] dl
inc ebx
inc edi
cmp ebx 0x14
jb r-xdata
mov ecx [ ebp + 0x10 ]
push edi
lea eax [ esi + 0x5c ]
push ecx
push eax
call sub_40e480
add esp 0xc
mov [ esi + 0x58 ] edi
add [ ebx ] edi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ebx [ ebp + 0x10 ]
lea eax [ edi + ebx - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
add [ eax ] edi
mov ecx [ ebp + 0x1c ]
pop edi
pop esi
mov [ ecx ] 0x3
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
lea eax [ esi + 0x5c ]
mov [ esi + 0x18 ] eax
push eax
mov eax esi
call sub_40b2e0
test eax eax
jne r-xdata
cmp edi [ ebp - 0x4 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov ebx eax
cmp eax 0x2
jne r-xdata
mov edi [ ebp + 0xc ]
push eax
mov eax esi
mov [ esi + 0x18 ] ebx
call sub_40b2e0
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp - 0x8 ]
sub eax ebx
sub eax esi
lea eax [ ecx + eax - 0x5c ]
mov ecx [ ebp + 0x14 ]
add [ ecx ] eax
add [ ebp + 0x10 ] eax
mov [ esi + 0x58 ] 0x0
mov eax [ esi + 0x18 ]
mov ecx [ ebp + 0x14 ]
sub eax ebx
add [ ecx ] eax
add ebx eax
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x1c ]
pop edi
pop esi
mov [ eax ] 0x2
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
mov edi [ ebp - 0x4 ]
jmp r-xdata
sub [ ebp - 0x4 ] eax
cmp [ esi + 0x48 ] 0x112
jne r-xdata
sub_40bd10
push ebp
mov ebp esp
sub esp 0x24
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] edx
xor edx edx
push edi
mov edi [ eax ]
mov [ eax ] edx
mov [ ebp - 0x14 ] edi
mov [ ecx ] edx
mov eax [ esi + 0x24 ]
mov ebx ecx
sub ebx eax
mov [ ebp - 0x24 ] eax
cmp edi ebx
jbe r-xdata
mov [ esi + 0x24 ] edx
add eax edi
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x20 ] edx
jmp r-xdata
xor edx edx
cmp [ esi + 0x4c ] edx
je r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ebp + 0x14 ]
mov edi [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] edx
call sub_40b260
mov ecx [ ebp + 0x20 ]
mov [ ecx ] 0x0
cmp [ esi + 0x48 ] 0x112
jne r-xdata
mov eax [ esi + 0x24 ]
mov [ ebp - 0xc ] edx
cmp eax [ ebp - 0x10 ]
jb r-xdata
cmp edi edx
jbe r-xdata
xor edx edx
cmp [ esi + 0x20 ] edx
setne dl
mov edi edx
mov [ ecx ] 0x1
cmp [ esi + 0x50 ] edx
je r-xdata
mov eax [ esi + 0x48 ]
cmp eax edx
jne r-xdata
cmp [ esi + 0x58 ] 0x5
jb r-xdata
mov eax [ esi + 0x58 ]
cmp eax 0x5
jae r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov eax [ esi + 0x58 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
mov edx [ esi + 0x10 ]
mov eax 0x300
shl eax cl
add eax 0x736
je r-xdata
cmp [ ebp - 0x20 ] edx
je r-xdata
cmp [ esi + 0x20 ] edx
je r-xdata
mov [ ecx ] 0x3
xor edi edi
jmp r-xdata
cmp [ esi + 0x5c ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] edi
mov dl [ ebx ]
mov [ eax + esi + 0x5c ] dl
mov eax 0x1
add [ esi + 0x58 ] eax
add [ ebp + 0x8 ] eax
add ebx eax
sub edi eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x14 ] edi
je r-xdata
mov ebx eax
xor edi edi
mov [ ebp - 0x18 ] edi
cmp ebx 0x14
jae r-xdata
cmp edi 0x14
jb r-xdata
mov eax 0x1
mov [ esi + 0x44 ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x38 ] eax
xor eax eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x50 ] eax
mov ebx [ ebp - 0x4 ]
mov ecx eax
mov eax 0x400
mov edi edx
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
mov edi [ ebp - 0x8 ]
mov [ ecx ] 0x2
xor edi edi
jmp r-xdata
cmp eax edx
jne r-xdata
mov [ ecx ] 0x4
xor edi edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
add [ ecx ] eax
add [ ebp + 0x14 ] eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
mov ebx [ esi + 0x24 ]
mov ecx [ esi + 0x14 ]
mov edx [ ebp + 0xc ]
sub ebx eax
push ebx
add ecx eax
push ecx
push edx
call sub_40e480
mov eax [ ebp + 0x10 ]
add [ ebp + 0xc ] ebx
sub [ ebp - 0x14 ] ebx
add [ eax ] ebx
add esp 0xc
test edi edi
jne r-xdata
mov edi 0x1
jmp r-xdata
movzx eax [ esi + 0x5d ]
movzx edx [ esi + 0x5e ]
shl eax 0x8
or eax edx
movzx edx [ esi + 0x5f ]
shl eax 0x8
or eax edx
movzx edx [ esi + 0x60 ]
shl eax 0x8
or eax edx
xor edx edx
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x4c ] edx
mov [ esi + 0x58 ] edx
mov edi [ ebp - 0x14 ]
xor edx edx
jmp r-xdata
mov [ esi + 0x58 ] ebx
cmp ebx 0x14
jb r-xdata
lea ebx [ ebx ]
push ebx
mov eax edi
mov ecx esi
call sub_40b350
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0xc ] eax
jne r-xdata
mov [ ecx ] 0x2
mov [ ebp - 0xc ] 0x1
mov ecx [ esi + 0x28 ]
cmp [ esi + 0x24 ] ecx
jne r-xdata
lea eax [ esi + 0x5c ]
push eax
mov eax ebx
mov ecx esi
call sub_40b350
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x18 ] edi
mov eax [ ebp - 0x4 ]
mov cl [ edi + eax ]
mov [ esi + ebx + 0x5c ] cl
inc ebx
inc edi
cmp ebx 0x14
jb r-xdata
push edi
lea eax [ esi + 0x5c ]
push ebx
push eax
call sub_40e480
mov ecx [ ebp + 0x20 ]
add esp 0xc
add [ ebp + 0x8 ] edi
mov [ esi + 0x58 ] edi
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea edi [ edi + ebx - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x20 ]
add [ ebp + 0x8 ] edi
mov [ eax ] 0x3
xor edi edi
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ esi + 0x5c ]
mov [ esi + 0x18 ] eax
push eax
mov eax esi
call sub_40b2e0
test eax eax
jne r-xdata
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov edi ebx
cmp eax 0x2
jne r-xdata
push edi
mov edi [ ebp - 0x10 ]
mov eax esi
mov [ esi + 0x18 ] ebx
call sub_40b2e0
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
mov edi 0x1
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x18 ]
sub edx ebx
sub edx esi
lea eax [ eax + edx - 0x5c ]
add [ ebp - 0x4 ] eax
mov [ esi + 0x58 ] 0x0
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
sub eax ecx
add ecx eax
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp + 0x20 ]
mov [ edx ] 0x2
mov ecx [ ebp + 0x20 ]
mov ebx [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
sub [ ebp - 0x8 ] eax
cmp [ esi + 0x48 ] 0x112
mov ecx [ ebp + 0x20 ]
jne r-xdata
sub_40c090
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push eax
call ecx
add esp 0x8
mov [ esi + 0x10 ] 0x0
pop esi
pop ebp
retn
sub_40c0e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
push eax
push esi
call ecx
mov edx [ edi + 0x14 ]
push edx
mov [ edi + 0x10 ] 0x0
mov eax [ esi + 0x4 ]
push esi
call eax
add esp 0x10
mov [ edi + 0x14 ] 0x0
pop edi
pop esi
pop ebp
retn
sub_40c120
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x5
jae r-xdata
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x4 ]
movzx ecx [ edx + 0x3 ]
shl eax 0x8
or eax ecx
movzx ecx [ edx + 0x2 ]
shl eax 0x8
or eax ecx
movzx ecx [ edx + 0x1 ]
shl eax 0x8
or eax ecx
cmp eax 0x1000
jae r-xdata
mov eax 0x4
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
mov al [ edx ]
cmp al 0xe1
jae r-xdata
mov eax 0x1000
movzx eax al
cdq
push esi
mov esi 0x9
idiv esi
mov esi 0x5
movzx eax al
mov [ ecx ] edx
cdq
idiv esi
pop esi
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x4 ] edx
xor eax eax
pop ebp
retn
sub_40c190
mov ecx [ eax + 0x4 ]
add ecx [ eax ]
mov eax [ edi + 0x10 ]
push esi
mov esi 0x300
shl esi cl
add esi 0x736
test eax eax
je r-xdata
push eax
mov eax [ ebx + 0x4 ]
push ebx
call eax
lea ecx [ esi + esi ]
push ecx
mov [ edi + 0x10 ] 0x0
mov edx [ ebx ]
push ebx
call edx
add esp 0x10
mov [ edi + 0x10 ] eax
mov [ edi + 0x54 ] esi
test eax eax
jne r-xdata
cmp esi [ edi + 0x54 ]
je r-xdata
xor eax eax
pop esi
retn
mov eax 0x2
pop esi
retn
sub_40c1e0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
sub esp 0x10
push eax
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_40c120
add esp 0xc
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0xc ]
push esi
mov esi 0x300
shl esi cl
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
add esi 0x736
test eax eax
je r-xdata
push ebx
mov ebx [ ebp + 0x14 ]
mov edx [ ebx + 0x4 ]
push eax
push ebx
call edx
lea eax [ esi + esi ]
push eax
mov [ edi + 0x10 ] 0x0
mov ecx [ ebx ]
push ebx
call ecx
add esp 0x10
mov [ edi + 0x10 ] eax
mov [ edi + 0x54 ] esi
pop ebx
test eax eax
jne r-xdata
cmp esi [ edi + 0x54 ]
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ edi ] edx
mov edx [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
pop edi
xor eax eax
pop esi
pop edi
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn
sub_40c280
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
sub esp 0x10
push eax
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_40c120
add esp 0xc
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0xc ]
push ebx
mov ebx 0x300
shl ebx cl
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
add ebx 0x736
push edi
mov edi [ ebp + 0x14 ]
test eax eax
je r-xdata
mov edx [ edi + 0x4 ]
push eax
push edi
call edx
lea eax [ ebx + ebx ]
push eax
mov [ esi + 0x10 ] 0x0
mov ecx [ edi ]
push edi
call ecx
add esp 0x10
mov [ esi + 0x10 ] eax
mov [ esi + 0x54 ] ebx
test eax eax
je r-xdata
cmp ebx [ esi + 0x54 ]
je r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov ebx [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ edi + 0x4 ]
push eax
push edi
call edx
mov [ esi + 0x14 ] 0x0
mov eax [ edi ]
push ebx
push edi
call eax
add esp 0x10
mov [ esi + 0x14 ] eax
test eax eax
jne r-xdata
cmp ebx [ esi + 0x28 ]
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] edx
pop edi
mov [ esi + 0x28 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor eax eax
pop ebx
mov ecx [ esi + 0x10 ]
mov edx [ edi + 0x4 ]
push ecx
push edi
call edx
add esp 0x8
mov [ esi + 0x10 ] 0x0
sub_40c360
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x24 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ eax ]
push edi
mov edi [ esi ]
mov [ ebp - 0x88 ] edx
xor edx edx
mov [ ebp - 0x78 ] ecx
mov ecx [ ebp + 0x28 ]
mov [ eax ] edx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x80 ] ecx
mov [ esi ] edx
cmp edi 0x5
jae r-xdata
mov eax [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x18 ]
push eax
mov [ ebp - 0x60 ] edx
mov [ ebp - 0x64 ] edx
push ecx
lea edx [ ebp - 0x74 ]
push edx
call sub_40c1e0
xor ecx ecx
add esp 0x10
cmp eax ecx
jne r-xdata
pop edi
pop esi
lea eax [ edx + 0x6 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x84 ]
mov edx [ ebp - 0x78 ]
mov [ esi ] edi
mov edi [ ebp - 0x88 ]
push edi
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov ecx [ ebp + 0x20 ]
push ecx
mov [ ebp - 0x60 ] eax
push esi
mov eax 0x1
push edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x74 ]
push ebx
push eax
mov [ ebp - 0x4c ] ebx
call sub_40ba20
mov esi eax
add esp 0x18
test esi esi
jne r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x7c ]
push eax
mov eax [ ebp - 0x80 ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
push eax
call ecx
add esp 0x8
mov eax esi
cmp [ edi ] 0x3
jne r-xdata
lea esi [ eax + 0x6 ]
sub_40c480
push ebp
mov ebp esp
push edi
mov edi [ esi + 0x44 ]
add edi [ esi + 0x40 ]
add edi [ ebp + 0x8 ]
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov [ esi + 0x3c ] edi
mov eax 0x1
pop edi
pop ebp
retn
push eax
mov eax [ ebx + 0x4 ]
push ebx
call eax
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x3c ] edi
mov ecx [ ebx ]
push edi
push ebx
call ecx
add esp 0x10
mov [ esi + 0x30 ] eax
cmp [ esi + 0x3c ] edi
je r-xdata
xor eax eax
cmp [ esi + 0x30 ] eax
pop edi
setne al
pop ebp
retn
sub_40c530
push ebp
mov ebp esp
push ecx
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ esi + 0x68 ] 0x0
jne r-xdata
mov eax [ esi ]
sub eax [ esi + 0x4 ]
mov ecx [ esi + 0x30 ]
add eax [ esi + 0xc ]
sub ecx eax
add ecx [ esi + 0x3c ]
mov [ ebp - 0x4 ] ecx
je r-xdata
mov ecx [ esi + 0x34 ]
lea edx [ ebp - 0x4 ]
push edx
push eax
mov eax [ ecx ]
push ecx
call eax
add esp 0xc
mov [ esi + 0x68 ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x38 ] 0x1
add [ esi + 0xc ] eax
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
cmp eax [ esi + 0x44 ]
ja r-xdata
mov eax [ esi ]
sub eax [ esi + 0x4 ]
mov ecx [ esi + 0x30 ]
add eax [ esi + 0xc ]
sub ecx eax
add ecx [ esi + 0x3c ]
mov [ ebp - 0x4 ] ecx
jne r-xdata
mov esp ebp
pop ebp
retn
sub_40c5b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x40 ]
sub ecx [ esi + 0x4 ]
mov edx [ esi ]
add ecx eax
push ecx
sub edx eax
mov eax [ esi + 0x30 ]
push edx
push eax
call sub_40dda0
mov ecx [ esi + 0x30 ]
add esp 0xc
add ecx [ esi + 0x40 ]
mov [ esi ] ecx
pop esi
pop ebp
retn
sub_40c600
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x38 ] 0x0
jne r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
cmp [ esi + 0x44 ] eax
jb r-xdata
call sub_40c530
sub_40c620
push esi
mov esi eax
mov eax [ esi ]
mov ecx [ esi + 0x3c ]
mov edx [ esi + 0x30 ]
sub ecx eax
add ecx edx
cmp ecx [ esi + 0x44 ]
ja r-xdata
call sub_40c530
pop esi
retn
mov ecx [ esi + 0x40 ]
push edi
mov edi [ esi + 0xc ]
sub edi [ esi + 0x4 ]
sub eax ecx
add edi ecx
push edi
push eax
push edx
call sub_40dda0
mov edx [ esi + 0x40 ]
add esp 0xc
add edx [ esi + 0x30 ]
pop edi
mov [ esi ] edx
sub_40c680
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov [ eax + 0x30 ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x2c ] 0x20
mov [ eax + 0x50 ] 0x1
mov [ eax + 0x48 ] 0x4
mov [ eax + 0x4c ] edx
mov [ eax + 0x54 ] edx
lea esi [ eax + 0x6c ]
lea ecx [ ecx ]
mov eax edx
and eax 0x1
dec eax
not eax
and eax 0xedb88320
mov ecx edx
shr ecx 0x1
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov eax ecx
and eax 0x1
dec eax
shr ecx 0x1
not eax
and eax 0xedb88320
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov eax ecx
and eax 0x1
dec eax
shr ecx 0x1
not eax
and eax 0xedb88320
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov eax ecx
and eax 0x1
dec eax
shr ecx 0x1
not eax
and eax 0xedb88320
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov [ esi ] ecx
inc edx
add esi 0x4
cmp edx 0x100
jb r-xdata
pop esi
pop ebp
retn
sub_40c780
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x20 ]
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi + 0x4 ]
push eax
push edi
call ecx
add esp 0x8
cmp [ esi + 0x4c ] 0x0
mov [ esi + 0x20 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ esi + 0x30 ]
mov eax [ edi + 0x4 ]
push edx
push edi
call eax
add esp 0x8
mov [ esi + 0x30 ] 0x0
sub_40c7c0
push esi
lea eax [ ecx * 4 ]
mov esi eax
shr esi 0x2
cmp esi ecx
pop esi
je r-xdata
push eax
mov eax [ edx ]
push edx
call eax
add esp 0x8
retn
xor eax eax
retn
sub_40c7e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cmp eax 0xc0000000
jbe r-xdata
mov edx eax
shr edx 0x1
cmp eax 0x80000000
jbe r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x20 ]
mov edi [ ebp + 0x1c ]
mov ecx [ edi + 0x4 ]
push eax
push edi
call ecx
xor ebx ebx
add esp 0x8
mov [ esi + 0x20 ] ebx
cmp [ esi + 0x4c ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
lea eax [ eax + edi + 0x1 ]
add edi ebx
add edi [ ebp + 0x18 ]
add ecx ebx
mov ebx [ ebp + 0x1c ]
shr edi 0x1
add edi ecx
add edi eax
cmp [ esi + 0x4c ] 0x0
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] ecx
lea edi [ edi + edx + 0x80000 ]
je r-xdata
mov edx eax
shr edx 0x2
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov edx [ esi + 0x30 ]
mov eax [ edi + 0x4 ]
push edx
push edi
call eax
add esp 0x8
pop edi
mov [ esi + 0x30 ] ebx
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov [ esi + 0x3c ] edi
jmp r-xdata
mov edx [ ebx + 0x4 ]
push eax
push ebx
call edx
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x3c ] edi
mov eax [ ebx ]
push edi
push ebx
call eax
add esp 0x10
mov [ esi + 0x30 ] eax
cmp [ esi + 0x3c ] edi
je r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ esi + 0x1c ] edx
mov edx [ esi + 0x48 ]
lea edi [ ecx + 0x1 ]
mov [ esi + 0x5c ] 0x0
cmp edx 0x2
jne r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ ebx + 0x4 ]
push eax
push ebx
call ecx
xor edi edi
add esp 0x8
mov [ esi + 0x20 ] edi
cmp [ esi + 0x4c ] edi
jne r-xdata
xor eax eax
cmp [ esi + 0x30 ] eax
setne al
test eax eax
je r-xdata
dec ecx
mov eax ecx
shr eax 0x1
or ecx eax
mov eax ecx
shr eax 0x2
or ecx eax
mov eax ecx
shr eax 0x4
or ecx eax
mov eax ecx
or eax 0x1fffe00
shr eax 0x8
or eax ecx
shr eax 0x1
cmp eax 0x1000000
jbe r-xdata
mov eax 0xffff
jmp r-xdata
mov edx [ esi + 0x30 ]
mov eax [ ebx + 0x4 ]
push edx
push ebx
call eax
mov [ esi + 0x30 ] edi
add esp 0x8
mov [ esi + 0x28 ] eax
inc eax
cmp edx 0x2
jbe r-xdata
cmp edx 0x3
jne r-xdata
cmp edx 0x3
jbe r-xdata
mov [ esi + 0x5c ] 0x400
shr eax 0x1
mov eax 0xffffff
jmp r-xdata
cmp edx 0x4
jbe r-xdata
add [ esi + 0x5c ] 0x10000
mov ecx [ esi + 0x64 ]
mov edx [ ebp + 0xc ]
add eax [ esi + 0x5c ]
add ecx [ esi + 0x60 ]
cmp [ esi + 0x50 ] 0x0
mov [ esi + 0x58 ] edx
mov [ esi + 0x60 ] eax
mov [ esi + 0x18 ] edi
lea edx [ edi + edi ]
jne r-xdata
add [ esi + 0x5c ] 0x100000
lea edi [ eax + edx ]
mov eax [ esi + 0x20 ]
mov [ esi + 0x64 ] edx
test eax eax
je r-xdata
mov edx edi
push eax
mov eax [ ebx + 0x4 ]
push ebx
call eax
lea eax [ edi * 4 ]
mov ecx eax
shr ecx 0x2
add esp 0x8
mov [ esi + 0x20 ] 0x0
cmp ecx edi
je r-xdata
cmp ecx edi
je r-xdata
mov edx [ ebx ]
push eax
push ebx
call edx
add esp 0x8
xor eax eax
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
mov ecx [ esi + 0x60 ]
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x24 ] edx
mov [ esi + 0x20 ] eax
test eax eax
je r-xdata
sub_40c9e0
mov edx [ eax + 0x18 ]
sub edx [ eax + 0x14 ]
push ebx
mov ebx [ eax + 0x4 ]
or ecx 0xffffffff
sub ecx ebx
push esi
cmp edx ecx
jae r-xdata
mov esi [ eax + 0xc ]
sub esi ebx
push edi
mov edi [ eax + 0x44 ]
mov edx esi
cmp edx edi
ja r-xdata
mov ecx edx
sub edx edi
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp esi edx
jbe r-xdata
mov ecx edx
pop edi
cmp edx ecx
jae r-xdata
mov edx 0x1
jmp r-xdata
add ebx ecx
mov [ eax + 0x10 ] esi
pop esi
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov esi edx
sub_40ca30
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
cmp [ esi + 0x60 ] ecx
jbe r-xdata
mov eax [ esi + 0x30 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
mov [ esi + 0x14 ] ecx
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x68 ] ecx
mov [ esi + 0x38 ] ecx
call sub_40c530
mov eax [ esi + 0x18 ]
mov ebx [ esi + 0x4 ]
sub eax [ esi + 0x14 ]
or ecx 0xffffffff
sub ecx ebx
cmp eax ecx
jae r-xdata
mov edx [ esi + 0x20 ]
mov [ edx + eax * 4 ] ecx
inc eax
cmp eax [ esi + 0x60 ]
jb r-xdata
mov edx [ esi + 0xc ]
sub edx ebx
push edi
mov edi [ esi + 0x44 ]
mov eax edx
cmp eax edi
ja r-xdata
mov ecx eax
sub eax edi
test eax eax
je r-xdata
mov eax edx
mov edx [ esi + 0x1c ]
cmp eax edx
jbe r-xdata
mov ecx eax
pop edi
cmp eax ecx
jae r-xdata
mov eax 0x1
jmp r-xdata
add ebx ecx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] eax
pop esi
pop ebx
pop ebp
retn
mov eax edx
sub_40cad0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
xor eax eax
test edi edi
je r-xdata
pop edi
pop ebp
retn
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
sub ecx esi
xor ecx ecx
jmp r-xdata
mov ecx [ edx + eax * 4 ]
cmp ecx esi
ja r-xdata
pop esi
mov [ edx + eax * 4 ] ecx
inc eax
cmp eax edi
jb r-xdata
sub_40cb00
mov eax [ esi + 0x4 ]
sub eax [ esi + 0x58 ]
push ebx
mov ebx [ esi + 0x20 ]
push edi
mov edi [ esi + 0x64 ]
dec eax
and eax 0xfffffc00
add edi [ esi + 0x60 ]
mov ecx 0x0
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0x4 ] eax
sub [ esi + 0xc ] eax
pop edi
pop ebx
retn
mov edi edi
sub edx eax
xor edx edx
jmp r-xdata
mov edx [ ebx + ecx * 4 ]
cmp edx eax
ja r-xdata
mov [ ebx + ecx * 4 ] edx
inc ecx
cmp ecx edi
jb r-xdata
sub_40cb50
push esi
mov esi eax
cmp [ esi + 0x4 ] 0xffffffff
push edi
jne r-xdata
cmp [ esi + 0x38 ] 0x0
push ebx
jne r-xdata
call sub_40cb00
mov ecx [ esi + 0x18 ]
cmp [ esi + 0x14 ] ecx
jne r-xdata
mov eax [ esi + 0xc ]
mov edi [ esi + 0x4 ]
mov ecx [ esi + 0x44 ]
sub eax edi
cmp ecx eax
jne r-xdata
mov edi [ esi + 0x4 ]
sub ecx [ esi + 0x14 ]
or eax 0xffffffff
sub eax edi
cmp ecx eax
jae r-xdata
mov [ esi + 0x14 ] 0x0
mov eax [ esi ]
mov ebx [ esi + 0x3c ]
mov edx [ esi + 0x30 ]
sub ebx eax
add ebx edx
cmp ebx ecx
ja r-xdata
mov edx [ esi + 0xc ]
mov ebx [ esi + 0x44 ]
sub edx edi
mov ecx edx
cmp ecx ebx
ja r-xdata
mov eax ecx
call sub_40c530
mov ecx [ esi + 0x40 ]
mov ebx ecx
sub ebx edi
add ebx [ esi + 0xc ]
sub eax ecx
push ebx
push eax
push edx
call sub_40dda0
mov eax [ esi + 0x40 ]
add esp 0xc
add eax [ esi + 0x30 ]
mov [ esi ] eax
sub ecx ebx
test ecx ecx
je r-xdata
mov ecx [ esi + 0x1c ]
cmp edx ecx
jbe r-xdata
mov eax ecx
pop ebx
cmp ecx eax
jae r-xdata
mov ecx 0x1
jmp r-xdata
add edi eax
mov [ esi + 0x8 ] edi
pop edi
mov [ esi + 0x10 ] edx
pop esi
retn
mov edx ecx
sub_40cc00
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x18 ]
mov [ ecx + eax * 4 ] edx
mov ecx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x1c ]
sub ecx edx
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0x24 ]
je r-xdata
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
jmp r-xdata
dec [ ebp + 0x20 ]
cmp ecx esi
jae r-xdata
mov edx ebx
sub edx ecx
cmp eax ecx
sbb edi edi
and edi esi
mov esi [ ebp + 0x28 ]
sub edi ecx
add edi eax
mov eax [ ebp + 0x14 ]
mov eax [ eax + edi * 4 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x28 ]
mov al [ edx + eax ]
cmp al [ ebx + esi ]
jne r-xdata
mov edi [ ebp + 0x24 ]
mov al [ edx ]
cmp al [ ebx ]
jne r-xdata
mov esi [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
mov eax [ ebp + 0x8 ]
mov esi 0x1
cmp eax esi
je r-xdata
mov edi [ ebp + 0x24 ]
cmp [ ebp + 0x28 ] esi
jae r-xdata
sub edx ebx
lea edi [ ebx + 0x1 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp + 0xc ]
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
dec ecx
mov [ edi ] esi
mov [ edi + 0x4 ] ecx
add edi 0x8
mov [ ebp + 0x28 ] esi
mov [ ebp + 0x24 ] edi
cmp esi eax
je r-xdata
mov dl [ edx + edi ]
cmp dl [ edi ]
jne r-xdata
jmp r-xdata
inc esi
inc edi
cmp esi eax
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_40ccd0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
sub edx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x1c ]
lea eax [ eax + esi * 8 ]
lea ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
xor ecx ecx
xor ebx ebx
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x24 ] ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x28 ]
pop edi
pop esi
mov [ ecx ] 0x0
mov [ edx ] 0x0
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x24 ]
cmp edx [ ebp + 0x20 ]
jae r-xdata
cmp esi edx
sbb edi edi
and edi [ ebp + 0x20 ]
sub edi edx
add edi esi
mov esi [ ebp + 0x18 ]
lea edi [ esi + edi * 8 ]
mov esi eax
sub esi edx
mov [ ebp - 0x14 ] edi
cmp ecx ebx
jb r-xdata
mov bl [ ecx + esi ]
cmp bl [ ecx + eax ]
jne r-xdata
mov ecx ebx
mov dl [ ecx + esi ]
cmp dl [ ecx + eax ]
mov edx [ ebp + 0xc ]
jae r-xdata
inc ecx
cmp ecx [ ebp + 0x8 ]
je r-xdata
mov esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x10 ]
mov [ esi ] edx
mov [ ebp - 0x8 ] edi
mov edi [ edi ]
mov [ ebp - 0xc ] ecx
mov esi [ ebp - 0x4 ]
mov [ esi ] edx
lea edx [ edi + 0x4 ]
mov edi [ edx ]
mov ebx ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ ebp + 0x2c ] ecx
jae r-xdata
mov bl [ ecx + esi ]
cmp bl [ ecx + eax ]
jne r-xdata
mov esi [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
sub edx edi
cmp [ ebp + 0x24 ] 0x0
mov [ ebp + 0xc ] edi
jne r-xdata
mov ebx [ ebp + 0x28 ]
dec edx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] edx
add ebx 0x8
mov [ ebp + 0x2c ] ecx
mov [ ebp + 0x28 ] ebx
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc ecx
cmp ecx [ ebp + 0x8 ]
je r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0x8 ]
pop edi
mov [ eax ] edx
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
lea edi [ ecx + eax ]
mov eax esi
sub eax [ ebp + 0x14 ]
mov eax [ ebp + 0x14 ]
mov edi [ ebp - 0x14 ]
inc ecx
inc edi
cmp ecx [ ebp + 0x8 ]
jne r-xdata
mov bl [ eax + edi ]
cmp bl [ edi ]
jne r-xdata
sub_40ce10
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
lea eax [ eax + ecx * 8 ]
lea edx [ eax + 0x4 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
mov edx eax
mov eax [ ebp + 0x10 ]
xor ebx ebx
sub eax esi
push edi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x24 ] ebx
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
mov [ edx ] 0x0
mov [ eax ] 0x0
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0x20 ]
dec [ ebp + 0x24 ]
cmp eax edi
jae r-xdata
cmp ecx eax
sbb edx edx
and edx edi
sub edx eax
add edx ecx
mov ecx [ ebp + 0x18 ]
lea edi [ ecx + edx * 8 ]
mov edx [ ebp + 0x14 ]
mov ecx edx
sub ecx eax
mov eax [ ebp - 0xc ]
cmp eax ebx
jb r-xdata
mov bl [ eax + ecx ]
cmp bl [ eax + edx ]
jne r-xdata
mov eax ebx
mov cl [ eax + ecx ]
mov ebx [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
cmp cl [ eax + ebx ]
jae r-xdata
inc eax
cmp eax [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x10 ]
mov [ ecx ] esi
mov esi [ edi ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
mov [ edx ] esi
mov esi [ edi + 0x4 ]
lea edx [ edi + 0x4 ]
mov ebx eax
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov [ eax ] edx
mov ecx [ edi + 0x4 ]
mov edx [ ebp - 0x8 ]
pop edi
pop esi
mov [ edx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ eax + edx ]
mov edx ecx
sub edx [ ebp + 0x14 ]
lea ebx [ ebx ]
mov ecx [ ebp + 0x1c ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
sub eax esi
cmp [ ebp + 0x24 ] 0x0
mov [ ebp + 0xc ] esi
je r-xdata
cmp eax [ ebp + 0x8 ]
je r-xdata
inc eax
inc esi
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov esi [ ebp + 0xc ]
mov bl [ edx + esi ]
cmp bl [ esi ]
jne r-xdata
sub_40cf40
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x10 ]
cmp edx 0x2
jae r-xdata
mov ecx [ esi ]
movzx eax [ ecx + 0x1 ]
movzx ecx [ ecx ]
push ebx
mov ebx [ ebp + 0xc ]
shl eax 0x8
or eax ecx
mov ecx [ esi + 0x20 ]
push edi
mov edi [ esi + 0x4 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ eax ]
push 0x1
mov [ eax ] edi
mov eax [ esi + 0x2c ]
push ebx
push eax
mov eax [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
push edx
call sub_40ccd0
mov edi eax
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
sub edi ebx
add esp 0x28
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax edi
pop edi
pop ebx
pop esi
pop ebp
retn
mov eax esi
call sub_40cb50
xor eax eax
pop esi
pop ebp
retn
mov eax esi
call sub_40cb50
sub_40cfe0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x10 ]
cmp edx 0x3
jae r-xdata
mov ecx [ esi ]
movzx eax [ ecx ]
push ebx
mov ebx [ ebp + 0xc ]
push edi
movzx edi [ ecx + 0x2 ]
movzx ecx [ ecx + 0x1 ]
shl eax 0x8
or eax edi
xor eax [ esi + ecx * 4 + 0x6c ]
mov ecx [ esi + 0x20 ]
mov edi [ esi + 0x4 ]
and eax 0xffff
lea eax [ ecx + eax * 4 ]
mov ecx [ eax ]
push 0x2
mov [ eax ] edi
mov eax [ esi + 0x2c ]
push ebx
push eax
mov eax [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
push edx
call sub_40ccd0
mov edi eax
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
sub edi ebx
add esp 0x28
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax edi
pop edi
pop ebx
pop esi
pop ebp
retn
mov eax esi
call sub_40cb50
xor eax eax
pop esi
pop ebp
retn
mov eax esi
call sub_40cb50
sub_40d090
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
cmp eax 0x3
jae r-xdata
push ebx
mov ebx [ esi + 0x4 ]
push edi
mov edi [ esi ]
movzx eax [ edi ]
movzx ecx [ edi + 0x1 ]
xor ecx [ esi + eax * 4 + 0x6c ]
movzx eax [ edi + 0x2 ]
shl eax 0x8
xor eax ecx
and eax [ esi + 0x28 ]
mov edx ecx
mov ecx [ esi + 0x20 ]
and edx 0x3ff
sub ebx [ ecx + edx * 4 ]
mov [ ebp + 0x8 ] ebx
mov ebx [ ecx + eax * 4 + 0x1000 ]
mov [ ebp - 0x8 ] ebx
mov ebx [ esi + 0x4 ]
mov [ ecx + eax * 4 + 0x1000 ] ebx
mov ecx [ esi + 0x20 ]
mov eax [ ecx + eax * 4 + 0x1000 ]
mov ebx [ ebp + 0xc ]
mov [ ecx + edx * 4 ] eax
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax 0x2
cmp edx [ esi + 0x18 ]
jae r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx edi
sub edx [ ebp + 0x8 ]
mov [ ebp - 0xc ] edx
mov dl [ edx ]
cmp dl [ edi ]
jne r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40cb50
mov eax edi
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40cb50
mov edx [ ebp - 0x4 ]
cmp edx eax
je r-xdata
mov ecx [ ebp + 0x8 ]
dec ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx ] eax
mov ecx 0x2
cmp eax edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov cl [ ecx + eax ]
cmp cl [ eax + edi ]
jne r-xdata
push eax
mov eax [ esi + 0x2c ]
lea ecx [ ebx + ecx * 4 ]
push ecx
mov ecx [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push ecx
mov ecx [ esi + 0x24 ]
push eax
mov eax [ esi ]
push ecx
mov ecx [ esi + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push ecx
push eax
push edx
call sub_40ccd0
mov edi eax
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
sub edi ebx
add esp 0x28
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push ecx
mov ecx [ esi + 0x24 ]
push eax
mov eax [ esi ]
push ecx
mov ecx [ esi + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push ecx
push eax
push edx
call sub_40ce10
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
add esp 0x20
cmp eax [ esi + 0x8 ]
jne r-xdata
inc eax
cmp eax edx
jne r-xdata
pop edi
pop ebx
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40cb50
sub_40d210
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
cmp eax 0x4
jae r-xdata
mov eax [ esi ]
movzx ecx [ eax ]
movzx edx [ eax + 0x1 ]
xor edx [ esi + ecx * 4 + 0x6c ]
push ebx
movzx ebx [ eax + 0x2 ]
mov [ ebp + 0x8 ] eax
movzx eax [ eax + 0x3 ]
mov [ ebp - 0x10 ] eax
mov ecx ebx
lea eax [ ebx * 8 ]
mov ebx [ ebp - 0x10 ]
xor eax [ esi + ebx * 4 + 0x6c ]
mov ebx [ esi + 0x4 ]
shl eax 0x5
shl ecx 0x8
xor eax edx
and eax [ esi + 0x28 ]
xor ecx edx
push edi
mov edi edx
mov edx [ esi + 0x20 ]
and edi 0x3ff
sub ebx [ edx + edi * 4 ]
and ecx 0xffff
mov [ ebp - 0x14 ] ebx
mov ebx [ esi + 0x4 ]
sub ebx [ edx + ecx * 4 + 0x1000 ]
mov [ ebp - 0xc ] ebx
mov ebx [ edx + eax * 4 + 0x41000 ]
mov [ ebp - 0x10 ] ebx
mov ebx [ esi + 0x4 ]
mov [ edx + eax * 4 + 0x41000 ] ebx
mov edx [ esi + 0x20 ]
mov eax [ edx + eax * 4 + 0x41000 ]
mov ebx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x1000 ] eax
mov eax [ esi + 0x20 ]
mov ecx [ eax + ecx * 4 + 0x1000 ]
mov [ eax + edi * 4 ] ecx
mov ecx [ ebp - 0x14 ]
xor edi edi
mov eax 0x1
cmp ecx [ esi + 0x18 ]
jae r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov edx [ ebp - 0xc ]
cmp ecx edx
je r-xdata
mov edx ebx
sub edx ecx
mov dl [ edx ]
cmp dl [ ebx ]
jne r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40cb50
mov ebx [ ebp - 0x4 ]
test edi edi
je r-xdata
cmp edx [ esi + 0x18 ]
jae r-xdata
mov edx [ ebp + 0xc ]
lea edi [ ecx - 0x1 ]
mov eax 0x2
mov [ edx + 0x4 ] edi
mov [ edx ] eax
mov edi eax
cmp eax 0x3
jae r-xdata
cmp eax ebx
je r-xdata
sub ebx edx
mov dl [ ebx ]
mov ebx [ ebp + 0x8 ]
cmp dl [ ebx ]
jne r-xdata
mov edx [ esi + 0x2c ]
push eax
mov eax [ ebp + 0xc ]
lea ecx [ eax + edi * 4 ]
mov eax [ esi + 0x18 ]
push ecx
mov ecx [ esi + 0x14 ]
push edx
mov edx [ esi + 0x24 ]
push eax
mov eax [ esi ]
push ecx
mov ecx [ esi + 0x4 ]
push edx
mov edx [ ebp - 0x10 ]
push eax
push ecx
push edx
push ebx
call sub_40ccd0
mov edi eax
sub edi [ ebp + 0xc ]
add esp 0x28
sar edi 0x2
mov eax 0x3
mov ecx [ ebp + 0xc ]
mov [ ecx + edi * 4 - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov edx eax
sub edx ecx
mov ecx [ ebp + 0x8 ]
add edx ecx
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
lea edx [ ecx - 0x1 ]
mov [ ebx + edi * 4 + 0x4 ] edx
mov eax 0x3
add edi 0x2
mov eax edi
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40cb50
mov edx [ esi + 0x2c ]
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x14 ]
push edx
mov edx [ esi + 0x24 ]
push eax
mov eax [ esi ]
push ecx
mov ecx [ esi + 0x4 ]
push edx
mov edx [ ebp - 0x10 ]
push eax
push ecx
push edx
push ebx
call sub_40ce10
add esp 0x20
jmp r-xdata
inc eax
inc edx
cmp eax ebx
jne r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov bl [ edx ]
cmp bl [ eax + ecx ]
mov ebx [ ebp - 0x4 ]
jne r-xdata
sub_40d400
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
cmp eax 0x4
jae r-xdata
mov eax [ esi ]
movzx ecx [ eax ]
movzx edx [ eax + 0x1 ]
xor edx [ esi + ecx * 4 + 0x6c ]
push ebx
movzx ebx [ eax + 0x2 ]
mov [ ebp + 0x8 ] eax
movzx eax [ eax + 0x3 ]
mov [ ebp - 0x10 ] eax
mov ecx ebx
lea eax [ ebx * 8 ]
mov ebx [ ebp - 0x10 ]
xor eax [ esi + ebx * 4 + 0x6c ]
mov ebx [ esi + 0x4 ]
shl eax 0x5
shl ecx 0x8
xor eax edx
and eax [ esi + 0x28 ]
xor ecx edx
push edi
mov edi edx
mov edx [ esi + 0x20 ]
and edi 0x3ff
sub ebx [ edx + edi * 4 ]
and ecx 0xffff
mov [ ebp - 0x14 ] ebx
mov ebx [ esi + 0x4 ]
sub ebx [ edx + ecx * 4 + 0x1000 ]
mov [ ebp - 0xc ] ebx
mov ebx [ edx + eax * 4 + 0x41000 ]
mov [ ebp - 0x10 ] ebx
mov ebx [ esi + 0x4 ]
mov [ edx + eax * 4 + 0x41000 ] ebx
mov edx [ esi + 0x20 ]
mov eax [ edx + eax * 4 + 0x41000 ]
mov ebx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x1000 ] eax
mov eax [ esi + 0x20 ]
mov ecx [ eax + ecx * 4 + 0x1000 ]
mov [ eax + edi * 4 ] ecx
mov ecx [ ebp - 0x14 ]
xor edi edi
mov eax 0x1
cmp ecx [ esi + 0x18 ]
jae r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov edx [ ebp - 0xc ]
cmp ecx edx
je r-xdata
mov edx ebx
sub edx ecx
mov dl [ edx ]
cmp dl [ ebx ]
jne r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40cb50
test edi edi
je r-xdata
cmp edx [ esi + 0x18 ]
jae r-xdata
mov edx [ ebp + 0xc ]
lea edi [ ecx - 0x1 ]
mov eax 0x2
mov [ edx + 0x4 ] edi
mov [ edx ] eax
mov edi eax
cmp eax 0x3
jae r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
sub ebx edx
mov dl [ ebx ]
mov ebx [ ebp + 0x8 ]
cmp dl [ ebx ]
jne r-xdata
mov edx [ esi + 0x2c ]
mov ebx [ esi ]
push eax
mov eax [ ebp + 0xc ]
lea ecx [ eax + edi * 4 ]
mov eax [ esi + 0x18 ]
push ecx
mov ecx [ esi + 0x14 ]
push edx
mov edx [ esi + 0x24 ]
push eax
mov eax [ esi + 0x4 ]
push ecx
mov ecx [ ebp - 0x10 ]
push edx
mov edx [ ebp - 0x4 ]
push eax
push ecx
push edx
call sub_40cc00
mov ebx eax
sub ebx [ ebp + 0xc ]
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
add esp 0x24
sar ebx 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax 0x3
mov edx [ ebp + 0xc ]
mov [ edx + edi * 4 - 0x8 ] eax
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx eax
sub edx ecx
add edx ebx
mov ecx [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
lea edx [ ecx - 0x1 ]
mov [ ebx + edi * 4 + 0x4 ] edx
mov ebx [ ebp + 0x8 ]
mov eax 0x3
add edi 0x2
pop edi
mov eax ebx
pop ebx
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40cb50
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x24 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + eax * 4 ] edx
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
inc eax
inc edx
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax edi
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40cb50
mov cl [ edx ]
cmp cl [ eax + ebx ]
jne r-xdata
sub_40d5f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x10 ]
cmp edx 0x3
jae r-xdata
mov ecx [ esi ]
movzx eax [ ecx ]
push ebx
push edi
movzx edi [ ecx + 0x2 ]
movzx ecx [ ecx + 0x1 ]
shl eax 0x8
or eax edi
xor eax [ esi + ecx * 4 + 0x6c ]
mov ecx [ esi + 0x20 ]
mov edi [ esi + 0x4 ]
and eax 0xffff
lea eax [ ecx + eax * 4 ]
mov ecx [ eax ]
mov [ eax ] edi
mov edi [ ebp + 0xc ]
mov eax [ esi + 0x2c ]
mov ebx [ esi ]
push 0x2
push edi
push eax
mov eax [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
push edx
call sub_40cc00
mov ebx eax
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
sub ebx edi
add esp 0x24
sar ebx 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
pop edi
mov eax ebx
pop ebx
pop esi
pop ebp
retn
mov eax esi
call sub_40cb50
xor eax eax
pop esi
pop ebp
retn
mov eax esi
call sub_40cb50
sub_40d6a0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x1
mov edi edi
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
add [ esi + 0x14 ] edi
add [ esi ] edi
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
movzx eax [ ecx + 0x1 ]
movzx ecx [ ecx ]
mov ebx [ esi + 0x4 ]
shl eax 0x8
or eax ecx
mov ecx [ esi + 0x20 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ eax ]
mov [ eax ] ebx
mov eax [ esi + 0x2c ]
push eax
mov eax [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
push edx
call sub_40ce10
add esp 0x20
sub [ ebp + 0xc ] edi
jne r-xdata
mov eax esi
call sub_40cb50
mov edx [ esi + 0x10 ]
cmp edx 0x2
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40d720
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x1
mov edi edi
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
add [ esi + 0x14 ] edi
add [ esi ] edi
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
movzx eax [ ecx ]
movzx ebx [ ecx + 0x2 ]
movzx ecx [ ecx + 0x1 ]
shl eax 0x8
or eax ebx
xor eax [ esi + ecx * 4 + 0x6c ]
mov ecx [ esi + 0x20 ]
mov ebx [ esi + 0x4 ]
and eax 0xffff
lea eax [ ecx + eax * 4 ]
mov ecx [ eax ]
mov [ eax ] ebx
mov eax [ esi + 0x2c ]
push eax
mov eax [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
push edx
call sub_40ce10
add esp 0x20
sub [ ebp + 0xc ] edi
jne r-xdata
mov eax esi
call sub_40cb50
mov edx [ esi + 0x10 ]
cmp edx 0x3
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40d7b0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x1
mov edi edi
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
add [ esi + 0x14 ] edi
add [ esi ] edi
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
movzx edx [ ecx ]
movzx eax [ ecx + 0x1 ]
xor eax [ esi + edx * 4 + 0x6c ]
movzx ecx [ ecx + 0x2 ]
mov edx [ esi + 0x20 ]
mov ebx [ esi + 0x4 ]
shl ecx 0x8
xor ecx eax
and ecx [ esi + 0x28 ]
mov edi [ edx + ecx * 4 + 0x1000 ]
lea edx [ edx + ecx * 4 + 0x1000 ]
mov [ edx ] ebx
mov edx [ esi + 0x20 ]
mov ecx [ edx + ecx * 4 + 0x1000 ]
and eax 0x3ff
mov [ edx + eax * 4 ] ecx
mov edx [ esi + 0x2c ]
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x14 ]
push edx
mov edx [ esi + 0x24 ]
push eax
mov eax [ esi ]
push ecx
mov ecx [ esi + 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edi
push edx
call sub_40ce10
add esp 0x20
mov edi 0x1
sub [ ebp + 0xc ] edi
jne r-xdata
mov eax esi
call sub_40cb50
mov eax [ esi + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x3
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40d860
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x1
nop
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
add [ esi + 0x14 ] edi
add [ esi ] edi
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
movzx edi [ eax + 0x2 ]
movzx edx [ eax ]
movzx ebx [ eax + 0x3 ]
movzx ecx [ eax + 0x1 ]
xor ecx [ esi + edx * 4 + 0x6c ]
lea eax [ edi * 8 ]
xor eax [ esi + ebx * 4 + 0x6c ]
mov edx edi
mov edi [ esi + 0x20 ]
shl eax 0x5
xor eax ecx
and eax [ esi + 0x28 ]
shl edx 0x8
mov ebx [ edi + eax * 4 + 0x41000 ]
xor edx ecx
and edx 0xffff
mov [ ebp + 0x8 ] ebx
mov ebx [ esi + 0x4 ]
mov [ edi + edx * 4 + 0x1000 ] ebx
mov edi [ esi + 0x20 ]
mov edx [ edi + edx * 4 + 0x1000 ]
and ecx 0x3ff
mov [ edi + ecx * 4 ] edx
mov ecx [ esi + 0x20 ]
mov edx [ esi + 0x4 ]
mov [ ecx + eax * 4 + 0x41000 ] edx
mov eax [ esi + 0x2c ]
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0x14 ]
push eax
mov eax [ esi + 0x24 ]
push ecx
mov ecx [ esi ]
push edx
mov edx [ esi + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
push edx
push eax
push ecx
call sub_40ce10
add esp 0x20
mov edi 0x1
sub [ ebp + 0xc ] edi
jne r-xdata
mov eax esi
call sub_40cb50
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
cmp eax 0x4
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d940
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x1
mov edi edi
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
add [ esi + 0x14 ] edi
add [ esi ] edi
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
movzx edi [ eax + 0x2 ]
movzx edx [ eax ]
movzx ebx [ eax + 0x3 ]
movzx ecx [ eax + 0x1 ]
xor ecx [ esi + edx * 4 + 0x6c ]
lea eax [ edi * 8 ]
xor eax [ esi + ebx * 4 + 0x6c ]
mov edx edi
mov edi [ esi + 0x20 ]
shl eax 0x5
xor eax ecx
and eax [ esi + 0x28 ]
mov ebx [ edi + eax * 4 + 0x41000 ]
lea edi [ edi + eax * 4 + 0x41000 ]
shl edx 0x8
mov [ ebp + 0x8 ] ebx
mov ebx [ esi + 0x4 ]
mov [ edi ] ebx
mov edi [ esi + 0x20 ]
mov eax [ edi + eax * 4 + 0x41000 ]
xor edx ecx
and edx 0xffff
mov [ edi + edx * 4 + 0x1000 ] eax
mov eax [ esi + 0x20 ]
mov edx [ eax + edx * 4 + 0x1000 ]
and ecx 0x3ff
mov [ eax + ecx * 4 ] edx
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + eax * 4 ] edx
mov edi 0x1
sub [ ebp + 0xc ] edi
jne r-xdata
mov eax esi
call sub_40cb50
cmp [ esi + 0x10 ] 0x4
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40da10
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x1
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
add [ esi + 0x14 ] edi
add [ esi ] edi
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
movzx eax [ ecx ]
movzx edx [ ecx + 0x2 ]
movzx ecx [ ecx + 0x1 ]
shl eax 0x8
or eax edx
xor eax [ esi + ecx * 4 + 0x6c ]
mov edx [ esi + 0x20 ]
and eax 0xffff
mov ecx [ edx + eax * 4 ]
lea eax [ edx + eax * 4 ]
mov edx [ esi + 0x4 ]
mov [ eax ] edx
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x24 ]
mov [ edx + eax * 4 ] ecx
sub ebx edi
jne r-xdata
mov eax esi
call sub_40cb50
cmp [ esi + 0x10 ] 0x3
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40da80
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] sub_40ca30
mov [ eax + 0x4 ] sub_40c4f0
mov [ eax + 0x8 ] sub_40c500
mov [ eax + 0xc ] sub_40c4e0
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x48 ]
cmp ecx 0x2
jne r-xdata
mov [ eax + 0x10 ] sub_40d400
mov [ eax + 0x14 ] sub_40d940
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov [ eax + 0x10 ] sub_40cf40
mov [ eax + 0x14 ] sub_40d6a0
pop ebp
retn
mov [ eax + 0x10 ] sub_40d210
mov [ eax + 0x14 ] sub_40d860
pop ebp
retn
mov [ eax + 0x10 ] sub_40d090
mov [ eax + 0x14 ] sub_40d7b0
pop ebp
retn
sub_40db41
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_40f140
lea esi [ eax + 0x1 ]
push esi
call sub_40ee59
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_40f0d5
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_40db9f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_40db41
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40dbc6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_40db81
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_40db41
jmp r-xdata
sub_40dc06
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40db9f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40dc2f
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40db9f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40dc80
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40db81
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40e101
pop ecx
sub_40dca7
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_40dbc6
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40dccc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40db81
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40e101
pop ecx
sub_40dd10
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40db81
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40e101
pop ecx
sub_40dd54
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40db81
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40e101
pop ecx
sub_40dda0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40de24 ]
jmp [ ecx * 4 + jump_table_40dea4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40df10 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40e0ac ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40dfb0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e0ac ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40df10 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40e0ac ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40df10 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40df10 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40df10 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e0ac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e0ac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e0ac ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_40e130
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40e120
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40e101
pop ecx
sub_40e16f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_40f670
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_40e18f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_40f670
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
pop ebp
retn 0x4
sub_40e1b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_40f670
pop ecx
pop ecx
xor ecx ecx
test eax eax
setg cl
mov eax ecx
pop ebp
retn 0x4
sub_40e1e8
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov esi ecx
mov [ ebp - 0x4 ] r--data
call sub_40db17
mov [ esi ] r--data
mov eax esi
pop esi
leave
retn
sub_40e20e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40ee59
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40f88e
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_40dca7
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_40e86a
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_40db17
push sub_42725b
mov [ rw-data ] esi
call sub_40f81b
pop ecx
sub_40e2fe
push 0x58
push r--data
call sub_410c90
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_410c51
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_410ad6
test eax eax
jne r-xdata
push 0x1c
call sub_40e28e
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_4106da
mov [ ebp - 0x4 ] esi
call sub_410442
test eax eax
jns r-xdata
push 0x10
call sub_40e28e
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_4103ab
mov [ rw-data ] eax
call sub_4102f0
test eax eax
jns r-xdata
push 0x1b
call sub_40fc50
call sub_41006b
test eax eax
jns r-xdata
push 0x8
call sub_40fc50
push 0x1
call sub_40fa2f
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_40fc50
call sub_41000c
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_40fc50
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_40fc32
jmp sub_40e45b
push eax
call sub_40fc06
push ecx
push eax
push esi
push __dos_header
call sub_401630
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_40e480
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40e504 ]
jmp [ ecx * 4 + jump_table_40e584 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e5f0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40e78c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40e690 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e78c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40e5f0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40e78c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e5f0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e5f0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e5f0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e78c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e78c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e78c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_40e7f0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_410f4a
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_40e86a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_40e8b6
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_40e8fd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40e951
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412146
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40e987
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412146
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40e9bd
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412146
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40ea12
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40daf7
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_412146
add esp 0x20
pop esi
pop ebp
retn
sub_40ea45
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_40eb1c
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_410913
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_40eb1c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40daf7
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_412146
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_40ea45
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40e8fd
pop ebx
leave
retn
sub_40ebbb
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_412278
call sub_412278
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_40ec2e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_410913
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_410913
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_40ec5a
mov edi edi
push ebp
mov ebp esp
call sub_410913
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_40ec81
mov edi edi
push ebp
mov ebp esp
push esi
call sub_410913
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_410913
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_410913
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_412278
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_40ecd3
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_40ea12
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_4122d0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_40ed33
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40ee59
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40ede0
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_40f88e
pop ecx
call sub_41235e
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_41235e
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41231c
pop ecx
mov [ esi ] eax
push esi
call sub_40f88e
pop ecx
test eax eax
je r-xdata
call sub_41235e
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41231c
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_40ede0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_41235e
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41231c
pop ecx
mov [ esi ] eax
pop esi
sub_40ee1a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
call sub_40fe43
push 0x1e
call sub_40fc94
push 0xff
call sub_40f931
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
pop ebp
retn
inc eax
sub_40ee59
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_40f88e
pop ecx
call sub_41235e
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_40fe43
push 0x1e
call sub_40fc94
push 0xff
call sub_40f931
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_41235e
mov [ eax ] esi
push ebx
call sub_40f88e
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_41235e
mov [ eax ] esi
sub_40eef0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_40ef0f
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_40efcf
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_412433
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_412433
pop ecx
sub_40f0d5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_41235e
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_41235e
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_412613
mov eax esi
jmp r-xdata
sub_40f140
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40f2de
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4125a7
sub_40f2ff
push 0xc
push r--data
call sub_410c90
push 0xe
call sub_4127ee
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f366
call sub_410cd5
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_40ede0
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_40ede0
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_40f36f
push 0xc
push r--data
call sub_410c90
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov eax [ edi + 0x4 ]
push 0x2800
push sub_40ede0
push sub_40ee59
push ebx
lea eax [ edi + 0x9 ]
push eax
push ebx
call sub_4179fc
add esp 0x18
mov [ ebp - 0x1c ] eax
cmp eax ebx
jne r-xdata
push eax
call sub_40f140
pop ecx
mov esi eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp esi ebx
ja r-xdata
call sub_410cd5
retn
dec esi
mov eax [ ebp - 0x1c ]
cmp [ eax + esi ] 0x20
jne r-xdata
dec esi
push 0xe
call sub_4127ee
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov [ eax + esi ] bl
push [ ebp - 0x1c ]
call sub_40ede0
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f458
push 0x8
call sub_40ee59
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
add esi 0x2
push esi
call sub_40ee59
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
push ebx
call sub_40ede0
pop ecx
push [ ebp - 0x1c ]
push esi
push eax
call sub_40f0d5
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_4125a7
mov eax [ edi + 0x4 ]
mov [ ebx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov [ eax + 0x4 ] ebx
jmp r-xdata
sub_40f461
push 0xc
push r--data
call sub_410c90
push 0xe
call sub_4127ee
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f4c8
call sub_410cd5
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_40ede0
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_40ede0
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_40f4d1
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push sub_40ede0
push sub_40ee59
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4179fc
add esp 0x18
pop ebp
retn
mov [ ebp + 0x14 ] 0x2800
sub_40f504
push 0x10
push r--data
call sub_410c90
xor ebx ebx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0xe
call sub_4127ee
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f607
push 0x2800
push ebx
add esi 0x9
push esi
push ebx
call sub_40f4d1
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi ebx
jne r-xdata
push edi
call sub_40f140
pop ecx
mov esi eax
mov [ ebp - 0x20 ] esi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_4181f0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x8
call sub_40ee59
pop ecx
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ esi + edi ]
cmp [ eax ] 0x20
jne r-xdata
call sub_410cd5
retn
push [ ebp - 0x1c ]
call sub_40ede0
pop ecx
mov esi [ ebp + 0x8 ]
lea ebx [ esi + 0x2 ]
push ebx
call sub_40ee59
pop ecx
mov esi eax
test esi esi
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
push edi
call sub_40ede0
pop ecx
push [ ebp - 0x1c ]
push ebx
push esi
call sub_40f0d5
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
mov eax esi
dec esi
mov [ ebp - 0x20 ] esi
test eax eax
je r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_4125a7
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] esi
mov [ edi ] esi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ edi + 0x4 ] ecx
mov [ eax + 0x4 ] edi
jmp r-xdata
sub_40f610
push 0x8
push r--data
call sub_410c90
push 0xe
call sub_4127ee
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f65a
call sub_410cd5
retn
mov edi [ esi + 0x4 ]
push [ esi ]
call sub_40ede0
push esi
call sub_40ede0
pop ecx
pop ecx
mov esi edi
jmp r-xdata
test esi esi
je r-xdata
sub_40f670
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40f6f8
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_4184ae
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_41840e
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_41840e
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_40f7ae
mov edi edi
push esi
push 0x4
push 0x20
call sub_4183c2
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40f7df
push 0xc
push r--data
call sub_410c90
call sub_40f949
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40f6f8
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f815
mov eax [ ebp - 0x1c ]
call sub_410cd5
retn
sub_40f841
mov edi edi
push ebp
mov ebp esp
push esi
push 0x4
call sub_4127ee
pop ecx
push [ rw-data ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
push 0x4
mov [ rw-data ] eax
call sub_4126fd
pop ecx
mov eax esi
pop esi
pop ebp
retn
sub_40f88e
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_40f8b6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_41222c
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_40f906
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_40f95b
mov edi edi
push esi
call sub_410726
mov esi eax
push esi
call sub_40f832
push esi
call sub_41243b
push esi
call sub_418c7f
push esi
call sub_4189d4
push esi
call sub_4184e1
push esi
call sub_4122b0
add esp 0x18
pop esi
retn
sub_40f98e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_40f9ab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_40f9cf
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_40f9ff
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_40fa2f
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_418c8e
push r--data
push r--data
call sub_40f9ab
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_418d50
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_410700
call sub_40f81b
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_418d50
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_40fac6
push 0x20
push r--data
call sub_410c90
push 0x8
call sub_4127ee
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fbf1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_410cd5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_4126fd
pop ecx
push [ ebp + 0x8 ]
call sub_40f931
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_410726
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_410726
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_40fc6e
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_40fc94
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40fc6e
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
push 0x3
call sub_419138
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_419138
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_4190d5
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_40f140
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_4125a7
push esi
call sub_4190ba
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_4190d5
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_418f78
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_4190ba
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_418fed
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_418f78
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_418e0c
add esp 0xc
jmp r-xdata
sub_40fe43
push 0x3
call sub_419138
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40fc94
push 0xff
call sub_40fc94
pop ecx
pop ecx
push 0x3
call sub_419138
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40fe7c
mov eax ecx
push esi
add ecx 0x90
pop esi
cmp eax ecx
jae r-xdata
add eax 0xc
lea esi [ ecx + 0x90 ]
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
retn
sub_40fea2
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41089a
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_40ffec
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_40fea2
pop ecx
pop ecx
pop ebp
retn
sub_41000c
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_419bdf
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_41942a
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_41006b
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_419bdf
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_4183c2
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_40f140
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_40f140
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_40ede0
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_4183c2
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_40ede0
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_40f0d5
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4125a7
int3
add edi 0x4
sub_410156
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_41942a
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_41942a
pop ecx
test eax eax
je r-xdata
call sub_41942a
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_4102f0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_419bdf
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_410156
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_41837d
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_410156
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4103ab
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_41837d
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_40ede0
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_410442
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_4183c2
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_4183c2
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_410687
mov edi edi
push esi
push edi
mov edi rw-data
add edi 0x4
cmp edi rw-data
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_40ede0
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_4106da
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_410700
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_410758
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_4107a9
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_4126a6
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_4107e6
push 0x8
push r--data
call sub_410c90
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_4127ee
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410888
push 0xc
call sub_4127ee
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_419bfd
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410891
call sub_410cd5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_41089a
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_410758
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_4183c2
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_40ede0
pop ecx
xor esi esi
push 0x0
push esi
call sub_4107e6
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_41092d
push 0x8
push r--data
call sub_410c90
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_410cd5
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_40ede0
pop ecx
push 0xd
call sub_4127ee
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_40ede0
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410a47
push 0xc
call sub_4127ee
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410a53
push esi
call sub_40ede0
pop ecx
push edi
call sub_419c8c
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_40ede0
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_419d25
pop ecx
sub_410a5c
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_41092d
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_410ad6
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_4107a9
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_41072f
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_40f95b
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_41265c
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_4107a9
mov edi [ DecodePointer@IAT ]
push sub_41092d
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_4183c2
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_4107e6
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_410c90
push sub_410d20
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_410d20
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40daf7
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40daf7
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_41832b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_4182e2
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40daf7
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40daf7
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_418312
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_41832b
mov eax [ ebp + 0xc ]
push r--data
call sub_418d50
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40daf7
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_4182f9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40daf7
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_410eaf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_410f4a
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_411004
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40db9f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41102d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40dbfb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40e101
pop ecx
sub_411054
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_40f670
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_4110b3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_410913
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_410913
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_410913
and [ eax + 0x90 ] 0x0
jmp sub_41222c
sub_411102
push 0x10
push r--data
call sub_410c90
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4111c4
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_410913
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_410cd5
retn
call sub_412278
call sub_412278
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_4122d0
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_4111de
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_410913
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_411223
push 0x8
push r--data
call sub_410c90
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_410cd5
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_40e8e8
mov [ ebp - 0x4 ] 0xfffffffe
sub_411278
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_4112b2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
test eax eax
je r-xdata
or [ edi + 0x8 ] 0xffffffff
or [ edi + 0xc ] 0xffffffff
mov esi [ eax ]
test esi esi
je r-xdata
xor eax eax
inc eax
pop ebp
retn
call sub_410913
and [ eax + 0x90 ] 0x0
cmp [ esi ] 0xe06d7363
jne r-xdata
push [ esi + 0x18 ]
push edi
call sub_40ec2e
pop ecx
pop ecx
call sub_410913
mov eax [ eax + 0x88 ]
mov [ edi + 0x8 ] eax
call sub_410913
mov eax [ eax + 0x8c ]
mov [ edi + 0xc ] eax
call sub_410913
mov [ eax + 0x88 ] esi
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_410913
dec [ eax + 0x90 ]
call sub_410913
cmp [ eax + 0x90 ] 0x0
pop edi
pop esi
jge r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_410913
mov esi [ eax + 0x88 ]
cmp eax 0x19930522
jne r-xdata
sub_411368
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_410913
inc [ eax + 0x90 ]
xor eax eax
inc eax
pop ebp
retn
cmp ecx 0x19930522
jne r-xdata
sub_4113b9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
push ebx
push edi
push esi
call sub_40ec81
cmp [ ebp + 0xc ] 0x0
pop ecx
mov edi 0xe06d7363
mov ebx 0x19930520
jne r-xdata
call sub_410913
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_410913
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_410913
mov ecx [ esi + 0x8 ]
mov [ eax + 0x88 ] ecx
call sub_410913
mov ecx [ esi + 0xc ]
pop edi
mov [ eax + 0x8c ] ecx
pop ebx
call sub_410913
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_410913
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_410913
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
call sub_410913
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_410913
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_410913
mov eax [ eax + 0x88 ]
push [ eax + 0x18 ]
call sub_40ec5a
pop ecx
test eax eax
je r-xdata
call sub_410913
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_410913
dec [ eax + 0x90 ]
call sub_410913
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
push 0x1
call sub_410913
push [ eax + 0x88 ]
call sub_411223
pop ecx
pop ecx
call sub_410913
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_411592
push 0x8
push r--data
call sub_410c90
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410cd5
retn
sub_4115cd
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_412278
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_411054
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_41168e
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ esi ] ebx
jle r-xdata
xor al al
mov eax [ esi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_40e16f
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
inc edi
add ebx 0x10
cmp edi [ esi ]
jl r-xdata
pop edi
pop ebx
retn
sub_4116be
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
call sub_412278
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_412278
call sub_412278
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
mov edi [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
cmp eax 0x19930521
je r-xdata
test edi edi
jg r-xdata
cmp eax 0x19930522
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_40e1d4
push eax
call sub_40f670
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
dec edi
add esi 0x4
pop edi
pop esi
pop ebp
retn
sub_411744
push 0x2c
push r--data
call sub_410c90
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_40ec2e
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_410913
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_410913
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_410913
mov [ eax + 0x88 ] esi
call sub_410913
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_40ecd3
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41186a
mov eax [ ebp - 0x1c ]
call sub_410cd5
retn
sub_4117dd
mov esp [ ebp - 0x18 ]
call sub_410913
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_411102
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41186a
mov eax [ ebp - 0x1c ]
call sub_410cd5
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_41186a
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_40ec81
pop ecx
call sub_410913
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_410913
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_40ec5a
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_411223
pop ecx
pop ecx
sub_4118e0
push 0xc
push r--data
call sub_410c90
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_41a040
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_41a040
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_412278
push ebx
push esi
call sub_41a052
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41a040
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41a040
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_41a052
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_41a052
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_41a052
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_40dda0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_41a064
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_411278
pop ecx
pop ecx
push eax
push esi
call sub_40dda0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_410cd5
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_411278
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_411a5f
push 0x8
push r--data
call sub_410c90
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_411278
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_40e8ef
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_4118e0
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410cd5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_411278
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_40e8f6
jmp r-xdata
sub_411af1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
test eax eax
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
leave
retn
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
cmp eax 0xe06d7363
jne r-xdata
cmp eax 0xe0434352
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_410913
inc [ eax + 0x90 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
test bl 0x40
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_410913
cmp [ eax + 0x88 ] 0x0
jne r-xdata
cmp eax 0x19930522
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
or ebx 0x80000000
mov [ ebp - 0xc ] edi
mov edi [ eax ]
mov [ ebp - 0x10 ] ebx
lea ebx [ eax + 0x4 ]
jmp r-xdata
call sub_410913
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
test edi edi
jg r-xdata
call sub_410913
mov esi [ eax + 0x88 ]
mov eax [ ebx ]
push [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_411054
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
call sub_410913
inc [ eax + 0x90 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
dec edi
add ebx 0x4
xor eax eax
inc eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_411a5f
add esp 0x10
jmp r-xdata
sub_411c3f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_411a5f
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_40e8b6
call sub_40e8fd
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_411102
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_411744
add esp 0x28
test eax eax
je r-xdata
sub_411cad
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_410913
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_410913
lea edi [ eax + 0x80 ]
call sub_410726
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_40ebbb
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_412278
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40ea45
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_411c3f
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_411db4
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_412278
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_410913
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_412278
call sub_41222c
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_411cad
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_410913
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_410913
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_410913
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_41a040
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_40ebbb
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_412278
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_411223
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_410913
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_410913
mov edi [ eax + 0x94 ]
call sub_410913
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_4115cd
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_4115cd
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_40e16f
test al al
jne r-xdata
call sub_412278
cmp eax 0x19930522
jne r-xdata
call sub_410913
call sub_410913
call sub_410913
mov [ eax + 0x88 ] esi
call sub_410913
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_411054
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_411223
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_40db9f
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_40e86a
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_411c3f
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_40e8fd
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_411102
add esp 0x10
push [ esi + 0x1c ]
call sub_411643
sub_412146
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_410913
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_411db4
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_411102
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4122d0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_41a1dc
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_41a1dc
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_41231c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_412384
mov edi edi
push ebp
mov ebp esp
push esi
call sub_412371
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_41231c
pop ecx
mov esi eax
call sub_41235e
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4123a7
mov edi edi
push ebp
mov ebp esp
call sub_41089a
test eax eax
jne r-xdata
call sub_41235e
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_4123c8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_41235e
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_412613
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_4123ed
mov edi edi
push ebp
mov ebp esp
call sub_41089a
test eax eax
jne r-xdata
call sub_412371
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_41240e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_412371
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_412613
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_41244a
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_40e7f0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_412433
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_412433
pop ecx
sub_412573
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax esi
pop esi
pop ebp
retn
sub_4125a7
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_41244a
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_4125e6
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4125a7
int3
pop ebp
jmp eax
sub_412623
xor eax eax
push esi
push eax
push eax
push eax
push eax
push eax
call sub_4125e6
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_41244a
add esp 0x20
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
int3
sub_41265c
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_4126a6
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_40ede0
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_41272c
push 0xc
push r--data
call sub_410c90
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_40fe43
push 0x1e
call sub_40fc94
push 0xff
call sub_40f931
push 0x18
call sub_41837d
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_4127ee
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_41235e
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_410cd5
retn
push edi
call sub_40ede0
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_40ede0
pop ecx
call sub_41235e
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4127e5
mov eax [ ebp - 0x1c ]
sub_4127ee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_41272c
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_40fc50
sub_412827
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
pop ebp
retn 0x8
sub_412846
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
call [ esi + 0x4 ]
pop ecx
sub_41286e
mov ecx [ rw-data ]
mov dl [ ecx ]
test dl dl
jne r-xdata
cmp dl 0x30
jl r-xdata
xor eax eax
retn
xor eax eax
jmp r-xdata
cmp dl 0x39
jg r-xdata
cmp dl 0x40
jne r-xdata
movsx eax dl
sub eax 0x2f
inc ecx
mov [ rw-data ] ecx
retn
test dl dl
je r-xdata
mov dl [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp dl 0x40
je r-xdata
cmp dl 0x41
jl r-xdata
retn
or eax 0xffffffff
cmp dl 0x50
jg r-xdata
movsx edx dl
add eax eax
inc ecx
lea eax [ edx + eax * 8 - 0x41 ]
mov [ rw-data ] ecx
mov dl [ ecx ]
sub_4128d0
mov ecx [ rw-data ]
push ebx
push esi
mov edx 0x4000
push edi
mov al [ ecx ]
cmp al 0x41
jl r-xdata
inc ecx
mov esi edx
mov [ rw-data ] ecx
cmp al 0x24
jne r-xdata
cmp al 0x5a
jle r-xdata
mov al [ ecx ]
cmp al 0x30
jl r-xdata
xor bl bl
inc ecx
mov [ rw-data ] ecx
movsx eax [ ecx ]
cmp eax 0x42
jg r-xdata
movsx eax [ ecx ]
sub eax 0x41
mov edx 0x8000
inc ecx
or esi edx
mov [ rw-data ] ecx
test al 0x1
je r-xdata
cmp al 0x39
jne r-xdata
cmp al 0x38
jg r-xdata
sub eax 0x43
je r-xdata
je r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
xor ecx ecx
test al al
setne cl
lea esi [ ecx + 0xfffe ]
inc ecx
mov [ rw-data ] ecx
mov esi 0xfffd
jmp r-xdata
movsx eax al
inc ecx
add eax 0xffffffd0
and esi 0xffff7fff
mov [ rw-data ] ecx
cmp eax 0x8
ja r-xdata
or esi 0x7c00
dec eax
je r-xdata
or esi 0x9800
jmp r-xdata
test eax eax
je r-xdata
mov eax esi
mov ebx 0xffff9fff
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x18
jge r-xdata
mov eax 0xffff
jmp r-xdata
jmp [ eax * 4 + jump_table_412d90 ]
and esi 0xfffff5ff
or esi 0x9100
jmp r-xdata
dec eax
je r-xdata
inc ecx
mov [ rw-data ] ecx
jmp r-xdata
mov esi 0xfffe
dec ecx
jmp r-xdata
cmp eax 0x24
jne r-xdata
and esi ebx
and esi 0xffffefff
or esi edi
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
and esi 0xffffdfff
or esi edx
jmp r-xdata
and esi 0xffffe3ff
or esi 0x6000
jmp r-xdata
and esi 0xffffbfff
or esi 0x2000
jmp r-xdata
and esi 0xffffebff
or esi 0x6800
jmp r-xdata
and esi 0xfffff3ff
or esi 0x7000
jmp r-xdata
and esi 0xfffffbff
or esi 0x7800
jmp r-xdata
and esi 0xfffff6ff
or esi 0x9200
jmp r-xdata
sub eax 0xd
jne r-xdata
cmp eax 0x2f
jle r-xdata
cmp [ ecx + 0x1 ] 0x50
jne r-xdata
test edx esi
je r-xdata
cmp ecx 0x8
je r-xdata
mov ecx eax
and ecx 0x18
je r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
inc ecx
mov [ rw-data ] ecx
mov al [ ecx ]
mov bl 0x1
cmp al 0x30
jl r-xdata
cmp eax 0x35
jle r-xdata
inc ecx
mov [ rw-data ] ecx
movsx eax [ ecx ]
cmp eax 0x4a
jg r-xdata
inc ecx
and esi 0xffffefff
or esi edi
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
cmp ecx 0x10
je r-xdata
and esi 0xffffefff
or esi 0x800
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
test edx esi
je r-xdata
xor ecx ecx
test al al
sete cl
lea eax [ ecx + 0xfffe ]
jmp r-xdata
cmp al 0x35
jg r-xdata
movsx eax [ ecx ]
mov edx 0x8000
or esi edx
sub eax 0x30
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x41
jne r-xdata
cmp eax 0x4c
jl r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffff9fff
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xfffff4ff
or esi 0x9000
jmp r-xdata
cmp eax 0x4d
jle r-xdata
inc ecx
mov [ rw-data ] ecx
mov al [ ecx ]
cmp al 0x30
jl r-xdata
sub eax 0x0
je r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
and esi 0xfffffdff
or esi 0x500
and esi 0xfffffeff
or esi 0x600
jmp r-xdata
test bl bl
je r-xdata
inc ecx
mov [ rw-data ] ecx
jmp r-xdata
cmp eax 0x4f
jle r-xdata
mov esi 0xffff
jmp r-xdata
cmp al 0x39
jg r-xdata
mov eax 0xfffe
jmp r-xdata
sub eax 0x46
je r-xdata
and esi ebx
jmp r-xdata
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xfffff9ff
or esi 0x100
jmp r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
test al 0x1
je r-xdata
xor esi esi
cmp [ ecx ] 0x5f
jne r-xdata
cmp eax 0x51
movsx eax al
lea eax [ ecx + eax - 0x2f ]
mov [ rw-data ] eax
call sub_4128d0
or eax 0x10000
jmp r-xdata
dec eax
dec eax
jmp r-xdata
and esi 0xfffffcff
or esi 0x400
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
jne r-xdata
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
sub_412ea7
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0x7
and edi 0xfffffff8
cmp [ ebp + 0xc ] 0x0
mov esi ecx
je r-xdata
test edi edi
jne r-xdata
push edi
call [ esi ]
pop ecx
jmp r-xdata
mov eax [ esi + 0x10 ]
push ebx
cmp eax edi
jae r-xdata
push 0x8
pop edi
pop edi
pop esi
pop ebp
retn 0x8
sub eax edi
mov [ esi + 0x10 ] eax
mov ebx 0x1000
cmp edi ebx
ja r-xdata
xor eax eax
jmp r-xdata
push 0x1
push 0x1004
mov ecx rw-data
call sub_412ea7
test eax eax
je r-xdata
pop ebx
xor eax eax
and [ eax ] 0x0
jmp r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx + 0x4 ]
sub ebx edi
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ebx
jmp r-xdata
sub_41303f
mov edi edi
push ebp
mov ebp esp
mov eax ecx
cmp [ eax + 0x4 ] 0x3
je r-xdata
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x4 ]
cmp dl 0x1
jle r-xdata
mov [ eax + 0x4 ] dl
sub_4130c4
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
test ecx ecx
je r-xdata
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
mov dl [ ecx + 0x4 ]
cmp dl 0x2
je r-xdata
xor ecx ecx
cmp dl 0x3
jne r-xdata
sub_41311b
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41313c
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov [ eax + 0x4 ] edx
dec edx
neg edx
sbb edx edx
and edx 0xfffffffc
add edx 0x4
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_413171
mov edi edi
push ebp
mov ebp esp
xor ecx ecx
inc ecx
test [ rw-data ] cl
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x3
ja r-xdata
or [ rw-data ] ecx
mov eax r--data
xor edx edx
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x4
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x3
mov [ rw-data ] edx
mov eax rw-data
pop ebp
retn
imul eax eax 0xc
add eax rw-data
pop ebp
retn
sub_413218
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jge r-xdata
mov eax [ esi + 0xc ]
pop esi
retn
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
push ebx
push edi
mov edi [ esi + 0x4 ]
call [ eax ]
mov ebx eax
mov eax [ edi ]
mov ecx edi
call [ eax ]
add ebx eax
pop edi
mov [ esi + 0xc ] ebx
pop ebx
sub_413243
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
test al al
jne r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
pop esi
jmp [ eax + 0x4 ]
sub_41325f
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
sub_413299
mov edi edi
push esi
mov esi edx
test esi esi
je r-xdata
pop esi
retn
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_4132af
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
dec [ ebp + 0x8 ]
jne r-xdata
xor eax eax
pop ebp
retn
mov al [ ecx ]
test al al
je r-xdata
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
cmp al [ edx ]
jne r-xdata
inc ecx
inc edx
sub_4132d9
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
or [ eax ] 0xffffffff
lea ecx [ eax + 0x2c ]
or [ ecx ] 0xffffffff
mov [ rw-data ] edx
mov [ rw-data ] edx
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push esi
mov esi [ ebp + 0x10 ]
mov [ rw-data ] esi
mov [ rw-data ] edx
pop esi
jmp r-xdata
mov [ rw-data ] ecx
mov ecx [ ebp + 0x18 ]
mov [ rw-data ] ecx
mov ecx [ ebp + 0x14 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
pop ebp
retn 0x14
sub_413348
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor ecx ecx
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
call sub_4171c7
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_413381
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x10 ] 0x0
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_4171c7
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_4133d2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
sub eax edi
cmp esi eax
jle r-xdata
test esi esi
je r-xdata
mov esi eax
lea eax [ edi + esi ]
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx edi
sub eax edi
mov edx esi
push ebx
mov bl [ eax + ecx ]
mov [ ecx ] bl
inc ecx
dec edx
jne r-xdata
pop ebx
sub_413409
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
push 0x0
push 0x8
mov ecx rw-data
call sub_412ea7
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_4130c4
jmp r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
mov [ esi ] eax
setne al
dec al
and al 0x3
mov [ esi + 0x4 ] al
jmp r-xdata
sub_41345c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
and [ esi + 0x4 ] 0xffff00ff
cmp ecx 0x2
je r-xdata
mov eax ecx
cmp ecx 0x3
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ecx
call sub_413171
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x3
and [ esi ] 0x0
mov [ esi + 0x4 ] al
cmp ecx 0x1
jne r-xdata
sub_4134a1
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ esi ] 0x0
mov edi [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax ]
lea edi [ eax + 0x1 ]
push esi
push edi
mov ecx rw-data
call sub_412ea7
mov esi eax
test esi esi
je r-xdata
mov eax [ ecx ]
lea edx [ esi + edi - 0x1 ]
push edx
push esi
call [ eax + 0x8 ]
mov eax esi
jmp r-xdata
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebx ]
test ecx ecx
jne r-xdata
sub_413500
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x10
mov ecx rw-data
call sub_412ea7
test eax eax
je r-xdata
xor eax eax
mov ecx [ esi ]
or [ eax + 0xc ] 0xffffffff
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_413548
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x8
mov ecx rw-data
call sub_412ea7
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_4130c4
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_413595
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] al
cmp eax 0x1
jne r-xdata
and [ esi ] 0x0
push eax
call sub_413171
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x3
jmp r-xdata
sub_4135cc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x9
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
push 0x0
push 0x8
mov ecx rw-data
call sub_412ea7
test eax eax
je r-xdata
xor eax eax
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
inc [ esi ]
mov ecx [ esi ]
mov [ esi + ecx * 4 + 0x4 ] eax
test eax eax
je r-xdata
sub_413616
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x9
ja r-xdata
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_41345c
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp eax edx
jg r-xdata
pop ebp
retn 0x8
mov ecx [ ecx + eax * 4 + 0x4 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_413665
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov [ esi ] r--data
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov ecx rw-data
call sub_412ea7
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
jmp r-xdata
sub_4136ef
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
push r--data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4133d2
add esp 0x10
jmp r-xdata
pop ebp
retn 0x8
sub_413718
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp [ eax ] 0x40
push [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x8 ]
call sub_4180a4
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
inc [ rw-data ]
call sub_413409
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_41375c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
push eax
call sub_413595
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
test eax eax
je r-xdata
push eax
call sub_413171
pop ecx
push eax
mov ecx esi
call sub_413500
jmp r-xdata
sub_41379e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x3
mov [ esi ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x2
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
sub eax ebx
je r-xdata
mov [ esi + 0x4 ] 0x3
jmp r-xdata
dec eax
push ebx
mov ecx rw-data
je r-xdata
pop edi
push 0x8
call sub_412ea7
cmp eax ebx
je r-xdata
push 0xc
call sub_412ea7
cmp eax ebx
je r-xdata
xor eax eax
mov cl [ edi ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
push edi
call sub_413665
jmp r-xdata
mov [ esi ] eax
cmp eax ebx
jne r-xdata
sub_413821
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_41379e
sub_41384e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
cmp eax edx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor ecx ecx
cmp [ eax ] dl
je r-xdata
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
cmp ecx edx
jbe r-xdata
push ecx
push eax
mov ecx esi
call sub_41379e
sub_41388b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
push edi
mov edi ecx
mov [ edi + 0x4 ] dl
and [ edi + 0x4 ] 0xffff00ff
mov [ edi ] edx
mov eax [ esi ]
cmp eax edx
je r-xdata
mov [ edi + 0x4 ] 0x2
cmp [ eax ] dl
je r-xdata
mov [ edi + 0x4 ] 0x1
jmp r-xdata
mov [ ebp + 0x8 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
push edx
push [ ebp + 0x8 ]
mov ecx edi
call sub_41379e
mov eax [ esi ]
mov cl [ eax ]
test cl cl
je r-xdata
cmp al 0x5f
je r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
inc eax
mov [ esi ] eax
cmp cl [ ebp + 0xc ]
je r-xdata
inc edx
inc ecx
mov eax ecx
mov [ esi ] ecx
cmp [ eax ] 0x0
jne r-xdata
cmp al 0x24
je r-xdata
and [ edi ] 0x0
mov [ edi + 0x4 ] 0x3
jmp r-xdata
mov ecx [ esi ]
mov al [ ecx ]
cmp al [ ebp + 0xc ]
je r-xdata
cmp al 0x3c
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x2d
je r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x7a
jle r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x5a
jle r-xdata
cmp al 0x80
jb r-xdata
cmp al 0x39
jle r-xdata
test [ rw-data ] 0x10000
je r-xdata
cmp al 0xfe
jbe r-xdata
sub_41394a
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor eax eax
push esi
mov esi ecx
push edi
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
lea edi [ ebp - 0x8 ]
mov [ esi ] eax
mov [ ebp - 0x8 ] al
push 0x0
push 0xa
push [ ebp + 0xc ]
dec edi
push [ ebp + 0x8 ]
call sub_41a270
add cl 0x30
mov [ ebp + 0x8 ] eax
or eax edx
mov [ ebp - 0x20 ] ebx
mov [ edi ] cl
mov [ ebp + 0xc ] edx
jne r-xdata
lea eax [ ebp - 0x8 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_41379e
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn 0x8
sub_4139b8
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
xor ecx ecx
mov [ esi + 0x4 ] cl
and [ esi + 0x4 ] 0xffff00ff
push edi
lea edi [ ebp - 0x7 ]
mov [ esi ] ecx
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x1d ] cl
cmp eax ecx
jg r-xdata
push ebx
jmp r-xdata
jl r-xdata
push ecx
push 0xa
push eax
push [ ebp + 0x8 ]
dec edi
call sub_41a270
add cl 0x30
mov [ ebp + 0x8 ] eax
mov [ edi ] cl
mov ecx [ ebp + 0x8 ]
mov eax edx
or ecx eax
mov [ ebp - 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
neg edx
adc eax ecx
mov [ ebp - 0x1d ] 0x1
neg eax
mov [ ebp + 0x8 ] edx
cmp [ ebp + 0x8 ] ecx
jae r-xdata
xor ecx ecx
pop ebx
cmp [ ebp - 0x1d ] cl
je r-xdata
lea eax [ ebp - 0x7 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_41379e
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
xor ecx ebp
pop esi
call sub_40daf7
leave
retn 0x8
dec edi
mov [ edi ] 0x2d
sub_413a53
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_41375c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_413a77
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
movsx eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_41375c
jmp r-xdata
push ecx
mov ecx esi
call sub_413500
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_413aba
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
cmp [ edi ] 0x0
jne r-xdata
mov al [ esi + 0x4 ]
test al al
je r-xdata
push esi
call sub_413548
jmp r-xdata
push 0x0
push 0x8
mov ecx rw-data
call sub_412ea7
test eax eax
je r-xdata
cmp al 0x1
je r-xdata
xor eax eax
push esi
mov ecx eax
call sub_4130c4
jmp r-xdata
movsx eax al
push eax
call sub_41375c
jmp r-xdata
push eax
mov ecx edi
call sub_413500
sub_413b21
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_41379e
sub_413b4e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
xor ecx ecx
cmp [ eax ] dl
je r-xdata
push ecx
push eax
mov ecx esi
call sub_41379e
mov eax esi
pop esi
pop ebp
retn 0x4
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
sub_413b83
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41345c
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
sub eax 0x41
inc [ rw-data ]
cmp eax 0xe
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov edx [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
and edx 0xffff0002
push 0x2
pop ecx
or edx ecx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
shr edx 0x1
not edx
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
and eax 0xfffffffe
sub eax 0x0
je r-xdata
push 0x1
sub eax ecx
je r-xdata
push ecx
jmp r-xdata
sub eax ecx
je r-xdata
call sub_412e88
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_413b4e
push 0x4
jmp r-xdata
sub eax ecx
je r-xdata
push 0x3
jmp r-xdata
sub eax ecx
je r-xdata
push 0x5
jmp r-xdata
sub eax 0x4
je r-xdata
push 0x6
jmp r-xdata
sub eax ecx
jne r-xdata
push 0x7
jmp r-xdata
sub_413c4b
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41345c
cmp al 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rw-data ]
push r--data
call sub_41384e
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
pop ebp
retn
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_413c96
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_413a77
mov eax esi
pop esi
pop ebp
retn 0x8
sub_413cba
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_413aba
mov eax esi
pop esi
pop ebp
retn 0x8
sub_413cde
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
test bl bl
je r-xdata
pop ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push 0x8
mov ecx rw-data
call sub_412ea7
test eax eax
je r-xdata
push ebx
call sub_413b21
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] bl
jmp r-xdata
push eax
mov ecx esi
call sub_413500
sub_413d30
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
pop esi
pop ebx
cmp [ esi ] bl
je r-xdata
cmp [ edi ] ebx
jne r-xdata
push ebx
push 0xc
mov ecx rw-data
call sub_412ea7
cmp eax ebx
je r-xdata
push esi
call sub_413b4e
jmp r-xdata
xor eax eax
xor edx edx
cmp [ esi ] bl
je r-xdata
push edx
push esi
mov ecx eax
call sub_413665
jmp r-xdata
inc edx
cmp [ edx + esi ] bl
jne r-xdata
push eax
mov ecx edi
call sub_413500
sub_413d94
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ ebp - 0x4 ] 0x1
mov [ esi ] ebx
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
push edi
pop edi
cmp al 0x5a
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_413cde
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push 0x1
mov ecx esi
call sub_41375c
movsx eax al
sub eax 0x30
cmp eax 0x9
ja r-xdata
mov edi [ rw-data ]
mov al [ edi ]
cmp al bl
je r-xdata
and [ ebp - 0x8 ] 0xffff0000
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0xc ] ebx
call sub_417ef3
mov eax [ rw-data ]
sub eax edi
pop ecx
pop ecx
cmp eax 0x1
jle r-xdata
mov ecx [ rw-data ]
push eax
lea eax [ ebp - 0x1c ]
inc edi
push eax
mov [ rw-data ] edi
call sub_413616
push eax
mov ecx esi
call sub_413a77
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_413a77
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
lea eax [ ebp - 0x14 ]
push eax
call sub_4135cc
mov eax [ rw-data ]
mov al [ eax ]
cmp al 0x40
je r-xdata
jmp r-xdata
sub_413e9a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
push r--data
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_413d30
lea eax [ ebp - 0x8 ]
push eax
call sub_416b31
pop ecx
push eax
mov ecx esi
call sub_413a77
push 0x7d
mov ecx esi
call sub_413cde
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
mov eax esi
pop esi
leave
retn
inc [ rw-data ]
sub_413eee
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp + 0x8 ]
leave
retn
sub_413f12
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41345c
mov ecx eax
call sub_413c96
mov eax [ ebp + 0x8 ]
leave
retn
sub_413f36
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp + 0x8 ]
leave
retn
sub_413f5a
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_413cde
mov eax esi
pop esi
pop ebp
retn 0x8
sub_413f7e
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_413d30
mov eax esi
pop esi
pop ebp
retn 0x8
sub_413fa2
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
sub esp 0x18
push ebx
xor ebx ebx
cmp [ ecx ] 0x51
jne r-xdata
mov al [ ecx ]
test al al
jne r-xdata
inc ecx
mov ebx r--data
mov [ rw-data ] ecx
cmp al 0x30
jl r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41345c
mov eax [ ebp + 0x8 ]
jmp r-xdata
push esi
push edi
xor esi esi
xor edi edi
jmp r-xdata
cmp al 0x39
jg r-xdata
pop ebx
leave
retn
cmp al 0x40
jne r-xdata
movsx eax [ ecx ]
sub eax 0x2f
cdq
inc ecx
push edx
mov [ rw-data ] ecx
push eax
test ebx ebx
je r-xdata
test al al
je r-xdata
mov al [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp al 0x40
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_41394a
lea ecx [ ebp - 0x8 ]
call sub_41394a
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_413f36
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41345c
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp al 0x41
jl r-xdata
cmp [ ebp + 0xc ] 0x0
push edi
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
jmp r-xdata
pop edi
pop esi
cmp al 0x50
jg r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
movsx eax al
shld edi esi 0x4
sub eax 0x41
cdq
shl esi 0x4
add eax esi
adc edi edx
inc ecx
mov esi eax
mov [ rw-data ] ecx
mov al [ ecx ]
lea ecx [ ebp - 0x8 ]
call sub_41394a
lea ecx [ ebp - 0x18 ]
call sub_41394a
lea ecx [ ebp - 0x8 ]
call sub_4139b8
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_4139b8
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_413f36
add esp 0xc
jmp r-xdata
sub_4140e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
mov al [ eax ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0xffff0000
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41345c
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
add eax 0xffffffd0
cmp eax 0x7
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
jmp [ eax * 4 + jump_table_4141b4 ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov eax [ rw-data ]
movsx eax [ eax ]
inc [ rw-data ]
sub eax 0x31
je r-xdata
lea ecx [ ebp - 0x8 ]
call sub_413b4e
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
dec eax
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
sub_4141d4
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
movsx eax [ eax ]
sub esp 0x10
sub eax 0x58
je r-xdata
inc [ rw-data ]
push r--data
dec eax
dec eax
je r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_413d94
pop ecx
mov ecx [ ebp - 0x4 ]
test cl cl
jne r-xdata
push eax
jmp r-xdata
mov eax r--data
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41384e
mov eax [ ebp + 0x8 ]
leave
retn
cmp al 0x40
je r-xdata
inc [ rw-data ]
cmp al 0x5a
je r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
push eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_413f7e
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
leave
retn
mov eax r--data
sub_4142b4
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov al [ eax ]
sub esp 0x18
test al al
je r-xdata
push 0x29
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x1
push eax
push r--data
lea ecx [ ebp - 0x10 ]
call sub_41384e
mov ecx eax
call sub_413a53
mov ecx eax
cmp al 0x5a
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_4141d4
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_41384e
mov ecx eax
call sub_413c96
push 0x29
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
inc [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
and edx 0xffff0000
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
call sub_413f5a
mov eax [ ebp + 0x8 ]
leave
retn
sub_41433e
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x8 ] 0xffff0000
push ebx
xor ebx ebx
xor ecx ecx
inc [ rw-data ]
mov eax [ rw-data ]
mov dl [ eax ]
movsx eax dl
push esi
mov esi eax
sub esi 0x41
push edi
mov edi 0xffff00ff
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov eax [ ebp + 0x8 ]
inc [ rw-data ]
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] edi
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x26
mov eax r--data
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov [ ecx ] eax
mov eax r--data
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] edi
mov [ eax ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x3e
mov [ ebp - 0xc ] ebx
call sub_41379e
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] r--data
jmp r-xdata
cmp dl bl
je r-xdata
mov [ eax ] ebx
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41345c
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx [ rw-data ]
mov dl [ edx + 0x1 ]
cmp dl bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x14 ] ebx
je r-xdata
add [ rw-data ] 0x2
add eax 0xffffffd0
movsx edx dl
add eax eax
lea esi [ edx + eax * 8 - 0x30 ]
cmp esi 0x1
jbe r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] 0xffff00ff
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x2c
mov [ ebp - 0xc ] ebx
call sub_41379e
push ebx
push esi
lea ecx [ ebp - 0x1c ]
call sub_41394a
push eax
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_413c96
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0x10 ] ecx
push 0x5e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
call sub_413cde
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
inc [ rw-data ]
jmp r-xdata
mov [ ebp - 0x14 ] ecx
push 0x3e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_413cde
mov edx [ rw-data ]
cmp [ edx ] 0x24
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jne r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_41375c
inc [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
or ecx 0x4000
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_414506
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x38
push ebx
xor ebx ebx
cmp [ eax ] bl
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] ebx
je r-xdata
call sub_41286e
mov [ ebp - 0x4 ] eax
cmp eax ebx
jge r-xdata
lea eax [ ebp - 0x38 ]
push 0x5d
push eax
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_413d30
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push 0x1
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
call sub_41375c
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x5d
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_413cde
lea eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp + 0x8 ]
call sub_417b30
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
and [ ebp - 0xc ] 0xffff0000
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi 0x800
mov [ ebp - 0x10 ] ebx
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x28 ]
push 0x5d
push eax
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
push r--data
lea ecx [ ebp - 0x10 ]
call sub_413d30
jmp r-xdata
push 0x1
push eax
push 0x5b
call sub_413821
mov ecx eax
call sub_413a53
mov ecx eax
call sub_413f5a
mov eax [ ebp - 0x4 ]
dec [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ edi ] ebx
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] bl
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_417ef3
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
pop ecx
pop ecx
mov ecx [ ebp - 0x24 ]
or ecx esi
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
jmp r-xdata
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x30 ]
push ebx
push eax
call sub_413fa2
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x5b
lea ecx [ ebp - 0x38 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x5d
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_413cde
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_413a77
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_413cde
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_413a77
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov ecx edi
call sub_413c96
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0xc ] eax
sub_4146fc
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_413fa2
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x60
lea ecx [ ebp - 0x18 ]
call sub_413821
mov ecx eax
call sub_413c96
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_413f5a
mov eax [ ebp + 0x8 ]
leave
retn
sub_41477b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
inc ebx
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
cmp al bl
jg r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_413348
mov eax [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_413cde
push esi
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_413c96
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
lea ecx [ ebp - 0x20 ]
call sub_41345c
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x40
je r-xdata
inc [ rw-data ]
jmp r-xdata
push r--data
jmp r-xdata
mov ecx esi
call sub_413d30
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jg r-xdata
cmp al 0x40
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_416b31
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x60
lea ecx [ ebp - 0x20 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_413cde
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_413a77
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
push 0x7d
mov ecx esi
call sub_413cde
push ebx
mov ecx esi
call sub_41375c
cmp [ esi + 0x4 ] bl
jg r-xdata
inc eax
mov [ rw-data ] eax
cmp [ eax ] 0x40
je r-xdata
cmp [ esi + 0x4 ] bl
jle r-xdata
push r--data
sub_4148da
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_41384e
mov eax [ rw-data ]
mov al [ eax ]
inc [ rw-data ]
cmp al 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov eax [ rw-data ]
mov al [ eax ]
inc [ rw-data ]
cmp al 0x5f
jne r-xdata
inc [ rw-data ]
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_413fa2
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_413fa2
mov eax [ rw-data ]
mov cl [ eax ]
add esp 0x10
test cl cl
je r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
push 0x1
mov [ rw-data ] eax
call sub_41345c
mov eax [ ebp + 0x8 ]
leave
retn
cmp cl 0x40
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
inc eax
mov [ rw-data ] eax
mov cl [ eax ]
test cl cl
jne r-xdata
mov ecx [ ebp - 0x8 ]
inc eax
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_41498d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
mov al [ eax ]
test al al
jne r-xdata
push 0x0
cmp al 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41345c
jmp r-xdata
push [ ebp + 0x8 ]
call sub_413fa2
pop ecx
pop ecx
inc [ rw-data ]
lea eax [ ebp - 0x8 ]
push eax
call sub_413fa2
push eax
push 0x2d
push [ ebp + 0x8 ]
call sub_413eee
add esp 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
sub_4149df
mov edi edi
push ebp
mov ebp esp
sub esp 0xc8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
mov bl [ eax ]
inc [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movsx edi bl
cmp edi 0x44
jg r-xdata
cmp edi 0x45
je r-xdata
je r-xdata
push esi
call sub_4168c3
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
call sub_41498d
test [ rw-data ] 0x4000
pop ecx
je r-xdata
sub edi 0x0
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
jmp r-xdata
cmp edi 0x4a
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x88 ]
lea ecx [ ebp - 0xc ]
push eax
cmp bl 0x44
jne r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_4134a1
lea eax [ ebp - 0x14 ]
push eax
call sub_41a305
push eax
call [ rw-data ]
pop ecx
pop ecx
test eax eax
je r-xdata
dec [ rw-data ]
sub edi 0x30
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
push 0x7b
lea ecx [ ebp - 0x80 ]
call sub_413821
cmp bl 0x48
jl r-xdata
cmp edi 0x51
je r-xdata
push r--data
jmp r-xdata
push r--data
push eax
jmp r-xdata
push esi
call sub_41498d
jmp r-xdata
dec edi
je r-xdata
sub edi 0x46
je r-xdata
cmp bl 0x4a
jg r-xdata
cmp edi 0x52
jne r-xdata
call sub_41384e
mov ecx eax
call sub_413c96
push r--data
push esi
lea ecx [ ebp - 0x88 ]
call sub_413f7e
jmp r-xdata
mov ecx esi
call sub_41384e
jmp r-xdata
pop ecx
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
dec edi
jne r-xdata
lea eax [ ebp - 0xa8 ]
push eax
call sub_41498d
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_413a77
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_413cde
dec edi
je r-xdata
lea eax [ ebp - 0xb0 ]
push eax
call sub_4168c3
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_413a77
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_413cde
push 0x0
lea eax [ ebp - 0x88 ]
push 0x0
push eax
call sub_415709
lea eax [ ebp - 0x80 ]
push eax
call sub_41498d
mov eax [ ebp - 0x88 ]
mov [ esi ] eax
mov eax [ ebp - 0x84 ]
add esp 0x10
mov [ esi + 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
call sub_4168c3
pop ecx
push eax
push esi
push r--data
lea ecx [ ebp - 0x90 ]
call sub_41384e
jmp r-xdata
inc [ rw-data ]
push r--data
lea eax [ ebp - 0x80 ]
push eax
call sub_41498d
lea eax [ ebp - 0x88 ]
push eax
call sub_41498d
cmp [ ebp - 0x7c ] 0x1
pop ecx
pop ecx
jg r-xdata
lea eax [ ebp - 0x98 ]
push eax
call sub_41498d
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_413a77
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_413cde
dec edi
je r-xdata
mov ecx eax
call sub_413c96
jmp r-xdata
push 0x1
mov ecx esi
call sub_41345c
jmp r-xdata
cmp [ ebp - 0x84 ] 0x1
jg r-xdata
lea eax [ ebp - 0xb8 ]
push eax
call sub_41498d
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_413a77
dec edi
je r-xdata
push 0x64
lea eax [ ebp - 0x77 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_4134a1
test eax eax
jne r-xdata
dec edi
jne r-xdata
mov al [ ebp - 0x77 ]
mov [ ebp - 0x78 ] al
cmp al 0x2d
jne r-xdata
push 0x7d
push esi
lea ecx [ ebp - 0x80 ]
call sub_413f5a
jmp r-xdata
mov [ ebp - 0x77 ] 0x2e
mov al [ ebp - 0x76 ]
mov [ ebp - 0x77 ] al
mov [ ebp - 0x76 ] 0x2e
jmp r-xdata
lea eax [ ebp - 0x88 ]
push eax
push esi
push 0x65
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_41384e
mov ecx eax
call sub_413f5a
sub_414ccf
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
xor ecx ecx
sub esp 0x18
cmp [ eax ] cl
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_413f12
cmp [ ebp + 0x10 ] ecx
je r-xdata
cmp [ eax ] 0x59
jne r-xdata
cmp [ eax ] 0x58
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push eax
call sub_417b30
mov eax [ esi + 0x4 ]
pop ecx
pop ecx
pop esi
test eax 0x4000
je r-xdata
push [ ebp + 0xc ]
inc eax
push [ ebp + 0x8 ]
mov [ rw-data ] eax
call sub_414506
pop ecx
pop ecx
jmp r-xdata
inc eax
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] ecx
jne r-xdata
test eax 0x2000
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
mov eax [ ebp + 0x8 ]
leave
retn
push eax
push r--data
push [ ebp + 0x8 ]
call sub_413f36
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_41384e
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
add esp 0xc
lea ecx [ ebp - 0x18 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub_414dcd
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
mov [ rw-data ] 0x1
mov [ ebp - 0x20 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
mov [ rw-data ] bl
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
push edi
mov edi 0xffff0000
pop edi
cmp cl 0x40
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_413cde
mov eax [ rw-data ]
mov [ ebp - 0x20 ] ebx
jmp r-xdata
and [ ebp - 0x18 ] edi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x1c ] ebx
cmp dl 0x58
jne r-xdata
inc eax
mov [ rw-data ] eax
push ecx
mov ecx [ rw-data ]
lea eax [ ebp - 0x74 ]
push eax
call sub_413616
jmp r-xdata
mov dl [ eax ]
movsx ecx dl
sub ecx 0x30
cmp ecx 0x9
ja r-xdata
cmp dl 0x24
jne r-xdata
inc eax
mov [ rw-data ] eax
push r--data
push eax
mov ecx esi
call sub_413a77
cmp [ esi + 0x4 ] bl
je r-xdata
cmp dl 0x3f
jne r-xdata
inc eax
cmp [ eax ] dl
je r-xdata
mov eax [ rw-data ]
sub eax [ ebp - 0x44 ]
cmp eax 0x1
jle r-xdata
mov eax [ rw-data ]
mov cl [ eax ]
cmp cl bl
je r-xdata
and [ ebp - 0x3c ] edi
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x40 ] ebx
call sub_417ef3
pop ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_41498d
test [ rw-data ] 0x4000
pop ecx
je r-xdata
mov [ rw-data ] eax
lea eax [ ebp - 0x7c ]
push eax
call sub_4149df
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x50 ]
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
call sub_413d30
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x2c ]
jmp r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_4134a1
lea eax [ ebp - 0x14 ]
push eax
call sub_41a305
push eax
call [ rw-data ]
pop ecx
pop ecx
cmp eax ebx
je r-xdata
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x1c ]
push eax
call sub_4135cc
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push r--data
lea ecx [ ebp - 0x5c ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x48 ]
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
call sub_413d30
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
jmp r-xdata
push eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_413b4e
jmp r-xdata
sub_414fdc
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
movsx edx [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
and [ ebp - 0xc ] ecx
push esi
xor esi esi
inc eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ rw-data ] eax
cmp edx 0x41
jg r-xdata
cmp edx 0x42
je r-xdata
je r-xdata
xor esi esi
inc esi
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_413b4e
cmp esi ebx
je r-xdata
cmp edx ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
cmp edx 0x5a
jle r-xdata
dec eax
mov [ rw-data ] eax
cmp edx 0x2f
jle r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push r--data
lea ecx [ ebp - 0x30 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0x200
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp edx 0x5f
jne r-xdata
cmp edx 0x31
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rw-data ] eax
cmp ecx 0x4f
jg r-xdata
and [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
cmp edx 0x39
jg r-xdata
cmp ecx 0x54
jg r-xdata
cmp ecx 0x44
jge r-xdata
push ebx
mov esi eax
lea eax [ ebp - 0x90 ]
push ebx
push eax
call sub_415709
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov [ rw-data ] esi
cmp ecx ebx
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
call sub_414dcd
pop ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x3c
lea ecx [ ebp - 0x20 ]
call sub_413821
mov ecx eax
call sub_413c96
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_413a77
mov ecx [ ebp - 0x10 ]
cmp ecx ebx
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
cmp ecx 0x55
jl r-xdata
cmp ecx 0x53
jge r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x39
jg r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ esi - 0x1 ] 0x31
jne r-xdata
push 0x3e
lea ecx [ ebp - 0x10 ]
call sub_413cde
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
cmp ecx 0x56
jle r-xdata
sub ecx 0x50
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41384e
jmp r-xdata
cmp ecx 0x3f
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_413a77
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x7e
lea ecx [ ebp - 0x28 ]
call sub_413821
mov ecx eax
call sub_413c96
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] bl
jne r-xdata
mov [ eax ] 0x1
push 0x20
lea ecx [ ebp - 0x10 ]
call sub_413cde
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x57
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_413b4e
push ebx
lea eax [ ebp - 0x70 ]
push ebx
push eax
call sub_414fdc
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
cmp ecx ebx
je r-xdata
dec ecx
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
movsx ecx [ eax ]
inc eax
mov [ rw-data ] eax
cmp ecx ebx
je r-xdata
cmp ecx 0x40
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x20 ]
call sub_41384e
mov ecx [ ebp - 0x1c ]
or ecx 0x8000
cmp ecx ebx
je r-xdata
inc eax
mov [ rw-data ] eax
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_413b4e
cmp ecx 0x59
jle r-xdata
lea ecx [ ebp - 0x8 ]
test eax 0x400
je r-xdata
dec ecx
jne r-xdata
cmp ecx 0x30
jne r-xdata
cmp ecx 0x42
jle r-xdata
mov [ eax + 0x4 ] ecx
cmp ecx 0x2f
jle r-xdata
cmp ecx 0x5f
jne r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_413b4e
mov eax [ rw-data ]
mov al [ eax ]
cmp al bl
jne r-xdata
push ebx
push r--data
jmp r-xdata
cmp ecx 0x43
jne r-xdata
cmp ecx 0x36
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rw-data ] eax
cmp ecx 0x41
jl r-xdata
movsx eax al
sub eax 0x30
js r-xdata
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_413a53
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_4148da
mov ecx [ ebp - 0x1c ]
add esp 0xc
or ecx 0x1000
jmp r-xdata
push 0x1
push r--data
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x38
jg r-xdata
cmp ecx 0x44
jle r-xdata
cmp eax 0x5
jae r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
jmp r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x46
jle r-xdata
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x10 ]
call sub_413b4e
mov eax [ rw-data ]
movsx eax [ eax ]
inc [ rw-data ]
cmp eax 0x30
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x18 ]
call sub_41384e
mov eax [ rw-data ]
cmp [ eax ] 0x3f
jne r-xdata
cmp ecx 0x4a
jg r-xdata
lea eax [ ebp - 0x28 ]
push ebx
push eax
call sub_4180a4
mov eax [ ebp - 0x28 ]
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push 0x20
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_413cde
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_413a77
lea ecx [ ebp - 0x20 ]
jmp r-xdata
cmp eax 0x31
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_415b23
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_413a77
lea eax [ ebp - 0x80 ]
push eax
call sub_4168c3
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_413a77
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_413c96
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_413a77
push 0x2c
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_41498d
pop ecx
mov ecx eax
call sub_413f5a
push eax
lea ecx [ ebp - 0x18 ]
call sub_413a77
push 0x2c
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_41498d
pop ecx
mov ecx eax
call sub_413f5a
push eax
lea ecx [ ebp - 0x18 ]
call sub_413a77
push 0x2c
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_41498d
pop ecx
mov ecx eax
call sub_413f5a
push eax
lea ecx [ ebp - 0x18 ]
call sub_413a77
push 0x29
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_413fa2
pop ecx
pop ecx
mov ecx eax
call sub_413f5a
push eax
lea ecx [ ebp - 0x18 ]
call sub_413a77
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_413f5a
jmp r-xdata
add eax 0xffffffce
cmp eax 0x2
jbe r-xdata
push r--data
lea ecx [ ebp - 0x18 ]
call sub_413d30
mov ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
inc [ rw-data ]
jmp r-xdata
dec [ rw-data ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41345c
sub_4155b2
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xa8
cmp [ eax ] 0x3f
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
cmp [ eax + 0x1 ] 0x24
jne r-xdata
or [ ebp - 0x50 ] 0xffffffff
or [ ebp - 0x7c ] 0xffffffff
or [ ebp - 0xa8 ] 0xffffffff
push ebx
mov ebx [ rw-data ]
push esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x50 ]
mov [ rw-data ] ecx
lea ecx [ ebp - 0x7c ]
push edi
mov edi [ rw-data ]
mov [ rw-data ] ecx
add eax 0x2
lea ecx [ ebp - 0xa8 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
cmp [ eax ] 0x3f
mov [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_415709
inc eax
mov [ rw-data ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_414fdc
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ rw-data ] edi
pop edi
mov [ rw-data ] esi
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
pop esi
mov [ rw-data ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push eax
call sub_414dcd
pop ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x3c
lea ecx [ ebp - 0x24 ]
call sub_413821
mov ecx eax
call sub_413c96
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_413a77
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
push 0x3e
lea ecx [ ebp - 0xc ]
call sub_413cde
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
lea ecx [ ebp - 0xc ]
call sub_413cde
inc [ rw-data ]
sub_415709
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rw-data ]
mov cl [ ebx ]
movsx eax cl
push esi
mov esi [ ebp + 0x8 ]
sub eax 0x30
mov [ ebp - 0x38 ] esi
cmp eax 0x9
ja r-xdata
and [ ebp - 0x1c ] 0x0
push edi
mov edi 0xffff0000
and [ ebp - 0x18 ] edi
cmp cl 0x3f
jne r-xdata
mov ecx [ rw-data ]
push eax
inc ebx
push esi
mov [ rw-data ] ebx
call sub_413616
mov eax esi
jmp r-xdata
mov eax r--data
mov esi eax
mov ecx ebx
mov [ ebp - 0x20 ] 0x12
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_4155b2
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
inc eax
mov [ rw-data ] eax
cmp cl 0x40
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
pop edi
je r-xdata
dec eax
xor ecx ecx
mov [ rw-data ] eax
cmp [ eax ] cl
setne cl
inc ecx
push ecx
lea ecx [ ebp - 0x1c ]
call sub_413595
jmp r-xdata
mov eax r--data
push 0xc
mov ecx ebx
mov esi eax
pop ebx
add ebx 0x13
mov [ rw-data ] ebx
jmp r-xdata
inc ecx
inc esi
dec [ ebp - 0x20 ]
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x38 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
mov esi eax
lea eax [ ebp - 0x24 ]
push eax
call sub_41498d
test [ rw-data ] 0x4000
pop ecx
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_4135cc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add [ rw-data ] 0xd
inc ecx
inc esi
dec ebx
jne r-xdata
lea ecx [ ebp - 0x1c ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_4134a1
lea eax [ ebp - 0x14 ]
push eax
call sub_41a305
push eax
call [ rw-data ]
pop ecx
pop ecx
lea ecx [ ebp - 0x1c ]
test eax eax
je r-xdata
push 0x40
push rw-data
lea ecx [ ebp - 0x34 ]
call sub_41388b
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
push r--data
call sub_413b4e
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push esi
lea ecx [ ebp - 0x34 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_413d30
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_413a77
jmp r-xdata
push eax
call sub_413b4e
jmp r-xdata
mov ecx [ ebp - 0x30 ]
xor eax eax
and ecx edi
inc [ rw-data ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
jmp r-xdata
sub_41591f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
mov [ esi + 0x4 ] bl
mov edi 0xffff00ff
and [ esi + 0x4 ] edi
push eax
mov [ esi ] ebx
call sub_415709
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ esi + 0x4 ] eax
cmp al bl
jne r-xdata
mov eax [ rw-data ]
mov al [ eax ]
cmp al 0x40
jne r-xdata
mov eax [ rw-data ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al bl
je r-xdata
inc [ rw-data ]
jmp r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push esi
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_416b31
pop ecx
mov ecx eax
call sub_413f7e
mov ecx eax
call sub_413c96
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push esi
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_41345c
mov ecx eax
call sub_413f7e
mov ecx eax
call sub_413c96
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_413595
jmp r-xdata
sub_415a13
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x20
push esi
push edi
mov ecx eax
shr ecx 0xf
xor edi edi
not ecx
inc edi
and ecx edi
je r-xdata
xor edi edi
test eax 0x1000
je r-xdata
mov ecx [ ebp + 0x8 ]
dec [ rw-data ]
push r--data
call sub_41384e
mov eax [ ebp + 0x8 ]
sub eax 0x54
je r-xdata
mov eax [ rw-data ]
movsx eax [ eax ]
and [ ebp - 0x8 ] 0x0
mov esi 0xffff0000
and [ ebp - 0x4 ] esi
inc [ rw-data ]
sub eax 0x0
je r-xdata
push r--data
dec eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_41591f
pop ecx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_413a77
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r--data
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
leave
retn
lea ecx [ ebp - 0x8 ]
call sub_413b4e
push r--data
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov edi ecx
call sub_4140e8
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec eax
je r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] esi
test edi edi
je r-xdata
push r--data
jmp r-xdata
dec eax
jne r-xdata
push r--data
jmp r-xdata
sub_415b23
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp [ eax ] 0x3f
jne r-xdata
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_415709
inc eax
cmp [ eax ] 0x24
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov [ rw-data ] eax
call sub_414fdc
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_4155b2
pop ecx
pop ecx
jmp r-xdata
add esp 0xc
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_415b6d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
call sub_412e88
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_41384e
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_41375c
movsx ecx [ eax ]
inc eax
mov [ rw-data ] eax
mov eax ecx
sub eax 0x30
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_413d30
jmp r-xdata
dec eax
dec eax
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_413d30
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_41591f
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_413a77
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
sub_415c09
mov edi edi
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
xor edi edi
mov esi 0xffff0000
and [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] edi
call sub_4128d0
mov ecx [ ebp + 0xc ]
mov ebx eax
cmp [ ecx ] edi
je r-xdata
mov [ ebp - 0x14 ] edi
test [ ecx + 0x4 ] 0x200
mov [ ebp - 0x14 ] 0x1
jne r-xdata
cmp ebx 0xfffe
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] edi
jmp r-xdata
cmp ebx 0xffff
jne r-xdata
cmp ebx 0xfffd
jne r-xdata
push ecx
push 0x1
push [ ebp + 0x8 ]
call sub_413f12
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
and [ ebp - 0x4 ] 0x8000
mov edi 0x1800
mov ecx 0x1000
je r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x20 ]
call sub_413a77
mov eax [ ebp - 0x4 ]
mov ecx 0x7c00
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] ebx
and [ ebp - 0xc ] edi
cmp [ ebp - 0xc ] 0x800
sete al
mov [ ebp - 0x8 ] eax
test eax eax
mov eax ebx
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6800
jne r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov esi 0x1000
mov eax ebx
je r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_41477b
cmp [ ebp - 0x8 ] 0x0
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x7000
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx esi
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
test eax eax
jne r-xdata
test ebx 0x4000
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax 0x1100
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
test edx edx
je r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp eax 0x1200
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_413d30
jmp r-xdata
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_413fa2
mov eax [ ebp - 0x20 ]
pop ecx
pop ecx
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x1c ]
push 0x7b
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_413cde
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_413a77
push r--data
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_413f7e
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
call sub_415b6d
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_41303f
shr eax 0x3
not eax
test al 0x1
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1100
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
and edx ecx
cmp edx ecx
jne r-xdata
and [ ebp - 0x3c ] esi
and [ ebp - 0x44 ] esi
and [ ebp - 0xc ] esi
and [ ebp - 0x24 ] esi
and [ ebp - 0x2c ] esi
xor edi edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x30 ] edi
mov eax ebx
cmp edx edi
je r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_415b6d
pop ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_413e9a
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push 0x0
push eax
call sub_413fa2
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x7b
lea eax [ ebp - 0x38 ]
push eax
call sub_413f5a
mov ecx eax
call sub_413c96
push eax
lea ecx [ ebp - 0x20 ]
call sub_413a77
lea eax [ ebp - 0x48 ]
push eax
call sub_413c4b
mov esi 0x1000
pop ecx
test [ rw-data ] esi
jne r-xdata
mov ecx 0x1000
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x6000
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
cmp edx edi
je r-xdata
cmp eax edi
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_413d30
lea eax [ ebp - 0x48 ]
push eax
call sub_413b83
mov eax [ rw-data ]
pop ecx
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x2c
lea ecx [ ebp - 0x38 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_413d30
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_413a77
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1200
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_418173
pop ecx
pop ecx
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
and eax 0x1b00
xor edx edx
cmp eax 0x1100
sete dl
neg ecx
sbb ecx ecx
test edx ecx
jne r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_413fa2
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
xor edi edi
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov ecx eax
shr ecx 0x4
not ecx
test cl 0x1
je r-xdata
mov eax ebx
and eax ecx
cmp eax 0x7800
je r-xdata
push r--data
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x1200
sete dl
neg ecx
sbb ecx ecx
test edx ecx
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_413b83
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_41303f
shr eax 0x4
not eax
test al 0x1
je r-xdata
mov eax [ rw-data ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
cmp edx edi
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_413fa2
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_413fa2
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_413fa2
add esp 0x18
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
test esi eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
xor edx edx
mov esi 0x800
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
mov [ ebp - 0x20 ] ecx
and [ ebp - 0x34 ] esi
xor edi edi
mov [ ebp - 0x38 ] edi
cmp [ ebp - 0x14 ] edi
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_413b83
pop ecx
mov ecx eax
call sub_413c96
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_413381
pop ecx
push eax
lea ecx [ ebp - 0x30 ]
call sub_41303f
call sub_413381
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ rw-data ]
shr eax 0x9
not eax
test al 0x1
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x20
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_413cde
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_413a77
mov ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x1c ]
xor edi edi
push edi
push 0x8
mov ecx rw-data
call sub_412ea7
cmp eax edi
je r-xdata
lea eax [ ebp - 0x50 ]
push edi
push eax
call sub_413718
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41384e
mov ecx eax
call sub_413c96
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_413a77
test [ rw-data ] 0x1000
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test [ rw-data ] 0x1000
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_413fa2
pop ecx
pop ecx
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x7
not eax
test al 0x1
je r-xdata
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
lea eax [ ebp - 0x58 ]
push edi
push eax
call sub_413718
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] eax
mov [ eax ] edi
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov edi eax
mov esi [ ebp - 0x8 ]
mov eax ebx
test esi esi
je r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
push 0x20
lea ecx [ ebp - 0x50 ]
call sub_413821
mov ecx eax
call sub_413c96
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_413a77
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
test ebx 0x10000
je r-xdata
test [ rw-data ] 0x1000
jne r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] edx
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_4141d4
pop ecx
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x28
lea ecx [ ebp - 0x50 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x29
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_413cde
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_413a77
test esi esi
je r-xdata
test esi esi
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax 0x700
cmp eax 0x100
je r-xdata
xor eax eax
inc eax
mov eax ebx
and eax 0x700
sub eax 0x200
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x58 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_413d30
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax esi
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x40
sete dl
mov eax edx
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp eax edx
je r-xdata
call sub_4142b4
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_41303f
call sub_4142b4
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_413a77
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_413a77
test esi esi
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x3c ] eax
call sub_413cde
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_413a77
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_413cde
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_413a77
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
test eax eax
je r-xdata
mov eax ebx
and eax edi
sub eax esi
jmp r-xdata
test edi edi
je r-xdata
mov eax [ rw-data ]
shr eax 0x2
not eax
test al 0x1
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_413cde
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_413a77
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax 0x1000
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x80
sete dl
mov eax edx
jmp r-xdata
lea ecx [ ebp - 0x58 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ edi ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_413d30
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_413a77
cmp [ ebp - 0x4 ] 0x0
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov edi 0x1800
mov eax ebx
and eax edi
neg eax
sbb eax eax
inc eax
push 0x0
test bl 0xc0
pop eax
sete al
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x600
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x400
jne r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
sub_4168c3
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi 0x2000
push edi
test [ rw-data ] esi
je r-xdata
mov eax [ rw-data ]
mov cl [ eax ]
cmp cl 0x3f
jne r-xdata
and [ rw-data ] 0xffffdfff
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_4180a4
or [ rw-data ] esi
pop ecx
pop ecx
test cl cl
jne r-xdata
inc eax
mov [ rw-data ] eax
cmp [ eax ] cl
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41345c
lea eax [ ebp - 0xc ]
push eax
call sub_415b23
mov esi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
xor eax eax
inc eax
pop ecx
test esi esi
je r-xdata
cmp [ eax + 0x1 ] cl
jne r-xdata
and [ ebp - 0x4 ] 0x0
test ebx 0x200
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4168c3
mov eax [ rw-data ]
pop ecx
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp al 0x40
je r-xdata
mov edi ebx
shr edi 0xf
and edi eax
cmp bl al
jle r-xdata
inc eax
mov [ rw-data ] eax
jmp r-xdata
mov edx 0x8000
test edi edi
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_416b31
mov eax [ ebp - 0x14 ]
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test esi esi
je r-xdata
or ebx edx
mov [ ebp - 0x8 ] ebx
or ebx 0x200
mov [ ebp - 0x8 ] ebx
cmp [ rw-data ] 0x0
je r-xdata
mov ecx 0x1000
test ecx ebx
jne r-xdata
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_413d30
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_413a77
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ rw-data ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] ebx
call sub_413a77
mov eax [ rw-data ]
cmp [ eax ] 0x40
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_416b31
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ esp ] r--data
call sub_413d30
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_413a77
mov esi [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test [ rw-data ] ecx
je r-xdata
cmp al 0x40
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_415c09
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x8 ]
test edx ebx
jne r-xdata
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x20 ] 0xffff0000
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_415c09
pop ecx
pop ecx
jmp r-xdata
sub_416b31
mov edi edi
push ebp
mov ebp esp
sub esp 0xb8
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi 0xffff00ff
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] edi
mov [ esi ] ebx
mov [ ebp + 0xb ] bl
jmp r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
cmp al bl
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp al 0x40
je r-xdata
cmp [ rw-data ] bl
je r-xdata
push esi
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea eax [ ebp - 0x48 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_41345c
mov ecx eax
call sub_413f7e
mov ecx eax
call sub_413c96
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_413595
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ rw-data ] bl
je r-xdata
mov ecx [ rw-data ]
cmp [ ecx ] 0x3f
jne r-xdata
push esi
lea eax [ ebp - 0x20 ]
push eax
push r--data
lea ecx [ ebp - 0x90 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x20 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
cmp [ ebp + 0xb ] bl
je r-xdata
lea eax [ ebp - 0x48 ]
push esi
push eax
lea eax [ ebp - 0x40 ]
inc ecx
mov [ rw-data ] ecx
movsx eax [ ecx ]
sub eax 0x24
je r-xdata
push esi
lea eax [ ebp - 0x28 ]
push eax
push 0x5b
lea ecx [ ebp - 0x98 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x28 ]
mov [ esi ] eax
mov eax [ ebp - 0x24 ]
mov [ esi + 0x4 ] eax
mov [ ebp + 0xb ] bl
lea eax [ ebp - 0x88 ]
push esi
dec ecx
push eax
mov [ rw-data ] ecx
lea eax [ ebp - 0x38 ]
jmp r-xdata
dec eax
je r-xdata
push ebx
push 0x1
push eax
call sub_415709
add esp 0xc
push 0x40
push rw-data
lea ecx [ ebp - 0x30 ]
call sub_41388b
push esi
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x78 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
sub eax 0x1a
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_4135cc
jmp r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0x5f
jne r-xdata
dec eax
dec eax
je r-xdata
lea eax [ ebp - 0xa0 ]
push eax
call sub_4168c3
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x60
lea ecx [ ebp - 0x58 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_413cde
push esi
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx + 0x2 ] 0x3f
jne r-xdata
sub eax 0x8
push esi
je r-xdata
call sub_413c96
mov [ rw-data ] eax
push esi
lea eax [ ebp - 0xb0 ]
push eax
push ebx
lea eax [ ebp - 0x80 ]
push ebx
push eax
call sub_414fdc
add esp 0xc
mov ecx eax
call sub_413c96
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
push 0x5d
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea eax [ ebp - 0x70 ]
inc ecx
push 0x1
push eax
mov [ rw-data ] ecx
call sub_415709
add esp 0xc
mov ecx eax
call sub_413f5a
mov ecx eax
call sub_413c96
mov [ ebp + 0xb ] 0x1
jmp r-xdata
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
call sub_4146fc
pop ecx
jmp r-xdata
inc [ rw-data ]
jmp r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx eax
sub_416de8
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov cl [ eax ]
sub esp 0x38
test cl cl
jne r-xdata
cmp cl 0x36
jl r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_413f12
mov eax [ ebp + 0x8 ]
add esp 0xc
leave
retn
cmp cl 0x5f
je r-xdata
cmp cl 0x39
jle r-xdata
push ebx
movsx ebx cl
sub ebx 0x36
inc eax
mov [ rw-data ] eax
cmp ebx 0x29
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
test ebx ebx
js r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
or ebx 0xffffffff
cmp ebx 0x3
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_413f12
mov eax [ ebp + 0x8 ]
add esp 0xc
jmp r-xdata
movsx ebx cl
sub ebx 0x3d
inc eax
mov [ rw-data ] eax
cmp ebx 0x4
jl r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0xffff0000
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
mov edi ebx
and edi 0x2
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
pop ebx
leave
retn
cmp ebx 0x7
jmp r-xdata
test bl 0x4
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
jle r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_41345c
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
lea eax [ ebp - 0x30 ]
push eax
call sub_416b31
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_413a77
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_413b83
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_41303f
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_413b83
pop ecx
mov ecx eax
call sub_413c96
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_415b6d
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_41303f
call sub_415b6d
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x30 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_413a77
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
push 0x1
call sub_41345c
mov ecx eax
call sub_413c96
jmp r-xdata
cmp al 0x40
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
push ebx
push 0x8
mov ecx rw-data
call sub_412ea7
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_413cde
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
xor esi esi
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ebx
mov esi eax
jmp r-xdata
pop edi
pop esi
call sub_413381
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_41303f
jmp r-xdata
call sub_413381
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_413718
lea eax [ ebp - 0x38 ]
push eax
call sub_4141d4
add esp 0xc
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x30 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_413cde
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_413a77
mov eax [ rw-data ]
and eax 0x60
cmp al 0x60
je r-xdata
call sub_4142b4
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_41303f
call sub_4142b4
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_413a77
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_413a77
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_41345c
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
cmp esi ebx
je r-xdata
sub_4171c7
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
mov al [ eax ]
push ebx
push esi
mov esi 0xffff0000
and [ ebp - 0x38 ] esi
push edi
xor edi edi
mov [ ebp - 0x1 ] 0x0
test al al
je r-xdata
cmp [ ebp + 0x18 ] edi
jne r-xdata
cmp al 0x24
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_41345c
mov esi [ ebp + 0xc ]
cmp [ esi ] edi
je r-xdata
mov ecx [ rw-data ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
and [ ebp - 0x10 ] esi
movsx ebx al
mov [ ebp - 0x1c ] edi
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
xor edx edx
and [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] edx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_41433e
mov ecx [ ebp - 0x2c ]
add esp 0x10
cmp ecx edi
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
test [ esi + 0x4 ] 0x100
jne r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x28 ]
push eax
jmp r-xdata
push esi
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
inc [ rw-data ]
mov eax [ rw-data ]
cmp [ eax ] 0x24
jne r-xdata
shr eax 0x11
not eax
test al 0x1
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
sub eax 0x3
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
push [ ebp + 0x8 ]
call sub_413f12
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_41345c
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_413cde
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_413c96
jmp r-xdata
mov ecx [ rw-data ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
movsx ebx al
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
mov edx [ ebp - 0x14 ]
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_41433e
mov ecx [ ebp - 0x34 ]
add esp 0x10
test ecx ecx
jne r-xdata
test edx edx
je r-xdata
test edi edi
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x8
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
call sub_413cde
push 0x8
call sub_412e88
add esp 0x4
push eax
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0xc ]
push 0xa
call sub_412e88
add esp 0x4
push eax
lea ecx [ ebp - 0x1c ]
call sub_413b4e
mov edi [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] eax
call sub_413cde
push 0xa
call sub_412e88
add esp 0x4
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_413f7e
mov edi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp ebx 0x1f
ja r-xdata
inc ecx
mov [ rw-data ] ecx
test edx edx
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov esi [ ebp + 0x10 ]
push esi
lea ecx [ ebp - 0xc ]
call sub_41384e
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_413a77
cmp [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
je r-xdata
push 0x9
jmp r-xdata
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] eax
call sub_413cde
push 0x9
call sub_412e88
add esp 0x4
push eax
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0x2c ]
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x20 ] ecx
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
call sub_413cde
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_413a77
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call sub_412e88
add esp 0x4
push eax
lea ecx [ ebp - 0x14 ]
call sub_413b4e
push eax
call sub_413f7e
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
jmp r-xdata
test bl 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] eax
call sub_413cde
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_413a77
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
mov eax ebx
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
test bl 0x2
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_415b6d
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_41303f
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
lea eax [ ebp - 0xc ]
push eax
je r-xdata
test bl 0x1
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_415b6d
pop ecx
mov ecx eax
call sub_413c96
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_41375c
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_416b31
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_41303f
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_41345c
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_416b31
pop ecx
mov ecx eax
call sub_413c96
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
xor edx edx
mov ebx 0x100
cmp [ ebp + 0x18 ] edx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
inc [ rw-data ]
cmp al 0x40
jne r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
or ecx ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
cmp [ esi ] edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
or ecx 0x2000
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
mov ecx [ esi + 0x4 ]
test ebx ecx
jne r-xdata
push eax
test ecx 0x800
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
push esi
jmp r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_413821
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_413cde
push esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_413c96
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_413821
mov ecx eax
call sub_413c96
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_413a77
sub_417766
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp - 0xc ]
mov edx 0xffff0000
and [ ebp - 0x4 ] edx
xor ecx ecx
and [ ebp - 0x8 ] ecx
and eax edx
mov edx [ rw-data ]
test edx edx
je r-xdata
cmp al 0x3
jne r-xdata
cmp [ edx ] 0x3f
jne r-xdata
cmp al 0x2
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x20 ]
push eax
call sub_4168c3
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov al [ edx + 0x1 ]
cmp al 0x40
jne r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x8 ]
call sub_413b4e
test [ rw-data ] 0x1000
jne r-xdata
cmp al 0x24
jne r-xdata
add [ rw-data ] 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_4168c3
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x8 ]
push eax
call sub_4134a1
mov eax [ rw-data ]
mov edx eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
push 0x0
push eax
call sub_4155b2
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp al 0x2
jne r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
mov [ rw-data ] eax
add eax 0x7
and eax 0xfffffff8
push eax
call [ rw-data ]
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
cmp cl 0x20
jne r-xdata
mov al cl
mov [ edx ] al
mov eax [ rw-data ]
leave
retn
mov [ edx ] cl
inc edx
inc eax
inc eax
mov [ edx ] cl
inc edx
jmp r-xdata
cmp [ eax ] 0x20
je r-xdata
inc eax
jmp r-xdata
sub_4178a5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
mov al [ eax ]
push ebx
xor ebx ebx
push esi
cmp al bl
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_41345c
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_413d30
mov esi [ ebp + 0xc ]
cmp [ esi ] ebx
je r-xdata
cmp al 0x36
jl r-xdata
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi ] ebx
je r-xdata
push esi
lea ecx [ ebp - 0x8 ]
call sub_413a77
cmp al 0x5f
jne r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
pop edi
cmp [ esi ] ebx
je r-xdata
mov esi [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push [ ebp + 0x10 ]
push eax
call sub_4171c7
xor eax eax
cmp [ esi ] 0x2a
sete al
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_414ccf
add esp 0x20
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_41384e
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
cmp [ eax ] ebx
je r-xdata
push edi
lea ecx [ ebp - 0x8 ]
call sub_413a77
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_413cde
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_416de8
pop ecx
pop ecx
push esi
lea ecx [ ebp - 0x8 ]
call sub_413a77
push eax
lea ecx [ ebp - 0x8 ]
call sub_413a77
test [ esi + 0x4 ] 0x100
jne r-xdata
sub_4179fc
push 0x64
push r--data
call sub_410c90
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_41272c
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_4127ee
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] edi
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
movzx eax [ ebp + 0x1c ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_4132d9
lea ecx [ ebp - 0x74 ]
call sub_417766
mov [ ebp - 0x1c ] eax
mov ecx rw-data
call sub_412846
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417a8d
mov eax [ ebp - 0x1c ]
call sub_410cd5
retn
sub_417a96
push 0x64
push r--data
call sub_410c90
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_41272c
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_4127ee
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] edi
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_4132d9
lea ecx [ ebp - 0x74 ]
call sub_417766
mov [ ebp - 0x1c ] eax
mov ecx rw-data
call sub_412846
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417b27
mov eax [ ebp - 0x1c ]
call sub_410cd5
retn
sub_417b30
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov al [ eax ]
sub esp 0x24
push ebx
push esi
push edi
test al al
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_413f12
add esp 0xc
inc [ rw-data ]
and [ ebp - 0xc ] 0x0
movzx edi al
mov esi 0xffff0000
and [ ebp - 0x8 ] esi
mov eax edi
or ebx 0xffffffff
mov [ ebp - 0x1 ] 0x0
cmp eax 0x4e
jg r-xdata
cmp eax 0x4f
je r-xdata
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_413b4e
jle r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_413d30
sub eax 0x43
cmp eax 0xa
ja r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp ebx 0xfffffffe
jne r-xdata
mov eax edi
sub eax 0x43
je r-xdata
lea eax [ ebp - 0x24 ]
jmp r-xdata
cmp eax 0x53
jle r-xdata
movzx eax [ eax + lookup_table_417ee8 ]
jmp [ eax * 4 + jump_table_417ed0 ]
cmp [ eax ] 0x0
jne r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
mov esi 0x800
or [ ebp - 0x10 ] esi
push eax
call sub_4178a5
add esp 0x10
test [ ebp - 0x18 ] esi
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
push 0x2
pop ecx
sub eax ecx
je r-xdata
dec [ rw-data ]
push eax
call sub_415a13
mov edx [ eax + 0x4 ]
pop ecx
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
mov ebx edi
and ebx 0x3
jmp r-xdata
cmp eax 0x58
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_4178a5
add esp 0x10
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_413d30
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x20
lea ecx [ ebp - 0x24 ]
call sub_413821
mov ecx eax
call sub_413c96
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_413a77
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
push r--data
cmp eax 0x5f
jne r-xdata
lea ecx [ ebp - 0xc ]
call sub_413b4e
jmp r-xdata
mov eax [ ebp + 0x8 ]
test bl 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_413b4e
test bl 0x2
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0x24 ]
call sub_41384e
mov ecx eax
call sub_413c96
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
sub eax ecx
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
inc [ rw-data ]
mov [ ebp - 0x1 ] al
movzx eax al
cmp eax 0x4d
jg r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_413b4e
push r--data
lea ecx [ ebp - 0xc ]
call sub_413d30
jmp r-xdata
sub eax ecx
je r-xdata
cmp eax 0x4e
je r-xdata
cmp eax 0x4c
jge r-xdata
sub eax 0x14
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x4f
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x47
jg r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
sub eax 0x45
je r-xdata
push 0xfffffffe
pop ebx
cmp eax 0x52
je r-xdata
cmp eax 0x48
jl r-xdata
cmp eax 0x46
jge r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x57
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x49
jle r-xdata
push r--data
jmp r-xdata
test eax eax
je r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
add eax 0xffffffa8
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
cmp eax 0x4b
jg r-xdata
dec [ rw-data ]
push 0x1
lea ecx [ ebp - 0xc ]
call sub_413595
jmp r-xdata
cmp eax 0x24
je r-xdata
sub eax ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push r--data
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_417b30
push eax
push r--data
push [ ebp + 0x8 ]
call sub_413f36
add esp 0x14
jmp r-xdata
add eax 0xffffffbc
cmp eax 0x1
ja r-xdata
sub eax ecx
jne r-xdata
push r--data
jmp r-xdata
sub_417ef3
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
movsx eax [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
sub eax ebx
push esi
mov [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp + 0xc ]
sub eax 0x24
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x1 ]
cmp al 0x24
je r-xdata
sub eax 0x1d
mov esi [ ebp + 0xc ]
je r-xdata
add [ rw-data ] 0x2
mov eax [ rw-data ]
movsx eax [ eax ]
mov esi [ ebp + 0xc ]
cmp eax 0x51
jg r-xdata
cmp al bl
je r-xdata
push r--data
dec eax
je r-xdata
sub eax 0x52
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x8 ]
call sub_413b4e
cmp [ esi ] ebx
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_417b30
push r--data
lea ecx [ ebp - 0x8 ]
call sub_413b4e
cmp [ esi ] ebx
je r-xdata
dec eax
je r-xdata
push r--data
jmp r-xdata
sub eax ebx
je r-xdata
pop esi
pop ebx
leave
retn
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_413cde
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_413cde
inc [ rw-data ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ esi ]
mov esi [ esi + 0x4 ]
inc [ rw-data ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
or esi 0x100
mov [ ebp - 0xc ] esi
call sub_4178a5
add esp 0x10
jmp r-xdata
push esi
jmp r-xdata
sub eax 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rw-data ]
push r--data
call sub_41384e
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_413f12
inc [ rw-data ]
push esi
push [ ebp + 0x8 ]
call sub_416de8
jmp r-xdata
dec eax
je r-xdata
pop ecx
pop ecx
jmp r-xdata
inc [ rw-data ]
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_414ccf
jmp r-xdata
dec eax
jne r-xdata
add esp 0xc
inc [ rw-data ]
and [ ebp - 0x4 ] ecx
push ebx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x18 ]
push esi
push eax
mov [ ebp - 0x8 ] ebx
call sub_4171c7
push eax
push [ ebp + 0x8 ]
call sub_417b30
add esp 0x1c
jmp r-xdata
sub_4180a4
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_413409
mov eax [ rw-data ]
mov al [ eax ]
xor ecx ecx
cmp al cl
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push 0x1
call sub_41345c
cmp al 0x3f
je r-xdata
inc [ rw-data ]
and [ ebp - 0xc ] 0xffff0000
push ecx
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_4171c7
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_417ef3
add esp 0x1c
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
inc [ rw-data ]
cmp [ ebp - 0x8 ] ecx
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_417ef3
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push r--data
call sub_41384e
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_41384e
jmp r-xdata
mov ecx eax
call sub_413c96
sub_418173
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push esi
push 0x0
push 0x8
mov ecx rw-data
call sub_412ea7
test eax eax
je r-xdata
xor esi esi
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov esi eax
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call sub_4180a4
lea eax [ ebp - 0x10 ]
push eax
call sub_413348
mov eax [ ebp - 0x10 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_413cde
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_413c96
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
sub_4181f0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_418280
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_41a1e5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_41a204
jmp r-xdata
sub_418280
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40daf7
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_4181f0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4182e2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_418312
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418342
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ Sleep@IAT ]
add esi 0x3e8
cmp esi [ rw-data ]
jbe r-xdata
mov eax esi
pop esi
pop ebp
retn
or esi 0xffffffff
sub_41837d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_40ee59
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_4183c2
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a379
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_41840e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ed33
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_41845c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a3fb
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_4184ae
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_41235e
mov [ eax ] 0x16
call sub_412613
or eax 0xffffffff
pop ebp
retn
sub_4184ff
push 0x10
push r--data
call sub_410c90
xor edi edi
push edi
call sub_4127ee
pop ecx
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi rw-data
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x15
mov esi rw-data
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41857b
cmp [ ebp - 0x1c ] edi
jne r-xdata
cmp eax 0x1
je r-xdata
cmp eax edi
je r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
call sub_410726
mov [ esi ] eax
xor eax eax
inc eax
push [ ebp - 0x20 ]
call [ ebp - 0x1c ]
pop ecx
call sub_410cd5
retn 0x4
sub_41859b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_4185f1
push 0x10
push r--data
call sub_410c90
and [ ebp - 0x20 ] 0x0
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp esi 0x4
je r-xdata
cmp ebx 0x1
je r-xdata
cmp esi 0x3
je r-xdata
or eax 0xffffffff
cmp ebx 0x3
je r-xdata
push 0x2
pop edi
cmp ebx edi
je r-xdata
cmp ebx 0xd
je r-xdata
push 0x0
call sub_4127ee
pop ecx
and [ ebp - 0x4 ] 0x0
cmp ebx edi
je r-xdata
cmp ebx 0x15
je r-xdata
cmp ebx 0xf
jle r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x15
jne r-xdata
cmp ebx 0x16
je r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
cmp ebx 0x11
jle r-xdata
mov eax ebx
sub eax edi
je r-xdata
push 0x1
push sub_4184ff
call [ SetConsoleCtrlHandler@IAT ]
xor ecx ecx
inc ecx
cmp eax ecx
jne r-xdata
cmp ebx 0x6
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x4
je r-xdata
call sub_412371
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov [ ebp - 0x20 ] 0x1
mov esi [ ebp + 0xc ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ebx 0xf
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4187f6
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x9
je r-xdata
cmp ebx 0x8
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x6
je r-xdata
call sub_41089a
mov esi eax
test esi esi
je r-xdata
cmp ebx 0x4
je r-xdata
call sub_410cd5
retn
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
dec eax
jne r-xdata
mov edi r--data
cmp [ esi + 0x5c ] edi
jne r-xdata
cmp ebx 0xb
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push [ esi + 0x5c ]
mov edx ebx
call sub_41859b
pop ecx
test eax eax
je r-xdata
push [ r--data ]
call sub_41837d
pop ecx
mov [ esi + 0x5c ] eax
test eax eax
je r-xdata
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
je r-xdata
push [ r--data ]
push edi
push eax
call sub_40e480
add esp 0xc
add eax 0x4
jmp r-xdata
cmp [ eax ] ebx
je r-xdata
mov [ eax + 0x4 ] ecx
add eax 0xc
mov edx [ r--data ]
imul edx edx 0xc
add edx [ esi + 0x5c ]
lea edi [ eax - 0x4 ]
cmp edi edx
jae r-xdata
jmp r-xdata
sub_418831
push 0x20
push r--data
call sub_410c90
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_41089a
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_410cd5
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_41859b
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_40fc1c
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_4127ee
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_410726
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418998
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_4189e3
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_41235e
push 0x16
pop esi
mov [ eax ] esi
call sub_412613
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_41235e
mov [ eax ] 0xc
call sub_41235e
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_41235e
push 0x16
pop esi
mov [ eax ] esi
call sub_412613
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_410726
push edi
push rw-data
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_41235e
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_41231c
pop ecx
mov [ edi ] eax
call sub_412613
call esi
push eax
call sub_41231c
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_418ad3
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_41a62e
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_4183c2
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_40ede0
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_4183c2
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_41a469
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_41a62e
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_4125a7
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_40ede0
pop ecx
inc esi
push esi
push eax
call sub_4183c2
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_40ede0
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_41a62e
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
sub_418c8e
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_418cc0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_418d00
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418d50
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_410d20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_418cc0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_418d00
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418e0c
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_410726
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_418f78
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_41235e
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_41235e
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_412613
mov eax esi
sub_418fed
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_41235e
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_41235e
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_412613
mov eax esi
jmp r-xdata
sub_4190ba
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_4190d5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_41235e
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_41235e
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_412613
mov eax esi
sub_419138
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_419186
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_410913
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_419ebd
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_4196fe
mov [ esi + 0x4 ] eax
sub_41921e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_419186
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_419473
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x3a4
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41921e
add esp 0x10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_4194db
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_41950a
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_40e7f0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_41956e
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_41a9a3
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_41a876
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_41a876
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_40e7f0
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_4196fe
push 0xc
push r--data
call sub_410c90
call sub_410913
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_4127ee
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419799
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_410cd5
retn
push 0x20
call sub_40fc50
cmp esi rw-data
je r-xdata
push esi
call sub_40ede0
pop ecx
sub_4197a2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_419186
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41981e
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_4197a2
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_41950a
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40e7f0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_4194db
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_41956e
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40e7f0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4194db
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_419a07
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x4 ]
je r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_419a45
push 0x14
push r--data
call sub_410c90
or [ ebp - 0x20 ] 0xffffffff
call sub_410913
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_4196fe
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_4197a2
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_41837d
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_410cd5
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_41981e
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_41235e
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40ede0
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_40ede0
pop ecx
push 0xd
call sub_4127ee
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419ba6
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_40ede0
pop ecx
sub_419bfd
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_419c8c
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_419d25
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40ede0
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40ede0
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40ede0
push [ esi + 0xc0 ]
call sub_40ede0
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_41b1e2
push [ esi + 0xd4 ]
call sub_40ede0
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_40ede0
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40ede0
pop ecx
push [ esi + 0xb0 ]
call sub_40ede0
push [ esi + 0xbc ]
call sub_40ede0
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40ede0
push [ esi + 0xbc ]
call sub_41b88f
pop ecx
pop ecx
push eax
call sub_40ede0
pop ecx
push eax
call sub_40ede0
push [ esi + 0xbc ]
call sub_41b606
pop ecx
pop ecx
sub_419e70
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_419bfd
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_419c8c
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_419d25
pop ecx
sub_419ebd
push 0xc
push r--data
call sub_410c90
call sub_410913
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_4127ee
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_419e70
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419f2a
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_410913
mov esi [ eax + 0x6c ]
mov eax esi
call sub_410cd5
retn
push 0x20
call sub_40fc50
sub_419f36
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_419f69
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_419f9f
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_419fd5
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41a076
call sub_4185d2
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_418831
pop ecx
push 0x3
call sub_40fc1c
int3
push 0x1
push 0x40000015
push 0x3
call sub_41244a
add esp 0xc
sub_41a0a9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_41a0d0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a0f0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40daf7
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_41a135
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_41a135
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_41a0f0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41a1e5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41a204
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41a1dc
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41a1e5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41a231
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax esi
pop esi
pop ebp
retn
sub_41a270
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_41a379
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_41235e
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_40f88e
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_41a3fb
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_40ed33
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_4184ae
pop ecx
mov ebx eax
call sub_41235e
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_40e7f0
add esp 0xc
sub_41a469
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_41235e
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_41235e
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_412613
mov eax esi
jmp r-xdata
sub_41a534
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_40ede0
pop ecx
sub_41a554
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_41a534
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_40ee59
pop ecx
cmp eax esi
je r-xdata
call sub_41c330
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_41a62e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_419186
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41a554
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41a671
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_41a68f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_41a534
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_40ee59
pop ecx
cmp eax ebx
je r-xdata
call sub_41c330
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_41a534
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_40ee59
pop ecx
cmp eax ebx
je r-xdata
call sub_41c330
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_41a876
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_419186
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41a68f
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41a8bc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_40e7f0
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_41a534
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_40ee59
pop ecx
cmp eax ebx
je r-xdata
call sub_41c330
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_41a9a3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_419186
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41a8bc
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41a9e3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_418ad3
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_418ad3
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_418ad3
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_418ad3
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_41b1e2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_40ede0
push [ esi + 0x8 ]
call sub_40ede0
push [ esi + 0xc ]
call sub_40ede0
push [ esi + 0x10 ]
call sub_40ede0
push [ esi + 0x14 ]
call sub_40ede0
push [ esi + 0x18 ]
call sub_40ede0
push [ esi ]
call sub_40ede0
push [ esi + 0x20 ]
call sub_40ede0
push [ esi + 0x24 ]
call sub_40ede0
push [ esi + 0x28 ]
call sub_40ede0
push [ esi + 0x2c ]
call sub_40ede0
push [ esi + 0x30 ]
call sub_40ede0
push [ esi + 0x34 ]
call sub_40ede0
push [ esi + 0x1c ]
call sub_40ede0
push [ esi + 0x38 ]
call sub_40ede0
push [ esi + 0x3c ]
call sub_40ede0
add esp 0x40
push [ esi + 0x40 ]
call sub_40ede0
push [ esi + 0x44 ]
call sub_40ede0
push [ esi + 0x48 ]
call sub_40ede0
push [ esi + 0x4c ]
call sub_40ede0
push [ esi + 0x50 ]
call sub_40ede0
push [ esi + 0x54 ]
call sub_40ede0
push [ esi + 0x58 ]
call sub_40ede0
push [ esi + 0x5c ]
call sub_40ede0
push [ esi + 0x60 ]
call sub_40ede0
push [ esi + 0x64 ]
call sub_40ede0
push [ esi + 0x68 ]
call sub_40ede0
push [ esi + 0x6c ]
call sub_40ede0
push [ esi + 0x70 ]
call sub_40ede0
push [ esi + 0x74 ]
call sub_40ede0
push [ esi + 0x78 ]
call sub_40ede0
push [ esi + 0x7c ]
call sub_40ede0
add esp 0x40
push [ esi + 0x80 ]
call sub_40ede0
push [ esi + 0x84 ]
call sub_40ede0
push [ esi + 0x88 ]
call sub_40ede0
push [ esi + 0x8c ]
call sub_40ede0
push [ esi + 0x90 ]
call sub_40ede0
push [ esi + 0x94 ]
call sub_40ede0
push [ esi + 0x98 ]
call sub_40ede0
push [ esi + 0x9c ]
call sub_40ede0
push [ esi + 0xa0 ]
call sub_40ede0
push [ esi + 0xa4 ]
call sub_40ede0
push [ esi + 0xa8 ]
call sub_40ede0
push [ esi + 0xbc ]
call sub_40ede0
push [ esi + 0xc0 ]
call sub_40ede0
push [ esi + 0xc4 ]
call sub_40ede0
push [ esi + 0xc8 ]
call sub_40ede0
push [ esi + 0xcc ]
call sub_40ede0
add esp 0x40
push [ esi + 0xd0 ]
call sub_40ede0
push [ esi + 0xb8 ]
call sub_40ede0
push [ esi + 0xd8 ]
call sub_40ede0
push [ esi + 0xdc ]
call sub_40ede0
push [ esi + 0xe0 ]
call sub_40ede0
push [ esi + 0xe4 ]
call sub_40ede0
push [ esi + 0xe8 ]
call sub_40ede0
push [ esi + 0xec ]
call sub_40ede0
push [ esi + 0xd4 ]
call sub_40ede0
push [ esi + 0xf0 ]
call sub_40ede0
push [ esi + 0xf4 ]
call sub_40ede0
push [ esi + 0xf8 ]
call sub_40ede0
push [ esi + 0xfc ]
call sub_40ede0
push [ esi + 0x100 ]
call sub_40ede0
push [ esi + 0x104 ]
call sub_40ede0
push [ esi + 0x108 ]
call sub_40ede0
add esp 0x40
push [ esi + 0x10c ]
call sub_40ede0
push [ esi + 0x110 ]
call sub_40ede0
push [ esi + 0x114 ]
call sub_40ede0
push [ esi + 0x118 ]
call sub_40ede0
push [ esi + 0x11c ]
call sub_40ede0
push [ esi + 0x120 ]
call sub_40ede0
push [ esi + 0x124 ]
call sub_40ede0
push [ esi + 0x128 ]
call sub_40ede0
push [ esi + 0x12c ]
call sub_40ede0
push [ esi + 0x130 ]
call sub_40ede0
push [ esi + 0x134 ]
call sub_40ede0
push [ esi + 0x138 ]
call sub_40ede0
push [ esi + 0x13c ]
call sub_40ede0
push [ esi + 0x140 ]
call sub_40ede0
push [ esi + 0x144 ]
call sub_40ede0
push [ esi + 0x148 ]
call sub_40ede0
add esp 0x40
push [ esi + 0x14c ]
call sub_40ede0
push [ esi + 0x150 ]
call sub_40ede0
push [ esi + 0x154 ]
call sub_40ede0
push [ esi + 0x158 ]
call sub_40ede0
push [ esi + 0x15c ]
call sub_40ede0
push [ esi + 0x160 ]
call sub_40ede0
add esp 0x18
sub_41b559
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rw-data
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_4183c2
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_41a9e3
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_41b1e2
push edi
call sub_40ede0
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_41b5d6
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_41b606
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
push esi
call sub_40ede0
pop ecx
sub_41b66f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_4183c2
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_41837d
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_40ede0
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x4 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x8 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_41837d
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_418ad3
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_418ad3
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_41b606
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_40ede0
push [ esi + 0xbc ]
call sub_40ede0
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_40ede0
push [ ebp - 0x8 ]
call sub_40ede0
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_41b85f
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_41b88f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40ede0
pop ecx
push esi
call sub_40ede0
pop ecx
sub_41b98d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_4183c2
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_41837d
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_40ede0
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_41837d
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_418ad3
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_418ad3
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_418ad3
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_418ad3
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_40ede0
push [ ebp - 0x8 ]
call sub_40ede0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_41b88f
push ebx
call sub_40ede0
push [ ebp - 0x8 ]
call sub_40ede0
push [ ebp - 0x4 ]
call sub_40ede0
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_40ede0
push [ esi + 0xb0 ]
call sub_40ede0
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_41bd42
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_419186
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_41c35c
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_41235e
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_41bf6d
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_41bd42
add esp 0x14
pop ebp
retn
sub_41bfb5
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_41bd42
add esp 0x14
pop ebp
retn
sub_41bffe
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
call sub_419186
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ecx ] eax
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
cmp [ ebp - 0x30 ] bl
je r-xdata
mov cl [ eax ]
push esi
mov esi [ ebp - 0x3c ]
push edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
lea edi [ eax + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebp - 0x1 ]
mov ecx [ esi + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x3c ]
push eax
movzx eax [ ebp - 0x1 ]
push 0x8
push eax
call sub_41c35c
mov esi [ ebp - 0x3c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x1 ] 0x2d
mov [ ebp - 0x8 ] edi
jne r-xdata
mov al [ edi ]
mov [ ebp - 0x1 ] al
inc edi
jmp r-xdata
cmp eax ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ esi + 0xac ] 0x1
jle r-xdata
push 0x10
pop ecx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp - 0x1 ] 0x30
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
mov edi eax
push edi
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x28 ] edx
call sub_41a270
mov [ ebp - 0x20 ] ebx
mov ebx [ esi + 0xc8 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x1 ] 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and eax 0x103
je r-xdata
movsx esi cl
sub esi 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] ecx
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec [ ebp - 0x8 ]
test al 0x8
jne r-xdata
lea eax [ ecx - 0x61 ]
cmp al 0x19
movsx eax cl
ja r-xdata
cmp esi [ ebp + 0x14 ]
jae r-xdata
mov al [ edi + 0x1 ]
add edi 0x2
mov [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
lea esi [ eax - 0x37 ]
sub eax 0x20
mov ecx [ ebp - 0x10 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0x18 ]
jb r-xdata
call sub_41235e
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp - 0x14 ]
push [ ebp - 0x28 ]
push edi
call sub_41d3a0
xor ecx ecx
add eax esi
adc edx ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
ja r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x14 ] 0xffffffff
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
mov cl [ ebp - 0x1 ]
movzx eax cl
movzx eax [ ebx + eax * 2 ]
mov edx eax
and edx 0x4
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x10 ] esi
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] ebx
ja r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] esi
jb r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x1 ] al
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x14 ] 0x0
ja r-xdata
ja r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jbe r-xdata
cmp esi [ ebp - 0x24 ]
jbe r-xdata
sub_41c29b
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_41bffe
add esp 0x14
pop ebp
retn
sub_41c2e3
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_41bffe
add esp 0x14
pop ebp
retn
sub_41c35c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_419186
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_41d40b
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_41a9a3
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41c414
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c35c
add esp 0xc
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_41c452
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_419bfd
pop ecx
pop edi
sub_41c478
mov edi edi
push ebp
mov ebp esp
push esi
call sub_410913
mov ecx [ eax + 0x70 ]
push 0x0
pop edx
test cl 0x2
sete dl
lea esi [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
or [ rw-data ] 0xffffffff
test edx edx
je r-xdata
mov eax esi
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
or eax 0xffffffff
jmp r-xdata
mov [ eax + 0x70 ] ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_41c4ff
push 0x8
push r--data
call sub_410c90
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_410cd5
retn
push 0xd
call sub_4127ee
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c5ac
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_40ede0
pop ecx
push 0xc
call sub_4127ee
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_419c8c
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c5b8
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_40ede0
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_419d25
pop ecx
sub_41c5cc
push 0xc
push r--data
call sub_410c90
call sub_410913
mov edi eax
push 0x1
push 0x8
call sub_4183c2
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
test esi esi
jne r-xdata
call sub_419ebd
call sub_4196fe
mov eax [ edi + 0x6c ]
mov [ esi ] eax
mov eax [ edi + 0x68 ]
mov [ esi + 0x4 ] eax
push 0xc
call sub_4127ee
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_419bfd
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c666
push 0xd
call sub_4127ee
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x4 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c672
mov eax esi
call sub_41235e
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_410cd5
retn
sub_41c683
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4125a7
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41db23
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_41c6c4
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_40e7f0
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_41db90
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_41a469
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_41a469
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_4125a7
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_41db90
test eax eax
sub_41c7e3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f0d5
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4125a7
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c683
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c683
add esp 0x14
sub_41c84e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_41837d
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_41c683
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4125a7
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_40f670
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_41c683
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_40ede0
pop ecx
push r--data
push ebx
push edi
call sub_41db23
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_40ede0
pop ecx
push [ ebp - 0x10 ]
call sub_40ede0
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_40ede0
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_40ede0
pop ecx
sub_41c9b3
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_410913
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_40f140
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_41c6c4
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_40f670
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_40f0d5
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_41e1a3
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_40f670
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_41c7e3
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_40e480
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_40f0d5
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_40e480
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_41a469
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
call sub_4125a7
sub_41cbd4
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_410913
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_41c9b3
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_40f670
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_40f140
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_41837d
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_40e480
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_40f0d5
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4125a7
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_40e480
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rw-data
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_40ede0
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_41a9a3
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_40ede0
push [ ebx + 0x54 ]
call sub_40ede0
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_41f8ae
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_41cf0e
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_41c84e
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_41cbd4
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_41c9b3
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_40f670
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_41cbd4
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_40ef0f
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_40f140
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_41db90
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_41a469
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_4125a7
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_41cbd4
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_420e10
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_41d12a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_4183c2
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_4183c2
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_41235e
mov [ eax ] 0xc
push edi
push 0x220
call sub_4183c2
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_40ede0
mov eax [ esi ]
mov ecx rw-data
call sub_41c452
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_41cf0e
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_40ede0
push esi
call sub_40ede0
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_41981e
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_419c8c
push [ esi ]
call sub_419d25
push esi
call sub_40ede0
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_40ede0
push [ esi ]
call sub_419c8c
push [ esi ]
call sub_419d25
push esi
call sub_40ede0
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_41d22a
push 0x14
push r--data
call sub_410c90
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_410913
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_419ebd
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_4183c2
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d399
mov eax [ ebp - 0x20 ]
push 0xc
call sub_4127ee
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_41c452
and [ ebp - 0x4 ] 0x0
call sub_41d35c
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_41cf0e
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_410cd5
retn
push ebx
call sub_419c8c
push ebx
call sub_419d25
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_4127ee
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_419e70
push ebx
call sub_419c8c
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_40f670
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41d368
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] edi
push [ edi ]
push rw-data
call sub_419e70
pop ecx
pop ecx
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
sub_41d3a0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_41d3e0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_41d40b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41d62a
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41d650
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41d676
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41d69c
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41d6c2
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_41837d
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_4183c2
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_4183c2
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_4183c2
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_4183c2
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_418ad3
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_40ede0
push [ ebp - 0x1c ]
call sub_40ede0
push [ ebp - 0x20 ]
call sub_40ede0
push [ ebp - 0x28 ]
call sub_40ede0
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_40ede0
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_41a9a3
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_41a876
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_41a876
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_40e480
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_40e480
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_40e480
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40ede0
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40ede0
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40ede0
push [ esi + 0xc0 ]
call sub_40ede0
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_41db23
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_41235e
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_41235e
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_412613
mov eax esi
jmp r-xdata
sub_41db90
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_41dbd6
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_420fbd
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_41dc4c
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_40f670
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_40f670
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_41a305
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_41dcd0
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_41dcf5
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_41dd26
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_41dd41
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_410913
mov edx edi
mov esi eax
call sub_41dcf5
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_420fbd
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_41dcd0
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40daf7
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_41dde8
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_41dd26
push esi
mov edi eax
call sub_40f140
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_41de43
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_410913
mov edx edi
lea esi [ eax + 0x9c ]
call sub_41dcf5
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_420fbd
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_420fbd
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_420fbd
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_4210e6
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_420fbd
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_40f140
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_41dcd0
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_40f140
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_41dde8
pop ecx
pop ecx
test eax eax
je r-xdata
sub_41e014
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_410913
mov edx edi
lea esi [ eax + 0x9c ]
call sub_41dcf5
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_420fbd
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40daf7
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_420fbd
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_41dde8
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_41e0d4
push [ esi + 0x4 ]
call sub_40f140
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_41dd41
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
retn
and [ esi + 0x8 ] 0x0
sub_41e100
push [ esi ]
call sub_40f140
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_40f140
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_41dd26
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_41de43
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_41e167
push [ esi ]
call sub_40f140
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_41dd26
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_41e014
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_41e1a3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_410913
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_41dbd6
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_41dc4c
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_40f140
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_41dd41
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_41e167
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_41dbd6
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_41e100
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_41e167
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_41e100
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_40f0d5
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4125a7
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_4211f3
add esp 0x10
sub_41e3ba
mov ax [ esi ]
cmp ax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ ecx + 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_41e3f6
mov eax [ esi ]
cmp eax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx edx [ ecx + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ esi + 0x2 ]
movzx edx [ ecx + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
movzx eax [ esi + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_41e466
mov edi edi
push esi
push edi
mov edi eax
jmp r-xdata
cmp edi 0x20
jae r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
je r-xdata
add ecx edi
add edx edi
cmp edi 0x1f
ja r-xdata
xor eax eax
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_41f82e ]
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ecx - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ ecx - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ ecx - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ ecx - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ ecx - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ ecx - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ecx - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ ecx - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ ecx - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ ecx - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ ecx - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ ecx - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ ecx - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
mov eax [ ecx - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ ecx - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ ecx - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ ecx - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ ecx - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ ecx - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ ecx - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ ecx - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ ecx - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ ecx - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ ecx - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ ecx - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ ecx - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ ecx - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ ecx - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x4 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx eax [ edx - 0x1c ]
movzx esi [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x19 ]
movzx esi [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x1a ]
movzx esi [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
jmp r-xdata
xor eax eax
movzx eax [ edx - 0x1f ]
movzx esi [ ecx - 0x1f ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx esi [ ecx + 0x5 ]
movzx eax [ edx + 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1e ]
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x8 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x6 ]
movzx eax [ edx + 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx esi [ ecx + 0x9 ]
movzx eax [ edx + 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x7 ]
movzx eax [ edx + 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0xc ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xa ]
movzx eax [ edx + 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx esi [ ecx + 0xd ]
movzx eax [ edx + 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xb ]
movzx eax [ edx + 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x10 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xe ]
movzx eax [ edx + 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx esi [ ecx + 0x11 ]
movzx eax [ edx + 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xf ]
movzx eax [ edx + 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x14 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x12 ]
movzx eax [ edx + 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx esi [ ecx + 0x15 ]
movzx eax [ edx + 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x13 ]
movzx eax [ edx + 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x18 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x16 ]
movzx eax [ edx + 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx esi [ ecx + 0x19 ]
movzx eax [ edx + 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x17 ]
movzx eax [ edx + 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x1c ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x1a ]
movzx eax [ edx + 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
add ecx 0x20
add edx 0x20
sub edi 0x20
movzx esi [ ecx + 0x1d ]
movzx eax [ edx + 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1b ]
movzx eax [ edx + 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1e ]
movzx eax [ edx + 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx + 0x1f ]
movzx eax [ edx + 0x1f ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
sub_41f8ae
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_420d82 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_420e10
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_420e50
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_420ec4
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_420efd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_420ec4
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4213ab
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4213ab
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_420fbd
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420efd
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_420ec4
sub_421004
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_4214f0
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4213ab
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4213ab
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_4210e6
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421004
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_41235e
mov [ eax ] 0x16
call sub_412613
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_4214f0
sub_421139
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_41235e
push 0x16
pop esi
mov [ eax ] esi
call sub_412613
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_41235e
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_41235e
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_412613
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_4211f3
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_421139
pop ebp
retn
sub_42121d
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_421139
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_42125e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_41235e
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_41235e
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_41a270
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_41235e
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_412613
mov eax esi
jmp r-xdata
sub_42134a
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42125e
pop edi
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_42137f
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42125e
pop edi
pop ebp
retn
sub_4213ab
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_419186
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_41235e
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_41d40b
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_41c35c
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41a876
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4214c0
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4213ab
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_4214f0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_421551
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40db9f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421574
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40db9f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42159d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40db9f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4215c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40db9f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4215ef
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40db9f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421612
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40db9f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42163b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40db9f
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40e86a
int3
sub_421688
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40db9f
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40e86a
int3
sub_4216d5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40db9f
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40e86a
int3
sub_421722
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40db9f
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40e86a
int3
sub_42176f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40db9f
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40e86a
int3
sub_42179f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40dbfb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40e101
pop ecx
sub_4217c0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40dbfb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40e101
pop ecx
sub_4217e1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40dbfb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40e101
pop ecx
sub_421802
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40dbfb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40e101
pop ecx
sub_421823
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40dbfb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40e101
pop ecx
sub_421844
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40dbfb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40e101
pop ecx
sub_421ac0
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_421b76
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_4214c0
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_4228d2
test eax eax
movsx eax [ esi ]
push eax
call sub_4214c0
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_421bea
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_421c6c
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_421c88
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_422eb9
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_422d3a
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_421ce4
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_40f140
inc eax
push eax
push esi
add esi edi
push esi
call sub_40dda0
add esp 0x10
sub_421d29
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_419186
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_41235e
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_41235e
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_421ce4
pop esi
mov [ eax ] esi
call sub_412613
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4125a7
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_40f0d5
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_40dda0
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_421e8a
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_423116
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_41235e
mov [ eax ] ebx
call sub_412613
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_421d29
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_422fb0
add esp 0x10
test eax eax
je r-xdata
sub_421f51
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421e8a
add esp 0x18
pop ebp
retn
sub_421f71
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_419186
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_41235e
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_41235e
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_412613
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_421f51
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_4226d0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_40eef0
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_40eef0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_40e7f0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_40eef0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_4231b0
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_4231b0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_4231b0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_4222e7
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421f71
add esp 0x18
pop ebp
retn
sub_422307
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_419186
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_41235e
push 0x16
pop esi
mov [ eax ] esi
call sub_412613
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_40f140
inc eax
push eax
push esi
push ebx
call sub_40dda0
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_40f140
inc eax
push eax
push esi
push ebx
call sub_40dda0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_421ce4
push edi
push 0x30
push ebx
call sub_40e7f0
add esp 0xc
sub_42240a
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_423116
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_41235e
mov [ eax ] esi
call sub_412613
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_41235e
mov [ eax ] esi
call sub_412613
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40daf7
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_422fb0
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_422307
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_4224e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_423116
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_41235e
mov [ eax ] edi
call sub_412613
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40daf7
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_422fb0
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_421d29
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_422307
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_4225d5
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4224e8
add esp 0x18
pop ebp
retn
sub_4225f5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421e8a
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42240a
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421f71
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4224e8
jmp r-xdata
sub_42267d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4225f5
add esp 0x1c
pop ebp
retn
sub_4226a0
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_42328f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_4125a7
sub_4226d0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_4226fd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x103
lea eax [ ebp - 0x10 ]
push eax
push 0x103
push [ ebp + 0x8 ]
call sub_41c35c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_422753
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4226fd
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x103
pop ebp
retn
sub_422783
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_41c35c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4227d4
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_422783
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_422802
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_41c35c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_422853
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_422802
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_422881
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_41c35c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4228d2
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_422881
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_422900
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_41c35c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_422956
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_422900
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_422986
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_41c35c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4229d7
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_422986
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_422a05
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x10
lea eax [ ebp - 0x10 ]
push eax
push 0x10
push [ ebp + 0x8 ]
call sub_41c35c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_422a56
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_422a05
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x10
pop ebp
retn
sub_422a84
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_41c35c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_422ada
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_422a84
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_422b0a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x157
lea eax [ ebp - 0x10 ]
push eax
push 0x157
push [ ebp + 0x8 ]
call sub_41c35c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_422b60
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_422b0a
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x157
pop ebp
retn
sub_422b90
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x117
lea eax [ ebp - 0x10 ]
push eax
push 0x117
push [ ebp + 0x8 ]
call sub_41c35c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_422be6
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_422b90
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x117
pop ebp
retn
sub_422c16
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419186
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x20
lea eax [ ebp - 0x10 ]
push eax
push 0x20
push [ ebp + 0x8 ]
call sub_41c35c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_422c67
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_422c16
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x20
pop ebp
retn
sub_422cb4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4226fd
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_422cd7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_422753
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_422cf6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422a84
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_422d19
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_422ada
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_422d3a
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_419186
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_424c48
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_423aea
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
sub_422df9
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_419186
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push 0x1
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_424c48
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_42458c
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
sub_422eb9
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_419186
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_424c48
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_42403b
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
sub_422f78
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ rw-data ]
test eax 0xfffffffe
je r-xdata
mov [ rw-data ] eax
call sub_41235e
mov [ eax ] 0x16
call sub_412613
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_422fb0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_41235e
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_41235e
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_412613
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_40f140
inc eax
push eax
push edi
push esi
call sub_40dda0
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_423063
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_423116
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_423063
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_4253f0
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_40f0d5
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4125a7
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
sub_4231b0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_42328f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_42676f
call sub_42676f
mov [ esi ] eax
jmp r-xdata
call sub_41235e
push 0x16
pop esi
mov [ eax ] esi
call sub_412613
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_42676f
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_4232ee
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea ecx [ edx + esi ]
xor eax eax
cmp ecx edx
jb r-xdata
xor eax eax
inc eax
cmp ecx esi
jae r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
pop esi
pop ebp
retn
sub_423312
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
mov edx [ ebp + 0xc ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
sub ecx edx
or edx 0xffffffff
shl edx cl
mov ecx [ ebp + 0x8 ]
not edx
test [ ecx + eax * 4 ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
inc eax
cmp eax 0x3
jl r-xdata
xor eax eax
pop ebp
retn
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_42335b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
mov edx [ ebp + 0xc ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
mov edi [ ebp + 0x8 ]
sub ecx edx
xor edx edx
inc edx
shl edx cl
mov ecx [ edi + eax * 4 ]
xor ebx ebx
lea esi [ ecx + edx ]
cmp esi ecx
jb r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
dec eax
jns r-xdata
mov [ edi + eax * 4 ] esi
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
mov ecx [ edi + eax * 4 ]
lea edx [ ecx + 0x1 ]
xor ebx ebx
cmp edx ecx
jb r-xdata
xor ebx ebx
inc ebx
cmp edx 0x1
jae r-xdata
mov [ edi + eax * 4 ] edx
sub_4233c8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
lea ebx [ edx + eax ]
lea eax [ edi + 0x1 ]
sar ebx 0x5
and eax 0x8000001f
jns r-xdata
mov esi [ ebp + 0x8 ]
push 0x1f
pop ecx
sub ecx eax
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ esi + ebx * 4 ] eax
je r-xdata
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi + ebx * 4 ] eax
inc ebx
cmp ebx ecx
jge r-xdata
or edx 0xffffffff
shl edx cl
mov eax ebx
not edx
test [ esi + eax * 4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
sub ecx ebx
lea edi [ esi + ebx * 4 ]
xor eax eax
[ edi ]
jne r-xdata
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
and [ ebp + 0xc ] 0x0
xor edx edx
sub ecx edi
inc edx
shl edx cl
mov ecx [ esi + eax * 4 ]
lea edi [ ecx + edx ]
cmp edi ecx
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ esi + eax * 4 ] 0x0
jmp r-xdata
mov [ ebp + 0xc ] 0x1
cmp edi edx
jae r-xdata
dec eax
jns r-xdata
mov ecx [ ebp + 0xc ]
mov [ esi + eax * 4 ] edi
jmp r-xdata
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] ecx
mov ecx [ esi + eax * 4 ]
lea edx [ ecx + 0x1 ]
xor edi edi
cmp edx ecx
jb r-xdata
xor edi edi
inc edi
cmp edx 0x1
jae r-xdata
mov [ esi + eax * 4 ] edx
mov ecx edi
sub_4234b4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x3
pop edx
sub ecx eax
push esi
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
pop ebp
retn
sub_4234e4
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_423503
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
and edx 0x1f
sub esp 0xc
add eax edx
mov edx [ ebp + 0xc ]
push esi
sar eax 0x5
and edx 0x8000001f
push edi
jns r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp + 0xc ] 0x0
mov edi [ ebp + 0x8 ]
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
push ebx
not esi
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp + 0xc ]
mov ebx [ edi + ecx * 4 ]
and ebx esi
mov [ ebp - 0xc ] ebx
mov ebx [ edi + ecx * 4 ]
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0xc ]
or ebx [ ebp - 0x8 ]
mov [ edi + ecx * 4 ] ebx
mov ebx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
shl ebx cl
inc [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x3
mov [ ebp - 0x8 ] ebx
jl r-xdata
push 0x2
pop ecx
mov edx ecx
sub edx eax
lea edx [ edi + edx * 4 ]
pop ebx
and [ edi + ecx * 4 ] 0x0
mov esi [ edx ]
mov [ edi + ecx * 4 ] esi
jmp r-xdata
cmp ecx eax
jl r-xdata
pop edi
pop esi
leave
retn
sub edx 0x4
dec ecx
jns r-xdata
sub_42359b
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
and ecx 0x8000
mov [ ebp - 0x3c ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
push ebx
mov ebx [ ebp + 0x10 ]
and edx 0x7fff
sub edx 0x3fff
shl eax 0x10
push esi
push edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
and [ ebp - 0x30 ] 0x0
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax edx
movsd [ edi ] [ esi ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x28 ] eax
jns r-xdata
xor esi esi
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x34 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x34 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
cmp [ ebp + eax * 4 - 0x10 ] esi
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
push 0x1f
pop ecx
sub ecx [ ebx + 0xc ]
mov ebx [ ebx + 0x10 ]
shl esi cl
mov ecx [ ebp - 0x3c ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0x10 ]
cmp ebx 0x40
jne r-xdata
xor eax eax
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0x20 ]
mov edx eax
sub edx [ ebx + 0x8 ]
cmp ecx edx
jge r-xdata
inc [ ebp - 0x20 ]
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
cmp ebx 0x20
jne r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
cmp ecx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x30 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x24 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x24 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
mov ecx [ ebp - 0x38 ]
mov [ ecx ] esi
cmp ecx [ ebx ]
mov ecx [ ebx + 0xc ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx eax
cdq
and edx 0x1f
movsd [ edi ] [ esi ]
lea esi [ edx + eax ]
mov edx ecx
sar esi 0x5
and edx 0x8000001f
jns r-xdata
xor esi esi
mov [ ebp - 0x30 ] 0x1
cmp [ ebp - 0x24 ] edx
jmp r-xdata
mov esi [ ebx + 0x14 ]
add esi [ ebp - 0x20 ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x34 ] eax
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or eax 0xffffffff
mov ecx edx
shl eax cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not eax
dec edx
or edx 0xffffffe0
inc edx
test ecx ecx
je r-xdata
mov [ ebp - 0x30 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx eax
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov edx esi
push 0x2
shl edx 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edx
and [ ebp - 0x30 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x24 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x30 ]
jns r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ ebp + eax * 4 - 0x10 ]
mov ecx eax
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr eax cl
mov ecx [ ebp - 0x20 ]
or eax [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl eax cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] eax
jl r-xdata
mov edx [ ebp - 0x34 ]
mov edi edx
push 0x2
shl edi 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edi
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edx [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edx
jmp r-xdata
cmp edi 0x1
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edi [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp ecx esi
jl r-xdata
mov edi [ ebx + 0x8 ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] eax
jns r-xdata
sub eax 0x4
dec ecx
jns r-xdata
cmp ecx edx
jl r-xdata
sub eax 0x4
dec ecx
jns r-xdata
cmp edx eax
jl r-xdata
mov esi [ ebx + 0x14 ]
add esi [ ebx ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
mov [ ebp - 0x34 ] ecx
test [ ebp + eax * 4 - 0x10 ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x34 ]
or edx 0xffffffff
shl edx cl
push 0x3
pop ecx
and [ ebp + eax * 4 - 0x10 ] edx
inc eax
cmp eax ecx
jge r-xdata
or esi 0xffffffff
shl esi cl
mov edx eax
not esi
test [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov ecx [ ebx + 0xc ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
lea esi [ edx + eax ]
lea edx [ ecx + 0x1 ]
sar esi 0x5
and edx 0x8000001f
jns r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or eax 0xffffffff
mov ecx edx
shl eax cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not eax
dec edx
or edx 0xffffffe0
inc edx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx 0x3
jl r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx eax
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov edx esi
push 0x2
shl edx 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edx
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx edi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
lea esi [ edi + edx ]
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edx [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edx
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp esi edx
jae r-xdata
cmp ecx esi
jl r-xdata
sub eax 0x4
dec ecx
jns r-xdata
dec eax
jns r-xdata
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_423aea
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_42403b
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_42458c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0xa ]
and [ ebp - 0x20 ] 0x0
mov eax edx
and eax 0x7fff
and edx 0x8000
push esi
mov esi [ ecx + 0x6 ]
mov [ ebp - 0x14 ] eax
mov eax edx
mov edx [ ecx + 0x2 ]
movzx ecx [ ecx ]
shl ecx 0x10
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] ecx
test ecx ecx
jns r-xdata
mov ecx 0x7fff
cmp [ ebp - 0x14 ] cx
jne r-xdata
test ecx 0x7fffffff
je r-xdata
or eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ax
mov eax [ ebp - 0x20 ]
mov [ edi ] edx
pop edi
xor ecx ebp
pop esi
call sub_40daf7
leave
retn
mov [ ebp - 0x20 ] 0x1
lea ecx [ edx + 0x1 ]
xor esi esi
cmp ecx edx
jb r-xdata
xor esi esi
inc esi
cmp ecx 0x1
jae r-xdata
mov esi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
and [ ebp - 0x1c ] 0x0
lea ecx [ ebp + ecx * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0xc ] ecx
mov ecx esi
mov [ ebp - 0x1c ] 0x1
cmp esi 0x1
jae r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
dec [ ebp - 0x18 ]
mov [ ecx ] esi
mov ecx [ ebp - 0x1c ]
jns r-xdata
inc [ ebp - 0x14 ]
mov esi 0x80000000
jmp r-xdata
mov edx [ ebp - 0xc ]
sub_424669
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
mov ecx esi
add esi esi
push edi
mov edi [ eax + 0x4 ]
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
pop edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
pop esi
pop ebp
retn
sub_42469c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
mov edi ecx
mov esi edx
shr ecx 0x1
shl esi 0x1f
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr edx 0x1
shr ecx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
pop ebp
retn
sub_4246ce
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
mov ebx [ ebp + 0xc ]
movzx edx [ ebx + 0xa ]
push esi
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x20 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
push edi
movzx esi si
mov edi 0x7fff
mov [ ebp - 0x30 ] esi
cmp cx di
jae r-xdata
xor edx edx
xor ecx ecx
cmp [ ebp - 0x20 ] cx
sete dl
dec edx
and edx 0x80000000
add edx 0x7fff8000
mov [ eax + 0x8 ] edx
cmp dx di
jae r-xdata
mov edi 0xbffd
cmp si di
ja r-xdata
mov edi 0x3fbf
cmp si di
ja r-xdata
mov edi 0x7fffffff
test cx cx
jne r-xdata
xor ecx ecx
xor ecx ecx
inc esi
mov [ ebp - 0x30 ] esi
test [ eax + 0x8 ] edi
jne r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ ebp - 0x1c ] ecx
lea edi [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x5
inc esi
mov [ ebp - 0x30 ] esi
test [ ebx + 0x8 ] edi
jne r-xdata
xor ecx ecx
cmp [ eax + 0x4 ] ecx
jne r-xdata
add edi 0x2
inc [ ebp - 0x1c ]
dec [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
add ebx 0x8
mov [ ebp - 0x24 ] ebx
lea ebx [ eax + ecx ]
cmp [ ebx + 0x4 ] ecx
jne r-xdata
cmp dx cx
jne r-xdata
cmp [ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
add ecx ecx
mov [ ebp - 0x28 ] edx
test edx edx
jle r-xdata
add esi 0xc002
mov edi 0xffff
test si si
jle r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi ecx
jae r-xdata
cmp [ ebx ] ecx
je r-xdata
mov [ eax + 0xa ] cx
jmp r-xdata
add esi edi
test si si
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
sub [ ebp - 0x24 ] 0x2
add ebx 0x2
dec [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x14 ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
mov ecx 0x8000
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov ecx esi
neg ecx
movzx ecx cx
mov [ ebp - 0x14 ] ecx
add esi ecx
test si si
jg r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr ecx 0x1f
add ebx ebx
or ebx ecx
mov ecx [ ebp - 0x8 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add esi edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
test si si
jg r-xdata
mov edx [ ebp - 0x24 ]
movzx edx [ edx ]
movzx ecx [ ebx ]
and [ ebp - 0x14 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea esi [ edx + ecx ]
cmp esi edx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ ebp - 0x30 ]
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec [ ebp - 0x14 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x2c ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov ecx 0x7fff
cmp si cx
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov cx [ ebp - 0xe ]
or esi [ ebp - 0x20 ]
mov [ eax ] cx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x2 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x6 ] ecx
mov [ eax + 0xa ] si
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
cmp [ ebp - 0x6 ] di
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc esi
jmp r-xdata
sub_424949
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx rw-data
sub ecx 0x60
xor edx edx
mov [ ebp - 0x24 ] ecx
cmp [ ebp + 0xc ] edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40daf7
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
neg [ ebp + 0xc ]
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x24 ] ecx
cmp [ ebp + 0xc ] edx
je r-xdata
xor ecx ecx
mov [ eax ] cx
push ebx
push esi
push edi
xor edx edx
cmp [ ebp + 0xc ] edx
jne r-xdata
imul ecx ecx 0xc
add ecx [ ebp - 0x24 ]
mov ebx ecx
mov ecx 0x8000
cmp [ ebx ] cx
jb r-xdata
mov ecx [ ebp + 0xc ]
add [ ebp - 0x24 ] 0x54
sar [ ebp + 0xc ] 0x3
and ecx 0x7
cmp ecx edx
je r-xdata
pop edi
pop esi
pop ebx
movzx ecx [ eax + 0xa ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
movzx edx [ ebx + 0xa ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x30 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea edi [ edx + ecx ]
movzx edi di
mov [ ebp - 0x28 ] edi
cmp cx si
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x1a ]
lea ebx [ ebp - 0x1c ]
xor edx edx
xor ecx ecx
cmp [ ebp - 0x30 ] cx
sete dl
dec edx
and edx 0x80000000
add edx 0x7fff8000
mov [ eax + 0x8 ] edx
cmp dx si
jae r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor ecx ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ eax + 0x8 ] 0x7fffffff
mov [ ebp - 0x28 ] edi
jne r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ ebp - 0x34 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x5
inc edi
test [ ebx + 0x8 ] 0x7fffffff
mov [ ebp - 0x28 ] edi
jne r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
add esi 0x2
inc [ ebp - 0x34 ]
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x0
jg r-xdata
lea edx [ ebx + 0x8 ]
add ecx eax
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] ecx
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ eax ] esi
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x20 ]
add ecx ecx
mov [ ebp - 0x2c ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp edi ecx
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor ecx ecx
mov [ eax + 0xa ] cx
jmp r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x3c ] 0x2
sub [ ebp - 0x40 ] 0x2
dec [ ebp - 0x2c ]
cmp [ ebp - 0x2c ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x44 ] 0x0
mov [ esi - 0x4 ] edi
je r-xdata
mov [ eax + 0x8 ] esi
mov [ eax + 0x4 ] esi
mov [ eax ] esi
jmp r-xdata
mov ecx 0x8000
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov ecx edi
neg ecx
movzx esi cx
add edi esi
test di di
jg r-xdata
mov esi [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
shr ecx 0x1f
mov edx esi
add esi esi
or esi ecx
mov ecx [ ebp - 0x8 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add edi 0xffff
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ecx
test di di
jg r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x40 ]
movzx edx [ edx ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ esi - 0x4 ]
lea edi [ edx + ecx ]
cmp edi edx
jb r-xdata
mov edi [ ebp - 0x28 ]
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec esi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x38 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov ecx 0x7fff
cmp di cx
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x38 ] esi
je r-xdata
mov cx [ ebp - 0xe ]
or edi [ ebp - 0x30 ]
mov [ eax ] cx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x2 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x6 ] ecx
mov [ eax + 0xa ] di
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov edx 0xffff
cmp [ ebp - 0x6 ] dx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc edi
jmp r-xdata
sub_424c48
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_41235e
mov [ eax ] 0x16
call sub_412613
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40daf7
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_4252f4 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_426d96
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_425324
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push edx
xor edx edx
push edx
push edx
push edx
push [ ebp + 0x14 ]
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_424c48
mov edi eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_42458c
add esp 0x28
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
xor ecx ebp
pop esi
call sub_40daf7
leave
retn
or edi 0x2
sub_42537f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
lea esi [ ecx + edx ]
xor ebx ebx
cmp esi ecx
jb r-xdata
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ edi + 0x4 ]
lea esi [ ecx + edx ]
xor ebx ebx
cmp esi ecx
jb r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ecx + 0x1 ]
xor esi esi
cmp edx ecx
jb r-xdata
mov [ eax ] esi
test ebx ebx
je r-xdata
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov ecx [ edi + 0x8 ]
add [ eax + 0x8 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_4253f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40daf7
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_40f0d5
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4125a7
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_40f0d5
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_425ce8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
xor esi esi
cmp [ ebp + 0x8 ] 0x9001f
jne r-xdata
and eax 0xfff7ffff
push eax
push [ ebp + 0x8 ]
push esi
call sub_42328f
add esp 0xc
test eax eax
je r-xdata
cmp eax 0xffffffff
jne r-xdata
pop esi
leave
retn
push esi
push esi
push esi
push esi
push esi
call sub_4125a7
fwait
fnstcw [ ebp - 0x4 ]
movzx ecx [ ebp - 0x4 ]
and ecx 0x1f3d
mov edx 0x23d
cmp cx dx
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
and ecx 0xfec0
cmp ecx 0x1e80
je r-xdata
sub_425d5b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
push ebx
movzx edx cx
push esi
mov ecx edx
mov esi 0xc00
and ecx esi
push edi
mov edi 0x300
mov ebx 0x200
je r-xdata
or eax 0x80000
and edx edi
je r-xdata
cmp ecx 0x400
je r-xdata
or eax 0x20000
cmp edx ebx
jne r-xdata
or eax 0x100
cmp ecx 0x800
je r-xdata
pop ebp
retn
or eax 0x40000
test [ ebp + 0x8 ] 0x1000
pop edi
pop esi
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebx
jmp r-xdata
cmp ecx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_425dfa
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_425e88
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_425ecb
xor eax eax
test dl dl
jns r-xdata
push ebx
mov ebx 0x200
push esi
push edi
test ebx edx
je r-xdata
push 0x10
pop eax
test edx 0x400
je r-xdata
or eax 0x8
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov edi 0x100
test edi edx
je r-xdata
or eax 0x1
mov ecx edx
mov esi 0x6000
and ecx esi
je r-xdata
or eax 0x80000
pop edi
and edx 0x8040
sub edx 0x40
pop esi
pop ebx
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax edi
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
retn
sub edx 0x40
jne r-xdata
or eax ebx
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x1000000
retn
or eax 0x300
jmp r-xdata
sub_425f6b
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_42600b
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_42605a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
fwait
fnstsw [ ebp - 0x4 ]
mov al [ ebp - 0x4 ]
xor edx edx
mov esi 0x80000
test al 0x3f
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test al 0x1
je r-xdata
mov eax edx
stmxcsr [ ebp - 0x8 ]
mov cl [ ebp - 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
or eax edx
jmp r-xdata
test cl 0x1
je r-xdata
test al 0x8
je r-xdata
or edx 0x8
pop esi
leave
retn
test cl 0x4
je r-xdata
push 0x10
pop eax
test al 0x10
je r-xdata
or edx 0x4
test cl 0x8
je r-xdata
or eax 0x8
test al 0x20
je r-xdata
or edx 0x2
test cl 0x10
je r-xdata
or eax 0x4
test al 0x2
je r-xdata
or edx 0x1
test cl 0x20
je r-xdata
or eax 0x2
or edx esi
test cl 0x2
je r-xdata
or eax 0x1
or eax esi
sub_4260ec
mov edi edi
push esi
call sub_4185e8
mov esi [ eax ]
fninit
call sub_4226a0
push 0x1f80
call sub_42703c
pop ecx
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
test [ eax ] 0x10008
je r-xdata
and [ eax + 0x20 ] 0x0
mov [ eax + 0x24 ] 0xffff
sub_426124
call sub_42701e
xor ecx ecx
test al 0x3f
je r-xdata
mov eax ecx
retn
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
or ecx 0x80000
sub_42615f
mov edi edi
push ebp
mov ebp esp
push ecx
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
mov cl [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
leave
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_4261af
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp + 0xc ] 0x308031f
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
xor eax eax
test cl cl
jns r-xdata
push ebx
mov ebx 0x200
push esi
push edi
test ebx ecx
je r-xdata
push 0x10
pop eax
test ecx 0x400
je r-xdata
or eax 0x8
test ecx 0x800
je r-xdata
or eax 0x4
test ecx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi ecx
je r-xdata
or eax 0x1
mov edx ecx
mov edi 0x6000
and edx edi
je r-xdata
or eax 0x80000
mov esi 0x8040
and ecx esi
sub ecx 0x40
je r-xdata
cmp edx 0x2000
je r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax esi
cmp edx 0x4000
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_425f6b
push eax
mov [ ebp - 0x4 ] eax
call sub_42703c
pop ecx
stmxcsr [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
xor eax eax
test dl dl
jns r-xdata
or eax 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or eax ebx
jmp r-xdata
cmp edx edi
jne r-xdata
test ebx edx
je r-xdata
push 0x10
pop eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not edx
and edx eax
or edx ecx
cmp edx eax
je r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or eax 0x8
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov ebx 0x100
test ebx edx
je r-xdata
or eax 0x1
mov ecx edx
and ecx edi
je r-xdata
or eax 0x80000
and edx esi
sub edx 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax ebx
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
jmp r-xdata
sub edx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_426325
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
fwait
fnstsw [ ebp + 0x8 ]
mov al [ ebp + 0x8 ]
xor ecx ecx
test al 0x3f
je r-xdata
pop esi
pop ebp
retn
call sub_426124
mov [ esi ] eax
mov [ edx ] ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
or ecx 0x80000
sub_42637f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
cmp [ rw-data ] 0x0
je r-xdata
mov cl [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov al [ ebp - 0x4 ]
xor edx edx
push esi
mov esi 0x80000
test al 0x3f
je r-xdata
leave
retn
test cl 0x1
je r-xdata
stmxcsr [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffffc0
ldmxcsr [ ebp - 0x8 ]
mov cl [ ebp - 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
test al 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
or eax edx
pop esi
leave
retn
test cl 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x4
je r-xdata
push 0x10
pop eax
test al 0x8
je r-xdata
or edx 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x8
je r-xdata
or eax 0x8
test al 0x10
je r-xdata
or edx 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x10
je r-xdata
or eax 0x4
test al 0x20
je r-xdata
or edx 0x2
test cl 0x2
je r-xdata
or eax 0x1
test cl 0x20
je r-xdata
or eax 0x2
test al 0x2
je r-xdata
or edx 0x1
or eax 0x80000
test cl 0x2
je r-xdata
or eax 0x1
or edx esi
or eax esi
sub_426458
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push ebx
push esi
xor edx edx
push edi
mov edi 0x300
cmp [ ebp + 0x10 ] edx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
test bl 0x1
je r-xdata
pop edi
xor eax eax
pop esi
inc eax
pop ebx
leave
retn
xor esi esi
cmp [ rw-data ] esi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
mov eax [ ebp + 0x14 ]
mov [ eax ] esi
and eax 0x308031f
mov [ ebp - 0x10 ] eax
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
test al al
jns r-xdata
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x1000
je r-xdata
or esi 0x2
movzx eax bx
mov ecx eax
mov esi 0xc00
and ecx esi
je r-xdata
or edx 0x80000
test eax 0x100
je r-xdata
or esi 0x1
and eax edi
je r-xdata
cmp ecx 0x400
je r-xdata
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
or edx 0x20000
cmp eax 0x200
jne r-xdata
or edx 0x100
cmp ecx 0x800
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
not ebx
and ebx edx
or ebx eax
cmp ebx edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp ecx esi
jne r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
call sub_425dfa
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
xor ebx ebx
test dl 0x1
je r-xdata
or edx edi
jmp r-xdata
call sub_425f6b
push eax
mov [ ebp + 0x10 ] eax
call sub_42703c
pop ecx
stmxcsr [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ebx
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test dl 0x8
je r-xdata
or ebx 0x8
test ecx 0x400
je r-xdata
or edx 0x8
test dl 0x10
je r-xdata
or ebx 0x4
test ecx 0x800
je r-xdata
or edx 0x4
test dl 0x20
je r-xdata
or ebx 0x2
test ecx 0x1000
je r-xdata
or edx 0x2
test dl 0x2
je r-xdata
or ebx 0x1
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
movzx ecx dx
mov eax ecx
and eax esi
je r-xdata
or ebx 0x80000
mov eax ecx
and eax edi
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
and ecx ebx
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or ebx 0x20000
cmp ecx 0x200
jne r-xdata
or ebx 0x100
cmp eax 0x800
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or ebx 0x40000
test edx 0x1000
je r-xdata
or ebx 0x10000
jmp r-xdata
or ebx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax edi
jne r-xdata
or ebx edi
jmp r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_42676f
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_425dfa
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_425f6b
push eax
mov [ ebp - 0xc ] eax
call sub_42703c
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_426a81
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
and edi 0xfff7ffff
fwait
fnstcw [ ebp + 0xc ]
mov bx [ ebp + 0xc ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
je r-xdata
or edx 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov eax edi
not eax
mov ecx edi
and ecx [ ebp + 0x8 ]
and eax edx
or eax ecx
mov [ ebp - 0x10 ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_425dfa
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax edx
mov [ ebp - 0x10 ] edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_425f6b
push eax
mov [ ebp - 0x8 ] eax
call sub_42703c
pop ecx
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
xor eax eax
test dl dl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or edx 0x300
jmp r-xdata
test edx 0x200
je r-xdata
push 0x10
pop eax
mov ecx eax
xor ecx [ ebp - 0x10 ]
or eax [ ebp - 0x10 ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or eax 0x8
or eax 0x80000000
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi edx
je r-xdata
or eax 0x1
mov ecx edx
and ecx edi
je r-xdata
or eax 0x80000
and edx ebx
sub edx 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax esi
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
jmp r-xdata
sub edx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_426d96
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
xor ecx ecx
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
ja r-xdata
lea edx [ ebx + 0x1 ]
xor esi esi
cmp edx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov edx [ ebp - 0xc ]
inc edx
mov [ ebp + 0x10 ] edx
mov [ eax + 0x8 ] edx
mov ebx edx
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_426f9b
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and ax [ ebp - 0x4 ]
or ax cx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_426fc6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_42703c
push 0x8
push r--data
call sub_410c90
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_410cd5
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_4270f6
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
call sub_42701e
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
mov esi eax
mov eax [ ebp + 0xc ]
not eax
or eax 0xffff807f
and eax esi
or eax ecx
push eax
call sub_42703c
pop ecx
sub_401000
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40db9f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_401020
mov [ ecx ] r--data
jmp sub_40dbfb
sub_401060
retn
sub_401070
retn
sub_401080
retn
sub_401090
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
retn
sub_4010a0
mov [ eax ] 0x0
retn
sub_4010b0
retn
sub_4010c0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
retn
sub_4010d0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
sub_4010f0
mov ecx [ ecx ]
cmp [ eax ] ecx
je r-xdata
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
sub_401110
retn
sub_401120
test eax eax
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
sub_401130
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
retn
retn
sub_401140
retn
sub_401150
retn
sub_4011a0
push eax
call sub_403dc0
add esp 0x4
retn
sub_4015c0
retn
sub_4015d0
retn
sub_401610
retn
sub_401620
retn
sub_401790
mov [ rw-data ] eax
call sub_4011e0
mov eax 0x1
retn
sub_401900
push esi
mov esi eax
call sub_401b00
mov eax [ esi ]
push eax
call sub_40e101
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_401920
mov edx [ ecx + 0xc ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
retn
sub_401940
mov ecx [ edx + 0x10 ]
add ecx [ edx + 0xc ]
mov edx [ edx ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
retn
j_sub_401b00
jmp sub_401b00
sub_401a10
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_40e101
add esp 0x4
sub_401a40
mov eax [ eax ]
retn
sub_401ae0
mov eax ecx
retn
sub_401af0
mov eax ecx
retn 0x4
sub_401b70
mov eax [ esi ]
push eax
call sub_40e101
add esp 0x4
mov [ esi ] 0x0
retn
sub_401be0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401c00
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_40e101
add esp 0x4
sub_401c30
retn
sub_401c40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_40e101
add esp 0x4
pop ebp
retn 0x8
sub_401c60
xor eax eax
cmp [ ecx + 0x10 ] eax
sete al
retn
sub_401c70
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
retn
dec eax
mov [ ecx + 0x10 ] eax
jne r-xdata
mov [ ecx + 0xc ] 0x0
sub_401c90
push eax
call sub_40e101
pop ecx
retn
sub_401ca0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401d00
retn
sub_401d10
push eax
call sub_40e101
pop ecx
retn
sub_401d20
test eax eax
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
sub_401d80
or eax 0xffffffff
retn
sub_401fa0
retn
sub_401fb0
retn
sub_401fc0
retn
sub_401fd0
retn
sub_401fe0
retn
sub_402040
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_40dca7
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402060
retn
sub_4020e0
retn
sub_4020f0
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_402100
retn
sub_402150
retn
sub_4021d9
mov esi [ ebp + 0x8 ]
call sub_401b00
xor ecx ecx
push ecx
push ecx
call sub_40e86a
int3
sub_4021f0
retn
sub_40228c
mov esi [ ebp + 0x8 ]
call sub_401b00
xor ecx ecx
push ecx
push ecx
call sub_40e86a
int3
sub_402570
retn
sub_4025f1
mov esi [ ebp + 0x8 ]
call sub_401c00
push 0x0
push 0x0
call sub_40e86a
int3
sub_402610
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_402620
retn
sub_402630
retn
sub_402640
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_402650
retn
sub_402660
retn
sub_402870
mov ecx [ eax + 0x8 ]
mov eax [ edx + 0x8 ]
sub eax ecx
retn
sub_4028c0
mov edx [ ecx ]
mov [ eax ] edx
retn
sub_4028d0
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_402aa0
dec [ eax + 0x8 ]
retn
sub_402ab0
add [ eax + 0x8 ] ecx
retn
sub_402ac0
retn
sub_402ad0
dec [ eax + 0x8 ]
retn
sub_402ae0
mov [ eax ] ecx
retn
sub_402af0
or eax 0xffffffff
retn
sub_402b00
push r--data
call sub_421688
sub_402ba0
dec [ eax + 0x8 ]
retn
sub_402bb0
mov [ eax ] ecx
retn
sub_402c10
mov eax [ eax + 0x8 ]
cmp [ ecx + 0x8 ] eax
sete al
retn
sub_402c20
mov eax [ eax + 0x8 ]
xor ecx ecx
cmp [ edx + 0x8 ] eax
setne al
retn
sub_402da0
retn
sub_402db0
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_402df0
test ecx ecx
je r-xdata
retn
push edi
xor eax eax
mov edi edx
[ edi ]
pop edi
sub_402e00
retn
sub_402e70
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_402e80
mov ecx [ eax + 0x8 ]
xor eax eax
cmp ecx [ edx + 0x8 ]
setne al
retn
sub_402e90
mov ecx [ eax + 0x8 ]
xor eax eax
cmp ecx [ edx + 0x8 ]
sete al
retn
sub_403200
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax ecx
pop ebp
retn
sub_403210
add [ eax + 0x8 ] ecx
retn
sub_4033d0
retn
sub_4033e0
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_403420
xor eax eax
retn
sub_403430
test ecx ecx
je r-xdata
retn
push edi
xor eax eax
mov edi edx
[ edi ]
pop edi
sub_403440
retn
sub_403450
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_403460
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x4 ] ecx
retn
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x4 ] ecx
retn
sub_4034b0
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
retn
sub_4034c0
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
retn
sub_4034d0
or eax 0xffffffff
retn
sub_403510
push r--data
call sub_421688
sub_403520
retn
sub_403530
inc [ eax + 0x4 ]
retn
sub_403540
dec [ eax + 0x4 ]
retn
sub_403550
mov ecx [ eax + 0x4 ]
xor eax eax
cmp ecx [ edx + 0x4 ]
setne al
retn
sub_403560
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
retn
sub_403570
inc [ eax + 0x4 ]
retn
sub_403580
dec [ eax + 0x4 ]
retn
sub_403590
mov ecx [ eax + 0x4 ]
xor eax eax
cmp ecx [ edx + 0x4 ]
sete al
retn
sub_4035a0
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
retn
sub_403610
xor eax eax
retn
sub_403620
xor eax eax
retn
sub_403760
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax edx
add [ ecx ] eax
pop ebp
retn
sub_403770
add [ eax + 0x8 ] ecx
retn
sub_403780
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax edx
add [ ecx ] eax
pop ebp
retn
sub_403870
test eax eax
je r-xdata
retn
push esi
mov esi [ edx ]
mov [ ecx ] esi
add ecx 0x4
dec eax
jne r-xdata
pop esi
sub_403890
mov ecx [ eax + 0x8 ]
mov eax [ edx + 0x8 ]
sub eax ecx
retn
sub_4038d0
push ebp
mov ebp esp
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
add ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_4038f0
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
sub eax ecx
retn
sub_403900
add [ eax + 0x4 ] ecx
retn
sub_403940
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
sub eax ecx
retn
sub_403950
add [ eax + 0x4 ] ecx
retn
sub_403960
mov dl [ ecx ]
push ebx
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
pop ebx
retn
sub_403970
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax edx
add [ ecx ] eax
pop ebp
retn
sub_403a00
retn
sub_403a10
retn
sub_403a20
push ebp
mov ebp esp
push eax
mov eax [ ebp + 0x8 ]
call sub_403b40
add esp 0x4
pop ebp
retn
sub_403a40
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
pop ebp
retn
sub_403a50
add [ eax ] ecx
retn
sub_403a60
retn
sub_403a70
xor eax eax
retn
sub_403aa0
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_403b25
push 0x0
push 0x0
call sub_40e86a
int3
sub_403c10
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
add [ ecx ] eax
pop ebp
retn
sub_403c20
add [ eax ] ecx
retn
sub_403c30
inc [ eax + 0x8 ]
retn
sub_403c40
inc [ eax + 0x8 ]
retn
sub_403c50
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_403c60
mov dl [ ecx ]
push ebx
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
pop ebx
retn
sub_403c70
retn
sub_403c80
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
SystemTimeToFileTime
jmp [ SystemTimeToFileTime@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
GetSystemTime
jmp [ GetSystemTime@IAT ]
DialogBoxParamA
jmp [ DialogBoxParamA@IAT ]
LoadCursorA
jmp [ LoadCursorA@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
LoadAcceleratorsA
jmp [ LoadAcceleratorsA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
TranslateAcceleratorA
jmp [ TranslateAcceleratorA@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RegisterClassExA
jmp [ RegisterClassExA@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
sub_403d20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
pop ebp
retn
sub_403d40
push ebp
mov ebp esp
pop ebp
jmp sub_40e480
sub_403d50
push ebp
mov ebp esp
pop ebp
jmp sub_40dda0
sub_403d60
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
movsx ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
call sub_40e7f0
add esp 0xc
pop ebp
retn
sub_403d80
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov cl [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cl
pop ebp
retn
sub_403d90
push ebp
mov ebp esp
mov cl [ ebp + 0xc ]
xor al al
pop ebp
retn
inc al
cmp al 0x40
jl r-xdata
cmp al cl
je r-xdata
sub_403db0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax eax
pop ebp
retn
sub_403dc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x6464626d
sete al
pop ebp
retn
sub_403fe0
mov eax [ ecx + 0x10 ]
retn
sub_403ff0
mov eax [ ecx + 0x10 ]
retn
sub_404000
mov eax ecx
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_404010
mov eax ecx
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_404020
retn
sub_404030
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_404080
push ebp
mov ebp esp
cmp [ ecx + 0x14 ] 0x10
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x10 ] eax
jb r-xdata
mov [ ecx + eax ] 0x0
pop ebp
retn 0x4
mov ecx [ ecx ]
sub_4040e0
push r--data
call sub_421688
sub_4040f0
push r--data
call sub_4216d5
sub_404100
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_404110
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_404120
mov al 0x1
retn
sub_404130
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x6464626d
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
pop ebp
retn
sub_404170
mov eax ecx
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_404180
mov eax ecx
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_4041e0
mov eax ecx
retn 0x4
sub_404280
mov eax 0xfffffffe
retn
sub_404290
xor al al
retn
sub_4042a0
mov eax ecx
mov [ eax + 0x14 ] 0xf
mov [ eax + 0x10 ] 0x0
mov [ eax ] 0x0
retn
sub_4048a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xffffffff
push 0x0
push eax
call sub_404590
pop ebp
retn 0x4
sub_404960
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push 0x1
call sub_4044e0
pop ebp
retn 0x4
sub_404980
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xffffffff
push 0x0
push eax
call sub_4047b0
pop ebp
retn 0x4
sub_4049a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xffffffff
push 0x0
push eax
call sub_404590
pop ebp
retn 0x4
sub_4049c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xffffffff
push 0x0
push eax
call sub_4047b0
pop ebp
retn 0x4
sub_405df0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
pop ebp
retn
sub_405fd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] 0xd
mov [ eax + 0x4 ] sub_405df0
mov [ eax + 0x8 ] sub_405e10
mov [ eax + 0xc ] sub_405eb0
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_406880
xor ecx ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x20 ] ecx
retn
sub_4068c0
mov ecx [ esi + 0x20 ]
mov edx [ eax + 0x4 ]
push ecx
push eax
call edx
add esp 0x8
mov [ esi + 0x20 ] 0x0
retn
sub_406a00
push esi
push edi
mov esi eax
mov edi 0x5
lea esp [ esp ]
call sub_406950
dec edi
jne r-xdata
pop edi
pop esi
retn
sub_407240
test ecx ecx
je r-xdata
retn
add [ eax + 0x31734 ] ecx
mov edx [ eax + 0x14 ]
push ecx
mov ecx [ eax + 0x18 ]
push ecx
call edx
add esp 0x8
sub_409f00
mov [ eax + 0x3bb0c ] sub_406240
mov [ eax + 0x3bb10 ] ecx
mov [ eax + 0x3bb14 ] edx
retn
sub_409f60
retn
sub_409fb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ eax + 0x8 ]
push ecx
call edx
add esp 0x4
pop ebp
retn
sub_40a360
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
pop ebp
retn
sub_40a560
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x6
mov [ eax + 0x4 ] sub_40a360
mov [ eax + 0x8 ] sub_40a380
mov [ eax + 0xc ] sub_40a3d0
mov [ eax + 0x10 ] 0xc
mov [ eax + 0x14 ] sub_40a410
mov [ eax + 0x18 ] sub_40a4a0
pop ebp
retn
sub_40a680
push edx
mov edx ecx
or ecx 0xffffffff
call sub_40a650
not eax
retn
sub_40c0c0
mov ecx [ esi + 0x14 ]
mov edx [ eax + 0x4 ]
push ecx
push eax
call edx
add esp 0x8
mov [ esi + 0x14 ] 0x0
retn
sub_40c460
cmp [ esi + 0x4c ] 0x0
jne r-xdata
retn
mov ecx [ esi + 0x30 ]
mov edx [ eax + 0x4 ]
push ecx
push eax
call edx
add esp 0x8
mov [ esi + 0x30 ] 0x0
sub_40c4e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_40c4f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov al [ edx + ecx ]
pop ebp
retn
sub_40c500
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x4 ]
pop ebp
retn
sub_40c510
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub [ eax + 0x8 ] ecx
sub [ eax + 0x4 ] ecx
sub [ eax + 0xc ] ecx
pop ebp
retn
sub_40c5e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx [ eax + 0x30 ]
sub ecx [ eax ]
cmp [ eax + 0x44 ] ecx
sbb eax eax
inc eax
pop ebp
retn
sub_40c660
xor ecx ecx
mov [ eax + 0x2c ] 0x20
mov [ eax + 0x50 ] 0x1
mov [ eax + 0x48 ] 0x4
mov [ eax + 0x4c ] ecx
mov [ eax + 0x54 ] ecx
retn
sub_40c760
mov ecx [ esi + 0x20 ]
mov edx [ eax + 0x4 ]
push ecx
push eax
call edx
add esp 0x8
mov [ esi + 0x20 ] 0x0
retn
sub_40cac0
mov eax [ ecx + 0x4 ]
sub eax [ ecx + 0x58 ]
dec eax
and eax 0xfffffc00
retn
sub_40cf20
mov ecx 0x1
add [ eax + 0x14 ] ecx
add [ eax ] ecx
add [ eax + 0x4 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
retn
jmp sub_40cb50
sub_40db06
mov eax ecx
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
retn
sub_40db17
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_40db34
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_40db81
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_40ede0
pop ecx
sub_40dbfb
mov [ ecx ] r--data
jmp sub_40db81
sub_40dc24
mov [ ecx ] r--data
jmp sub_40db81
sub_40dc4d
mov [ ecx ] r--data
jmp sub_40db81
sub_40dc58
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40dc2f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40dc75
mov [ ecx ] r--data
jmp sub_40db81
sub_40dcf3
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40dca7
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40dd37
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40dca7
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40dd7b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40dd37
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40e101
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40ede0
sub_40e10c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_40f36f
pop ecx
pop ecx
pop ebp
retn 0x4
sub_40e120
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_40f2ff
pop ecx
retn
sub_40e151
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_40f504
pop ecx
pop ecx
pop ebp
retn 0x4
sub_40e167
push ecx
call sub_40f461
pop ecx
retn
sub_40e1d4
lea eax [ ecx + 0x8 ]
retn
sub_40e1d8
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_40e1e3
mov eax ecx
retn 0x4
sub_40e42d
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_40fea2
pop ecx
pop ecx
retn
sub_40e441
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40fc41
push eax
call sub_40fc1c
sub_40e45b
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_410cd5
retn
_start
call sub_410eaf
jmp sub_40e2fe
sub_40e8e8
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40e8ef
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40e8f6
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40e9f3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
push [ eax + 0x28 ]
push 0x0
push [ eax + 0x18 ]
call sub_411102
add esp 0x10
pop ebp
retn 0x4
sub_40f2ce
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_40f366
push 0xe
call sub_4126fd
pop ecx
retn
sub_40f458
push 0xe
call sub_4126fd
pop ecx
retn
sub_40f4c8
push 0xe
call sub_4126fd
pop ecx
retn
sub_40f607
push 0xe
call sub_4126fd
pop ecx
retn
sub_40f65a
push 0xe
call sub_4126fd
pop ecx
retn
sub_40f815
call sub_40f952
retn
sub_40f81b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40f7df
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_40f832
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40f878
push 0x0
call sub_40f841
pop ecx
retn
sub_40f881
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_40f8f8
push sub_40f8b6
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40f931
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40f906
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_40f949
push 0x8
call sub_4127ee
pop ecx
retn
sub_40f952
push 0x8
call sub_4126fd
pop ecx
retn
sub_40fbf1
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_4126fd
pop ecx
sub_40fc06
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40fac6
add esp 0xc
pop ebp
retn
sub_40fc1c
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_40fac6
add esp 0xc
pop ebp
retn
sub_40fc32
push 0x1
push 0x0
push 0x0
call sub_40fac6
add esp 0xc
retn
sub_40fc41
push 0x1
push 0x1
push 0x0
call sub_40fac6
add esp 0xc
retn
sub_40fc50
mov edi edi
push ebp
mov ebp esp
call sub_40fe43
push [ ebp + 0x8 ]
call sub_40fc94
pop ecx
push 0xff
call sub_40fc1c
int3
sub_410147
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_410726
push 0x0
call [ EncodePointer@IAT ]
retn
sub_41072f
call [ TlsAlloc@IAT ]
retn 0x4
sub_410738
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_410752
mov eax [ rw-data ]
retn
sub_41078c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_410888
push 0xd
call sub_4126fd
pop ecx
retn
sub_410891
push 0xc
call sub_4126fd
pop ecx
retn
sub_410a47
push 0xd
call sub_4126fd
pop ecx
retn
sub_410a53
push 0xc
call sub_4126fd
pop ecx
retn
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
sub_410c51
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_410c6f
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
sub_410c83
mov eax [ rw-data ]
retn
sub_410cd5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_410cf0
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
jmp sub_40daf7
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40daf7
sub_411022
mov [ ecx ] r--data
jmp sub_40dbfb
sub_411180
push [ ebp - 0x14 ]
call sub_4110b3
pop ecx
retn
sub_4111c4
call sub_410913
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_410913
dec [ eax + 0x90 ]
sub_411266
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_41126f
mov esp [ ebp - 0x18 ]
call sub_41222c
sub_4112a1
call sub_410913
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_4114f7
push 0x10
pop eax
retn
sub_4114fb
push 0x8
push r--data
call sub_410c90
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410cd5
retn
sub_411513
push [ ebp - 0x14 ]
call sub_4110b3
pop ecx
retn
sub_41151d
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410cd5
retn
sub_41152d
push 0x8
push r--data
call sub_410c90
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410cd5
retn
sub_411546
push [ ebp - 0x14 ]
call sub_4110b3
pop ecx
retn
sub_411550
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410cd5
retn
sub_411560
push 0x8
push r--data
call sub_410c90
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410cd5
retn
sub_411578
push [ ebp - 0x14 ]
call sub_4110b3
pop ecx
retn
sub_411582
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410cd5
retn
sub_4115b3
push [ ebp - 0x14 ]
call sub_4110b3
pop ecx
retn
sub_4115bd
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410cd5
retn
sub_411643
push 0x4
mov eax sub_42715a
call sub_419f69
call sub_410913
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_412265
call sub_412278
sub_4117d4
mov eax [ ebp - 0x14 ]
call sub_4111de
retn
sub_411a4b
xor eax eax
inc eax
retn
sub_411a4f
mov esp [ ebp - 0x18 ]
call sub_41222c
sub_411ae4
xor eax eax
inc eax
retn
sub_411ae8
mov esp [ ebp - 0x18 ]
call sub_41222c
sub_412129
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40dca7
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41222c
push 0x8
push r--data
call sub_410c90
call sub_410913
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_41a076
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41224c
xor eax eax
inc eax
retn
sub_412265
call sub_410913
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_41222c
call eax
sub_412278
push 0x8
push r--data
call sub_410c90
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
call sub_41222c
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41229c
xor eax eax
inc eax
retn
sub_4122b0
push sub_41222c
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_412371
call sub_41089a
test eax eax
jne r-xdata
add eax 0xc
retn
mov eax rw-data
retn
sub_41243b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41259a
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_4125cc
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4125a7
int3
sub_412651
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4125e6
sub_4126fd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_412714
push [ esp + 0x4 ]
push 0x0
call [ FatalAppExitA@IAT ]
push 0xff
call sub_40f931
sub_4127e5
push 0xa
call sub_4126fd
pop ecx
retn
sub_412821
mov eax ecx
and [ eax ] 0x0
retn
sub_412db4
mov eax [ rw-data ]
not eax
and eax 0x1
retn
sub_412dbf
mov eax [ rw-data ]
shr eax 0x1
not eax
and eax 0x1
retn
sub_412dcc
mov eax [ rw-data ]
shr eax 0x11
not eax
and eax 0x1
retn
sub_412dda
mov eax [ rw-data ]
shr eax 0x2
not eax
and eax 0x1
retn
sub_412de8
mov eax [ rw-data ]
shr eax 0x3
not eax
and eax 0x1
retn
sub_412df6
mov eax [ rw-data ]
shr eax 0x4
not eax
and eax 0x1
retn
sub_412e04
mov eax [ rw-data ]
and eax 0x60
xor ecx ecx
cmp al 0x60
setne cl
mov eax ecx
retn
sub_412e16
mov eax [ rw-data ]
shr eax 0x7
not eax
and eax 0x1
retn
sub_412e24
mov eax [ rw-data ]
shr eax 0x8
not eax
and eax 0x1
retn
sub_412e32
mov eax [ rw-data ]
shr eax 0x9
not eax
and eax 0x1
retn
sub_412e40
mov eax [ rw-data ]
and eax 0x1000
retn
sub_412e4b
mov eax [ rw-data ]
and eax 0x2000
retn
sub_412e56
mov eax [ rw-data ]
and eax 0x4000
retn
sub_412e61
mov eax [ rw-data ]
shr eax 0xf
not eax
and eax 0x1
retn
sub_412e6f
mov eax [ rw-data ]
and eax 0x10000
retn
sub_412e7a
mov eax [ rw-data ]
shr eax 0x12
not eax
and eax 0x1
retn
sub_412f2f
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
retn
sub_412f40
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_412f58
xor eax eax
cmp [ ecx + 0x4 ] 0x1
setle al
retn
sub_412f62
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_412f6a
movsx eax [ ecx + 0x4 ]
retn
sub_412f6f
mov eax ecx
or [ eax + 0x4 ] 0x100
retn
sub_412f79
mov eax [ ecx + 0x4 ]
shr eax 0x8
and eax 0x1
retn
sub_412f83
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x200
je r-xdata
inc eax
sub_412f94
cmp [ ecx ] 0x0
je r-xdata
retn
or [ ecx + 0x4 ] 0x200
sub_412fa1
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x400
je r-xdata
inc eax
sub_412fb2
or [ ecx + 0x4 ] 0x800
retn
sub_412fba
mov eax [ ecx + 0x4 ]
shr eax 0xb
and eax 0x1
retn
sub_412fc4
mov eax [ ecx + 0x4 ]
shr eax 0xc
and eax 0x1
retn
sub_412fce
or [ ecx + 0x4 ] 0x1000
retn
sub_412fd6
mov eax [ ecx + 0x4 ]
shr eax 0xd
and eax 0x1
retn
sub_412fe0
or [ ecx + 0x4 ] 0x2000
retn
sub_412fe8
mov eax [ ecx + 0x4 ]
shr eax 0xe
and eax 0x1
retn
sub_412ff2
or [ ecx + 0x4 ] 0x4000
retn
sub_412ffa
mov eax [ ecx + 0x4 ]
shr eax 0xf
and eax 0x1
retn
sub_413004
or [ ecx + 0x4 ] 0x8000
retn
sub_41300c
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
jmp [ eax ]
xor eax eax
retn
sub_413027
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_41305e
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_413076
xor eax eax
cmp [ ecx ] 0x9
sete al
retn
sub_41307f
mov eax ecx
or [ eax ] 0xffffffff
retn
sub_413085
mov eax ecx
mov [ eax ] r--data
retn
sub_41308e
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov cl [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_4130a5
xor eax eax
inc eax
retn
sub_4130a9
mov al [ ecx + 0x4 ]
retn
sub_4130ad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop ebp
retn 0x8
mov cl [ ecx + 0x4 ]
mov [ eax ] cl
inc eax
sub_4130ee
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx ]
sub_413161
mov eax [ ecx + 0x8 ]
retn
sub_413165
cmp [ ecx + 0x4 ] 0x1
setne al
dec al
and al 0x20
retn
sub_4131f7
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
or [ eax + 0xc ] 0xffffffff
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x8
sub_41328b
xor eax eax
cmp [ ecx ] al
je r-xdata
retn
inc eax
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
sub_4133bb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx rw-data
push [ ebp + 0x8 ]
call sub_412ea7
pop ebp
retn
sub_4136bc
mov eax [ ecx + 0x8 ]
retn
sub_4136c0
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
xor al al
retn
mov ecx [ ecx + 0x4 ]
mov al [ ecx + eax - 0x1 ]
retn
sub_4136d2
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4133d2
add esp 0x10
pop ebp
retn 0x8
sub_413749
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_413348
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_414739
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_413fa2
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41474f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_413fa2
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_414765
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_413fa2
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_414db6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41477b
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_415a00
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41591f
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_41799e
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4178a5
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4179be
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4178a5
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4179de
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4178a5
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_417a8d
push 0x5
call sub_4126fd
pop ecx
retn
sub_417b27
push 0x5
call sub_4126fd
pop ecx
retn
sub_4182c6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_4181f0
add esp 0xc
pop ebp
retn 0x4
sub_4182f9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_41a1e5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_41832b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_4181f0
add esp 0xc
pop ebp
retn 0x8
sub_418368
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
sub_4184e1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_41857b
push edi
call sub_4126fd
pop ecx
retn
sub_4185d2
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_4185df
call sub_410913
add eax 0x64
retn
sub_4185e8
call sub_410913
add eax 0x60
retn
sub_4187f6
push 0x0
call sub_4126fd
pop ecx
retn
sub_418998
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_4126fd
pop ecx
sub_4189d4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_418c7f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_418ddb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_419177
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41920d
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
mov eax [ ecx + 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41921b
mov eax ecx
retn
sub_419271
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41921e
add esp 0x10
pop ebp
retn
sub_41928a
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_41921e
add esp 0x10
pop ebp
retn
sub_4192a2
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41921e
add esp 0x10
pop ebp
retn
sub_4192bb
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_41921e
add esp 0x10
pop ebp
retn
sub_4192d3
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41921e
add esp 0x10
pop ebp
retn
sub_4192ec
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_41921e
add esp 0x10
pop ebp
retn
sub_419304
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41921e
add esp 0x10
pop ebp
retn
sub_419320
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push 0x0
call sub_41921e
add esp 0x10
pop ebp
retn
sub_41933b
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41921e
add esp 0x10
pop ebp
retn
sub_419357
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push 0x0
call sub_41921e
add esp 0x10
pop ebp
retn
sub_419372
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41921e
add esp 0x10
pop ebp
retn
sub_41938e
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push 0x0
call sub_41921e
add esp 0x10
pop ebp
retn
sub_4193a9
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41921e
add esp 0x10
pop ebp
retn
sub_4193c5
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push 0x0
call sub_41921e
add esp 0x10
pop ebp
retn
sub_4193e0
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41921e
add esp 0x10
pop ebp
retn
sub_4193f9
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push 0x0
call sub_41921e
add esp 0x10
pop ebp
retn
sub_419411
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41921e
add esp 0x10
pop ebp
retn
sub_41942a
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_41921e
add esp 0x10
pop ebp
retn
sub_419442
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41921e
add esp 0x10
pop ebp
retn
sub_41945b
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_41921e
add esp 0x10
pop ebp
retn
sub_4194c8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_419473
pop ecx
pop ecx
pop ebp
retn
sub_419799
push 0xd
call sub_4126fd
pop ecx
retn
sub_419ba6
push 0xd
call sub_4126fd
pop ecx
retn
sub_419bdf
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_419a45
pop ecx
mov [ rw-data ] 0x1
sub_419f2a
push 0xc
call sub_4126fd
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_41a00e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41a022
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40daf7
jmp sub_41a00e
sub_41a031
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40daf7
jmp sub_41a00e
sub_41a040
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_41a052
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_41a064
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_41a1b9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_41a0f0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_41a204
call eax
retn
sub_41a207
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_40fc94
push 0x1
push 0x0
call sub_41a0a9
add esp 0xc
jmp sub_41a076
call eax
sub_41a258
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_41a305
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_41bf6d
add esp 0xc
pop ebp
retn
sub_41a31b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_41bf98
add esp 0x10
pop ebp
retn
sub_41a334
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41a305
sub_41a33f
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41a31b
sub_41a34a
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_41c29b
add esp 0xc
pop ebp
retn
sub_41a360
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_41c2c6
add esp 0x10
pop ebp
retn
sub_41a51e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
add eax 0x8
sub_41a668
push 0x2
call sub_40fc50
sub_41bced
call sub_410913
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_419ebd
sub_41bd13
mov eax [ rw-data ]
retn
sub_41bd19
call sub_410913
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_419ebd
sub_41bf98
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_41bd42
add esp 0x14
pop ebp
retn
sub_41bfe1
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_41bd42
add esp 0x14
pop ebp
retn
sub_41c2c6
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_41bffe
add esp 0x14
pop ebp
retn
sub_41c30f
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_41bffe
add esp 0x14
pop ebp
retn
sub_41c330
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_41d3e0
sub_41c346
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_41d3e0
sub_41c446
mov eax [ rw-data ]
retn
sub_41c44c
mov eax rw-data
retn
sub_41c4d6
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
retn
sub_41c5ac
push 0xd
call sub_4126fd
pop ecx
retn
sub_41c5b8
push 0xc
call sub_4126fd
pop ecx
retn
sub_41c5c1
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41c4ff
sub_41c666
push 0xc
call sub_4126fd
pop ecx
retn
sub_41c672
push 0xd
call sub_4126fd
pop ecx
retn
j_sub_41c5cc
jmp sub_41c5cc
sub_41c680
xor eax eax
retn
sub_41d21f
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41d12a
sub_41d35c
push 0xc
call sub_4126fd
pop ecx
retn
sub_41d368
push 0xc
call sub_4126fd
pop ecx
retn
sub_41d399
and [ esi + 0x70 ] 0xffffffef
retn
sub_41d443
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41d40b
pop ecx
pop ecx
pop ebp
retn
sub_41d456
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d46c
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d482
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d495
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d4a8
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d4bb
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d4ce
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d4e1
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d4f4
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d50a
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d520
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d533
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d546
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d559
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d56c
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d582
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d598
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d5ae
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d5c4
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d5da
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d5f0
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d603
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_41d616
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_41da69
call sub_410913
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_419ebd
sub_41da92
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_41da69
sub_41daae
call sub_410913
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_419ebd
sub_41dad4
call sub_410913
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_419ebd
sub_41dafa
call sub_410913
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_419ebd
sub_41db20
xor eax eax
retn
sub_41dc38
or [ esi + 0x8 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
retn
sub_41e394
test eax eax
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_41e3a4
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_420ea5
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_420e50
sub_420eb0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420e50
pop ecx
pop ecx
pop ebp
retn
sub_421244
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_421139
pop ebp
retn
sub_42139e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
pop ebp
retn
j_sub_40dbfb#4
jmp sub_40dbfb
j_sub_40dbfb#2
jmp sub_40dbfb
j_sub_40dbfb
jmp sub_40dbfb
j_sub_40dbfb#3
jmp sub_40dbfb
j_sub_40dbfb#6
jmp sub_40dbfb
j_sub_40dbfb#5
jmp sub_40dbfb
sub_42166b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40dca7
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4216b8
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40dca7
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421705
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40dca7
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421752
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40dca7
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421865
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40dca7
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421882
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40dca7
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
HeapSetInformation
jmp [ HeapSetInformation@IAT ]
GetStartupInfoW
jmp [ GetStartupInfoW@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
EncodePointer
jmp [ EncodePointer@IAT ]
DecodePointer
jmp [ DecodePointer@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
FatalAppExitA
jmp [ FatalAppExitA@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
Sleep
jmp [ Sleep@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
LoadLibraryW
jmp [ LoadLibraryW@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
EnumSystemLocalesA
jmp [ EnumSystemLocalesA@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
sub_421a26
mov eax sub_42267d
mov [ rw-data ] eax
mov [ rw-data ] sub_421d16
mov [ rw-data ] sub_421cca
mov [ rw-data ] sub_421d03
mov [ rw-data ] sub_421c6c
mov [ rw-data ] eax
mov [ rw-data ] sub_4225f5
mov [ rw-data ] sub_421c88
mov [ rw-data ] sub_421bea
mov [ rw-data ] sub_421b76
retn
sub_421a86
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
sub_421a9b
mov edi edi
push ebp
mov ebp esp
call sub_421a26
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_4226a0
sub_421b6b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4226d0
sub_421cca
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421c88
add esp 0x10
pop ebp
retn
sub_421d03
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_421b76
pop ecx
pop ecx
pop ebp
retn
sub_421d16
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_421bea
pop ecx
pop ecx
pop ebp
retn
sub_4224cb
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42240a
add esp 0x14
pop ebp
retn
sub_422c95
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
sbb eax eax
neg eax
pop ebp
retn
sub_422ca7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x7f
pop ebp
retn
sub_422de2
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422d3a
add esp 0xc
pop ebp
retn
sub_422ea2
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422df9
add esp 0xc
pop ebp
retn
sub_422f61
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422eb9
add esp 0xc
pop ebp
retn
sub_422faa
mov eax [ rw-data ]
retn
sub_4234d3
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
pop ebp
retn
sub_42604e
push 0x1f80
call sub_42703c
pop ecx
retn
sub_426f7a
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_426f8a
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_42701e
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
stmxcsr [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
sub_427069
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_4270ae
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
je r-xdata
leave
retn
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
sub_4270cb
xor eax eax
cmp [ rw-data ] eax
je r-xdata
retn
call sub_42701e
and eax 0x3f
sub_4270de
xor eax eax
cmp [ rw-data ] eax
je r-xdata
retn
call sub_42701e
and eax 0x3f
jmp sub_4270ae
sub_42712d
mov edi edi
push ebp
mov ebp esp
call sub_42701e
mov ecx [ ebp + 0x8 ]
and ecx 0x3f
or eax ecx
push eax
call sub_42703c
pop ecx
pop ebp
retn
sub_427150
mov eax r--data
jmp sub_40e987
sub_42715a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40daf7
mov eax r--data
jmp sub_40e987
sub_427180
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40daf7
mov eax r--data
jmp sub_40e987
sub_4271a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40daf7
mov eax r--data
jmp sub_40e987
sub_4271c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40daf7
mov eax r--data
jmp sub_40e987
sub_4271e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_40daf7
mov eax r--data
jmp sub_40e987
sub_427200
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_40daf7
mov eax r--data
jmp sub_40e987
sub_427220
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_40daf7
mov eax r--data
jmp sub_40e987
sub_427240
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_40daf7
mov eax r--data
jmp sub_40e987
sub_42725b
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_40dbfb
